

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 12 23:11:33 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   111                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   112                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   113                           	dabs	1,0xD00,48,_BDT
   114                           	dabs	1,0xD38,8,_CtrlTrfData
   115                           	dabs	1,0xD30,8,_SetupPkt
   116  0000                     
   117                           	psect	idataBANK0
   118  013916                     __pidataBANK0:
   119                           	opt stack 0
   120                           
   121                           ;initializer for I2C_LCD_SetCursor@F8620
   122  013916  00                 	db	0
   123  013917  40                 	db	64
   124                           
   125                           ;initializer for I2C_LCD_cursor@F8592
   126  013918  00                 	db	0
   127  013919  40                 	db	64
   128                           
   129                           ;initializer for epoch_to_caltime@month_cache
   130  01391A  01                 	db	1
   131                           
   132                           	psect	mediumconst
   133  00FE6C                     __pmediumconst:
   134                           	opt stack 0
   135  00FE6C  00                 	db	0
   136  00FE6D                     _dpowers:
   137                           	opt stack 0
   138  00FE6D  0001               	dw	1
   139  00FE6F  000A               	dw	10
   140  00FE71  0064               	dw	100
   141  00FE73  03E8               	dw	1000
   142  00FE75  2710               	dw	10000
   143  00FE77                     __end_of_dpowers:
   144                           	opt stack 0
   145  00FE77                     _USB_SD_Ptr:
   146                           	opt stack 0
   147  00FE77  58                 	db	low _sd000
   148  00FE78  FF                 	db	high _sd000
   149  00FE79  C2                 	db	low _sd001
   150  00FE7A  FE                 	db	high _sd001
   151  00FE7B  F6                 	db	low _sd002
   152  00FE7C  FE                 	db	high _sd002
   153  00FE7D                     __end_of_USB_SD_Ptr:
   154                           	opt stack 0
   155  00FE7D                     _USB_CD_Ptr:
   156                           	opt stack 0
   157  00FE7D  7F                 	db	low _configDescriptor1
   158  00FE7E  FE                 	db	high _configDescriptor1
   159  00FE7F                     __end_of_USB_CD_Ptr:
   160                           	opt stack 0
   161  00FE7F                     _configDescriptor1:
   162                           	opt stack 0
   163  00FE7F  09                 	db	9
   164  00FE80  02                 	db	2
   165  00FE81  43                 	db	67
   166  00FE82  00                 	db	0
   167  00FE83  02                 	db	2
   168  00FE84  01                 	db	1
   169  00FE85  00                 	db	0
   170  00FE86  C0                 	db	192
   171  00FE87  32                 	db	50
   172  00FE88  09                 	db	9
   173  00FE89  04                 	db	4
   174  00FE8A  00                 	db	0
   175  00FE8B  00                 	db	0
   176  00FE8C  01                 	db	1
   177  00FE8D  02                 	db	2
   178  00FE8E  02                 	db	2
   179  00FE8F  01                 	db	1
   180  00FE90  00                 	db	0
   181  00FE91  05                 	db	5
   182  00FE92  24                 	db	36
   183  00FE93  00                 	db	0
   184  00FE94  10                 	db	16
   185  00FE95  01                 	db	1
   186  00FE96  04                 	db	4
   187  00FE97  24                 	db	36
   188  00FE98  02                 	db	2
   189  00FE99  02                 	db	2
   190  00FE9A  05                 	db	5
   191  00FE9B  24                 	db	36
   192  00FE9C  06                 	db	6
   193  00FE9D  00                 	db	0
   194  00FE9E  01                 	db	1
   195  00FE9F  05                 	db	5
   196  00FEA0  24                 	db	36
   197  00FEA1  01                 	db	1
   198  00FEA2  00                 	db	0
   199  00FEA3  01                 	db	1
   200  00FEA4  07                 	db	7
   201  00FEA5  05                 	db	5
   202  00FEA6  81                 	db	129
   203  00FEA7  03                 	db	3
   204  00FEA8  08                 	db	8
   205  00FEA9  00                 	db	0
   206  00FEAA  02                 	db	2
   207  00FEAB  09                 	db	9
   208  00FEAC  04                 	db	4
   209  00FEAD  01                 	db	1
   210  00FEAE  00                 	db	0
   211  00FEAF  02                 	db	2
   212  00FEB0  0A                 	db	10
   213  00FEB1  00                 	db	0
   214  00FEB2  00                 	db	0
   215  00FEB3  00                 	db	0
   216  00FEB4  07                 	db	7
   217  00FEB5  05                 	db	5
   218  00FEB6  02                 	db	2
   219  00FEB7  02                 	db	2
   220  00FEB8  40                 	db	64
   221  00FEB9  00                 	db	0
   222  00FEBA  00                 	db	0
   223  00FEBB  07                 	db	7
   224  00FEBC  05                 	db	5
   225  00FEBD  82                 	db	130
   226  00FEBE  02                 	db	2
   227  00FEBF  40                 	db	64
   228  00FEC0  00                 	db	0
   229  00FEC1  00                 	db	0
   230  00FEC2                     __end_of_configDescriptor1:
   231                           	opt stack 0
   232  00FEC2                     _sd001:
   233                           	opt stack 0
   234  00FEC2  34                 	db	52
   235  00FEC3  03                 	db	3
   236  00FEC4  004D               	dw	77
   237  00FEC6  0069               	dw	105
   238  00FEC8  0063               	dw	99
   239  00FECA  0072               	dw	114
   240  00FECC  006F               	dw	111
   241  00FECE  0063               	dw	99
   242  00FED0  0068               	dw	104
   243  00FED2  0069               	dw	105
   244  00FED4  0070               	dw	112
   245  00FED6  0020               	dw	32
   246  00FED8  0054               	dw	84
   247  00FEDA  0065               	dw	101
   248  00FEDC  0063               	dw	99
   249  00FEDE  0068               	dw	104
   250  00FEE0  006E               	dw	110
   251  00FEE2  006F               	dw	111
   252  00FEE4  006C               	dw	108
   253  00FEE6  006F               	dw	111
   254  00FEE8  0067               	dw	103
   255  00FEEA  0079               	dw	121
   256  00FEEC  0020               	dw	32
   257  00FEEE  0049               	dw	73
   258  00FEF0  006E               	dw	110
   259  00FEF2  0063               	dw	99
   260  00FEF4  002E               	dw	46
   261  00FEF6                     __end_of_sd001:
   262                           	opt stack 0
   263  00FEF6                     _sd002:
   264                           	opt stack 0
   265  00FEF6  34                 	db	52
   266  00FEF7  03                 	db	3
   267  00FEF8  0043               	dw	67
   268  00FEFA  0044               	dw	68
   269  00FEFC  0043               	dw	67
   270  00FEFE  0020               	dw	32
   271  00FF00  0052               	dw	82
   272  00FF02  0053               	dw	83
   273  00FF04  002D               	dw	45
   274  00FF06  0032               	dw	50
   275  00FF08  0033               	dw	51
   276  00FF0A  0032               	dw	50
   277  00FF0C  0020               	dw	32
   278  00FF0E  0045               	dw	69
   279  00FF10  006D               	dw	109
   280  00FF12  0075               	dw	117
   281  00FF14  006C               	dw	108
   282  00FF16  0061               	dw	97
   283  00FF18  0074               	dw	116
   284  00FF1A  0069               	dw	105
   285  00FF1C  006F               	dw	111
   286  00FF1E  006E               	dw	110
   287  00FF20  0020               	dw	32
   288  00FF22  0044               	dw	68
   289  00FF24  0065               	dw	101
   290  00FF26  006D               	dw	109
   291  00FF28  006F               	dw	111
   292  00FF2A                     __end_of_sd002:
   293                           	opt stack 0
   294  00FF2A                     _weekday_3char:
   295                           	opt stack 0
   296  00FF2A  53                 	db	83
   297  00FF2B  55                 	db	85
   298  00FF2C  4E                 	db	78
   299  00FF2D  00                 	db	0
   300  00FF2E  4D                 	db	77
   301  00FF2F  4F                 	db	79
   302  00FF30  4E                 	db	78
   303  00FF31  00                 	db	0
   304  00FF32  54                 	db	84
   305  00FF33  55                 	db	85
   306  00FF34  45                 	db	69
   307  00FF35  00                 	db	0
   308  00FF36  57                 	db	87
   309  00FF37  45                 	db	69
   310  00FF38  44                 	db	68
   311  00FF39  00                 	db	0
   312  00FF3A  54                 	db	84
   313  00FF3B  48                 	db	72
   314  00FF3C  55                 	db	85
   315  00FF3D  00                 	db	0
   316  00FF3E  46                 	db	70
   317  00FF3F  52                 	db	82
   318  00FF40  49                 	db	73
   319  00FF41  00                 	db	0
   320  00FF42  53                 	db	83
   321  00FF43  41                 	db	65
   322  00FF44  54                 	db	84
   323  00FF45  00                 	db	0
   324  00FF46                     __end_of_weekday_3char:
   325                           	opt stack 0
   326  00FF46                     _device_dsc:
   327                           	opt stack 0
   328  00FF46  12                 	db	18
   329  00FF47  01                 	db	1
   330  00FF48  0200               	dw	512
   331  00FF4A  02                 	db	2
   332  00FF4B  00                 	db	0
   333  00FF4C  00                 	db	0
   334  00FF4D  08                 	db	8
   335  00FF4E  04D8               	dw	1240
   336  00FF50  000A               	dw	10
   337  00FF52  0100               	dw	256
   338  00FF54  01                 	db	1
   339  00FF55  02                 	db	2
   340  00FF56  00                 	db	0
   341  00FF57  01                 	db	1
   342  00FF58                     __end_of_device_dsc:
   343                           	opt stack 0
   344  00FF58                     _sd000:
   345                           	opt stack 0
   346  00FF58  04                 	db	4
   347  00FF59  03                 	db	3
   348  00FF5A  0409               	dw	1033
   349  00FF5C                     __end_of_sd000:
   350                           	opt stack 0
   351  0000                     _ANCON0	set	3912
   352  0000                     _ANCON1	set	3913
   353  0000                     _PADCFG1bits	set	3900
   354  0000                     _RTCCAL	set	3902
   355  0000                     _RTCCFGbits	set	3903
   356  0000                     _RTCVALH	set	3899
   357  0000                     _RTCVALL	set	3898
   358  0000                     _T5CONbits	set	3874
   359  0000                     _UADDR	set	3896
   360  0000                     _UCFG	set	3897
   361  0000                     _UEIE	set	3895
   362  0000                     _UEP0bits	set	3878
   363  0000                     _UIE	set	3894
   364  0000                     _UIEbits	set	3894
   365  0000                     _UEP0	set	3878
   366  0000                     _UEP1	set	3879
   367  0000                     _ADRES	set	4035
   368  0000                     _ADCON0bits	set	4034
   369  0000                     _ADCON1bits	set	4033
   370  0000                     _BAUDCON1bits	set	3966
   371  0000                     _CTMUCONH	set	4019
   372  0000                     _CTMUCONHbits	set	4019
   373  0000                     _CTMUCONL	set	4018
   374  0000                     _CTMUCONLbits	set	4018
   375  0000                     _CTMUICON	set	4017
   376  0000                     _EECON2	set	4007
   377  0000                     _INTCON2bits	set	4081
   378  0000                     _INTCONbits	set	4082
   379  0000                     _IPR1bits	set	3999
   380  0000                     _IPR2bits	set	4002
   381  0000                     _IPR5bits	set	3993
   382  0000                     _LATAbits	set	3977
   383  0000                     _LATBbits	set	3978
   384  0000                     _OSCCONbits	set	4051
   385  0000                     _OSCTUNEbits	set	3995
   386  0000                     _PIE1bits	set	3997
   387  0000                     _PIE2bits	set	4000
   388  0000                     _PIE5bits	set	3985
   389  0000                     _PIR1bits	set	3998
   390  0000                     _PIR2bits	set	4001
   391  0000                     _PIR5bits	set	3992
   392  0000                     _RCONbits	set	4048
   393  0000                     _RCREG1	set	4015
   394  0000                     _RCSTA1bits	set	4012
   395  0000                     _SPBRG1	set	4016
   396  0000                     _SPBRGH1	set	3967
   397  0000                     _SSP1ADD	set	4040
   398  0000                     _SSP1BUF	set	4041
   399  0000                     _SSP1CON1	set	4038
   400  0000                     _SSP1CON1bits	set	4038
   401  0000                     _SSP1CON2	set	4037
   402  0000                     _SSP1CON2bits	set	4037
   403  0000                     _SSP1STAT	set	4039
   404  0000                     _SSP1STATbits	set	4039
   405  0000                     _T0CONbits	set	4053
   406  0000                     _T1CONbits	set	4045
   407  0000                     _T3CONbits	set	3961
   408  0000                     _TMR1H	set	4047
   409  0000                     _TRISA	set	3986
   410  0000                     _TRISB	set	3987
   411  0000                     _TRISC	set	3988
   412  0000                     _TXREG1	set	4014
   413  0000                     _TXSTA1bits	set	4013
   414  0000                     _UCON	set	3941
   415  0000                     _UCONbits	set	3941
   416  0000                     _UEIR	set	3939
   417  0000                     _UIR	set	3938
   418  0000                     _UIRbits	set	3938
   419  0000                     _USTAT	set	3940
   420  0000                     _BCL1IF	set	32011
   421  0000                     _LATB2	set	31826
   422  0000                     _SSP1IF	set	31987
   423  00FF5C  09                 	db	9
   424  00FF5D  32                 	db	50	;'2'
   425  00FF5E  30                 	db	48	;'0'
   426  00FF5F  25                 	db	37
   427  00FF60  30                 	db	48	;'0'
   428  00FF61  32                 	db	50	;'2'
   429  00FF62  64                 	db	100	;'d'
   430  00FF63  2F                 	db	47
   431  00FF64  25                 	db	37
   432  00FF65  30                 	db	48	;'0'
   433  00FF66  32                 	db	50	;'2'
   434  00FF67  64                 	db	100	;'d'
   435  00FF68  2F                 	db	47
   436  00FF69  25                 	db	37
   437  00FF6A  30                 	db	48	;'0'
   438  00FF6B  32                 	db	50	;'2'
   439  00FF6C  64                 	db	100	;'d'
   440  00FF6D  28                 	db	40
   441  00FF6E  25                 	db	37
   442  00FF6F  73                 	db	115	;'s'
   443  00FF70  29                 	db	41
   444  00FF71  25                 	db	37
   445  00FF72  30                 	db	48	;'0'
   446  00FF73  32                 	db	50	;'2'
   447  00FF74  64                 	db	100	;'d'
   448  00FF75  3A                 	db	58	;':'
   449  00FF76  25                 	db	37
   450  00FF77  30                 	db	48	;'0'
   451  00FF78  32                 	db	50	;'2'
   452  00FF79  64                 	db	100	;'d'
   453  00FF7A  2D                 	db	45
   454  00FF7B  25                 	db	37
   455  00FF7C  30                 	db	48	;'0'
   456  00FF7D  32                 	db	50	;'2'
   457  00FF7E  64                 	db	100	;'d'
   458  00FF7F  0A                 	db	10
   459  00FF80  00                 	db	0
   460  00FF81  61                 	db	97	;'a'
   461  00FF82  64                 	db	100	;'d'
   462  00FF83  6A                 	db	106	;'j'
   463  00FF84  75                 	db	117	;'u'
   464  00FF85  73                 	db	115	;'s'
   465  00FF86  74                 	db	116	;'t'
   466  00FF87  5F                 	db	95	;'_'
   467  00FF88  74                 	db	116	;'t'
   468  00FF89  69                 	db	105	;'i'
   469  00FF8A  6D                 	db	109	;'m'
   470  00FF8B  65                 	db	101	;'e'
   471  00FF8C  00                 	db	0
   472  00FF8D  70                 	db	112	;'p'
   473  00FF8E  72                 	db	114	;'r'
   474  00FF8F  69                 	db	105	;'i'
   475  00FF90  6E                 	db	110	;'n'
   476  00FF91  74                 	db	116	;'t'
   477  00FF92  5F                 	db	95	;'_'
   478  00FF93  74                 	db	116	;'t'
   479  00FF94  69                 	db	105	;'i'
   480  00FF95  6D                 	db	109	;'m'
   481  00FF96  65                 	db	101	;'e'
   482  00FF97  00                 	db	0
   483  00FF98                     STR_17:
   484  00FF98  20                 	db	32
   485  00FF99  20                 	db	32
   486  00FF9A  20                 	db	32
   487  00FF9B  20                 	db	32
   488  00FF9C  20                 	db	32
   489  00FF9D  20                 	db	32
   490  00FF9E  20                 	db	32
   491  00FF9F  20                 	db	32
   492  00FFA0  00                 	db	0
   493  00FFA1                     STR_1:
   494  00FFA1  31                 	db	49	;'1'
   495  00FFA2  38                 	db	56	;'8'
   496  00FFA3  46                 	db	70	;'F'
   497  00FFA4  32                 	db	50	;'2'
   498  00FFA5  37                 	db	55	;'7'
   499  00FFA6  4A                 	db	74	;'J'
   500  00FFA7  35                 	db	53	;'5'
   501  00FFA8  33                 	db	51	;'3'
   502  00FFA9  00                 	db	0
   503  00FFAA                     STR_2:
   504  00FFAA  55                 	db	85	;'U'
   505  00FFAB  53                 	db	83	;'S'
   506  00FFAC  42                 	db	66	;'B'
   507  00FFAD  20                 	db	32
   508  00FFAE  55                 	db	85	;'U'
   509  00FFAF  41                 	db	65	;'A'
   510  00FFB0  52                 	db	82	;'R'
   511  00FFB1  54                 	db	84	;'T'
   512  00FFB2  00                 	db	0
   513  00FFB3  09                 	db	9
   514  00FFB4  65                 	db	101	;'e'
   515  00FFB5  72                 	db	114	;'r'
   516  00FFB6  72                 	db	114	;'r'
   517  00FFB7  6F                 	db	111	;'o'
   518  00FFB8  72                 	db	114	;'r'
   519  00FFB9  0A                 	db	10
   520  00FFBA  00                 	db	0
   521  00FFBB                     STR_43:
   522  00FFBB  28                 	db	40
   523  00FFBC  6E                 	db	110	;'n'
   524  00FFBD  75                 	db	117	;'u'
   525  00FFBE  6C                 	db	108	;'l'
   526  00FFBF  6C                 	db	108	;'l'
   527  00FFC0  29                 	db	41
   528  00FFC1  00                 	db	0
   529  00FFC2  73                 	db	115	;'s'
   530  00FFC3  65                 	db	101	;'e'
   531  00FFC4  63                 	db	99	;'c'
   532  00FFC5  6F                 	db	111	;'o'
   533  00FFC6  6E                 	db	110	;'n'
   534  00FFC7  64                 	db	100	;'d'
   535  00FFC8  00                 	db	0
   536  00FFC9  6D                 	db	109	;'m'
   537  00FFCA  69                 	db	105	;'i'
   538  00FFCB  6E                 	db	110	;'n'
   539  00FFCC  75                 	db	117	;'u'
   540  00FFCD  74                 	db	116	;'t'
   541  00FFCE  65                 	db	101	;'e'
   542  00FFCF  00                 	db	0
   543  00FFD0                     STR_34:
   544  00FFD0  6D                 	db	109	;'m'
   545  00FFD1  6F                 	db	111	;'o'
   546  00FFD2  6E                 	db	110	;'n'
   547  00FFD3  74                 	db	116	;'t'
   548  00FFD4  68                 	db	104	;'h'
   549  00FFD5  00                 	db	0
   550  00FFD6  79                 	db	121	;'y'
   551  00FFD7  65                 	db	101	;'e'
   552  00FFD8  61                 	db	97	;'a'
   553  00FFD9  72                 	db	114	;'r'
   554  00FFDA  00                 	db	0
   555  00FFDB  68                 	db	104	;'h'
   556  00FFDC  6F                 	db	111	;'o'
   557  00FFDD  75                 	db	117	;'u'
   558  00FFDE  72                 	db	114	;'r'
   559  00FFDF  00                 	db	0
   560  00FFE0                     STR_3:
   561  00FFE0  25                 	db	37
   562  00FFE1  30                 	db	48	;'0'
   563  00FFE2  32                 	db	50	;'2'
   564  00FFE3  64                 	db	100	;'d'
   565  00FFE4  00                 	db	0
   566  00FFE5                     STR_21:
   567  00FFE5  08                 	db	8
   568  00FFE6  20                 	db	32
   569  00FFE7  08                 	db	8
   570  00FFE8  00                 	db	0
   571  00FFE9                     STR_36:
   572  00FFE9  64                 	db	100	;'d'
   573  00FFEA  61                 	db	97	;'a'
   574  00FFEB  79                 	db	121	;'y'
   575  00FFEC  00                 	db	0
   576  00FFED                     STR_29:
   577  00FFED  61                 	db	97	;'a'
   578  00FFEE  74                 	db	116	;'t'
   579  00FFEF  00                 	db	0
   580  00FFF0  4D                 	db	77	;'M'
   581  00FFF1  00                 	db	0
   582  00FFF2  6D                 	db	109	;'m'
   583  00FFF3  00                 	db	0
   584  00FFF4  73                 	db	115	;'s'
   585  00FFF5  00                 	db	0
   586  00FFF6  28                 	db	40
   587  00FFF7  00                 	db	0
   588  00FFF8                     STR_11:
   589  00FFF8  2D                 	db	45
   590  00FFF9  00                 	db	0
   591  00FFFA                     STR_6:
   592  00FFFA  2F                 	db	47
   593  00FFFB  00                 	db	0
   594  00FFFC                     STR_9:
   595  00FFFC  3A                 	db	58	;':'
   596  00FFFD  00                 	db	0
   597  0000                     
   598                           ; #config settings
   599  00FFFE  00                 	db	0	; dummy byte at the end
   600  0000                     
   601                           	psect	cinit
   602  012E44                     __pcinit:
   603                           	opt stack 0
   604  012E44                     start_initialization:
   605                           	opt stack 0
   606  012E44                     __initialization:
   607                           	opt stack 0
   608                           
   609                           ; Clear objects allocated to BIGRAMl (2000 bytes)
   610  012E44  EE04  F0C8         	lfsr	0,__pbssBIGRAMl
   611  012E48  EE17 F0D0          	lfsr	1,2000
   612  012E4C                     clear_0:
   613  012E4C  6AEE               	clrf	postinc0,c
   614  012E4E  50E5               	movf	postdec1,w,c
   615  012E50  50E1               	movf	fsr1l,w,c
   616  012E52  E1FC               	bnz	clear_0
   617  012E54  50E2               	movf	fsr1h,w,c
   618  012E56  E1FA               	bnz	clear_0
   619                           
   620                           ; Clear objects allocated to BANK4 (200 bytes)
   621  012E58  EE04  F000         	lfsr	0,__pbssBANK4
   622  012E5C  0EC8               	movlw	200
   623  012E5E                     clear_1:
   624  012E5E  6AEE               	clrf	postinc0,c
   625  012E60  06E8               	decf	wreg,f,c
   626  012E62  E1FD               	bnz	clear_1
   627                           
   628                           ; Clear objects allocated to BANK3 (100 bytes)
   629  012E64  EE03  F000         	lfsr	0,__pbssBANK3
   630  012E68  0E64               	movlw	100
   631  012E6A                     clear_2:
   632  012E6A  6AEE               	clrf	postinc0,c
   633  012E6C  06E8               	decf	wreg,f,c
   634  012E6E  E1FD               	bnz	clear_2
   635                           
   636                           ; Clear objects allocated to BANK2 (164 bytes)
   637  012E70  EE02  F000         	lfsr	0,__pbssBANK2
   638  012E74  0EA4               	movlw	164
   639  012E76                     clear_3:
   640  012E76  6AEE               	clrf	postinc0,c
   641  012E78  06E8               	decf	wreg,f,c
   642  012E7A  E1FD               	bnz	clear_3
   643                           
   644                           ; Clear objects allocated to BANK1 (243 bytes)
   645  012E7C  EE01  F000         	lfsr	0,__pbssBANK1
   646  012E80  0EF3               	movlw	243
   647  012E82                     clear_4:
   648  012E82  6AEE               	clrf	postinc0,c
   649  012E84  06E8               	decf	wreg,f,c
   650  012E86  E1FD               	bnz	clear_4
   651                           
   652                           ; Clear objects allocated to BANK0 (56 bytes)
   653  012E88  EE00  F09E         	lfsr	0,__pbssBANK0
   654  012E8C  0E38               	movlw	56
   655  012E8E                     clear_5:
   656  012E8E  6AEE               	clrf	postinc0,c
   657  012E90  06E8               	decf	wreg,f,c
   658  012E92  E1FD               	bnz	clear_5
   659                           
   660                           ; Clear objects allocated to COMRAM (45 bytes)
   661  012E94  EE00  F001         	lfsr	0,__pbssCOMRAM
   662  012E98  0E2D               	movlw	45
   663  012E9A                     clear_6:
   664  012E9A  6AEE               	clrf	postinc0,c
   665  012E9C  06E8               	decf	wreg,f,c
   666  012E9E  E1FD               	bnz	clear_6
   667                           
   668                           ; Initialize objects allocated to BANK0 (5 bytes)
   669                           ; load TBLPTR registers with __pidataBANK0
   670  012EA0  0E16               	movlw	low __pidataBANK0
   671  012EA2  6EF6               	movwf	tblptrl,c
   672  012EA4  0E39               	movlw	high __pidataBANK0
   673  012EA6  6EF7               	movwf	tblptrh,c
   674  012EA8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   675  012EAA  6EF8               	movwf	tblptru,c
   676  012EAC  EE00  F0D6         	lfsr	0,__pdataBANK0
   677  012EB0  EE10 F005          	lfsr	1,5
   678  012EB4                     copy_data0:
   679  012EB4  0009               	tblrd		*+
   680  012EB6  CFF5 FFEE          	movff	tablat,postinc0
   681  012EBA  50E5               	movf	postdec1,w,c
   682  012EBC  50E1               	movf	fsr1l,w,c
   683  012EBE  E1FA               	bnz	copy_data0
   684  012EC0                     end_of_initialization:
   685                           	opt stack 0
   686  012EC0                     __end_of__initialization:
   687                           	opt stack 0
   688  012EC0  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   689  012EC2  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   690  012EC4  0100               	movlb	0
   691  012EC6  EFB5  F086         	goto	_main	;jump to C main() function
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           postinc0	equ	0xFEE
   697                           wreg	equ	0xFE8
   698                           postdec1	equ	0xFE5
   699                           fsr1h	equ	0xFE2
   700                           fsr1l	equ	0xFE1
   701                           
   702                           	psect	bssCOMRAM
   703  000001                     __pbssCOMRAM:
   704                           	opt stack 0
   705  000001                     _outPipes:
   706                           	opt stack 0
   707  000001                     	ds	9
   708  00000A                     _inPipes:
   709                           	opt stack 0
   710  00000A                     	ds	6
   711  000010                     _pBDTEntryIn:
   712                           	opt stack 0
   713  000010                     	ds	6
   714  000016                     _ep_data_in:
   715                           	opt stack 0
   716  000016                     	ds	3
   717  000019                     _ep_data_out:
   718                           	opt stack 0
   719  000019                     	ds	3
   720  00001C                     _pBDTEntryEP0OutCurrent:
   721                           	opt stack 0
   722  00001C                     	ds	2
   723  00001E                     _pBDTEntryEP0OutNext:
   724                           	opt stack 0
   725  00001E                     	ds	2
   726  000020                     _BothEP0OutUOWNsSet:
   727                           	opt stack 0
   728  000020                     	ds	1
   729  000021                     _RemoteWakeup:
   730                           	opt stack 0
   731  000021                     	ds	1
   732  000022                     _USBDeferINDataStagePackets:
   733                           	opt stack 0
   734  000022                     	ds	1
   735  000023                     _USBDeferOUTDataStagePackets:
   736                           	opt stack 0
   737  000023                     	ds	1
   738  000024                     _USBDeferStatusStagePacket:
   739                           	opt stack 0
   740  000024                     	ds	1
   741  000025                     _USBDeviceState:
   742                           	opt stack 0
   743  000025                     	ds	1
   744  000026                     _USBStatusStageEnabledFlag1:
   745                           	opt stack 0
   746  000026                     	ds	1
   747  000027                     _USBStatusStageEnabledFlag2:
   748                           	opt stack 0
   749  000027                     	ds	1
   750  000028                     _USBStatusStageTimeoutCounter:
   751                           	opt stack 0
   752  000028                     	ds	1
   753  000029                     _controlTransferState:
   754                           	opt stack 0
   755  000029                     	ds	1
   756  00002A                     _endpoint_number:
   757                           	opt stack 0
   758  00002A                     	ds	1
   759  00002B                     _shortPacketStatus:
   760                           	opt stack 0
   761  00002B                     	ds	1
   762  00002C                     _USBActiveConfiguration:
   763                           	opt stack 0
   764  00002C                     	ds	1
   765  00002D                     _USTATcopy:
   766                           	opt stack 0
   767  00002D                     	ds	1
   768                           tblptru	equ	0xFF8
   769                           tblptrh	equ	0xFF7
   770                           tblptrl	equ	0xFF6
   771                           tablat	equ	0xFF5
   772                           postinc0	equ	0xFEE
   773                           wreg	equ	0xFE8
   774                           postdec1	equ	0xFE5
   775                           fsr1h	equ	0xFE2
   776                           fsr1l	equ	0xFE1
   777                           
   778                           	psect	bssBANK0
   779  00009E                     __pbssBANK0:
   780                           	opt stack 0
   781  00009E                     _pBDTEntryOut:
   782                           	opt stack 0
   783  00009E                     	ds	6
   784  0000A4                     _pCDCDst:
   785                           	opt stack 0
   786  0000A4                     	ds	3
   787  0000A7                     _pCDCSrc:
   788                           	opt stack 0
   789  0000A7                     	ds	3
   790  0000AA                     USBCBSendResume@delay_count:
   791                           	opt stack 0
   792  0000AA                     	ds	2
   793  0000AC                     _CDCDataInHandle:
   794                           	opt stack 0
   795  0000AC                     	ds	2
   796  0000AE                     _CDCDataOutHandle:
   797                           	opt stack 0
   798  0000AE                     	ds	2
   799  0000B0                     _pDst:
   800                           	opt stack 0
   801  0000B0                     	ds	2
   802  0000B2                     epoch_to_caltime@day_cache:
   803                           	opt stack 0
   804  0000B2                     	ds	2
   805  0000B4                     millis_timer@cnt:
   806                           	opt stack 0
   807  0000B4                     	ds	2
   808  0000B6                     I2C_LCD_task@i2c_lcd_state:
   809                           	opt stack 0
   810  0000B6                     	ds	1
   811  0000B7                     I2C_LCD_task@wait:
   812                           	opt stack 0
   813  0000B7                     	ds	1
   814  0000B8                     RTCC_task@prev_halfsec:
   815                           	opt stack 0
   816  0000B8                     	ds	1
   817  0000B9                     _USBBusIsSuspended:
   818                           	opt stack 0
   819  0000B9                     	ds	1
   820  0000BA                     _cdc_mem_type:
   821                           	opt stack 0
   822  0000BA                     	ds	1
   823  0000BB                     _cdc_rx_len:
   824                           	opt stack 0
   825  0000BB                     	ds	1
   826  0000BC                     _cdc_trf_state:
   827                           	opt stack 0
   828  0000BC                     	ds	1
   829  0000BD                     _cdc_tx_len:
   830                           	opt stack 0
   831  0000BD                     	ds	1
   832  0000BE                     _control_signal_bitmap:
   833                           	opt stack 0
   834  0000BE                     	ds	1
   835  0000BF                     _i2c_lcd_flag:
   836                           	opt stack 0
   837  0000BF                     	ds	1
   838  0000C0                     _i2c_lcd_state:
   839                           	opt stack 0
   840  0000C0                     	ds	1
   841  0000C1                     _time_change_flag:
   842                           	opt stack 0
   843  0000C1                     	ds	1
   844  0000C2                     epoch_to_caltime@year_cache:
   845                           	opt stack 0
   846  0000C2                     	ds	1
   847  0000C3                     terminal_task@command_init:
   848                           	opt stack 0
   849  0000C3                     	ds	1
   850  0000C4                     _lcd_tx:
   851                           	opt stack 0
   852  0000C4                     	ds	8
   853  0000CC                     terminal_task@command:
   854                           	opt stack 0
   855  0000CC                     	ds	8
   856  0000D4                     _USBAlternateInterface:
   857                           	opt stack 0
   858  0000D4                     	ds	2
   859                           tblptru	equ	0xFF8
   860                           tblptrh	equ	0xFF7
   861                           tblptrl	equ	0xFF6
   862                           tablat	equ	0xFF5
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           postdec1	equ	0xFE5
   866                           fsr1h	equ	0xFE2
   867                           fsr1l	equ	0xFE1
   868                           
   869                           	psect	dataBANK0
   870  0000D6                     __pdataBANK0:
   871                           	opt stack 0
   872  0000D6                     I2C_LCD_SetCursor@F8620:
   873                           	opt stack 0
   874  0000D6                     	ds	2
   875  0000D8                     I2C_LCD_cursor@F8592:
   876                           	opt stack 0
   877  0000D8                     	ds	2
   878  0000DA                     epoch_to_caltime@month_cache:
   879                           	opt stack 0
   880  0000DA                     	ds	1
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           postinc0	equ	0xFEE
   886                           wreg	equ	0xFE8
   887                           postdec1	equ	0xFE5
   888                           fsr1h	equ	0xFE2
   889                           fsr1l	equ	0xFE1
   890                           
   891                           	psect	bssBANK1
   892  000100                     __pbssBANK1:
   893                           	opt stack 0
   894  000100                     _cdc_notice:
   895                           	opt stack 0
   896  000100                     	ds	10
   897  00010A                     _BaudRateGen:
   898                           	opt stack 0
   899  00010A                     	ds	4
   900  00010E                     _ms:
   901                           	opt stack 0
   902  00010E                     	ds	4
   903  000112                     _cdc_data_rx:
   904                           	opt stack 0
   905  000112                     	ds	64
   906  000152                     terminal_task@op0:
   907                           	opt stack 0
   908  000152                     	ds	25
   909  00016B                     terminal_task@op1:
   910                           	opt stack 0
   911  00016B                     	ds	25
   912  000184                     terminal_task@op2:
   913                           	opt stack 0
   914  000184                     	ds	25
   915  00019D                     terminal_task@op3:
   916                           	opt stack 0
   917  00019D                     	ds	25
   918  0001B6                     _now:
   919                           	opt stack 0
   920  0001B6                     	ds	14
   921  0001C4                     _dummy_encapsulated_cmd_response:
   922                           	opt stack 0
   923  0001C4                     	ds	8
   924  0001CC                     _uart_rx:
   925                           	opt stack 0
   926  0001CC                     	ds	8
   927  0001D4                     _uart_tx:
   928                           	opt stack 0
   929  0001D4                     	ds	8
   930  0001DC                     _usb_rx:
   931                           	opt stack 0
   932  0001DC                     	ds	8
   933  0001E4                     _usb_tx:
   934                           	opt stack 0
   935  0001E4                     	ds	8
   936  0001EC                     _line_coding:
   937                           	opt stack 0
   938  0001EC                     	ds	7
   939                           tblptru	equ	0xFF8
   940                           tblptrh	equ	0xFF7
   941                           tblptrl	equ	0xFF6
   942                           tablat	equ	0xFF5
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           postdec1	equ	0xFE5
   946                           fsr1h	equ	0xFE2
   947                           fsr1l	equ	0xFE1
   948                           
   949                           	psect	bssBANK2
   950  000200                     __pbssBANK2:
   951                           	opt stack 0
   952  000200                     main_init@usbrx:
   953                           	opt stack 0
   954  000200                     	ds	100
   955  000264                     _cdc_data_tx:
   956                           	opt stack 0
   957  000264                     	ds	64
   958                           tblptru	equ	0xFF8
   959                           tblptrh	equ	0xFF7
   960                           tblptrl	equ	0xFF6
   961                           tablat	equ	0xFF5
   962                           postinc0	equ	0xFEE
   963                           wreg	equ	0xFE8
   964                           postdec1	equ	0xFE5
   965                           fsr1h	equ	0xFE2
   966                           fsr1l	equ	0xFE1
   967                           
   968                           	psect	bssBANK3
   969  000300                     __pbssBANK3:
   970                           	opt stack 0
   971  000300                     main_init@uartrx:
   972                           	opt stack 0
   973  000300                     	ds	100
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           postdec1	equ	0xFE5
   981                           fsr1h	equ	0xFE2
   982                           fsr1l	equ	0xFE1
   983                           
   984                           	psect	bssBANK4
   985  000400                     __pbssBANK4:
   986                           	opt stack 0
   987  000400                     I2C_LCD_init@buf:
   988                           	opt stack 0
   989  000400                     	ds	200
   990                           tblptru	equ	0xFF8
   991                           tblptrh	equ	0xFF7
   992                           tblptrl	equ	0xFF6
   993                           tablat	equ	0xFF5
   994                           postinc0	equ	0xFEE
   995                           wreg	equ	0xFE8
   996                           postdec1	equ	0xFE5
   997                           fsr1h	equ	0xFE2
   998                           fsr1l	equ	0xFE1
   999                           
  1000                           	psect	bssBIGRAMl
  1001  0004C8                     __pbssBIGRAMl:
  1002                           	opt stack 0
  1003  0004C8                     main_init@uarttx:
  1004                           	opt stack 0
  1005  0004C8                     	ds	1000
  1006  0008B0                     main_init@usbtx:
  1007                           	opt stack 0
  1008  0008B0                     	ds	1000
  1009                           tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           postinc0	equ	0xFEE
  1014                           wreg	equ	0xFE8
  1015                           postdec1	equ	0xFE5
  1016                           fsr1h	equ	0xFE2
  1017                           fsr1l	equ	0xFE1
  1018                           
  1019                           	psect	cstackBANK2
  1020  0002A4                     __pcstackBANK2:
  1021                           	opt stack 0
  1022  0002A4                     main@s:
  1023                           	opt stack 0
  1024                           
  1025                           ; 40 bytes @ 0x0
  1026  0002A4                     	ds	40
  1027                           tblptru	equ	0xFF8
  1028                           tblptrh	equ	0xFF7
  1029                           tblptrl	equ	0xFF6
  1030                           tablat	equ	0xFF5
  1031                           postinc0	equ	0xFEE
  1032                           wreg	equ	0xFE8
  1033                           postdec1	equ	0xFE5
  1034                           fsr1h	equ	0xFE2
  1035                           fsr1l	equ	0xFE1
  1036                           
  1037                           	psect	cstackBANK0
  1038  000060                     __pcstackBANK0:
  1039                           	opt stack 0
  1040  000060                     ??_timer0_init:
  1041  000060                     ??_timer3_init:
  1042  000060                     ??_isdigit:
  1043  000060                     ??_I2C_IdleCheck:
  1044  000060                     ??_x_to_d:
  1045  000060                     ?_ringbuf_num:
  1046                           	opt stack 0
  1047  000060                     ?_USBTransferOnePacket:
  1048                           	opt stack 0
  1049  000060                     ?___wmul:
  1050                           	opt stack 0
  1051  000060                     ?___awdiv:
  1052                           	opt stack 0
  1053  000060                     ?___awmod:
  1054                           	opt stack 0
  1055  000060                     ?___lwdiv:
  1056                           	opt stack 0
  1057  000060                     ?___lldiv:
  1058                           	opt stack 0
  1059  000060                     timer1_init@clock_select:
  1060                           	opt stack 0
  1061  000060                     _is_usb_available$3807:
  1062                           	opt stack 0
  1063  000060                     USBTransferOnePacket@dir:
  1064                           	opt stack 0
  1065  000060                     ringbuf_init@rb:
  1066                           	opt stack 0
  1067  000060                     ringbuf_num@rb:
  1068                           	opt stack 0
  1069  000060                     putUSBUSART@data:
  1070                           	opt stack 0
  1071  000060                     ___wmul@multiplier:
  1072                           	opt stack 0
  1073  000060                     ___awdiv@dividend:
  1074                           	opt stack 0
  1075  000060                     ___awmod@dividend:
  1076                           	opt stack 0
  1077  000060                     ___lwdiv@dividend:
  1078                           	opt stack 0
  1079  000060                     memset@p1:
  1080                           	opt stack 0
  1081  000060                     strcat@to:
  1082                           	opt stack 0
  1083  000060                     strcpy@to:
  1084                           	opt stack 0
  1085  000060                     ___lldiv@dividend:
  1086                           	opt stack 0
  1087                           
  1088                           ; 4 bytes @ 0x0
  1089  000060                     	ds	1
  1090  000061                     ??_timer1_init:
  1091  000061                     I2C_IdleCheck@mask:
  1092                           	opt stack 0
  1093  000061                     timer0_init@prescaler:
  1094                           	opt stack 0
  1095  000061                     timer3_init@prescaler:
  1096                           	opt stack 0
  1097  000061                     x_to_d@hex:
  1098                           	opt stack 0
  1099  000061                     _isdigit$5925:
  1100                           	opt stack 0
  1101  000061                     USBTransferOnePacket@data:
  1102                           	opt stack 0
  1103                           
  1104                           ; 2 bytes @ 0x1
  1105  000061                     	ds	1
  1106  000062                     ??_ringbuf_num:
  1107  000062                     I2C_Start@rw:
  1108                           	opt stack 0
  1109  000062                     I2C_Send@data:
  1110                           	opt stack 0
  1111  000062                     timer1_init@prescaler:
  1112                           	opt stack 0
  1113  000062                     putUSBUSART@length:
  1114                           	opt stack 0
  1115  000062                     isdigit@c:
  1116                           	opt stack 0
  1117  000062                     ringbuf_init@internal_buf:
  1118                           	opt stack 0
  1119  000062                     RTCC_to_caltime@tm:
  1120                           	opt stack 0
  1121  000062                     ___wmul@multiplicand:
  1122                           	opt stack 0
  1123  000062                     ___awdiv@divisor:
  1124                           	opt stack 0
  1125  000062                     ___awmod@divisor:
  1126                           	opt stack 0
  1127  000062                     ___lwdiv@divisor:
  1128                           	opt stack 0
  1129  000062                     memset@c:
  1130                           	opt stack 0
  1131  000062                     strcat@from:
  1132                           	opt stack 0
  1133  000062                     strcpy@from:
  1134                           	opt stack 0
  1135                           
  1136                           ; 2 bytes @ 0x2
  1137  000062                     	ds	1
  1138  000063                     I2C_Start@adrs:
  1139                           	opt stack 0
  1140  000063                     USBTransferOnePacket@len:
  1141                           	opt stack 0
  1142                           
  1143                           ; 1 bytes @ 0x3
  1144  000063                     	ds	1
  1145  000064                     RTCC_to_caltime@dumy:
  1146                           	opt stack 0
  1147  000064                     I2C_LCD_Command@c:
  1148                           	opt stack 0
  1149  000064                     USBTransferOnePacket@ep:
  1150                           	opt stack 0
  1151  000064                     ___awdiv@counter:
  1152                           	opt stack 0
  1153  000064                     ___awmod@counter:
  1154                           	opt stack 0
  1155  000064                     ___lwdiv@counter:
  1156                           	opt stack 0
  1157  000064                     ringbuf_init@bufsize:
  1158                           	opt stack 0
  1159  000064                     I2C_LCD_Puts@s:
  1160                           	opt stack 0
  1161  000064                     ___wmul@product:
  1162                           	opt stack 0
  1163  000064                     memset@n:
  1164                           	opt stack 0
  1165  000064                     strcat@cp:
  1166                           	opt stack 0
  1167  000064                     strcpy@cp:
  1168                           	opt stack 0
  1169  000064                     ___lldiv@divisor:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0x4
  1173  000064                     	ds	1
  1174  000065                     I2C_LCD_Command@ans:
  1175                           	opt stack 0
  1176  000065                     ___awdiv@sign:
  1177                           	opt stack 0
  1178  000065                     ___awmod@sign:
  1179                           	opt stack 0
  1180  000065                     USBTransferOnePacket@handle:
  1181                           	opt stack 0
  1182  000065                     ___lwdiv@quotient:
  1183                           	opt stack 0
  1184                           
  1185                           ; 2 bytes @ 0x5
  1186  000065                     	ds	1
  1187  000066                     ??_I2C_LCD_Clear:
  1188  000066                     ??_I2C_LCD_Puts:
  1189  000066                     month_length@month:
  1190                           	opt stack 0
  1191  000066                     I2C_LCD_SetCursor@row:
  1192                           	opt stack 0
  1193  000066                     ___awdiv@quotient:
  1194                           	opt stack 0
  1195  000066                     memset@p:
  1196                           	opt stack 0
  1197                           
  1198                           ; 2 bytes @ 0x6
  1199  000066                     	ds	1
  1200  000067                     ??_ST7032_init:
  1201  000067                     ??_CDCTxService:
  1202  000067                     ??_month_length:
  1203  000067                     ?___lwmod:
  1204                           	opt stack 0
  1205  000067                     I2C_LCD_SetCursor@row_offsets:
  1206                           	opt stack 0
  1207  000067                     I2C_LCD_Puts@ans:
  1208                           	opt stack 0
  1209  000067                     getsUSBUSART@buffer:
  1210                           	opt stack 0
  1211  000067                     ___lwmod@dividend:
  1212                           	opt stack 0
  1213                           
  1214                           ; 2 bytes @ 0x7
  1215  000067                     	ds	1
  1216  000068                     d_to_x@dec:
  1217                           	opt stack 0
  1218  000068                     ST7032_init@i:
  1219                           	opt stack 0
  1220  000068                     USBDeviceInit@i:
  1221                           	opt stack 0
  1222  000068                     ringbuf_pop@rb:
  1223                           	opt stack 0
  1224  000068                     _CDCTxService$5672:
  1225                           	opt stack 0
  1226  000068                     ___lldiv@quotient:
  1227                           	opt stack 0
  1228                           
  1229                           ; 4 bytes @ 0x8
  1230  000068                     	ds	1
  1231  000069                     I2C_LCD_SetCursor@col:
  1232                           	opt stack 0
  1233  000069                     ST7032_init@i_3110:
  1234                           	opt stack 0
  1235  000069                     getsUSBUSART@len:
  1236                           	opt stack 0
  1237  000069                     caltime_to_RTCC@tm:
  1238                           	opt stack 0
  1239  000069                     ___lwmod@divisor:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x9
  1243  000069                     	ds	1
  1244  00006A                     ??_ringbuf_pop:
  1245  00006A                     ??_getsUSBUSART:
  1246  00006A                     CDCTxService@i:
  1247                           	opt stack 0
  1248                           
  1249                           ; 1 bytes @ 0xA
  1250  00006A                     	ds	1
  1251  00006B                     month_length@year:
  1252                           	opt stack 0
  1253  00006B                     CDCTxService@byte_to_send:
  1254                           	opt stack 0
  1255  00006B                     ___lwmod@counter:
  1256                           	opt stack 0
  1257  00006B                     _getsUSBUSART$5624:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0xB
  1261  00006B                     	ds	1
  1262  00006C                     ?_sprintf:
  1263                           	opt stack 0
  1264  00006C                     ___lldiv@counter:
  1265                           	opt stack 0
  1266  00006C                     put_string_usb@s:
  1267                           	opt stack 0
  1268  00006C                     sprintf@sp:
  1269                           	opt stack 0
  1270                           
  1271                           ; 2 bytes @ 0xC
  1272  00006C                     	ds	1
  1273  00006D                     ?_get_string_usb:
  1274                           	opt stack 0
  1275  00006D                     ?___lmul:
  1276                           	opt stack 0
  1277  00006D                     get_string_usb@s:
  1278                           	opt stack 0
  1279  00006D                     ___lmul@multiplier:
  1280                           	opt stack 0
  1281                           
  1282                           ; 4 bytes @ 0xD
  1283  00006D                     	ds	1
  1284  00006E                     ringbuf_pop@ret:
  1285                           	opt stack 0
  1286  00006E                     put_string_usb@len:
  1287                           	opt stack 0
  1288  00006E                     sprintf@f:
  1289                           	opt stack 0
  1290                           
  1291                           ; 2 bytes @ 0xE
  1292  00006E                     	ds	1
  1293  00006F                     ringbuf_put@rb:
  1294                           	opt stack 0
  1295  00006F                     get_string_usb@len:
  1296                           	opt stack 0
  1297                           
  1298                           ; 2 bytes @ 0xF
  1299  00006F                     	ds	1
  1300  000070                     
  1301                           ; 0 bytes @ 0x10
  1302  000070                     	ds	1
  1303  000071                     ??_get_string_usb:
  1304  000071                     ringbuf_put@asciicode:
  1305                           	opt stack 0
  1306  000071                     ___lmul@multiplicand:
  1307                           	opt stack 0
  1308                           
  1309                           ; 4 bytes @ 0x11
  1310  000071                     	ds	1
  1311  000072                     ??_ringbuf_put:
  1312  000072                     get_string_usb@rx_len:
  1313                           	opt stack 0
  1314                           
  1315                           ; 2 bytes @ 0x12
  1316  000072                     	ds	3
  1317  000075                     ___lmul@product:
  1318                           	opt stack 0
  1319                           
  1320                           ; 4 bytes @ 0x15
  1321  000075                     	ds	1
  1322  000076                     USB_task@rx_len:
  1323                           	opt stack 0
  1324                           
  1325                           ; 2 bytes @ 0x16
  1326  000076                     	ds	2
  1327  000078                     USB_task@data:
  1328                           	opt stack 0
  1329                           
  1330                           ; 1 bytes @ 0x18
  1331  000078                     	ds	1
  1332  000079                     ?_get_quot_rem:
  1333                           	opt stack 0
  1334  000079                     get_quot_rem@quot:
  1335                           	opt stack 0
  1336  000079                     caltime_to_epoch@tm:
  1337                           	opt stack 0
  1338                           
  1339                           ; 2 bytes @ 0x19
  1340  000079                     	ds	2
  1341  00007B                     ??_caltime_to_epoch:
  1342  00007B                     get_quot_rem@div:
  1343                           	opt stack 0
  1344                           
  1345                           ; 1 bytes @ 0x1B
  1346  00007B                     	ds	2
  1347  00007D                     get_quot_rem@num:
  1348                           	opt stack 0
  1349                           
  1350                           ; 4 bytes @ 0x1D
  1351  00007D                     	ds	1
  1352  00007E                     ??_sprintf:
  1353                           
  1354                           ; 0 bytes @ 0x1E
  1355  00007E                     	ds	1
  1356  00007F                     caltime_to_epoch@year:
  1357                           	opt stack 0
  1358                           
  1359                           ; 1 bytes @ 0x1F
  1360  00007F                     	ds	1
  1361  000080                     caltime_to_epoch@month_2357:
  1362                           	opt stack 0
  1363                           
  1364                           ; 1 bytes @ 0x20
  1365  000080                     	ds	1
  1366  000081                     epoch_to_caltime@tm:
  1367                           	opt stack 0
  1368  000081                     caltime_to_epoch@epoch:
  1369                           	opt stack 0
  1370                           
  1371                           ; 4 bytes @ 0x21
  1372  000081                     	ds	1
  1373  000082                     sprintf@prec:
  1374                           	opt stack 0
  1375                           
  1376                           ; 1 bytes @ 0x22
  1377  000082                     	ds	1
  1378  000083                     ??_epoch_to_caltime:
  1379  000083                     sprintf@ap:
  1380                           	opt stack 0
  1381                           
  1382                           ; 2 bytes @ 0x23
  1383  000083                     	ds	2
  1384  000085                     caltime_to_epoch@month:
  1385                           	opt stack 0
  1386  000085                     epoch_to_caltime@day_since_epoch:
  1387                           	opt stack 0
  1388  000085                     sprintf@cp:
  1389                           	opt stack 0
  1390                           
  1391                           ; 2 bytes @ 0x25
  1392  000085                     	ds	1
  1393  000086                     RTCC_from_RTCC@tm:
  1394                           	opt stack 0
  1395                           
  1396                           ; 2 bytes @ 0x26
  1397  000086                     	ds	1
  1398  000087                     epoch_to_caltime@day:
  1399                           	opt stack 0
  1400  000087                     sprintf@val:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x27
  1404  000087                     	ds	1
  1405  000088                     
  1406                           ; 0 bytes @ 0x28
  1407  000088                     	ds	1
  1408  000089                     epoch_to_caltime@year:
  1409                           	opt stack 0
  1410  000089                     sprintf@len:
  1411                           	opt stack 0
  1412                           
  1413                           ; 2 bytes @ 0x29
  1414  000089                     	ds	1
  1415  00008A                     epoch_to_caltime@month:
  1416                           	opt stack 0
  1417                           
  1418                           ; 1 bytes @ 0x2A
  1419  00008A                     	ds	1
  1420  00008B                     sprintf@flag:
  1421                           	opt stack 0
  1422  00008B                     epoch_to_caltime@num:
  1423                           	opt stack 0
  1424                           
  1425                           ; 4 bytes @ 0x2B
  1426  00008B                     	ds	1
  1427  00008C                     sprintf@c:
  1428                           	opt stack 0
  1429                           
  1430                           ; 1 bytes @ 0x2C
  1431  00008C                     	ds	1
  1432  00008D                     sprintf@width:
  1433                           	opt stack 0
  1434                           
  1435                           ; 2 bytes @ 0x2D
  1436  00008D                     	ds	2
  1437  00008F                     RTCC_from_epoch@tm:
  1438                           	opt stack 0
  1439  00008F                     display_dec@str:
  1440                           	opt stack 0
  1441                           
  1442                           ; 2 bytes @ 0x2F
  1443  00008F                     	ds	2
  1444  000091                     display_dec@dec:
  1445                           	opt stack 0
  1446                           
  1447                           ; 1 bytes @ 0x31
  1448  000091                     	ds	1
  1449  000092                     display_dec@edit:
  1450                           	opt stack 0
  1451                           
  1452                           ; 1 bytes @ 0x32
  1453  000092                     	ds	1
  1454  000093                     display_dec@s:
  1455                           	opt stack 0
  1456                           
  1457                           ; 4 bytes @ 0x33
  1458  000093                     	ds	4
  1459  000097                     display_time_0802@tm:
  1460                           	opt stack 0
  1461                           
  1462                           ; 2 bytes @ 0x37
  1463  000097                     	ds	2
  1464  000099                     display_time_0802@line0:
  1465                           	opt stack 0
  1466                           
  1467                           ; 2 bytes @ 0x39
  1468  000099                     	ds	2
  1469  00009B                     display_time_0802@line1:
  1470                           	opt stack 0
  1471                           
  1472                           ; 2 bytes @ 0x3B
  1473  00009B                     	ds	2
  1474  00009D                     ??_main:
  1475                           
  1476                           ; 0 bytes @ 0x3D
  1477  00009D                     	ds	1
  1478                           tblptru	equ	0xFF8
  1479                           tblptrh	equ	0xFF7
  1480                           tblptrl	equ	0xFF6
  1481                           tablat	equ	0xFF5
  1482                           postinc0	equ	0xFEE
  1483                           wreg	equ	0xFE8
  1484                           postdec1	equ	0xFE5
  1485                           fsr1h	equ	0xFE2
  1486                           fsr1l	equ	0xFE1
  1487                           
  1488                           	psect	cstackCOMRAM
  1489  00002E                     __pcstackCOMRAM:
  1490                           	opt stack 0
  1491  00002E                     ??_USBStdGetDscHandler:
  1492  00002E                     ??_USBStdGetStatusHandler:
  1493  00002E                     ?i2_ringbuf_num:
  1494                           	opt stack 0
  1495  00002E                     ?i2_USBTransferOnePacket:
  1496                           	opt stack 0
  1497  00002E                     USBConfigureEndpoint@direction:
  1498                           	opt stack 0
  1499  00002E                     USBCtrlTrfTxService@byteToSend:
  1500                           	opt stack 0
  1501  00002E                     USBCtrlTrfRxService@i:
  1502                           	opt stack 0
  1503  00002E                     i2USBTransferOnePacket@dir:
  1504                           	opt stack 0
  1505  00002E                     i2ringbuf_num@rb:
  1506                           	opt stack 0
  1507  00002E                     i2memset@p1:
  1508                           	opt stack 0
  1509                           
  1510                           ; 2 bytes @ 0x0
  1511  00002E                     	ds	1
  1512  00002F                     ??_USBConfigureEndpoint:
  1513  00002F                     USBCtrlTrfRxService@byteToRead:
  1514                           	opt stack 0
  1515  00002F                     USBCtrlTrfInHandler@lastDTS:
  1516                           	opt stack 0
  1517  00002F                     USBStdGetStatusHandler@p:
  1518                           	opt stack 0
  1519  00002F                     i2USBTransferOnePacket@data:
  1520                           	opt stack 0
  1521                           
  1522                           ; 2 bytes @ 0x1
  1523  00002F                     	ds	1
  1524  000030                     ??i2_ringbuf_num:
  1525  000030                     i2memset@c:
  1526                           	opt stack 0
  1527                           
  1528                           ; 2 bytes @ 0x2
  1529  000030                     	ds	1
  1530  000031                     i2USBTransferOnePacket@len:
  1531                           	opt stack 0
  1532                           
  1533                           ; 1 bytes @ 0x3
  1534  000031                     	ds	1
  1535  000032                     i2USBTransferOnePacket@ep:
  1536                           	opt stack 0
  1537  000032                     i2memset@n:
  1538                           	opt stack 0
  1539                           
  1540                           ; 2 bytes @ 0x4
  1541  000032                     	ds	1
  1542  000033                     USBConfigureEndpoint@EPNum:
  1543                           	opt stack 0
  1544  000033                     i2USBTransferOnePacket@handle:
  1545                           	opt stack 0
  1546                           
  1547                           ; 2 bytes @ 0x5
  1548  000033                     	ds	1
  1549  000034                     USBConfigureEndpoint@handle:
  1550                           	opt stack 0
  1551  000034                     i2memset@p:
  1552                           	opt stack 0
  1553                           
  1554                           ; 2 bytes @ 0x6
  1555  000034                     	ds	2
  1556  000036                     USBEnableEndpoint@options:
  1557                           	opt stack 0
  1558  000036                     i2USBDeviceInit@i:
  1559                           	opt stack 0
  1560  000036                     i2ringbuf_put@rb:
  1561                           	opt stack 0
  1562  000036                     i2ringbuf_pop@rb:
  1563                           	opt stack 0
  1564                           
  1565                           ; 2 bytes @ 0x8
  1566  000036                     	ds	1
  1567  000037                     USBEnableEndpoint@p:
  1568                           	opt stack 0
  1569                           
  1570                           ; 2 bytes @ 0x9
  1571  000037                     	ds	1
  1572  000038                     ??i2_ringbuf_pop:
  1573  000038                     i2ringbuf_put@asciicode:
  1574                           	opt stack 0
  1575                           
  1576                           ; 1 bytes @ 0xA
  1577  000038                     	ds	1
  1578  000039                     ??i2_ringbuf_put:
  1579  000039                     USBEnableEndpoint@ep:
  1580                           	opt stack 0
  1581                           
  1582                           ; 1 bytes @ 0xB
  1583  000039                     	ds	1
  1584  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1585                           	opt stack 0
  1586                           
  1587                           ; 2 bytes @ 0xC
  1588  00003A                     	ds	2
  1589  00003C                     i2ringbuf_pop@ret:
  1590                           	opt stack 0
  1591  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1592                           	opt stack 0
  1593                           
  1594                           ; 2 bytes @ 0xE
  1595  00003C                     	ds	1
  1596  00003D                     UART_ISR@ascii:
  1597                           	opt stack 0
  1598                           
  1599                           ; 1 bytes @ 0xF
  1600  00003D                     	ds	1
  1601  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1602                           	opt stack 0
  1603                           
  1604                           ; 2 bytes @ 0x10
  1605  00003E                     	ds	2
  1606  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1607                           
  1608                           ; 0 bytes @ 0x12
  1609  000040                     	ds	2
  1610  000042                     ??_USBStdFeatureReqHandler:
  1611  000042                     USBStdSetCfgHandler@i:
  1612                           	opt stack 0
  1613                           
  1614                           ; 1 bytes @ 0x14
  1615  000042                     	ds	1
  1616  000043                     USBStdFeatureReqHandler@pUEP:
  1617                           	opt stack 0
  1618                           
  1619                           ; 2 bytes @ 0x15
  1620  000043                     	ds	2
  1621  000045                     USBStdFeatureReqHandler@current_ep_data:
  1622                           	opt stack 0
  1623                           
  1624                           ; 1 bytes @ 0x17
  1625  000045                     	ds	1
  1626  000046                     USBStdFeatureReqHandler@p:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x18
  1630  000046                     	ds	2
  1631  000048                     ??_USBCtrlEPService:
  1632  000048                     
  1633                           ; 0 bytes @ 0x1A
  1634  000048                     	ds	2
  1635  00004A                     USBCtrlEPService@setup_cnt:
  1636                           	opt stack 0
  1637                           
  1638                           ; 1 bytes @ 0x1C
  1639  00004A                     	ds	1
  1640  00004B                     USBDeviceTasks@i:
  1641                           	opt stack 0
  1642                           
  1643                           ; 1 bytes @ 0x1D
  1644  00004B                     	ds	1
  1645  00004C                     ??_ISR:
  1646                           
  1647                           ; 0 bytes @ 0x1E
  1648  00004C                     	ds	15
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postdec1	equ	0xFE5
  1656                           fsr1h	equ	0xFE2
  1657                           fsr1l	equ	0xFE1
  1658                           
  1659 ;;
  1660 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1661 ;;
  1662 ;; *************** function _main *****************
  1663 ;; Defined at:
  1664 ;;		line 91 in file "main.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  s              40    0[BANK2 ] unsigned char [20][2]
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  2  107[None  ] int 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1679 ;;      Locals:         0       0       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1680 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1681 ;;      Totals:         0       1       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1682 ;;Total ram usage:       41 bytes
  1683 ;; Hardware stack levels required when called:   17
  1684 ;; This function calls:
  1685 ;;		_I2C_LCD_Clear
  1686 ;;		_I2C_LCD_Puts
  1687 ;;		_I2C_LCD_SetCursor
  1688 ;;		_RTCC_from_RTCC
  1689 ;;		_RTCC_from_epoch
  1690 ;;		_RTCC_task
  1691 ;;		_UART_task
  1692 ;;		_USB_task
  1693 ;;		_display_time_0802
  1694 ;;		_main_init
  1695 ;;		_ringbuf_num
  1696 ;;		_ringbuf_pop
  1697 ;;		_ringbuf_put
  1698 ;; This function is called by:
  1699 ;;		Startup code after reset
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text0
  1704  010D6A                     __ptext0:
  1705                           	opt stack 0
  1706  010D6A                     _main:
  1707                           	opt stack 14
  1708                           
  1709                           ;main.c: 92: main_init();
  1710                           
  1711                           ;incstack = 0
  1712  010D6A  ECDF  F08C         	call	_main_init	;wreg free
  1713                           
  1714                           ;main.c: 94: RTCC_from_RTCC(&now);
  1715  010D6E  0EB6               	movlw	low _now
  1716  010D70  0100               	movlb	0	; () banked
  1717  010D72  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  1718  010D74  0E01               	movlw	high _now
  1719  010D76  0100               	movlb	0	; () banked
  1720  010D78  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  1721  010D7A  EC5A  F09C         	call	_RTCC_from_RTCC	;wreg free
  1722                           
  1723                           ;main.c: 95: if (now.DD == 0) {
  1724  010D7E  0101               	movlb	1	; () banked
  1725  010D80  51BE               	movf	(_now+8)& (0+255),w,b
  1726  010D82  A4D8               	btfss	status,2,c
  1727  010D84  D011               	goto	l9204
  1728                           
  1729                           ; BSR set to: 1
  1730                           ;main.c: 96: now.epoch = 0;
  1731  010D86  0E00               	movlw	0
  1732  010D88  0101               	movlb	1	; () banked
  1733  010D8A  6FB6               	movwf	_now& (0+255),b
  1734  010D8C  0E00               	movlw	0
  1735  010D8E  6FB7               	movwf	(_now+1)& (0+255),b
  1736  010D90  0E00               	movlw	0
  1737  010D92  6FB8               	movwf	(_now+2)& (0+255),b
  1738  010D94  0E00               	movlw	0
  1739  010D96  6FB9               	movwf	(_now+3)& (0+255),b
  1740                           
  1741                           ; BSR set to: 1
  1742                           ;main.c: 97: RTCC_from_epoch(&now);
  1743  010D98  0EB6               	movlw	low _now
  1744  010D9A  0100               	movlb	0	; () banked
  1745  010D9C  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  1746  010D9E  0E01               	movlw	high _now
  1747  010DA0  0100               	movlb	0	; () banked
  1748  010DA2  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  1749  010DA4  EC4D  F09C         	call	_RTCC_from_epoch	;wreg free
  1750  010DA8                     l9204:
  1751                           
  1752                           ;main.c: 98: }
  1753                           ;main.c: 100: I2C_LCD_Clear();
  1754  010DA8  EC40  F09C         	call	_I2C_LCD_Clear	;wreg free
  1755                           
  1756                           ;main.c: 101: I2C_LCD_SetCursor(0, 0);
  1757  010DAC  0E00               	movlw	0
  1758  010DAE  0100               	movlb	0	; () banked
  1759  010DB0  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1760  010DB2  0E00               	movlw	0
  1761  010DB4  EC66  F09B         	call	_I2C_LCD_SetCursor
  1762                           
  1763                           ;main.c: 102: I2C_LCD_Puts("18F27J53");
  1764  010DB8  0EA1               	movlw	low STR_1
  1765  010DBA  0100               	movlb	0	; () banked
  1766  010DBC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  1767  010DBE  0EFF               	movlw	high STR_1
  1768  010DC0  0100               	movlb	0	; () banked
  1769  010DC2  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1770  010DC4  EC95  F096         	call	_I2C_LCD_Puts	;wreg free
  1771                           
  1772                           ;main.c: 103: I2C_LCD_SetCursor(0, 1);
  1773  010DC8  0E01               	movlw	1
  1774  010DCA  0100               	movlb	0	; () banked
  1775  010DCC  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1776  010DCE  0E00               	movlw	0
  1777  010DD0  EC66  F09B         	call	_I2C_LCD_SetCursor
  1778                           
  1779                           ;main.c: 104: I2C_LCD_Puts("USB UART");
  1780  010DD4  0EAA               	movlw	low STR_2
  1781  010DD6  0100               	movlb	0	; () banked
  1782  010DD8  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  1783  010DDA  0EFF               	movlw	high STR_2
  1784  010DDC  0100               	movlb	0	; () banked
  1785  010DDE  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1786  010DE0  EC95  F096         	call	_I2C_LCD_Puts	;wreg free
  1787  010DE4  D0B6               	goto	l9258
  1788  010DE6                     l9216:
  1789                           
  1790                           ;main.c: 109: INTCONbits.GIE = 0;
  1791  010DE6  9EF2               	bcf	intcon,7,c	;volatile
  1792                           
  1793                           ;main.c: 111: USB_task();
  1794  010DE8  EC4E  F096         	call	_USB_task	;wreg free
  1795                           
  1796                           ;main.c: 112: UART_task();
  1797  010DEC  ECF5  F09B         	call	_UART_task	;wreg free
  1798                           
  1799                           ;main.c: 113: RTCC_task();
  1800  010DF0  EC0F  F09A         	call	_RTCC_task	;wreg free
  1801                           
  1802                           ;main.c: 115: if (ringbuf_num(&usb_rx)) {
  1803  010DF4  0EDC               	movlw	low _usb_rx
  1804  010DF6  0100               	movlb	0	; () banked
  1805  010DF8  6F60               	movwf	ringbuf_num@rb& (0+255),b
  1806  010DFA  0E01               	movlw	high _usb_rx
  1807  010DFC  0100               	movlb	0	; () banked
  1808  010DFE  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  1809  010E00  ECF3  F08B         	call	_ringbuf_num	;wreg free
  1810  010E04  0100               	movlb	0	; () banked
  1811  010E06  5160               	movf	?_ringbuf_num& (0+255),w,b
  1812  010E08  0100               	movlb	0	; () banked
  1813  010E0A  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1814  010E0C  B4D8               	btfsc	status,2,c
  1815  010E0E  D023               	goto	l9230
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;main.c: 116: ringbuf_put(&usb_tx, ringbuf_pop(&usb_rx));
  1819  010E10  0EE4               	movlw	low _usb_tx
  1820  010E12  0100               	movlb	0	; () banked
  1821  010E14  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  1822  010E16  0E01               	movlw	high _usb_tx
  1823  010E18  0100               	movlb	0	; () banked
  1824  010E1A  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1825  010E1C  0EDC               	movlw	low _usb_rx
  1826  010E1E  0100               	movlb	0	; () banked
  1827  010E20  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  1828  010E22  0E01               	movlw	high _usb_rx
  1829  010E24  0100               	movlb	0	; () banked
  1830  010E26  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1831  010E28  EC12  F091         	call	_ringbuf_pop	;wreg free
  1832  010E2C  0100               	movlb	0	; () banked
  1833  010E2E  6F71               	movwf	ringbuf_put@asciicode& (0+255),b
  1834  010E30  EC70  F08F         	call	_ringbuf_put	;wreg free
  1835                           
  1836                           ;main.c: 117: LATBbits.LATB7 = !LATBbits.LATB7;
  1837  010E34  BE8A               	btfsc	3978,7,c	;volatile
  1838  010E36  D004               	goto	u9110
  1839  010E38  0100               	movlb	0	; () banked
  1840  010E3A  6B9D               	clrf	??_main& (0+255),b
  1841  010E3C  2B9D               	incf	??_main& (0+255),f,b
  1842  010E3E  D002               	goto	u9128
  1843  010E40                     u9110:
  1844  010E40  0100               	movlb	0	; () banked
  1845  010E42  6B9D               	clrf	??_main& (0+255),b
  1846  010E44                     u9128:
  1847  010E44  0100               	movlb	0	; () banked
  1848  010E46  339D               	rrcf	??_main& (0+255),f,b
  1849  010E48  339D               	rrcf	??_main& (0+255),f,b
  1850  010E4A  508A               	movf	3978,w,c	;volatile
  1851  010E4C  0100               	movlb	0	; () banked
  1852  010E4E  199D               	xorwf	??_main& (0+255),w,b
  1853  010E50  0B7F               	andlw	-129
  1854  010E52  199D               	xorwf	??_main& (0+255),w,b
  1855  010E54  6E8A               	movwf	3978,c	;volatile
  1856  010E56                     l9230:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;main.c: 118: }
  1860                           ;main.c: 119: if (ringbuf_num(&uart_rx)) {
  1861  010E56  0ECC               	movlw	low _uart_rx
  1862  010E58  0100               	movlb	0	; () banked
  1863  010E5A  6F60               	movwf	ringbuf_num@rb& (0+255),b
  1864  010E5C  0E01               	movlw	high _uart_rx
  1865  010E5E  0100               	movlb	0	; () banked
  1866  010E60  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  1867  010E62  ECF3  F08B         	call	_ringbuf_num	;wreg free
  1868  010E66  0100               	movlb	0	; () banked
  1869  010E68  5160               	movf	?_ringbuf_num& (0+255),w,b
  1870  010E6A  0100               	movlb	0	; () banked
  1871  010E6C  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1872  010E6E  B4D8               	btfsc	status,2,c
  1873  010E70  D024               	goto	l9236
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;main.c: 120: ringbuf_put(&uart_tx, ringbuf_pop(&uart_rx));
  1877  010E72  0ED4               	movlw	low _uart_tx
  1878  010E74  0100               	movlb	0	; () banked
  1879  010E76  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  1880  010E78  0E01               	movlw	high _uart_tx
  1881  010E7A  0100               	movlb	0	; () banked
  1882  010E7C  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1883  010E7E  0ECC               	movlw	low _uart_rx
  1884  010E80  0100               	movlb	0	; () banked
  1885  010E82  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  1886  010E84  0E01               	movlw	high _uart_rx
  1887  010E86  0100               	movlb	0	; () banked
  1888  010E88  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1889  010E8A  EC12  F091         	call	_ringbuf_pop	;wreg free
  1890  010E8E  0100               	movlb	0	; () banked
  1891  010E90  6F71               	movwf	ringbuf_put@asciicode& (0+255),b
  1892  010E92  EC70  F08F         	call	_ringbuf_put	;wreg free
  1893                           
  1894                           ;main.c: 121: LATBbits.LATB6 = !LATBbits.LATB6;
  1895  010E96  BC8A               	btfsc	3978,6,c	;volatile
  1896  010E98  D004               	goto	u9140
  1897  010E9A  0100               	movlb	0	; () banked
  1898  010E9C  6B9D               	clrf	??_main& (0+255),b
  1899  010E9E  2B9D               	incf	??_main& (0+255),f,b
  1900  010EA0  D002               	goto	u9158
  1901  010EA2                     u9140:
  1902  010EA2  0100               	movlb	0	; () banked
  1903  010EA4  6B9D               	clrf	??_main& (0+255),b
  1904  010EA6                     u9158:
  1905  010EA6  0100               	movlb	0	; () banked
  1906  010EA8  3B9D               	swapf	??_main& (0+255),f,b
  1907  010EAA  479D               	rlncf	??_main& (0+255),f,b
  1908  010EAC  479D               	rlncf	??_main& (0+255),f,b
  1909  010EAE  508A               	movf	3978,w,c	;volatile
  1910  010EB0  0100               	movlb	0	; () banked
  1911  010EB2  199D               	xorwf	??_main& (0+255),w,b
  1912  010EB4  0BBF               	andlw	-65
  1913  010EB6  199D               	xorwf	??_main& (0+255),w,b
  1914  010EB8  6E8A               	movwf	3978,c	;volatile
  1915  010EBA                     l9236:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;main.c: 122: }
  1919                           ;main.c: 123: INTCONbits.GIE = 1;
  1920  010EBA  8EF2               	bsf	intcon,7,c	;volatile
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;main.c: 124: LATAbits.LATA2 = !LATAbits.LATA2;
  1924  010EBC  B489               	btfsc	3977,2,c	;volatile
  1925  010EBE  D004               	goto	u9160
  1926  010EC0  0100               	movlb	0	; () banked
  1927  010EC2  6B9D               	clrf	??_main& (0+255),b
  1928  010EC4  2B9D               	incf	??_main& (0+255),f,b
  1929  010EC6  D002               	goto	u9178
  1930  010EC8                     u9160:
  1931  010EC8  0100               	movlb	0	; () banked
  1932  010ECA  6B9D               	clrf	??_main& (0+255),b
  1933  010ECC                     u9178:
  1934  010ECC  0100               	movlb	0	; () banked
  1935  010ECE  479D               	rlncf	??_main& (0+255),f,b
  1936  010ED0  479D               	rlncf	??_main& (0+255),f,b
  1937  010ED2  5089               	movf	3977,w,c	;volatile
  1938  010ED4  0100               	movlb	0	; () banked
  1939  010ED6  199D               	xorwf	??_main& (0+255),w,b
  1940  010ED8  0BFB               	andlw	-5
  1941  010EDA  199D               	xorwf	??_main& (0+255),w,b
  1942  010EDC  6E89               	movwf	3977,c	;volatile
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;main.c: 126: INTCONbits.GIE = 0;
  1946  010EDE  9EF2               	bcf	intcon,7,c	;volatile
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;main.c: 127: if (time_change_flag) {
  1950  010EE0  0100               	movlb	0	; () banked
  1951  010EE2  51C1               	movf	_time_change_flag& (0+255),w,b
  1952  010EE4  B4D8               	btfsc	status,2,c
  1953  010EE6  D035               	goto	l9258
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;main.c: 128: time_change_flag = 0;
  1957  010EE8  0E00               	movlw	0
  1958  010EEA  0100               	movlb	0	; () banked
  1959  010EEC  6FC1               	movwf	_time_change_flag& (0+255),b
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;main.c: 129: char s[2][20];
  1963                           ;main.c: 130: display_time_0802(&now, s[0], s[1]);
  1964  010EEE  0EB6               	movlw	low _now
  1965  010EF0  0100               	movlb	0	; () banked
  1966  010EF2  6F97               	movwf	display_time_0802@tm& (0+255),b
  1967  010EF4  0E01               	movlw	high _now
  1968  010EF6  0100               	movlb	0	; () banked
  1969  010EF8  6F98               	movwf	(display_time_0802@tm+1)& (0+255),b
  1970  010EFA  0EA4               	movlw	low main@s
  1971  010EFC  0100               	movlb	0	; () banked
  1972  010EFE  6F99               	movwf	display_time_0802@line0& (0+255),b
  1973  010F00  0E02               	movlw	high main@s
  1974  010F02  0100               	movlb	0	; () banked
  1975  010F04  6F9A               	movwf	(display_time_0802@line0+1)& (0+255),b
  1976  010F06  0EB8               	movlw	low (main@s+20)
  1977  010F08  0100               	movlb	0	; () banked
  1978  010F0A  6F9B               	movwf	display_time_0802@line1& (0+255),b
  1979  010F0C  0E02               	movlw	high (main@s+20)
  1980  010F0E  0100               	movlb	0	; () banked
  1981  010F10  6F9C               	movwf	(display_time_0802@line1+1)& (0+255),b
  1982  010F12  ECB2  F084         	call	_display_time_0802	;wreg free
  1983                           
  1984                           ;main.c: 131: I2C_LCD_Clear();
  1985  010F16  EC40  F09C         	call	_I2C_LCD_Clear	;wreg free
  1986                           
  1987                           ;main.c: 132: I2C_LCD_SetCursor(0, 0);
  1988  010F1A  0E00               	movlw	0
  1989  010F1C  0100               	movlb	0	; () banked
  1990  010F1E  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1991  010F20  0E00               	movlw	0
  1992  010F22  EC66  F09B         	call	_I2C_LCD_SetCursor
  1993                           
  1994                           ;main.c: 133: I2C_LCD_Puts(s[0]);
  1995  010F26  0EA4               	movlw	low main@s
  1996  010F28  0100               	movlb	0	; () banked
  1997  010F2A  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  1998  010F2C  0E02               	movlw	high main@s
  1999  010F2E  0100               	movlb	0	; () banked
  2000  010F30  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2001  010F32  EC95  F096         	call	_I2C_LCD_Puts	;wreg free
  2002                           
  2003                           ;main.c: 134: I2C_LCD_SetCursor(0, 1);
  2004  010F36  0E01               	movlw	1
  2005  010F38  0100               	movlb	0	; () banked
  2006  010F3A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2007  010F3C  0E00               	movlw	0
  2008  010F3E  EC66  F09B         	call	_I2C_LCD_SetCursor
  2009                           
  2010                           ;main.c: 135: I2C_LCD_Puts(s[1]);
  2011  010F42  0EB8               	movlw	low (main@s+20)
  2012  010F44  0100               	movlb	0	; () banked
  2013  010F46  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2014  010F48  0E02               	movlw	high (main@s+20)
  2015  010F4A  0100               	movlb	0	; () banked
  2016  010F4C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2017  010F4E  EC95  F096         	call	_I2C_LCD_Puts	;wreg free
  2018  010F52                     l9258:
  2019                           
  2020                           ;main.c: 136: }
  2021                           ;main.c: 137: INTCONbits.GIE = 1;
  2022  010F52  8EF2               	bsf	intcon,7,c	;volatile
  2023  010F54  D748               	goto	l9216
  2024  010F56                     __end_of_main:
  2025                           	opt stack 0
  2026                           tblptru	equ	0xFF8
  2027                           tblptrh	equ	0xFF7
  2028                           tblptrl	equ	0xFF6
  2029                           tablat	equ	0xFF5
  2030                           intcon	equ	0xFF2
  2031                           postinc0	equ	0xFEE
  2032                           wreg	equ	0xFE8
  2033                           postdec1	equ	0xFE5
  2034                           fsr1h	equ	0xFE2
  2035                           fsr1l	equ	0xFE1
  2036                           status	equ	0xFD8
  2037                           
  2038 ;; *************** function _main_init *****************
  2039 ;; Defined at:
  2040 ;;		line 62 in file "main.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;		None               void
  2047 ;; Registers used:
  2048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:   16
  2061 ;; This function calls:
  2062 ;;		_I2C_init
  2063 ;;		_OSC_init
  2064 ;;		_RTCC_init
  2065 ;;		_ST7032_init
  2066 ;;		_UART_init
  2067 ;;		_USB_init
  2068 ;;		_ringbuf_init
  2069 ;;		_timer0_init
  2070 ;;		_timer1_init
  2071 ;;		_timer3_init
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text1
  2078  0119BE                     __ptext1:
  2079                           	opt stack 0
  2080  0119BE                     _main_init:
  2081                           	opt stack 14
  2082                           
  2083                           ;main.c: 63: OSC_init();
  2084                           
  2085                           ;incstack = 0
  2086  0119BE  EC7C  F09C         	call	_OSC_init	;wreg free
  2087                           
  2088                           ;main.c: 64: TRISA = 0b00010000;
  2089  0119C2  0E10               	movlw	16
  2090  0119C4  6E92               	movwf	3986,c	;volatile
  2091                           
  2092                           ;main.c: 65: TRISB = 0b00111111;
  2093  0119C6  0E3F               	movlw	63
  2094  0119C8  6E93               	movwf	3987,c	;volatile
  2095                           
  2096                           ;main.c: 66: TRISC = 0b10111010;
  2097  0119CA  0EBA               	movlw	186
  2098  0119CC  6E94               	movwf	3988,c	;volatile
  2099                           
  2100                           ;main.c: 67: ANCON0 = 0b11111111;
  2101  0119CE  010F               	movlb	15	; () banked
  2102  0119D0  6948               	setf	72,b	;volatile
  2103                           
  2104                           ; BSR set to: 15
  2105                           ;main.c: 68: ANCON1 = 0b00011111;
  2106  0119D2  0E1F               	movlw	31
  2107  0119D4  010F               	movlb	15	; () banked
  2108  0119D6  6F49               	movwf	73,b	;volatile
  2109                           
  2110                           ; BSR set to: 15
  2111                           ;main.c: 69: INTCON2bits.RBPU = 0;
  2112  0119D8  9EF1               	bcf	intcon2,7,c	;volatile
  2113                           
  2114                           ; BSR set to: 15
  2115                           ;main.c: 71: timer0_init(6);
  2116  0119DA  0E06               	movlw	6
  2117  0119DC  EC4B  F09A         	call	_timer0_init
  2118                           
  2119                           ;main.c: 72: timer1_init(0, 2);
  2120  0119E0  0E02               	movlw	2
  2121  0119E2  0100               	movlb	0	; () banked
  2122  0119E4  6F60               	movwf	timer1_init@clock_select& (0+255),b
  2123  0119E6  0E00               	movlw	0
  2124  0119E8  EC78  F099         	call	_timer1_init
  2125                           
  2126                           ;main.c: 73: timer3_init(2);
  2127  0119EC  0E02               	movlw	2
  2128  0119EE  EC50  F09B         	call	_timer3_init
  2129                           
  2130                           ;main.c: 74: I2C_init();
  2131  0119F2  EC73  F09C         	call	_I2C_init	;wreg free
  2132                           
  2133                           ;main.c: 75: ST7032_init();
  2134  0119F6  ECDC  F096         	call	_ST7032_init	;wreg free
  2135                           
  2136                           ;main.c: 76: RTCC_init();
  2137  0119FA  EC55  F098         	call	_RTCC_init	;wreg free
  2138                           
  2139                           ;main.c: 78: USB_init();
  2140  0119FE  EC24  F09C         	call	_USB_init	;wreg free
  2141                           
  2142                           ;main.c: 79: static uint8_t usbtx[1000];
  2143                           ;main.c: 80: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
  2144  011A02  0EE4               	movlw	low _usb_tx
  2145  011A04  0100               	movlb	0	; () banked
  2146  011A06  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2147  011A08  0E01               	movlw	high _usb_tx
  2148  011A0A  0100               	movlb	0	; () banked
  2149  011A0C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2150  011A0E  0EB0               	movlw	low main_init@usbtx
  2151  011A10  0100               	movlb	0	; () banked
  2152  011A12  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2153  011A14  0E08               	movlw	high main_init@usbtx
  2154  011A16  0100               	movlb	0	; () banked
  2155  011A18  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2156  011A1A  0E03               	movlw	3
  2157  011A1C  0100               	movlb	0	; () banked
  2158  011A1E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2159  011A20  0EE8               	movlw	232
  2160  011A22  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2161  011A24  EC4E  F099         	call	_ringbuf_init	;wreg free
  2162                           
  2163                           ;main.c: 81: static uint8_t usbrx[100];
  2164                           ;main.c: 82: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
  2165  011A28  0EDC               	movlw	low _usb_rx
  2166  011A2A  0100               	movlb	0	; () banked
  2167  011A2C  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2168  011A2E  0E01               	movlw	high _usb_rx
  2169  011A30  0100               	movlb	0	; () banked
  2170  011A32  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2171  011A34  0E00               	movlw	low main_init@usbrx
  2172  011A36  0100               	movlb	0	; () banked
  2173  011A38  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2174  011A3A  0E02               	movlw	high main_init@usbrx
  2175  011A3C  0100               	movlb	0	; () banked
  2176  011A3E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2177  011A40  0E00               	movlw	0
  2178  011A42  0100               	movlb	0	; () banked
  2179  011A44  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2180  011A46  0E64               	movlw	100
  2181  011A48  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2182  011A4A  EC4E  F099         	call	_ringbuf_init	;wreg free
  2183                           
  2184                           ;main.c: 84: UART_init();
  2185  011A4E  ECE4  F09B         	call	_UART_init	;wreg free
  2186                           
  2187                           ;main.c: 85: static uint8_t uarttx[1000];
  2188                           ;main.c: 86: ringbuf_init(&uart_tx, uarttx, sizeof (uarttx));
  2189  011A52  0ED4               	movlw	low _uart_tx
  2190  011A54  0100               	movlb	0	; () banked
  2191  011A56  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2192  011A58  0E01               	movlw	high _uart_tx
  2193  011A5A  0100               	movlb	0	; () banked
  2194  011A5C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2195  011A5E  0EC8               	movlw	low main_init@uarttx
  2196  011A60  0100               	movlb	0	; () banked
  2197  011A62  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2198  011A64  0E04               	movlw	high main_init@uarttx
  2199  011A66  0100               	movlb	0	; () banked
  2200  011A68  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2201  011A6A  0E03               	movlw	3
  2202  011A6C  0100               	movlb	0	; () banked
  2203  011A6E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2204  011A70  0EE8               	movlw	232
  2205  011A72  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2206  011A74  EC4E  F099         	call	_ringbuf_init	;wreg free
  2207                           
  2208                           ;main.c: 87: static uint8_t uartrx[100];
  2209                           ;main.c: 88: ringbuf_init(&uart_rx, uartrx, sizeof (uartrx));
  2210  011A78  0ECC               	movlw	low _uart_rx
  2211  011A7A  0100               	movlb	0	; () banked
  2212  011A7C  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2213  011A7E  0E01               	movlw	high _uart_rx
  2214  011A80  0100               	movlb	0	; () banked
  2215  011A82  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2216  011A84  0E00               	movlw	low main_init@uartrx
  2217  011A86  0100               	movlb	0	; () banked
  2218  011A88  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2219  011A8A  0E03               	movlw	high main_init@uartrx
  2220  011A8C  0100               	movlb	0	; () banked
  2221  011A8E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2222  011A90  0E00               	movlw	0
  2223  011A92  0100               	movlb	0	; () banked
  2224  011A94  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2225  011A96  0E64               	movlw	100
  2226  011A98  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2227  011A9A  EC4E  F099         	call	_ringbuf_init	;wreg free
  2228  011A9E  0012               	return		;funcret
  2229  011AA0                     __end_of_main_init:
  2230                           	opt stack 0
  2231                           tblptru	equ	0xFF8
  2232                           tblptrh	equ	0xFF7
  2233                           tblptrl	equ	0xFF6
  2234                           tablat	equ	0xFF5
  2235                           intcon	equ	0xFF2
  2236                           intcon2	equ	0xFF1
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           postdec1	equ	0xFE5
  2240                           fsr1h	equ	0xFE2
  2241                           fsr1l	equ	0xFE1
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function _timer3_init *****************
  2245 ;; Defined at:
  2246 ;;		line 101 in file "../My_library/My_PIC.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  prescaler       1    wreg     unsigned char 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;		None               void
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2262 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2263 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;Total ram usage:        2 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:   11
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_main_init
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text2
  2275  0136A0                     __ptext2:
  2276                           	opt stack 0
  2277  0136A0                     _timer3_init:
  2278                           	opt stack 18
  2279                           
  2280                           ;incstack = 0
  2281                           ;timer3_init@prescaler stored from wreg
  2282  0136A0  0100               	movlb	0	; () banked
  2283  0136A2  6F61               	movwf	timer3_init@prescaler& (0+255),b
  2284                           
  2285                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  2286  0136A4  0E3F               	movlw	-193
  2287  0136A6  1679               	andwf	3961,f,c	;volatile
  2288                           
  2289                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  2290  0136A8  9679               	bcf	3961,3,c	;volatile
  2291                           
  2292                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  2293  0136AA  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  2294  0136AE  0100               	movlb	0	; () banked
  2295  0136B0  3B60               	swapf	??_timer3_init& (0+255),f,b
  2296  0136B2  5079               	movf	3961,w,c	;volatile
  2297  0136B4  0100               	movlb	0	; () banked
  2298  0136B6  1960               	xorwf	??_timer3_init& (0+255),w,b
  2299  0136B8  0BCF               	andlw	-49
  2300  0136BA  1960               	xorwf	??_timer3_init& (0+255),w,b
  2301  0136BC  6E79               	movwf	3961,c	;volatile
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  2305  0136BE  9E79               	bcf	3961,7,c	;volatile
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  2309  0136C0  8079               	bsf	3961,0,c	;volatile
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  2313  0136C2  92A2               	bcf	4002,1,c	;volatile
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  2317  0136C4  92A1               	bcf	4001,1,c	;volatile
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  2321  0136C6  82A0               	bsf	4000,1,c	;volatile
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  2325  0136C8  8CF2               	bsf	intcon,6,c	;volatile
  2326                           
  2327                           ; BSR set to: 0
  2328  0136CA  0012               	return		;funcret
  2329  0136CC                     __end_of_timer3_init:
  2330                           	opt stack 0
  2331                           tblptru	equ	0xFF8
  2332                           tblptrh	equ	0xFF7
  2333                           tblptrl	equ	0xFF6
  2334                           tablat	equ	0xFF5
  2335                           intcon	equ	0xFF2
  2336                           intcon2	equ	0xFF1
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           postdec1	equ	0xFE5
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           status	equ	0xFD8
  2343                           
  2344 ;; *************** function _timer1_init *****************
  2345 ;; Defined at:
  2346 ;;		line 70 in file "../My_library/My_PIC.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  prescaler       1    wreg     unsigned char 
  2349 ;;  clock_select    1    0[BANK0 ] unsigned char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  prescaler       1    2[BANK0 ] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;		None               void
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2361 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2363 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2364 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;Total ram usage:        3 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:   11
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_main_init
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text3
  2376  0132F0                     __ptext3:
  2377                           	opt stack 0
  2378  0132F0                     _timer1_init:
  2379                           	opt stack 18
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;incstack = 0
  2383                           ;timer1_init@prescaler stored from wreg
  2384  0132F0  0100               	movlb	0	; () banked
  2385  0132F2  6F62               	movwf	timer1_init@prescaler& (0+255),b
  2386                           
  2387                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  2388  0132F4  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  2389  0132F8  0100               	movlb	0	; () banked
  2390  0132FA  3B61               	swapf	??_timer1_init& (0+255),f,b
  2391  0132FC  4761               	rlncf	??_timer1_init& (0+255),f,b
  2392  0132FE  4761               	rlncf	??_timer1_init& (0+255),f,b
  2393  013300  50CD               	movf	4045,w,c	;volatile
  2394  013302  0100               	movlb	0	; () banked
  2395  013304  1961               	xorwf	??_timer1_init& (0+255),w,b
  2396  013306  0B3F               	andlw	-193
  2397  013308  1961               	xorwf	??_timer1_init& (0+255),w,b
  2398  01330A  6ECD               	movwf	4045,c	;volatile
  2399                           
  2400                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  2401  01330C  0E02               	movlw	2
  2402  01330E  0100               	movlb	0	; () banked
  2403  013310  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  2404  013312  A4D8               	btfss	status,2,c
  2405  013314  D002               	goto	l350
  2406                           
  2407                           ; BSR set to: 0
  2408  013316  86CD               	bsf	4045,3,c	;volatile
  2409  013318  D001               	goto	l8756
  2410  01331A                     l350:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  2414  01331A  96CD               	bcf	4045,3,c	;volatile
  2415  01331C                     l8756:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  2419  01331C  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  2420  013320  0100               	movlb	0	; () banked
  2421  013322  3B61               	swapf	??_timer1_init& (0+255),f,b
  2422  013324  50CD               	movf	4045,w,c	;volatile
  2423  013326  0100               	movlb	0	; () banked
  2424  013328  1961               	xorwf	??_timer1_init& (0+255),w,b
  2425  01332A  0BCF               	andlw	-49
  2426  01332C  1961               	xorwf	??_timer1_init& (0+255),w,b
  2427  01332E  6ECD               	movwf	4045,c	;volatile
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  2431  013330  84CD               	bsf	4045,2,c	;volatile
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  2435  013332  92CD               	bcf	4045,1,c	;volatile
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  2439  013334  80CD               	bsf	4045,0,c	;volatile
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  2443  013336  909F               	bcf	3999,0,c	;volatile
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  2447  013338  909E               	bcf	3998,0,c	;volatile
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  2451  01333A  809D               	bsf	3997,0,c	;volatile
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  2455  01333C  8CF2               	bsf	intcon,6,c	;volatile
  2456                           
  2457                           ; BSR set to: 0
  2458  01333E  0012               	return		;funcret
  2459  013340                     __end_of_timer1_init:
  2460                           	opt stack 0
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           intcon	equ	0xFF2
  2466                           intcon2	equ	0xFF1
  2467                           postinc0	equ	0xFEE
  2468                           wreg	equ	0xFE8
  2469                           postdec1	equ	0xFE5
  2470                           fsr1h	equ	0xFE2
  2471                           fsr1l	equ	0xFE1
  2472                           status	equ	0xFD8
  2473                           
  2474 ;; *************** function _timer0_init *****************
  2475 ;; Defined at:
  2476 ;;		line 34 in file "../My_library/My_PIC.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  prescaler       1    wreg     unsigned char 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;		None               void
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2492 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2494 ;;Total ram usage:        2 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:   11
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_main_init
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text4
  2505  013496                     __ptext4:
  2506                           	opt stack 0
  2507  013496                     _timer0_init:
  2508                           	opt stack 18
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;incstack = 0
  2512                           ;timer0_init@prescaler stored from wreg
  2513  013496  0100               	movlb	0	; () banked
  2514  013498  6F61               	movwf	timer0_init@prescaler& (0+255),b
  2515                           
  2516                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  2517  01349A  8ED5               	bsf	4053,7,c	;volatile
  2518                           
  2519                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  2520  01349C  8CD5               	bsf	4053,6,c	;volatile
  2521                           
  2522                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  2523  01349E  9AD5               	bcf	4053,5,c	;volatile
  2524                           
  2525                           ;My_PIC.c: 38: if (prescaler == 0) {
  2526  0134A0  0100               	movlb	0	; () banked
  2527  0134A2  5161               	movf	timer0_init@prescaler& (0+255),w,b
  2528  0134A4  0100               	movlb	0	; () banked
  2529  0134A6  A4D8               	btfss	status,2,c
  2530  0134A8  D002               	goto	l345
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  2534  0134AA  86D5               	bsf	4053,3,c	;volatile
  2535                           
  2536                           ;My_PIC.c: 40: } else {
  2537  0134AC  D00C               	goto	l8744
  2538  0134AE                     l345:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  2542  0134AE  96D5               	bcf	4053,3,c	;volatile
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  2546  0134B0  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  2547  0134B4  0EFF               	movlw	255
  2548  0134B6  0100               	movlb	0	; () banked
  2549  0134B8  2760               	addwf	??_timer0_init& (0+255),f,b
  2550  0134BA  50D5               	movf	4053,w,c	;volatile
  2551  0134BC  0100               	movlb	0	; () banked
  2552  0134BE  1960               	xorwf	??_timer0_init& (0+255),w,b
  2553  0134C0  0BF8               	andlw	-8
  2554  0134C2  1960               	xorwf	??_timer0_init& (0+255),w,b
  2555  0134C4  6ED5               	movwf	4053,c	;volatile
  2556  0134C6                     l8744:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;My_PIC.c: 43: }
  2560                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  2561  0134C6  8AF2               	bsf	intcon,5,c	;volatile
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  2565  0134C8  94F2               	bcf	intcon,2,c	;volatile
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  2569  0134CA  94F1               	bcf	intcon2,2,c	;volatile
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  2573  0134CC  8CF2               	bsf	intcon,6,c	;volatile
  2574                           
  2575                           ; BSR set to: 0
  2576  0134CE  0012               	return		;funcret
  2577  0134D0                     __end_of_timer0_init:
  2578                           	opt stack 0
  2579                           tblptru	equ	0xFF8
  2580                           tblptrh	equ	0xFF7
  2581                           tblptrl	equ	0xFF6
  2582                           tablat	equ	0xFF5
  2583                           intcon	equ	0xFF2
  2584                           intcon2	equ	0xFF1
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           postdec1	equ	0xFE5
  2588                           fsr1h	equ	0xFE2
  2589                           fsr1l	equ	0xFE1
  2590                           status	equ	0xFD8
  2591                           
  2592 ;; *************** function _ringbuf_init *****************
  2593 ;; Defined at:
  2594 ;;		line 5 in file "../My_library/My_ringbuf.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  2597 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_rx(8), uart_tx(8), 
  2598 ;;		 -> usb_rx(8), usb_tx(8), 
  2599 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  2600 ;;		 -> terminal_task@buf(100), I2C_LCD_init@buf(200), main_init@uartrx(100), main_init@uarttx(1000), 
  2601 ;;		 -> main_init@usbrx(100), main_init@usbtx(1000), 
  2602 ;;  bufsize         2    4[BANK0 ] unsigned int 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;		None               void
  2607 ;; Registers used:
  2608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2614 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;Total ram usage:        6 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:   11
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_main_init
  2625 ;;		_I2C_LCD_init
  2626 ;;		_terminal_task
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text5
  2631  01329C                     __ptext5:
  2632                           	opt stack 0
  2633  01329C                     _ringbuf_init:
  2634                           	opt stack 18
  2635                           
  2636                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;incstack = 0
  2640  01329C  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  2641  0132A0  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  2642  0132A4  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  2643  0132A8  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  2644                           
  2645                           ;My_ringbuf.c: 7: rb->size = bufsize;
  2646  0132AC  0100               	movlb	0	; () banked
  2647  0132AE  EE20 F002          	lfsr	2,2
  2648  0132B2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  2649  0132B4  26D9               	addwf	fsr2l,f,c
  2650  0132B6  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2651  0132B8  22DA               	addwfc	fsr2h,f,c
  2652  0132BA  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  2653  0132BE  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;My_ringbuf.c: 8: rb->head = 0;
  2657  0132C2  0100               	movlb	0	; () banked
  2658  0132C4  EE20 F004          	lfsr	2,4
  2659  0132C8  5160               	movf	ringbuf_init@rb& (0+255),w,b
  2660  0132CA  26D9               	addwf	fsr2l,f,c
  2661  0132CC  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2662  0132CE  22DA               	addwfc	fsr2h,f,c
  2663  0132D0  0E00               	movlw	0
  2664  0132D2  6EDE               	movwf	postinc2,c
  2665  0132D4  0E00               	movlw	0
  2666  0132D6  6EDD               	movwf	postdec2,c
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;My_ringbuf.c: 9: rb->tail = 0;
  2670  0132D8  0100               	movlb	0	; () banked
  2671  0132DA  EE20 F006          	lfsr	2,6
  2672  0132DE  5160               	movf	ringbuf_init@rb& (0+255),w,b
  2673  0132E0  26D9               	addwf	fsr2l,f,c
  2674  0132E2  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2675  0132E4  22DA               	addwfc	fsr2h,f,c
  2676  0132E6  0E00               	movlw	0
  2677  0132E8  6EDE               	movwf	postinc2,c
  2678  0132EA  0E00               	movlw	0
  2679  0132EC  6EDD               	movwf	postdec2,c
  2680                           
  2681                           ; BSR set to: 0
  2682  0132EE  0012               	return		;funcret
  2683  0132F0                     __end_of_ringbuf_init:
  2684                           	opt stack 0
  2685                           tblptru	equ	0xFF8
  2686                           tblptrh	equ	0xFF7
  2687                           tblptrl	equ	0xFF6
  2688                           tablat	equ	0xFF5
  2689                           intcon	equ	0xFF2
  2690                           intcon2	equ	0xFF1
  2691                           postinc0	equ	0xFEE
  2692                           wreg	equ	0xFE8
  2693                           postdec1	equ	0xFE5
  2694                           fsr1h	equ	0xFE2
  2695                           fsr1l	equ	0xFE1
  2696                           postinc2	equ	0xFDE
  2697                           postdec2	equ	0xFDD
  2698                           fsr2h	equ	0xFDA
  2699                           fsr2l	equ	0xFD9
  2700                           status	equ	0xFD8
  2701                           
  2702 ;; *************** function _USB_init *****************
  2703 ;; Defined at:
  2704 ;;		line 11 in file "../My_library/My_usb_cdc.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;		None               void
  2711 ;; Registers used:
  2712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2722 ;;Total ram usage:        0 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:   13
  2725 ;; This function calls:
  2726 ;;		_USBDeviceAttach
  2727 ;;		_USBDeviceInit
  2728 ;; This function is called by:
  2729 ;;		_main_init
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text6
  2734  013848                     __ptext6:
  2735                           	opt stack 0
  2736  013848                     _USB_init:
  2737                           	opt stack 16
  2738                           
  2739                           ;My_usb_cdc.c: 12: USBDeviceInit();
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;incstack = 0
  2743  013848  EC71  F088         	call	_USBDeviceInit	;wreg free
  2744                           
  2745                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  2746  01384C  EC68  F09A         	call	_USBDeviceAttach	;wreg free
  2747                           
  2748                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
  2749  013850  0E00               	movlw	0
  2750  013852  0101               	movlb	1	; () banked
  2751  013854  6FEC               	movwf	_line_coding& (0+255),b
  2752  013856  0EC2               	movlw	194
  2753  013858  6FED               	movwf	(_line_coding+1)& (0+255),b
  2754  01385A  0E01               	movlw	1
  2755  01385C  6FEE               	movwf	(_line_coding+2)& (0+255),b
  2756  01385E  0E00               	movlw	0
  2757  013860  6FEF               	movwf	(_line_coding+3)& (0+255),b
  2758                           
  2759                           ; BSR set to: 1
  2760  013862  0012               	return		;funcret
  2761  013864                     __end_of_USB_init:
  2762                           	opt stack 0
  2763                           tblptru	equ	0xFF8
  2764                           tblptrh	equ	0xFF7
  2765                           tblptrl	equ	0xFF6
  2766                           tablat	equ	0xFF5
  2767                           intcon	equ	0xFF2
  2768                           intcon2	equ	0xFF1
  2769                           postinc0	equ	0xFEE
  2770                           wreg	equ	0xFE8
  2771                           postdec1	equ	0xFE5
  2772                           fsr1h	equ	0xFE2
  2773                           fsr1l	equ	0xFE1
  2774                           postinc2	equ	0xFDE
  2775                           postdec2	equ	0xFDD
  2776                           fsr2h	equ	0xFDA
  2777                           fsr2l	equ	0xFD9
  2778                           status	equ	0xFD8
  2779                           
  2780 ;; *************** function _USBDeviceInit *****************
  2781 ;; Defined at:
  2782 ;;		line 298 in file "../My_library/usb/usb_device.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  i               1    8[BANK0 ] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;		None               void
  2789 ;; Registers used:
  2790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2799 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;Total ram usage:        1 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:   12
  2803 ;; This function calls:
  2804 ;;		_memset
  2805 ;; This function is called by:
  2806 ;;		_USB_init
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text7
  2811  0110E2                     __ptext7:
  2812                           	opt stack 0
  2813  0110E2                     _USBDeviceInit:
  2814                           	opt stack 16
  2815                           
  2816                           ;usb_device.c: 300: uint8_t i;
  2817                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  2818                           
  2819                           ; BSR set to: 1
  2820                           ;incstack = 0
  2821  0110E2  98A0               	bcf	4000,4,c	;volatile
  2822                           
  2823                           ;usb_device.c: 305: {UEIR = 0;};
  2824  0110E4  0E00               	movlw	0
  2825  0110E6  6E63               	movwf	3939,c	;volatile
  2826                           
  2827                           ;usb_device.c: 308: {UIR = 0;};
  2828  0110E8  0E00               	movlw	0
  2829  0110EA  6E62               	movwf	3938,c	;volatile
  2830                           
  2831                           ;usb_device.c: 311: UEP0 = 0;
  2832  0110EC  0E00               	movlw	0
  2833  0110EE  010F               	movlb	15	; () banked
  2834  0110F0  6F26               	movwf	38,b	;volatile
  2835                           
  2836                           ; BSR set to: 15
  2837                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  2838  0110F2  0E27               	movlw	39
  2839  0110F4  0100               	movlb	0	; () banked
  2840  0110F6  6F60               	movwf	memset@p1& (0+255),b
  2841  0110F8  0E0F               	movlw	15
  2842  0110FA  0100               	movlb	0	; () banked
  2843  0110FC  6F61               	movwf	(memset@p1+1)& (0+255),b
  2844  0110FE  0E00               	movlw	0
  2845  011100  0100               	movlb	0	; () banked
  2846  011102  6F63               	movwf	(memset@c+1)& (0+255),b
  2847  011104  0E00               	movlw	0
  2848  011106  6F62               	movwf	memset@c& (0+255),b
  2849  011108  0E00               	movlw	0
  2850  01110A  0100               	movlb	0	; () banked
  2851  01110C  6F65               	movwf	(memset@n+1)& (0+255),b
  2852  01110E  0E02               	movlw	2
  2853  011110  6F64               	movwf	memset@n& (0+255),b
  2854  011112  ECD7  F09A         	call	_memset	;wreg free
  2855                           
  2856                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  2857  011116  0E16               	movlw	22
  2858  011118  010F               	movlb	15	; () banked
  2859  01111A  6F39               	movwf	57,b	;volatile
  2860                           
  2861                           ; BSR set to: 15
  2862  01111C  0E9F               	movlw	159
  2863  01111E  010F               	movlb	15	; () banked
  2864  011120  6F37               	movwf	55,b	;volatile
  2865                           
  2866                           ; BSR set to: 15
  2867  011122  0E7B               	movlw	123
  2868  011124  010F               	movlb	15	; () banked
  2869  011126  6F36               	movwf	54,b	;volatile
  2870                           
  2871                           ; BSR set to: 15
  2872                           ;usb_device.c: 318: ;
  2873                           ;usb_device.c: 321: ;
  2874                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  2875  011128  0E00               	movlw	0
  2876  01112A  0100               	movlb	0	; () banked
  2877  01112C  6F68               	movwf	USBDeviceInit@i& (0+255),b
  2878  01112E                     l8542:
  2879                           
  2880                           ; BSR set to: 0
  2881  01112E  0E0B               	movlw	11
  2882  011130  0100               	movlb	0	; () banked
  2883  011132  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  2884  011134  D001               	goto	l8546
  2885  011136  D010               	goto	l1068
  2886  011138                     l8546:
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;usb_device.c: 325: {
  2890                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  2891  011138  0100               	movlb	0	; () banked
  2892  01113A  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2893  01113C  0D04               	mullw	4
  2894  01113E  0E00               	movlw	0
  2895  011140  24F3               	addwf	prodl,w,c
  2896  011142  6ED9               	movwf	fsr2l,c
  2897  011144  0E0D               	movlw	13
  2898  011146  20F4               	addwfc	prodh,w,c
  2899  011148  6EDA               	movwf	fsr2h,c
  2900  01114A  6ADE               	clrf	postinc2,c
  2901  01114C  6ADE               	clrf	postinc2,c
  2902  01114E  6ADE               	clrf	postinc2,c
  2903  011150  6ADD               	clrf	postdec2,c
  2904                           
  2905                           ; BSR set to: 0
  2906  011152  0100               	movlb	0	; () banked
  2907  011154  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  2908  011156  D7EB               	goto	l8542
  2909  011158                     l1068:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;usb_device.c: 327: }
  2913                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  2914  011158  8C65               	bsf	3941,6,c	;volatile
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;usb_device.c: 333: UADDR = 0x00;
  2918  01115A  0E00               	movlw	0
  2919  01115C  010F               	movlb	15	; () banked
  2920  01115E  6F38               	movwf	56,b	;volatile
  2921                           
  2922                           ; BSR set to: 15
  2923                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  2924  011160  9865               	bcf	3941,4,c	;volatile
  2925                           
  2926                           ; BSR set to: 15
  2927                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  2928  011162  9C65               	bcf	3941,6,c	;volatile
  2929                           
  2930                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  2931  011164  D009               	goto	l8566
  2932  011166                     l8558:
  2933                           
  2934                           ;usb_device.c: 343: {
  2935                           ;usb_device.c: 344: (UIR &= 0xF7);
  2936  011166  9662               	bcf	3938,3,c	;volatile
  2937                           
  2938                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  2939  011168  0E00               	movlw	0
  2940  01116A  6E0D               	movwf	_inPipes+3,c	;volatile
  2941                           
  2942                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  2943  01116C  0E00               	movlw	0
  2944  01116E  6E04               	movwf	_outPipes+3,c	;volatile
  2945                           
  2946                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  2947  011170  0E00               	movlw	0
  2948  011172  6E06               	movwf	_outPipes+5,c	;volatile
  2949  011174  0E00               	movlw	0
  2950  011176  6E05               	movwf	_outPipes+4,c	;volatile
  2951  011178                     l8566:
  2952  011178  B662               	btfsc	3938,3,c	;volatile
  2953  01117A  D7F5               	goto	l8558
  2954                           
  2955                           ;usb_device.c: 349: }
  2956                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  2957  01117C  0E01               	movlw	1
  2958  01117E  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  2959                           
  2960                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  2961  011180  0E01               	movlw	1
  2962  011182  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  2963                           
  2964                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  2965  011184  0E00               	movlw	0
  2966  011186  6E22               	movwf	_USBDeferINDataStagePackets,c	;volatile
  2967                           
  2968                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  2969  011188  0E00               	movlw	0
  2970  01118A  6E23               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  2971                           
  2972                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  2973  01118C  0E00               	movlw	0
  2974  01118E  0100               	movlb	0	; () banked
  2975  011190  6FB9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  2976                           
  2977                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  2978  011192  0E00               	movlw	0
  2979  011194  0100               	movlb	0	; () banked
  2980  011196  6F68               	movwf	USBDeviceInit@i& (0+255),b
  2981  011198                     l8570:
  2982                           
  2983                           ; BSR set to: 0
  2984  011198  0E02               	movlw	2
  2985  01119A  0100               	movlb	0	; () banked
  2986  01119C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  2987  01119E  D001               	goto	l8574
  2988  0111A0  D033               	goto	l8580
  2989  0111A2                     l8574:
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;usb_device.c: 363: {
  2993                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  2994  0111A2  0100               	movlb	0	; () banked
  2995  0111A4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  2996  0111A6  0D02               	mullw	2
  2997  0111A8  0E10               	movlw	low _pBDTEntryIn
  2998  0111AA  24F3               	addwf	prodl,w,c
  2999  0111AC  6ED9               	movwf	fsr2l,c
  3000  0111AE  0E00               	movlw	high _pBDTEntryIn
  3001  0111B0  20F4               	addwfc	prodh,w,c
  3002  0111B2  6EDA               	movwf	fsr2h,c
  3003  0111B4  0E00               	movlw	0
  3004  0111B6  6EDE               	movwf	postinc2,c
  3005  0111B8  0E00               	movlw	0
  3006  0111BA  6EDD               	movwf	postdec2,c
  3007                           
  3008                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  3009  0111BC  0100               	movlb	0	; () banked
  3010  0111BE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  3011  0111C0  0D02               	mullw	2
  3012  0111C2  0E9E               	movlw	low _pBDTEntryOut
  3013  0111C4  24F3               	addwf	prodl,w,c
  3014  0111C6  6ED9               	movwf	fsr2l,c
  3015  0111C8  0E00               	movlw	high _pBDTEntryOut
  3016  0111CA  20F4               	addwfc	prodh,w,c
  3017  0111CC  6EDA               	movwf	fsr2h,c
  3018  0111CE  0E00               	movlw	0
  3019  0111D0  6EDE               	movwf	postinc2,c
  3020  0111D2  0E00               	movlw	0
  3021  0111D4  6EDD               	movwf	postdec2,c
  3022                           
  3023                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  3024  0111D6  0100               	movlb	0	; () banked
  3025  0111D8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  3026  0111DA  0D01               	mullw	1
  3027  0111DC  0E16               	movlw	low _ep_data_in
  3028  0111DE  24F3               	addwf	prodl,w,c
  3029  0111E0  6ED9               	movwf	fsr2l,c
  3030  0111E2  0E00               	movlw	high _ep_data_in
  3031  0111E4  20F4               	addwfc	prodh,w,c
  3032  0111E6  6EDA               	movwf	fsr2h,c
  3033  0111E8  0E00               	movlw	0
  3034  0111EA  6EDF               	movwf	indf2,c
  3035                           
  3036                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  3037  0111EC  0100               	movlb	0	; () banked
  3038  0111EE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  3039  0111F0  0D01               	mullw	1
  3040  0111F2  0E19               	movlw	low _ep_data_out
  3041  0111F4  24F3               	addwf	prodl,w,c
  3042  0111F6  6ED9               	movwf	fsr2l,c
  3043  0111F8  0E00               	movlw	high _ep_data_out
  3044  0111FA  20F4               	addwfc	prodh,w,c
  3045  0111FC  6EDA               	movwf	fsr2h,c
  3046  0111FE  0E00               	movlw	0
  3047  011200  6EDF               	movwf	indf2,c
  3048                           
  3049                           ; BSR set to: 0
  3050  011202  0100               	movlb	0	; () banked
  3051  011204  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  3052  011206  D7C8               	goto	l8570
  3053  011208                     l8580:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;usb_device.c: 368: }
  3057                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3058  011208  0E08               	movlw	8
  3059  01120A  6E10               	movwf	_pBDTEntryIn,c
  3060  01120C  0E0D               	movlw	13
  3061  01120E  6E11               	movwf	_pBDTEntryIn+1,c
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  3065  011210  0E16               	movlw	22
  3066  011212  010F               	movlb	15	; () banked
  3067  011214  6F26               	movwf	38,b	;volatile
  3068                           
  3069                           ; BSR set to: 15
  3070                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  3071  011216  0E0D               	movlw	13
  3072  011218  010D               	movlb	13	; () banked
  3073  01121A  6F03               	movwf	3,b	;volatile
  3074  01121C  0E30               	movlw	48
  3075  01121E  6F02               	movwf	2,b	;volatile
  3076                           
  3077                           ; BSR set to: 13
  3078                           ;usb_device.c: 376: BDT[0].CNT = 8;
  3079  011220  0E08               	movlw	8
  3080  011222  010D               	movlb	13	; () banked
  3081  011224  6F01               	movwf	1,b	;volatile
  3082                           
  3083                           ; BSR set to: 13
  3084                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  3085  011226  0E04               	movlw	4
  3086  011228  010D               	movlb	13	; () banked
  3087  01122A  6F00               	movwf	0,b	;volatile
  3088                           
  3089                           ; BSR set to: 13
  3090                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  3091  01122C  010D               	movlb	13	; () banked
  3092  01122E  8F00               	bsf	0,7,b	;volatile
  3093                           
  3094                           ; BSR set to: 13
  3095                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  3096  011230  0E00               	movlw	0
  3097  011232  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  3098                           
  3099                           ; BSR set to: 13
  3100                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  3101  011234  0E00               	movlw	0
  3102  011236  6E25               	movwf	_USBDeviceState,c	;volatile
  3103                           
  3104                           ; BSR set to: 13
  3105  011238  0012               	return		;funcret
  3106  01123A                     __end_of_USBDeviceInit:
  3107                           	opt stack 0
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           prodh	equ	0xFF4
  3113                           prodl	equ	0xFF3
  3114                           intcon	equ	0xFF2
  3115                           intcon2	equ	0xFF1
  3116                           postinc0	equ	0xFEE
  3117                           wreg	equ	0xFE8
  3118                           postdec1	equ	0xFE5
  3119                           fsr1h	equ	0xFE2
  3120                           fsr1l	equ	0xFE1
  3121                           indf2	equ	0xFDF
  3122                           postinc2	equ	0xFDE
  3123                           postdec2	equ	0xFDD
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8
  3127                           
  3128 ;; *************** function _memset *****************
  3129 ;; Defined at:
  3130 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  p1              2    0[BANK0 ] PTR void 
  3133 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  3134 ;;  c               2    2[BANK0 ] int 
  3135 ;;  n               2    4[BANK0 ] unsigned int 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  p               2    6[BANK0 ] PTR unsigned char 
  3138 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  2    0[BANK0 ] PTR void 
  3141 ;; Registers used:
  3142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3148 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3151 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3152 ;;Total ram usage:        8 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:   11
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_USBDeviceInit
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text8
  3163  0135AE                     __ptext8:
  3164                           	opt stack 0
  3165  0135AE                     _memset:
  3166                           	opt stack 16
  3167                           
  3168                           ; BSR set to: 13
  3169                           ;incstack = 0
  3170  0135AE  C060  F066         	movff	memset@p1,memset@p
  3171  0135B2  C061  F067         	movff	memset@p1+1,memset@p+1
  3172  0135B6  D009               	goto	l8250
  3173  0135B8                     l8246:
  3174  0135B8  C066  FFD9         	movff	memset@p,fsr2l
  3175  0135BC  C067  FFDA         	movff	memset@p+1,fsr2h
  3176  0135C0  C062  FFDF         	movff	memset@c,indf2
  3177  0135C4  0100               	movlb	0	; () banked
  3178  0135C6  4B66               	infsnz	memset@p& (0+255),f,b
  3179  0135C8  2B67               	incf	(memset@p+1)& (0+255),f,b
  3180  0135CA                     l8250:
  3181  0135CA  0100               	movlb	0	; () banked
  3182  0135CC  0764               	decf	memset@n& (0+255),f,b
  3183  0135CE  A0D8               	btfss	status,0,c
  3184  0135D0  0765               	decf	(memset@n+1)& (0+255),f,b
  3185  0135D2  0100               	movlb	0	; () banked
  3186  0135D4  2964               	incf	memset@n& (0+255),w,b
  3187  0135D6  E1F0               	bnz	l8246
  3188  0135D8  0100               	movlb	0	; () banked
  3189  0135DA  2965               	incf	(memset@n+1)& (0+255),w,b
  3190  0135DC  B4D8               	btfsc	status,2,c
  3191  0135DE  0012               	return	
  3192  0135E0  D7EB               	goto	l8246
  3193  0135E2                     __end_of_memset:
  3194                           	opt stack 0
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           prodh	equ	0xFF4
  3200                           prodl	equ	0xFF3
  3201                           intcon	equ	0xFF2
  3202                           intcon2	equ	0xFF1
  3203                           postinc0	equ	0xFEE
  3204                           wreg	equ	0xFE8
  3205                           postdec1	equ	0xFE5
  3206                           fsr1h	equ	0xFE2
  3207                           fsr1l	equ	0xFE1
  3208                           indf2	equ	0xFDF
  3209                           postinc2	equ	0xFDE
  3210                           postdec2	equ	0xFDD
  3211                           fsr2h	equ	0xFDA
  3212                           fsr2l	equ	0xFD9
  3213                           status	equ	0xFD8
  3214                           
  3215 ;; *************** function _USBDeviceAttach *****************
  3216 ;; Defined at:
  3217 ;;		line 1352 in file "../My_library/usb/usb_device.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;		None               void
  3224 ;; Registers used:
  3225 ;;		wreg, status,2
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;Total ram usage:        0 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:   11
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_USB_init
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text9
  3246  0134D0                     __ptext9:
  3247                           	opt stack 0
  3248  0134D0                     _USBDeviceAttach:
  3249                           	opt stack 17
  3250                           
  3251                           ;usb_device.c: 1356: {
  3252                           ;usb_device.c: 1357: if(1 == 1)
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;incstack = 0
  3256  0134D0  5025               	movf	_USBDeviceState,w,c	;volatile
  3257  0134D2  A4D8               	btfss	status,2,c
  3258  0134D4  0012               	return	
  3259                           
  3260                           ;usb_device.c: 1358: {
  3261                           ;usb_device.c: 1360: UCON = 0;
  3262  0134D6  0E00               	movlw	0
  3263  0134D8  6E65               	movwf	3941,c	;volatile
  3264                           
  3265                           ;usb_device.c: 1363: UIE = 0;
  3266  0134DA  0E00               	movlw	0
  3267  0134DC  010F               	movlb	15	; () banked
  3268  0134DE  6F36               	movwf	54,b	;volatile
  3269                           
  3270                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  3271  0134E0  0E16               	movlw	22
  3272  0134E2  010F               	movlb	15	; () banked
  3273  0134E4  6F39               	movwf	57,b	;volatile
  3274  0134E6  0E9F               	movlw	159
  3275  0134E8  010F               	movlb	15	; () banked
  3276  0134EA  6F37               	movwf	55,b	;volatile
  3277  0134EC  0E7B               	movlw	123
  3278  0134EE  010F               	movlb	15	; () banked
  3279  0134F0  6F36               	movwf	54,b	;volatile
  3280                           
  3281                           ; BSR set to: 15
  3282                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  3283  0134F2  8ED0               	bsf	4048,7,c	;volatile
  3284                           
  3285                           ; BSR set to: 15
  3286  0134F4  88A2               	bsf	4002,4,c	;volatile
  3287                           
  3288                           ; BSR set to: 15
  3289  0134F6  88A0               	bsf	4000,4,c	;volatile
  3290                           
  3291                           ; BSR set to: 15
  3292  0134F8  8EF2               	bsf	intcon,7,c	;volatile
  3293                           
  3294                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3295  0134FA  D001               	goto	l1129
  3296  0134FC                     l1130:
  3297  0134FC  8665               	bsf	3941,3,c	;volatile
  3298  0134FE                     l1129:
  3299  0134FE  A665               	btfss	3941,3,c	;volatile
  3300  013500  D7FD               	goto	l1130
  3301                           
  3302                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  3303  013502  0E01               	movlw	1
  3304  013504  6E25               	movwf	_USBDeviceState,c	;volatile
  3305  013506  0012               	return	
  3306  013508                     __end_of_USBDeviceAttach:
  3307                           	opt stack 0
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           intcon2	equ	0xFF1
  3316                           postinc0	equ	0xFEE
  3317                           wreg	equ	0xFE8
  3318                           postdec1	equ	0xFE5
  3319                           fsr1h	equ	0xFE2
  3320                           fsr1l	equ	0xFE1
  3321                           indf2	equ	0xFDF
  3322                           postinc2	equ	0xFDE
  3323                           postdec2	equ	0xFDD
  3324                           fsr2h	equ	0xFDA
  3325                           fsr2l	equ	0xFD9
  3326                           status	equ	0xFD8
  3327                           
  3328 ;; *************** function _UART_init *****************
  3329 ;; Defined at:
  3330 ;;		line 10 in file "../My_library/My_UART.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;		None               void
  3337 ;; Registers used:
  3338 ;;		wreg, status,2
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:   11
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_main_init
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text10
  3359  0137C8                     __ptext10:
  3360                           	opt stack 0
  3361  0137C8                     _UART_init:
  3362                           	opt stack 18
  3363                           
  3364                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  3365                           
  3366                           ;incstack = 0
  3367  0137C8  9CAD               	bcf	4013,6,c	;volatile
  3368                           
  3369                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  3370  0137CA  8AAD               	bsf	4013,5,c	;volatile
  3371                           
  3372                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  3373  0137CC  98AD               	bcf	4013,4,c	;volatile
  3374                           
  3375                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  3376  0137CE  94AD               	bcf	4013,2,c	;volatile
  3377                           
  3378                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  3379  0137D0  8EAC               	bsf	4012,7,c	;volatile
  3380                           
  3381                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  3382  0137D2  9CAC               	bcf	4012,6,c	;volatile
  3383                           
  3384                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  3385  0137D4  88AC               	bsf	4012,4,c	;volatile
  3386                           
  3387                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  3388  0137D6  867E               	bsf	3966,3,c	;volatile
  3389                           
  3390                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  3391  0137D8  0E19               	movlw	25
  3392  0137DA  6EB0               	movwf	4016,c	;volatile
  3393                           
  3394                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  3395  0137DC  0E00               	movlw	0
  3396  0137DE  6E7F               	movwf	3967,c	;volatile
  3397                           
  3398                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  3399  0137E0  9A9F               	bcf	3999,5,c	;volatile
  3400                           
  3401                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  3402  0137E2  989F               	bcf	3999,4,c	;volatile
  3403                           
  3404                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  3405  0137E4  8A9D               	bsf	3997,5,c	;volatile
  3406                           
  3407                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  3408  0137E6  8CF2               	bsf	intcon,6,c	;volatile
  3409  0137E8  0012               	return		;funcret
  3410  0137EA                     __end_of_UART_init:
  3411                           	opt stack 0
  3412                           tblptru	equ	0xFF8
  3413                           tblptrh	equ	0xFF7
  3414                           tblptrl	equ	0xFF6
  3415                           tablat	equ	0xFF5
  3416                           prodh	equ	0xFF4
  3417                           prodl	equ	0xFF3
  3418                           intcon	equ	0xFF2
  3419                           intcon2	equ	0xFF1
  3420                           postinc0	equ	0xFEE
  3421                           wreg	equ	0xFE8
  3422                           postdec1	equ	0xFE5
  3423                           fsr1h	equ	0xFE2
  3424                           fsr1l	equ	0xFE1
  3425                           indf2	equ	0xFDF
  3426                           postinc2	equ	0xFDE
  3427                           postdec2	equ	0xFDD
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _ST7032_init *****************
  3433 ;; Defined at:
  3434 ;;		line 78 in file "../My_library/My_ST7032.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  i               1    9[BANK0 ] unsigned char 
  3439 ;;  i               1    8[BANK0 ] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;		None               void
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3451 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3452 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;Total ram usage:        3 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:   15
  3456 ;; This function calls:
  3457 ;;		_I2C_LCD_Clear
  3458 ;;		_I2C_LCD_Command
  3459 ;; This function is called by:
  3460 ;;		_main_init
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text11
  3465  012DB8                     __ptext11:
  3466                           	opt stack 0
  3467  012DB8                     _ST7032_init:
  3468                           	opt stack 14
  3469                           
  3470                           ;My_ST7032.c: 79: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
  3471                           
  3472                           ;incstack = 0
  3473  012DB8  0E00               	movlw	0
  3474  012DBA  0100               	movlb	0	; () banked
  3475  012DBC  6F68               	movwf	ST7032_init@i& (0+255),b
  3476  012DBE                     l8798:
  3477                           
  3478                           ; BSR set to: 0
  3479  012DBE  0E27               	movlw	39
  3480  012DC0  0100               	movlb	0	; () banked
  3481  012DC2  6568               	cpfsgt	ST7032_init@i& (0+255),b
  3482  012DC4  D001               	goto	l8802
  3483  012DC6  D00C               	goto	l8806
  3484  012DC8                     l8802:
  3485                           
  3486                           ; BSR set to: 0
  3487  012DC8  0E10               	movlw	16
  3488  012DCA  0100               	movlb	0	; () banked
  3489  012DCC  6F67               	movwf	??_ST7032_init& (0+255),b
  3490  012DCE  0E94               	movlw	148
  3491  012DD0                     u9767:
  3492  012DD0  2EE8               	decfsz	wreg,f,c
  3493  012DD2  D7FE               	goto	u9767
  3494  012DD4  2F67               	decfsz	??_ST7032_init& (0+255),f,b
  3495  012DD6  D7FC               	goto	u9767
  3496  012DD8  D000               	nop2	
  3497  012DDA  0100               	movlb	0	; () banked
  3498  012DDC  2B68               	incf	ST7032_init@i& (0+255),f,b
  3499  012DDE  D7EF               	goto	l8798
  3500  012DE0                     l8806:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;My_ST7032.c: 80: I2C_LCD_Command(0x38);
  3504  012DE0  0E38               	movlw	56
  3505  012DE2  ECA0  F09A         	call	_I2C_LCD_Command
  3506                           
  3507                           ;My_ST7032.c: 81: I2C_LCD_Command(0x39);
  3508  012DE6  0E39               	movlw	57
  3509  012DE8  ECA0  F09A         	call	_I2C_LCD_Command
  3510                           
  3511                           ;My_ST7032.c: 82: I2C_LCD_Command(0x14);
  3512  012DEC  0E14               	movlw	20
  3513  012DEE  ECA0  F09A         	call	_I2C_LCD_Command
  3514                           
  3515                           ;My_ST7032.c: 83: I2C_LCD_Command(0x70);
  3516  012DF2  0E70               	movlw	112
  3517  012DF4  ECA0  F09A         	call	_I2C_LCD_Command
  3518                           
  3519                           ;My_ST7032.c: 84: I2C_LCD_Command(0x56);
  3520  012DF8  0E56               	movlw	86
  3521  012DFA  ECA0  F09A         	call	_I2C_LCD_Command
  3522                           
  3523                           ;My_ST7032.c: 85: I2C_LCD_Command(0x6C);
  3524  012DFE  0E6C               	movlw	108
  3525  012E00  ECA0  F09A         	call	_I2C_LCD_Command
  3526                           
  3527                           ;My_ST7032.c: 86: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
  3528  012E04  0E00               	movlw	0
  3529  012E06  0100               	movlb	0	; () banked
  3530  012E08  6F69               	movwf	ST7032_init@i_3110& (0+255),b
  3531  012E0A                     l8810:
  3532                           
  3533                           ; BSR set to: 0
  3534  012E0A  0E27               	movlw	39
  3535  012E0C  0100               	movlb	0	; () banked
  3536  012E0E  6569               	cpfsgt	ST7032_init@i_3110& (0+255),b
  3537  012E10  D001               	goto	l8814
  3538  012E12  D00C               	goto	l8818
  3539  012E14                     l8814:
  3540                           
  3541                           ; BSR set to: 0
  3542  012E14  0E10               	movlw	16
  3543  012E16  0100               	movlb	0	; () banked
  3544  012E18  6F67               	movwf	??_ST7032_init& (0+255),b
  3545  012E1A  0E94               	movlw	148
  3546  012E1C                     u9777:
  3547  012E1C  2EE8               	decfsz	wreg,f,c
  3548  012E1E  D7FE               	goto	u9777
  3549  012E20  2F67               	decfsz	??_ST7032_init& (0+255),f,b
  3550  012E22  D7FC               	goto	u9777
  3551  012E24  D000               	nop2	
  3552  012E26  0100               	movlb	0	; () banked
  3553  012E28  2B69               	incf	ST7032_init@i_3110& (0+255),f,b
  3554  012E2A  D7EF               	goto	l8810
  3555  012E2C                     l8818:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;My_ST7032.c: 87: I2C_LCD_Command(0x38);
  3559  012E2C  0E38               	movlw	56
  3560  012E2E  ECA0  F09A         	call	_I2C_LCD_Command
  3561                           
  3562                           ;My_ST7032.c: 88: I2C_LCD_Command(0x0C);
  3563  012E32  0E0C               	movlw	12
  3564  012E34  ECA0  F09A         	call	_I2C_LCD_Command
  3565                           
  3566                           ;My_ST7032.c: 89: I2C_LCD_Command(0x06);
  3567  012E38  0E06               	movlw	6
  3568  012E3A  ECA0  F09A         	call	_I2C_LCD_Command
  3569                           
  3570                           ;My_ST7032.c: 90: I2C_LCD_Clear();
  3571  012E3E  EC40  F09C         	call	_I2C_LCD_Clear	;wreg free
  3572  012E42  0012               	return		;funcret
  3573  012E44                     __end_of_ST7032_init:
  3574                           	opt stack 0
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           intcon2	equ	0xFF1
  3583                           postinc0	equ	0xFEE
  3584                           wreg	equ	0xFE8
  3585                           postdec1	equ	0xFE5
  3586                           fsr1h	equ	0xFE2
  3587                           fsr1l	equ	0xFE1
  3588                           indf2	equ	0xFDF
  3589                           postinc2	equ	0xFDE
  3590                           postdec2	equ	0xFDD
  3591                           fsr2h	equ	0xFDA
  3592                           fsr2l	equ	0xFD9
  3593                           status	equ	0xFD8
  3594                           
  3595 ;; *************** function _I2C_LCD_Clear *****************
  3596 ;; Defined at:
  3597 ;;		line 21 in file "../My_library/My_ST7032.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;		None               void
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3615 ;;Total ram usage:        1 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:   14
  3618 ;; This function calls:
  3619 ;;		_I2C_LCD_Command
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;;		_ST7032_init
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text12
  3627  013880                     __ptext12:
  3628                           	opt stack 0
  3629  013880                     _I2C_LCD_Clear:
  3630                           	opt stack 14
  3631                           
  3632                           ;My_ST7032.c: 22: I2C_LCD_Command(0x01);
  3633                           
  3634                           ;incstack = 0
  3635  013880  0E01               	movlw	1
  3636  013882  ECA0  F09A         	call	_I2C_LCD_Command
  3637                           
  3638                           ;My_ST7032.c: 23: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  3639  013886  0E12               	movlw	18
  3640  013888  0100               	movlb	0	; () banked
  3641  01388A  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
  3642  01388C  0E23               	movlw	35
  3643  01388E                     u9787:
  3644  01388E  2EE8               	decfsz	wreg,f,c
  3645  013890  D7FE               	goto	u9787
  3646  013892  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  3647  013894  D7FC               	goto	u9787
  3648  013896  F000               	nop	
  3649  013898  0012               	return		;funcret
  3650  01389A                     __end_of_I2C_LCD_Clear:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           prodh	equ	0xFF4
  3657                           prodl	equ	0xFF3
  3658                           intcon	equ	0xFF2
  3659                           intcon2	equ	0xFF1
  3660                           postinc0	equ	0xFEE
  3661                           wreg	equ	0xFE8
  3662                           postdec1	equ	0xFE5
  3663                           fsr1h	equ	0xFE2
  3664                           fsr1l	equ	0xFE1
  3665                           indf2	equ	0xFDF
  3666                           postinc2	equ	0xFDE
  3667                           postdec2	equ	0xFDD
  3668                           fsr2h	equ	0xFDA
  3669                           fsr2l	equ	0xFD9
  3670                           status	equ	0xFD8
  3671                           
  3672 ;; *************** function _RTCC_init *****************
  3673 ;; Defined at:
  3674 ;;		line 22 in file "../My_library/My_RTCC.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;		None               void
  3681 ;; Registers used:
  3682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:   15
  3695 ;; This function calls:
  3696 ;;		_RTCC_from_RTCC
  3697 ;;		_RTCC_from_epoch
  3698 ;; This function is called by:
  3699 ;;		_main_init
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text13
  3704  0130AA                     __ptext13:
  3705                           	opt stack 0
  3706  0130AA                     _RTCC_init:
  3707                           	opt stack 14
  3708                           
  3709                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  3710                           
  3711                           ;incstack = 0
  3712  0130AA  010F               	movlb	15	; () banked
  3713  0130AC  8B3F               	bsf	63,5,b	;volatile
  3714                           
  3715                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  3716  0130AE  010F               	movlb	15	; () banked
  3717  0130B0  BB3F               	btfsc	63,5,b	;volatile
  3718  0130B2  D006               	goto	l8826
  3719                           
  3720                           ; BSR set to: 15
  3721                           ;My_RTCC.c: 25: EECON2 = 0x55;
  3722  0130B4  0E55               	movlw	85
  3723  0130B6  6EA7               	movwf	4007,c	;volatile
  3724                           
  3725                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  3726  0130B8  0EAA               	movlw	170
  3727  0130BA  6EA7               	movwf	4007,c	;volatile
  3728                           
  3729                           ; BSR set to: 15
  3730                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  3731  0130BC  010F               	movlb	15	; () banked
  3732  0130BE  8B3F               	bsf	63,5,b	;volatile
  3733  0130C0                     l8826:
  3734                           
  3735                           ; BSR set to: 15
  3736                           ;My_RTCC.c: 28: }
  3737                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  3738  0130C0  010F               	movlb	15	; () banked
  3739  0130C2  8F3F               	bsf	63,7,b	;volatile
  3740                           
  3741                           ; BSR set to: 15
  3742                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  3743  0130C4  010F               	movlb	15	; () banked
  3744  0130C6  953F               	bcf	63,2,b	;volatile
  3745                           
  3746                           ; BSR set to: 15
  3747                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  3748  0130C8  010F               	movlb	15	; () banked
  3749  0130CA  833C               	bsf	60,1,b	;volatile
  3750                           
  3751                           ; BSR set to: 15
  3752                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  3753  0130CC  010F               	movlb	15	; () banked
  3754  0130CE  853C               	bsf	60,2,b	;volatile
  3755                           
  3756                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  3757  0130D0  0E00               	movlw	0
  3758  0130D2  010F               	movlb	15	; () banked
  3759  0130D4  6F3E               	movwf	62,b	;volatile
  3760                           
  3761                           ; BSR set to: 15
  3762                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  3763  0130D6  86CD               	bsf	4045,3,c	;volatile
  3764                           
  3765                           ; BSR set to: 15
  3766                           ;My_RTCC.c: 37: RTCC_from_RTCC(&now);
  3767  0130D8  0EB6               	movlw	low _now
  3768  0130DA  0100               	movlb	0	; () banked
  3769  0130DC  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3770  0130DE  0E01               	movlw	high _now
  3771  0130E0  0100               	movlb	0	; () banked
  3772  0130E2  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3773  0130E4  EC5A  F09C         	call	_RTCC_from_RTCC	;wreg free
  3774                           
  3775                           ;My_RTCC.c: 38: if (now.DD == 0) {
  3776  0130E8  0101               	movlb	1	; () banked
  3777  0130EA  51BE               	movf	(_now+8)& (0+255),w,b
  3778  0130EC  A4D8               	btfss	status,2,c
  3779  0130EE  0012               	return	
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;My_RTCC.c: 39: now.epoch = 0;
  3783  0130F0  0E00               	movlw	0
  3784  0130F2  0101               	movlb	1	; () banked
  3785  0130F4  6FB6               	movwf	_now& (0+255),b
  3786  0130F6  0E00               	movlw	0
  3787  0130F8  6FB7               	movwf	(_now+1)& (0+255),b
  3788  0130FA  0E00               	movlw	0
  3789  0130FC  6FB8               	movwf	(_now+2)& (0+255),b
  3790  0130FE  0E00               	movlw	0
  3791  013100  6FB9               	movwf	(_now+3)& (0+255),b
  3792                           
  3793                           ; BSR set to: 1
  3794                           ;My_RTCC.c: 40: RTCC_from_epoch(&now);
  3795  013102  0EB6               	movlw	low _now
  3796  013104  0100               	movlb	0	; () banked
  3797  013106  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  3798  013108  0E01               	movlw	high _now
  3799  01310A  0100               	movlb	0	; () banked
  3800  01310C  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  3801  01310E  EC4D  F09C         	call	_RTCC_from_epoch	;wreg free
  3802  013112  0012               	return	
  3803  013114                     __end_of_RTCC_init:
  3804                           	opt stack 0
  3805                           tblptru	equ	0xFF8
  3806                           tblptrh	equ	0xFF7
  3807                           tblptrl	equ	0xFF6
  3808                           tablat	equ	0xFF5
  3809                           prodh	equ	0xFF4
  3810                           prodl	equ	0xFF3
  3811                           intcon	equ	0xFF2
  3812                           intcon2	equ	0xFF1
  3813                           postinc0	equ	0xFEE
  3814                           wreg	equ	0xFE8
  3815                           postdec1	equ	0xFE5
  3816                           fsr1h	equ	0xFE2
  3817                           fsr1l	equ	0xFE1
  3818                           indf2	equ	0xFDF
  3819                           postinc2	equ	0xFDE
  3820                           postdec2	equ	0xFDD
  3821                           fsr2h	equ	0xFDA
  3822                           fsr2l	equ	0xFD9
  3823                           status	equ	0xFD8
  3824                           
  3825 ;; *************** function _RTCC_from_epoch *****************
  3826 ;; Defined at:
  3827 ;;		line 211 in file "../My_library/My_RTCC.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  tm              2   47[BANK0 ] PTR struct .
  3830 ;;		 -> now(14), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;		None               void
  3835 ;; Registers used:
  3836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3846 ;;Total ram usage:        2 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:   14
  3849 ;; This function calls:
  3850 ;;		_caltime_to_RTCC
  3851 ;;		_epoch_to_caltime
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;;		_RTCC_init
  3855 ;;		_RTCC_adjust_time_inc
  3856 ;;		_RTCC_adjust_time_dec
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text14
  3861  01389A                     __ptext14:
  3862                           	opt stack 0
  3863  01389A                     _RTCC_from_epoch:
  3864                           	opt stack 14
  3865                           
  3866                           ;My_RTCC.c: 212: epoch_to_caltime(tm);
  3867                           
  3868                           ;incstack = 0
  3869  01389A  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  3870  01389E  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  3871  0138A2  ECBC  F085         	call	_epoch_to_caltime	;wreg free
  3872                           
  3873                           ;My_RTCC.c: 213: caltime_to_RTCC(tm);
  3874  0138A6  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  3875  0138AA  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  3876  0138AE  EC43  F090         	call	_caltime_to_RTCC	;wreg free
  3877  0138B2  0012               	return		;funcret
  3878  0138B4                     __end_of_RTCC_from_epoch:
  3879                           	opt stack 0
  3880                           tblptru	equ	0xFF8
  3881                           tblptrh	equ	0xFF7
  3882                           tblptrl	equ	0xFF6
  3883                           tablat	equ	0xFF5
  3884                           prodh	equ	0xFF4
  3885                           prodl	equ	0xFF3
  3886                           intcon	equ	0xFF2
  3887                           intcon2	equ	0xFF1
  3888                           postinc0	equ	0xFEE
  3889                           wreg	equ	0xFE8
  3890                           postdec1	equ	0xFE5
  3891                           fsr1h	equ	0xFE2
  3892                           fsr1l	equ	0xFE1
  3893                           indf2	equ	0xFDF
  3894                           postinc2	equ	0xFDE
  3895                           postdec2	equ	0xFDD
  3896                           fsr2h	equ	0xFDA
  3897                           fsr2l	equ	0xFD9
  3898                           status	equ	0xFD8
  3899                           
  3900 ;; *************** function _epoch_to_caltime *****************
  3901 ;; Defined at:
  3902 ;;		line 126 in file "../My_library/My_RTCC.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  tm              2   33[BANK0 ] PTR struct .
  3905 ;;		 -> now(14), 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  num             4   43[BANK0 ] unsigned long 
  3908 ;;  day             2   39[BANK0 ] unsigned int 
  3909 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  3910 ;;  month           1   42[BANK0 ] unsigned char 
  3911 ;;  year            1   41[BANK0 ] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;		None               void
  3914 ;; Registers used:
  3915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3921 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3922 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;Total ram usage:       14 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:   13
  3928 ;; This function calls:
  3929 ;;		_get_quot_rem
  3930 ;;		_month_length
  3931 ;; This function is called by:
  3932 ;;		_RTCC_from_epoch
  3933 ;;		_RTCC_from_caltime
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text15
  3938  010B78                     __ptext15:
  3939                           	opt stack 0
  3940  010B78                     _epoch_to_caltime:
  3941                           	opt stack 14
  3942                           
  3943                           ;My_RTCC.c: 129: static uint16_t day_cache = 0;
  3944                           ;My_RTCC.c: 130: static uint8_t month_cache = 1;
  3945                           ;My_RTCC.c: 131: static uint8_t year_cache = 0;
  3946                           ;My_RTCC.c: 132: uint16_t day_since_epoch;
  3947                           ;My_RTCC.c: 133: uint16_t day;
  3948                           ;My_RTCC.c: 134: uint8_t year = 0;
  3949                           
  3950                           ;incstack = 0
  3951  010B78  0E00               	movlw	0
  3952  010B7A  0100               	movlb	0	; () banked
  3953  010B7C  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  3954                           
  3955                           ;My_RTCC.c: 135: uint8_t month = 1;
  3956  010B7E  0E01               	movlw	1
  3957  010B80  0100               	movlb	0	; () banked
  3958  010B82  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;My_RTCC.c: 136: epoch_t num;
  3962                           ;My_RTCC.c: 138: num = tm->epoch;
  3963  010B84  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  3964  010B88  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  3965  010B8C  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  3966  010B90  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  3967  010B94  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  3968  010B98  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;My_RTCC.c: 139: tm->ss = get_quot_rem(&num, 60);
  3972  010B9C  0E8B               	movlw	low epoch_to_caltime@num
  3973  010B9E  0100               	movlb	0	; () banked
  3974  010BA0  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3975  010BA2  0E00               	movlw	high epoch_to_caltime@num
  3976  010BA4  0100               	movlb	0	; () banked
  3977  010BA6  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3978  010BA8  0E3C               	movlw	60
  3979  010BAA  0100               	movlb	0	; () banked
  3980  010BAC  6F7B               	movwf	get_quot_rem@div& (0+255),b
  3981  010BAE  EC06  F08F         	call	_get_quot_rem	;wreg free
  3982  010BB2  0100               	movlb	0	; () banked
  3983  010BB4  EE20 F004          	lfsr	2,4
  3984  010BB8  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  3985  010BBA  26D9               	addwf	fsr2l,f,c
  3986  010BBC  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  3987  010BBE  22DA               	addwfc	fsr2h,f,c
  3988  010BC0  0100               	movlb	0	; () banked
  3989  010BC2  C079  FFDF         	movff	?_get_quot_rem,indf2
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;My_RTCC.c: 140: tm->mm = get_quot_rem(&num, 60);
  3993  010BC6  0E8B               	movlw	low epoch_to_caltime@num
  3994  010BC8  0100               	movlb	0	; () banked
  3995  010BCA  6F79               	movwf	get_quot_rem@quot& (0+255),b
  3996  010BCC  0E00               	movlw	high epoch_to_caltime@num
  3997  010BCE  0100               	movlb	0	; () banked
  3998  010BD0  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3999  010BD2  0E3C               	movlw	60
  4000  010BD4  0100               	movlb	0	; () banked
  4001  010BD6  6F7B               	movwf	get_quot_rem@div& (0+255),b
  4002  010BD8  EC06  F08F         	call	_get_quot_rem	;wreg free
  4003  010BDC  0100               	movlb	0	; () banked
  4004  010BDE  EE20 F005          	lfsr	2,5
  4005  010BE2  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4006  010BE4  26D9               	addwf	fsr2l,f,c
  4007  010BE6  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4008  010BE8  22DA               	addwfc	fsr2h,f,c
  4009  010BEA  0100               	movlb	0	; () banked
  4010  010BEC  C079  FFDF         	movff	?_get_quot_rem,indf2
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;My_RTCC.c: 141: tm->hh = get_quot_rem(&num, 24);
  4014  010BF0  0E8B               	movlw	low epoch_to_caltime@num
  4015  010BF2  0100               	movlb	0	; () banked
  4016  010BF4  6F79               	movwf	get_quot_rem@quot& (0+255),b
  4017  010BF6  0E00               	movlw	high epoch_to_caltime@num
  4018  010BF8  0100               	movlb	0	; () banked
  4019  010BFA  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  4020  010BFC  0E18               	movlw	24
  4021  010BFE  0100               	movlb	0	; () banked
  4022  010C00  6F7B               	movwf	get_quot_rem@div& (0+255),b
  4023  010C02  EC06  F08F         	call	_get_quot_rem	;wreg free
  4024  010C06  0100               	movlb	0	; () banked
  4025  010C08  EE20 F006          	lfsr	2,6
  4026  010C0C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4027  010C0E  26D9               	addwf	fsr2l,f,c
  4028  010C10  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4029  010C12  22DA               	addwfc	fsr2h,f,c
  4030  010C14  0100               	movlb	0	; () banked
  4031  010C16  C079  FFDF         	movff	?_get_quot_rem,indf2
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;My_RTCC.c: 142: day = num;
  4035  010C1A  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  4036  010C1E  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;My_RTCC.c: 143: day_since_epoch = day;
  4040  010C22  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  4041  010C26  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;My_RTCC.c: 145: num += 6;
  4045  010C2A  0E06               	movlw	6
  4046  010C2C  0100               	movlb	0	; () banked
  4047  010C2E  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  4048  010C30  0E00               	movlw	0
  4049  010C32  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  4050  010C34  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  4051  010C36  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;My_RTCC.c: 146: tm->EE = get_quot_rem(&num, 7);
  4055  010C38  0E8B               	movlw	low epoch_to_caltime@num
  4056  010C3A  0100               	movlb	0	; () banked
  4057  010C3C  6F79               	movwf	get_quot_rem@quot& (0+255),b
  4058  010C3E  0E00               	movlw	high epoch_to_caltime@num
  4059  010C40  0100               	movlb	0	; () banked
  4060  010C42  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  4061  010C44  0E07               	movlw	7
  4062  010C46  0100               	movlb	0	; () banked
  4063  010C48  6F7B               	movwf	get_quot_rem@div& (0+255),b
  4064  010C4A  EC06  F08F         	call	_get_quot_rem	;wreg free
  4065  010C4E  0100               	movlb	0	; () banked
  4066  010C50  EE20 F007          	lfsr	2,7
  4067  010C54  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4068  010C56  26D9               	addwf	fsr2l,f,c
  4069  010C58  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4070  010C5A  22DA               	addwfc	fsr2h,f,c
  4071  010C5C  0100               	movlb	0	; () banked
  4072  010C5E  C079  FFDF         	movff	?_get_quot_rem,indf2
  4073                           
  4074                           ;My_RTCC.c: 155: while (day >= month_length(year, month)) {
  4075  010C62  D03F               	goto	l8192
  4076  010C64                     l508:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;My_RTCC.c: 156: LATB2 = 1;
  4080  010C64  848A               	bsf	3978,2,c	;volatile
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;My_RTCC.c: 157: day = day - month_length(year, month);
  4084  010C66  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  4085  010C6A  0100               	movlb	0	; () banked
  4086  010C6C  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  4087  010C6E  EC50  F08D         	call	_month_length
  4088  010C72  0100               	movlb	0	; () banked
  4089  010C74  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  4090  010C76  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  4091  010C78  0100               	movlb	0	; () banked
  4092  010C7A  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  4093  010C7C  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  4094  010C7E  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  4095  010C80  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  4096  010C82  0100               	movlb	0	; () banked
  4097  010C84  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  4098  010C86  0100               	movlb	0	; () banked
  4099  010C88  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  4100  010C8A  0100               	movlb	0	; () banked
  4101  010C8C  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  4102  010C8E  0100               	movlb	0	; () banked
  4103  010C90  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  4104  010C92  0100               	movlb	0	; () banked
  4105  010C94  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  4106  010C96  0100               	movlb	0	; () banked
  4107  010C98  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;My_RTCC.c: 158: if (month == 12) {
  4111  010C9A  0E0C               	movlw	12
  4112  010C9C  0100               	movlb	0	; () banked
  4113  010C9E  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  4114  010CA0  A4D8               	btfss	status,2,c
  4115  010CA2  D019               	goto	l8186
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;My_RTCC.c: 159: month = 1;
  4119  010CA4  0E01               	movlw	1
  4120  010CA6  0100               	movlb	0	; () banked
  4121  010CA8  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;My_RTCC.c: 160: year++;
  4125  010CAA  0100               	movlb	0	; () banked
  4126  010CAC  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;My_RTCC.c: 162: if (year >= 100) {
  4130  010CAE  0E63               	movlw	99
  4131  010CB0  0100               	movlb	0	; () banked
  4132  010CB2  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  4133  010CB4  D012               	goto	l8188
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;My_RTCC.c: 163: tm->epoch -= 3155760000;
  4137  010CB6  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  4138  010CBA  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  4139  010CBE  0E80               	movlw	128
  4140  010CC0  5EDE               	subwf	postinc2,f,c
  4141  010CC2  0E13               	movlw	19
  4142  010CC4  5ADE               	subwfb	postinc2,f,c
  4143  010CC6  0E19               	movlw	25
  4144  010CC8  5ADE               	subwfb	postinc2,f,c
  4145  010CCA  0EBC               	movlw	188
  4146  010CCC  5ADE               	subwfb	postinc2,f,c
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;My_RTCC.c: 164: year = 0;
  4150  010CCE  0E00               	movlw	0
  4151  010CD0  0100               	movlb	0	; () banked
  4152  010CD2  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;My_RTCC.c: 165: }
  4156                           ;My_RTCC.c: 166: } else {
  4157  010CD4  D002               	goto	l8188
  4158  010CD6                     l8186:
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;My_RTCC.c: 167: month++;
  4162  010CD6  0100               	movlb	0	; () banked
  4163  010CD8  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  4164  010CDA                     l8188:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;My_RTCC.c: 168: }
  4168                           ;My_RTCC.c: 169: month_cache = month;
  4169  010CDA  C08A  F0DA         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;My_RTCC.c: 170: year_cache = year;
  4173  010CDE  C089  F0C2         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  4174  010CE2                     l8192:
  4175                           
  4176                           ; BSR set to: 0
  4177  010CE2  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  4178  010CE6  0100               	movlb	0	; () banked
  4179  010CE8  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  4180  010CEA  EC50  F08D         	call	_month_length
  4181  010CEE  0100               	movlb	0	; () banked
  4182  010CF0  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  4183  010CF2  0100               	movlb	0	; () banked
  4184  010CF4  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  4185  010CF6  0100               	movlb	0	; () banked
  4186  010CF8  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  4187  010CFA  0E00               	movlw	0
  4188  010CFC  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  4189  010CFE  B0D8               	btfsc	status,0,c
  4190  010D00  D7B1               	goto	l508
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;My_RTCC.c: 171: }
  4194                           ;My_RTCC.c: 172: day_cache = day_since_epoch - day;
  4195                           
  4196                           ; BSR set to: 0
  4197  010D02  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  4198  010D06  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  4199  010D0A  0100               	movlb	0	; () banked
  4200  010D0C  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  4201  010D0E  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  4202  010D10  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  4203  010D12  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  4204  010D14  0100               	movlb	0	; () banked
  4205  010D16  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  4206  010D18  0100               	movlb	0	; () banked
  4207  010D1A  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  4208  010D1C  0100               	movlb	0	; () banked
  4209  010D1E  6FB2               	movwf	epoch_to_caltime@day_cache& (0+255),b
  4210  010D20  0100               	movlb	0	; () banked
  4211  010D22  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  4212  010D24  0100               	movlb	0	; () banked
  4213  010D26  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  4214  010D28  0100               	movlb	0	; () banked
  4215  010D2A  6FB3               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;My_RTCC.c: 173: day++;
  4219  010D2C  0100               	movlb	0	; () banked
  4220  010D2E  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  4221  010D30  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;My_RTCC.c: 175: tm->YY = year;
  4225  010D32  0100               	movlb	0	; () banked
  4226  010D34  EE20 F00A          	lfsr	2,10
  4227  010D38  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4228  010D3A  26D9               	addwf	fsr2l,f,c
  4229  010D3C  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4230  010D3E  22DA               	addwfc	fsr2h,f,c
  4231  010D40  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;My_RTCC.c: 176: tm->MM = month;
  4235  010D44  0100               	movlb	0	; () banked
  4236  010D46  EE20 F009          	lfsr	2,9
  4237  010D4A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4238  010D4C  26D9               	addwf	fsr2l,f,c
  4239  010D4E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4240  010D50  22DA               	addwfc	fsr2h,f,c
  4241  010D52  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;My_RTCC.c: 177: tm->DD = day;
  4245  010D56  0100               	movlb	0	; () banked
  4246  010D58  EE20 F008          	lfsr	2,8
  4247  010D5C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  4248  010D5E  26D9               	addwf	fsr2l,f,c
  4249  010D60  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  4250  010D62  22DA               	addwfc	fsr2h,f,c
  4251  010D64  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  4252                           
  4253                           ; BSR set to: 0
  4254  010D68  0012               	return		;funcret
  4255  010D6A                     __end_of_epoch_to_caltime:
  4256                           	opt stack 0
  4257                           tblptru	equ	0xFF8
  4258                           tblptrh	equ	0xFF7
  4259                           tblptrl	equ	0xFF6
  4260                           tablat	equ	0xFF5
  4261                           prodh	equ	0xFF4
  4262                           prodl	equ	0xFF3
  4263                           intcon	equ	0xFF2
  4264                           intcon2	equ	0xFF1
  4265                           postinc0	equ	0xFEE
  4266                           wreg	equ	0xFE8
  4267                           postdec1	equ	0xFE5
  4268                           fsr1h	equ	0xFE2
  4269                           fsr1l	equ	0xFE1
  4270                           indf2	equ	0xFDF
  4271                           postinc2	equ	0xFDE
  4272                           postdec2	equ	0xFDD
  4273                           fsr2h	equ	0xFDA
  4274                           fsr2l	equ	0xFD9
  4275                           status	equ	0xFD8
  4276                           
  4277 ;; *************** function _get_quot_rem *****************
  4278 ;; Defined at:
  4279 ;;		line 81 in file "../My_library/My_RTCC.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  4282 ;;		 -> epoch_to_caltime@num(4), 
  4283 ;;  div             1   27[BANK0 ] unsigned char 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  num             4   29[BANK0 ] unsigned long 
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  4   25[BANK0 ] unsigned long 
  4288 ;; Registers used:
  4289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4295 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4296 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4298 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4299 ;;Total ram usage:        8 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:   12
  4302 ;; This function calls:
  4303 ;;		___lldiv
  4304 ;;		___lmul
  4305 ;; This function is called by:
  4306 ;;		_epoch_to_caltime
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text16
  4311  011E0C                     __ptext16:
  4312                           	opt stack 0
  4313  011E0C                     _get_quot_rem:
  4314                           	opt stack 14
  4315                           
  4316                           ;My_RTCC.c: 84: epoch_t num = *quot;
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;incstack = 0
  4320  011E0C  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  4321  011E10  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  4322  011E14  CFDE F07D          	movff	postinc2,get_quot_rem@num
  4323  011E18  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  4324  011E1C  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  4325  011E20  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  4326                           
  4327                           ;My_RTCC.c: 85: return num - (*quot = num / div) * div;
  4328  011E24  0100               	movlb	0	; () banked
  4329  011E26  517B               	movf	get_quot_rem@div& (0+255),w,b
  4330  011E28  0100               	movlb	0	; () banked
  4331  011E2A  6F64               	movwf	___lldiv@divisor& (0+255),b
  4332  011E2C  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  4333  011E2E  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  4334  011E30  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  4335  011E32  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  4336  011E36  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  4337  011E3A  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  4338  011E3E  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  4339  011E42  EC38  F092         	call	___lldiv	;wreg free
  4340  011E46  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  4341  011E4A  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  4342  011E4E  0100               	movlb	0	; () banked
  4343  011E50  C060  FFDE         	movff	?___lldiv,postinc2
  4344  011E54  0100               	movlb	0	; () banked
  4345  011E56  C061  FFDE         	movff	?___lldiv+1,postinc2
  4346  011E5A  0100               	movlb	0	; () banked
  4347  011E5C  C062  FFDE         	movff	?___lldiv+2,postinc2
  4348  011E60  0100               	movlb	0	; () banked
  4349  011E62  C063  FFDD         	movff	?___lldiv+3,postdec2
  4350  011E66  52DD               	movf	postdec2,f,c
  4351  011E68  52DD               	movf	postdec2,f,c
  4352  011E6A  CFDE F06D          	movff	postinc2,___lmul@multiplier
  4353  011E6E  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  4354  011E72  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  4355  011E76  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  4356  011E7A  0100               	movlb	0	; () banked
  4357  011E7C  517B               	movf	get_quot_rem@div& (0+255),w,b
  4358  011E7E  0100               	movlb	0	; () banked
  4359  011E80  6F71               	movwf	___lmul@multiplicand& (0+255),b
  4360  011E82  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  4361  011E84  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4362  011E86  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4363  011E88  ECE2  F097         	call	___lmul	;wreg free
  4364  011E8C  0100               	movlb	0	; () banked
  4365  011E8E  1F6D               	comf	?___lmul& (0+255),f,b
  4366  011E90  0100               	movlb	0	; () banked
  4367  011E92  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  4368  011E94  0100               	movlb	0	; () banked
  4369  011E96  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  4370  011E98  0100               	movlb	0	; () banked
  4371  011E9A  1F70               	comf	(?___lmul+3)& (0+255),f,b
  4372  011E9C  0100               	movlb	0	; () banked
  4373  011E9E  2B6D               	incf	?___lmul& (0+255),f,b
  4374  011EA0  0E00               	movlw	0
  4375  011EA2  0100               	movlb	0	; () banked
  4376  011EA4  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  4377  011EA6  0100               	movlb	0	; () banked
  4378  011EA8  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  4379  011EAA  0100               	movlb	0	; () banked
  4380  011EAC  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  4381  011EAE  0100               	movlb	0	; () banked
  4382  011EB0  517D               	movf	get_quot_rem@num& (0+255),w,b
  4383  011EB2  0100               	movlb	0	; () banked
  4384  011EB4  256D               	addwf	?___lmul& (0+255),w,b
  4385  011EB6  0100               	movlb	0	; () banked
  4386  011EB8  6F79               	movwf	?_get_quot_rem& (0+255),b
  4387  011EBA  0100               	movlb	0	; () banked
  4388  011EBC  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  4389  011EBE  0100               	movlb	0	; () banked
  4390  011EC0  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  4391  011EC2  0100               	movlb	0	; () banked
  4392  011EC4  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  4393  011EC6  0100               	movlb	0	; () banked
  4394  011EC8  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  4395  011ECA  0100               	movlb	0	; () banked
  4396  011ECC  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  4397  011ECE  0100               	movlb	0	; () banked
  4398  011ED0  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  4399  011ED2  0100               	movlb	0	; () banked
  4400  011ED4  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  4401  011ED6  0100               	movlb	0	; () banked
  4402  011ED8  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  4403  011EDA  0100               	movlb	0	; () banked
  4404  011EDC  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  4405  011EDE  0012               	return	
  4406  011EE0                     __end_of_get_quot_rem:
  4407                           	opt stack 0
  4408                           tblptru	equ	0xFF8
  4409                           tblptrh	equ	0xFF7
  4410                           tblptrl	equ	0xFF6
  4411                           tablat	equ	0xFF5
  4412                           prodh	equ	0xFF4
  4413                           prodl	equ	0xFF3
  4414                           intcon	equ	0xFF2
  4415                           intcon2	equ	0xFF1
  4416                           postinc0	equ	0xFEE
  4417                           wreg	equ	0xFE8
  4418                           postdec1	equ	0xFE5
  4419                           fsr1h	equ	0xFE2
  4420                           fsr1l	equ	0xFE1
  4421                           indf2	equ	0xFDF
  4422                           postinc2	equ	0xFDE
  4423                           postdec2	equ	0xFDD
  4424                           fsr2h	equ	0xFDA
  4425                           fsr2l	equ	0xFD9
  4426                           status	equ	0xFD8
  4427                           
  4428 ;; *************** function ___lldiv *****************
  4429 ;; Defined at:
  4430 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  dividend        4    0[BANK0 ] unsigned long 
  4433 ;;  divisor         4    4[BANK0 ] unsigned long 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  quotient        4    8[BANK0 ] unsigned long 
  4436 ;;  counter         1   12[BANK0 ] unsigned char 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  4    0[BANK0 ] unsigned long 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4446 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4447 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4449 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4450 ;;Total ram usage:       13 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:   11
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_get_quot_rem
  4457 ;;		_CTMU_read
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text17
  4462  012470                     __ptext17:
  4463                           	opt stack 0
  4464  012470                     ___lldiv:
  4465                           	opt stack 14
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;incstack = 0
  4469  012470  0E00               	movlw	0
  4470  012472  0100               	movlb	0	; () banked
  4471  012474  6F68               	movwf	___lldiv@quotient& (0+255),b
  4472  012476  0E00               	movlw	0
  4473  012478  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  4474  01247A  0E00               	movlw	0
  4475  01247C  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  4476  01247E  0E00               	movlw	0
  4477  012480  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  4478                           
  4479                           ; BSR set to: 0
  4480  012482  0100               	movlb	0	; () banked
  4481  012484  5164               	movf	___lldiv@divisor& (0+255),w,b
  4482  012486  0100               	movlb	0	; () banked
  4483  012488  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  4484  01248A  0100               	movlb	0	; () banked
  4485  01248C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  4486  01248E  0100               	movlb	0	; () banked
  4487  012490  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  4488  012492  B4D8               	btfsc	status,2,c
  4489  012494  D042               	goto	l1877
  4490                           
  4491                           ; BSR set to: 0
  4492  012496  0E01               	movlw	1
  4493  012498  0100               	movlb	0	; () banked
  4494  01249A  6F6C               	movwf	___lldiv@counter& (0+255),b
  4495  01249C  D008               	goto	l8052
  4496  01249E                     l8050:
  4497                           
  4498                           ; BSR set to: 0
  4499  01249E  0100               	movlb	0	; () banked
  4500  0124A0  90D8               	bcf	status,0,c
  4501  0124A2  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  4502  0124A4  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  4503  0124A6  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  4504  0124A8  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  4505  0124AA  0100               	movlb	0	; () banked
  4506  0124AC  2B6C               	incf	___lldiv@counter& (0+255),f,b
  4507  0124AE                     l8052:
  4508                           
  4509                           ; BSR set to: 0
  4510  0124AE  0100               	movlb	0	; () banked
  4511  0124B0  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  4512  0124B2  D7F5               	goto	l8050
  4513  0124B4                     l8054:
  4514                           
  4515                           ; BSR set to: 0
  4516  0124B4  0100               	movlb	0	; () banked
  4517  0124B6  90D8               	bcf	status,0,c
  4518  0124B8  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  4519  0124BA  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  4520  0124BC  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  4521  0124BE  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  4522                           
  4523                           ; BSR set to: 0
  4524  0124C0  0100               	movlb	0	; () banked
  4525  0124C2  5164               	movf	___lldiv@divisor& (0+255),w,b
  4526  0124C4  0100               	movlb	0	; () banked
  4527  0124C6  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  4528  0124C8  0100               	movlb	0	; () banked
  4529  0124CA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4530  0124CC  0100               	movlb	0	; () banked
  4531  0124CE  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  4532  0124D0  0100               	movlb	0	; () banked
  4533  0124D2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4534  0124D4  0100               	movlb	0	; () banked
  4535  0124D6  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  4536  0124D8  0100               	movlb	0	; () banked
  4537  0124DA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4538  0124DC  0100               	movlb	0	; () banked
  4539  0124DE  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  4540  0124E0  A0D8               	btfss	status,0,c
  4541  0124E2  D012               	goto	l8062
  4542                           
  4543                           ; BSR set to: 0
  4544  0124E4  0100               	movlb	0	; () banked
  4545  0124E6  5164               	movf	___lldiv@divisor& (0+255),w,b
  4546  0124E8  0100               	movlb	0	; () banked
  4547  0124EA  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  4548  0124EC  0100               	movlb	0	; () banked
  4549  0124EE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  4550  0124F0  0100               	movlb	0	; () banked
  4551  0124F2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  4552  0124F4  0100               	movlb	0	; () banked
  4553  0124F6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  4554  0124F8  0100               	movlb	0	; () banked
  4555  0124FA  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  4556  0124FC  0100               	movlb	0	; () banked
  4557  0124FE  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  4558  012500  0100               	movlb	0	; () banked
  4559  012502  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  4560                           
  4561                           ; BSR set to: 0
  4562  012504  0100               	movlb	0	; () banked
  4563  012506  8168               	bsf	___lldiv@quotient& (0+255),0,b
  4564  012508                     l8062:
  4565                           
  4566                           ; BSR set to: 0
  4567  012508  0100               	movlb	0	; () banked
  4568  01250A  90D8               	bcf	status,0,c
  4569  01250C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  4570  01250E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  4571  012510  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  4572  012512  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  4573                           
  4574                           ; BSR set to: 0
  4575  012514  0100               	movlb	0	; () banked
  4576  012516  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  4577  012518  D7CD               	goto	l8054
  4578  01251A                     l1877:
  4579                           
  4580                           ; BSR set to: 0
  4581  01251A  C068  F060         	movff	___lldiv@quotient,?___lldiv
  4582  01251E  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  4583  012522  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  4584  012526  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  4585                           
  4586                           ; BSR set to: 0
  4587  01252A  0012               	return		;funcret
  4588  01252C                     __end_of___lldiv:
  4589                           	opt stack 0
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodh	equ	0xFF4
  4595                           prodl	equ	0xFF3
  4596                           intcon	equ	0xFF2
  4597                           intcon2	equ	0xFF1
  4598                           postinc0	equ	0xFEE
  4599                           wreg	equ	0xFE8
  4600                           postdec1	equ	0xFE5
  4601                           fsr1h	equ	0xFE2
  4602                           fsr1l	equ	0xFE1
  4603                           indf2	equ	0xFDF
  4604                           postinc2	equ	0xFDE
  4605                           postdec2	equ	0xFDD
  4606                           fsr2h	equ	0xFDA
  4607                           fsr2l	equ	0xFD9
  4608                           status	equ	0xFD8
  4609                           
  4610 ;; *************** function _caltime_to_RTCC *****************
  4611 ;; Defined at:
  4612 ;;		line 106 in file "../My_library/My_RTCC.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  tm              2    9[BANK0 ] PTR struct .
  4615 ;;		 -> now(14), 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;		None               void
  4620 ;; Registers used:
  4621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4627 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4630 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4631 ;;Total ram usage:        2 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:   13
  4634 ;; This function calls:
  4635 ;;		_d_to_x
  4636 ;; This function is called by:
  4637 ;;		_RTCC_from_epoch
  4638 ;;		_RTCC_from_caltime
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text18
  4643  012086                     __ptext18:
  4644                           	opt stack 0
  4645  012086                     _caltime_to_RTCC:
  4646                           	opt stack 14
  4647                           
  4648                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR0 = 1;
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;incstack = 0
  4652  012086  010F               	movlb	15	; () banked
  4653  012088  813F               	bsf	63,0,b	;volatile
  4654                           
  4655                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR1 = 1;
  4656  01208A  010F               	movlb	15	; () banked
  4657  01208C  833F               	bsf	63,1,b	;volatile
  4658                           
  4659                           ; BSR set to: 15
  4660                           ;My_RTCC.c: 110: RTCVALL = d_to_x(tm->YY);
  4661  01208E  0100               	movlb	0	; () banked
  4662  012090  EE20 F00A          	lfsr	2,10
  4663  012094  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4664  012096  26D9               	addwf	fsr2l,f,c
  4665  012098  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4666  01209A  22DA               	addwfc	fsr2h,f,c
  4667  01209C  50DF               	movf	indf2,w,c
  4668  01209E  ECBD  F09B         	call	_d_to_x
  4669  0120A2  010F               	movlb	15	; () banked
  4670  0120A4  6F3A               	movwf	58,b	;volatile
  4671                           
  4672                           ; BSR set to: 15
  4673                           ;My_RTCC.c: 111: RTCVALH = 0x00;
  4674  0120A6  0E00               	movlw	0
  4675  0120A8  010F               	movlb	15	; () banked
  4676  0120AA  6F3B               	movwf	59,b	;volatile
  4677                           
  4678                           ; BSR set to: 15
  4679                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR0 = 0;
  4680  0120AC  010F               	movlb	15	; () banked
  4681  0120AE  913F               	bcf	63,0,b	;volatile
  4682                           
  4683                           ; BSR set to: 15
  4684                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR1 = 1;
  4685  0120B0  010F               	movlb	15	; () banked
  4686  0120B2  833F               	bsf	63,1,b	;volatile
  4687                           
  4688                           ; BSR set to: 15
  4689                           ;My_RTCC.c: 114: RTCVALL = d_to_x(tm->DD);
  4690  0120B4  0100               	movlb	0	; () banked
  4691  0120B6  EE20 F008          	lfsr	2,8
  4692  0120BA  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4693  0120BC  26D9               	addwf	fsr2l,f,c
  4694  0120BE  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4695  0120C0  22DA               	addwfc	fsr2h,f,c
  4696  0120C2  50DF               	movf	indf2,w,c
  4697  0120C4  ECBD  F09B         	call	_d_to_x
  4698  0120C8  010F               	movlb	15	; () banked
  4699  0120CA  6F3A               	movwf	58,b	;volatile
  4700                           
  4701                           ; BSR set to: 15
  4702                           ;My_RTCC.c: 115: RTCVALH = d_to_x(tm->MM);
  4703  0120CC  0100               	movlb	0	; () banked
  4704  0120CE  EE20 F009          	lfsr	2,9
  4705  0120D2  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4706  0120D4  26D9               	addwf	fsr2l,f,c
  4707  0120D6  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4708  0120D8  22DA               	addwfc	fsr2h,f,c
  4709  0120DA  50DF               	movf	indf2,w,c
  4710  0120DC  ECBD  F09B         	call	_d_to_x
  4711  0120E0  010F               	movlb	15	; () banked
  4712  0120E2  6F3B               	movwf	59,b	;volatile
  4713                           
  4714                           ; BSR set to: 15
  4715                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR0 = 1;
  4716  0120E4  010F               	movlb	15	; () banked
  4717  0120E6  813F               	bsf	63,0,b	;volatile
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;My_RTCC.c: 117: RTCCFGbits.RTCPTR1 = 0;
  4721  0120E8  010F               	movlb	15	; () banked
  4722  0120EA  933F               	bcf	63,1,b	;volatile
  4723                           
  4724                           ; BSR set to: 15
  4725                           ;My_RTCC.c: 118: RTCVALL = d_to_x(tm->hh);
  4726  0120EC  0100               	movlb	0	; () banked
  4727  0120EE  EE20 F006          	lfsr	2,6
  4728  0120F2  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4729  0120F4  26D9               	addwf	fsr2l,f,c
  4730  0120F6  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4731  0120F8  22DA               	addwfc	fsr2h,f,c
  4732  0120FA  50DF               	movf	indf2,w,c
  4733  0120FC  ECBD  F09B         	call	_d_to_x
  4734  012100  010F               	movlb	15	; () banked
  4735  012102  6F3A               	movwf	58,b	;volatile
  4736                           
  4737                           ; BSR set to: 15
  4738                           ;My_RTCC.c: 119: RTCVALH = d_to_x(tm->EE);
  4739  012104  0100               	movlb	0	; () banked
  4740  012106  EE20 F007          	lfsr	2,7
  4741  01210A  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4742  01210C  26D9               	addwf	fsr2l,f,c
  4743  01210E  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4744  012110  22DA               	addwfc	fsr2h,f,c
  4745  012112  50DF               	movf	indf2,w,c
  4746  012114  ECBD  F09B         	call	_d_to_x
  4747  012118  010F               	movlb	15	; () banked
  4748  01211A  6F3B               	movwf	59,b	;volatile
  4749                           
  4750                           ; BSR set to: 15
  4751                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR0 = 0;
  4752  01211C  010F               	movlb	15	; () banked
  4753  01211E  913F               	bcf	63,0,b	;volatile
  4754                           
  4755                           ; BSR set to: 15
  4756                           ;My_RTCC.c: 121: RTCCFGbits.RTCPTR1 = 0;
  4757  012120  010F               	movlb	15	; () banked
  4758  012122  933F               	bcf	63,1,b	;volatile
  4759                           
  4760                           ; BSR set to: 15
  4761                           ;My_RTCC.c: 122: RTCVALL = d_to_x(tm->ss);
  4762  012124  0100               	movlb	0	; () banked
  4763  012126  EE20 F004          	lfsr	2,4
  4764  01212A  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4765  01212C  26D9               	addwf	fsr2l,f,c
  4766  01212E  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4767  012130  22DA               	addwfc	fsr2h,f,c
  4768  012132  50DF               	movf	indf2,w,c
  4769  012134  ECBD  F09B         	call	_d_to_x
  4770  012138  010F               	movlb	15	; () banked
  4771  01213A  6F3A               	movwf	58,b	;volatile
  4772                           
  4773                           ; BSR set to: 15
  4774                           ;My_RTCC.c: 123: RTCVALH = d_to_x(tm->mm);
  4775  01213C  0100               	movlb	0	; () banked
  4776  01213E  EE20 F005          	lfsr	2,5
  4777  012142  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  4778  012144  26D9               	addwf	fsr2l,f,c
  4779  012146  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  4780  012148  22DA               	addwfc	fsr2h,f,c
  4781  01214A  50DF               	movf	indf2,w,c
  4782  01214C  ECBD  F09B         	call	_d_to_x
  4783  012150  010F               	movlb	15	; () banked
  4784  012152  6F3B               	movwf	59,b	;volatile
  4785                           
  4786                           ; BSR set to: 15
  4787  012154  0012               	return		;funcret
  4788  012156                     __end_of_caltime_to_RTCC:
  4789                           	opt stack 0
  4790                           tblptru	equ	0xFF8
  4791                           tblptrh	equ	0xFF7
  4792                           tblptrl	equ	0xFF6
  4793                           tablat	equ	0xFF5
  4794                           prodh	equ	0xFF4
  4795                           prodl	equ	0xFF3
  4796                           intcon	equ	0xFF2
  4797                           intcon2	equ	0xFF1
  4798                           postinc0	equ	0xFEE
  4799                           wreg	equ	0xFE8
  4800                           postdec1	equ	0xFE5
  4801                           fsr1h	equ	0xFE2
  4802                           fsr1l	equ	0xFE1
  4803                           indf2	equ	0xFDF
  4804                           postinc2	equ	0xFDE
  4805                           postdec2	equ	0xFDD
  4806                           fsr2h	equ	0xFDA
  4807                           fsr2l	equ	0xFD9
  4808                           status	equ	0xFD8
  4809                           
  4810 ;; *************** function _d_to_x *****************
  4811 ;; Defined at:
  4812 ;;		line 46 in file "../My_library/My_RTCC.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  dec             1    wreg     unsigned char 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  dec             1    8[BANK0 ] unsigned char 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      unsigned char 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4829 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4830 ;;Total ram usage:        1 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:   12
  4833 ;; This function calls:
  4834 ;;		___awdiv
  4835 ;; This function is called by:
  4836 ;;		_caltime_to_RTCC
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text19
  4841  01377A                     __ptext19:
  4842                           	opt stack 0
  4843  01377A                     _d_to_x:
  4844                           	opt stack 14
  4845                           
  4846                           ; BSR set to: 15
  4847                           ;incstack = 0
  4848                           ;d_to_x@dec stored from wreg
  4849  01377A  0100               	movlb	0	; () banked
  4850  01377C  6F68               	movwf	d_to_x@dec& (0+255),b
  4851                           
  4852                           ;My_RTCC.c: 49: return dec / 10 * 6 + dec;
  4853  01377E  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  4854  013782  0100               	movlb	0	; () banked
  4855  013784  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  4856  013786  0E00               	movlw	0
  4857  013788  0100               	movlb	0	; () banked
  4858  01378A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4859  01378C  0E0A               	movlw	10
  4860  01378E  6F62               	movwf	___awdiv@divisor& (0+255),b
  4861  013790  ECD9  F091         	call	___awdiv	;wreg free
  4862  013794  0100               	movlb	0	; () banked
  4863  013796  5160               	movf	?___awdiv& (0+255),w,b
  4864  013798  0D06               	mullw	6
  4865  01379A  50F3               	movf	prodl,w,c
  4866  01379C  0100               	movlb	0	; () banked
  4867  01379E  2568               	addwf	d_to_x@dec& (0+255),w,b
  4868  0137A0  0012               	return	
  4869  0137A2                     __end_of_d_to_x:
  4870                           	opt stack 0
  4871                           tblptru	equ	0xFF8
  4872                           tblptrh	equ	0xFF7
  4873                           tblptrl	equ	0xFF6
  4874                           tablat	equ	0xFF5
  4875                           prodh	equ	0xFF4
  4876                           prodl	equ	0xFF3
  4877                           intcon	equ	0xFF2
  4878                           intcon2	equ	0xFF1
  4879                           postinc0	equ	0xFEE
  4880                           wreg	equ	0xFE8
  4881                           postdec1	equ	0xFE5
  4882                           fsr1h	equ	0xFE2
  4883                           fsr1l	equ	0xFE1
  4884                           indf2	equ	0xFDF
  4885                           postinc2	equ	0xFDE
  4886                           postdec2	equ	0xFDD
  4887                           fsr2h	equ	0xFDA
  4888                           fsr2l	equ	0xFD9
  4889                           status	equ	0xFD8
  4890                           
  4891 ;; *************** function ___awdiv *****************
  4892 ;; Defined at:
  4893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  dividend        2    0[BANK0 ] int 
  4896 ;;  divisor         2    2[BANK0 ] int 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  quotient        2    6[BANK0 ] int 
  4899 ;;  sign            1    5[BANK0 ] unsigned char 
  4900 ;;  counter         1    4[BANK0 ] unsigned char 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  2    0[BANK0 ] int 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4910 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4911 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4913 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4914 ;;Total ram usage:        8 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:   11
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_d_to_x
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text20
  4925  0123B2                     __ptext20:
  4926                           	opt stack 0
  4927  0123B2                     ___awdiv:
  4928                           	opt stack 14
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;incstack = 0
  4932  0123B2  0E00               	movlw	0
  4933  0123B4  0100               	movlb	0	; () banked
  4934  0123B6  6F65               	movwf	___awdiv@sign& (0+255),b
  4935                           
  4936                           ; BSR set to: 0
  4937  0123B8  0100               	movlb	0	; () banked
  4938  0123BA  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4939  0123BC  D008               	goto	l7972
  4940                           
  4941                           ; BSR set to: 0
  4942  0123BE  0100               	movlb	0	; () banked
  4943  0123C0  6D62               	negf	___awdiv@divisor& (0+255),b
  4944  0123C2  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4945  0123C4  B0D8               	btfsc	status,0,c
  4946  0123C6  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4947                           
  4948                           ; BSR set to: 0
  4949  0123C8  0E01               	movlw	1
  4950  0123CA  0100               	movlb	0	; () banked
  4951  0123CC  6F65               	movwf	___awdiv@sign& (0+255),b
  4952  0123CE                     l7972:
  4953                           
  4954                           ; BSR set to: 0
  4955  0123CE  0100               	movlb	0	; () banked
  4956  0123D0  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4957  0123D2  D008               	goto	l7978
  4958                           
  4959                           ; BSR set to: 0
  4960  0123D4  0100               	movlb	0	; () banked
  4961  0123D6  6D60               	negf	___awdiv@dividend& (0+255),b
  4962  0123D8  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4963  0123DA  B0D8               	btfsc	status,0,c
  4964  0123DC  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4965                           
  4966                           ; BSR set to: 0
  4967  0123DE  0E01               	movlw	1
  4968  0123E0  0100               	movlb	0	; () banked
  4969  0123E2  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  4970  0123E4                     l7978:
  4971                           
  4972                           ; BSR set to: 0
  4973  0123E4  0E00               	movlw	0
  4974  0123E6  0100               	movlb	0	; () banked
  4975  0123E8  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  4976  0123EA  0E00               	movlw	0
  4977  0123EC  6F66               	movwf	___awdiv@quotient& (0+255),b
  4978                           
  4979                           ; BSR set to: 0
  4980  0123EE  0100               	movlb	0	; () banked
  4981  0123F0  5162               	movf	___awdiv@divisor& (0+255),w,b
  4982  0123F2  0100               	movlb	0	; () banked
  4983  0123F4  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4984  0123F6  B4D8               	btfsc	status,2,c
  4985  0123F8  D02C               	goto	l8000
  4986                           
  4987                           ; BSR set to: 0
  4988  0123FA  0E01               	movlw	1
  4989  0123FC  0100               	movlb	0	; () banked
  4990  0123FE  6F64               	movwf	___awdiv@counter& (0+255),b
  4991  012400  D006               	goto	l7986
  4992  012402                     l7984:
  4993                           
  4994                           ; BSR set to: 0
  4995  012402  0100               	movlb	0	; () banked
  4996  012404  90D8               	bcf	status,0,c
  4997  012406  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  4998  012408  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4999  01240A  0100               	movlb	0	; () banked
  5000  01240C  2B64               	incf	___awdiv@counter& (0+255),f,b
  5001  01240E                     l7986:
  5002                           
  5003                           ; BSR set to: 0
  5004  01240E  0100               	movlb	0	; () banked
  5005  012410  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5006  012412  D7F7               	goto	l7984
  5007  012414                     l7988:
  5008                           
  5009                           ; BSR set to: 0
  5010  012414  0100               	movlb	0	; () banked
  5011  012416  90D8               	bcf	status,0,c
  5012  012418  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  5013  01241A  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5014                           
  5015                           ; BSR set to: 0
  5016  01241C  0100               	movlb	0	; () banked
  5017  01241E  5162               	movf	___awdiv@divisor& (0+255),w,b
  5018  012420  0100               	movlb	0	; () banked
  5019  012422  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  5020  012424  0100               	movlb	0	; () banked
  5021  012426  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5022  012428  0100               	movlb	0	; () banked
  5023  01242A  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5024  01242C  A0D8               	btfss	status,0,c
  5025  01242E  D00A               	goto	l7996
  5026                           
  5027                           ; BSR set to: 0
  5028  012430  0100               	movlb	0	; () banked
  5029  012432  5162               	movf	___awdiv@divisor& (0+255),w,b
  5030  012434  0100               	movlb	0	; () banked
  5031  012436  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  5032  012438  0100               	movlb	0	; () banked
  5033  01243A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5034  01243C  0100               	movlb	0	; () banked
  5035  01243E  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5036                           
  5037                           ; BSR set to: 0
  5038  012440  0100               	movlb	0	; () banked
  5039  012442  8166               	bsf	___awdiv@quotient& (0+255),0,b
  5040  012444                     l7996:
  5041                           
  5042                           ; BSR set to: 0
  5043  012444  0100               	movlb	0	; () banked
  5044  012446  90D8               	bcf	status,0,c
  5045  012448  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5046  01244A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  5047                           
  5048                           ; BSR set to: 0
  5049  01244C  0100               	movlb	0	; () banked
  5050  01244E  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  5051  012450  D7E1               	goto	l7988
  5052  012452                     l8000:
  5053                           
  5054                           ; BSR set to: 0
  5055  012452  0100               	movlb	0	; () banked
  5056  012454  5165               	movf	___awdiv@sign& (0+255),w,b
  5057  012456  0100               	movlb	0	; () banked
  5058  012458  B4D8               	btfsc	status,2,c
  5059  01245A  D005               	goto	l8004
  5060                           
  5061                           ; BSR set to: 0
  5062  01245C  0100               	movlb	0	; () banked
  5063  01245E  6D66               	negf	___awdiv@quotient& (0+255),b
  5064  012460  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5065  012462  B0D8               	btfsc	status,0,c
  5066  012464  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5067  012466                     l8004:
  5068                           
  5069                           ; BSR set to: 0
  5070  012466  C066  F060         	movff	___awdiv@quotient,?___awdiv
  5071  01246A  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  5072  01246E  0012               	return	
  5073  012470                     __end_of___awdiv:
  5074                           	opt stack 0
  5075                           tblptru	equ	0xFF8
  5076                           tblptrh	equ	0xFF7
  5077                           tblptrl	equ	0xFF6
  5078                           tablat	equ	0xFF5
  5079                           prodh	equ	0xFF4
  5080                           prodl	equ	0xFF3
  5081                           intcon	equ	0xFF2
  5082                           intcon2	equ	0xFF1
  5083                           postinc0	equ	0xFEE
  5084                           wreg	equ	0xFE8
  5085                           postdec1	equ	0xFE5
  5086                           fsr1h	equ	0xFE2
  5087                           fsr1l	equ	0xFE1
  5088                           indf2	equ	0xFDF
  5089                           postinc2	equ	0xFDE
  5090                           postdec2	equ	0xFDD
  5091                           fsr2h	equ	0xFDA
  5092                           fsr2l	equ	0xFD9
  5093                           status	equ	0xFD8
  5094                           
  5095 ;; *************** function _OSC_init *****************
  5096 ;; Defined at:
  5097 ;;		line 8 in file "../My_library/My_PIC.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;		None
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;		None
  5102 ;; Return value:  Size  Location     Type
  5103 ;;		None               void
  5104 ;; Registers used:
  5105 ;;		wreg, status,2
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5115 ;;Total ram usage:        0 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; Hardware stack levels required when called:   11
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_main_init
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text21
  5126  0138F8                     __ptext21:
  5127                           	opt stack 0
  5128  0138F8                     _OSC_init:
  5129                           	opt stack 18
  5130                           
  5131                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;incstack = 0
  5135  0138F8  88D3               	bsf	4051,4,c	;volatile
  5136  0138FA  8AD3               	bsf	4051,5,c	;volatile
  5137  0138FC  8CD3               	bsf	4051,6,c	;volatile
  5138                           
  5139                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  5140  0138FE  8C9B               	bsf	3995,6,c	;volatile
  5141                           
  5142                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  5143  013900  0EFC               	movlw	-4
  5144  013902  16D3               	andwf	4051,f,c	;volatile
  5145  013904  0012               	return		;funcret
  5146  013906                     __end_of_OSC_init:
  5147                           	opt stack 0
  5148                           tblptru	equ	0xFF8
  5149                           tblptrh	equ	0xFF7
  5150                           tblptrl	equ	0xFF6
  5151                           tablat	equ	0xFF5
  5152                           prodh	equ	0xFF4
  5153                           prodl	equ	0xFF3
  5154                           intcon	equ	0xFF2
  5155                           intcon2	equ	0xFF1
  5156                           postinc0	equ	0xFEE
  5157                           wreg	equ	0xFE8
  5158                           postdec1	equ	0xFE5
  5159                           fsr1h	equ	0xFE2
  5160                           fsr1l	equ	0xFE1
  5161                           indf2	equ	0xFDF
  5162                           postinc2	equ	0xFDE
  5163                           postdec2	equ	0xFDD
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8
  5167                           
  5168 ;; *************** function _I2C_init *****************
  5169 ;; Defined at:
  5170 ;;		line 11 in file "../My_library/My_I2C.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;		None
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;		None
  5175 ;; Return value:  Size  Location     Type
  5176 ;;		None               void
  5177 ;; Registers used:
  5178 ;;		wreg, status,2
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;Total ram usage:        0 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:   11
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_main_init
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text22
  5199  0138E6                     __ptext22:
  5200                           	opt stack 0
  5201  0138E6                     _I2C_init:
  5202                           	opt stack 18
  5203                           
  5204                           ;My_I2C.c: 12: SSP1STAT = 0b10000000;
  5205                           
  5206                           ;incstack = 0
  5207  0138E6  0E80               	movlw	128
  5208  0138E8  6EC7               	movwf	4039,c	;volatile
  5209                           
  5210                           ;My_I2C.c: 13: SSP1CON1 = 0b00101000;
  5211  0138EA  0E28               	movlw	40
  5212  0138EC  6EC6               	movwf	4038,c	;volatile
  5213                           
  5214                           ;My_I2C.c: 14: SSP1ADD = 0x13;
  5215  0138EE  0E13               	movlw	19
  5216  0138F0  6EC8               	movwf	4040,c	;volatile
  5217                           
  5218                           ;My_I2C.c: 17: SSP1IF = 0;
  5219  0138F2  969E               	bcf	3998,3,c	;volatile
  5220                           
  5221                           ;My_I2C.c: 18: BCL1IF = 0;
  5222  0138F4  96A1               	bcf	4001,3,c	;volatile
  5223  0138F6  0012               	return		;funcret
  5224  0138F8                     __end_of_I2C_init:
  5225                           	opt stack 0
  5226                           tblptru	equ	0xFF8
  5227                           tblptrh	equ	0xFF7
  5228                           tblptrl	equ	0xFF6
  5229                           tablat	equ	0xFF5
  5230                           prodh	equ	0xFF4
  5231                           prodl	equ	0xFF3
  5232                           intcon	equ	0xFF2
  5233                           intcon2	equ	0xFF1
  5234                           postinc0	equ	0xFEE
  5235                           wreg	equ	0xFE8
  5236                           postdec1	equ	0xFE5
  5237                           fsr1h	equ	0xFE2
  5238                           fsr1l	equ	0xFE1
  5239                           indf2	equ	0xFDF
  5240                           postinc2	equ	0xFDE
  5241                           postdec2	equ	0xFDD
  5242                           fsr2h	equ	0xFDA
  5243                           fsr2l	equ	0xFD9
  5244                           status	equ	0xFD8
  5245                           
  5246 ;; *************** function _display_time_0802 *****************
  5247 ;; Defined at:
  5248 ;;		line 225 in file "../My_library/My_RTCC.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  tm              2   55[BANK0 ] PTR struct .
  5251 ;;		 -> now(14), 
  5252 ;;  line0           2   57[BANK0 ] PTR unsigned char 
  5253 ;;		 -> main@s(40), 
  5254 ;;  line1           2   59[BANK0 ] PTR unsigned char 
  5255 ;;		 -> main@s(40), 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;		None               void
  5260 ;; Registers used:
  5261 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5267 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5271 ;;Total ram usage:        6 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:   15
  5274 ;; This function calls:
  5275 ;;		_RTCC_from_RTCC
  5276 ;;		_display_dec
  5277 ;;		_strcat
  5278 ;;		_strcpy
  5279 ;; This function is called by:
  5280 ;;		_main
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text23
  5285  010964                     __ptext23:
  5286                           	opt stack 0
  5287  010964                     _display_time_0802:
  5288                           	opt stack 15
  5289                           
  5290                           ;My_RTCC.c: 226: RTCC_from_RTCC(&now);
  5291                           
  5292                           ;incstack = 0
  5293  010964  0EB6               	movlw	low _now
  5294  010966  0100               	movlb	0	; () banked
  5295  010968  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5296  01096A  0E01               	movlw	high _now
  5297  01096C  0100               	movlb	0	; () banked
  5298  01096E  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5299  010970  EC5A  F09C         	call	_RTCC_from_RTCC	;wreg free
  5300                           
  5301                           ;My_RTCC.c: 228: strcpy(line0, "");
  5302  010974  C099  F060         	movff	display_time_0802@line0,strcpy@to
  5303  010978  C09A  F061         	movff	display_time_0802@line0+1,strcpy@to+1
  5304  01097C  0EE8               	movlw	low (STR_21+3)
  5305  01097E  0100               	movlb	0	; () banked
  5306  010980  6F62               	movwf	strcpy@from& (0+255),b
  5307  010982  0EFF               	movlw	high (STR_21+3)
  5308  010984  0100               	movlb	0	; () banked
  5309  010986  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5310  010988  EC84  F09A         	call	_strcpy	;wreg free
  5311                           
  5312                           ;My_RTCC.c: 229: display_dec(line0, tm->YY, tm->edit.flag.YY);
  5313  01098C  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  5314  010990  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  5315  010994  0100               	movlb	0	; () banked
  5316  010996  EE20 F00A          	lfsr	2,10
  5317  01099A  5197               	movf	display_time_0802@tm& (0+255),w,b
  5318  01099C  26D9               	addwf	fsr2l,f,c
  5319  01099E  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5320  0109A0  22DA               	addwfc	fsr2h,f,c
  5321  0109A2  50DF               	movf	indf2,w,c
  5322  0109A4  0100               	movlb	0	; () banked
  5323  0109A6  6F91               	movwf	display_dec@dec& (0+255),b
  5324  0109A8  0100               	movlb	0	; () banked
  5325  0109AA  EE20 F00D          	lfsr	2,13
  5326  0109AE  5197               	movf	display_time_0802@tm& (0+255),w,b
  5327  0109B0  26D9               	addwf	fsr2l,f,c
  5328  0109B2  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5329  0109B4  22DA               	addwfc	fsr2h,f,c
  5330  0109B6  0E00               	movlw	0
  5331  0109B8  BADF               	btfsc	indf2,5,c
  5332  0109BA  0E01               	movlw	1
  5333  0109BC  0100               	movlb	0	; () banked
  5334  0109BE  6F92               	movwf	display_dec@edit& (0+255),b
  5335  0109C0  EC8A  F098         	call	_display_dec	;wreg free
  5336                           
  5337                           ;My_RTCC.c: 230: strcat(line0, "/");
  5338  0109C4  C099  F060         	movff	display_time_0802@line0,strcat@to
  5339  0109C8  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  5340  0109CC  0EFA               	movlw	low STR_6
  5341  0109CE  0100               	movlb	0	; () banked
  5342  0109D0  6F62               	movwf	strcat@from& (0+255),b
  5343  0109D2  0EFF               	movlw	high STR_6
  5344  0109D4  0100               	movlb	0	; () banked
  5345  0109D6  6F63               	movwf	(strcat@from+1)& (0+255),b
  5346  0109D8  ECF0  F098         	call	_strcat	;wreg free
  5347                           
  5348                           ;My_RTCC.c: 231: display_dec(line0, tm->MM, tm->edit.flag.MM);
  5349  0109DC  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  5350  0109E0  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  5351  0109E4  0100               	movlb	0	; () banked
  5352  0109E6  EE20 F009          	lfsr	2,9
  5353  0109EA  5197               	movf	display_time_0802@tm& (0+255),w,b
  5354  0109EC  26D9               	addwf	fsr2l,f,c
  5355  0109EE  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5356  0109F0  22DA               	addwfc	fsr2h,f,c
  5357  0109F2  50DF               	movf	indf2,w,c
  5358  0109F4  0100               	movlb	0	; () banked
  5359  0109F6  6F91               	movwf	display_dec@dec& (0+255),b
  5360  0109F8  0100               	movlb	0	; () banked
  5361  0109FA  EE20 F00D          	lfsr	2,13
  5362  0109FE  5197               	movf	display_time_0802@tm& (0+255),w,b
  5363  010A00  26D9               	addwf	fsr2l,f,c
  5364  010A02  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5365  010A04  22DA               	addwfc	fsr2h,f,c
  5366  010A06  0E00               	movlw	0
  5367  010A08  B8DF               	btfsc	indf2,4,c
  5368  010A0A  0E01               	movlw	1
  5369  010A0C  0100               	movlb	0	; () banked
  5370  010A0E  6F92               	movwf	display_dec@edit& (0+255),b
  5371  010A10  EC8A  F098         	call	_display_dec	;wreg free
  5372                           
  5373                           ;My_RTCC.c: 232: strcat(line0, "/");
  5374  010A14  C099  F060         	movff	display_time_0802@line0,strcat@to
  5375  010A18  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  5376  010A1C  0EFA               	movlw	low STR_6
  5377  010A1E  0100               	movlb	0	; () banked
  5378  010A20  6F62               	movwf	strcat@from& (0+255),b
  5379  010A22  0EFF               	movlw	high STR_6
  5380  010A24  0100               	movlb	0	; () banked
  5381  010A26  6F63               	movwf	(strcat@from+1)& (0+255),b
  5382  010A28  ECF0  F098         	call	_strcat	;wreg free
  5383                           
  5384                           ;My_RTCC.c: 233: display_dec(line0, tm->DD, tm->edit.flag.DD);
  5385  010A2C  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  5386  010A30  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  5387  010A34  0100               	movlb	0	; () banked
  5388  010A36  EE20 F008          	lfsr	2,8
  5389  010A3A  5197               	movf	display_time_0802@tm& (0+255),w,b
  5390  010A3C  26D9               	addwf	fsr2l,f,c
  5391  010A3E  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5392  010A40  22DA               	addwfc	fsr2h,f,c
  5393  010A42  50DF               	movf	indf2,w,c
  5394  010A44  0100               	movlb	0	; () banked
  5395  010A46  6F91               	movwf	display_dec@dec& (0+255),b
  5396  010A48  0100               	movlb	0	; () banked
  5397  010A4A  EE20 F00D          	lfsr	2,13
  5398  010A4E  5197               	movf	display_time_0802@tm& (0+255),w,b
  5399  010A50  26D9               	addwf	fsr2l,f,c
  5400  010A52  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5401  010A54  22DA               	addwfc	fsr2h,f,c
  5402  010A56  0E00               	movlw	0
  5403  010A58  B6DF               	btfsc	indf2,3,c
  5404  010A5A  0E01               	movlw	1
  5405  010A5C  0100               	movlb	0	; () banked
  5406  010A5E  6F92               	movwf	display_dec@edit& (0+255),b
  5407  010A60  EC8A  F098         	call	_display_dec	;wreg free
  5408                           
  5409                           ;My_RTCC.c: 235: strcpy(line1, "");
  5410  010A64  C09B  F060         	movff	display_time_0802@line1,strcpy@to
  5411  010A68  C09C  F061         	movff	display_time_0802@line1+1,strcpy@to+1
  5412  010A6C  0EE8               	movlw	low (STR_21+3)
  5413  010A6E  0100               	movlb	0	; () banked
  5414  010A70  6F62               	movwf	strcpy@from& (0+255),b
  5415  010A72  0EFF               	movlw	high (STR_21+3)
  5416  010A74  0100               	movlb	0	; () banked
  5417  010A76  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5418  010A78  EC84  F09A         	call	_strcpy	;wreg free
  5419                           
  5420                           ;My_RTCC.c: 236: display_dec(line1, tm->hh, tm->edit.flag.hh);
  5421  010A7C  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  5422  010A80  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  5423  010A84  0100               	movlb	0	; () banked
  5424  010A86  EE20 F006          	lfsr	2,6
  5425  010A8A  5197               	movf	display_time_0802@tm& (0+255),w,b
  5426  010A8C  26D9               	addwf	fsr2l,f,c
  5427  010A8E  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5428  010A90  22DA               	addwfc	fsr2h,f,c
  5429  010A92  50DF               	movf	indf2,w,c
  5430  010A94  0100               	movlb	0	; () banked
  5431  010A96  6F91               	movwf	display_dec@dec& (0+255),b
  5432  010A98  0100               	movlb	0	; () banked
  5433  010A9A  EE20 F00D          	lfsr	2,13
  5434  010A9E  5197               	movf	display_time_0802@tm& (0+255),w,b
  5435  010AA0  26D9               	addwf	fsr2l,f,c
  5436  010AA2  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5437  010AA4  22DA               	addwfc	fsr2h,f,c
  5438  010AA6  0E00               	movlw	0
  5439  010AA8  B4DF               	btfsc	indf2,2,c
  5440  010AAA  0E01               	movlw	1
  5441  010AAC  0100               	movlb	0	; () banked
  5442  010AAE  6F92               	movwf	display_dec@edit& (0+255),b
  5443  010AB0  EC8A  F098         	call	_display_dec	;wreg free
  5444                           
  5445                           ;My_RTCC.c: 237: if (now.colon) strcat(line1, ":");
  5446  010AB4  0101               	movlb	1	; () banked
  5447  010AB6  51C1               	movf	(_now+11)& (0+255),w,b
  5448  010AB8  B4D8               	btfsc	status,2,c
  5449  010ABA  D00D               	goto	l9064
  5450                           
  5451                           ; BSR set to: 1
  5452  010ABC  C09B  F060         	movff	display_time_0802@line1,strcat@to
  5453  010AC0  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  5454  010AC4  0EFC               	movlw	low STR_9
  5455  010AC6  0100               	movlb	0	; () banked
  5456  010AC8  6F62               	movwf	strcat@from& (0+255),b
  5457  010ACA  0EFF               	movlw	high STR_9
  5458  010ACC  0100               	movlb	0	; () banked
  5459  010ACE  6F63               	movwf	(strcat@from+1)& (0+255),b
  5460  010AD0  ECF0  F098         	call	_strcat	;wreg free
  5461  010AD4  D00C               	goto	l9066
  5462  010AD6                     l9064:
  5463                           
  5464                           ;My_RTCC.c: 238: else strcat(line1, " ");
  5465  010AD6  C09B  F060         	movff	display_time_0802@line1,strcat@to
  5466  010ADA  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  5467  010ADE  0E9F               	movlw	low (STR_17+7)
  5468  010AE0  0100               	movlb	0	; () banked
  5469  010AE2  6F62               	movwf	strcat@from& (0+255),b
  5470  010AE4  0EFF               	movlw	high (STR_17+7)
  5471  010AE6  0100               	movlb	0	; () banked
  5472  010AE8  6F63               	movwf	(strcat@from+1)& (0+255),b
  5473  010AEA  ECF0  F098         	call	_strcat	;wreg free
  5474  010AEE                     l9066:
  5475                           
  5476                           ;My_RTCC.c: 239: display_dec(line1, tm->mm, tm->edit.flag.mm);
  5477  010AEE  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  5478  010AF2  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  5479  010AF6  0100               	movlb	0	; () banked
  5480  010AF8  EE20 F005          	lfsr	2,5
  5481  010AFC  5197               	movf	display_time_0802@tm& (0+255),w,b
  5482  010AFE  26D9               	addwf	fsr2l,f,c
  5483  010B00  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5484  010B02  22DA               	addwfc	fsr2h,f,c
  5485  010B04  50DF               	movf	indf2,w,c
  5486  010B06  0100               	movlb	0	; () banked
  5487  010B08  6F91               	movwf	display_dec@dec& (0+255),b
  5488  010B0A  0100               	movlb	0	; () banked
  5489  010B0C  EE20 F00D          	lfsr	2,13
  5490  010B10  5197               	movf	display_time_0802@tm& (0+255),w,b
  5491  010B12  26D9               	addwf	fsr2l,f,c
  5492  010B14  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5493  010B16  22DA               	addwfc	fsr2h,f,c
  5494  010B18  0E00               	movlw	0
  5495  010B1A  B2DF               	btfsc	indf2,1,c
  5496  010B1C  0E01               	movlw	1
  5497  010B1E  0100               	movlb	0	; () banked
  5498  010B20  6F92               	movwf	display_dec@edit& (0+255),b
  5499  010B22  EC8A  F098         	call	_display_dec	;wreg free
  5500                           
  5501                           ;My_RTCC.c: 240: strcat(line1, "-");
  5502  010B26  C09B  F060         	movff	display_time_0802@line1,strcat@to
  5503  010B2A  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  5504  010B2E  0EF8               	movlw	low STR_11
  5505  010B30  0100               	movlb	0	; () banked
  5506  010B32  6F62               	movwf	strcat@from& (0+255),b
  5507  010B34  0EFF               	movlw	high STR_11
  5508  010B36  0100               	movlb	0	; () banked
  5509  010B38  6F63               	movwf	(strcat@from+1)& (0+255),b
  5510  010B3A  ECF0  F098         	call	_strcat	;wreg free
  5511                           
  5512                           ;My_RTCC.c: 241: display_dec(line1, tm->ss, tm->edit.flag.ss);
  5513  010B3E  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  5514  010B42  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  5515  010B46  0100               	movlb	0	; () banked
  5516  010B48  EE20 F004          	lfsr	2,4
  5517  010B4C  5197               	movf	display_time_0802@tm& (0+255),w,b
  5518  010B4E  26D9               	addwf	fsr2l,f,c
  5519  010B50  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5520  010B52  22DA               	addwfc	fsr2h,f,c
  5521  010B54  50DF               	movf	indf2,w,c
  5522  010B56  0100               	movlb	0	; () banked
  5523  010B58  6F91               	movwf	display_dec@dec& (0+255),b
  5524  010B5A  0100               	movlb	0	; () banked
  5525  010B5C  EE20 F00D          	lfsr	2,13
  5526  010B60  5197               	movf	display_time_0802@tm& (0+255),w,b
  5527  010B62  26D9               	addwf	fsr2l,f,c
  5528  010B64  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  5529  010B66  22DA               	addwfc	fsr2h,f,c
  5530  010B68  0E00               	movlw	0
  5531  010B6A  B0DF               	btfsc	indf2,0,c
  5532  010B6C  0E01               	movlw	1
  5533  010B6E  0100               	movlb	0	; () banked
  5534  010B70  6F92               	movwf	display_dec@edit& (0+255),b
  5535  010B72  EC8A  F098         	call	_display_dec	;wreg free
  5536  010B76  0012               	return		;funcret
  5537  010B78                     __end_of_display_time_0802:
  5538                           	opt stack 0
  5539                           tblptru	equ	0xFF8
  5540                           tblptrh	equ	0xFF7
  5541                           tblptrl	equ	0xFF6
  5542                           tablat	equ	0xFF5
  5543                           prodh	equ	0xFF4
  5544                           prodl	equ	0xFF3
  5545                           intcon	equ	0xFF2
  5546                           intcon2	equ	0xFF1
  5547                           postinc0	equ	0xFEE
  5548                           wreg	equ	0xFE8
  5549                           postdec1	equ	0xFE5
  5550                           fsr1h	equ	0xFE2
  5551                           fsr1l	equ	0xFE1
  5552                           indf2	equ	0xFDF
  5553                           postinc2	equ	0xFDE
  5554                           postdec2	equ	0xFDD
  5555                           fsr2h	equ	0xFDA
  5556                           fsr2l	equ	0xFD9
  5557                           status	equ	0xFD8
  5558                           
  5559 ;; *************** function _strcpy *****************
  5560 ;; Defined at:
  5561 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  to              2    0[BANK0 ] PTR unsigned char 
  5564 ;;		 -> main@s(40), 
  5565 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  5566 ;;		 -> STR_17(9), STR_12(1), STR_8(1), STR_5(1), 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  5569 ;;		 -> main@s(40), 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  2    0[BANK0 ] PTR unsigned char 
  5572 ;; Registers used:
  5573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5579 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5580 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5582 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5583 ;;Total ram usage:        6 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:   11
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_display_time_0802
  5590 ;;		_display_time_1602
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text24
  5595  013508                     __ptext24:
  5596                           	opt stack 0
  5597  013508                     _strcpy:
  5598                           	opt stack 18
  5599                           
  5600                           ;incstack = 0
  5601  013508  C060  F064         	movff	strcpy@to,strcpy@cp
  5602  01350C  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  5603  013510  D006               	goto	l8920
  5604  013512                     l8918:
  5605  013512  0100               	movlb	0	; () banked
  5606  013514  4B64               	infsnz	strcpy@cp& (0+255),f,b
  5607  013516  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  5608  013518  0100               	movlb	0	; () banked
  5609  01351A  4B62               	infsnz	strcpy@from& (0+255),f,b
  5610  01351C  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  5611  01351E                     l8920:
  5612  01351E  C062  FFF6         	movff	strcpy@from,tblptrl
  5613  013522  C063  FFF7         	movff	strcpy@from+1,tblptrh
  5614  013526                     	if	0	;tblptru may be non-zero
  5615  013526                     	endif
  5616  013526                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5617  013526  0E00               	movlw	low (__mediumconst shr (0+16))
  5618  013528  6EF8               	movwf	tblptru,c
  5619  01352A                     	endif
  5620  01352A  C064  FFD9         	movff	strcpy@cp,fsr2l
  5621  01352E  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  5622  013532  0008               	tblrd		*
  5623  013534  CFF5 FFDF          	movff	tablat,indf2
  5624  013538  50DF               	movf	indf2,w,c
  5625  01353A  B4D8               	btfsc	status,2,c
  5626  01353C  0012               	return	
  5627  01353E  D7E9               	goto	l8918
  5628  013540                     __end_of_strcpy:
  5629                           	opt stack 0
  5630                           tblptru	equ	0xFF8
  5631                           tblptrh	equ	0xFF7
  5632                           tblptrl	equ	0xFF6
  5633                           tablat	equ	0xFF5
  5634                           prodh	equ	0xFF4
  5635                           prodl	equ	0xFF3
  5636                           intcon	equ	0xFF2
  5637                           intcon2	equ	0xFF1
  5638                           postinc0	equ	0xFEE
  5639                           wreg	equ	0xFE8
  5640                           postdec1	equ	0xFE5
  5641                           fsr1h	equ	0xFE2
  5642                           fsr1l	equ	0xFE1
  5643                           indf2	equ	0xFDF
  5644                           postinc2	equ	0xFDE
  5645                           postdec2	equ	0xFDD
  5646                           fsr2h	equ	0xFDA
  5647                           fsr2l	equ	0xFD9
  5648                           status	equ	0xFD8
  5649                           
  5650 ;; *************** function _display_dec *****************
  5651 ;; Defined at:
  5652 ;;		line 218 in file "../My_library/My_RTCC.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  str             2   47[BANK0 ] PTR unsigned char 
  5655 ;;		 -> main@s(40), 
  5656 ;;  dec             1   49[BANK0 ] unsigned char 
  5657 ;;  edit            1   50[BANK0 ] unsigned char 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  s               4   51[BANK0 ] unsigned char [4]
  5660 ;; Return value:  Size  Location     Type
  5661 ;;		None               void
  5662 ;; Registers used:
  5663 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5670 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5672 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5673 ;;Total ram usage:        8 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; Hardware stack levels required when called:   13
  5676 ;; This function calls:
  5677 ;;		_sprintf
  5678 ;;		_strcat
  5679 ;; This function is called by:
  5680 ;;		_display_time_0802
  5681 ;;		_display_time_1602
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text25
  5686  013114                     __ptext25:
  5687                           	opt stack 0
  5688  013114                     _display_dec:
  5689                           	opt stack 16
  5690                           
  5691                           ;My_RTCC.c: 219: char s[4];
  5692                           ;My_RTCC.c: 220: sprintf(s, "%02d", dec);
  5693                           
  5694                           ;incstack = 0
  5695  013114  0E93               	movlw	low display_dec@s
  5696  013116  0100               	movlb	0	; () banked
  5697  013118  6F6C               	movwf	sprintf@sp& (0+255),b
  5698  01311A  0E00               	movlw	high display_dec@s
  5699  01311C  0100               	movlb	0	; () banked
  5700  01311E  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  5701  013120  0EE0               	movlw	low STR_3
  5702  013122  0100               	movlb	0	; () banked
  5703  013124  6F6E               	movwf	sprintf@f& (0+255),b
  5704  013126  0EFF               	movlw	high STR_3
  5705  013128  0100               	movlb	0	; () banked
  5706  01312A  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  5707  01312C  C091  F070         	movff	display_dec@dec,?_sprintf+4
  5708  013130  0100               	movlb	0	; () banked
  5709  013132  6B71               	clrf	(?_sprintf+5)& (0+255),b
  5710  013134  EC00  F080         	call	_sprintf	;wreg free
  5711                           
  5712                           ;My_RTCC.c: 221: if (edit && now.halfsec)strcat(str, "  ");
  5713  013138  0100               	movlb	0	; () banked
  5714  01313A  5192               	movf	display_dec@edit& (0+255),w,b
  5715  01313C  0100               	movlb	0	; () banked
  5716  01313E  B4D8               	btfsc	status,2,c
  5717  013140  D011               	goto	l8914
  5718                           
  5719                           ; BSR set to: 0
  5720  013142  0101               	movlb	1	; () banked
  5721  013144  51C2               	movf	(_now+12)& (0+255),w,b
  5722  013146  B4D8               	btfsc	status,2,c
  5723  013148  D00D               	goto	l8914
  5724                           
  5725                           ; BSR set to: 1
  5726  01314A  C08F  F060         	movff	display_dec@str,strcat@to
  5727  01314E  C090  F061         	movff	display_dec@str+1,strcat@to+1
  5728  013152  0E9E               	movlw	low (STR_17+6)
  5729  013154  0100               	movlb	0	; () banked
  5730  013156  6F62               	movwf	strcat@from& (0+255),b
  5731  013158  0EFF               	movlw	high (STR_17+6)
  5732  01315A  0100               	movlb	0	; () banked
  5733  01315C  6F63               	movwf	(strcat@from+1)& (0+255),b
  5734  01315E  ECF0  F098         	call	_strcat	;wreg free
  5735  013162  0012               	return	
  5736  013164                     l8914:
  5737                           
  5738                           ;My_RTCC.c: 222: else strcat(str, s);
  5739  013164  C08F  F060         	movff	display_dec@str,strcat@to
  5740  013168  C090  F061         	movff	display_dec@str+1,strcat@to+1
  5741  01316C  0E93               	movlw	low display_dec@s
  5742  01316E  0100               	movlb	0	; () banked
  5743  013170  6F62               	movwf	strcat@from& (0+255),b
  5744  013172  0E00               	movlw	high display_dec@s
  5745  013174  0100               	movlb	0	; () banked
  5746  013176  6F63               	movwf	(strcat@from+1)& (0+255),b
  5747  013178  ECF0  F098         	call	_strcat	;wreg free
  5748  01317C  0012               	return	
  5749  01317E                     __end_of_display_dec:
  5750                           	opt stack 0
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           prodh	equ	0xFF4
  5756                           prodl	equ	0xFF3
  5757                           intcon	equ	0xFF2
  5758                           intcon2	equ	0xFF1
  5759                           postinc0	equ	0xFEE
  5760                           wreg	equ	0xFE8
  5761                           postdec1	equ	0xFE5
  5762                           fsr1h	equ	0xFE2
  5763                           fsr1l	equ	0xFE1
  5764                           indf2	equ	0xFDF
  5765                           postinc2	equ	0xFDE
  5766                           postdec2	equ	0xFDD
  5767                           fsr2h	equ	0xFDA
  5768                           fsr2l	equ	0xFD9
  5769                           status	equ	0xFD8
  5770                           
  5771 ;; *************** function _strcat *****************
  5772 ;; Defined at:
  5773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  to              2    0[BANK0 ] PTR unsigned char 
  5776 ;;		 -> main@s(40), 
  5777 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  5778 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_16(2), 
  5779 ;;		 -> weekday_3char(28), STR_15(2), STR_14(2), STR_13(2), 
  5780 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_7(2), 
  5781 ;;		 -> STR_6(2), STR_4(3), display_dec@s(4), 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  5784 ;;		 -> main@s(40), 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  2    0[BANK0 ] PTR unsigned char 
  5787 ;; Registers used:
  5788 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5795 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5797 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;Total ram usage:        6 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:   11
  5801 ;; This function calls:
  5802 ;;		Nothing
  5803 ;; This function is called by:
  5804 ;;		_display_dec
  5805 ;;		_display_time_0802
  5806 ;;		_display_time_1602
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text26
  5811  0131E0                     __ptext26:
  5812                           	opt stack 0
  5813  0131E0                     _strcat:
  5814                           	opt stack 18
  5815                           
  5816                           ;incstack = 0
  5817  0131E0  C060  F064         	movff	strcat@to,strcat@cp
  5818  0131E4  C061  F065         	movff	strcat@to+1,strcat@cp+1
  5819  0131E8  D003               	goto	l8522
  5820  0131EA                     l8520:
  5821  0131EA  0100               	movlb	0	; () banked
  5822  0131EC  4B64               	infsnz	strcat@cp& (0+255),f,b
  5823  0131EE  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  5824  0131F0                     l8522:
  5825  0131F0  C064  FFD9         	movff	strcat@cp,fsr2l
  5826  0131F4  C065  FFDA         	movff	strcat@cp+1,fsr2h
  5827  0131F8  50DF               	movf	indf2,w,c
  5828  0131FA  B4D8               	btfsc	status,2,c
  5829  0131FC  D007               	goto	l8526
  5830  0131FE  D7F5               	goto	l8520
  5831  013200                     l8524:
  5832  013200  0100               	movlb	0	; () banked
  5833  013202  4B64               	infsnz	strcat@cp& (0+255),f,b
  5834  013204  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  5835  013206  0100               	movlb	0	; () banked
  5836  013208  4B62               	infsnz	strcat@from& (0+255),f,b
  5837  01320A  2B63               	incf	(strcat@from+1)& (0+255),f,b
  5838  01320C                     l8526:
  5839  01320C  C062  FFF6         	movff	strcat@from,tblptrl
  5840  013210  C063  FFF7         	movff	strcat@from+1,tblptrh
  5841  013214  0E00               	movlw	low (__mediumconst shr (0+16))
  5842  013216  6EF8               	movwf	tblptru,c
  5843  013218  C064  FFD9         	movff	strcat@cp,fsr2l
  5844  01321C  C065  FFDA         	movff	strcat@cp+1,fsr2h
  5845  013220  0E0E               	movlw	(high __ramtop+-1)
  5846  013222  64F7               	cpfsgt	tblptrh,c
  5847  013224  D003               	bra	u8347
  5848  013226  0008               	tblrd		*
  5849  013228  50F5               	movf	tablat,w,c
  5850  01322A  D005               	bra	u8340
  5851  01322C                     u8347:
  5852  01322C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5853  013230  CFF7 FFEA          	movff	tblptrh,fsr0h
  5854  013234  50EF               	movf	indf0,w,c
  5855  013236                     u8340:
  5856  013236  6EDF               	movwf	indf2,c
  5857  013238  50DF               	movf	indf2,w,c
  5858  01323A  B4D8               	btfsc	status,2,c
  5859  01323C  0012               	return	
  5860  01323E  D7E0               	goto	l8524
  5861  013240                     __end_of_strcat:
  5862                           	opt stack 0
  5863                           tblptru	equ	0xFF8
  5864                           tblptrh	equ	0xFF7
  5865                           tblptrl	equ	0xFF6
  5866                           tablat	equ	0xFF5
  5867                           prodh	equ	0xFF4
  5868                           prodl	equ	0xFF3
  5869                           intcon	equ	0xFF2
  5870                           intcon2	equ	0xFF1
  5871                           indf0	equ	0xFEF
  5872                           postinc0	equ	0xFEE
  5873                           fsr0h	equ	0xFEA
  5874                           fsr0l	equ	0xFE9
  5875                           wreg	equ	0xFE8
  5876                           postdec1	equ	0xFE5
  5877                           fsr1h	equ	0xFE2
  5878                           fsr1l	equ	0xFE1
  5879                           indf2	equ	0xFDF
  5880                           postinc2	equ	0xFDE
  5881                           postdec2	equ	0xFDD
  5882                           fsr2h	equ	0xFDA
  5883                           fsr2l	equ	0xFD9
  5884                           status	equ	0xFD8
  5885                           
  5886 ;; *************** function _sprintf *****************
  5887 ;; Defined at:
  5888 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  5891 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  5892 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  5893 ;;		 -> STR_25(37), STR_23(5), STR_3(5), 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;  tmpval          4    0        struct .
  5896 ;;  width           2   45[BANK0 ] int 
  5897 ;;  len             2   41[BANK0 ] unsigned int 
  5898 ;;  val             2   39[BANK0 ] unsigned int 
  5899 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  5900 ;;		 -> STR_43(7), weekday_3char(28), 
  5901 ;;  ap              2   35[BANK0 ] PTR void [1]
  5902 ;;		 -> ?_sprintf(2), 
  5903 ;;  c               1   44[BANK0 ] char 
  5904 ;;  flag            1   43[BANK0 ] unsigned char 
  5905 ;;  prec            1   34[BANK0 ] char 
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  2   12[BANK0 ] int 
  5908 ;; Registers used:
  5909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5915 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5916 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5917 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5918 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5919 ;;Total ram usage:       35 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:   12
  5922 ;; This function calls:
  5923 ;;		___lwdiv
  5924 ;;		___lwmod
  5925 ;;		___wmul
  5926 ;;		_isdigit
  5927 ;; This function is called by:
  5928 ;;		_display_dec
  5929 ;;		_print_time_dec
  5930 ;;		_print_time
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text27
  5935  010000                     __ptext27:
  5936                           	opt stack 0
  5937  010000                     _sprintf:
  5938                           	opt stack 16
  5939                           
  5940                           ;doprnt.c: 494: va_list ap;
  5941                           ;doprnt.c: 499: signed char c;
  5942                           ;doprnt.c: 501: int width;
  5943                           ;doprnt.c: 506: signed char prec;
  5944                           ;doprnt.c: 508: unsigned char flag;
  5945                           ;doprnt.c: 523: union {
  5946                           ;doprnt.c: 524: unsigned long vd;
  5947                           ;doprnt.c: 525: double integ;
  5948                           ;doprnt.c: 526: } tmpval;
  5949                           ;doprnt.c: 528: unsigned int val;
  5950                           ;doprnt.c: 529: unsigned len;
  5951                           ;doprnt.c: 530: const char * cp;
  5952                           ;doprnt.c: 533: *ap = __va_start();
  5953                           
  5954                           ;incstack = 0
  5955  010000  0E70               	movlw	low (?_sprintf+4)
  5956  010002  0100               	movlb	0	; () banked
  5957  010004  6F83               	movwf	sprintf@ap& (0+255),b
  5958  010006  0E00               	movlw	high (?_sprintf+4)
  5959  010008  0100               	movlb	0	; () banked
  5960  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  5961                           
  5962                           ;doprnt.c: 536: while(c = *f++) {
  5963  01000C  D20F               	goto	l8512
  5964  01000E                     l8372:
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;doprnt.c: 538: if(c != '%')
  5968  01000E  0E25               	movlw	37
  5969  010010  0100               	movlb	0	; () banked
  5970  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  5971  010014  B4D8               	btfsc	status,2,c
  5972  010016  D00A               	goto	l8378
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;doprnt.c: 540: {
  5976                           ;doprnt.c: 541: ((*sp++ = (c)));
  5977  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  5978  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  5979  010020  C08C  FFDF         	movff	sprintf@c,indf2
  5980                           
  5981                           ; BSR set to: 0
  5982  010024  0100               	movlb	0	; () banked
  5983  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  5984  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  5985                           
  5986                           ;doprnt.c: 542: continue;
  5987  01002A  D200               	goto	l8512
  5988  01002C                     l8378:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;doprnt.c: 543: }
  5992                           ;doprnt.c: 546: width = 0;
  5993  01002C  0E00               	movlw	0
  5994  01002E  0100               	movlb	0	; () banked
  5995  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  5996  010032  0E00               	movlw	0
  5997  010034  6F8D               	movwf	sprintf@width& (0+255),b
  5998                           
  5999                           ;doprnt.c: 548: flag = 0;
  6000  010036  0E00               	movlw	0
  6001  010038  0100               	movlb	0	; () banked
  6002  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;doprnt.c: 551: switch(*f) {
  6006                           
  6007                           ;doprnt.c: 550: for(;;) {
  6008  01003C  D005               	goto	l8384
  6009  01003E                     l8380:
  6010                           
  6011                           ;doprnt.c: 580: flag |= 0x04;
  6012  01003E  0100               	movlb	0	; () banked
  6013  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  6014                           
  6015                           ;doprnt.c: 581: f++;
  6016  010042  0100               	movlb	0	; () banked
  6017  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6018  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6019  010048                     l8384:
  6020  010048  C06E  FFF6         	movff	sprintf@f,tblptrl
  6021  01004C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6022  010050                     	if	0	;tblptru may be non-zero
  6023  010050                     	endif
  6024  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6025  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  6026  010052  6EF8               	movwf	tblptru,c
  6027  010054                     	endif
  6028  010054  0008               	tblrd		*
  6029  010056  50F5               	movf	tablat,w,c
  6030                           
  6031                           ; Switch size 1, requested type "space"
  6032                           ; Number of cases is 1, Range of values is 48 to 48
  6033                           ; switch strategies available:
  6034                           ; Name         Instructions Cycles
  6035                           ; simple_byte            4     3 (average)
  6036                           ;	Chosen strategy is simple_byte
  6037  010058  0A30               	xorlw	48	; case 48
  6038  01005A  B4D8               	btfsc	status,2,c
  6039  01005C  D7F0               	goto	l8380
  6040                           
  6041                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6042                           
  6043                           ;doprnt.c: 586: }
  6044                           
  6045                           ;doprnt.c: 585: break;
  6046  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
  6047  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6048  010066                     	if	0	;tblptru may be non-zero
  6049  010066                     	endif
  6050  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6051  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  6052  010068  6EF8               	movwf	tblptru,c
  6053  01006A                     	endif
  6054  01006A  0008               	tblrd		*
  6055  01006C  50F5               	movf	tablat,w,c
  6056  01006E  ECA8  F09B         	call	_isdigit
  6057  010072  A0D8               	btfss	status,0,c
  6058  010074  D0CB               	goto	l8434
  6059                           
  6060                           ;doprnt.c: 598: width = 0;
  6061  010076  0E00               	movlw	0
  6062  010078  0100               	movlb	0	; () banked
  6063  01007A  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6064  01007C  0E00               	movlw	0
  6065  01007E  6F8D               	movwf	sprintf@width& (0+255),b
  6066  010080                     l8390:
  6067                           
  6068                           ;doprnt.c: 600: width *= 10;
  6069  010080  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  6070  010084  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  6071  010088  0E00               	movlw	0
  6072  01008A  0100               	movlb	0	; () banked
  6073  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6074  01008E  0E0A               	movlw	10
  6075  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6076  010092  ECBC  F09A         	call	___wmul	;wreg free
  6077  010096  C060  F08D         	movff	?___wmul,sprintf@width
  6078  01009A  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  6079                           
  6080                           ;doprnt.c: 601: width += *f++ - '0';
  6081  01009E  0ED0               	movlw	208
  6082  0100A0  0100               	movlb	0	; () banked
  6083  0100A2  6F7E               	movwf	??_sprintf& (0+255),b
  6084  0100A4  0EFF               	movlw	255
  6085  0100A6  0100               	movlb	0	; () banked
  6086  0100A8  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  6087  0100AA  C06E  FFF6         	movff	sprintf@f,tblptrl
  6088  0100AE  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6089  0100B2                     	if	0	;tblptru may be non-zero
  6090  0100B2                     	endif
  6091  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6092  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  6093  0100B4  6EF8               	movwf	tblptru,c
  6094  0100B6                     	endif
  6095  0100B6  0008               	tblrd		*
  6096  0100B8  50F5               	movf	tablat,w,c
  6097  0100BA  0100               	movlb	0	; () banked
  6098  0100BC  6F80               	movwf	(??_sprintf+2)& (0+255),b
  6099  0100BE  6B81               	clrf	(??_sprintf+3)& (0+255),b
  6100  0100C0  0100               	movlb	0	; () banked
  6101  0100C2  517E               	movf	??_sprintf& (0+255),w,b
  6102  0100C4  0100               	movlb	0	; () banked
  6103  0100C6  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  6104  0100C8  0100               	movlb	0	; () banked
  6105  0100CA  517F               	movf	(??_sprintf+1)& (0+255),w,b
  6106  0100CC  0100               	movlb	0	; () banked
  6107  0100CE  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  6108  0100D0  0100               	movlb	0	; () banked
  6109  0100D2  5180               	movf	(??_sprintf+2)& (0+255),w,b
  6110  0100D4  0100               	movlb	0	; () banked
  6111  0100D6  278D               	addwf	sprintf@width& (0+255),f,b
  6112  0100D8  0100               	movlb	0	; () banked
  6113  0100DA  5181               	movf	(??_sprintf+3)& (0+255),w,b
  6114  0100DC  0100               	movlb	0	; () banked
  6115  0100DE  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  6116                           
  6117                           ; BSR set to: 0
  6118  0100E0  0100               	movlb	0	; () banked
  6119  0100E2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6120  0100E4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6124  0100E6  C06E  FFF6         	movff	sprintf@f,tblptrl
  6125  0100EA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6126  0100EE                     	if	0	;tblptru may be non-zero
  6127  0100EE                     	endif
  6128  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6129  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  6130  0100F0  6EF8               	movwf	tblptru,c
  6131  0100F2                     	endif
  6132  0100F2  0008               	tblrd		*
  6133  0100F4  50F5               	movf	tablat,w,c
  6134  0100F6  ECA8  F09B         	call	_isdigit
  6135  0100FA  A0D8               	btfss	status,0,c
  6136  0100FC  D087               	goto	l8434
  6137  0100FE  D7C0               	goto	l8390
  6138  010100                     l8398:
  6139                           
  6140                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6141  010100  C083  FFD9         	movff	sprintf@ap,fsr2l
  6142  010104  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  6143  010108  CFDE F085          	movff	postinc2,sprintf@cp
  6144  01010C  CFDD F086          	movff	postdec2,sprintf@cp+1
  6145  010110  0E02               	movlw	2
  6146  010112  0100               	movlb	0	; () banked
  6147  010114  2783               	addwf	sprintf@ap& (0+255),f,b
  6148  010116  0E00               	movlw	0
  6149  010118  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;doprnt.c: 740: if(!cp)
  6153  01011A  0100               	movlb	0	; () banked
  6154  01011C  5185               	movf	sprintf@cp& (0+255),w,b
  6155  01011E  0100               	movlb	0	; () banked
  6156  010120  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  6157  010122  A4D8               	btfss	status,2,c
  6158  010124  D006               	goto	l8406
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;doprnt.c: 741: cp = "(null)";
  6162  010126  0EBB               	movlw	low STR_43
  6163  010128  0100               	movlb	0	; () banked
  6164  01012A  6F85               	movwf	sprintf@cp& (0+255),b
  6165  01012C  0EFF               	movlw	high STR_43
  6166  01012E  0100               	movlb	0	; () banked
  6167  010130  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  6168  010132                     l8406:
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;doprnt.c: 745: len = 0;
  6172  010132  0E00               	movlw	0
  6173  010134  0100               	movlb	0	; () banked
  6174  010136  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  6175  010138  0E00               	movlw	0
  6176  01013A  6F89               	movwf	sprintf@len& (0+255),b
  6177                           
  6178                           ;doprnt.c: 746: while(cp[len])
  6179  01013C  D003               	goto	l8410
  6180  01013E                     l8408:
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;doprnt.c: 747: len++;
  6184  01013E  0100               	movlb	0	; () banked
  6185  010140  4B89               	infsnz	sprintf@len& (0+255),f,b
  6186  010142  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  6187  010144                     l8410:
  6188                           
  6189                           ; BSR set to: 0
  6190  010144  0100               	movlb	0	; () banked
  6191  010146  5189               	movf	sprintf@len& (0+255),w,b
  6192  010148  0100               	movlb	0	; () banked
  6193  01014A  2585               	addwf	sprintf@cp& (0+255),w,b
  6194  01014C  0100               	movlb	0	; () banked
  6195  01014E  6F7E               	movwf	??_sprintf& (0+255),b
  6196  010150  0100               	movlb	0	; () banked
  6197  010152  518A               	movf	(sprintf@len+1)& (0+255),w,b
  6198  010154  0100               	movlb	0	; () banked
  6199  010156  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  6200  010158  0100               	movlb	0	; () banked
  6201  01015A  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  6202  01015C  C07E  FFF6         	movff	??_sprintf,tblptrl
  6203  010160  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  6204  010164                     	if	0	;tblptru may be non-zero
  6205  010164                     	endif
  6206  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6207  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  6208  010166  6EF8               	movwf	tblptru,c
  6209  010168                     	endif
  6210  010168  0008               	tblrd		*
  6211  01016A  50F5               	movf	tablat,w,c
  6212  01016C  0900               	iorlw	0
  6213  01016E  A4D8               	btfss	status,2,c
  6214  010170  D7E6               	goto	l8408
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;doprnt.c: 757: if(width > len)
  6218                           
  6219                           ; BSR set to: 0
  6220  010172  0100               	movlb	0	; () banked
  6221  010174  518D               	movf	sprintf@width& (0+255),w,b
  6222  010176  0100               	movlb	0	; () banked
  6223  010178  5D89               	subwf	sprintf@len& (0+255),w,b
  6224  01017A  0100               	movlb	0	; () banked
  6225  01017C  518E               	movf	(sprintf@width+1)& (0+255),w,b
  6226  01017E  0100               	movlb	0	; () banked
  6227  010180  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  6228  010182  B0D8               	btfsc	status,0,c
  6229  010184  D009               	goto	l8416
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;doprnt.c: 758: width -= len;
  6233  010186  0100               	movlb	0	; () banked
  6234  010188  5189               	movf	sprintf@len& (0+255),w,b
  6235  01018A  0100               	movlb	0	; () banked
  6236  01018C  5F8D               	subwf	sprintf@width& (0+255),f,b
  6237  01018E  0100               	movlb	0	; () banked
  6238  010190  518A               	movf	(sprintf@len+1)& (0+255),w,b
  6239  010192  0100               	movlb	0	; () banked
  6240  010194  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  6241  010196  D00F               	goto	l8422
  6242  010198                     l8416:
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;doprnt.c: 759: else
  6246                           ;doprnt.c: 760: width = 0;
  6247  010198  0E00               	movlw	0
  6248  01019A  0100               	movlb	0	; () banked
  6249  01019C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6250  01019E  0E00               	movlw	0
  6251  0101A0  6F8D               	movwf	sprintf@width& (0+255),b
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;doprnt.c: 764: while(width--)
  6255  0101A2  D009               	goto	l8422
  6256  0101A4                     l8418:
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6260  0101A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6261  0101A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6262  0101AC  0E20               	movlw	32
  6263  0101AE  6EDF               	movwf	indf2,c
  6264                           
  6265                           ; BSR set to: 0
  6266  0101B0  0100               	movlb	0	; () banked
  6267  0101B2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6268  0101B4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6269  0101B6                     l8422:
  6270                           
  6271                           ; BSR set to: 0
  6272  0101B6  0100               	movlb	0	; () banked
  6273  0101B8  078D               	decf	sprintf@width& (0+255),f,b
  6274  0101BA  A0D8               	btfss	status,0,c
  6275  0101BC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6276  0101BE  0100               	movlb	0	; () banked
  6277  0101C0  298D               	incf	sprintf@width& (0+255),w,b
  6278  0101C2  E1F0               	bnz	l8418
  6279  0101C4  0100               	movlb	0	; () banked
  6280  0101C6  298E               	incf	(sprintf@width+1)& (0+255),w,b
  6281  0101C8  B4D8               	btfsc	status,2,c
  6282  0101CA  D014               	goto	l8430
  6283  0101CC  D7EB               	goto	l8418
  6284  0101CE                     l8424:
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6288  0101CE  C085  FFF6         	movff	sprintf@cp,tblptrl
  6289  0101D2  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  6290  0101D6                     	if	0	;tblptru may be non-zero
  6291  0101D6                     	endif
  6292  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6293  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  6294  0101D8  6EF8               	movwf	tblptru,c
  6295  0101DA                     	endif
  6296  0101DA  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6297  0101DE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6298  0101E2  0008               	tblrd		*
  6299  0101E4  CFF5 FFDF          	movff	tablat,indf2
  6300                           
  6301                           ; BSR set to: 0
  6302  0101E8  0100               	movlb	0	; () banked
  6303  0101EA  4B85               	infsnz	sprintf@cp& (0+255),f,b
  6304  0101EC  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  6305                           
  6306                           ; BSR set to: 0
  6307  0101EE  0100               	movlb	0	; () banked
  6308  0101F0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6309  0101F2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6310  0101F4                     l8430:
  6311                           
  6312                           ; BSR set to: 0
  6313  0101F4  0100               	movlb	0	; () banked
  6314  0101F6  0789               	decf	sprintf@len& (0+255),f,b
  6315  0101F8  A0D8               	btfss	status,0,c
  6316  0101FA  078A               	decf	(sprintf@len+1)& (0+255),f,b
  6317  0101FC  0100               	movlb	0	; () banked
  6318  0101FE  2989               	incf	sprintf@len& (0+255),w,b
  6319  010200  E1E6               	bnz	l8424
  6320  010202  0100               	movlb	0	; () banked
  6321  010204  298A               	incf	(sprintf@len+1)& (0+255),w,b
  6322  010206  B4D8               	btfsc	status,2,c
  6323  010208  D111               	goto	l8512
  6324  01020A  D7E1               	goto	l8424
  6325  01020C                     l8434:
  6326  01020C  C06E  FFF6         	movff	sprintf@f,tblptrl
  6327  010210  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6328  010214  0100               	movlb	0	; () banked
  6329  010216  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6330  010218  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6331  01021A                     	if	0	;tblptru may be non-zero
  6332  01021A                     	endif
  6333  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6334  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  6335  01021C  6EF8               	movwf	tblptru,c
  6336  01021E                     	endif
  6337  01021E  0008               	tblrd		*
  6338  010220  CFF5 F08C          	movff	tablat,sprintf@c
  6339  010224  0100               	movlb	0	; () banked
  6340  010226  518C               	movf	sprintf@c& (0+255),w,b
  6341                           
  6342                           ; Switch size 1, requested type "space"
  6343                           ; Number of cases is 4, Range of values is 0 to 115
  6344                           ; switch strategies available:
  6345                           ; Name         Instructions Cycles
  6346                           ; simple_byte           13     7 (average)
  6347                           ;	Chosen strategy is simple_byte
  6348  010228  0A00               	xorlw	0	; case 0
  6349  01022A  B4D8               	btfsc	status,2,c
  6350  01022C  D10F               	goto	l8514
  6351  01022E  0A64               	xorlw	100	; case 100
  6352  010230  B4D8               	btfsc	status,2,c
  6353  010232  D007               	goto	l8436
  6354  010234  0A0D               	xorlw	13	; case 105
  6355  010236  B4D8               	btfsc	status,2,c
  6356  010238  D004               	goto	l8436
  6357  01023A  0A1A               	xorlw	26	; case 115
  6358  01023C  B4D8               	btfsc	status,2,c
  6359  01023E  D760               	goto	l8398
  6360  010240  D0F5               	goto	l8512
  6361  010242                     l8436:
  6362                           
  6363                           ;doprnt.c: 1253: {
  6364                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6365  010242  C083  FFD9         	movff	sprintf@ap,fsr2l
  6366  010246  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  6367  01024A  CFDE F087          	movff	postinc2,sprintf@val
  6368  01024E  CFDD F088          	movff	postdec2,sprintf@val+1
  6369  010252  0E02               	movlw	2
  6370  010254  0100               	movlb	0	; () banked
  6371  010256  2783               	addwf	sprintf@ap& (0+255),f,b
  6372  010258  0E00               	movlw	0
  6373  01025A  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;doprnt.c: 1261: if((int)val < 0) {
  6377  01025C  0100               	movlb	0	; () banked
  6378  01025E  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  6379  010260  D008               	goto	l8446
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;doprnt.c: 1262: flag |= 0x03;
  6383  010262  0E03               	movlw	3
  6384  010264  0100               	movlb	0	; () banked
  6385  010266  138B               	iorwf	sprintf@flag& (0+255),f,b
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;doprnt.c: 1263: val = -val;
  6389  010268  0100               	movlb	0	; () banked
  6390  01026A  6D87               	negf	sprintf@val& (0+255),b
  6391  01026C  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  6392  01026E  B0D8               	btfsc	status,0,c
  6393  010270  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  6394  010272                     l8446:
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;doprnt.c: 1264: }
  6398                           ;doprnt.c: 1266: }
  6399                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6400  010272  0E01               	movlw	1
  6401  010274  0100               	movlb	0	; () banked
  6402  010276  6F8C               	movwf	sprintf@c& (0+255),b
  6403  010278                     l8448:
  6404                           
  6405                           ; BSR set to: 0
  6406  010278  0E05               	movlw	5
  6407  01027A  0100               	movlb	0	; () banked
  6408  01027C  198C               	xorwf	sprintf@c& (0+255),w,b
  6409  01027E  B4D8               	btfsc	status,2,c
  6410  010280  D019               	goto	l8460
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;doprnt.c: 1306: if(val < dpowers[c])
  6414                           
  6415                           ; BSR set to: 0
  6416                           
  6417                           ; BSR set to: 0
  6418  010282  0100               	movlb	0	; () banked
  6419  010284  518C               	movf	sprintf@c& (0+255),w,b
  6420  010286  0D02               	mullw	2
  6421  010288  0E6D               	movlw	low _dpowers
  6422  01028A  24F3               	addwf	prodl,w,c
  6423  01028C  6EF6               	movwf	tblptrl,c
  6424  01028E  0EFE               	movlw	high _dpowers
  6425  010290  20F4               	addwfc	prodh,w,c
  6426  010292  6EF7               	movwf	tblptrh,c
  6427  010294                     	if	1	;There are 3 active tblptr bytes
  6428  010294  6AF8               	clrf	tblptru,c
  6429  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  6430  010298  22F8               	addwfc	tblptru,f,c
  6431  01029A                     	endif
  6432  01029A  0009               	tblrd		*+
  6433  01029C  50F5               	movf	tablat,w,c
  6434  01029E  0100               	movlb	0	; () banked
  6435  0102A0  5D87               	subwf	sprintf@val& (0+255),w,b
  6436  0102A2  0009               	tblrd		*+
  6437  0102A4  50F5               	movf	tablat,w,c
  6438  0102A6  0100               	movlb	0	; () banked
  6439  0102A8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  6440  0102AA  A0D8               	btfss	status,0,c
  6441  0102AC  D003               	goto	l8460
  6442                           
  6443                           ; BSR set to: 0
  6444                           
  6445                           ; BSR set to: 0
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;doprnt.c: 1307: break;
  6449  0102AE  0100               	movlb	0	; () banked
  6450  0102B0  2B8C               	incf	sprintf@c& (0+255),f,b
  6451  0102B2  D7E2               	goto	l8448
  6452  0102B4                     l8460:
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6456  0102B4  0100               	movlb	0	; () banked
  6457  0102B6  518D               	movf	sprintf@width& (0+255),w,b
  6458  0102B8  0100               	movlb	0	; () banked
  6459  0102BA  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6460  0102BC  B4D8               	btfsc	status,2,c
  6461  0102BE  D00B               	goto	l8466
  6462                           
  6463                           ; BSR set to: 0
  6464  0102C0  C08B  F07E         	movff	sprintf@flag,??_sprintf
  6465  0102C4  0E03               	movlw	3
  6466  0102C6  0100               	movlb	0	; () banked
  6467  0102C8  177E               	andwf	??_sprintf& (0+255),f,b
  6468  0102CA  B4D8               	btfsc	status,2,c
  6469  0102CC  D004               	goto	l8466
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;doprnt.c: 1346: width--;
  6473  0102CE  0100               	movlb	0	; () banked
  6474  0102D0  078D               	decf	sprintf@width& (0+255),f,b
  6475  0102D2  A0D8               	btfss	status,0,c
  6476  0102D4  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6477  0102D6                     l8466:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;doprnt.c: 1381: if(width > c)
  6481  0102D6  0E80               	movlw	128
  6482  0102D8  0100               	movlb	0	; () banked
  6483  0102DA  BF8C               	btfsc	sprintf@c& (0+255),7,b
  6484  0102DC  0E7F               	movlw	127
  6485  0102DE  0100               	movlb	0	; () banked
  6486  0102E0  6F7E               	movwf	??_sprintf& (0+255),b
  6487  0102E2  0100               	movlb	0	; () banked
  6488  0102E4  518D               	movf	sprintf@width& (0+255),w,b
  6489  0102E6  0100               	movlb	0	; () banked
  6490  0102E8  5D8C               	subwf	sprintf@c& (0+255),w,b
  6491  0102EA  0100               	movlb	0	; () banked
  6492  0102EC  518E               	movf	(sprintf@width+1)& (0+255),w,b
  6493  0102EE  0A80               	xorlw	128
  6494  0102F0  0100               	movlb	0	; () banked
  6495  0102F2  597E               	subwfb	??_sprintf& (0+255),w,b
  6496  0102F4  B0D8               	btfsc	status,0,c
  6497  0102F6  D00B               	goto	l8470
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;doprnt.c: 1382: width -= c;
  6501  0102F8  0100               	movlb	0	; () banked
  6502  0102FA  518C               	movf	sprintf@c& (0+255),w,b
  6503  0102FC  0100               	movlb	0	; () banked
  6504  0102FE  5F8D               	subwf	sprintf@width& (0+255),f,b
  6505  010300  0E00               	movlw	0
  6506  010302  0100               	movlb	0	; () banked
  6507  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  6508  010306  0EFF               	movlw	255
  6509  010308  0100               	movlb	0	; () banked
  6510  01030A  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  6511  01030C  D005               	goto	l8472
  6512  01030E                     l8470:
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;doprnt.c: 1383: else
  6516                           ;doprnt.c: 1384: width = 0;
  6517  01030E  0E00               	movlw	0
  6518  010310  0100               	movlb	0	; () banked
  6519  010312  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  6520  010314  0E00               	movlw	0
  6521  010316  6F8D               	movwf	sprintf@width& (0+255),b
  6522  010318                     l8472:
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;doprnt.c: 1387: if(flag & 0x04) {
  6526  010318  0100               	movlb	0	; () banked
  6527  01031A  A58B               	btfss	sprintf@flag& (0+255),2,b
  6528  01031C  D024               	goto	l8488
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;doprnt.c: 1392: if(flag & 0x03)
  6532  01031E  C08B  F07E         	movff	sprintf@flag,??_sprintf
  6533  010322  0E03               	movlw	3
  6534  010324  0100               	movlb	0	; () banked
  6535  010326  177E               	andwf	??_sprintf& (0+255),f,b
  6536  010328  B4D8               	btfsc	status,2,c
  6537  01032A  D009               	goto	l8480
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  6541  01032C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6542  010330  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6543  010334  0E2D               	movlw	45
  6544  010336  6EDF               	movwf	indf2,c
  6545                           
  6546                           ; BSR set to: 0
  6547  010338  0100               	movlb	0	; () banked
  6548  01033A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6549  01033C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6550  01033E                     l8480:
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;doprnt.c: 1415: if(width)
  6554  01033E  0100               	movlb	0	; () banked
  6555  010340  518D               	movf	sprintf@width& (0+255),w,b
  6556  010342  0100               	movlb	0	; () banked
  6557  010344  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6558  010346  B4D8               	btfsc	status,2,c
  6559  010348  D037               	goto	l8502
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  6563                           
  6564                           ; BSR set to: 0
  6565                           
  6566                           ;doprnt.c: 1416: do
  6567  01034A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6568  01034E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6569  010352  0E30               	movlw	48
  6570  010354  6EDF               	movwf	indf2,c
  6571                           
  6572                           ; BSR set to: 0
  6573  010356  0100               	movlb	0	; () banked
  6574  010358  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6575  01035A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6576                           
  6577                           ; BSR set to: 0
  6578                           ;doprnt.c: 1418: while(--width);
  6579  01035C  0100               	movlb	0	; () banked
  6580  01035E  078D               	decf	sprintf@width& (0+255),f,b
  6581  010360  A0D8               	btfss	status,0,c
  6582  010362  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6583  010364  D7EC               	goto	l8480
  6584  010366                     l8488:
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;doprnt.c: 1422: {
  6588                           ;doprnt.c: 1424: if(width
  6589                           ;doprnt.c: 1428: )
  6590  010366  0100               	movlb	0	; () banked
  6591  010368  518D               	movf	sprintf@width& (0+255),w,b
  6592  01036A  0100               	movlb	0	; () banked
  6593  01036C  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6594  01036E  B4D8               	btfsc	status,2,c
  6595  010370  D013               	goto	l8496
  6596  010372                     l8490:
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  6600  010372  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6601  010376  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6602  01037A  0E20               	movlw	32
  6603  01037C  6EDF               	movwf	indf2,c
  6604                           
  6605                           ; BSR set to: 0
  6606  01037E  0100               	movlb	0	; () banked
  6607  010380  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6608  010382  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;doprnt.c: 1431: while(--width);
  6612  010384  0100               	movlb	0	; () banked
  6613  010386  078D               	decf	sprintf@width& (0+255),f,b
  6614  010388  A0D8               	btfss	status,0,c
  6615  01038A  078E               	decf	(sprintf@width+1)& (0+255),f,b
  6616  01038C  0100               	movlb	0	; () banked
  6617  01038E  518D               	movf	sprintf@width& (0+255),w,b
  6618  010390  0100               	movlb	0	; () banked
  6619  010392  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  6620  010394  A4D8               	btfss	status,2,c
  6621  010396  D7ED               	goto	l8490
  6622  010398                     l8496:
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;doprnt.c: 1438: if(flag & 0x03)
  6626  010398  C08B  F07E         	movff	sprintf@flag,??_sprintf
  6627  01039C  0E03               	movlw	3
  6628  01039E  0100               	movlb	0	; () banked
  6629  0103A0  177E               	andwf	??_sprintf& (0+255),f,b
  6630  0103A2  B4D8               	btfsc	status,2,c
  6631  0103A4  D009               	goto	l8502
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6635  0103A6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6636  0103AA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6637  0103AE  0E2D               	movlw	45
  6638  0103B0  6EDF               	movwf	indf2,c
  6639                           
  6640                           ; BSR set to: 0
  6641  0103B2  0100               	movlb	0	; () banked
  6642  0103B4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6643  0103B6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6644  0103B8                     l8502:
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;doprnt.c: 1469: }
  6648                           ;doprnt.c: 1472: prec = c;
  6649  0103B8  C08C  F082         	movff	sprintf@c,sprintf@prec
  6650                           
  6651                           ;doprnt.c: 1474: while(prec--) {
  6652  0103BC  D031               	goto	l8510
  6653  0103BE                     l8504:
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;doprnt.c: 1478: {
  6657                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6658  0103BE  0100               	movlb	0	; () banked
  6659  0103C0  5182               	movf	sprintf@prec& (0+255),w,b
  6660  0103C2  0D02               	mullw	2
  6661  0103C4  0E6D               	movlw	low _dpowers
  6662  0103C6  24F3               	addwf	prodl,w,c
  6663  0103C8  6EF6               	movwf	tblptrl,c
  6664  0103CA  0EFE               	movlw	high _dpowers
  6665  0103CC  20F4               	addwfc	prodh,w,c
  6666  0103CE  6EF7               	movwf	tblptrh,c
  6667  0103D0                     	if	1	;There are 3 active tblptr bytes
  6668  0103D0  6AF8               	clrf	tblptru,c
  6669  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  6670  0103D4  22F8               	addwfc	tblptru,f,c
  6671  0103D6                     	endif
  6672  0103D6  0009               	tblrd		*+
  6673  0103D8  CFF5 F062          	movff	tablat,___lwdiv@divisor
  6674  0103DC  000A               	tblrd		*-
  6675  0103DE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  6676  0103E2  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  6677  0103E6  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  6678  0103EA  ECA6  F097         	call	___lwdiv	;wreg free
  6679  0103EE  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  6680  0103F2  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  6681  0103F6  0E00               	movlw	0
  6682  0103F8  0100               	movlb	0	; () banked
  6683  0103FA  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  6684  0103FC  0E0A               	movlw	10
  6685  0103FE  6F69               	movwf	___lwmod@divisor& (0+255),b
  6686  010400  ECBF  F098         	call	___lwmod	;wreg free
  6687  010404  0100               	movlb	0	; () banked
  6688  010406  5167               	movf	?___lwmod& (0+255),w,b
  6689  010408  0F30               	addlw	48
  6690  01040A  0100               	movlb	0	; () banked
  6691  01040C  6F8C               	movwf	sprintf@c& (0+255),b
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;doprnt.c: 1523: }
  6695                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6696  01040E  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6697  010412  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6698  010416  C08C  FFDF         	movff	sprintf@c,indf2
  6699                           
  6700                           ; BSR set to: 0
  6701  01041A  0100               	movlb	0	; () banked
  6702  01041C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  6703  01041E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  6704  010420                     l8510:
  6705                           
  6706                           ; BSR set to: 0
  6707  010420  0100               	movlb	0	; () banked
  6708  010422  0782               	decf	sprintf@prec& (0+255),f,b
  6709  010424  0100               	movlb	0	; () banked
  6710  010426  2982               	incf	sprintf@prec& (0+255),w,b
  6711  010428  A4D8               	btfss	status,2,c
  6712  01042A  D7C9               	goto	l8504
  6713  01042C                     l8512:
  6714                           
  6715                           ; BSR set to: 0
  6716  01042C  C06E  FFF6         	movff	sprintf@f,tblptrl
  6717  010430  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  6718  010434  0100               	movlb	0	; () banked
  6719  010436  4B6E               	infsnz	sprintf@f& (0+255),f,b
  6720  010438  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  6721  01043A                     	if	0	;tblptru may be non-zero
  6722  01043A                     	endif
  6723  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6724  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  6725  01043C  6EF8               	movwf	tblptru,c
  6726  01043E                     	endif
  6727  01043E  0008               	tblrd		*
  6728  010440  CFF5 F08C          	movff	tablat,sprintf@c
  6729  010444  0100               	movlb	0	; () banked
  6730  010446  518C               	movf	sprintf@c& (0+255),w,b
  6731  010448  A4D8               	btfss	status,2,c
  6732  01044A  D5E1               	goto	l8372
  6733  01044C                     l8514:
  6734                           
  6735                           ;doprnt.c: 1538: *sp = 0;
  6736  01044C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  6737  010450  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  6738  010454  0E00               	movlw	0
  6739  010456  6EDF               	movwf	indf2,c
  6740  010458  0012               	return	
  6741  01045A                     __end_of_sprintf:
  6742                           	opt stack 0
  6743                           tblptru	equ	0xFF8
  6744                           tblptrh	equ	0xFF7
  6745                           tblptrl	equ	0xFF6
  6746                           tablat	equ	0xFF5
  6747                           prodh	equ	0xFF4
  6748                           prodl	equ	0xFF3
  6749                           intcon	equ	0xFF2
  6750                           intcon2	equ	0xFF1
  6751                           indf0	equ	0xFEF
  6752                           postinc0	equ	0xFEE
  6753                           fsr0h	equ	0xFEA
  6754                           fsr0l	equ	0xFE9
  6755                           wreg	equ	0xFE8
  6756                           postdec1	equ	0xFE5
  6757                           fsr1h	equ	0xFE2
  6758                           fsr1l	equ	0xFE1
  6759                           indf2	equ	0xFDF
  6760                           postinc2	equ	0xFDE
  6761                           postdec2	equ	0xFDD
  6762                           fsr2h	equ	0xFDA
  6763                           fsr2l	equ	0xFD9
  6764                           status	equ	0xFD8
  6765                           
  6766 ;; *************** function _isdigit *****************
  6767 ;; Defined at:
  6768 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  c               1    wreg     unsigned char 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  c               1    2[BANK0 ] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;		None               void
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6783 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6784 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6785 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6786 ;;Total ram usage:        3 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:   11
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_sprintf
  6793 ;;		_atoi
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text28
  6798  013750                     __ptext28:
  6799                           	opt stack 0
  6800  013750                     _isdigit:
  6801                           	opt stack 16
  6802                           
  6803                           ;incstack = 0
  6804                           ;isdigit@c stored from wreg
  6805  013750  0100               	movlb	0	; () banked
  6806  013752  6F62               	movwf	isdigit@c& (0+255),b
  6807  013754  0E00               	movlw	0
  6808  013756  0100               	movlb	0	; () banked
  6809  013758  6F61               	movwf	_isdigit$5925& (0+255),b
  6810                           
  6811                           ; BSR set to: 0
  6812  01375A  0E3A               	movlw	58
  6813  01375C  0100               	movlb	0	; () banked
  6814  01375E  6162               	cpfslt	isdigit@c& (0+255),b
  6815  013760  D007               	goto	l8290
  6816                           
  6817                           ; BSR set to: 0
  6818  013762  0E2F               	movlw	47
  6819  013764  0100               	movlb	0	; () banked
  6820  013766  6562               	cpfsgt	isdigit@c& (0+255),b
  6821  013768  D003               	goto	l8290
  6822                           
  6823                           ; BSR set to: 0
  6824  01376A  0E01               	movlw	1
  6825  01376C  0100               	movlb	0	; () banked
  6826  01376E  6F61               	movwf	_isdigit$5925& (0+255),b
  6827  013770                     l8290:
  6828                           
  6829                           ; BSR set to: 0
  6830  013770  C061  F060         	movff	_isdigit$5925,??_isdigit
  6831  013774  0100               	movlb	0	; () banked
  6832  013776  3160               	rrcf	??_isdigit& (0+255),w,b
  6833  013778  0012               	return	
  6834  01377A                     __end_of_isdigit:
  6835                           	opt stack 0
  6836                           tblptru	equ	0xFF8
  6837                           tblptrh	equ	0xFF7
  6838                           tblptrl	equ	0xFF6
  6839                           tablat	equ	0xFF5
  6840                           prodh	equ	0xFF4
  6841                           prodl	equ	0xFF3
  6842                           intcon	equ	0xFF2
  6843                           intcon2	equ	0xFF1
  6844                           indf0	equ	0xFEF
  6845                           postinc0	equ	0xFEE
  6846                           fsr0h	equ	0xFEA
  6847                           fsr0l	equ	0xFE9
  6848                           wreg	equ	0xFE8
  6849                           postdec1	equ	0xFE5
  6850                           fsr1h	equ	0xFE2
  6851                           fsr1l	equ	0xFE1
  6852                           indf2	equ	0xFDF
  6853                           postinc2	equ	0xFDE
  6854                           postdec2	equ	0xFDD
  6855                           fsr2h	equ	0xFDA
  6856                           fsr2l	equ	0xFD9
  6857                           status	equ	0xFD8
  6858                           
  6859 ;; *************** function ___wmul *****************
  6860 ;; Defined at:
  6861 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6864 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  product         2    4[BANK0 ] unsigned int 
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  2    0[BANK0 ] unsigned int 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0, prodl, prodh
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6876 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;Total ram usage:        6 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:   11
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_sprintf
  6887 ;;		_atoi
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text29
  6892  013578                     __ptext29:
  6893                           	opt stack 0
  6894  013578                     ___wmul:
  6895                           	opt stack 16
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;incstack = 0
  6899  013578  0100               	movlb	0	; () banked
  6900  01357A  5160               	movf	___wmul@multiplier& (0+255),w,b
  6901  01357C  0100               	movlb	0	; () banked
  6902  01357E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6903  013580  CFF3 F064          	movff	prodl,___wmul@product
  6904  013584  CFF4 F065          	movff	prodh,___wmul@product+1
  6905  013588  0100               	movlb	0	; () banked
  6906  01358A  5160               	movf	___wmul@multiplier& (0+255),w,b
  6907  01358C  0100               	movlb	0	; () banked
  6908  01358E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6909  013590  50F3               	movf	prodl,w,c
  6910  013592  0100               	movlb	0	; () banked
  6911  013594  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6912  013596  0100               	movlb	0	; () banked
  6913  013598  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6914  01359A  0100               	movlb	0	; () banked
  6915  01359C  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6916  01359E  50F3               	movf	prodl,w,c
  6917  0135A0  0100               	movlb	0	; () banked
  6918  0135A2  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6919                           
  6920                           ; BSR set to: 0
  6921  0135A4  C064  F060         	movff	___wmul@product,?___wmul
  6922  0135A8  C065  F061         	movff	___wmul@product+1,?___wmul+1
  6923  0135AC  0012               	return	
  6924  0135AE                     __end_of___wmul:
  6925                           	opt stack 0
  6926                           tblptru	equ	0xFF8
  6927                           tblptrh	equ	0xFF7
  6928                           tblptrl	equ	0xFF6
  6929                           tablat	equ	0xFF5
  6930                           prodh	equ	0xFF4
  6931                           prodl	equ	0xFF3
  6932                           intcon	equ	0xFF2
  6933                           intcon2	equ	0xFF1
  6934                           indf0	equ	0xFEF
  6935                           postinc0	equ	0xFEE
  6936                           fsr0h	equ	0xFEA
  6937                           fsr0l	equ	0xFE9
  6938                           wreg	equ	0xFE8
  6939                           postdec1	equ	0xFE5
  6940                           fsr1h	equ	0xFE2
  6941                           fsr1l	equ	0xFE1
  6942                           indf2	equ	0xFDF
  6943                           postinc2	equ	0xFDE
  6944                           postdec2	equ	0xFDD
  6945                           fsr2h	equ	0xFDA
  6946                           fsr2l	equ	0xFD9
  6947                           status	equ	0xFD8
  6948                           
  6949 ;; *************** function ___lwmod *****************
  6950 ;; Defined at:
  6951 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  dividend        2    7[BANK0 ] unsigned int 
  6954 ;;  divisor         2    9[BANK0 ] unsigned int 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  counter         1   11[BANK0 ] unsigned char 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  2    7[BANK0 ] unsigned int 
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6966 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6969 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;Total ram usage:        5 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:   11
  6973 ;; This function calls:
  6974 ;;		Nothing
  6975 ;; This function is called by:
  6976 ;;		_sprintf
  6977 ;;		_ringbuf_put_num
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text30
  6982  01317E                     __ptext30:
  6983                           	opt stack 0
  6984  01317E                     ___lwmod:
  6985                           	opt stack 16
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;incstack = 0
  6989  01317E  0100               	movlb	0	; () banked
  6990  013180  5169               	movf	___lwmod@divisor& (0+255),w,b
  6991  013182  0100               	movlb	0	; () banked
  6992  013184  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6993  013186  B4D8               	btfsc	status,2,c
  6994  013188  D026               	goto	l1940
  6995                           
  6996                           ; BSR set to: 0
  6997  01318A  0E01               	movlw	1
  6998  01318C  0100               	movlb	0	; () banked
  6999  01318E  6F6B               	movwf	___lwmod@counter& (0+255),b
  7000  013190  D006               	goto	l8328
  7001  013192                     l8326:
  7002                           
  7003                           ; BSR set to: 0
  7004  013192  0100               	movlb	0	; () banked
  7005  013194  90D8               	bcf	status,0,c
  7006  013196  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  7007  013198  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7008  01319A  0100               	movlb	0	; () banked
  7009  01319C  2B6B               	incf	___lwmod@counter& (0+255),f,b
  7010  01319E                     l8328:
  7011                           
  7012                           ; BSR set to: 0
  7013  01319E  0100               	movlb	0	; () banked
  7014  0131A0  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7015  0131A2  D7F7               	goto	l8326
  7016  0131A4                     l8330:
  7017                           
  7018                           ; BSR set to: 0
  7019  0131A4  0100               	movlb	0	; () banked
  7020  0131A6  5169               	movf	___lwmod@divisor& (0+255),w,b
  7021  0131A8  0100               	movlb	0	; () banked
  7022  0131AA  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  7023  0131AC  0100               	movlb	0	; () banked
  7024  0131AE  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7025  0131B0  0100               	movlb	0	; () banked
  7026  0131B2  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7027  0131B4  A0D8               	btfss	status,0,c
  7028  0131B6  D008               	goto	l8334
  7029                           
  7030                           ; BSR set to: 0
  7031  0131B8  0100               	movlb	0	; () banked
  7032  0131BA  5169               	movf	___lwmod@divisor& (0+255),w,b
  7033  0131BC  0100               	movlb	0	; () banked
  7034  0131BE  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  7035  0131C0  0100               	movlb	0	; () banked
  7036  0131C2  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7037  0131C4  0100               	movlb	0	; () banked
  7038  0131C6  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7039  0131C8                     l8334:
  7040                           
  7041                           ; BSR set to: 0
  7042  0131C8  0100               	movlb	0	; () banked
  7043  0131CA  90D8               	bcf	status,0,c
  7044  0131CC  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7045  0131CE  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  7046                           
  7047                           ; BSR set to: 0
  7048  0131D0  0100               	movlb	0	; () banked
  7049  0131D2  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  7050  0131D4  D7E7               	goto	l8330
  7051  0131D6                     l1940:
  7052                           
  7053                           ; BSR set to: 0
  7054  0131D6  C067  F067         	movff	___lwmod@dividend,?___lwmod
  7055  0131DA  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  7056                           
  7057                           ; BSR set to: 0
  7058  0131DE  0012               	return		;funcret
  7059  0131E0                     __end_of___lwmod:
  7060                           	opt stack 0
  7061                           tblptru	equ	0xFF8
  7062                           tblptrh	equ	0xFF7
  7063                           tblptrl	equ	0xFF6
  7064                           tablat	equ	0xFF5
  7065                           prodh	equ	0xFF4
  7066                           prodl	equ	0xFF3
  7067                           intcon	equ	0xFF2
  7068                           intcon2	equ	0xFF1
  7069                           indf0	equ	0xFEF
  7070                           postinc0	equ	0xFEE
  7071                           fsr0h	equ	0xFEA
  7072                           fsr0l	equ	0xFE9
  7073                           wreg	equ	0xFE8
  7074                           postdec1	equ	0xFE5
  7075                           fsr1h	equ	0xFE2
  7076                           fsr1l	equ	0xFE1
  7077                           indf2	equ	0xFDF
  7078                           postinc2	equ	0xFDE
  7079                           postdec2	equ	0xFDD
  7080                           fsr2h	equ	0xFDA
  7081                           fsr2l	equ	0xFD9
  7082                           status	equ	0xFD8
  7083                           
  7084 ;; *************** function ___lwdiv *****************
  7085 ;; Defined at:
  7086 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;  dividend        2    0[BANK0 ] unsigned int 
  7089 ;;  divisor         2    2[BANK0 ] unsigned int 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  quotient        2    5[BANK0 ] unsigned int 
  7092 ;;  counter         1    4[BANK0 ] unsigned char 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  2    0[BANK0 ] unsigned int 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2, status,0
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7102 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7103 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7106 ;;Total ram usage:        7 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:   11
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_sprintf
  7113 ;;		_ringbuf_put_num
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text31
  7118  012F4C                     __ptext31:
  7119                           	opt stack 0
  7120  012F4C                     ___lwdiv:
  7121                           	opt stack 16
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;incstack = 0
  7125  012F4C  0E00               	movlw	0
  7126  012F4E  0100               	movlb	0	; () banked
  7127  012F50  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7128  012F52  0E00               	movlw	0
  7129  012F54  6F65               	movwf	___lwdiv@quotient& (0+255),b
  7130                           
  7131                           ; BSR set to: 0
  7132  012F56  0100               	movlb	0	; () banked
  7133  012F58  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7134  012F5A  0100               	movlb	0	; () banked
  7135  012F5C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7136  012F5E  B4D8               	btfsc	status,2,c
  7137  012F60  D02C               	goto	l1930
  7138                           
  7139                           ; BSR set to: 0
  7140  012F62  0E01               	movlw	1
  7141  012F64  0100               	movlb	0	; () banked
  7142  012F66  6F64               	movwf	___lwdiv@counter& (0+255),b
  7143  012F68  D006               	goto	l8308
  7144  012F6A                     l8306:
  7145                           
  7146                           ; BSR set to: 0
  7147  012F6A  0100               	movlb	0	; () banked
  7148  012F6C  90D8               	bcf	status,0,c
  7149  012F6E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  7150  012F70  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7151  012F72  0100               	movlb	0	; () banked
  7152  012F74  2B64               	incf	___lwdiv@counter& (0+255),f,b
  7153  012F76                     l8308:
  7154                           
  7155                           ; BSR set to: 0
  7156  012F76  0100               	movlb	0	; () banked
  7157  012F78  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7158  012F7A  D7F7               	goto	l8306
  7159  012F7C                     l8310:
  7160                           
  7161                           ; BSR set to: 0
  7162  012F7C  0100               	movlb	0	; () banked
  7163  012F7E  90D8               	bcf	status,0,c
  7164  012F80  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  7165  012F82  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7166                           
  7167                           ; BSR set to: 0
  7168  012F84  0100               	movlb	0	; () banked
  7169  012F86  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7170  012F88  0100               	movlb	0	; () banked
  7171  012F8A  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  7172  012F8C  0100               	movlb	0	; () banked
  7173  012F8E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7174  012F90  0100               	movlb	0	; () banked
  7175  012F92  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7176  012F94  A0D8               	btfss	status,0,c
  7177  012F96  D00A               	goto	l8318
  7178                           
  7179                           ; BSR set to: 0
  7180  012F98  0100               	movlb	0	; () banked
  7181  012F9A  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7182  012F9C  0100               	movlb	0	; () banked
  7183  012F9E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  7184  012FA0  0100               	movlb	0	; () banked
  7185  012FA2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7186  012FA4  0100               	movlb	0	; () banked
  7187  012FA6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7188                           
  7189                           ; BSR set to: 0
  7190  012FA8  0100               	movlb	0	; () banked
  7191  012FAA  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  7192  012FAC                     l8318:
  7193                           
  7194                           ; BSR set to: 0
  7195  012FAC  0100               	movlb	0	; () banked
  7196  012FAE  90D8               	bcf	status,0,c
  7197  012FB0  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7198  012FB2  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  7199                           
  7200                           ; BSR set to: 0
  7201  012FB4  0100               	movlb	0	; () banked
  7202  012FB6  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  7203  012FB8  D7E1               	goto	l8310
  7204  012FBA                     l1930:
  7205                           
  7206                           ; BSR set to: 0
  7207  012FBA  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  7208  012FBE  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7209                           
  7210                           ; BSR set to: 0
  7211  012FC2  0012               	return		;funcret
  7212  012FC4                     __end_of___lwdiv:
  7213                           	opt stack 0
  7214                           tblptru	equ	0xFF8
  7215                           tblptrh	equ	0xFF7
  7216                           tblptrl	equ	0xFF6
  7217                           tablat	equ	0xFF5
  7218                           prodh	equ	0xFF4
  7219                           prodl	equ	0xFF3
  7220                           intcon	equ	0xFF2
  7221                           intcon2	equ	0xFF1
  7222                           indf0	equ	0xFEF
  7223                           postinc0	equ	0xFEE
  7224                           fsr0h	equ	0xFEA
  7225                           fsr0l	equ	0xFE9
  7226                           wreg	equ	0xFE8
  7227                           postdec1	equ	0xFE5
  7228                           fsr1h	equ	0xFE2
  7229                           fsr1l	equ	0xFE1
  7230                           indf2	equ	0xFDF
  7231                           postinc2	equ	0xFDE
  7232                           postdec2	equ	0xFDD
  7233                           fsr2h	equ	0xFDA
  7234                           fsr2l	equ	0xFD9
  7235                           status	equ	0xFD8
  7236                           
  7237 ;; *************** function _USB_task *****************
  7238 ;; Defined at:
  7239 ;;		line 66 in file "../My_library/My_usb_cdc.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;		None
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  rx_len          2   22[BANK0 ] int 
  7244 ;;  data            1   24[BANK0 ] unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;		None               void
  7247 ;; Registers used:
  7248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7255 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7257 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7258 ;;Total ram usage:        3 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:   14
  7261 ;; This function calls:
  7262 ;;		_get_string_usb
  7263 ;;		_put_string_usb
  7264 ;;		_ringbuf_num
  7265 ;;		_ringbuf_pop
  7266 ;;		_ringbuf_put
  7267 ;; This function is called by:
  7268 ;;		_main
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text32
  7273  012C9C                     __ptext32:
  7274                           	opt stack 0
  7275  012C9C                     _USB_task:
  7276                           	opt stack 16
  7277                           
  7278                           ;My_usb_cdc.c: 67: char data;
  7279                           ;My_usb_cdc.c: 68: int rx_len;
  7280                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;incstack = 0
  7284  012C9C  0E78               	movlw	low USB_task@data
  7285  012C9E  0100               	movlb	0	; () banked
  7286  012CA0  6F6D               	movwf	get_string_usb@s& (0+255),b
  7287  012CA2  0E00               	movlw	high USB_task@data
  7288  012CA4  0100               	movlb	0	; () banked
  7289  012CA6  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
  7290  012CA8  0E00               	movlw	0
  7291  012CAA  0100               	movlb	0	; () banked
  7292  012CAC  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
  7293  012CAE  0E01               	movlw	1
  7294  012CB0  6F6F               	movwf	get_string_usb@len& (0+255),b
  7295  012CB2  ECA0  F099         	call	_get_string_usb	;wreg free
  7296  012CB6  C06D  F076         	movff	?_get_string_usb,USB_task@rx_len
  7297  012CBA  C06E  F077         	movff	?_get_string_usb+1,USB_task@rx_len+1
  7298                           
  7299                           ;My_usb_cdc.c: 70: if (rx_len) {
  7300  012CBE  0100               	movlb	0	; () banked
  7301  012CC0  5176               	movf	USB_task@rx_len& (0+255),w,b
  7302  012CC2  0100               	movlb	0	; () banked
  7303  012CC4  1177               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
  7304  012CC6  B4D8               	btfsc	status,2,c
  7305  012CC8  D00A               	goto	l920
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
  7309  012CCA  0EDC               	movlw	low _usb_rx
  7310  012CCC  0100               	movlb	0	; () banked
  7311  012CCE  6F6F               	movwf	ringbuf_put@rb& (0+255),b
  7312  012CD0  0E01               	movlw	high _usb_rx
  7313  012CD2  0100               	movlb	0	; () banked
  7314  012CD4  6F70               	movwf	(ringbuf_put@rb+1)& (0+255),b
  7315  012CD6  C078  F071         	movff	USB_task@data,ringbuf_put@asciicode
  7316  012CDA  EC70  F08F         	call	_ringbuf_put	;wreg free
  7317  012CDE                     l920:
  7318                           
  7319                           ;My_usb_cdc.c: 72: }
  7320                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
  7321  012CDE  0EE4               	movlw	low _usb_tx
  7322  012CE0  0100               	movlb	0	; () banked
  7323  012CE2  6F60               	movwf	ringbuf_num@rb& (0+255),b
  7324  012CE4  0E01               	movlw	high _usb_tx
  7325  012CE6  0100               	movlb	0	; () banked
  7326  012CE8  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  7327  012CEA  ECF3  F08B         	call	_ringbuf_num	;wreg free
  7328  012CEE  0100               	movlb	0	; () banked
  7329  012CF0  5160               	movf	?_ringbuf_num& (0+255),w,b
  7330  012CF2  0100               	movlb	0	; () banked
  7331  012CF4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  7332  012CF6  B4D8               	btfsc	status,2,c
  7333  012CF8  0012               	return	
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
  7337  012CFA  0EE4               	movlw	low _usb_tx
  7338  012CFC  0100               	movlb	0	; () banked
  7339  012CFE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  7340  012D00  0E01               	movlw	high _usb_tx
  7341  012D02  0100               	movlb	0	; () banked
  7342  012D04  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  7343  012D06  EC12  F091         	call	_ringbuf_pop	;wreg free
  7344  012D0A  0100               	movlb	0	; () banked
  7345  012D0C  6F78               	movwf	USB_task@data& (0+255),b
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
  7349  012D0E  0E78               	movlw	low USB_task@data
  7350  012D10  0100               	movlb	0	; () banked
  7351  012D12  6F6C               	movwf	put_string_usb@s& (0+255),b
  7352  012D14  0E00               	movlw	high USB_task@data
  7353  012D16  0100               	movlb	0	; () banked
  7354  012D18  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
  7355  012D1A  0E00               	movlw	0
  7356  012D1C  0100               	movlb	0	; () banked
  7357  012D1E  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
  7358  012D20  0E01               	movlw	1
  7359  012D22  6F6E               	movwf	put_string_usb@len& (0+255),b
  7360  012D24  EC22  F09B         	call	_put_string_usb	;wreg free
  7361  012D28  0012               	return	
  7362  012D2A                     __end_of_USB_task:
  7363                           	opt stack 0
  7364                           tblptru	equ	0xFF8
  7365                           tblptrh	equ	0xFF7
  7366                           tblptrl	equ	0xFF6
  7367                           tablat	equ	0xFF5
  7368                           prodh	equ	0xFF4
  7369                           prodl	equ	0xFF3
  7370                           intcon	equ	0xFF2
  7371                           intcon2	equ	0xFF1
  7372                           indf0	equ	0xFEF
  7373                           postinc0	equ	0xFEE
  7374                           fsr0h	equ	0xFEA
  7375                           fsr0l	equ	0xFE9
  7376                           wreg	equ	0xFE8
  7377                           postdec1	equ	0xFE5
  7378                           fsr1h	equ	0xFE2
  7379                           fsr1l	equ	0xFE1
  7380                           indf2	equ	0xFDF
  7381                           postinc2	equ	0xFDE
  7382                           postdec2	equ	0xFDD
  7383                           fsr2h	equ	0xFDA
  7384                           fsr2l	equ	0xFD9
  7385                           status	equ	0xFD8
  7386                           
  7387 ;; *************** function _ringbuf_put *****************
  7388 ;; Defined at:
  7389 ;;		line 20 in file "../My_library/My_ringbuf.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  7392 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_rx(8), uart_tx(8), 
  7393 ;;		 -> usb_rx(8), usb_tx(8), 
  7394 ;;  asciicode       1   17[BANK0 ] unsigned char 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;		None
  7397 ;; Return value:  Size  Location     Type
  7398 ;;		None               void
  7399 ;; Registers used:
  7400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7406 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7408 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7409 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7410 ;;Total ram usage:        7 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:   12
  7413 ;; This function calls:
  7414 ;;		_ringbuf_num
  7415 ;; This function is called by:
  7416 ;;		_main
  7417 ;;		_USB_task
  7418 ;;		_I2C_LCD_command
  7419 ;;		_I2C_LCD_put
  7420 ;;		_I2C_LCD_create_char
  7421 ;;		_ringbuf_put_num
  7422 ;;		_ringbuf_put_str
  7423 ;;		_terminal_task
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text33
  7428  011EE0                     __ptext33:
  7429                           	opt stack 0
  7430  011EE0                     _ringbuf_put:
  7431                           	opt stack 18
  7432                           
  7433                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  7434                           
  7435                           ;incstack = 0
  7436  011EE0  C06F  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  7437  011EE4  C070  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  7438  011EE8  ECF3  F08B         	call	_ringbuf_num	;wreg free
  7439  011EEC  0100               	movlb	0	; () banked
  7440  011EEE  EE20 F002          	lfsr	2,2
  7441  011EF2  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7442  011EF4  26D9               	addwf	fsr2l,f,c
  7443  011EF6  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7444  011EF8  22DA               	addwfc	fsr2h,f,c
  7445  011EFA  50DE               	movf	postinc2,w,c
  7446  011EFC  0100               	movlb	0	; () banked
  7447  011EFE  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  7448  011F00  50DE               	movf	postinc2,w,c
  7449  011F02  0100               	movlb	0	; () banked
  7450  011F04  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  7451  011F06  B0D8               	btfsc	status,0,c
  7452  011F08  0012               	return	
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  7456  011F0A  0100               	movlb	0	; () banked
  7457  011F0C  EE20 F004          	lfsr	2,4
  7458  011F10  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7459  011F12  26D9               	addwf	fsr2l,f,c
  7460  011F14  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7461  011F16  22DA               	addwfc	fsr2h,f,c
  7462  011F18  CFDE F072          	movff	postinc2,??_ringbuf_put
  7463  011F1C  CFDD F073          	movff	postdec2,??_ringbuf_put+1
  7464  011F20  C06F  FFD9         	movff	ringbuf_put@rb,fsr2l
  7465  011F24  C070  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  7466  011F28  CFDE F074          	movff	postinc2,??_ringbuf_put+2
  7467  011F2C  CFDD F075          	movff	postdec2,??_ringbuf_put+3
  7468  011F30  0100               	movlb	0	; () banked
  7469  011F32  5172               	movf	??_ringbuf_put& (0+255),w,b
  7470  011F34  0100               	movlb	0	; () banked
  7471  011F36  2574               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  7472  011F38  6ED9               	movwf	fsr2l,c
  7473  011F3A  0100               	movlb	0	; () banked
  7474  011F3C  5173               	movf	(??_ringbuf_put+1)& (0+255),w,b
  7475  011F3E  0100               	movlb	0	; () banked
  7476  011F40  2175               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  7477  011F42  6EDA               	movwf	fsr2h,c
  7478  011F44  C071  FFDF         	movff	ringbuf_put@asciicode,indf2
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  7482  011F48  0100               	movlb	0	; () banked
  7483  011F4A  EE20 F002          	lfsr	2,2
  7484  011F4E  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7485  011F50  26D9               	addwf	fsr2l,f,c
  7486  011F52  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7487  011F54  22DA               	addwfc	fsr2h,f,c
  7488  011F56  0100               	movlb	0	; () banked
  7489  011F58  EE10 F004          	lfsr	1,4
  7490  011F5C  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7491  011F5E  26E1               	addwf	fsr1l,f,c
  7492  011F60  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7493  011F62  22E2               	addwfc	fsr1h,f,c
  7494  011F64  CFE6 F074          	movff	postinc1,??_ringbuf_put+2
  7495  011F68  CFE5 F075          	movff	postdec1,??_ringbuf_put+3
  7496  011F6C  0E01               	movlw	1
  7497  011F6E  0100               	movlb	0	; () banked
  7498  011F70  2774               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  7499  011F72  0E00               	movlw	0
  7500  011F74  2375               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  7501  011F76  50DE               	movf	postinc2,w,c
  7502  011F78  0100               	movlb	0	; () banked
  7503  011F7A  5D74               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  7504  011F7C  50DE               	movf	postinc2,w,c
  7505  011F7E  0100               	movlb	0	; () banked
  7506  011F80  5975               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  7507  011F82  B0D8               	btfsc	status,0,c
  7508  011F84  D00B               	goto	l8898
  7509                           
  7510                           ; BSR set to: 0
  7511  011F86  0100               	movlb	0	; () banked
  7512  011F88  EE20 F004          	lfsr	2,4
  7513  011F8C  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7514  011F8E  26D9               	addwf	fsr2l,f,c
  7515  011F90  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7516  011F92  22DA               	addwfc	fsr2h,f,c
  7517  011F94  2ADE               	incf	postinc2,f,c
  7518  011F96  0E00               	movlw	0
  7519  011F98  22DD               	addwfc	postdec2,f,c
  7520  011F9A  0012               	return	
  7521  011F9C                     l8898:
  7522                           
  7523                           ; BSR set to: 0
  7524                           ;My_ringbuf.c: 24: else rb->head = 0;
  7525  011F9C  0100               	movlb	0	; () banked
  7526  011F9E  EE20 F004          	lfsr	2,4
  7527  011FA2  516F               	movf	ringbuf_put@rb& (0+255),w,b
  7528  011FA4  26D9               	addwf	fsr2l,f,c
  7529  011FA6  5170               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  7530  011FA8  22DA               	addwfc	fsr2h,f,c
  7531  011FAA  0E00               	movlw	0
  7532  011FAC  6EDE               	movwf	postinc2,c
  7533  011FAE  0E00               	movlw	0
  7534  011FB0  6EDD               	movwf	postdec2,c
  7535                           
  7536                           ; BSR set to: 0
  7537  011FB2  0012               	return	
  7538  011FB4                     __end_of_ringbuf_put:
  7539                           	opt stack 0
  7540                           tblptru	equ	0xFF8
  7541                           tblptrh	equ	0xFF7
  7542                           tblptrl	equ	0xFF6
  7543                           tablat	equ	0xFF5
  7544                           prodh	equ	0xFF4
  7545                           prodl	equ	0xFF3
  7546                           intcon	equ	0xFF2
  7547                           intcon2	equ	0xFF1
  7548                           indf0	equ	0xFEF
  7549                           postinc0	equ	0xFEE
  7550                           fsr0h	equ	0xFEA
  7551                           fsr0l	equ	0xFE9
  7552                           wreg	equ	0xFE8
  7553                           postinc1	equ	0xFE6
  7554                           postdec1	equ	0xFE5
  7555                           fsr1h	equ	0xFE2
  7556                           fsr1l	equ	0xFE1
  7557                           indf2	equ	0xFDF
  7558                           postinc2	equ	0xFDE
  7559                           postdec2	equ	0xFDD
  7560                           fsr2h	equ	0xFDA
  7561                           fsr2l	equ	0xFD9
  7562                           status	equ	0xFD8
  7563                           
  7564 ;; *************** function _ringbuf_pop *****************
  7565 ;; Defined at:
  7566 ;;		line 45 in file "../My_library/My_ringbuf.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  7569 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_rx(8), uart_tx(8), 
  7570 ;;		 -> usb_rx(8), usb_tx(8), 
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;  ret             1   14[BANK0 ] unsigned char 
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      unsigned char 
  7575 ;; Registers used:
  7576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7582 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7585 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7586 ;;Total ram usage:        7 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:   12
  7589 ;; This function calls:
  7590 ;;		_ringbuf_num
  7591 ;; This function is called by:
  7592 ;;		_main
  7593 ;;		_USB_task
  7594 ;;		_I2C_LCD_task
  7595 ;;		_terminal_task
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text34
  7600  012224                     __ptext34:
  7601                           	opt stack 0
  7602  012224                     _ringbuf_pop:
  7603                           	opt stack 18
  7604                           
  7605                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;incstack = 0
  7609  012224  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  7610  012228  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  7611  01222C  ECF3  F08B         	call	_ringbuf_num	;wreg free
  7612  012230  0100               	movlb	0	; () banked
  7613  012232  5160               	movf	?_ringbuf_num& (0+255),w,b
  7614  012234  0100               	movlb	0	; () banked
  7615  012236  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  7616  012238  B4D8               	btfsc	status,2,c
  7617  01223A  D058               	goto	l8886
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  7621  01223C  0100               	movlb	0	; () banked
  7622  01223E  EE20 F006          	lfsr	2,6
  7623  012242  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7624  012244  26D9               	addwf	fsr2l,f,c
  7625  012246  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7626  012248  22DA               	addwfc	fsr2h,f,c
  7627  01224A  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  7628  01224E  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  7629  012252  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  7630  012256  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  7631  01225A  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  7632  01225E  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  7633  012262  0100               	movlb	0	; () banked
  7634  012264  516A               	movf	??_ringbuf_pop& (0+255),w,b
  7635  012266  0100               	movlb	0	; () banked
  7636  012268  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  7637  01226A  6ED9               	movwf	fsr2l,c
  7638  01226C  0100               	movlb	0	; () banked
  7639  01226E  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  7640  012270  0100               	movlb	0	; () banked
  7641  012272  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  7642  012274  6EDA               	movwf	fsr2h,c
  7643  012276  50DF               	movf	indf2,w,c
  7644  012278  0100               	movlb	0	; () banked
  7645  01227A  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  7649  01227C  0100               	movlb	0	; () banked
  7650  01227E  EE20 F002          	lfsr	2,2
  7651  012282  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7652  012284  26D9               	addwf	fsr2l,f,c
  7653  012286  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7654  012288  22DA               	addwfc	fsr2h,f,c
  7655  01228A  0100               	movlb	0	; () banked
  7656  01228C  EE10 F006          	lfsr	1,6
  7657  012290  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7658  012292  26E1               	addwf	fsr1l,f,c
  7659  012294  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7660  012296  22E2               	addwfc	fsr1h,f,c
  7661  012298  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  7662  01229C  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  7663  0122A0  0E01               	movlw	1
  7664  0122A2  0100               	movlb	0	; () banked
  7665  0122A4  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  7666  0122A6  0E00               	movlw	0
  7667  0122A8  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  7668  0122AA  50DE               	movf	postinc2,w,c
  7669  0122AC  0100               	movlb	0	; () banked
  7670  0122AE  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  7671  0122B0  50DE               	movf	postinc2,w,c
  7672  0122B2  0100               	movlb	0	; () banked
  7673  0122B4  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  7674  0122B6  B0D8               	btfsc	status,0,c
  7675  0122B8  D00B               	goto	l8878
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;My_ringbuf.c: 49: rb->tail++;
  7679  0122BA  0100               	movlb	0	; () banked
  7680  0122BC  EE20 F006          	lfsr	2,6
  7681  0122C0  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7682  0122C2  26D9               	addwf	fsr2l,f,c
  7683  0122C4  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7684  0122C6  22DA               	addwfc	fsr2h,f,c
  7685  0122C8  2ADE               	incf	postinc2,f,c
  7686  0122CA  0E00               	movlw	0
  7687  0122CC  22DD               	addwfc	postdec2,f,c
  7688                           
  7689                           ;My_ringbuf.c: 50: } else {
  7690  0122CE  D00B               	goto	l8880
  7691  0122D0                     l8878:
  7692                           
  7693                           ; BSR set to: 0
  7694                           ;My_ringbuf.c: 51: rb->tail = 0;
  7695  0122D0  0100               	movlb	0	; () banked
  7696  0122D2  EE20 F006          	lfsr	2,6
  7697  0122D6  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  7698  0122D8  26D9               	addwf	fsr2l,f,c
  7699  0122DA  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  7700  0122DC  22DA               	addwfc	fsr2h,f,c
  7701  0122DE  0E00               	movlw	0
  7702  0122E0  6EDE               	movwf	postinc2,c
  7703  0122E2  0E00               	movlw	0
  7704  0122E4  6EDD               	movwf	postdec2,c
  7705  0122E6                     l8880:
  7706                           
  7707                           ; BSR set to: 0
  7708                           ;My_ringbuf.c: 52: }
  7709                           ;My_ringbuf.c: 53: return ret;
  7710  0122E6  0100               	movlb	0	; () banked
  7711  0122E8  516E               	movf	ringbuf_pop@ret& (0+255),w,b
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;My_ringbuf.c: 54: } else {
  7715                           
  7716                           ; BSR set to: 0
  7717  0122EA  0012               	return	
  7718  0122EC                     l8886:
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;My_ringbuf.c: 55: return 0;
  7722  0122EC  0E00               	movlw	0
  7723                           
  7724                           ; BSR set to: 0
  7725  0122EE  0012               	return	
  7726  0122F0                     __end_of_ringbuf_pop:
  7727                           	opt stack 0
  7728                           tblptru	equ	0xFF8
  7729                           tblptrh	equ	0xFF7
  7730                           tblptrl	equ	0xFF6
  7731                           tablat	equ	0xFF5
  7732                           prodh	equ	0xFF4
  7733                           prodl	equ	0xFF3
  7734                           intcon	equ	0xFF2
  7735                           intcon2	equ	0xFF1
  7736                           indf0	equ	0xFEF
  7737                           postinc0	equ	0xFEE
  7738                           fsr0h	equ	0xFEA
  7739                           fsr0l	equ	0xFE9
  7740                           wreg	equ	0xFE8
  7741                           postinc1	equ	0xFE6
  7742                           postdec1	equ	0xFE5
  7743                           fsr1h	equ	0xFE2
  7744                           fsr1l	equ	0xFE1
  7745                           indf2	equ	0xFDF
  7746                           postinc2	equ	0xFDE
  7747                           postdec2	equ	0xFDD
  7748                           fsr2h	equ	0xFDA
  7749                           fsr2l	equ	0xFD9
  7750                           status	equ	0xFD8
  7751                           
  7752 ;; *************** function _put_string_usb *****************
  7753 ;; Defined at:
  7754 ;;		line 21 in file "../My_library/My_usb_cdc.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;  s               2   12[BANK0 ] PTR unsigned char 
  7757 ;;		 -> USB_task@data(1), 
  7758 ;;  len             2   14[BANK0 ] int 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;		None
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  2   12[BANK0 ] int 
  7763 ;; Registers used:
  7764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7770 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7773 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7774 ;;Total ram usage:        4 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; Hardware stack levels required when called:   13
  7777 ;; This function calls:
  7778 ;;		_CDCTxService
  7779 ;;		_is_usb_available
  7780 ;;		_putUSBUSART
  7781 ;; This function is called by:
  7782 ;;		_USB_task
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text35
  7787  013644                     __ptext35:
  7788                           	opt stack 0
  7789  013644                     _put_string_usb:
  7790                           	opt stack 16
  7791                           
  7792                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;incstack = 0
  7796  013644  EC32  F09C         	call	_is_usb_available	;wreg free
  7797  013648  0900               	iorlw	0
  7798  01364A  B4D8               	btfsc	status,2,c
  7799  01364C  0012               	return	
  7800  01364E  D002               	goto	l8934
  7801  013650                     l8932:
  7802  013650  ECAB  F087         	call	_CDCTxService	;wreg free
  7803  013654                     l8934:
  7804  013654  0100               	movlb	0	; () banked
  7805  013656  51BC               	movf	_cdc_trf_state& (0+255),w,b
  7806  013658  A4D8               	btfss	status,2,c
  7807  01365A  D7FA               	goto	l8932
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
  7811                           
  7812                           ; BSR set to: 0
  7813  01365C  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
  7814  013660  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
  7815  013664  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
  7816  013668  ECD1  F09B         	call	_putUSBUSART	;wreg free
  7817                           
  7818                           ;My_usb_cdc.c: 28: CDCTxService();
  7819  01366C  ECAB  F087         	call	_CDCTxService	;wreg free
  7820  013670  0012               	return	
  7821  013672                     __end_of_put_string_usb:
  7822                           	opt stack 0
  7823                           tblptru	equ	0xFF8
  7824                           tblptrh	equ	0xFF7
  7825                           tblptrl	equ	0xFF6
  7826                           tablat	equ	0xFF5
  7827                           prodh	equ	0xFF4
  7828                           prodl	equ	0xFF3
  7829                           intcon	equ	0xFF2
  7830                           intcon2	equ	0xFF1
  7831                           indf0	equ	0xFEF
  7832                           postinc0	equ	0xFEE
  7833                           fsr0h	equ	0xFEA
  7834                           fsr0l	equ	0xFE9
  7835                           wreg	equ	0xFE8
  7836                           postinc1	equ	0xFE6
  7837                           postdec1	equ	0xFE5
  7838                           fsr1h	equ	0xFE2
  7839                           fsr1l	equ	0xFE1
  7840                           indf2	equ	0xFDF
  7841                           postinc2	equ	0xFDE
  7842                           postdec2	equ	0xFDD
  7843                           fsr2h	equ	0xFDA
  7844                           fsr2l	equ	0xFD9
  7845                           status	equ	0xFD8
  7846                           
  7847 ;; *************** function _putUSBUSART *****************
  7848 ;; Defined at:
  7849 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  data            2    0[BANK0 ] PTR unsigned char 
  7852 ;;		 -> USB_task@data(1), 
  7853 ;;  length          1    2[BANK0 ] unsigned char 
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;		None
  7856 ;; Return value:  Size  Location     Type
  7857 ;;		None               void
  7858 ;; Registers used:
  7859 ;;		wreg, status,2, status,0
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7865 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7868 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7869 ;;Total ram usage:        3 bytes
  7870 ;; Hardware stack levels used:    1
  7871 ;; Hardware stack levels required when called:   11
  7872 ;; This function calls:
  7873 ;;		Nothing
  7874 ;; This function is called by:
  7875 ;;		_put_string_usb
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           	psect	text36
  7880  0137A2                     __ptext36:
  7881                           	opt stack 0
  7882  0137A2                     _putUSBUSART:
  7883                           	opt stack 17
  7884                           
  7885                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
  7886                           
  7887                           ;incstack = 0
  7888  0137A2  98A0               	bcf	4000,4,c	;volatile
  7889                           
  7890                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  7891  0137A4  0100               	movlb	0	; () banked
  7892  0137A6  51BC               	movf	_cdc_trf_state& (0+255),w,b
  7893  0137A8  A4D8               	btfss	status,2,c
  7894  0137AA  D00C               	goto	l8702
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;usb_device_cdc.c: 640: {
  7898                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  7899  0137AC  C060  F0A7         	movff	putUSBUSART@data,_pCDCSrc
  7900  0137B0  C061  F0A8         	movff	putUSBUSART@data+1,_pCDCSrc+1
  7901                           
  7902                           ; BSR set to: 0
  7903  0137B4  C062  F0BD         	movff	putUSBUSART@length,_cdc_tx_len
  7904                           
  7905                           ; BSR set to: 0
  7906  0137B8  0E01               	movlw	1
  7907  0137BA  0100               	movlb	0	; () banked
  7908  0137BC  6FBA               	movwf	_cdc_mem_type& (0+255),b
  7909                           
  7910                           ; BSR set to: 0
  7911  0137BE  0E01               	movlw	1
  7912  0137C0  0100               	movlb	0	; () banked
  7913  0137C2  6FBC               	movwf	_cdc_trf_state& (0+255),b
  7914  0137C4                     l8702:
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;usb_device_cdc.c: 642: }
  7918                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
  7919  0137C4  88A0               	bsf	4000,4,c	;volatile
  7920                           
  7921                           ; BSR set to: 0
  7922  0137C6  0012               	return		;funcret
  7923  0137C8                     __end_of_putUSBUSART:
  7924                           	opt stack 0
  7925                           tblptru	equ	0xFF8
  7926                           tblptrh	equ	0xFF7
  7927                           tblptrl	equ	0xFF6
  7928                           tablat	equ	0xFF5
  7929                           prodh	equ	0xFF4
  7930                           prodl	equ	0xFF3
  7931                           intcon	equ	0xFF2
  7932                           intcon2	equ	0xFF1
  7933                           indf0	equ	0xFEF
  7934                           postinc0	equ	0xFEE
  7935                           fsr0h	equ	0xFEA
  7936                           fsr0l	equ	0xFE9
  7937                           wreg	equ	0xFE8
  7938                           postinc1	equ	0xFE6
  7939                           postdec1	equ	0xFE5
  7940                           fsr1h	equ	0xFE2
  7941                           fsr1l	equ	0xFE1
  7942                           indf2	equ	0xFDF
  7943                           postinc2	equ	0xFDE
  7944                           postdec2	equ	0xFDD
  7945                           fsr2h	equ	0xFDA
  7946                           fsr2l	equ	0xFD9
  7947                           status	equ	0xFD8
  7948                           
  7949 ;; *************** function _get_string_usb *****************
  7950 ;; Defined at:
  7951 ;;		line 32 in file "../My_library/My_usb_cdc.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  s               2   13[BANK0 ] PTR unsigned char 
  7954 ;;		 -> USB_task@data(1), 
  7955 ;;  len             2   15[BANK0 ] int 
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;  rx_len          2   18[BANK0 ] int 
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  2   13[BANK0 ] int 
  7960 ;; Registers used:
  7961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7967 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7968 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7969 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7970 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7971 ;;Total ram usage:        7 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:   13
  7974 ;; This function calls:
  7975 ;;		_CDCTxService
  7976 ;;		_getsUSBUSART
  7977 ;;		_is_usb_available
  7978 ;; This function is called by:
  7979 ;;		_USB_task
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text37
  7984  013340                     __ptext37:
  7985                           	opt stack 0
  7986  013340                     _get_string_usb:
  7987                           	opt stack 16
  7988                           
  7989                           ;My_usb_cdc.c: 33: int rx_len;
  7990                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;incstack = 0
  7994  013340  EC32  F09C         	call	_is_usb_available	;wreg free
  7995  013344  0900               	iorlw	0
  7996  013346  A4D8               	btfss	status,2,c
  7997  013348  D008               	goto	l8950
  7998                           
  7999                           ;My_usb_cdc.c: 36: return 0;
  8000  01334A  0E00               	movlw	0
  8001  01334C  0100               	movlb	0	; () banked
  8002  01334E  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
  8003  013350  0E00               	movlw	0
  8004  013352  6F6D               	movwf	?_get_string_usb& (0+255),b
  8005                           
  8006                           ; BSR set to: 0
  8007  013354  0012               	return	
  8008  013356                     l8948:
  8009                           
  8010                           ; BSR set to: 0
  8011  013356  ECAB  F087         	call	_CDCTxService	;wreg free
  8012  01335A                     l8950:
  8013  01335A  0100               	movlb	0	; () banked
  8014  01335C  51BC               	movf	_cdc_trf_state& (0+255),w,b
  8015  01335E  A4D8               	btfss	status,2,c
  8016  013360  D7FA               	goto	l8948
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
  8020                           
  8021                           ; BSR set to: 0
  8022  013362  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
  8023  013366  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
  8024  01336A  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
  8025  01336E  EC6A  F08C         	call	_getsUSBUSART	;wreg free
  8026  013372  0100               	movlb	0	; () banked
  8027  013374  6F71               	movwf	??_get_string_usb& (0+255),b
  8028  013376  0100               	movlb	0	; () banked
  8029  013378  5171               	movf	??_get_string_usb& (0+255),w,b
  8030  01337A  0100               	movlb	0	; () banked
  8031  01337C  6F72               	movwf	get_string_usb@rx_len& (0+255),b
  8032  01337E  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
  8033                           
  8034                           ;My_usb_cdc.c: 40: CDCTxService();
  8035  013380  ECAB  F087         	call	_CDCTxService	;wreg free
  8036                           
  8037                           ;My_usb_cdc.c: 41: return rx_len;
  8038  013384  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
  8039  013388  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
  8040  01338C  0012               	return	
  8041  01338E                     __end_of_get_string_usb:
  8042                           	opt stack 0
  8043                           tblptru	equ	0xFF8
  8044                           tblptrh	equ	0xFF7
  8045                           tblptrl	equ	0xFF6
  8046                           tablat	equ	0xFF5
  8047                           prodh	equ	0xFF4
  8048                           prodl	equ	0xFF3
  8049                           intcon	equ	0xFF2
  8050                           intcon2	equ	0xFF1
  8051                           indf0	equ	0xFEF
  8052                           postinc0	equ	0xFEE
  8053                           fsr0h	equ	0xFEA
  8054                           fsr0l	equ	0xFE9
  8055                           wreg	equ	0xFE8
  8056                           postinc1	equ	0xFE6
  8057                           postdec1	equ	0xFE5
  8058                           fsr1h	equ	0xFE2
  8059                           fsr1l	equ	0xFE1
  8060                           indf2	equ	0xFDF
  8061                           postinc2	equ	0xFDE
  8062                           postdec2	equ	0xFDD
  8063                           fsr2h	equ	0xFDA
  8064                           fsr2l	equ	0xFD9
  8065                           status	equ	0xFD8
  8066                           
  8067 ;; *************** function _is_usb_available *****************
  8068 ;; Defined at:
  8069 ;;		line 17 in file "../My_library/My_usb_cdc.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;		None
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;		None
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  1    wreg      unsigned char 
  8076 ;; Registers used:
  8077 ;;		wreg, status,2, status,0
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8086 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8087 ;;Total ram usage:        1 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; Hardware stack levels required when called:   11
  8090 ;; This function calls:
  8091 ;;		Nothing
  8092 ;; This function is called by:
  8093 ;;		_put_string_usb
  8094 ;;		_get_string_usb
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text38
  8099  013864                     __ptext38:
  8100                           	opt stack 0
  8101  013864                     _is_usb_available:
  8102                           	opt stack 17
  8103                           
  8104                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
  8105                           
  8106                           ;incstack = 0
  8107  013864  0E00               	movlw	0
  8108  013866  0100               	movlb	0	; () banked
  8109  013868  6F60               	movwf	_is_usb_available$3807& (0+255),b
  8110                           
  8111                           ; BSR set to: 0
  8112  01386A  0E1F               	movlw	31
  8113  01386C  6425               	cpfsgt	_USBDeviceState,c	;volatile
  8114  01386E  D005               	goto	l888
  8115                           
  8116                           ; BSR set to: 0
  8117  013870  B265               	btfsc	3941,1,c	;volatile
  8118  013872  D003               	goto	l888
  8119                           
  8120                           ; BSR set to: 0
  8121  013874  0E01               	movlw	1
  8122  013876  0100               	movlb	0	; () banked
  8123  013878  6F60               	movwf	_is_usb_available$3807& (0+255),b
  8124  01387A                     l888:
  8125                           
  8126                           ; BSR set to: 0
  8127  01387A  0100               	movlb	0	; () banked
  8128  01387C  5160               	movf	_is_usb_available$3807& (0+255),w,b
  8129  01387E  0012               	return	
  8130  013880                     __end_of_is_usb_available:
  8131                           	opt stack 0
  8132                           tblptru	equ	0xFF8
  8133                           tblptrh	equ	0xFF7
  8134                           tblptrl	equ	0xFF6
  8135                           tablat	equ	0xFF5
  8136                           prodh	equ	0xFF4
  8137                           prodl	equ	0xFF3
  8138                           intcon	equ	0xFF2
  8139                           intcon2	equ	0xFF1
  8140                           indf0	equ	0xFEF
  8141                           postinc0	equ	0xFEE
  8142                           fsr0h	equ	0xFEA
  8143                           fsr0l	equ	0xFE9
  8144                           wreg	equ	0xFE8
  8145                           postinc1	equ	0xFE6
  8146                           postdec1	equ	0xFE5
  8147                           fsr1h	equ	0xFE2
  8148                           fsr1l	equ	0xFE1
  8149                           indf2	equ	0xFDF
  8150                           postinc2	equ	0xFDE
  8151                           postdec2	equ	0xFDD
  8152                           fsr2h	equ	0xFDA
  8153                           fsr2l	equ	0xFD9
  8154                           status	equ	0xFD8
  8155                           
  8156 ;; *************** function _getsUSBUSART *****************
  8157 ;; Defined at:
  8158 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
  8161 ;;		 -> USB_task@data(1), 
  8162 ;;  len             1    9[BANK0 ] unsigned char 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      unsigned char 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8174 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8176 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8177 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8178 ;;Total ram usage:        6 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:   12
  8181 ;; This function calls:
  8182 ;;		_USBTransferOnePacket
  8183 ;; This function is called by:
  8184 ;;		_get_string_usb
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text39
  8189  0118D4                     __ptext39:
  8190                           	opt stack 0
  8191  0118D4                     _getsUSBUSART:
  8192                           	opt stack 16
  8193                           
  8194                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;incstack = 0
  8198  0118D4  0E00               	movlw	0
  8199  0118D6  0100               	movlb	0	; () banked
  8200  0118D8  6FBB               	movwf	_cdc_rx_len& (0+255),b
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
  8204  0118DA  0100               	movlb	0	; () banked
  8205  0118DC  51AE               	movf	_CDCDataOutHandle& (0+255),w,b
  8206  0118DE  0100               	movlb	0	; () banked
  8207  0118E0  11AF               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
  8208  0118E2  B4D8               	btfsc	status,2,c
  8209  0118E4  D013               	goto	l8710
  8210                           
  8211                           ; BSR set to: 0
  8212  0118E6  C0AE  FFD9         	movff	_CDCDataOutHandle,fsr2l
  8213  0118EA  C0AF  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  8214  0118EE  0100               	movlb	0	; () banked
  8215  0118F0  AEDF               	btfss	indf2,7,c
  8216  0118F2  D004               	goto	u8600
  8217  0118F4  0100               	movlb	0	; () banked
  8218  0118F6  6B6A               	clrf	??_getsUSBUSART& (0+255),b
  8219  0118F8  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
  8220  0118FA  D002               	goto	u8608
  8221  0118FC                     u8600:
  8222  0118FC  0100               	movlb	0	; () banked
  8223  0118FE  6B6A               	clrf	??_getsUSBUSART& (0+255),b
  8224  011900                     u8608:
  8225  011900  0100               	movlb	0	; () banked
  8226  011902  516A               	movf	??_getsUSBUSART& (0+255),w,b
  8227  011904  0100               	movlb	0	; () banked
  8228  011906  6F6B               	movwf	_getsUSBUSART$5624& (0+255),b
  8229  011908  6B6C               	clrf	(_getsUSBUSART$5624+1)& (0+255),b
  8230  01190A  D005               	goto	l8712
  8231  01190C                     l8710:
  8232                           
  8233                           ; BSR set to: 0
  8234  01190C  0E00               	movlw	0
  8235  01190E  0100               	movlb	0	; () banked
  8236  011910  6F6C               	movwf	(_getsUSBUSART$5624+1)& (0+255),b
  8237  011912  0E00               	movlw	0
  8238  011914  6F6B               	movwf	_getsUSBUSART$5624& (0+255),b
  8239  011916                     l8712:
  8240                           
  8241                           ; BSR set to: 0
  8242  011916  0100               	movlb	0	; () banked
  8243  011918  516B               	movf	_getsUSBUSART$5624& (0+255),w,b
  8244  01191A  0100               	movlb	0	; () banked
  8245  01191C  116C               	iorwf	(_getsUSBUSART$5624+1)& (0+255),w,b
  8246  01191E  A4D8               	btfss	status,2,c
  8247  011920  D04B               	goto	l8728
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;usb_device_cdc.c: 547: {
  8251                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  8252  011922  0100               	movlb	0	; () banked
  8253  011924  EE20 F001          	lfsr	2,1
  8254  011928  51AE               	movf	_CDCDataOutHandle& (0+255),w,b
  8255  01192A  26D9               	addwf	fsr2l,f,c
  8256  01192C  51AF               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  8257  01192E  22DA               	addwfc	fsr2h,f,c
  8258  011930  0100               	movlb	0	; () banked
  8259  011932  5169               	movf	getsUSBUSART@len& (0+255),w,b
  8260  011934  5CDE               	subwf	postinc2,w,c
  8261  011936  B0D8               	btfsc	status,0,c
  8262  011938  D00A               	goto	l8718
  8263                           
  8264                           ; BSR set to: 0
  8265                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  8266  01193A  0100               	movlb	0	; () banked
  8267  01193C  EE20 F001          	lfsr	2,1
  8268  011940  51AE               	movf	_CDCDataOutHandle& (0+255),w,b
  8269  011942  26D9               	addwf	fsr2l,f,c
  8270  011944  51AF               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
  8271  011946  22DA               	addwfc	fsr2h,f,c
  8272  011948  50DF               	movf	indf2,w,c
  8273  01194A  0100               	movlb	0	; () banked
  8274  01194C  6F69               	movwf	getsUSBUSART@len& (0+255),b
  8275  01194E                     l8718:
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  8279  01194E  0E00               	movlw	0
  8280  011950  0100               	movlb	0	; () banked
  8281  011952  6FBB               	movwf	_cdc_rx_len& (0+255),b
  8282  011954  D018               	goto	l8724
  8283  011956                     l8720:
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  8287  011956  0100               	movlb	0	; () banked
  8288  011958  51BB               	movf	_cdc_rx_len& (0+255),w,b
  8289  01195A  0D01               	mullw	1
  8290  01195C  0E12               	movlw	low _cdc_data_rx
  8291  01195E  24F3               	addwf	prodl,w,c
  8292  011960  6ED9               	movwf	fsr2l,c
  8293  011962  0E01               	movlw	high _cdc_data_rx
  8294  011964  20F4               	addwfc	prodh,w,c
  8295  011966  6EDA               	movwf	fsr2h,c
  8296  011968  0100               	movlb	0	; () banked
  8297  01196A  51BB               	movf	_cdc_rx_len& (0+255),w,b
  8298  01196C  0D01               	mullw	1
  8299  01196E  50F3               	movf	prodl,w,c
  8300  011970  0100               	movlb	0	; () banked
  8301  011972  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
  8302  011974  6EE1               	movwf	fsr1l,c
  8303  011976  50F4               	movf	prodh,w,c
  8304  011978  0100               	movlb	0	; () banked
  8305  01197A  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
  8306  01197C  6EE2               	movwf	fsr1h,c
  8307  01197E  CFDF FFE7          	movff	indf2,indf1
  8308                           
  8309                           ; BSR set to: 0
  8310  011982  0100               	movlb	0	; () banked
  8311  011984  2BBB               	incf	_cdc_rx_len& (0+255),f,b
  8312  011986                     l8724:
  8313                           
  8314                           ; BSR set to: 0
  8315  011986  0100               	movlb	0	; () banked
  8316  011988  5169               	movf	getsUSBUSART@len& (0+255),w,b
  8317  01198A  0100               	movlb	0	; () banked
  8318  01198C  5DBB               	subwf	_cdc_rx_len& (0+255),w,b
  8319  01198E  A0D8               	btfss	status,0,c
  8320  011990  D7E2               	goto	l8720
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8324                           
  8325                           ; BSR set to: 0
  8326  011992  0E00               	movlw	0
  8327  011994  0100               	movlb	0	; () banked
  8328  011996  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8329  011998  0E12               	movlw	low _cdc_data_rx
  8330  01199A  0100               	movlb	0	; () banked
  8331  01199C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8332  01199E  0E01               	movlw	high _cdc_data_rx
  8333  0119A0  0100               	movlb	0	; () banked
  8334  0119A2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8335  0119A4  0E40               	movlw	64
  8336  0119A6  0100               	movlb	0	; () banked
  8337  0119A8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  8338  0119AA  0E02               	movlw	2
  8339  0119AC  EC9A  F08E         	call	_USBTransferOnePacket
  8340  0119B0  C060  F0AE         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  8341  0119B4  C061  F0AF         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  8342  0119B8                     l8728:
  8343                           
  8344                           ;usb_device_cdc.c: 567: }
  8345                           ;usb_device_cdc.c: 569: return cdc_rx_len;
  8346  0119B8  0100               	movlb	0	; () banked
  8347  0119BA  51BB               	movf	_cdc_rx_len& (0+255),w,b
  8348  0119BC  0012               	return	
  8349  0119BE                     __end_of_getsUSBUSART:
  8350                           	opt stack 0
  8351                           tblptru	equ	0xFF8
  8352                           tblptrh	equ	0xFF7
  8353                           tblptrl	equ	0xFF6
  8354                           tablat	equ	0xFF5
  8355                           prodh	equ	0xFF4
  8356                           prodl	equ	0xFF3
  8357                           intcon	equ	0xFF2
  8358                           intcon2	equ	0xFF1
  8359                           indf0	equ	0xFEF
  8360                           postinc0	equ	0xFEE
  8361                           fsr0h	equ	0xFEA
  8362                           fsr0l	equ	0xFE9
  8363                           wreg	equ	0xFE8
  8364                           indf1	equ	0xFE7
  8365                           postinc1	equ	0xFE6
  8366                           postdec1	equ	0xFE5
  8367                           fsr1h	equ	0xFE2
  8368                           fsr1l	equ	0xFE1
  8369                           indf2	equ	0xFDF
  8370                           postinc2	equ	0xFDE
  8371                           postdec2	equ	0xFDD
  8372                           fsr2h	equ	0xFDA
  8373                           fsr2l	equ	0xFD9
  8374                           status	equ	0xFD8
  8375                           
  8376 ;; *************** function _CDCTxService *****************
  8377 ;; Defined at:
  8378 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
  8383 ;;  i               1   10[BANK0 ] unsigned char 
  8384 ;; Return value:  Size  Location     Type
  8385 ;;		None               void
  8386 ;; Registers used:
  8387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8394 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8395 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8396 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8397 ;;Total ram usage:        5 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:   12
  8400 ;; This function calls:
  8401 ;;		_USBTransferOnePacket
  8402 ;; This function is called by:
  8403 ;;		_put_string_usb
  8404 ;;		_get_string_usb
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           	psect	text40
  8409  010F56                     __ptext40:
  8410                           	opt stack 0
  8411  010F56                     _CDCTxService:
  8412                           	opt stack 16
  8413                           
  8414                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
  8415                           ;usb_device_cdc.c: 896: uint8_t i;
  8416                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;incstack = 0
  8420  010F56  98A0               	bcf	4000,4,c	;volatile
  8421                           
  8422                           ;usb_device_cdc.c: 900: {};
  8423                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  8424  010F58  0100               	movlb	0	; () banked
  8425  010F5A  51AC               	movf	_CDCDataInHandle& (0+255),w,b
  8426  010F5C  0100               	movlb	0	; () banked
  8427  010F5E  11AD               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  8428  010F60  B4D8               	btfsc	status,2,c
  8429  010F62  D013               	goto	l8626
  8430                           
  8431                           ; BSR set to: 0
  8432  010F64  C0AC  FFD9         	movff	_CDCDataInHandle,fsr2l
  8433  010F68  C0AD  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  8434  010F6C  0100               	movlb	0	; () banked
  8435  010F6E  AEDF               	btfss	indf2,7,c
  8436  010F70  D004               	goto	u8460
  8437  010F72  0100               	movlb	0	; () banked
  8438  010F74  6B67               	clrf	??_CDCTxService& (0+255),b
  8439  010F76  2B67               	incf	??_CDCTxService& (0+255),f,b
  8440  010F78  D002               	goto	u8468
  8441  010F7A                     u8460:
  8442  010F7A  0100               	movlb	0	; () banked
  8443  010F7C  6B67               	clrf	??_CDCTxService& (0+255),b
  8444  010F7E                     u8468:
  8445  010F7E  0100               	movlb	0	; () banked
  8446  010F80  5167               	movf	??_CDCTxService& (0+255),w,b
  8447  010F82  0100               	movlb	0	; () banked
  8448  010F84  6F68               	movwf	_CDCTxService$5672& (0+255),b
  8449  010F86  6B69               	clrf	(_CDCTxService$5672+1)& (0+255),b
  8450  010F88  D005               	goto	l8628
  8451  010F8A                     l8626:
  8452                           
  8453                           ; BSR set to: 0
  8454  010F8A  0E00               	movlw	0
  8455  010F8C  0100               	movlb	0	; () banked
  8456  010F8E  6F69               	movwf	(_CDCTxService$5672+1)& (0+255),b
  8457  010F90  0E00               	movlw	0
  8458  010F92  6F68               	movwf	_CDCTxService$5672& (0+255),b
  8459  010F94                     l8628:
  8460                           
  8461                           ; BSR set to: 0
  8462  010F94  0100               	movlb	0	; () banked
  8463  010F96  5168               	movf	_CDCTxService$5672& (0+255),w,b
  8464  010F98  0100               	movlb	0	; () banked
  8465  010F9A  1169               	iorwf	(_CDCTxService$5672+1)& (0+255),w,b
  8466  010F9C  B4D8               	btfsc	status,2,c
  8467  010F9E  D002               	goto	l8632
  8468                           
  8469                           ; BSR set to: 0
  8470                           ;usb_device_cdc.c: 903: {
  8471                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
  8472  010FA0  88A0               	bsf	4000,4,c	;volatile
  8473                           
  8474                           ;usb_device_cdc.c: 905: return;
  8475  010FA2  0012               	return	
  8476  010FA4                     l8632:
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;usb_device_cdc.c: 906: }
  8480                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
  8481  010FA4  0E03               	movlw	3
  8482  010FA6  0100               	movlb	0	; () banked
  8483  010FA8  19BC               	xorwf	_cdc_trf_state& (0+255),w,b
  8484  010FAA  A4D8               	btfss	status,2,c
  8485  010FAC  D003               	goto	l1426
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
  8489  010FAE  0E00               	movlw	0
  8490  010FB0  0100               	movlb	0	; () banked
  8491  010FB2  6FBC               	movwf	_cdc_trf_state& (0+255),b
  8492  010FB4                     l1426:
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
  8496  010FB4  0100               	movlb	0	; () banked
  8497  010FB6  51BC               	movf	_cdc_trf_state& (0+255),w,b
  8498  010FB8  A4D8               	btfss	status,2,c
  8499  010FBA  D002               	goto	l8638
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;usb_device_cdc.c: 920: {
  8503                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
  8504  010FBC  88A0               	bsf	4000,4,c	;volatile
  8505                           
  8506                           ;usb_device_cdc.c: 922: return;
  8507  010FBE  0012               	return	
  8508  010FC0                     l8638:
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;usb_device_cdc.c: 923: }
  8512                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
  8513  010FC0  0E02               	movlw	2
  8514  010FC2  0100               	movlb	0	; () banked
  8515  010FC4  19BC               	xorwf	_cdc_trf_state& (0+255),w,b
  8516  010FC6  A4D8               	btfss	status,2,c
  8517  010FC8  D017               	goto	l8644
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;usb_device_cdc.c: 929: {
  8521                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  8522  010FCA  0E01               	movlw	1
  8523  010FCC  0100               	movlb	0	; () banked
  8524  010FCE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8525  010FD0  0E00               	movlw	0
  8526  010FD2  0100               	movlb	0	; () banked
  8527  010FD4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8528  010FD6  0E00               	movlw	0
  8529  010FD8  0100               	movlb	0	; () banked
  8530  010FDA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8531  010FDC  0E00               	movlw	0
  8532  010FDE  0100               	movlb	0	; () banked
  8533  010FE0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  8534  010FE2  0E02               	movlw	2
  8535  010FE4  EC9A  F08E         	call	_USBTransferOnePacket
  8536  010FE8  C060  F0AC         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  8537  010FEC  C061  F0AD         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  8538                           
  8539                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
  8540  010FF0  0E03               	movlw	3
  8541  010FF2  0100               	movlb	0	; () banked
  8542  010FF4  6FBC               	movwf	_cdc_trf_state& (0+255),b
  8543                           
  8544                           ;usb_device_cdc.c: 933: }
  8545  010FF6  D073               	goto	l8688
  8546  010FF8                     l8644:
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
  8550  010FF8  0100               	movlb	0	; () banked
  8551  010FFA  05BC               	decf	_cdc_trf_state& (0+255),w,b
  8552  010FFC  A4D8               	btfss	status,2,c
  8553  010FFE  D06F               	goto	l8688
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;usb_device_cdc.c: 935: {
  8557                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
  8558  011000  0E40               	movlw	64
  8559  011002  0100               	movlb	0	; () banked
  8560  011004  65BD               	cpfsgt	_cdc_tx_len& (0+255),b
  8561  011006  D004               	goto	l1431
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
  8565  011008  0E40               	movlw	64
  8566  01100A  0100               	movlb	0	; () banked
  8567  01100C  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
  8568  01100E  D002               	goto	l8650
  8569  011010                     l1431:
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;usb_device_cdc.c: 941: else
  8573                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
  8574  011010  C0BD  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  8575  011014                     l8650:
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
  8579  011014  0100               	movlb	0	; () banked
  8580  011016  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
  8581  011018  0800               	sublw	0
  8582  01101A  0100               	movlb	0	; () banked
  8583  01101C  25BD               	addwf	_cdc_tx_len& (0+255),w,b
  8584  01101E  0100               	movlb	0	; () banked
  8585  011020  6FBD               	movwf	_cdc_tx_len& (0+255),b
  8586                           
  8587                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  8588  011022  0E64               	movlw	low _cdc_data_tx
  8589  011024  0100               	movlb	0	; () banked
  8590  011026  6FA4               	movwf	_pCDCDst& (0+255),b
  8591  011028  0E02               	movlw	high _cdc_data_tx
  8592  01102A  0100               	movlb	0	; () banked
  8593  01102C  6FA5               	movwf	(_pCDCDst+1)& (0+255),b
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;usb_device_cdc.c: 951: i = byte_to_send;
  8597  01102E  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
  8598                           
  8599                           ; BSR set to: 0
  8600                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
  8601  011032  0100               	movlb	0	; () banked
  8602  011034  51BA               	movf	_cdc_mem_type& (0+255),w,b
  8603  011036  0100               	movlb	0	; () banked
  8604  011038  B4D8               	btfsc	status,2,c
  8605  01103A  D013               	goto	l8666
  8606  01103C  D02A               	goto	l8676
  8607  01103E                     l8658:
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;usb_device_cdc.c: 955: {
  8611                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
  8612  01103E  C0A7  FFD9         	movff	_pCDCSrc,fsr2l
  8613  011042  C0A8  FFDA         	movff	_pCDCSrc+1,fsr2h
  8614  011046  C0A4  FFE1         	movff	_pCDCDst,fsr1l
  8615  01104A  C0A5  FFE2         	movff	_pCDCDst+1,fsr1h
  8616  01104E  CFDF FFE7          	movff	indf2,indf1
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
  8620  011052  0100               	movlb	0	; () banked
  8621  011054  4BA4               	infsnz	_pCDCDst& (0+255),f,b
  8622  011056  2BA5               	incf	(_pCDCDst+1)& (0+255),f,b
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
  8626  011058  0100               	movlb	0	; () banked
  8627  01105A  4BA7               	infsnz	_pCDCSrc& (0+255),f,b
  8628  01105C  2BA8               	incf	(_pCDCSrc+1)& (0+255),f,b
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;usb_device_cdc.c: 959: i--;
  8632  01105E  0100               	movlb	0	; () banked
  8633  011060  076A               	decf	CDCTxService@i& (0+255),f,b
  8634  011062                     l8666:
  8635                           
  8636                           ; BSR set to: 0
  8637  011062  0100               	movlb	0	; () banked
  8638  011064  516A               	movf	CDCTxService@i& (0+255),w,b
  8639  011066  0100               	movlb	0	; () banked
  8640  011068  B4D8               	btfsc	status,2,c
  8641  01106A  D018               	goto	l8678
  8642  01106C  D7E8               	goto	l8658
  8643  01106E                     l8668:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;usb_device_cdc.c: 965: {
  8647                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
  8648  01106E  C0A7  FFD9         	movff	_pCDCSrc,fsr2l
  8649  011072  C0A8  FFDA         	movff	_pCDCSrc+1,fsr2h
  8650  011076  C0A4  FFE1         	movff	_pCDCDst,fsr1l
  8651  01107A  C0A5  FFE2         	movff	_pCDCDst+1,fsr1h
  8652  01107E  CFDF FFE7          	movff	indf2,indf1
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
  8656  011082  0100               	movlb	0	; () banked
  8657  011084  4BA4               	infsnz	_pCDCDst& (0+255),f,b
  8658  011086  2BA5               	incf	(_pCDCDst+1)& (0+255),f,b
  8659                           
  8660                           ; BSR set to: 0
  8661                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
  8662  011088  0100               	movlb	0	; () banked
  8663  01108A  4BA7               	infsnz	_pCDCSrc& (0+255),f,b
  8664  01108C  2BA8               	incf	(_pCDCSrc+1)& (0+255),f,b
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;usb_device_cdc.c: 969: i--;
  8668  01108E  0100               	movlb	0	; () banked
  8669  011090  076A               	decf	CDCTxService@i& (0+255),f,b
  8670  011092                     l8676:
  8671                           
  8672                           ; BSR set to: 0
  8673  011092  0100               	movlb	0	; () banked
  8674  011094  516A               	movf	CDCTxService@i& (0+255),w,b
  8675  011096  0100               	movlb	0	; () banked
  8676  011098  A4D8               	btfss	status,2,c
  8677  01109A  D7E9               	goto	l8668
  8678  01109C                     l8678:
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;usb_device_cdc.c: 970: }
  8682                           ;usb_device_cdc.c: 971: }
  8683                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
  8684  01109C  0100               	movlb	0	; () banked
  8685  01109E  51BD               	movf	_cdc_tx_len& (0+255),w,b
  8686  0110A0  0100               	movlb	0	; () banked
  8687  0110A2  A4D8               	btfss	status,2,c
  8688  0110A4  D00A               	goto	l8686
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;usb_device_cdc.c: 978: {
  8692                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
  8693  0110A6  0E40               	movlw	64
  8694  0110A8  0100               	movlb	0	; () banked
  8695  0110AA  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  8696  0110AC  A4D8               	btfss	status,2,c
  8697  0110AE  D002               	goto	l8684
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
  8701  0110B0  0E02               	movlw	2
  8702  0110B2  D001               	goto	L1
  8703  0110B4                     l8684:
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;usb_device_cdc.c: 981: else
  8707                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
  8708  0110B4  0E03               	movlw	3
  8709  0110B6                     L1:
  8710  0110B6  0100               	movlb	0	; () banked
  8711  0110B8  6FBC               	movwf	_cdc_trf_state& (0+255),b
  8712  0110BA                     l8686:
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;usb_device_cdc.c: 983: }
  8716                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  8717  0110BA  0E01               	movlw	1
  8718  0110BC  0100               	movlb	0	; () banked
  8719  0110BE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  8720  0110C0  0E64               	movlw	low _cdc_data_tx
  8721  0110C2  0100               	movlb	0	; () banked
  8722  0110C4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  8723  0110C6  0E02               	movlw	high _cdc_data_tx
  8724  0110C8  0100               	movlb	0	; () banked
  8725  0110CA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  8726  0110CC  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  8727  0110D0  0E02               	movlw	2
  8728  0110D2  EC9A  F08E         	call	_USBTransferOnePacket
  8729  0110D6  C060  F0AC         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  8730  0110DA  C061  F0AD         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  8731  0110DE                     l8688:
  8732                           
  8733                           ;usb_device_cdc.c: 986: }
  8734                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
  8735  0110DE  88A0               	bsf	4000,4,c	;volatile
  8736  0110E0  0012               	return		;funcret
  8737  0110E2                     __end_of_CDCTxService:
  8738                           	opt stack 0
  8739                           tblptru	equ	0xFF8
  8740                           tblptrh	equ	0xFF7
  8741                           tblptrl	equ	0xFF6
  8742                           tablat	equ	0xFF5
  8743                           prodh	equ	0xFF4
  8744                           prodl	equ	0xFF3
  8745                           intcon	equ	0xFF2
  8746                           intcon2	equ	0xFF1
  8747                           indf0	equ	0xFEF
  8748                           postinc0	equ	0xFEE
  8749                           fsr0h	equ	0xFEA
  8750                           fsr0l	equ	0xFE9
  8751                           wreg	equ	0xFE8
  8752                           indf1	equ	0xFE7
  8753                           postinc1	equ	0xFE6
  8754                           postdec1	equ	0xFE5
  8755                           fsr1h	equ	0xFE2
  8756                           fsr1l	equ	0xFE1
  8757                           indf2	equ	0xFDF
  8758                           postinc2	equ	0xFDE
  8759                           postdec2	equ	0xFDD
  8760                           fsr2h	equ	0xFDA
  8761                           fsr2l	equ	0xFD9
  8762                           status	equ	0xFD8
  8763                           
  8764 ;; *************** function _USBTransferOnePacket *****************
  8765 ;; Defined at:
  8766 ;;		line 995 in file "../My_library/usb/usb_device.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  ep              1    wreg     unsigned char 
  8769 ;;  dir             1    0[BANK0 ] unsigned char 
  8770 ;;  data            2    1[BANK0 ] PTR unsigned char 
  8771 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8772 ;;  len             1    3[BANK0 ] unsigned char 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  ep              1    4[BANK0 ] unsigned char 
  8775 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
  8776 ;;		 -> NULL(0), BDT(48), 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  2    0[BANK0 ] PTR void 
  8779 ;; Registers used:
  8780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8786 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8787 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8789 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8790 ;;Total ram usage:        7 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:   11
  8793 ;; This function calls:
  8794 ;;		Nothing
  8795 ;; This function is called by:
  8796 ;;		_getsUSBUSART
  8797 ;;		_CDCTxService
  8798 ;;		_USBCDCEventHandler
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text41
  8803  011D34                     __ptext41:
  8804                           	opt stack 0
  8805  011D34                     _USBTransferOnePacket:
  8806                           	opt stack 16
  8807                           
  8808                           ;incstack = 0
  8809                           ;USBTransferOnePacket@ep stored from wreg
  8810  011D34  0100               	movlb	0	; () banked
  8811  011D36  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
  8812                           
  8813                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8814                           ;usb_device.c: 1000: if(dir != 0)
  8815  011D38  0100               	movlb	0	; () banked
  8816  011D3A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  8817  011D3C  0100               	movlb	0	; () banked
  8818  011D3E  B4D8               	btfsc	status,2,c
  8819  011D40  D008               	goto	l8256
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;usb_device.c: 1001: {
  8823                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8824  011D42  0100               	movlb	0	; () banked
  8825  011D44  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8826  011D46  0D02               	mullw	2
  8827  011D48  0E10               	movlw	low _pBDTEntryIn
  8828  011D4A  24F3               	addwf	prodl,w,c
  8829  011D4C  6ED9               	movwf	fsr2l,c
  8830  011D4E  0E00               	movlw	high _pBDTEntryIn
  8831  011D50  D007               	goto	L2
  8832  011D52                     l8256:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;usb_device.c: 1005: else
  8836                           ;usb_device.c: 1006: {
  8837                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8838  011D52  0100               	movlb	0	; () banked
  8839  011D54  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8840  011D56  0D02               	mullw	2
  8841  011D58  0E9E               	movlw	low _pBDTEntryOut
  8842  011D5A  24F3               	addwf	prodl,w,c
  8843  011D5C  6ED9               	movwf	fsr2l,c
  8844  011D5E  0E00               	movlw	high _pBDTEntryOut
  8845  011D60                     L2:
  8846  011D60  20F4               	addwfc	prodh,w,c
  8847  011D62  6EDA               	movwf	fsr2h,c
  8848  011D64  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
  8849  011D68  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;usb_device.c: 1009: }
  8853                           ;usb_device.c: 1013: if(handle == 0)
  8854                           
  8855                           ; BSR set to: 0
  8856  011D6C  0100               	movlb	0	; () banked
  8857  011D6E  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8858  011D70  0100               	movlb	0	; () banked
  8859  011D72  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8860  011D74  A4D8               	btfss	status,2,c
  8861  011D76  D007               	goto	l8264
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;usb_device.c: 1014: {
  8865                           ;usb_device.c: 1015: return 0;
  8866  011D78  0E00               	movlw	0
  8867  011D7A  0100               	movlb	0	; () banked
  8868  011D7C  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  8869  011D7E  0E00               	movlw	0
  8870  011D80  0100               	movlb	0	; () banked
  8871  011D82  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  8872                           
  8873                           ; BSR set to: 0
  8874  011D84  0012               	return	
  8875  011D86                     l8264:
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;usb_device.c: 1016: }
  8879                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  8880  011D86  0100               	movlb	0	; () banked
  8881  011D88  EE20 F002          	lfsr	2,2
  8882  011D8C  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8883  011D8E  26D9               	addwf	fsr2l,f,c
  8884  011D90  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8885  011D92  22DA               	addwfc	fsr2h,f,c
  8886  011D94  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  8887  011D98  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  8888                           
  8889                           ;usb_device.c: 1030: handle->CNT = len;
  8890  011D9C  0100               	movlb	0	; () banked
  8891  011D9E  EE20 F001          	lfsr	2,1
  8892  011DA2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
  8893  011DA4  26D9               	addwf	fsr2l,f,c
  8894  011DA6  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  8895  011DA8  22DA               	addwfc	fsr2h,f,c
  8896  011DAA  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8900  011DAE  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8901  011DB2  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8902  011DB6  0E40               	movlw	64
  8903  011DB8  16DF               	andwf	indf2,f,c
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8907  011DBA  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8908  011DBE  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8909  011DC2  0E00               	movlw	0
  8910  011DC4  86DB               	bsf	plusw2,3,c
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8914  011DC6  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  8915  011DCA  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  8916  011DCE  0E00               	movlw	0
  8917  011DD0  8EDB               	bsf	plusw2,7,c
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;usb_device.c: 1036: if(dir != 0)
  8921  011DD2  0100               	movlb	0	; () banked
  8922  011DD4  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  8923  011DD6  0100               	movlb	0	; () banked
  8924  011DD8  B4D8               	btfsc	status,2,c
  8925  011DDA  D008               	goto	l8276
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;usb_device.c: 1037: {
  8929                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  8930  011DDC  0100               	movlb	0	; () banked
  8931  011DDE  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8932  011DE0  0D02               	mullw	2
  8933  011DE2  0E10               	movlw	low _pBDTEntryIn
  8934  011DE4  24F3               	addwf	prodl,w,c
  8935  011DE6  6ED9               	movwf	fsr2l,c
  8936  011DE8  0E00               	movlw	high _pBDTEntryIn
  8937  011DEA  D007               	goto	L3
  8938  011DEC                     l8276:
  8939                           
  8940                           ; BSR set to: 0
  8941                           ;usb_device.c: 1041: else
  8942                           ;usb_device.c: 1042: {
  8943                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  8944  011DEC  0100               	movlb	0	; () banked
  8945  011DEE  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
  8946  011DF0  0D02               	mullw	2
  8947  011DF2  0E9E               	movlw	low _pBDTEntryOut
  8948  011DF4  24F3               	addwf	prodl,w,c
  8949  011DF6  6ED9               	movwf	fsr2l,c
  8950  011DF8  0E00               	movlw	high _pBDTEntryOut
  8951  011DFA                     L3:
  8952  011DFA  20F4               	addwfc	prodh,w,c
  8953  011DFC  6EDA               	movwf	fsr2h,c
  8954  011DFE  0E04               	movlw	4
  8955  011E00  1ADF               	xorwf	indf2,f,c
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;usb_device.c: 1045: }
  8959                           ;usb_device.c: 1046: return (void*)handle;
  8960                           
  8961                           ; BSR set to: 0
  8962  011E02  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  8963  011E06  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  8964  011E0A  0012               	return	
  8965  011E0C                     __end_of_USBTransferOnePacket:
  8966                           	opt stack 0
  8967                           tblptru	equ	0xFF8
  8968                           tblptrh	equ	0xFF7
  8969                           tblptrl	equ	0xFF6
  8970                           tablat	equ	0xFF5
  8971                           prodh	equ	0xFF4
  8972                           prodl	equ	0xFF3
  8973                           intcon	equ	0xFF2
  8974                           intcon2	equ	0xFF1
  8975                           indf0	equ	0xFEF
  8976                           postinc0	equ	0xFEE
  8977                           fsr0h	equ	0xFEA
  8978                           fsr0l	equ	0xFE9
  8979                           wreg	equ	0xFE8
  8980                           indf1	equ	0xFE7
  8981                           postinc1	equ	0xFE6
  8982                           postdec1	equ	0xFE5
  8983                           fsr1h	equ	0xFE2
  8984                           fsr1l	equ	0xFE1
  8985                           indf2	equ	0xFDF
  8986                           postinc2	equ	0xFDE
  8987                           postdec2	equ	0xFDD
  8988                           plusw2	equ	0xFDB
  8989                           fsr2h	equ	0xFDA
  8990                           fsr2l	equ	0xFD9
  8991                           status	equ	0xFD8
  8992                           
  8993 ;; *************** function _UART_task *****************
  8994 ;; Defined at:
  8995 ;;		line 43 in file "../My_library/My_UART.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;		None
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;		None               void
  9002 ;; Registers used:
  9003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;Total ram usage:        0 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:   12
  9016 ;; This function calls:
  9017 ;;		_ringbuf_num
  9018 ;; This function is called by:
  9019 ;;		_main
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	text42
  9024  0137EA                     __ptext42:
  9025                           	opt stack 0
  9026  0137EA                     _UART_task:
  9027                           	opt stack 18
  9028                           
  9029                           ;My_UART.c: 44: if (ringbuf_num(&uart_tx)) {
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;incstack = 0
  9033  0137EA  0ED4               	movlw	low _uart_tx
  9034  0137EC  0100               	movlb	0	; () banked
  9035  0137EE  6F60               	movwf	ringbuf_num@rb& (0+255),b
  9036  0137F0  0E01               	movlw	high _uart_tx
  9037  0137F2  0100               	movlb	0	; () banked
  9038  0137F4  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  9039  0137F6  ECF3  F08B         	call	_ringbuf_num	;wreg free
  9040  0137FA  0100               	movlb	0	; () banked
  9041  0137FC  5160               	movf	?_ringbuf_num& (0+255),w,b
  9042  0137FE  0100               	movlb	0	; () banked
  9043  013800  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9044  013802  B4D8               	btfsc	status,2,c
  9045  013804  0012               	return	
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
  9049  013806  889D               	bsf	3997,4,c	;volatile
  9050  013808  0012               	return	
  9051  01380A                     __end_of_UART_task:
  9052                           	opt stack 0
  9053                           tblptru	equ	0xFF8
  9054                           tblptrh	equ	0xFF7
  9055                           tblptrl	equ	0xFF6
  9056                           tablat	equ	0xFF5
  9057                           prodh	equ	0xFF4
  9058                           prodl	equ	0xFF3
  9059                           intcon	equ	0xFF2
  9060                           intcon2	equ	0xFF1
  9061                           indf0	equ	0xFEF
  9062                           postinc0	equ	0xFEE
  9063                           fsr0h	equ	0xFEA
  9064                           fsr0l	equ	0xFE9
  9065                           wreg	equ	0xFE8
  9066                           indf1	equ	0xFE7
  9067                           postinc1	equ	0xFE6
  9068                           postdec1	equ	0xFE5
  9069                           fsr1h	equ	0xFE2
  9070                           fsr1l	equ	0xFE1
  9071                           indf2	equ	0xFDF
  9072                           postinc2	equ	0xFDE
  9073                           postdec2	equ	0xFDD
  9074                           plusw2	equ	0xFDB
  9075                           fsr2h	equ	0xFDA
  9076                           fsr2l	equ	0xFD9
  9077                           status	equ	0xFD8
  9078                           
  9079 ;; *************** function _ringbuf_num *****************
  9080 ;; Defined at:
  9081 ;;		line 12 in file "../My_library/My_ringbuf.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  9084 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_rx(8), uart_tx(8), 
  9085 ;;		 -> usb_rx(8), usb_tx(8), 
  9086 ;; Auto vars:     Size  Location     Type
  9087 ;;		None
  9088 ;; Return value:  Size  Location     Type
  9089 ;;                  2    0[BANK0 ] unsigned int 
  9090 ;; Registers used:
  9091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9092 ;; Tracked objects:
  9093 ;;		On entry : 0/0
  9094 ;;		On exit  : 0/0
  9095 ;;		Unchanged: 0/0
  9096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9099 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9100 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9101 ;;Total ram usage:        8 bytes
  9102 ;; Hardware stack levels used:    1
  9103 ;; Hardware stack levels required when called:   11
  9104 ;; This function calls:
  9105 ;;		Nothing
  9106 ;; This function is called by:
  9107 ;;		_main
  9108 ;;		_ringbuf_put
  9109 ;;		_ringbuf_pop
  9110 ;;		_UART_task
  9111 ;;		_USB_task
  9112 ;;		_I2C_LCD_task
  9113 ;;		_ringbuf_backspace
  9114 ;;		_terminal_task
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text43
  9119  0117E6                     __ptext43:
  9120                           	opt stack 0
  9121  0117E6                     _ringbuf_num:
  9122                           	opt stack 18
  9123                           
  9124                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;incstack = 0
  9128  0117E6  0100               	movlb	0	; () banked
  9129  0117E8  EE20 F006          	lfsr	2,6
  9130  0117EC  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9131  0117EE  26D9               	addwf	fsr2l,f,c
  9132  0117F0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9133  0117F2  22DA               	addwfc	fsr2h,f,c
  9134  0117F4  0100               	movlb	0	; () banked
  9135  0117F6  EE10 F004          	lfsr	1,4
  9136  0117FA  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9137  0117FC  26E1               	addwf	fsr1l,f,c
  9138  0117FE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9139  011800  22E2               	addwfc	fsr1h,f,c
  9140  011802  50DE               	movf	postinc2,w,c
  9141  011804  5CE6               	subwf	postinc1,w,c
  9142  011806  50DE               	movf	postinc2,w,c
  9143  011808  58E6               	subwfb	postinc1,w,c
  9144  01180A  A0D8               	btfss	status,0,c
  9145  01180C  D028               	goto	l8358
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  9149  01180E  0100               	movlb	0	; () banked
  9150  011810  EE20 F004          	lfsr	2,4
  9151  011814  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9152  011816  26D9               	addwf	fsr2l,f,c
  9153  011818  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9154  01181A  22DA               	addwfc	fsr2h,f,c
  9155  01181C  CFDE F062          	movff	postinc2,??_ringbuf_num
  9156  011820  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  9157  011824  0100               	movlb	0	; () banked
  9158  011826  EE20 F006          	lfsr	2,6
  9159  01182A  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9160  01182C  26D9               	addwf	fsr2l,f,c
  9161  01182E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9162  011830  22DA               	addwfc	fsr2h,f,c
  9163  011832  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  9164  011836  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  9165  01183A  0100               	movlb	0	; () banked
  9166  01183C  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
  9167  01183E  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
  9168  011840  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  9169  011842  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
  9170  011844  0100               	movlb	0	; () banked
  9171  011846  5162               	movf	??_ringbuf_num& (0+255),w,b
  9172  011848  0100               	movlb	0	; () banked
  9173  01184A  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  9174  01184C  0100               	movlb	0	; () banked
  9175  01184E  6F60               	movwf	?_ringbuf_num& (0+255),b
  9176  011850  0100               	movlb	0	; () banked
  9177  011852  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  9178  011854  0100               	movlb	0	; () banked
  9179  011856  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  9180  011858  0100               	movlb	0	; () banked
  9181  01185A  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;My_ringbuf.c: 15: } else {
  9185                           
  9186                           ; BSR set to: 0
  9187  01185C  0012               	return	
  9188  01185E                     l8358:
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  9192  01185E  0100               	movlb	0	; () banked
  9193  011860  EE20 F004          	lfsr	2,4
  9194  011864  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9195  011866  26D9               	addwf	fsr2l,f,c
  9196  011868  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9197  01186A  22DA               	addwfc	fsr2h,f,c
  9198  01186C  CFDE F062          	movff	postinc2,??_ringbuf_num
  9199  011870  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  9200  011874  0100               	movlb	0	; () banked
  9201  011876  EE20 F002          	lfsr	2,2
  9202  01187A  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9203  01187C  26D9               	addwf	fsr2l,f,c
  9204  01187E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9205  011880  22DA               	addwfc	fsr2h,f,c
  9206  011882  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  9207  011886  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  9208  01188A  0100               	movlb	0	; () banked
  9209  01188C  EE20 F006          	lfsr	2,6
  9210  011890  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9211  011892  26D9               	addwf	fsr2l,f,c
  9212  011894  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9213  011896  22DA               	addwfc	fsr2h,f,c
  9214  011898  CFDE F066          	movff	postinc2,??_ringbuf_num+4
  9215  01189C  CFDD F067          	movff	postdec2,??_ringbuf_num+5
  9216  0118A0  0100               	movlb	0	; () banked
  9217  0118A2  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
  9218  0118A4  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
  9219  0118A6  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  9220  0118A8  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
  9221  0118AA  0100               	movlb	0	; () banked
  9222  0118AC  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
  9223  0118AE  0100               	movlb	0	; () banked
  9224  0118B0  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  9225  0118B2  0100               	movlb	0	; () banked
  9226  0118B4  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
  9227  0118B6  0100               	movlb	0	; () banked
  9228  0118B8  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  9229  0118BA  0100               	movlb	0	; () banked
  9230  0118BC  5162               	movf	??_ringbuf_num& (0+255),w,b
  9231  0118BE  0100               	movlb	0	; () banked
  9232  0118C0  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  9233  0118C2  0100               	movlb	0	; () banked
  9234  0118C4  6F60               	movwf	?_ringbuf_num& (0+255),b
  9235  0118C6  0100               	movlb	0	; () banked
  9236  0118C8  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  9237  0118CA  0100               	movlb	0	; () banked
  9238  0118CC  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  9239  0118CE  0100               	movlb	0	; () banked
  9240  0118D0  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  9241                           
  9242                           ; BSR set to: 0
  9243  0118D2  0012               	return	
  9244  0118D4                     __end_of_ringbuf_num:
  9245                           	opt stack 0
  9246                           tblptru	equ	0xFF8
  9247                           tblptrh	equ	0xFF7
  9248                           tblptrl	equ	0xFF6
  9249                           tablat	equ	0xFF5
  9250                           prodh	equ	0xFF4
  9251                           prodl	equ	0xFF3
  9252                           intcon	equ	0xFF2
  9253                           intcon2	equ	0xFF1
  9254                           indf0	equ	0xFEF
  9255                           postinc0	equ	0xFEE
  9256                           fsr0h	equ	0xFEA
  9257                           fsr0l	equ	0xFE9
  9258                           wreg	equ	0xFE8
  9259                           indf1	equ	0xFE7
  9260                           postinc1	equ	0xFE6
  9261                           postdec1	equ	0xFE5
  9262                           fsr1h	equ	0xFE2
  9263                           fsr1l	equ	0xFE1
  9264                           indf2	equ	0xFDF
  9265                           postinc2	equ	0xFDE
  9266                           postdec2	equ	0xFDD
  9267                           plusw2	equ	0xFDB
  9268                           fsr2h	equ	0xFDA
  9269                           fsr2l	equ	0xFD9
  9270                           status	equ	0xFD8
  9271                           
  9272 ;; *************** function _RTCC_task *****************
  9273 ;; Defined at:
  9274 ;;		line 353 in file "../My_library/My_RTCC.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;		None
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;		None
  9279 ;; Return value:  Size  Location     Type
  9280 ;;		None               void
  9281 ;; Registers used:
  9282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9292 ;;Total ram usage:        0 bytes
  9293 ;; Hardware stack levels used:    1
  9294 ;; Hardware stack levels required when called:   15
  9295 ;; This function calls:
  9296 ;;		_RTCC_from_RTCC
  9297 ;; This function is called by:
  9298 ;;		_main
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text44
  9303  01341E                     __ptext44:
  9304                           	opt stack 0
  9305  01341E                     _RTCC_task:
  9306                           	opt stack 15
  9307                           
  9308                           ;My_RTCC.c: 354: static uint8_t prev_halfsec;
  9309                           ;My_RTCC.c: 355: if (RTCCFGbits.RTCSYNC)return;
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;incstack = 0
  9313  01341E  010F               	movlb	15	; () banked
  9314  013420  B93F               	btfsc	63,4,b	;volatile
  9315  013422  0012               	return	
  9316                           
  9317                           ; BSR set to: 15
  9318                           ;My_RTCC.c: 356: now.halfsec = RTCCFGbits.HALFSEC;
  9319                           
  9320                           ; BSR set to: 15
  9321                           
  9322                           ; BSR set to: 15
  9323  013424  0E00               	movlw	0
  9324  013426  B73F               	btfsc	63,3,b	;volatile
  9325  013428  0E01               	movlw	1
  9326  01342A  0101               	movlb	1	; () banked
  9327  01342C  6FC2               	movwf	(_now+12)& (0+255),b
  9328                           
  9329                           ; BSR set to: 1
  9330                           ;My_RTCC.c: 357: if (prev_halfsec != now.halfsec) {
  9331  01342E  0100               	movlb	0	; () banked
  9332  013430  51B8               	movf	RTCC_task@prev_halfsec& (0+255),w,b
  9333  013432  0101               	movlb	1	; () banked
  9334  013434  19C2               	xorwf	(_now+12)& (0+255),w,b
  9335  013436  B4D8               	btfsc	status,2,c
  9336  013438  0012               	return	
  9337                           
  9338                           ; BSR set to: 1
  9339                           ;My_RTCC.c: 358: prev_halfsec = now.halfsec;
  9340  01343A  C1C2  F0B8         	movff	_now+12,RTCC_task@prev_halfsec
  9341                           
  9342                           ;My_RTCC.c: 359: now.colon = now.halfsec;
  9343  01343E  C1C2  F1C1         	movff	_now+12,_now+11
  9344                           
  9345                           ; BSR set to: 1
  9346                           ;My_RTCC.c: 360: time_change_flag = 1;
  9347  013442  0E01               	movlw	1
  9348  013444  0100               	movlb	0	; () banked
  9349  013446  6FC1               	movwf	_time_change_flag& (0+255),b
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;My_RTCC.c: 361: RTCC_from_RTCC(&now);
  9353  013448  0EB6               	movlw	low _now
  9354  01344A  0100               	movlb	0	; () banked
  9355  01344C  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  9356  01344E  0E01               	movlw	high _now
  9357  013450  0100               	movlb	0	; () banked
  9358  013452  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  9359  013454  EC5A  F09C         	call	_RTCC_from_RTCC	;wreg free
  9360  013458  0012               	return	
  9361  01345A                     __end_of_RTCC_task:
  9362                           	opt stack 0
  9363                           tblptru	equ	0xFF8
  9364                           tblptrh	equ	0xFF7
  9365                           tblptrl	equ	0xFF6
  9366                           tablat	equ	0xFF5
  9367                           prodh	equ	0xFF4
  9368                           prodl	equ	0xFF3
  9369                           intcon	equ	0xFF2
  9370                           intcon2	equ	0xFF1
  9371                           indf0	equ	0xFEF
  9372                           postinc0	equ	0xFEE
  9373                           fsr0h	equ	0xFEA
  9374                           fsr0l	equ	0xFE9
  9375                           wreg	equ	0xFE8
  9376                           indf1	equ	0xFE7
  9377                           postinc1	equ	0xFE6
  9378                           postdec1	equ	0xFE5
  9379                           fsr1h	equ	0xFE2
  9380                           fsr1l	equ	0xFE1
  9381                           indf2	equ	0xFDF
  9382                           postinc2	equ	0xFDE
  9383                           postdec2	equ	0xFDD
  9384                           plusw2	equ	0xFDB
  9385                           fsr2h	equ	0xFDA
  9386                           fsr2l	equ	0xFD9
  9387                           status	equ	0xFD8
  9388                           
  9389 ;; *************** function _RTCC_from_RTCC *****************
  9390 ;; Defined at:
  9391 ;;		line 200 in file "../My_library/My_RTCC.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;  tm              2   38[BANK0 ] PTR struct .
  9394 ;;		 -> now(14), 
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;		None               void
  9399 ;; Registers used:
  9400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9409 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9410 ;;Total ram usage:        2 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; Hardware stack levels required when called:   14
  9413 ;; This function calls:
  9414 ;;		_RTCC_to_caltime
  9415 ;;		_caltime_to_epoch
  9416 ;; This function is called by:
  9417 ;;		_main
  9418 ;;		_RTCC_init
  9419 ;;		_display_time_0802
  9420 ;;		_RTCC_task
  9421 ;;		_display_time_1602
  9422 ;;		_RTCC_adjust_time_inc
  9423 ;;		_RTCC_adjust_time_dec
  9424 ;;		_print_time
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text45
  9429  0138B4                     __ptext45:
  9430                           	opt stack 0
  9431  0138B4                     _RTCC_from_RTCC:
  9432                           	opt stack 14
  9433                           
  9434                           ;My_RTCC.c: 201: RTCC_to_caltime(tm);
  9435                           
  9436                           ;incstack = 0
  9437  0138B4  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
  9438  0138B8  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
  9439  0138BC  ECAE  F093         	call	_RTCC_to_caltime	;wreg free
  9440                           
  9441                           ;My_RTCC.c: 202: caltime_to_epoch(tm);
  9442  0138C0  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
  9443  0138C4  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
  9444  0138C8  EC2D  F082         	call	_caltime_to_epoch	;wreg free
  9445  0138CC  0012               	return		;funcret
  9446  0138CE                     __end_of_RTCC_from_RTCC:
  9447                           	opt stack 0
  9448                           tblptru	equ	0xFF8
  9449                           tblptrh	equ	0xFF7
  9450                           tblptrl	equ	0xFF6
  9451                           tablat	equ	0xFF5
  9452                           prodh	equ	0xFF4
  9453                           prodl	equ	0xFF3
  9454                           intcon	equ	0xFF2
  9455                           intcon2	equ	0xFF1
  9456                           indf0	equ	0xFEF
  9457                           postinc0	equ	0xFEE
  9458                           fsr0h	equ	0xFEA
  9459                           fsr0l	equ	0xFE9
  9460                           wreg	equ	0xFE8
  9461                           indf1	equ	0xFE7
  9462                           postinc1	equ	0xFE6
  9463                           postdec1	equ	0xFE5
  9464                           fsr1h	equ	0xFE2
  9465                           fsr1l	equ	0xFE1
  9466                           indf2	equ	0xFDF
  9467                           postinc2	equ	0xFDE
  9468                           postdec2	equ	0xFDD
  9469                           plusw2	equ	0xFDB
  9470                           fsr2h	equ	0xFDA
  9471                           fsr2l	equ	0xFD9
  9472                           status	equ	0xFD8
  9473                           
  9474 ;; *************** function _caltime_to_epoch *****************
  9475 ;; Defined at:
  9476 ;;		line 180 in file "../My_library/My_RTCC.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  tm              2   25[BANK0 ] PTR struct .
  9479 ;;		 -> now(14), 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  month           1   37[BANK0 ] unsigned char 
  9482 ;;  month           1   32[BANK0 ] unsigned char 
  9483 ;;  year            1   31[BANK0 ] unsigned char 
  9484 ;;  epoch           4   33[BANK0 ] unsigned long 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;		None               void
  9487 ;; Registers used:
  9488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9494 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9495 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9496 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9497 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9498 ;;Total ram usage:       13 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:   13
  9501 ;; This function calls:
  9502 ;;		___lmul
  9503 ;;		_month_length
  9504 ;; This function is called by:
  9505 ;;		_RTCC_from_RTCC
  9506 ;;		_RTCC_from_caltime
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           	psect	text46
  9511  01045A                     __ptext46:
  9512                           	opt stack 0
  9513  01045A                     _caltime_to_epoch:
  9514                           	opt stack 14
  9515                           
  9516                           ;My_RTCC.c: 181: epoch_t epoch = 0;
  9517                           
  9518                           ;incstack = 0
  9519  01045A  0E00               	movlw	0
  9520  01045C  0100               	movlb	0	; () banked
  9521  01045E  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
  9522  010460  0E00               	movlw	0
  9523  010462  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  9524  010464  0E00               	movlw	0
  9525  010466  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  9526  010468  0E00               	movlw	0
  9527  01046A  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  9528                           
  9529                           ;My_RTCC.c: 182: for (uint8_t year = 0; year < tm->YY; year++) {
  9530  01046C  0E00               	movlw	0
  9531  01046E  0100               	movlb	0	; () banked
  9532  010470  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
  9533  010472  D037               	goto	l8220
  9534  010474                     l8206:
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;My_RTCC.c: 183: for (uint8_t month = 1; month <= 12; month++) {
  9538  010474  0E01               	movlw	1
  9539  010476  0100               	movlb	0	; () banked
  9540  010478  6F85               	movwf	caltime_to_epoch@month& (0+255),b
  9541  01047A                     l8208:
  9542                           
  9543                           ; BSR set to: 0
  9544  01047A  0E0C               	movlw	12
  9545  01047C  0100               	movlb	0	; () banked
  9546  01047E  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
  9547  010480  D001               	goto	l8212
  9548  010482  D02D               	goto	l8218
  9549  010484                     l8212:
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  9553  010484  C085  F066         	movff	caltime_to_epoch@month,month_length@month
  9554  010488  0100               	movlb	0	; () banked
  9555  01048A  517F               	movf	caltime_to_epoch@year& (0+255),w,b
  9556  01048C  EC50  F08D         	call	_month_length
  9557  010490  0100               	movlb	0	; () banked
  9558  010492  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9559  010494  0100               	movlb	0	; () banked
  9560  010496  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9561  010498  0100               	movlb	0	; () banked
  9562  01049A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9563  01049C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9564  01049E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9565  0104A0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9566  0104A2  0E80               	movlw	128
  9567  0104A4  0100               	movlb	0	; () banked
  9568  0104A6  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9569  0104A8  0E51               	movlw	81
  9570  0104AA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9571  0104AC  0E01               	movlw	1
  9572  0104AE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9573  0104B0  0E00               	movlw	0
  9574  0104B2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9575  0104B4  ECE2  F097         	call	___lmul	;wreg free
  9576  0104B8  0100               	movlb	0	; () banked
  9577  0104BA  516D               	movf	?___lmul& (0+255),w,b
  9578  0104BC  0100               	movlb	0	; () banked
  9579  0104BE  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9580  0104C0  0100               	movlb	0	; () banked
  9581  0104C2  516E               	movf	(?___lmul+1)& (0+255),w,b
  9582  0104C4  0100               	movlb	0	; () banked
  9583  0104C6  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9584  0104C8  0100               	movlb	0	; () banked
  9585  0104CA  516F               	movf	(?___lmul+2)& (0+255),w,b
  9586  0104CC  0100               	movlb	0	; () banked
  9587  0104CE  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9588  0104D0  0100               	movlb	0	; () banked
  9589  0104D2  5170               	movf	(?___lmul+3)& (0+255),w,b
  9590  0104D4  0100               	movlb	0	; () banked
  9591  0104D6  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9592                           
  9593                           ; BSR set to: 0
  9594  0104D8  0100               	movlb	0	; () banked
  9595  0104DA  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
  9596  0104DC  D7CE               	goto	l8208
  9597  0104DE                     l8218:
  9598                           
  9599                           ; BSR set to: 0
  9600  0104DE  0100               	movlb	0	; () banked
  9601  0104E0  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
  9602  0104E2                     l8220:
  9603                           
  9604                           ; BSR set to: 0
  9605  0104E2  0100               	movlb	0	; () banked
  9606  0104E4  EE20 F00A          	lfsr	2,10
  9607  0104E8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9608  0104EA  26D9               	addwf	fsr2l,f,c
  9609  0104EC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9610  0104EE  22DA               	addwfc	fsr2h,f,c
  9611  0104F0  50DE               	movf	postinc2,w,c
  9612  0104F2  0100               	movlb	0	; () banked
  9613  0104F4  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
  9614  0104F6  A0D8               	btfss	status,0,c
  9615  0104F8  D7BD               	goto	l8206
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;My_RTCC.c: 185: }
  9619                           ;My_RTCC.c: 186: }
  9620                           ;My_RTCC.c: 187: for (uint8_t month = 1; month < tm->MM; month++) {
  9621                           
  9622                           ; BSR set to: 0
  9623  0104FA  0E01               	movlw	1
  9624  0104FC  0100               	movlb	0	; () banked
  9625  0104FE  6F80               	movwf	caltime_to_epoch@month_2357& (0+255),b
  9626  010500  D032               	goto	l8228
  9627  010502                     l8224:
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;My_RTCC.c: 188: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
  9631  010502  C080  F066         	movff	caltime_to_epoch@month_2357,month_length@month
  9632  010506  0100               	movlb	0	; () banked
  9633  010508  EE20 F00A          	lfsr	2,10
  9634  01050C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9635  01050E  26D9               	addwf	fsr2l,f,c
  9636  010510  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9637  010512  22DA               	addwfc	fsr2h,f,c
  9638  010514  50DF               	movf	indf2,w,c
  9639  010516  EC50  F08D         	call	_month_length
  9640  01051A  0100               	movlb	0	; () banked
  9641  01051C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9642  01051E  0100               	movlb	0	; () banked
  9643  010520  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9644  010522  0100               	movlb	0	; () banked
  9645  010524  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9646  010526  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9647  010528  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9648  01052A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9649  01052C  0E80               	movlw	128
  9650  01052E  0100               	movlb	0	; () banked
  9651  010530  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9652  010532  0E51               	movlw	81
  9653  010534  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9654  010536  0E01               	movlw	1
  9655  010538  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9656  01053A  0E00               	movlw	0
  9657  01053C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9658  01053E  ECE2  F097         	call	___lmul	;wreg free
  9659  010542  0100               	movlb	0	; () banked
  9660  010544  516D               	movf	?___lmul& (0+255),w,b
  9661  010546  0100               	movlb	0	; () banked
  9662  010548  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9663  01054A  0100               	movlb	0	; () banked
  9664  01054C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9665  01054E  0100               	movlb	0	; () banked
  9666  010550  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9667  010552  0100               	movlb	0	; () banked
  9668  010554  516F               	movf	(?___lmul+2)& (0+255),w,b
  9669  010556  0100               	movlb	0	; () banked
  9670  010558  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9671  01055A  0100               	movlb	0	; () banked
  9672  01055C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9673  01055E  0100               	movlb	0	; () banked
  9674  010560  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9675                           
  9676                           ; BSR set to: 0
  9677  010562  0100               	movlb	0	; () banked
  9678  010564  2B80               	incf	caltime_to_epoch@month_2357& (0+255),f,b
  9679  010566                     l8228:
  9680                           
  9681                           ; BSR set to: 0
  9682  010566  0100               	movlb	0	; () banked
  9683  010568  EE20 F009          	lfsr	2,9
  9684  01056C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9685  01056E  26D9               	addwf	fsr2l,f,c
  9686  010570  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9687  010572  22DA               	addwfc	fsr2h,f,c
  9688  010574  50DE               	movf	postinc2,w,c
  9689  010576  0100               	movlb	0	; () banked
  9690  010578  5D80               	subwf	caltime_to_epoch@month_2357& (0+255),w,b
  9691  01057A  A0D8               	btfss	status,0,c
  9692  01057C  D7C2               	goto	l8224
  9693                           
  9694                           ; BSR set to: 0
  9695                           ;My_RTCC.c: 189: }
  9696                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
  9697                           
  9698                           ; BSR set to: 0
  9699  01057E  0EFF               	movlw	255
  9700  010580  0100               	movlb	0	; () banked
  9701  010582  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9702  010584  0EFF               	movlw	255
  9703  010586  0100               	movlb	0	; () banked
  9704  010588  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  9705  01058A  0100               	movlb	0	; () banked
  9706  01058C  EE20 F008          	lfsr	2,8
  9707  010590  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9708  010592  26D9               	addwf	fsr2l,f,c
  9709  010594  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9710  010596  22DA               	addwfc	fsr2h,f,c
  9711  010598  50DF               	movf	indf2,w,c
  9712  01059A  0100               	movlb	0	; () banked
  9713  01059C  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  9714  01059E  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  9715  0105A0  0100               	movlb	0	; () banked
  9716  0105A2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9717  0105A4  0100               	movlb	0	; () banked
  9718  0105A6  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  9719  0105A8  0100               	movlb	0	; () banked
  9720  0105AA  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  9721  0105AC  0100               	movlb	0	; () banked
  9722  0105AE  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  9723  0105B0  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  9724  0105B4  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  9725  0105B8  0100               	movlb	0	; () banked
  9726  0105BA  0E00               	movlw	0
  9727  0105BC  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  9728  0105BE  0EFF               	movlw	-1
  9729  0105C0  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  9730  0105C2  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  9731  0105C4  0E80               	movlw	128
  9732  0105C6  0100               	movlb	0	; () banked
  9733  0105C8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9734  0105CA  0E51               	movlw	81
  9735  0105CC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9736  0105CE  0E01               	movlw	1
  9737  0105D0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9738  0105D2  0E00               	movlw	0
  9739  0105D4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9740  0105D6  ECE2  F097         	call	___lmul	;wreg free
  9741  0105DA  0100               	movlb	0	; () banked
  9742  0105DC  516D               	movf	?___lmul& (0+255),w,b
  9743  0105DE  0100               	movlb	0	; () banked
  9744  0105E0  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9745  0105E2  0100               	movlb	0	; () banked
  9746  0105E4  516E               	movf	(?___lmul+1)& (0+255),w,b
  9747  0105E6  0100               	movlb	0	; () banked
  9748  0105E8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9749  0105EA  0100               	movlb	0	; () banked
  9750  0105EC  516F               	movf	(?___lmul+2)& (0+255),w,b
  9751  0105EE  0100               	movlb	0	; () banked
  9752  0105F0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9753  0105F2  0100               	movlb	0	; () banked
  9754  0105F4  5170               	movf	(?___lmul+3)& (0+255),w,b
  9755  0105F6  0100               	movlb	0	; () banked
  9756  0105F8  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9757                           
  9758                           ;My_RTCC.c: 191: epoch += ((epoch_t)60*60) * tm->hh;
  9759  0105FA  0100               	movlb	0	; () banked
  9760  0105FC  EE20 F006          	lfsr	2,6
  9761  010600  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9762  010602  26D9               	addwf	fsr2l,f,c
  9763  010604  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9764  010606  22DA               	addwfc	fsr2h,f,c
  9765  010608  50DF               	movf	indf2,w,c
  9766  01060A  0100               	movlb	0	; () banked
  9767  01060C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9768  01060E  0100               	movlb	0	; () banked
  9769  010610  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9770  010612  0100               	movlb	0	; () banked
  9771  010614  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9772  010616  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9773  010618  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9774  01061A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9775  01061C  0E10               	movlw	16
  9776  01061E  0100               	movlb	0	; () banked
  9777  010620  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9778  010622  0E0E               	movlw	14
  9779  010624  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9780  010626  0E00               	movlw	0
  9781  010628  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9782  01062A  0E00               	movlw	0
  9783  01062C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9784  01062E  ECE2  F097         	call	___lmul	;wreg free
  9785  010632  0100               	movlb	0	; () banked
  9786  010634  516D               	movf	?___lmul& (0+255),w,b
  9787  010636  0100               	movlb	0	; () banked
  9788  010638  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9789  01063A  0100               	movlb	0	; () banked
  9790  01063C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9791  01063E  0100               	movlb	0	; () banked
  9792  010640  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9793  010642  0100               	movlb	0	; () banked
  9794  010644  516F               	movf	(?___lmul+2)& (0+255),w,b
  9795  010646  0100               	movlb	0	; () banked
  9796  010648  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9797  01064A  0100               	movlb	0	; () banked
  9798  01064C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9799  01064E  0100               	movlb	0	; () banked
  9800  010650  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9801                           
  9802                           ;My_RTCC.c: 192: epoch += ((epoch_t)60) * tm->mm;
  9803  010652  0100               	movlb	0	; () banked
  9804  010654  EE20 F005          	lfsr	2,5
  9805  010658  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9806  01065A  26D9               	addwf	fsr2l,f,c
  9807  01065C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9808  01065E  22DA               	addwfc	fsr2h,f,c
  9809  010660  50DF               	movf	indf2,w,c
  9810  010662  0100               	movlb	0	; () banked
  9811  010664  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9812  010666  0100               	movlb	0	; () banked
  9813  010668  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9814  01066A  0100               	movlb	0	; () banked
  9815  01066C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9816  01066E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9817  010670  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9818  010672  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9819  010674  0E3C               	movlw	60
  9820  010676  0100               	movlb	0	; () banked
  9821  010678  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9822  01067A  0E00               	movlw	0
  9823  01067C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9824  01067E  0E00               	movlw	0
  9825  010680  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9826  010682  0E00               	movlw	0
  9827  010684  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9828  010686  ECE2  F097         	call	___lmul	;wreg free
  9829  01068A  0100               	movlb	0	; () banked
  9830  01068C  516D               	movf	?___lmul& (0+255),w,b
  9831  01068E  0100               	movlb	0	; () banked
  9832  010690  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9833  010692  0100               	movlb	0	; () banked
  9834  010694  516E               	movf	(?___lmul+1)& (0+255),w,b
  9835  010696  0100               	movlb	0	; () banked
  9836  010698  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9837  01069A  0100               	movlb	0	; () banked
  9838  01069C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9839  01069E  0100               	movlb	0	; () banked
  9840  0106A0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9841  0106A2  0100               	movlb	0	; () banked
  9842  0106A4  5170               	movf	(?___lmul+3)& (0+255),w,b
  9843  0106A6  0100               	movlb	0	; () banked
  9844  0106A8  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;My_RTCC.c: 193: epoch += tm->ss;
  9848  0106AA  0100               	movlb	0	; () banked
  9849  0106AC  EE20 F004          	lfsr	2,4
  9850  0106B0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
  9851  0106B2  26D9               	addwf	fsr2l,f,c
  9852  0106B4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
  9853  0106B6  22DA               	addwfc	fsr2h,f,c
  9854  0106B8  50DF               	movf	indf2,w,c
  9855  0106BA  0100               	movlb	0	; () banked
  9856  0106BC  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
  9857  0106BE  0100               	movlb	0	; () banked
  9858  0106C0  517B               	movf	??_caltime_to_epoch& (0+255),w,b
  9859  0106C2  0100               	movlb	0	; () banked
  9860  0106C4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  9861  0106C6  0E00               	movlw	0
  9862  0106C8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  9863  0106CA  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  9864  0106CC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;My_RTCC.c: 195: tm->epoch = epoch;
  9868  0106CE  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
  9869  0106D2  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
  9870  0106D6  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  9871  0106DA  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  9872  0106DE  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  9873  0106E2  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  9874                           
  9875                           ; BSR set to: 0
  9876  0106E6  0012               	return		;funcret
  9877  0106E8                     __end_of_caltime_to_epoch:
  9878                           	opt stack 0
  9879                           tblptru	equ	0xFF8
  9880                           tblptrh	equ	0xFF7
  9881                           tblptrl	equ	0xFF6
  9882                           tablat	equ	0xFF5
  9883                           prodh	equ	0xFF4
  9884                           prodl	equ	0xFF3
  9885                           intcon	equ	0xFF2
  9886                           intcon2	equ	0xFF1
  9887                           indf0	equ	0xFEF
  9888                           postinc0	equ	0xFEE
  9889                           fsr0h	equ	0xFEA
  9890                           fsr0l	equ	0xFE9
  9891                           wreg	equ	0xFE8
  9892                           indf1	equ	0xFE7
  9893                           postinc1	equ	0xFE6
  9894                           postdec1	equ	0xFE5
  9895                           fsr1h	equ	0xFE2
  9896                           fsr1l	equ	0xFE1
  9897                           indf2	equ	0xFDF
  9898                           postinc2	equ	0xFDE
  9899                           postdec2	equ	0xFDD
  9900                           plusw2	equ	0xFDB
  9901                           fsr2h	equ	0xFDA
  9902                           fsr2l	equ	0xFD9
  9903                           status	equ	0xFD8
  9904                           
  9905 ;; *************** function _month_length *****************
  9906 ;; Defined at:
  9907 ;;		line 56 in file "../My_library/My_RTCC.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  year            1    wreg     unsigned char 
  9910 ;;  month           1    6[BANK0 ] unsigned char 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  year            1   11[BANK0 ] unsigned char 
  9913 ;; Return value:  Size  Location     Type
  9914 ;;                  1    wreg      unsigned char 
  9915 ;; Registers used:
  9916 ;;		wreg, status,2, status,0, cstack
  9917 ;; Tracked objects:
  9918 ;;		On entry : 0/0
  9919 ;;		On exit  : 0/0
  9920 ;;		Unchanged: 0/0
  9921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9922 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9924 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9925 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9926 ;;Total ram usage:        6 bytes
  9927 ;; Hardware stack levels used:    1
  9928 ;; Hardware stack levels required when called:   12
  9929 ;; This function calls:
  9930 ;;		___awmod
  9931 ;; This function is called by:
  9932 ;;		_epoch_to_caltime
  9933 ;;		_caltime_to_epoch
  9934 ;;		_RTCC_adjust_time_inc
  9935 ;;		_RTCC_adjust_time_dec
  9936 ;;		_terminal_time
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           	psect	text47
  9941  011AA0                     __ptext47:
  9942                           	opt stack 0
  9943  011AA0                     _month_length:
  9944                           	opt stack 14
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;incstack = 0
  9948                           ;month_length@year stored from wreg
  9949  011AA0  0100               	movlb	0	; () banked
  9950  011AA2  6F6B               	movwf	month_length@year& (0+255),b
  9951                           
  9952                           ;My_RTCC.c: 57: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
  9953  011AA4  0E02               	movlw	2
  9954  011AA6  0100               	movlb	0	; () banked
  9955  011AA8  1966               	xorwf	month_length@month& (0+255),w,b
  9956  011AAA  A4D8               	btfss	status,2,c
  9957  011AAC  D03E               	goto	l8108
  9958                           
  9959                           ; BSR set to: 0
  9960  011AAE  C06B  F060         	movff	month_length@year,___awmod@dividend
  9961  011AB2  0100               	movlb	0	; () banked
  9962  011AB4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9963  011AB6  0E00               	movlw	0
  9964  011AB8  0100               	movlb	0	; () banked
  9965  011ABA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9966  011ABC  0E64               	movlw	100
  9967  011ABE  6F62               	movwf	___awmod@divisor& (0+255),b
  9968  011AC0  EC67  F095         	call	___awmod	;wreg free
  9969  011AC4  0100               	movlb	0	; () banked
  9970  011AC6  5160               	movf	?___awmod& (0+255),w,b
  9971  011AC8  0100               	movlb	0	; () banked
  9972  011ACA  1161               	iorwf	(?___awmod+1)& (0+255),w,b
  9973  011ACC  A4D8               	btfss	status,2,c
  9974  011ACE  D002               	goto	u7770
  9975  011AD0  0E01               	movlw	1
  9976  011AD2  D001               	goto	u7780
  9977  011AD4                     u7770:
  9978  011AD4  0E00               	movlw	0
  9979  011AD6                     u7780:
  9980  011AD6  0800               	sublw	0
  9981  011AD8  0100               	movlb	0	; () banked
  9982  011ADA  6F67               	movwf	??_month_length& (0+255),b
  9983  011ADC  C06B  F060         	movff	month_length@year,___awmod@dividend
  9984  011AE0  0100               	movlb	0	; () banked
  9985  011AE2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  9986  011AE4  0E01               	movlw	1
  9987  011AE6  0100               	movlb	0	; () banked
  9988  011AE8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9989  011AEA  0E90               	movlw	144
  9990  011AEC  6F62               	movwf	___awmod@divisor& (0+255),b
  9991  011AEE  EC67  F095         	call	___awmod	;wreg free
  9992  011AF2  0100               	movlb	0	; () banked
  9993  011AF4  5160               	movf	?___awmod& (0+255),w,b
  9994  011AF6  0100               	movlb	0	; () banked
  9995  011AF8  1161               	iorwf	(?___awmod+1)& (0+255),w,b
  9996  011AFA  A4D8               	btfss	status,2,c
  9997  011AFC  D004               	goto	u7790
  9998  011AFE  0100               	movlb	0	; () banked
  9999  011B00  6B68               	clrf	(??_month_length+1)& (0+255),b
 10000  011B02  2B68               	incf	(??_month_length+1)& (0+255),f,b
 10001  011B04  D002               	goto	u7808
 10002  011B06                     u7790:
 10003  011B06  0100               	movlb	0	; () banked
 10004  011B08  6B68               	clrf	(??_month_length+1)& (0+255),b
 10005  011B0A                     u7808:
 10006  011B0A  C06B  F069         	movff	month_length@year,??_month_length+2
 10007  011B0E  0E03               	movlw	3
 10008  011B10  0100               	movlb	0	; () banked
 10009  011B12  1769               	andwf	(??_month_length+2)& (0+255),f,b
 10010  011B14  A4D8               	btfss	status,2,c
 10011  011B16  D002               	goto	u7810
 10012  011B18  0E01               	movlw	1
 10013  011B1A  D001               	goto	u7820
 10014  011B1C                     u7810:
 10015  011B1C  0E00               	movlw	0
 10016  011B1E                     u7820:
 10017  011B1E  0100               	movlb	0	; () banked
 10018  011B20  2568               	addwf	(??_month_length+1)& (0+255),w,b
 10019  011B22  0100               	movlb	0	; () banked
 10020  011B24  2567               	addwf	??_month_length& (0+255),w,b
 10021  011B26  0F1C               	addlw	28
 10022                           
 10023                           ; BSR set to: 0
 10024                           
 10025                           ; BSR set to: 0
 10026  011B28  0012               	return	
 10027  011B2A                     l8108:
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;My_RTCC.c: 58: else return 31 - (((-(month & 1)^month)&13) == 4);
 10031  011B2A  0100               	movlb	0	; () banked
 10032  011B2C  5166               	movf	month_length@month& (0+255),w,b
 10033  011B2E  0B01               	andlw	1
 10034  011B30  0100               	movlb	0	; () banked
 10035  011B32  6F67               	movwf	??_month_length& (0+255),b
 10036  011B34  6B68               	clrf	(??_month_length+1)& (0+255),b
 10037  011B36  0100               	movlb	0	; () banked
 10038  011B38  1F67               	comf	??_month_length& (0+255),f,b
 10039  011B3A  1F68               	comf	(??_month_length+1)& (0+255),f,b
 10040  011B3C  4B67               	infsnz	??_month_length& (0+255),f,b
 10041  011B3E  2B68               	incf	(??_month_length+1)& (0+255),f,b
 10042  011B40  0100               	movlb	0	; () banked
 10043  011B42  5166               	movf	month_length@month& (0+255),w,b
 10044  011B44  0100               	movlb	0	; () banked
 10045  011B46  6F69               	movwf	(??_month_length+2)& (0+255),b
 10046  011B48  6B6A               	clrf	(??_month_length+3)& (0+255),b
 10047  011B4A  0100               	movlb	0	; () banked
 10048  011B4C  5167               	movf	??_month_length& (0+255),w,b
 10049  011B4E  0100               	movlb	0	; () banked
 10050  011B50  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 10051  011B52  0100               	movlb	0	; () banked
 10052  011B54  5168               	movf	(??_month_length+1)& (0+255),w,b
 10053  011B56  0100               	movlb	0	; () banked
 10054  011B58  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 10055  011B5A  0E0D               	movlw	13
 10056  011B5C  0100               	movlb	0	; () banked
 10057  011B5E  1769               	andwf	(??_month_length+2)& (0+255),f,b
 10058  011B60  0E00               	movlw	0
 10059  011B62  176A               	andwf	(??_month_length+3)& (0+255),f,b
 10060  011B64  0E04               	movlw	4
 10061  011B66  0100               	movlb	0	; () banked
 10062  011B68  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 10063  011B6A  0100               	movlb	0	; () banked
 10064  011B6C  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 10065  011B6E  A4D8               	btfss	status,2,c
 10066  011B70  D002               	goto	u7830
 10067  011B72  0E01               	movlw	1
 10068  011B74  D001               	goto	u7840
 10069  011B76                     u7830:
 10070  011B76  0E00               	movlw	0
 10071  011B78                     u7840:
 10072  011B78  0800               	sublw	0
 10073  011B7A  0F1F               	addlw	31
 10074                           
 10075                           ; BSR set to: 0
 10076  011B7C  0012               	return	
 10077  011B7E                     __end_of_month_length:
 10078                           	opt stack 0
 10079                           tblptru	equ	0xFF8
 10080                           tblptrh	equ	0xFF7
 10081                           tblptrl	equ	0xFF6
 10082                           tablat	equ	0xFF5
 10083                           prodh	equ	0xFF4
 10084                           prodl	equ	0xFF3
 10085                           intcon	equ	0xFF2
 10086                           intcon2	equ	0xFF1
 10087                           indf0	equ	0xFEF
 10088                           postinc0	equ	0xFEE
 10089                           fsr0h	equ	0xFEA
 10090                           fsr0l	equ	0xFE9
 10091                           wreg	equ	0xFE8
 10092                           indf1	equ	0xFE7
 10093                           postinc1	equ	0xFE6
 10094                           postdec1	equ	0xFE5
 10095                           fsr1h	equ	0xFE2
 10096                           fsr1l	equ	0xFE1
 10097                           indf2	equ	0xFDF
 10098                           postinc2	equ	0xFDE
 10099                           postdec2	equ	0xFDD
 10100                           plusw2	equ	0xFDB
 10101                           fsr2h	equ	0xFDA
 10102                           fsr2l	equ	0xFD9
 10103                           status	equ	0xFD8
 10104                           
 10105 ;; *************** function ___awmod *****************
 10106 ;; Defined at:
 10107 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  dividend        2    0[BANK0 ] int 
 10110 ;;  divisor         2    2[BANK0 ] int 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  sign            1    5[BANK0 ] unsigned char 
 10113 ;;  counter         1    4[BANK0 ] unsigned char 
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  2    0[BANK0 ] int 
 10116 ;; Registers used:
 10117 ;;		wreg, status,2, status,0
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10123 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10124 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10126 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10127 ;;Total ram usage:        6 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; Hardware stack levels required when called:   11
 10130 ;; This function calls:
 10131 ;;		Nothing
 10132 ;; This function is called by:
 10133 ;;		_month_length
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text48
 10138  012ACE                     __ptext48:
 10139                           	opt stack 0
 10140  012ACE                     ___awmod:
 10141                           	opt stack 14
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;incstack = 0
 10145  012ACE  0E00               	movlw	0
 10146  012AD0  0100               	movlb	0	; () banked
 10147  012AD2  6F65               	movwf	___awmod@sign& (0+255),b
 10148                           
 10149                           ; BSR set to: 0
 10150  012AD4  0100               	movlb	0	; () banked
 10151  012AD6  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10152  012AD8  D008               	goto	l8016
 10153                           
 10154                           ; BSR set to: 0
 10155  012ADA  0100               	movlb	0	; () banked
 10156  012ADC  6D60               	negf	___awmod@dividend& (0+255),b
 10157  012ADE  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10158  012AE0  B0D8               	btfsc	status,0,c
 10159  012AE2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10160                           
 10161                           ; BSR set to: 0
 10162  012AE4  0E01               	movlw	1
 10163  012AE6  0100               	movlb	0	; () banked
 10164  012AE8  6F65               	movwf	___awmod@sign& (0+255),b
 10165  012AEA                     l8016:
 10166                           
 10167                           ; BSR set to: 0
 10168  012AEA  0100               	movlb	0	; () banked
 10169  012AEC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10170  012AEE  D005               	goto	l8020
 10171                           
 10172                           ; BSR set to: 0
 10173  012AF0  0100               	movlb	0	; () banked
 10174  012AF2  6D62               	negf	___awmod@divisor& (0+255),b
 10175  012AF4  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 10176  012AF6  B0D8               	btfsc	status,0,c
 10177  012AF8  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 10178  012AFA                     l8020:
 10179                           
 10180                           ; BSR set to: 0
 10181  012AFA  0100               	movlb	0	; () banked
 10182  012AFC  5162               	movf	___awmod@divisor& (0+255),w,b
 10183  012AFE  0100               	movlb	0	; () banked
 10184  012B00  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10185  012B02  B4D8               	btfsc	status,2,c
 10186  012B04  D026               	goto	l8036
 10187                           
 10188                           ; BSR set to: 0
 10189  012B06  0E01               	movlw	1
 10190  012B08  0100               	movlb	0	; () banked
 10191  012B0A  6F64               	movwf	___awmod@counter& (0+255),b
 10192  012B0C  D006               	goto	l8026
 10193  012B0E                     l8024:
 10194                           
 10195                           ; BSR set to: 0
 10196  012B0E  0100               	movlb	0	; () banked
 10197  012B10  90D8               	bcf	status,0,c
 10198  012B12  3762               	rlcf	___awmod@divisor& (0+255),f,b
 10199  012B14  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10200  012B16  0100               	movlb	0	; () banked
 10201  012B18  2B64               	incf	___awmod@counter& (0+255),f,b
 10202  012B1A                     l8026:
 10203                           
 10204                           ; BSR set to: 0
 10205  012B1A  0100               	movlb	0	; () banked
 10206  012B1C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10207  012B1E  D7F7               	goto	l8024
 10208  012B20                     l8028:
 10209                           
 10210                           ; BSR set to: 0
 10211  012B20  0100               	movlb	0	; () banked
 10212  012B22  5162               	movf	___awmod@divisor& (0+255),w,b
 10213  012B24  0100               	movlb	0	; () banked
 10214  012B26  5D60               	subwf	___awmod@dividend& (0+255),w,b
 10215  012B28  0100               	movlb	0	; () banked
 10216  012B2A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 10217  012B2C  0100               	movlb	0	; () banked
 10218  012B2E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10219  012B30  A0D8               	btfss	status,0,c
 10220  012B32  D008               	goto	l8032
 10221                           
 10222                           ; BSR set to: 0
 10223  012B34  0100               	movlb	0	; () banked
 10224  012B36  5162               	movf	___awmod@divisor& (0+255),w,b
 10225  012B38  0100               	movlb	0	; () banked
 10226  012B3A  5F60               	subwf	___awmod@dividend& (0+255),f,b
 10227  012B3C  0100               	movlb	0	; () banked
 10228  012B3E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 10229  012B40  0100               	movlb	0	; () banked
 10230  012B42  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10231  012B44                     l8032:
 10232                           
 10233                           ; BSR set to: 0
 10234  012B44  0100               	movlb	0	; () banked
 10235  012B46  90D8               	bcf	status,0,c
 10236  012B48  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10237  012B4A  3362               	rrcf	___awmod@divisor& (0+255),f,b
 10238                           
 10239                           ; BSR set to: 0
 10240  012B4C  0100               	movlb	0	; () banked
 10241  012B4E  2F64               	decfsz	___awmod@counter& (0+255),f,b
 10242  012B50  D7E7               	goto	l8028
 10243  012B52                     l8036:
 10244                           
 10245                           ; BSR set to: 0
 10246  012B52  0100               	movlb	0	; () banked
 10247  012B54  5165               	movf	___awmod@sign& (0+255),w,b
 10248  012B56  0100               	movlb	0	; () banked
 10249  012B58  B4D8               	btfsc	status,2,c
 10250  012B5A  D005               	goto	l8040
 10251                           
 10252                           ; BSR set to: 0
 10253  012B5C  0100               	movlb	0	; () banked
 10254  012B5E  6D60               	negf	___awmod@dividend& (0+255),b
 10255  012B60  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 10256  012B62  B0D8               	btfsc	status,0,c
 10257  012B64  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 10258  012B66                     l8040:
 10259                           
 10260                           ; BSR set to: 0
 10261  012B66  C060  F060         	movff	___awmod@dividend,?___awmod
 10262  012B6A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 10263  012B6E  0012               	return	
 10264  012B70                     __end_of___awmod:
 10265                           	opt stack 0
 10266                           tblptru	equ	0xFF8
 10267                           tblptrh	equ	0xFF7
 10268                           tblptrl	equ	0xFF6
 10269                           tablat	equ	0xFF5
 10270                           prodh	equ	0xFF4
 10271                           prodl	equ	0xFF3
 10272                           intcon	equ	0xFF2
 10273                           intcon2	equ	0xFF1
 10274                           indf0	equ	0xFEF
 10275                           postinc0	equ	0xFEE
 10276                           fsr0h	equ	0xFEA
 10277                           fsr0l	equ	0xFE9
 10278                           wreg	equ	0xFE8
 10279                           indf1	equ	0xFE7
 10280                           postinc1	equ	0xFE6
 10281                           postdec1	equ	0xFE5
 10282                           fsr1h	equ	0xFE2
 10283                           fsr1l	equ	0xFE1
 10284                           indf2	equ	0xFDF
 10285                           postinc2	equ	0xFDE
 10286                           postdec2	equ	0xFDD
 10287                           plusw2	equ	0xFDB
 10288                           fsr2h	equ	0xFDA
 10289                           fsr2l	equ	0xFD9
 10290                           status	equ	0xFD8
 10291                           
 10292 ;; *************** function ___lmul *****************
 10293 ;; Defined at:
 10294 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;  multiplier      4   13[BANK0 ] unsigned long 
 10297 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;  product         4   21[BANK0 ] unsigned long 
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  4   13[BANK0 ] unsigned long 
 10302 ;; Registers used:
 10303 ;;		wreg, status,2, status,0
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/0
 10306 ;;		On exit  : 0/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10309 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10310 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10312 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10313 ;;Total ram usage:       12 bytes
 10314 ;; Hardware stack levels used:    1
 10315 ;; Hardware stack levels required when called:   11
 10316 ;; This function calls:
 10317 ;;		Nothing
 10318 ;; This function is called by:
 10319 ;;		_get_quot_rem
 10320 ;;		_caltime_to_epoch
 10321 ;;		_RTCC_adjust_time_inc
 10322 ;;		_RTCC_adjust_time_dec
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           	psect	text49
 10327  012FC4                     __ptext49:
 10328                           	opt stack 0
 10329  012FC4                     ___lmul:
 10330                           	opt stack 14
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;incstack = 0
 10334  012FC4  0E00               	movlw	0
 10335  012FC6  0100               	movlb	0	; () banked
 10336  012FC8  6F75               	movwf	___lmul@product& (0+255),b
 10337  012FCA  0E00               	movlw	0
 10338  012FCC  6F76               	movwf	(___lmul@product+1)& (0+255),b
 10339  012FCE  0E00               	movlw	0
 10340  012FD0  6F77               	movwf	(___lmul@product+2)& (0+255),b
 10341  012FD2  0E00               	movlw	0
 10342  012FD4  6F78               	movwf	(___lmul@product+3)& (0+255),b
 10343  012FD6                     l7956:
 10344                           
 10345                           ; BSR set to: 0
 10346  012FD6  0100               	movlb	0	; () banked
 10347  012FD8  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 10348  012FDA  D010               	goto	l7960
 10349                           
 10350                           ; BSR set to: 0
 10351  012FDC  0100               	movlb	0	; () banked
 10352  012FDE  5171               	movf	___lmul@multiplicand& (0+255),w,b
 10353  012FE0  0100               	movlb	0	; () banked
 10354  012FE2  2775               	addwf	___lmul@product& (0+255),f,b
 10355  012FE4  0100               	movlb	0	; () banked
 10356  012FE6  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 10357  012FE8  0100               	movlb	0	; () banked
 10358  012FEA  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 10359  012FEC  0100               	movlb	0	; () banked
 10360  012FEE  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 10361  012FF0  0100               	movlb	0	; () banked
 10362  012FF2  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 10363  012FF4  0100               	movlb	0	; () banked
 10364  012FF6  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 10365  012FF8  0100               	movlb	0	; () banked
 10366  012FFA  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 10367  012FFC                     l7960:
 10368                           
 10369                           ; BSR set to: 0
 10370  012FFC  0100               	movlb	0	; () banked
 10371  012FFE  90D8               	bcf	status,0,c
 10372  013000  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 10373  013002  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 10374  013004  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 10375  013006  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 10376                           
 10377                           ; BSR set to: 0
 10378  013008  0100               	movlb	0	; () banked
 10379  01300A  90D8               	bcf	status,0,c
 10380  01300C  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 10381  01300E  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 10382  013010  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 10383  013012  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 10384  013014  0100               	movlb	0	; () banked
 10385  013016  516D               	movf	___lmul@multiplier& (0+255),w,b
 10386  013018  0100               	movlb	0	; () banked
 10387  01301A  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 10388  01301C  0100               	movlb	0	; () banked
 10389  01301E  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 10390  013020  0100               	movlb	0	; () banked
 10391  013022  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 10392  013024  A4D8               	btfss	status,2,c
 10393  013026  D7D7               	goto	l7956
 10394                           
 10395                           ; BSR set to: 0
 10396  013028  C075  F06D         	movff	___lmul@product,?___lmul
 10397  01302C  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 10398  013030  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 10399  013034  C078  F070         	movff	___lmul@product+3,?___lmul+3
 10400                           
 10401                           ; BSR set to: 0
 10402  013038  0012               	return		;funcret
 10403  01303A                     __end_of___lmul:
 10404                           	opt stack 0
 10405                           tblptru	equ	0xFF8
 10406                           tblptrh	equ	0xFF7
 10407                           tblptrl	equ	0xFF6
 10408                           tablat	equ	0xFF5
 10409                           prodh	equ	0xFF4
 10410                           prodl	equ	0xFF3
 10411                           intcon	equ	0xFF2
 10412                           intcon2	equ	0xFF1
 10413                           indf0	equ	0xFEF
 10414                           postinc0	equ	0xFEE
 10415                           fsr0h	equ	0xFEA
 10416                           fsr0l	equ	0xFE9
 10417                           wreg	equ	0xFE8
 10418                           indf1	equ	0xFE7
 10419                           postinc1	equ	0xFE6
 10420                           postdec1	equ	0xFE5
 10421                           fsr1h	equ	0xFE2
 10422                           fsr1l	equ	0xFE1
 10423                           indf2	equ	0xFDF
 10424                           postinc2	equ	0xFDE
 10425                           postdec2	equ	0xFDD
 10426                           plusw2	equ	0xFDB
 10427                           fsr2h	equ	0xFDA
 10428                           fsr2l	equ	0xFD9
 10429                           status	equ	0xFD8
 10430                           
 10431 ;; *************** function _RTCC_to_caltime *****************
 10432 ;; Defined at:
 10433 ;;		line 90 in file "../My_library/My_RTCC.c"
 10434 ;; Parameters:    Size  Location     Type
 10435 ;;  tm              2    2[BANK0 ] PTR struct .
 10436 ;;		 -> now(14), 
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;  dumy            1    4[BANK0 ] unsigned char 
 10439 ;; Return value:  Size  Location     Type
 10440 ;;		None               void
 10441 ;; Registers used:
 10442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10451 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10452 ;;Total ram usage:        3 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:   12
 10455 ;; This function calls:
 10456 ;;		_x_to_d
 10457 ;; This function is called by:
 10458 ;;		_RTCC_from_RTCC
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text50
 10463  01275C                     __ptext50:
 10464                           	opt stack 0
 10465  01275C                     _RTCC_to_caltime:
 10466                           	opt stack 15
 10467                           
 10468                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR0 = 1;
 10469                           
 10470                           ; BSR set to: 0
 10471                           ;incstack = 0
 10472  01275C  010F               	movlb	15	; () banked
 10473  01275E  813F               	bsf	63,0,b	;volatile
 10474                           
 10475                           ;My_RTCC.c: 94: RTCCFGbits.RTCPTR1 = 1;
 10476  012760  010F               	movlb	15	; () banked
 10477  012762  833F               	bsf	63,1,b	;volatile
 10478                           
 10479                           ; BSR set to: 15
 10480                           ;My_RTCC.c: 96: tm->YY = x_to_d(RTCVALL);
 10481  012764  0100               	movlb	0	; () banked
 10482  012766  EE20 F00A          	lfsr	2,10
 10483  01276A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10484  01276C  26D9               	addwf	fsr2l,f,c
 10485  01276E  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10486  012770  22DA               	addwfc	fsr2h,f,c
 10487  012772  010F               	movlb	15	; () banked
 10488  012774  513A               	movf	58,w,b	;volatile
 10489  012776  EC05  F09C         	call	_x_to_d
 10490  01277A  6EDF               	movwf	indf2,c
 10491                           
 10492                           ;My_RTCC.c: 97: uint8_t dumy = RTCVALH;
 10493  01277C  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 10494                           
 10495                           ;My_RTCC.c: 98: tm->DD = x_to_d(RTCVALL);
 10496  012780  0100               	movlb	0	; () banked
 10497  012782  EE20 F008          	lfsr	2,8
 10498  012786  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10499  012788  26D9               	addwf	fsr2l,f,c
 10500  01278A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10501  01278C  22DA               	addwfc	fsr2h,f,c
 10502  01278E  010F               	movlb	15	; () banked
 10503  012790  513A               	movf	58,w,b	;volatile
 10504  012792  EC05  F09C         	call	_x_to_d
 10505  012796  6EDF               	movwf	indf2,c
 10506                           
 10507                           ;My_RTCC.c: 99: tm->MM = x_to_d(RTCVALH);
 10508  012798  0100               	movlb	0	; () banked
 10509  01279A  EE20 F009          	lfsr	2,9
 10510  01279E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10511  0127A0  26D9               	addwf	fsr2l,f,c
 10512  0127A2  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10513  0127A4  22DA               	addwfc	fsr2h,f,c
 10514  0127A6  010F               	movlb	15	; () banked
 10515  0127A8  513B               	movf	59,w,b	;volatile
 10516  0127AA  EC05  F09C         	call	_x_to_d
 10517  0127AE  6EDF               	movwf	indf2,c
 10518                           
 10519                           ;My_RTCC.c: 100: tm->hh = x_to_d(RTCVALL);
 10520  0127B0  0100               	movlb	0	; () banked
 10521  0127B2  EE20 F006          	lfsr	2,6
 10522  0127B6  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10523  0127B8  26D9               	addwf	fsr2l,f,c
 10524  0127BA  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10525  0127BC  22DA               	addwfc	fsr2h,f,c
 10526  0127BE  010F               	movlb	15	; () banked
 10527  0127C0  513A               	movf	58,w,b	;volatile
 10528  0127C2  EC05  F09C         	call	_x_to_d
 10529  0127C6  6EDF               	movwf	indf2,c
 10530                           
 10531                           ;My_RTCC.c: 101: tm->EE = x_to_d(RTCVALH);
 10532  0127C8  0100               	movlb	0	; () banked
 10533  0127CA  EE20 F007          	lfsr	2,7
 10534  0127CE  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10535  0127D0  26D9               	addwf	fsr2l,f,c
 10536  0127D2  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10537  0127D4  22DA               	addwfc	fsr2h,f,c
 10538  0127D6  010F               	movlb	15	; () banked
 10539  0127D8  513B               	movf	59,w,b	;volatile
 10540  0127DA  EC05  F09C         	call	_x_to_d
 10541  0127DE  6EDF               	movwf	indf2,c
 10542                           
 10543                           ;My_RTCC.c: 102: tm->ss = x_to_d(RTCVALL);
 10544  0127E0  0100               	movlb	0	; () banked
 10545  0127E2  EE20 F004          	lfsr	2,4
 10546  0127E6  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10547  0127E8  26D9               	addwf	fsr2l,f,c
 10548  0127EA  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10549  0127EC  22DA               	addwfc	fsr2h,f,c
 10550  0127EE  010F               	movlb	15	; () banked
 10551  0127F0  513A               	movf	58,w,b	;volatile
 10552  0127F2  EC05  F09C         	call	_x_to_d
 10553  0127F6  6EDF               	movwf	indf2,c
 10554                           
 10555                           ;My_RTCC.c: 103: tm->mm = x_to_d(RTCVALH);
 10556  0127F8  0100               	movlb	0	; () banked
 10557  0127FA  EE20 F005          	lfsr	2,5
 10558  0127FE  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 10559  012800  26D9               	addwf	fsr2l,f,c
 10560  012802  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 10561  012804  22DA               	addwfc	fsr2h,f,c
 10562  012806  010F               	movlb	15	; () banked
 10563  012808  513B               	movf	59,w,b	;volatile
 10564  01280A  EC05  F09C         	call	_x_to_d
 10565  01280E  6EDF               	movwf	indf2,c
 10566  012810  0012               	return		;funcret
 10567  012812                     __end_of_RTCC_to_caltime:
 10568                           	opt stack 0
 10569                           tblptru	equ	0xFF8
 10570                           tblptrh	equ	0xFF7
 10571                           tblptrl	equ	0xFF6
 10572                           tablat	equ	0xFF5
 10573                           prodh	equ	0xFF4
 10574                           prodl	equ	0xFF3
 10575                           intcon	equ	0xFF2
 10576                           intcon2	equ	0xFF1
 10577                           indf0	equ	0xFEF
 10578                           postinc0	equ	0xFEE
 10579                           fsr0h	equ	0xFEA
 10580                           fsr0l	equ	0xFE9
 10581                           wreg	equ	0xFE8
 10582                           indf1	equ	0xFE7
 10583                           postinc1	equ	0xFE6
 10584                           postdec1	equ	0xFE5
 10585                           fsr1h	equ	0xFE2
 10586                           fsr1l	equ	0xFE1
 10587                           indf2	equ	0xFDF
 10588                           postinc2	equ	0xFDE
 10589                           postdec2	equ	0xFDD
 10590                           plusw2	equ	0xFDB
 10591                           fsr2h	equ	0xFDA
 10592                           fsr2l	equ	0xFD9
 10593                           status	equ	0xFD8
 10594                           
 10595 ;; *************** function _x_to_d *****************
 10596 ;; Defined at:
 10597 ;;		line 52 in file "../My_library/My_RTCC.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;  hex             1    wreg     unsigned char 
 10600 ;; Auto vars:     Size  Location     Type
 10601 ;;  hex             1    1[BANK0 ] unsigned char 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  1    wreg      unsigned char 
 10604 ;; Registers used:
 10605 ;;		wreg, status,2, status,0, prodl, prodh
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10614 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10615 ;;Total ram usage:        2 bytes
 10616 ;; Hardware stack levels used:    1
 10617 ;; Hardware stack levels required when called:   11
 10618 ;; This function calls:
 10619 ;;		Nothing
 10620 ;; This function is called by:
 10621 ;;		_RTCC_to_caltime
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           	psect	text51
 10626  01380A                     __ptext51:
 10627                           	opt stack 0
 10628  01380A                     _x_to_d:
 10629                           	opt stack 15
 10630                           
 10631                           ;incstack = 0
 10632                           ;x_to_d@hex stored from wreg
 10633  01380A  0100               	movlb	0	; () banked
 10634  01380C  6F61               	movwf	x_to_d@hex& (0+255),b
 10635                           
 10636                           ;My_RTCC.c: 53: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 10637  01380E  C061  F060         	movff	x_to_d@hex,??_x_to_d
 10638  013812  0E0F               	movlw	15
 10639  013814  0100               	movlb	0	; () banked
 10640  013816  1760               	andwf	??_x_to_d& (0+255),f,b
 10641  013818  0100               	movlb	0	; () banked
 10642  01381A  3961               	swapf	x_to_d@hex& (0+255),w,b
 10643  01381C  0B0F               	andlw	15
 10644  01381E  0B0F               	andlw	15
 10645  013820  0D0A               	mullw	10
 10646  013822  50F3               	movf	prodl,w,c
 10647  013824  0100               	movlb	0	; () banked
 10648  013826  2560               	addwf	??_x_to_d& (0+255),w,b
 10649  013828  0012               	return	
 10650  01382A                     __end_of_x_to_d:
 10651                           	opt stack 0
 10652                           tblptru	equ	0xFF8
 10653                           tblptrh	equ	0xFF7
 10654                           tblptrl	equ	0xFF6
 10655                           tablat	equ	0xFF5
 10656                           prodh	equ	0xFF4
 10657                           prodl	equ	0xFF3
 10658                           intcon	equ	0xFF2
 10659                           intcon2	equ	0xFF1
 10660                           indf0	equ	0xFEF
 10661                           postinc0	equ	0xFEE
 10662                           fsr0h	equ	0xFEA
 10663                           fsr0l	equ	0xFE9
 10664                           wreg	equ	0xFE8
 10665                           indf1	equ	0xFE7
 10666                           postinc1	equ	0xFE6
 10667                           postdec1	equ	0xFE5
 10668                           fsr1h	equ	0xFE2
 10669                           fsr1l	equ	0xFE1
 10670                           indf2	equ	0xFDF
 10671                           postinc2	equ	0xFDE
 10672                           postdec2	equ	0xFDD
 10673                           plusw2	equ	0xFDB
 10674                           fsr2h	equ	0xFDA
 10675                           fsr2l	equ	0xFD9
 10676                           status	equ	0xFD8
 10677                           
 10678 ;; *************** function _I2C_LCD_SetCursor *****************
 10679 ;; Defined at:
 10680 ;;		line 26 in file "../My_library/My_ST7032.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;  col             1    wreg     unsigned char 
 10683 ;;  row             1    6[BANK0 ] unsigned char 
 10684 ;; Auto vars:     Size  Location     Type
 10685 ;;  col             1    9[BANK0 ] unsigned char 
 10686 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 10687 ;; Return value:  Size  Location     Type
 10688 ;;		None               void
 10689 ;; Registers used:
 10690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10696 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10697 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10699 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10700 ;;Total ram usage:        4 bytes
 10701 ;; Hardware stack levels used:    1
 10702 ;; Hardware stack levels required when called:   14
 10703 ;; This function calls:
 10704 ;;		_I2C_LCD_Command
 10705 ;; This function is called by:
 10706 ;;		_main
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           
 10710                           	psect	text52
 10711  0136CC                     __ptext52:
 10712                           	opt stack 0
 10713  0136CC                     _I2C_LCD_SetCursor:
 10714                           	opt stack 16
 10715                           
 10716                           ; BSR set to: 0
 10717                           ;incstack = 0
 10718                           ;I2C_LCD_SetCursor@col stored from wreg
 10719  0136CC  0100               	movlb	0	; () banked
 10720  0136CE  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 10721                           
 10722                           ;My_ST7032.c: 27: uint8_t row_offsets[] = {0x00, 0x40};
 10723  0136D0  C0D6  F067         	movff	I2C_LCD_SetCursor@F8620,I2C_LCD_SetCursor@row_offsets
 10724  0136D4  C0D7  F068         	movff	I2C_LCD_SetCursor@F8620+1,I2C_LCD_SetCursor@row_offsets+1
 10725                           
 10726                           ;My_ST7032.c: 29: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 10727  0136D8  0100               	movlb	0	; () banked
 10728  0136DA  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 10729  0136DC  0D01               	mullw	1
 10730  0136DE  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 10731  0136E0  24F3               	addwf	prodl,w,c
 10732  0136E2  6ED9               	movwf	fsr2l,c
 10733  0136E4  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 10734  0136E6  20F4               	addwfc	prodh,w,c
 10735  0136E8  6EDA               	movwf	fsr2h,c
 10736  0136EA  50DF               	movf	indf2,w,c
 10737  0136EC  0100               	movlb	0	; () banked
 10738  0136EE  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 10739  0136F0  0980               	iorlw	128
 10740  0136F2  ECA0  F09A         	call	_I2C_LCD_Command
 10741  0136F6  0012               	return		;funcret
 10742  0136F8                     __end_of_I2C_LCD_SetCursor:
 10743                           	opt stack 0
 10744                           tblptru	equ	0xFF8
 10745                           tblptrh	equ	0xFF7
 10746                           tblptrl	equ	0xFF6
 10747                           tablat	equ	0xFF5
 10748                           prodh	equ	0xFF4
 10749                           prodl	equ	0xFF3
 10750                           intcon	equ	0xFF2
 10751                           intcon2	equ	0xFF1
 10752                           indf0	equ	0xFEF
 10753                           postinc0	equ	0xFEE
 10754                           fsr0h	equ	0xFEA
 10755                           fsr0l	equ	0xFE9
 10756                           wreg	equ	0xFE8
 10757                           indf1	equ	0xFE7
 10758                           postinc1	equ	0xFE6
 10759                           postdec1	equ	0xFE5
 10760                           fsr1h	equ	0xFE2
 10761                           fsr1l	equ	0xFE1
 10762                           indf2	equ	0xFDF
 10763                           postinc2	equ	0xFDE
 10764                           postdec2	equ	0xFDD
 10765                           plusw2	equ	0xFDB
 10766                           fsr2h	equ	0xFDA
 10767                           fsr2l	equ	0xFD9
 10768                           status	equ	0xFD8
 10769                           
 10770 ;; *************** function _I2C_LCD_Command *****************
 10771 ;; Defined at:
 10772 ;;		line 8 in file "../My_library/My_ST7032.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;  c               1    wreg     unsigned char 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  c               1    4[BANK0 ] unsigned char 
 10777 ;;  ans             1    5[BANK0 ] unsigned char 
 10778 ;; Return value:  Size  Location     Type
 10779 ;;		None               void
 10780 ;; Registers used:
 10781 ;;		wreg, status,2, status,0, cstack
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10788 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10790 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10791 ;;Total ram usage:        2 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; Hardware stack levels required when called:   13
 10794 ;; This function calls:
 10795 ;;		_I2C_Send
 10796 ;;		_I2C_Start
 10797 ;;		_I2C_Stop
 10798 ;; This function is called by:
 10799 ;;		_I2C_LCD_Clear
 10800 ;;		_I2C_LCD_SetCursor
 10801 ;;		_ST7032_init
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           	psect	text53
 10806  013540                     __ptext53:
 10807                           	opt stack 0
 10808  013540                     _I2C_LCD_Command:
 10809                           	opt stack 15
 10810                           
 10811                           ;incstack = 0
 10812                           ;I2C_LCD_Command@c stored from wreg
 10813  013540  0100               	movlb	0	; () banked
 10814  013542  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 10815                           
 10816                           ;My_ST7032.c: 9: uint8_t ans;
 10817                           ;My_ST7032.c: 11: ans = I2C_Start(0x3E, 0);
 10818  013544  0E00               	movlw	0
 10819  013546  0100               	movlb	0	; () banked
 10820  013548  6F62               	movwf	I2C_Start@rw& (0+255),b
 10821  01354A  0E3E               	movlw	62
 10822  01354C  EC0A  F09B         	call	_I2C_Start
 10823  013550  0100               	movlb	0	; () banked
 10824  013552  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 10825                           
 10826                           ; BSR set to: 0
 10827                           ;My_ST7032.c: 12: if (ans == 0) {
 10828  013554  0100               	movlb	0	; () banked
 10829  013556  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 10830  013558  0100               	movlb	0	; () banked
 10831  01355A  A4D8               	btfss	status,2,c
 10832  01355C  D007               	goto	l649
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;My_ST7032.c: 14: I2C_Send(0b10000000);
 10836  01355E  0E80               	movlw	128
 10837  013560  EC67  F09C         	call	_I2C_Send
 10838                           
 10839                           ;My_ST7032.c: 15: I2C_Send(c);
 10840  013564  0100               	movlb	0	; () banked
 10841  013566  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 10842  013568  EC67  F09C         	call	_I2C_Send
 10843  01356C                     l649:
 10844                           
 10845                           ;My_ST7032.c: 16: }
 10846                           ;My_ST7032.c: 17: I2C_Stop();
 10847  01356C  EC83  F09C         	call	_I2C_Stop	;wreg free
 10848                           
 10849                           ;My_ST7032.c: 18: _delay((unsigned long)((26)*(48000000/4000000.0)));
 10850  013570  0E68               	movlw	104
 10851  013572                     u9797:
 10852  013572  2EE8               	decfsz	wreg,f,c
 10853  013574  D7FE               	goto	u9797
 10854  013576  0012               	return		;funcret
 10855  013578                     __end_of_I2C_LCD_Command:
 10856                           	opt stack 0
 10857                           tblptru	equ	0xFF8
 10858                           tblptrh	equ	0xFF7
 10859                           tblptrl	equ	0xFF6
 10860                           tablat	equ	0xFF5
 10861                           prodh	equ	0xFF4
 10862                           prodl	equ	0xFF3
 10863                           intcon	equ	0xFF2
 10864                           intcon2	equ	0xFF1
 10865                           indf0	equ	0xFEF
 10866                           postinc0	equ	0xFEE
 10867                           fsr0h	equ	0xFEA
 10868                           fsr0l	equ	0xFE9
 10869                           wreg	equ	0xFE8
 10870                           indf1	equ	0xFE7
 10871                           postinc1	equ	0xFE6
 10872                           postdec1	equ	0xFE5
 10873                           fsr1h	equ	0xFE2
 10874                           fsr1l	equ	0xFE1
 10875                           indf2	equ	0xFDF
 10876                           postinc2	equ	0xFDE
 10877                           postdec2	equ	0xFDD
 10878                           plusw2	equ	0xFDB
 10879                           fsr2h	equ	0xFDA
 10880                           fsr2l	equ	0xFD9
 10881                           status	equ	0xFD8
 10882                           
 10883 ;; *************** function _I2C_LCD_Puts *****************
 10884 ;; Defined at:
 10885 ;;		line 45 in file "../My_library/My_ST7032.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 10888 ;;		 -> main@s(40), STR_2(9), STR_1(9), 
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  ans             2    7[BANK0 ] int 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;		None               void
 10893 ;; Registers used:
 10894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10900 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10901 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10902 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10903 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10904 ;;Total ram usage:        5 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; Hardware stack levels required when called:   13
 10907 ;; This function calls:
 10908 ;;		_I2C_Send
 10909 ;;		_I2C_Start
 10910 ;;		_I2C_Stop
 10911 ;; This function is called by:
 10912 ;;		_main
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           	psect	text54
 10917  012D2A                     __ptext54:
 10918                           	opt stack 0
 10919  012D2A                     _I2C_LCD_Puts:
 10920                           	opt stack 17
 10921                           
 10922                           ;My_ST7032.c: 46: int ans;
 10923                           ;My_ST7032.c: 48: ans = I2C_Start(0x3E, 0);
 10924                           
 10925                           ;incstack = 0
 10926  012D2A  0E00               	movlw	0
 10927  012D2C  0100               	movlb	0	; () banked
 10928  012D2E  6F62               	movwf	I2C_Start@rw& (0+255),b
 10929  012D30  0E3E               	movlw	62
 10930  012D32  EC0A  F09B         	call	_I2C_Start
 10931  012D36  0100               	movlb	0	; () banked
 10932  012D38  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 10933  012D3A  0100               	movlb	0	; () banked
 10934  012D3C  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 10935  012D3E  0100               	movlb	0	; () banked
 10936  012D40  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 10937  012D42  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 10938                           
 10939                           ; BSR set to: 0
 10940                           ;My_ST7032.c: 49: if (ans == 0) {
 10941  012D44  0100               	movlb	0	; () banked
 10942  012D46  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 10943  012D48  0100               	movlb	0	; () banked
 10944  012D4A  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 10945  012D4C  A4D8               	btfss	status,2,c
 10946  012D4E  D031               	goto	l9012
 10947                           
 10948                           ; BSR set to: 0
 10949                           ;My_ST7032.c: 50: I2C_Send(0b01000000);
 10950  012D50  0E40               	movlw	64
 10951  012D52  EC67  F09C         	call	_I2C_Send
 10952                           
 10953                           ;My_ST7032.c: 51: while (*s) {
 10954  012D56  D019               	goto	l9010
 10955  012D58                     l9004:
 10956                           
 10957                           ;My_ST7032.c: 52: I2C_Send(*s++);
 10958  012D58  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 10959  012D5C  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 10960  012D60  0E00               	movlw	low (__mediumconst shr (0+16))
 10961  012D62  6EF8               	movwf	tblptru,c
 10962  012D64  0E0E               	movlw	(high __ramtop+-1)
 10963  012D66  64F7               	cpfsgt	tblptrh,c
 10964  012D68  D003               	bra	u8847
 10965  012D6A  0008               	tblrd		*
 10966  012D6C  50F5               	movf	tablat,w,c
 10967  012D6E  D005               	bra	u8840
 10968  012D70                     u8847:
 10969  012D70  CFF6 FFE9          	movff	tblptrl,fsr0l
 10970  012D74  CFF7 FFEA          	movff	tblptrh,fsr0h
 10971  012D78  50EF               	movf	indf0,w,c
 10972  012D7A                     u8840:
 10973  012D7A  EC67  F09C         	call	_I2C_Send
 10974  012D7E  0100               	movlb	0	; () banked
 10975  012D80  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 10976  012D82  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 10977                           
 10978                           ; BSR set to: 0
 10979                           ;My_ST7032.c: 53: _delay((unsigned long)((26)*(48000000/4000000.0)));
 10980  012D84  0E68               	movlw	104
 10981  012D86                     u9807:
 10982  012D86  2EE8               	decfsz	wreg,f,c
 10983  012D88  D7FE               	goto	u9807
 10984  012D8A                     l9010:
 10985  012D8A  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 10986  012D8E  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 10987  012D92  0E00               	movlw	low (__mediumconst shr (0+16))
 10988  012D94  6EF8               	movwf	tblptru,c
 10989  012D96  0E0E               	movlw	(high __ramtop+-1)
 10990  012D98  64F7               	cpfsgt	tblptrh,c
 10991  012D9A  D003               	bra	u8857
 10992  012D9C  0008               	tblrd		*
 10993  012D9E  50F5               	movf	tablat,w,c
 10994  012DA0  D005               	bra	u8850
 10995  012DA2                     u8857:
 10996  012DA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10997  012DA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10998  012DAA  50EF               	movf	indf0,w,c
 10999  012DAC                     u8850:
 11000  012DAC  0900               	iorlw	0
 11001  012DAE  A4D8               	btfss	status,2,c
 11002  012DB0  D7D3               	goto	l9004
 11003  012DB2                     l9012:
 11004                           
 11005                           ;My_ST7032.c: 54: }
 11006                           ;My_ST7032.c: 55: }
 11007                           ;My_ST7032.c: 56: I2C_Stop();
 11008  012DB2  EC83  F09C         	call	_I2C_Stop	;wreg free
 11009  012DB6  0012               	return		;funcret
 11010  012DB8                     __end_of_I2C_LCD_Puts:
 11011                           	opt stack 0
 11012                           tblptru	equ	0xFF8
 11013                           tblptrh	equ	0xFF7
 11014                           tblptrl	equ	0xFF6
 11015                           tablat	equ	0xFF5
 11016                           prodh	equ	0xFF4
 11017                           prodl	equ	0xFF3
 11018                           intcon	equ	0xFF2
 11019                           intcon2	equ	0xFF1
 11020                           indf0	equ	0xFEF
 11021                           postinc0	equ	0xFEE
 11022                           fsr0h	equ	0xFEA
 11023                           fsr0l	equ	0xFE9
 11024                           wreg	equ	0xFE8
 11025                           indf1	equ	0xFE7
 11026                           postinc1	equ	0xFE6
 11027                           postdec1	equ	0xFE5
 11028                           fsr1h	equ	0xFE2
 11029                           fsr1l	equ	0xFE1
 11030                           indf2	equ	0xFDF
 11031                           postinc2	equ	0xFDE
 11032                           postdec2	equ	0xFDD
 11033                           plusw2	equ	0xFDB
 11034                           fsr2h	equ	0xFDA
 11035                           fsr2l	equ	0xFD9
 11036                           status	equ	0xFD8
 11037                           
 11038 ;; *************** function _I2C_Stop *****************
 11039 ;; Defined at:
 11040 ;;		line 45 in file "../My_library/My_I2C.c"
 11041 ;; Parameters:    Size  Location     Type
 11042 ;;		None
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;		None
 11045 ;; Return value:  Size  Location     Type
 11046 ;;		None               void
 11047 ;; Registers used:
 11048 ;;		wreg, status,2, status,0, cstack
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/0
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11058 ;;Total ram usage:        0 bytes
 11059 ;; Hardware stack levels used:    1
 11060 ;; Hardware stack levels required when called:   12
 11061 ;; This function calls:
 11062 ;;		_I2C_IdleCheck
 11063 ;; This function is called by:
 11064 ;;		_I2C_LCD_Command
 11065 ;;		_I2C_LCD_Puts
 11066 ;;		_I2C_LCD_Putc
 11067 ;;		_I2C_LCD_CreateChar
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           	psect	text55
 11072  013906                     __ptext55:
 11073                           	opt stack 0
 11074  013906                     _I2C_Stop:
 11075                           	opt stack 15
 11076                           
 11077                           ;My_I2C.c: 47: I2C_IdleCheck(0x5);
 11078                           
 11079                           ;incstack = 0
 11080  013906  0E05               	movlw	5
 11081  013908  EC15  F09C         	call	_I2C_IdleCheck
 11082                           
 11083                           ;My_I2C.c: 48: SSP1CON2bits.PEN = 1;
 11084  01390C  84C5               	bsf	4037,2,c	;volatile
 11085  01390E  0012               	return		;funcret
 11086  013910                     __end_of_I2C_Stop:
 11087                           	opt stack 0
 11088                           tblptru	equ	0xFF8
 11089                           tblptrh	equ	0xFF7
 11090                           tblptrl	equ	0xFF6
 11091                           tablat	equ	0xFF5
 11092                           prodh	equ	0xFF4
 11093                           prodl	equ	0xFF3
 11094                           intcon	equ	0xFF2
 11095                           intcon2	equ	0xFF1
 11096                           indf0	equ	0xFEF
 11097                           postinc0	equ	0xFEE
 11098                           fsr0h	equ	0xFEA
 11099                           fsr0l	equ	0xFE9
 11100                           wreg	equ	0xFE8
 11101                           indf1	equ	0xFE7
 11102                           postinc1	equ	0xFE6
 11103                           postdec1	equ	0xFE5
 11104                           fsr1h	equ	0xFE2
 11105                           fsr1l	equ	0xFE1
 11106                           indf2	equ	0xFDF
 11107                           postinc2	equ	0xFDE
 11108                           postdec2	equ	0xFDD
 11109                           plusw2	equ	0xFDB
 11110                           fsr2h	equ	0xFDA
 11111                           fsr2l	equ	0xFD9
 11112                           status	equ	0xFD8
 11113                           
 11114 ;; *************** function _I2C_Start *****************
 11115 ;; Defined at:
 11116 ;;		line 21 in file "../My_library/My_I2C.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;  adrs            1    wreg     unsigned char 
 11119 ;;  rw              1    2[BANK0 ] unsigned char 
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;  adrs            1    3[BANK0 ] unsigned char 
 11122 ;; Return value:  Size  Location     Type
 11123 ;;                  1    wreg      unsigned char 
 11124 ;; Registers used:
 11125 ;;		wreg, status,2, status,0, cstack
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11131 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11134 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11135 ;;Total ram usage:        2 bytes
 11136 ;; Hardware stack levels used:    1
 11137 ;; Hardware stack levels required when called:   12
 11138 ;; This function calls:
 11139 ;;		_I2C_IdleCheck
 11140 ;; This function is called by:
 11141 ;;		_I2C_LCD_Command
 11142 ;;		_I2C_LCD_Puts
 11143 ;;		_I2C_LCD_Putc
 11144 ;;		_I2C_LCD_CreateChar
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148                           	psect	text56
 11149  013614                     __ptext56:
 11150                           	opt stack 0
 11151  013614                     _I2C_Start:
 11152                           	opt stack 15
 11153                           
 11154                           ;incstack = 0
 11155                           ;I2C_Start@adrs stored from wreg
 11156  013614  0100               	movlb	0	; () banked
 11157  013616  6F63               	movwf	I2C_Start@adrs& (0+255),b
 11158                           
 11159                           ;My_I2C.c: 23: I2C_IdleCheck(0x5);
 11160  013618  0E05               	movlw	5
 11161  01361A  EC15  F09C         	call	_I2C_IdleCheck
 11162                           
 11163                           ;My_I2C.c: 24: SSP1CON2bits.SEN = 1;
 11164  01361E  80C5               	bsf	4037,0,c	;volatile
 11165                           
 11166                           ;My_I2C.c: 26: I2C_IdleCheck(0x5);
 11167  013620  0E05               	movlw	5
 11168  013622  EC15  F09C         	call	_I2C_IdleCheck
 11169                           
 11170                           ;My_I2C.c: 27: SSP1IF = 0;
 11171  013626  969E               	bcf	3998,3,c	;volatile
 11172                           
 11173                           ;My_I2C.c: 28: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 11174  013628  0100               	movlb	0	; () banked
 11175  01362A  5163               	movf	I2C_Start@adrs& (0+255),w,b
 11176  01362C  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 11177  01362E  0100               	movlb	0	; () banked
 11178  013630  2562               	addwf	I2C_Start@rw& (0+255),w,b
 11179  013632  6EC9               	movwf	4041,c	;volatile
 11180  013634                     l172:
 11181  013634  A69E               	btfss	3998,3,c	;volatile
 11182  013636  D7FE               	goto	l172
 11183                           
 11184                           ;My_I2C.c: 30: return SSP1CON2bits.ACKSTAT;
 11185  013638  ACC5               	btfss	4037,6,c	;volatile
 11186  01363A  D002               	goto	u7740
 11187  01363C  0E01               	movlw	1
 11188  01363E  0012               	return	
 11189  013640                     u7740:
 11190  013640  0E00               	movlw	0
 11191  013642  0012               	return	
 11192  013644                     __end_of_I2C_Start:
 11193                           	opt stack 0
 11194                           tblptru	equ	0xFF8
 11195                           tblptrh	equ	0xFF7
 11196                           tblptrl	equ	0xFF6
 11197                           tablat	equ	0xFF5
 11198                           prodh	equ	0xFF4
 11199                           prodl	equ	0xFF3
 11200                           intcon	equ	0xFF2
 11201                           intcon2	equ	0xFF1
 11202                           indf0	equ	0xFEF
 11203                           postinc0	equ	0xFEE
 11204                           fsr0h	equ	0xFEA
 11205                           fsr0l	equ	0xFE9
 11206                           wreg	equ	0xFE8
 11207                           indf1	equ	0xFE7
 11208                           postinc1	equ	0xFE6
 11209                           postdec1	equ	0xFE5
 11210                           fsr1h	equ	0xFE2
 11211                           fsr1l	equ	0xFE1
 11212                           indf2	equ	0xFDF
 11213                           postinc2	equ	0xFDE
 11214                           postdec2	equ	0xFDD
 11215                           plusw2	equ	0xFDB
 11216                           fsr2h	equ	0xFDA
 11217                           fsr2l	equ	0xFD9
 11218                           status	equ	0xFD8
 11219                           
 11220 ;; *************** function _I2C_Send *****************
 11221 ;; Defined at:
 11222 ;;		line 51 in file "../My_library/My_I2C.c"
 11223 ;; Parameters:    Size  Location     Type
 11224 ;;  data            1    wreg     unsigned char 
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;  data            1    2[BANK0 ] unsigned char 
 11227 ;; Return value:  Size  Location     Type
 11228 ;;                  1    wreg      unsigned char 
 11229 ;; Registers used:
 11230 ;;		wreg, status,2, status,0, cstack
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11239 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11240 ;;Total ram usage:        1 bytes
 11241 ;; Hardware stack levels used:    1
 11242 ;; Hardware stack levels required when called:   12
 11243 ;; This function calls:
 11244 ;;		_I2C_IdleCheck
 11245 ;; This function is called by:
 11246 ;;		_I2C_LCD_Command
 11247 ;;		_I2C_LCD_Puts
 11248 ;;		_I2C_LCD_Putc
 11249 ;;		_I2C_LCD_CreateChar
 11250 ;; This function uses a non-reentrant model
 11251 ;;
 11252                           
 11253                           	psect	text57
 11254  0138CE                     __ptext57:
 11255                           	opt stack 0
 11256  0138CE                     _I2C_Send:
 11257                           	opt stack 15
 11258                           
 11259                           ;incstack = 0
 11260                           ;I2C_Send@data stored from wreg
 11261  0138CE  0100               	movlb	0	; () banked
 11262  0138D0  6F62               	movwf	I2C_Send@data& (0+255),b
 11263                           
 11264                           ;My_I2C.c: 52: I2C_IdleCheck(0x5);
 11265  0138D2  0E05               	movlw	5
 11266  0138D4  EC15  F09C         	call	_I2C_IdleCheck
 11267                           
 11268                           ;My_I2C.c: 53: SSP1IF = 0;
 11269  0138D8  969E               	bcf	3998,3,c	;volatile
 11270                           
 11271                           ;My_I2C.c: 54: SSP1BUF = data;
 11272  0138DA  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 11273  0138DE                     l187:
 11274  0138DE  A69E               	btfss	3998,3,c	;volatile
 11275  0138E0  D7FE               	goto	l187
 11276                           
 11277                           ;My_I2C.c: 56: return SSP1CON2bits.ACKSTAT;
 11278                           ;	Return value of _I2C_Send is never used
 11279  0138E2  50C5               	movf	4037,w,c	;volatile
 11280  0138E4  0012               	return	
 11281  0138E6                     __end_of_I2C_Send:
 11282                           	opt stack 0
 11283                           tblptru	equ	0xFF8
 11284                           tblptrh	equ	0xFF7
 11285                           tblptrl	equ	0xFF6
 11286                           tablat	equ	0xFF5
 11287                           prodh	equ	0xFF4
 11288                           prodl	equ	0xFF3
 11289                           intcon	equ	0xFF2
 11290                           intcon2	equ	0xFF1
 11291                           indf0	equ	0xFEF
 11292                           postinc0	equ	0xFEE
 11293                           fsr0h	equ	0xFEA
 11294                           fsr0l	equ	0xFE9
 11295                           wreg	equ	0xFE8
 11296                           indf1	equ	0xFE7
 11297                           postinc1	equ	0xFE6
 11298                           postdec1	equ	0xFE5
 11299                           fsr1h	equ	0xFE2
 11300                           fsr1l	equ	0xFE1
 11301                           indf2	equ	0xFDF
 11302                           postinc2	equ	0xFDE
 11303                           postdec2	equ	0xFDD
 11304                           plusw2	equ	0xFDB
 11305                           fsr2h	equ	0xFDA
 11306                           fsr2l	equ	0xFD9
 11307                           status	equ	0xFD8
 11308                           
 11309 ;; *************** function _I2C_IdleCheck *****************
 11310 ;; Defined at:
 11311 ;;		line 7 in file "../My_library/My_I2C.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;  mask            1    wreg     unsigned char 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;  mask            1    1[BANK0 ] unsigned char 
 11316 ;; Return value:  Size  Location     Type
 11317 ;;		None               void
 11318 ;; Registers used:
 11319 ;;		wreg, status,2, status,0
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11327 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11328 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11329 ;;Total ram usage:        2 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:   11
 11332 ;; This function calls:
 11333 ;;		Nothing
 11334 ;; This function is called by:
 11335 ;;		_I2C_Start
 11336 ;;		_I2C_Stop
 11337 ;;		_I2C_Send
 11338 ;;		_I2C_rStart
 11339 ;;		_I2C_Receive
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           	psect	text58
 11344  01382A                     __ptext58:
 11345                           	opt stack 0
 11346  01382A                     _I2C_IdleCheck:
 11347                           	opt stack 15
 11348                           
 11349                           ;incstack = 0
 11350                           ;I2C_IdleCheck@mask stored from wreg
 11351  01382A  0100               	movlb	0	; () banked
 11352  01382C  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 11353  01382E                     l7952:
 11354  01382E  50C7               	movf	4039,w,c	;volatile
 11355  013830  0100               	movlb	0	; () banked
 11356  013832  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 11357  013834  0100               	movlb	0	; () banked
 11358  013836  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 11359  013838  50C5               	movf	4037,w,c	;volatile
 11360  01383A  0B1F               	andlw	31
 11361  01383C  0100               	movlb	0	; () banked
 11362  01383E  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 11363  013840  0900               	iorlw	0
 11364  013842  B4D8               	btfsc	status,2,c
 11365  013844  0012               	return	
 11366  013846  D7F3               	goto	l7952
 11367  013848                     __end_of_I2C_IdleCheck:
 11368                           	opt stack 0
 11369                           tblptru	equ	0xFF8
 11370                           tblptrh	equ	0xFF7
 11371                           tblptrl	equ	0xFF6
 11372                           tablat	equ	0xFF5
 11373                           prodh	equ	0xFF4
 11374                           prodl	equ	0xFF3
 11375                           intcon	equ	0xFF2
 11376                           intcon2	equ	0xFF1
 11377                           indf0	equ	0xFEF
 11378                           postinc0	equ	0xFEE
 11379                           fsr0h	equ	0xFEA
 11380                           fsr0l	equ	0xFE9
 11381                           wreg	equ	0xFE8
 11382                           indf1	equ	0xFE7
 11383                           postinc1	equ	0xFE6
 11384                           postdec1	equ	0xFE5
 11385                           fsr1h	equ	0xFE2
 11386                           fsr1l	equ	0xFE1
 11387                           indf2	equ	0xFDF
 11388                           postinc2	equ	0xFDE
 11389                           postdec2	equ	0xFDD
 11390                           plusw2	equ	0xFDB
 11391                           fsr2h	equ	0xFDA
 11392                           fsr2l	equ	0xFD9
 11393                           status	equ	0xFD8
 11394                           
 11395 ;; *************** function _ISR *****************
 11396 ;; Defined at:
 11397 ;;		line 46 in file "main.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;		None
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;		None
 11402 ;; Return value:  Size  Location     Type
 11403 ;;		None               void
 11404 ;; Registers used:
 11405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11413 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11414 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11415 ;;Total ram usage:       15 bytes
 11416 ;; Hardware stack levels used:    1
 11417 ;; Hardware stack levels required when called:   10
 11418 ;; This function calls:
 11419 ;;		_UART_ISR
 11420 ;;		_USB_ISR
 11421 ;; This function is called by:
 11422 ;;		Interrupt level 2
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           	psect	intcode
 11427  001008                     __pintcode:
 11428                           	opt stack 0
 11429  001008                     _ISR:
 11430                           	opt stack 14
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;incstack = 0
 11434  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11435  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 11436  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 11437  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 11438  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 11439  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 11440  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 11441  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 11442  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 11443  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 11444  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 11445  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 11446  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 11447  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 11448  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 11449                           
 11450                           ;main.c: 47: USB_ISR();
 11451  001042  EC88  F09C         	call	_USB_ISR	;wreg free
 11452                           
 11453                           ;main.c: 48: UART_ISR();
 11454  001046  ECC7  F099         	call	_UART_ISR	;wreg free
 11455                           
 11456                           ;main.c: 49: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 11457  00104A  B4F2               	btfsc	intcon,2,c	;volatile
 11458  00104C  AAF2               	btfss	intcon,5,c	;volatile
 11459  00104E  D001               	goto	i2l91
 11460                           
 11461                           ;main.c: 50: INTCONbits.T0IF = 0;
 11462  001050  94F2               	bcf	intcon,2,c	;volatile
 11463  001052                     i2l91:
 11464                           
 11465                           ;main.c: 51: }
 11466                           ;main.c: 52: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 11467  001052  B09E               	btfsc	3998,0,c	;volatile
 11468  001054  A09D               	btfss	3997,0,c	;volatile
 11469  001056  D00E               	goto	i2l7332
 11470                           
 11471                           ;main.c: 53: PIR1bits.TMR1IF = 0;
 11472  001058  909E               	bcf	3998,0,c	;volatile
 11473                           
 11474                           ;main.c: 54: TMR1H = 0xC0;
 11475  00105A  0EC0               	movlw	192
 11476  00105C  6ECF               	movwf	4047,c	;volatile
 11477                           
 11478                           ;main.c: 55: LATAbits.LATA0 = !LATAbits.LATA0;
 11479  00105E  B089               	btfsc	3977,0,c	;volatile
 11480  001060  D003               	goto	i2u670_40
 11481  001062  6A4C               	clrf	??_ISR& (0+255),c
 11482  001064  2A4C               	incf	??_ISR& (0+255),f,c
 11483  001066  D001               	goto	i2u671_48
 11484  001068                     i2u670_40:
 11485  001068  6A4C               	clrf	??_ISR& (0+255),c
 11486  00106A                     i2u671_48:
 11487  00106A  5089               	movf	3977,w,c	;volatile
 11488  00106C  184C               	xorwf	??_ISR,w,c
 11489  00106E  0BFE               	andlw	-2
 11490  001070  184C               	xorwf	??_ISR,w,c
 11491  001072  6E89               	movwf	3977,c	;volatile
 11492  001074                     i2l7332:
 11493                           
 11494                           ;main.c: 56: }
 11495                           ;main.c: 57: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 11496  001074  B2A1               	btfsc	4001,1,c	;volatile
 11497  001076  A2A0               	btfss	4000,1,c	;volatile
 11498  001078  D001               	goto	i2l94
 11499                           
 11500                           ;main.c: 58: PIR2bits.TMR3IF = 0;
 11501  00107A  92A1               	bcf	4001,1,c	;volatile
 11502  00107C                     i2l94:
 11503  00107C  C05A  FFF5         	movff	??_ISR+14,tablat
 11504  001080  C059  FFF8         	movff	??_ISR+13,tblptru
 11505  001084  C058  FFF7         	movff	??_ISR+12,tblptrh
 11506  001088  C057  FFF6         	movff	??_ISR+11,tblptrl
 11507  00108C  C056  FFF4         	movff	??_ISR+10,prodh
 11508  001090  C055  FFF3         	movff	??_ISR+9,prodl
 11509  001094  C054  FFDA         	movff	??_ISR+8,fsr2h
 11510  001098  C053  FFD9         	movff	??_ISR+7,fsr2l
 11511  00109C  C052  FFE2         	movff	??_ISR+6,fsr1h
 11512  0010A0  C051  FFE1         	movff	??_ISR+5,fsr1l
 11513  0010A4  C050  FFEA         	movff	??_ISR+4,fsr0h
 11514  0010A8  C04F  FFE9         	movff	??_ISR+3,fsr0l
 11515  0010AC  C04E  FFFB         	movff	??_ISR+2,pclatu
 11516  0010B0  C04D  FFFA         	movff	??_ISR+1,pclath
 11517  0010B4  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11518  0010B6  0011               	retfie		f
 11519  0010B8                     __end_of_ISR:
 11520                           	opt stack 0
 11521                           pclatu	equ	0xFFB
 11522                           pclath	equ	0xFFA
 11523                           tblptru	equ	0xFF8
 11524                           tblptrh	equ	0xFF7
 11525                           tblptrl	equ	0xFF6
 11526                           tablat	equ	0xFF5
 11527                           prodh	equ	0xFF4
 11528                           prodl	equ	0xFF3
 11529                           intcon	equ	0xFF2
 11530                           intcon2	equ	0xFF1
 11531                           indf0	equ	0xFEF
 11532                           postinc0	equ	0xFEE
 11533                           fsr0h	equ	0xFEA
 11534                           fsr0l	equ	0xFE9
 11535                           wreg	equ	0xFE8
 11536                           indf1	equ	0xFE7
 11537                           postinc1	equ	0xFE6
 11538                           postdec1	equ	0xFE5
 11539                           fsr1h	equ	0xFE2
 11540                           fsr1l	equ	0xFE1
 11541                           indf2	equ	0xFDF
 11542                           postinc2	equ	0xFDE
 11543                           postdec2	equ	0xFDD
 11544                           plusw2	equ	0xFDB
 11545                           fsr2h	equ	0xFDA
 11546                           fsr2l	equ	0xFD9
 11547                           status	equ	0xFD8
 11548                           
 11549 ;; *************** function _USB_ISR *****************
 11550 ;; Defined at:
 11551 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 11552 ;; Parameters:    Size  Location     Type
 11553 ;;		None
 11554 ;; Auto vars:     Size  Location     Type
 11555 ;;		None
 11556 ;; Return value:  Size  Location     Type
 11557 ;;		None               void
 11558 ;; Registers used:
 11559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11560 ;; Tracked objects:
 11561 ;;		On entry : 0/0
 11562 ;;		On exit  : 0/0
 11563 ;;		Unchanged: 0/0
 11564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11569 ;;Total ram usage:        0 bytes
 11570 ;; Hardware stack levels used:    1
 11571 ;; Hardware stack levels required when called:    9
 11572 ;; This function calls:
 11573 ;;		_USBDeviceTasks
 11574 ;; This function is called by:
 11575 ;;		_ISR
 11576 ;; This function uses a non-reentrant model
 11577 ;;
 11578                           
 11579                           	psect	text60
 11580  013910                     __ptext60:
 11581                           	opt stack 0
 11582  013910                     _USB_ISR:
 11583                           	opt stack 14
 11584                           
 11585                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 11586                           
 11587                           ;incstack = 0
 11588  013910  EC1D  F089         	call	_USBDeviceTasks	;wreg free
 11589  013914  0012               	return		;funcret
 11590  013916                     __end_of_USB_ISR:
 11591                           	opt stack 0
 11592                           pclatu	equ	0xFFB
 11593                           pclath	equ	0xFFA
 11594                           tblptru	equ	0xFF8
 11595                           tblptrh	equ	0xFF7
 11596                           tblptrl	equ	0xFF6
 11597                           tablat	equ	0xFF5
 11598                           prodh	equ	0xFF4
 11599                           prodl	equ	0xFF3
 11600                           intcon	equ	0xFF2
 11601                           intcon2	equ	0xFF1
 11602                           indf0	equ	0xFEF
 11603                           postinc0	equ	0xFEE
 11604                           fsr0h	equ	0xFEA
 11605                           fsr0l	equ	0xFE9
 11606                           wreg	equ	0xFE8
 11607                           indf1	equ	0xFE7
 11608                           postinc1	equ	0xFE6
 11609                           postdec1	equ	0xFE5
 11610                           fsr1h	equ	0xFE2
 11611                           fsr1l	equ	0xFE1
 11612                           indf2	equ	0xFDF
 11613                           postinc2	equ	0xFDE
 11614                           postdec2	equ	0xFDD
 11615                           plusw2	equ	0xFDB
 11616                           fsr2h	equ	0xFDA
 11617                           fsr2l	equ	0xFD9
 11618                           status	equ	0xFD8
 11619                           
 11620 ;; *************** function _USBDeviceTasks *****************
 11621 ;; Defined at:
 11622 ;;		line 489 in file "../My_library/usb/usb_device.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;		None
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;  i               1   29[COMRAM] unsigned char 
 11627 ;; Return value:  Size  Location     Type
 11628 ;;		None               void
 11629 ;; Registers used:
 11630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11640 ;;Total ram usage:        1 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    8
 11643 ;; This function calls:
 11644 ;;		_USBCtrlEPAllowStatusStage
 11645 ;;		_USBCtrlEPService
 11646 ;;		_USBStallHandler
 11647 ;;		_USBSuspend
 11648 ;;		_USBWakeFromSuspend
 11649 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11650 ;;		i2_USBDeviceInit
 11651 ;; This function is called by:
 11652 ;;		_USB_ISR
 11653 ;; This function uses a non-reentrant model
 11654 ;;
 11655                           
 11656                           	psect	text61
 11657  01123A                     __ptext61:
 11658                           	opt stack 0
 11659  01123A                     _USBDeviceTasks:
 11660                           	opt stack 14
 11661                           
 11662                           ;usb_device.c: 491: uint8_t i;
 11663                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 11664                           
 11665                           ;incstack = 0
 11666  01123A  0425               	decf	_USBDeviceState,w,c	;volatile
 11667  01123C  B4D8               	btfsc	status,2,c
 11668                           
 11669                           ;usb_device.c: 603: {
 11670                           ;usb_device.c: 613: if(!UCONbits.SE0)
 11671  01123E  BA65               	btfsc	3941,5,c	;volatile
 11672  011240  D008               	goto	i2l6906
 11673                           
 11674                           ;usb_device.c: 614: {
 11675                           ;usb_device.c: 615: {UIR = 0;};
 11676  011242  0E00               	movlw	0
 11677  011244  6E62               	movwf	3938,c	;volatile
 11678                           
 11679                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 11680  011246  010F               	movlb	15	; () banked
 11681  011248  8136               	bsf	54,0,b	;volatile
 11682                           
 11683                           ; BSR set to: 15
 11684                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 11685  01124A  010F               	movlb	15	; () banked
 11686  01124C  8936               	bsf	54,4,b	;volatile
 11687                           
 11688                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 11689  01124E  0E02               	movlw	2
 11690  011250  6E25               	movwf	_USBDeviceState,c	;volatile
 11691  011252                     i2l6906:
 11692                           
 11693                           ;usb_device.c: 622: }
 11694                           ;usb_device.c: 623: }
 11695                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 11696  011252  A462               	btfss	3938,2,c	;volatile
 11697  011254  D006               	goto	i2l6914
 11698  011256  010F               	movlb	15	; () banked
 11699  011258  A536               	btfss	54,2,b	;volatile
 11700  01125A  D003               	goto	i2l6914
 11701                           
 11702                           ; BSR set to: 15
 11703                           ;usb_device.c: 640: {
 11704                           ;usb_device.c: 641: (UIR &= 0xFB);
 11705  01125C  9462               	bcf	3938,2,c	;volatile
 11706                           
 11707                           ; BSR set to: 15
 11708                           ;usb_device.c: 645: USBWakeFromSuspend();
 11709  01125E  ECF1  F09A         	call	_USBWakeFromSuspend	;wreg free
 11710  011262                     i2l6914:
 11711                           
 11712                           ;usb_device.c: 647: }
 11713                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 11714  011262  A265               	btfss	3941,1,c	;volatile
 11715  011264  D002               	goto	i2l1080
 11716                           
 11717                           ;usb_device.c: 653: {
 11718                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 11719  011266  98A1               	bcf	4001,4,c	;volatile
 11720                           
 11721                           ;usb_device.c: 655: return;
 11722  011268  0012               	return	
 11723  01126A                     i2l1080:
 11724                           
 11725                           ;usb_device.c: 656: }
 11726                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11727  01126A  A062               	btfss	3938,0,c	;volatile
 11728  01126C  D009               	goto	i2l6928
 11729  01126E  010F               	movlb	15	; () banked
 11730  011270  A136               	btfss	54,0,b	;volatile
 11731  011272  D006               	goto	i2l6928
 11732                           
 11733                           ; BSR set to: 15
 11734                           ;usb_device.c: 669: {
 11735                           ;usb_device.c: 670: USBDeviceInit();
 11736  011274  ECBF  F089         	call	i2_USBDeviceInit	;wreg free
 11737                           
 11738                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 11739  011278  88A0               	bsf	4000,4,c	;volatile
 11740                           
 11741                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 11742  01127A  0E04               	movlw	4
 11743  01127C  6E25               	movwf	_USBDeviceState,c	;volatile
 11744                           
 11745                           ;usb_device.c: 686: (UIR &= 0xFE);
 11746  01127E  9062               	bcf	3938,0,c	;volatile
 11747  011280                     i2l6928:
 11748                           
 11749                           ;usb_device.c: 687: }
 11750                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11751  011280  A862               	btfss	3938,4,c	;volatile
 11752  011282  D006               	goto	i2l6936
 11753  011284  010F               	movlb	15	; () banked
 11754  011286  A936               	btfss	54,4,b	;volatile
 11755  011288  D003               	goto	i2l6936
 11756                           
 11757                           ; BSR set to: 15
 11758                           ;usb_device.c: 693: {
 11759                           ;usb_device.c: 698: USBSuspend();
 11760  01128A  EC7C  F09B         	call	_USBSuspend	;wreg free
 11761                           
 11762                           ;usb_device.c: 701: (UIR &= 0xEF);
 11763  01128E  9862               	bcf	3938,4,c	;volatile
 11764  011290                     i2l6936:
 11765                           
 11766                           ;usb_device.c: 702: }
 11767                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 11768  011290  AC62               	btfss	3938,6,c	;volatile
 11769  011292  D019               	goto	i2l6952
 11770                           
 11771                           ;usb_device.c: 705: {
 11772                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 11773  011294  010F               	movlb	15	; () banked
 11774  011296  AD36               	btfss	54,6,b	;volatile
 11775  011298  D00E               	goto	i2l6942
 11776                           
 11777                           ; BSR set to: 15
 11778                           ;usb_device.c: 707: {
 11779                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11780  01129A  0E00               	movlw	0
 11781  01129C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11782  01129E  0E73               	movlw	115
 11783  0112A0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11784  0112A2  0E00               	movlw	0
 11785  0112A4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11786  0112A6  0E00               	movlw	0
 11787  0112A8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11788  0112AA  0E00               	movlw	0
 11789  0112AC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11790  0112AE  0E01               	movlw	1
 11791  0112B0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11792  0112B2  EC39  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11793  0112B6                     i2l6942:
 11794                           
 11795                           ;usb_device.c: 709: }
 11796                           ;usb_device.c: 710: (UIR &= 0xBF);
 11797  0112B6  9C62               	bcf	3938,6,c	;volatile
 11798                           
 11799                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 11800  0112B8  5028               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 11801  0112BA  A4D8               	btfss	status,2,c
 11802                           
 11803                           ;usb_device.c: 736: {
 11804                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11805  0112BC  0628               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 11806                           
 11807                           ;usb_device.c: 738: }
 11808                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11809  0112BE  5028               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 11810  0112C0  B4D8               	btfsc	status,2,c
 11811                           
 11812                           ;usb_device.c: 745: {
 11813                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11814  0112C2  EC78  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11815  0112C6                     i2l6952:
 11816                           
 11817                           ;usb_device.c: 747: }
 11818                           ;usb_device.c: 749: }
 11819                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 11820  0112C6  AA62               	btfss	3938,5,c	;volatile
 11821  0112C8  D004               	goto	i2l6958
 11822  0112CA  010F               	movlb	15	; () banked
 11823  0112CC  BB36               	btfsc	54,5,b	;volatile
 11824                           
 11825                           ; BSR set to: 15
 11826                           ;usb_device.c: 752: {
 11827                           ;usb_device.c: 753: USBStallHandler();
 11828  0112CE  ECEC  F099         	call	_USBStallHandler	;wreg free
 11829  0112D2                     i2l6958:
 11830                           
 11831                           ;usb_device.c: 754: }
 11832                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11833  0112D2  A262               	btfss	3938,1,c	;volatile
 11834  0112D4  D012               	goto	i2l6966
 11835  0112D6  010F               	movlb	15	; () banked
 11836  0112D8  A336               	btfss	54,1,b	;volatile
 11837  0112DA  D00F               	goto	i2l6966
 11838                           
 11839                           ; BSR set to: 15
 11840                           ;usb_device.c: 757: {
 11841                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 11842  0112DC  0E7F               	movlw	127
 11843  0112DE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11844  0112E0  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11845  0112E2  0E00               	movlw	0
 11846  0112E4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11847  0112E6  0E00               	movlw	0
 11848  0112E8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11849  0112EA  0E00               	movlw	0
 11850  0112EC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11851  0112EE  0E01               	movlw	1
 11852  0112F0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11853  0112F2  EC39  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11854                           
 11855                           ;usb_device.c: 759: {UEIR = 0;};
 11856  0112F6  0E00               	movlw	0
 11857  0112F8  6E63               	movwf	3939,c	;volatile
 11858  0112FA                     i2l6966:
 11859                           
 11860                           ;usb_device.c: 767: }
 11861                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11862  0112FA  0E04               	movlw	4
 11863  0112FC  6025               	cpfslt	_USBDeviceState,c	;volatile
 11864  0112FE  D002               	goto	i2l1090
 11865                           
 11866                           ;usb_device.c: 775: {
 11867                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11868  011300  98A1               	bcf	4001,4,c	;volatile
 11869                           
 11870                           ;usb_device.c: 777: return;
 11871  011302  0012               	return	
 11872  011304                     i2l1090:
 11873                           
 11874                           ;usb_device.c: 778: }
 11875                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 11876  011304  010F               	movlb	15	; () banked
 11877  011306  A736               	btfss	54,3,b	;volatile
 11878  011308  D038               	goto	i2l1091
 11879                           
 11880                           ; BSR set to: 15
 11881                           ;usb_device.c: 784: {
 11882                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11883  01130A  0E00               	movlw	0
 11884  01130C  6E4B               	movwf	USBDeviceTasks@i,c
 11885  01130E                     i2l6972:
 11886                           
 11887                           ; BSR set to: 15
 11888  01130E  0E03               	movlw	3
 11889  011310  644B               	cpfsgt	USBDeviceTasks@i,c
 11890  011312  D001               	goto	i2l1092
 11891  011314  D032               	goto	i2l1091
 11892  011316                     i2l1092:
 11893                           
 11894                           ;usb_device.c: 786: {
 11895                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 11896  011316  A662               	btfss	3938,3,c	;volatile
 11897  011318  D030               	goto	i2l1091
 11898                           
 11899                           ;usb_device.c: 788: {
 11900                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 11901  01131A  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 11902                           
 11903                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11904  01131E  302D               	rrcf	_USTATcopy,w,c	;volatile
 11905  011320  32E8               	rrcf	wreg,f,c
 11906  011322  32E8               	rrcf	wreg,f,c
 11907  011324  0B0F               	andlw	15
 11908  011326  6E2A               	movwf	_endpoint_number,c	;volatile
 11909                           
 11910                           ;usb_device.c: 793: (UIR &= 0xF7);
 11911  011328  9662               	bcf	3938,3,c	;volatile
 11912                           
 11913                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11914  01132A  B42D               	btfsc	_USTATcopy,2,c	;volatile
 11915  01132C  D007               	goto	i2l6986
 11916                           
 11917                           ;usb_device.c: 799: {
 11918                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 11919  01132E  502A               	movf	_endpoint_number,w,c	;volatile
 11920  011330  0D01               	mullw	1
 11921  011332  0E19               	movlw	low _ep_data_out
 11922  011334  24F3               	addwf	prodl,w,c
 11923  011336  6ED9               	movwf	fsr2l,c
 11924  011338  0E00               	movlw	high _ep_data_out
 11925  01133A  D006               	goto	L4
 11926  01133C                     i2l6986:
 11927                           
 11928                           ;usb_device.c: 802: else
 11929                           ;usb_device.c: 803: {
 11930                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 11931  01133C  502A               	movf	_endpoint_number,w,c	;volatile
 11932  01133E  0D01               	mullw	1
 11933  011340  0E16               	movlw	low _ep_data_in
 11934  011342  24F3               	addwf	prodl,w,c
 11935  011344  6ED9               	movwf	fsr2l,c
 11936  011346  0E00               	movlw	high _ep_data_in
 11937  011348                     L4:
 11938  011348  20F4               	addwfc	prodh,w,c
 11939  01134A  6EDA               	movwf	fsr2h,c
 11940  01134C  70DF               	btg	indf2,0,c
 11941                           
 11942                           ;usb_device.c: 805: }
 11943                           ;usb_device.c: 810: if(endpoint_number == 0)
 11944  01134E  502A               	movf	_endpoint_number,w,c	;volatile
 11945  011350  A4D8               	btfss	status,2,c
 11946  011352  D003               	goto	i2l6992
 11947                           
 11948                           ;usb_device.c: 811: {
 11949                           ;usb_device.c: 812: USBCtrlEPService();
 11950  011354  ECAB  F090         	call	_USBCtrlEPService	;wreg free
 11951                           
 11952                           ;usb_device.c: 813: }
 11953  011358  D00E               	goto	i2l6994
 11954  01135A                     i2l6992:
 11955                           
 11956                           ;usb_device.c: 814: else
 11957                           ;usb_device.c: 815: {
 11958                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 11959  01135A  0E00               	movlw	0
 11960  01135C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11961  01135E  0E72               	movlw	114
 11962  011360  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11963  011362  0E2D               	movlw	low _USTATcopy
 11964  011364  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11965  011366  0E00               	movlw	high _USTATcopy
 11966  011368  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11967  01136A  0E00               	movlw	0
 11968  01136C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11969  01136E  0E00               	movlw	0
 11970  011370  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11971  011372  EC39  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11972  011376                     i2l6994:
 11973  011376  2A4B               	incf	USBDeviceTasks@i,f,c
 11974  011378  D7CA               	goto	i2l6972
 11975  01137A                     i2l1091:
 11976                           
 11977                           ;usb_device.c: 822: }
 11978                           ;usb_device.c: 823: }
 11979                           ;usb_device.c: 824: }
 11980                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 11981  01137A  98A1               	bcf	4001,4,c	;volatile
 11982  01137C  0012               	return		;funcret
 11983  01137E                     __end_of_USBDeviceTasks:
 11984                           	opt stack 0
 11985                           pclatu	equ	0xFFB
 11986                           pclath	equ	0xFFA
 11987                           tblptru	equ	0xFF8
 11988                           tblptrh	equ	0xFF7
 11989                           tblptrl	equ	0xFF6
 11990                           tablat	equ	0xFF5
 11991                           prodh	equ	0xFF4
 11992                           prodl	equ	0xFF3
 11993                           intcon	equ	0xFF2
 11994                           intcon2	equ	0xFF1
 11995                           indf0	equ	0xFEF
 11996                           postinc0	equ	0xFEE
 11997                           fsr0h	equ	0xFEA
 11998                           fsr0l	equ	0xFE9
 11999                           wreg	equ	0xFE8
 12000                           indf1	equ	0xFE7
 12001                           postinc1	equ	0xFE6
 12002                           postdec1	equ	0xFE5
 12003                           fsr1h	equ	0xFE2
 12004                           fsr1l	equ	0xFE1
 12005                           indf2	equ	0xFDF
 12006                           postinc2	equ	0xFDE
 12007                           postdec2	equ	0xFDD
 12008                           plusw2	equ	0xFDB
 12009                           fsr2h	equ	0xFDA
 12010                           fsr2l	equ	0xFD9
 12011                           status	equ	0xFD8
 12012                           
 12013 ;; *************** function i2_USBDeviceInit *****************
 12014 ;; Defined at:
 12015 ;;		line 298 in file "../My_library/usb/usb_device.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;		None
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 12020 ;; Return value:  Size  Location     Type
 12021 ;;		None               void
 12022 ;; Registers used:
 12023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12033 ;;Total ram usage:        1 bytes
 12034 ;; Hardware stack levels used:    1
 12035 ;; Hardware stack levels required when called:    1
 12036 ;; This function calls:
 12037 ;;		i2_memset
 12038 ;; This function is called by:
 12039 ;;		_USBDeviceTasks
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           	psect	text62
 12044  01137E                     __ptext62:
 12045                           	opt stack 0
 12046  01137E                     i2_USBDeviceInit:
 12047                           	opt stack 20
 12048                           
 12049                           ;usb_device.c: 300: uint8_t i;
 12050                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 12051                           
 12052                           ;incstack = 0
 12053  01137E  98A0               	bcf	4000,4,c	;volatile
 12054                           
 12055                           ;usb_device.c: 305: {UEIR = 0;};
 12056  011380  0E00               	movlw	0
 12057  011382  6E63               	movwf	3939,c	;volatile
 12058                           
 12059                           ;usb_device.c: 308: {UIR = 0;};
 12060  011384  0E00               	movlw	0
 12061  011386  6E62               	movwf	3938,c	;volatile
 12062                           
 12063                           ;usb_device.c: 311: UEP0 = 0;
 12064  011388  0E00               	movlw	0
 12065  01138A  010F               	movlb	15	; () banked
 12066  01138C  6F26               	movwf	38,b	;volatile
 12067                           
 12068                           ; BSR set to: 15
 12069                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 12070  01138E  0E27               	movlw	39
 12071  011390  6E2E               	movwf	i2memset@p1,c
 12072  011392  0E0F               	movlw	15
 12073  011394  6E2F               	movwf	i2memset@p1+1,c
 12074  011396  0E00               	movlw	0
 12075  011398  6E31               	movwf	i2memset@c+1,c
 12076  01139A  0E00               	movlw	0
 12077  01139C  6E30               	movwf	i2memset@c,c
 12078  01139E  0E00               	movlw	0
 12079  0113A0  6E33               	movwf	i2memset@n+1,c
 12080  0113A2  0E02               	movlw	2
 12081  0113A4  6E32               	movwf	i2memset@n,c
 12082  0113A6  EC92  F09B         	call	i2_memset	;wreg free
 12083                           
 12084                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12085  0113AA  0E16               	movlw	22
 12086  0113AC  010F               	movlb	15	; () banked
 12087  0113AE  6F39               	movwf	57,b	;volatile
 12088                           
 12089                           ; BSR set to: 15
 12090  0113B0  0E9F               	movlw	159
 12091  0113B2  010F               	movlb	15	; () banked
 12092  0113B4  6F37               	movwf	55,b	;volatile
 12093                           
 12094                           ; BSR set to: 15
 12095  0113B6  0E7B               	movlw	123
 12096  0113B8  010F               	movlb	15	; () banked
 12097  0113BA  6F36               	movwf	54,b	;volatile
 12098                           
 12099                           ; BSR set to: 15
 12100                           ;usb_device.c: 318: ;
 12101                           ;usb_device.c: 321: ;
 12102                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 12103  0113BC  0E00               	movlw	0
 12104  0113BE  6E36               	movwf	i2USBDeviceInit@i,c
 12105  0113C0                     i2l6646:
 12106                           
 12107                           ; BSR set to: 15
 12108  0113C0  0E0B               	movlw	11
 12109  0113C2  6436               	cpfsgt	i2USBDeviceInit@i,c
 12110  0113C4  D001               	goto	i2l6650
 12111  0113C6  D00E               	goto	i2l1068
 12112  0113C8                     i2l6650:
 12113                           
 12114                           ;usb_device.c: 325: {
 12115                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 12116  0113C8  5036               	movf	i2USBDeviceInit@i,w,c
 12117  0113CA  0D04               	mullw	4
 12118  0113CC  0E00               	movlw	0
 12119  0113CE  24F3               	addwf	prodl,w,c
 12120  0113D0  6ED9               	movwf	fsr2l,c
 12121  0113D2  0E0D               	movlw	13
 12122  0113D4  20F4               	addwfc	prodh,w,c
 12123  0113D6  6EDA               	movwf	fsr2h,c
 12124  0113D8  6ADE               	clrf	postinc2,c
 12125  0113DA  6ADE               	clrf	postinc2,c
 12126  0113DC  6ADE               	clrf	postinc2,c
 12127  0113DE  6ADD               	clrf	postdec2,c
 12128  0113E0  2A36               	incf	i2USBDeviceInit@i,f,c
 12129  0113E2  D7EE               	goto	i2l6646
 12130  0113E4                     i2l1068:
 12131                           
 12132                           ;usb_device.c: 327: }
 12133                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 12134  0113E4  8C65               	bsf	3941,6,c	;volatile
 12135                           
 12136                           ;usb_device.c: 333: UADDR = 0x00;
 12137  0113E6  0E00               	movlw	0
 12138  0113E8  010F               	movlb	15	; () banked
 12139  0113EA  6F38               	movwf	56,b	;volatile
 12140                           
 12141                           ; BSR set to: 15
 12142                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 12143  0113EC  9865               	bcf	3941,4,c	;volatile
 12144                           
 12145                           ; BSR set to: 15
 12146                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 12147  0113EE  9C65               	bcf	3941,6,c	;volatile
 12148                           
 12149                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 12150  0113F0  D009               	goto	i2l6670
 12151  0113F2                     i2l6662:
 12152                           
 12153                           ;usb_device.c: 343: {
 12154                           ;usb_device.c: 344: (UIR &= 0xF7);
 12155  0113F2  9662               	bcf	3938,3,c	;volatile
 12156                           
 12157                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 12158  0113F4  0E00               	movlw	0
 12159  0113F6  6E0D               	movwf	_inPipes+3,c	;volatile
 12160                           
 12161                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 12162  0113F8  0E00               	movlw	0
 12163  0113FA  6E04               	movwf	_outPipes+3,c	;volatile
 12164                           
 12165                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 12166  0113FC  0E00               	movlw	0
 12167  0113FE  6E06               	movwf	_outPipes+5,c	;volatile
 12168  011400  0E00               	movlw	0
 12169  011402  6E05               	movwf	_outPipes+4,c	;volatile
 12170  011404                     i2l6670:
 12171  011404  B662               	btfsc	3938,3,c	;volatile
 12172  011406  D7F5               	goto	i2l6662
 12173                           
 12174                           ;usb_device.c: 349: }
 12175                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 12176  011408  0E01               	movlw	1
 12177  01140A  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12178                           
 12179                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 12180  01140C  0E01               	movlw	1
 12181  01140E  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12182                           
 12183                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 12184  011410  0E00               	movlw	0
 12185  011412  6E22               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12186                           
 12187                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 12188  011414  0E00               	movlw	0
 12189  011416  6E23               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12190                           
 12191                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 12192  011418  0E00               	movlw	0
 12193  01141A  0100               	movlb	0	; () banked
 12194  01141C  6FB9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12195                           
 12196                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 12197  01141E  0E00               	movlw	0
 12198  011420  6E36               	movwf	i2USBDeviceInit@i,c
 12199  011422                     i2l6674:
 12200                           
 12201                           ; BSR set to: 0
 12202  011422  0E02               	movlw	2
 12203  011424  6436               	cpfsgt	i2USBDeviceInit@i,c
 12204  011426  D001               	goto	i2l6678
 12205  011428  D02E               	goto	i2l6684
 12206  01142A                     i2l6678:
 12207                           
 12208                           ;usb_device.c: 363: {
 12209                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 12210  01142A  5036               	movf	i2USBDeviceInit@i,w,c
 12211  01142C  0D02               	mullw	2
 12212  01142E  0E10               	movlw	low _pBDTEntryIn
 12213  011430  24F3               	addwf	prodl,w,c
 12214  011432  6ED9               	movwf	fsr2l,c
 12215  011434  0E00               	movlw	high _pBDTEntryIn
 12216  011436  20F4               	addwfc	prodh,w,c
 12217  011438  6EDA               	movwf	fsr2h,c
 12218  01143A  0E00               	movlw	0
 12219  01143C  6EDE               	movwf	postinc2,c
 12220  01143E  0E00               	movlw	0
 12221  011440  6EDD               	movwf	postdec2,c
 12222                           
 12223                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 12224  011442  5036               	movf	i2USBDeviceInit@i,w,c
 12225  011444  0D02               	mullw	2
 12226  011446  0E9E               	movlw	low _pBDTEntryOut
 12227  011448  24F3               	addwf	prodl,w,c
 12228  01144A  6ED9               	movwf	fsr2l,c
 12229  01144C  0E00               	movlw	high _pBDTEntryOut
 12230  01144E  20F4               	addwfc	prodh,w,c
 12231  011450  6EDA               	movwf	fsr2h,c
 12232  011452  0E00               	movlw	0
 12233  011454  6EDE               	movwf	postinc2,c
 12234  011456  0E00               	movlw	0
 12235  011458  6EDD               	movwf	postdec2,c
 12236                           
 12237                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 12238  01145A  5036               	movf	i2USBDeviceInit@i,w,c
 12239  01145C  0D01               	mullw	1
 12240  01145E  0E16               	movlw	low _ep_data_in
 12241  011460  24F3               	addwf	prodl,w,c
 12242  011462  6ED9               	movwf	fsr2l,c
 12243  011464  0E00               	movlw	high _ep_data_in
 12244  011466  20F4               	addwfc	prodh,w,c
 12245  011468  6EDA               	movwf	fsr2h,c
 12246  01146A  0E00               	movlw	0
 12247  01146C  6EDF               	movwf	indf2,c
 12248                           
 12249                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 12250  01146E  5036               	movf	i2USBDeviceInit@i,w,c
 12251  011470  0D01               	mullw	1
 12252  011472  0E19               	movlw	low _ep_data_out
 12253  011474  24F3               	addwf	prodl,w,c
 12254  011476  6ED9               	movwf	fsr2l,c
 12255  011478  0E00               	movlw	high _ep_data_out
 12256  01147A  20F4               	addwfc	prodh,w,c
 12257  01147C  6EDA               	movwf	fsr2h,c
 12258  01147E  0E00               	movlw	0
 12259  011480  6EDF               	movwf	indf2,c
 12260  011482  2A36               	incf	i2USBDeviceInit@i,f,c
 12261  011484  D7CE               	goto	i2l6674
 12262  011486                     i2l6684:
 12263                           
 12264                           ;usb_device.c: 368: }
 12265                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12266  011486  0E08               	movlw	8
 12267  011488  6E10               	movwf	_pBDTEntryIn,c
 12268  01148A  0E0D               	movlw	13
 12269  01148C  6E11               	movwf	_pBDTEntryIn+1,c
 12270                           
 12271                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 12272  01148E  0E16               	movlw	22
 12273  011490  010F               	movlb	15	; () banked
 12274  011492  6F26               	movwf	38,b	;volatile
 12275                           
 12276                           ; BSR set to: 15
 12277                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12278  011494  0E0D               	movlw	13
 12279  011496  010D               	movlb	13	; () banked
 12280  011498  6F03               	movwf	3,b	;volatile
 12281  01149A  0E30               	movlw	48
 12282  01149C  6F02               	movwf	2,b	;volatile
 12283                           
 12284                           ; BSR set to: 13
 12285                           ;usb_device.c: 376: BDT[0].CNT = 8;
 12286  01149E  0E08               	movlw	8
 12287  0114A0  010D               	movlb	13	; () banked
 12288  0114A2  6F01               	movwf	1,b	;volatile
 12289                           
 12290                           ; BSR set to: 13
 12291                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 12292  0114A4  0E04               	movlw	4
 12293  0114A6  010D               	movlb	13	; () banked
 12294  0114A8  6F00               	movwf	0,b	;volatile
 12295                           
 12296                           ; BSR set to: 13
 12297                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 12298  0114AA  010D               	movlb	13	; () banked
 12299  0114AC  8F00               	bsf	0,7,b	;volatile
 12300                           
 12301                           ; BSR set to: 13
 12302                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 12303  0114AE  0E00               	movlw	0
 12304  0114B0  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 12305                           
 12306                           ; BSR set to: 13
 12307                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 12308  0114B2  0E00               	movlw	0
 12309  0114B4  6E25               	movwf	_USBDeviceState,c	;volatile
 12310                           
 12311                           ; BSR set to: 13
 12312  0114B6  0012               	return		;funcret
 12313  0114B8                     __end_ofi2_USBDeviceInit:
 12314                           	opt stack 0
 12315                           pclatu	equ	0xFFB
 12316                           pclath	equ	0xFFA
 12317                           tblptru	equ	0xFF8
 12318                           tblptrh	equ	0xFF7
 12319                           tblptrl	equ	0xFF6
 12320                           tablat	equ	0xFF5
 12321                           prodh	equ	0xFF4
 12322                           prodl	equ	0xFF3
 12323                           intcon	equ	0xFF2
 12324                           intcon2	equ	0xFF1
 12325                           indf0	equ	0xFEF
 12326                           postinc0	equ	0xFEE
 12327                           fsr0h	equ	0xFEA
 12328                           fsr0l	equ	0xFE9
 12329                           wreg	equ	0xFE8
 12330                           indf1	equ	0xFE7
 12331                           postinc1	equ	0xFE6
 12332                           postdec1	equ	0xFE5
 12333                           fsr1h	equ	0xFE2
 12334                           fsr1l	equ	0xFE1
 12335                           indf2	equ	0xFDF
 12336                           postinc2	equ	0xFDE
 12337                           postdec2	equ	0xFDD
 12338                           plusw2	equ	0xFDB
 12339                           fsr2h	equ	0xFDA
 12340                           fsr2l	equ	0xFD9
 12341                           status	equ	0xFD8
 12342                           
 12343 ;; *************** function _USBWakeFromSuspend *****************
 12344 ;; Defined at:
 12345 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 12346 ;; Parameters:    Size  Location     Type
 12347 ;;		None
 12348 ;; Auto vars:     Size  Location     Type
 12349 ;;		None
 12350 ;; Return value:  Size  Location     Type
 12351 ;;		None               void
 12352 ;; Registers used:
 12353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12354 ;; Tracked objects:
 12355 ;;		On entry : 0/0
 12356 ;;		On exit  : 0/0
 12357 ;;		Unchanged: 0/0
 12358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12363 ;;Total ram usage:        0 bytes
 12364 ;; Hardware stack levels used:    1
 12365 ;; Hardware stack levels required when called:    4
 12366 ;; This function calls:
 12367 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12368 ;; This function is called by:
 12369 ;;		_USBDeviceTasks
 12370 ;; This function uses a non-reentrant model
 12371 ;;
 12372                           
 12373                           	psect	text63
 12374  0135E2                     __ptext63:
 12375                           	opt stack 0
 12376  0135E2                     _USBWakeFromSuspend:
 12377                           	opt stack 17
 12378                           
 12379                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 12380                           
 12381                           ; BSR set to: 13
 12382                           ;incstack = 0
 12383  0135E2  0E00               	movlw	0
 12384  0135E4  0100               	movlb	0	; () banked
 12385  0135E6  6FB9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12389  0135E8  0E00               	movlw	0
 12390  0135EA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12391  0135EC  0E74               	movlw	116
 12392  0135EE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12393  0135F0  0E00               	movlw	0
 12394  0135F2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12395  0135F4  0E00               	movlw	0
 12396  0135F6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12397  0135F8  0E00               	movlw	0
 12398  0135FA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12399  0135FC  0E00               	movlw	0
 12400  0135FE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12401  013600  EC39  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12402                           
 12403                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 12404  013604  9265               	bcf	3941,1,c	;volatile
 12405                           
 12406                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 12407  013606  010F               	movlb	15	; () banked
 12408  013608  9536               	bcf	54,2,b	;volatile
 12409                           
 12410                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 12411  01360A  D001               	goto	i2l6572
 12412  01360C                     i2l6570:
 12413                           
 12414                           ;usb_device.c: 2342: {
 12415                           ;usb_device.c: 2343: (UIR &= 0xFB);
 12416  01360C  9462               	bcf	3938,2,c	;volatile
 12417  01360E                     i2l6572:
 12418  01360E  A462               	btfss	3938,2,c	;volatile
 12419  013610  0012               	return	
 12420  013612  D7FC               	goto	i2l6570
 12421  013614                     __end_of_USBWakeFromSuspend:
 12422                           	opt stack 0
 12423                           pclatu	equ	0xFFB
 12424                           pclath	equ	0xFFA
 12425                           tblptru	equ	0xFF8
 12426                           tblptrh	equ	0xFF7
 12427                           tblptrl	equ	0xFF6
 12428                           tablat	equ	0xFF5
 12429                           prodh	equ	0xFF4
 12430                           prodl	equ	0xFF3
 12431                           intcon	equ	0xFF2
 12432                           intcon2	equ	0xFF1
 12433                           indf0	equ	0xFEF
 12434                           postinc0	equ	0xFEE
 12435                           fsr0h	equ	0xFEA
 12436                           fsr0l	equ	0xFE9
 12437                           wreg	equ	0xFE8
 12438                           indf1	equ	0xFE7
 12439                           postinc1	equ	0xFE6
 12440                           postdec1	equ	0xFE5
 12441                           fsr1h	equ	0xFE2
 12442                           fsr1l	equ	0xFE1
 12443                           indf2	equ	0xFDF
 12444                           postinc2	equ	0xFDE
 12445                           postdec2	equ	0xFDD
 12446                           plusw2	equ	0xFDB
 12447                           fsr2h	equ	0xFDA
 12448                           fsr2l	equ	0xFD9
 12449                           status	equ	0xFD8
 12450                           
 12451 ;; *************** function _USBSuspend *****************
 12452 ;; Defined at:
 12453 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;		None
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;		None
 12458 ;; Return value:  Size  Location     Type
 12459 ;;		None               void
 12460 ;; Registers used:
 12461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12471 ;;Total ram usage:        0 bytes
 12472 ;; Hardware stack levels used:    1
 12473 ;; Hardware stack levels required when called:    4
 12474 ;; This function calls:
 12475 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12476 ;; This function is called by:
 12477 ;;		_USBDeviceTasks
 12478 ;; This function uses a non-reentrant model
 12479 ;;
 12480                           
 12481                           	psect	text64
 12482  0136F8                     __ptext64:
 12483                           	opt stack 0
 12484  0136F8                     _USBSuspend:
 12485                           	opt stack 17
 12486                           
 12487                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 12488                           
 12489                           ;incstack = 0
 12490  0136F8  010F               	movlb	15	; () banked
 12491  0136FA  8536               	bsf	54,2,b	;volatile
 12492                           
 12493                           ; BSR set to: 15
 12494                           ;usb_device.c: 2271: (UIR &= 0xEF);
 12495  0136FC  9862               	bcf	3938,4,c	;volatile
 12496                           
 12497                           ; BSR set to: 15
 12498                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 12499  0136FE  8265               	bsf	3941,1,c	;volatile
 12500                           
 12501                           ; BSR set to: 15
 12502                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 12503  013700  0E01               	movlw	1
 12504  013702  0100               	movlb	0	; () banked
 12505  013704  6FB9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12509  013706  0E00               	movlw	0
 12510  013708  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12511  01370A  0E75               	movlw	117
 12512  01370C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12513  01370E  0E00               	movlw	0
 12514  013710  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12515  013712  0E00               	movlw	0
 12516  013714  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12517  013716  0E00               	movlw	0
 12518  013718  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12519  01371A  0E00               	movlw	0
 12520  01371C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12521  01371E  EC39  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12522  013722  0012               	return		;funcret
 12523  013724                     __end_of_USBSuspend:
 12524                           	opt stack 0
 12525                           pclatu	equ	0xFFB
 12526                           pclath	equ	0xFFA
 12527                           tblptru	equ	0xFF8
 12528                           tblptrh	equ	0xFF7
 12529                           tblptrl	equ	0xFF6
 12530                           tablat	equ	0xFF5
 12531                           prodh	equ	0xFF4
 12532                           prodl	equ	0xFF3
 12533                           intcon	equ	0xFF2
 12534                           intcon2	equ	0xFF1
 12535                           indf0	equ	0xFEF
 12536                           postinc0	equ	0xFEE
 12537                           fsr0h	equ	0xFEA
 12538                           fsr0l	equ	0xFE9
 12539                           wreg	equ	0xFE8
 12540                           indf1	equ	0xFE7
 12541                           postinc1	equ	0xFE6
 12542                           postdec1	equ	0xFE5
 12543                           fsr1h	equ	0xFE2
 12544                           fsr1l	equ	0xFE1
 12545                           indf2	equ	0xFDF
 12546                           postinc2	equ	0xFDE
 12547                           postdec2	equ	0xFDD
 12548                           plusw2	equ	0xFDB
 12549                           fsr2h	equ	0xFDA
 12550                           fsr2l	equ	0xFD9
 12551                           status	equ	0xFD8
 12552                           
 12553 ;; *************** function _USBStallHandler *****************
 12554 ;; Defined at:
 12555 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;		None
 12558 ;; Auto vars:     Size  Location     Type
 12559 ;;		None
 12560 ;; Return value:  Size  Location     Type
 12561 ;;		None               void
 12562 ;; Registers used:
 12563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12564 ;; Tracked objects:
 12565 ;;		On entry : 0/0
 12566 ;;		On exit  : 0/0
 12567 ;;		Unchanged: 0/0
 12568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12573 ;;Total ram usage:        1 bytes
 12574 ;; Hardware stack levels used:    1
 12575 ;; This function calls:
 12576 ;;		Nothing
 12577 ;; This function is called by:
 12578 ;;		_USBDeviceTasks
 12579 ;; This function uses a non-reentrant model
 12580 ;;
 12581                           
 12582                           	psect	text65
 12583  0133D8                     __ptext65:
 12584                           	opt stack 0
 12585  0133D8                     _USBStallHandler:
 12586                           	opt stack 21
 12587                           
 12588                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 12589                           
 12590                           ;incstack = 0
 12591  0133D8  010F               	movlb	15	; () banked
 12592  0133DA  A126               	btfss	38,0,b	;volatile
 12593  0133DC  D01E               	goto	i2l1230
 12594                           
 12595                           ; BSR set to: 15
 12596                           ;usb_device.c: 2215: {
 12597                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12598  0133DE  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12599  0133E2  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12600  0133E6  0E80               	movlw	128
 12601  0133E8  18DE               	xorwf	postinc2,w,c
 12602  0133EA  A4D8               	btfss	status,2,c
 12603  0133EC  D014               	goto	i2l3634
 12604                           
 12605                           ; BSR set to: 15
 12606  0133EE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 12607  0133F2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12608  0133F6  0E84               	movlw	132
 12609  0133F8  18DE               	xorwf	postinc2,w,c
 12610  0133FA  A4D8               	btfss	status,2,c
 12611  0133FC  D00C               	goto	i2l3634
 12612                           
 12613                           ; BSR set to: 15
 12614                           ;usb_device.c: 2218: {
 12615                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12616  0133FE  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12617  013402  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12618  013406  0E0C               	movlw	12
 12619  013408  6EDF               	movwf	indf2,c
 12620                           
 12621                           ; BSR set to: 15
 12622                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12623  01340A  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12624  01340E  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12625  013412  0E00               	movlw	0
 12626  013414  8EDB               	bsf	plusw2,7,c
 12627  013416                     i2l3634:
 12628                           
 12629                           ; BSR set to: 15
 12630                           ;usb_device.c: 2222: }
 12631                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 12632  013416  010F               	movlb	15	; () banked
 12633  013418  9126               	bcf	38,0,b	;volatile
 12634  01341A                     i2l1230:
 12635                           
 12636                           ; BSR set to: 15
 12637                           ;usb_device.c: 2224: }
 12638                           ;usb_device.c: 2226: (UIR &= 0xDF);
 12639  01341A  9A62               	bcf	3938,5,c	;volatile
 12640                           
 12641                           ; BSR set to: 15
 12642  01341C  0012               	return		;funcret
 12643  01341E                     __end_of_USBStallHandler:
 12644                           	opt stack 0
 12645                           pclatu	equ	0xFFB
 12646                           pclath	equ	0xFFA
 12647                           tblptru	equ	0xFF8
 12648                           tblptrh	equ	0xFF7
 12649                           tblptrl	equ	0xFF6
 12650                           tablat	equ	0xFF5
 12651                           prodh	equ	0xFF4
 12652                           prodl	equ	0xFF3
 12653                           intcon	equ	0xFF2
 12654                           intcon2	equ	0xFF1
 12655                           indf0	equ	0xFEF
 12656                           postinc0	equ	0xFEE
 12657                           fsr0h	equ	0xFEA
 12658                           fsr0l	equ	0xFE9
 12659                           wreg	equ	0xFE8
 12660                           indf1	equ	0xFE7
 12661                           postinc1	equ	0xFE6
 12662                           postdec1	equ	0xFE5
 12663                           fsr1h	equ	0xFE2
 12664                           fsr1l	equ	0xFE1
 12665                           indf2	equ	0xFDF
 12666                           postinc2	equ	0xFDE
 12667                           postdec2	equ	0xFDD
 12668                           plusw2	equ	0xFDB
 12669                           fsr2h	equ	0xFDA
 12670                           fsr2l	equ	0xFD9
 12671                           status	equ	0xFD8
 12672                           
 12673 ;; *************** function _USBCtrlEPService *****************
 12674 ;; Defined at:
 12675 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;		None
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 12680 ;; Return value:  Size  Location     Type
 12681 ;;		None               void
 12682 ;; Registers used:
 12683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12684 ;; Tracked objects:
 12685 ;;		On entry : 0/0
 12686 ;;		On exit  : 0/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12693 ;;Total ram usage:        3 bytes
 12694 ;; Hardware stack levels used:    1
 12695 ;; Hardware stack levels required when called:    7
 12696 ;; This function calls:
 12697 ;;		_USBCtrlTrfInHandler
 12698 ;;		_USBCtrlTrfOutHandler
 12699 ;;		_USBCtrlTrfSetupHandler
 12700 ;; This function is called by:
 12701 ;;		_USBDeviceTasks
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           
 12705                           	psect	text66
 12706  012156                     __ptext66:
 12707                           	opt stack 0
 12708  012156                     _USBCtrlEPService:
 12709                           	opt stack 14
 12710                           
 12711                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 12712                           
 12713                           ; BSR set to: 15
 12714                           ;incstack = 0
 12715  012156  0E2D               	movlw	45
 12716  012158  6E28               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 12717                           
 12718                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 12719  01215A  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 12720  01215E  0EFD               	movlw	253
 12721  012160  1648               	andwf	??_USBCtrlEPService,f,c
 12722  012162  A4D8               	btfss	status,2,c
 12723  012164  D057               	goto	i2l6616
 12724                           
 12725                           ;usb_device.c: 2380: {
 12726                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 12727  012166  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 12728  01216A  90D8               	bcf	status,0,c
 12729  01216C  3248               	rrcf	??_USBCtrlEPService,f,c
 12730  01216E  0E3F               	movlw	63
 12731  012170  1648               	andwf	??_USBCtrlEPService,f,c
 12732  012172  5048               	movf	??_USBCtrlEPService,w,c
 12733  012174  0D04               	mullw	4
 12734  012176  0E00               	movlw	0
 12735  012178  24F3               	addwf	prodl,w,c
 12736  01217A  6E1C               	movwf	_pBDTEntryEP0OutCurrent,c
 12737  01217C  0E0D               	movlw	13
 12738  01217E  20F4               	addwfc	prodh,w,c
 12739  012180  6E1D               	movwf	_pBDTEntryEP0OutCurrent+1,c
 12740                           
 12741                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12742  012182  C01C  F01E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12743  012186  C01D  F01F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12744                           
 12745                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 12746  01218A  0E04               	movlw	4
 12747  01218C  1A1E               	xorwf	_pBDTEntryEP0OutNext,f,c
 12748                           
 12749                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12750  01218E  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12751  012192  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12752  012196  30DF               	rrcf	indf2,w,c
 12753  012198  32E8               	rrcf	wreg,f,c
 12754  01219A  0B0F               	andlw	15
 12755  01219C  0A0D               	xorlw	13
 12756  01219E  A4D8               	btfss	status,2,c
 12757  0121A0  D036               	goto	i2l6614
 12758                           
 12759                           ;usb_device.c: 2397: {
 12760                           ;usb_device.c: 2398: unsigned char setup_cnt;
 12761                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 12762  0121A2  0E00               	movlw	0
 12763  0121A4  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 12764  0121A6                     i2l6598:
 12765  0121A6  0E07               	movlw	7
 12766  0121A8  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 12767  0121AA  D001               	goto	i2l6602
 12768  0121AC  D023               	goto	i2l6610
 12769  0121AE                     i2l6602:
 12770                           
 12771                           ;usb_device.c: 2405: {
 12772                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 12773  0121AE  EE20 F002          	lfsr	2,2
 12774  0121B2  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 12775  0121B4  26D9               	addwf	fsr2l,f,c
 12776  0121B6  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12777  0121B8  22DA               	addwfc	fsr2h,f,c
 12778  0121BA  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 12779  0121BE  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 12780  0121C2  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 12781  0121C6  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 12782  0121CA  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 12783  0121CC  0D01               	mullw	1
 12784  0121CE  0E30               	movlw	48
 12785  0121D0  24F3               	addwf	prodl,w,c
 12786  0121D2  6EE1               	movwf	fsr1l,c
 12787  0121D4  0E0D               	movlw	13
 12788  0121D6  20F4               	addwfc	prodh,w,c
 12789  0121D8  6EE2               	movwf	fsr1h,c
 12790  0121DA  CFDF FFE7          	movff	indf2,indf1
 12791                           
 12792                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 12793  0121DE  EE20 F002          	lfsr	2,2
 12794  0121E2  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 12795  0121E4  26D9               	addwf	fsr2l,f,c
 12796  0121E6  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12797  0121E8  22DA               	addwfc	fsr2h,f,c
 12798  0121EA  2ADE               	incf	postinc2,f,c
 12799  0121EC  0E00               	movlw	0
 12800  0121EE  22DD               	addwfc	postdec2,f,c
 12801  0121F0  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 12802  0121F2  D7D9               	goto	i2l6598
 12803  0121F4                     i2l6610:
 12804                           
 12805                           ;usb_device.c: 2408: }
 12806                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12807  0121F4  EE20 F002          	lfsr	2,2
 12808  0121F8  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 12809  0121FA  26D9               	addwf	fsr2l,f,c
 12810  0121FC  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 12811  0121FE  22DA               	addwfc	fsr2h,f,c
 12812  012200  0E30               	movlw	48
 12813  012202  6EDE               	movwf	postinc2,c
 12814  012204  0E0D               	movlw	13
 12815  012206  6EDD               	movwf	postdec2,c
 12816                           
 12817                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 12818  012208  EC65  F097         	call	_USBCtrlTrfSetupHandler	;wreg free
 12819                           
 12820                           ;usb_device.c: 2413: }
 12821  01220C  0012               	return	
 12822  01220E                     i2l6614:
 12823                           
 12824                           ;usb_device.c: 2414: else
 12825                           ;usb_device.c: 2415: {
 12826                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 12827  01220E  EC20  F099         	call	_USBCtrlTrfOutHandler	;wreg free
 12828                           
 12829                           ;usb_device.c: 2418: }
 12830                           ;usb_device.c: 2419: }
 12831  012212  0012               	return	
 12832  012214                     i2l6616:
 12833                           
 12834                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 12835  012214  502D               	movf	_USTATcopy,w,c	;volatile
 12836  012216  0BFD               	andlw	253
 12837  012218  0A04               	xorlw	4
 12838  01221A  A4D8               	btfss	status,2,c
 12839  01221C  0012               	return	
 12840                           
 12841                           ;usb_device.c: 2421: {
 12842                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 12843  01221E  EC51  F093         	call	_USBCtrlTrfInHandler	;wreg free
 12844  012222  0012               	return	
 12845  012224                     __end_of_USBCtrlEPService:
 12846                           	opt stack 0
 12847                           pclatu	equ	0xFFB
 12848                           pclath	equ	0xFFA
 12849                           tblptru	equ	0xFF8
 12850                           tblptrh	equ	0xFF7
 12851                           tblptrl	equ	0xFF6
 12852                           tablat	equ	0xFF5
 12853                           prodh	equ	0xFF4
 12854                           prodl	equ	0xFF3
 12855                           intcon	equ	0xFF2
 12856                           intcon2	equ	0xFF1
 12857                           indf0	equ	0xFEF
 12858                           postinc0	equ	0xFEE
 12859                           fsr0h	equ	0xFEA
 12860                           fsr0l	equ	0xFE9
 12861                           wreg	equ	0xFE8
 12862                           indf1	equ	0xFE7
 12863                           postinc1	equ	0xFE6
 12864                           postdec1	equ	0xFE5
 12865                           fsr1h	equ	0xFE2
 12866                           fsr1l	equ	0xFE1
 12867                           indf2	equ	0xFDF
 12868                           postinc2	equ	0xFDE
 12869                           postdec2	equ	0xFDD
 12870                           plusw2	equ	0xFDB
 12871                           fsr2h	equ	0xFDA
 12872                           fsr2l	equ	0xFD9
 12873                           status	equ	0xFD8
 12874                           
 12875 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12876 ;; Defined at:
 12877 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;		None
 12880 ;; Auto vars:     Size  Location     Type
 12881 ;;		None
 12882 ;; Return value:  Size  Location     Type
 12883 ;;		None               void
 12884 ;; Registers used:
 12885 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/0
 12888 ;;		On exit  : 0/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12895 ;;Total ram usage:        0 bytes
 12896 ;; Hardware stack levels used:    1
 12897 ;; Hardware stack levels required when called:    6
 12898 ;; This function calls:
 12899 ;;		_USBCheckStdRequest
 12900 ;;		_USBCtrlEPServiceComplete
 12901 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12902 ;; This function is called by:
 12903 ;;		_USBCtrlEPService
 12904 ;; This function uses a non-reentrant model
 12905 ;;
 12906                           
 12907                           	psect	text67
 12908  012ECA                     __ptext67:
 12909                           	opt stack 0
 12910  012ECA                     _USBCtrlTrfSetupHandler:
 12911                           	opt stack 14
 12912                           
 12913                           ;usb_device.c: 2474: shortPacketStatus = 0;
 12914                           
 12915                           ;incstack = 0
 12916  012ECA  0E00               	movlw	0
 12917  012ECC  6E2B               	movwf	_shortPacketStatus,c	;volatile
 12918                           
 12919                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 12920  012ECE  0E00               	movlw	0
 12921  012ED0  6E24               	movwf	_USBDeferStatusStagePacket,c	;volatile
 12922                           
 12923                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 12924  012ED2  0E00               	movlw	0
 12925  012ED4  6E22               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12926                           
 12927                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 12928  012ED6  0E00               	movlw	0
 12929  012ED8  6E23               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12930                           
 12931                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 12932  012EDA  0E00               	movlw	0
 12933  012EDC  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 12934                           
 12935                           ;usb_device.c: 2479: controlTransferState = 0;
 12936  012EDE  0E00               	movlw	0
 12937  012EE0  6E29               	movwf	_controlTransferState,c	;volatile
 12938                           
 12939                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12940  012EE2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 12941  012EE6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12942  012EEA  0E7F               	movlw	127
 12943  012EEC  16DF               	andwf	indf2,f,c
 12944                           
 12945                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12946  012EEE  0E04               	movlw	4
 12947  012EF0  1A10               	xorwf	_pBDTEntryIn,f,c
 12948                           
 12949                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12950  012EF2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 12951  012EF6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12952  012EFA  0E7F               	movlw	127
 12953  012EFC  16DF               	andwf	indf2,f,c
 12954                           
 12955                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12956  012EFE  0E04               	movlw	4
 12957  012F00  1A10               	xorwf	_pBDTEntryIn,f,c
 12958                           
 12959                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12960  012F02  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12961  012F06  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12962  012F0A  0E7F               	movlw	127
 12963  012F0C  16DF               	andwf	indf2,f,c
 12964                           
 12965                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 12966  012F0E  0E00               	movlw	0
 12967  012F10  6E0D               	movwf	_inPipes+3,c	;volatile
 12968                           
 12969                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 12970  012F12  0E00               	movlw	0
 12971  012F14  6E0F               	movwf	_inPipes+5,c	;volatile
 12972  012F16  0E00               	movlw	0
 12973  012F18  6E0E               	movwf	_inPipes+4,c	;volatile
 12974                           
 12975                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 12976  012F1A  0E00               	movlw	0
 12977  012F1C  6E04               	movwf	_outPipes+3,c	;volatile
 12978                           
 12979                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 12980  012F1E  0E00               	movlw	0
 12981  012F20  6E06               	movwf	_outPipes+5,c	;volatile
 12982  012F22  0E00               	movlw	0
 12983  012F24  6E05               	movwf	_outPipes+4,c	;volatile
 12984                           
 12985                           ;usb_device.c: 2503: USBCheckStdRequest();
 12986  012F26  EC2D  F08E         	call	_USBCheckStdRequest	;wreg free
 12987                           
 12988                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12989  012F2A  0E00               	movlw	0
 12990  012F2C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12991  012F2E  0E03               	movlw	3
 12992  012F30  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12993  012F32  0E00               	movlw	0
 12994  012F34  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12995  012F36  0E00               	movlw	0
 12996  012F38  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12997  012F3A  0E00               	movlw	0
 12998  012F3C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12999  012F3E  0E00               	movlw	0
 13000  012F40  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13001  012F42  EC39  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13002                           
 13003                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 13004  012F46  EC7B  F08B         	call	_USBCtrlEPServiceComplete	;wreg free
 13005  012F4A  0012               	return		;funcret
 13006  012F4C                     __end_of_USBCtrlTrfSetupHandler:
 13007                           	opt stack 0
 13008                           pclatu	equ	0xFFB
 13009                           pclath	equ	0xFFA
 13010                           tblptru	equ	0xFF8
 13011                           tblptrh	equ	0xFF7
 13012                           tblptrl	equ	0xFF6
 13013                           tablat	equ	0xFF5
 13014                           prodh	equ	0xFF4
 13015                           prodl	equ	0xFF3
 13016                           intcon	equ	0xFF2
 13017                           intcon2	equ	0xFF1
 13018                           indf0	equ	0xFEF
 13019                           postinc0	equ	0xFEE
 13020                           fsr0h	equ	0xFEA
 13021                           fsr0l	equ	0xFE9
 13022                           wreg	equ	0xFE8
 13023                           indf1	equ	0xFE7
 13024                           postinc1	equ	0xFE6
 13025                           postdec1	equ	0xFE5
 13026                           fsr1h	equ	0xFE2
 13027                           fsr1l	equ	0xFE1
 13028                           indf2	equ	0xFDF
 13029                           postinc2	equ	0xFDE
 13030                           postdec2	equ	0xFDD
 13031                           plusw2	equ	0xFDB
 13032                           fsr2h	equ	0xFDA
 13033                           fsr2l	equ	0xFD9
 13034                           status	equ	0xFD8
 13035                           
 13036 ;; *************** function _USBCtrlEPServiceComplete *****************
 13037 ;; Defined at:
 13038 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;		None
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;		None
 13043 ;; Return value:  Size  Location     Type
 13044 ;;		None               void
 13045 ;; Registers used:
 13046 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13047 ;; Tracked objects:
 13048 ;;		On entry : 0/0
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13056 ;;Total ram usage:        0 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; Hardware stack levels required when called:    2
 13059 ;; This function calls:
 13060 ;;		_USBCtrlEPAllowDataStage
 13061 ;;		_USBCtrlEPAllowStatusStage
 13062 ;; This function is called by:
 13063 ;;		_USBCtrlTrfSetupHandler
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text68
 13068  0116F6                     __ptext68:
 13069                           	opt stack 0
 13070  0116F6                     _USBCtrlEPServiceComplete:
 13071                           	opt stack 17
 13072                           
 13073                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 13074                           
 13075                           ;incstack = 0
 13076  0116F6  9865               	bcf	3941,4,c	;volatile
 13077                           
 13078                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 13079  0116F8  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 13080  0116FA  D038               	goto	i2l1154
 13081                           
 13082                           ;usb_device.c: 1629: {
 13083                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 13084  0116FC  AE04               	btfss	_outPipes+3,7,c	;volatile
 13085  0116FE  D00B               	goto	i2l5748
 13086                           
 13087                           ;usb_device.c: 1631: {
 13088                           ;usb_device.c: 1632: controlTransferState = 2;
 13089  011700  0E02               	movlw	2
 13090  011702  6E29               	movwf	_controlTransferState,c	;volatile
 13091                           
 13092                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 13093  011704  5023               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 13094  011706  B4D8               	btfsc	status,2,c
 13095                           
 13096                           ;usb_device.c: 1644: {
 13097                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 13098  011708  ECB8  F095         	call	_USBCtrlEPAllowDataStage	;wreg free
 13099                           
 13100                           ;usb_device.c: 1646: }
 13101                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 13102  01170C  0E00               	movlw	0
 13103  01170E  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13104                           
 13105                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 13106  011710  0E00               	movlw	0
 13107  011712  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13108                           
 13109                           ;usb_device.c: 1652: }
 13110  011714  0012               	return	
 13111  011716                     i2l5748:
 13112                           
 13113                           ;usb_device.c: 1653: else
 13114                           ;usb_device.c: 1654: {
 13115                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 13116  011716  EE20 F001          	lfsr	2,1
 13117  01171A  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13118  01171C  26D9               	addwf	fsr2l,f,c
 13119  01171E  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13120  011720  22DA               	addwfc	fsr2h,f,c
 13121  011722  0E08               	movlw	8
 13122  011724  6EDF               	movwf	indf2,c
 13123                           
 13124                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13125  011726  EE20 F002          	lfsr	2,2
 13126  01172A  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13127  01172C  26D9               	addwf	fsr2l,f,c
 13128  01172E  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13129  011730  22DA               	addwfc	fsr2h,f,c
 13130  011732  0E30               	movlw	48
 13131  011734  6EDE               	movwf	postinc2,c
 13132  011736  0E0D               	movlw	13
 13133  011738  6EDD               	movwf	postdec2,c
 13134                           
 13135                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13136  01173A  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13137  01173E  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13138  011742  0E0C               	movlw	12
 13139  011744  6EDF               	movwf	indf2,c
 13140                           
 13141                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13142  011746  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13143  01174A  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13144  01174E  0E00               	movlw	0
 13145  011750  8EDB               	bsf	plusw2,7,c
 13146                           
 13147                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 13148  011752  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13149  011756  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13150  01175A  0E04               	movlw	4
 13151  01175C  6EDF               	movwf	indf2,c
 13152                           
 13153                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13154  01175E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13155  011762  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13156  011766  0E00               	movlw	0
 13157  011768  8EDB               	bsf	plusw2,7,c
 13158                           
 13159                           ;usb_device.c: 1665: }
 13160                           ;usb_device.c: 1666: }
 13161  01176A  0012               	return	
 13162  01176C                     i2l1154:
 13163                           
 13164                           ;usb_device.c: 1667: else
 13165                           ;usb_device.c: 1668: {
 13166                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 13167  01176C  010D               	movlb	13	; () banked
 13168  01176E  AF30               	btfss	48,7,b	;volatile
 13169  011770  D010               	goto	i2l5768
 13170                           
 13171                           ; BSR set to: 13
 13172                           ;usb_device.c: 1670: {
 13173                           ;usb_device.c: 1671: controlTransferState = 1;
 13174  011772  0E01               	movlw	1
 13175  011774  6E29               	movwf	_controlTransferState,c	;volatile
 13176                           
 13177                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 13178  011776  5022               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 13179  011778  B4D8               	btfsc	status,2,c
 13180                           
 13181                           ; BSR set to: 13
 13182                           ;usb_device.c: 1686: {
 13183                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 13184  01177A  ECB8  F095         	call	_USBCtrlEPAllowDataStage	;wreg free
 13185                           
 13186                           ;usb_device.c: 1688: }
 13187                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 13188  01177E  0E00               	movlw	0
 13189  011780  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13190                           
 13191                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 13192  011782  0E00               	movlw	0
 13193  011784  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13194                           
 13195                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 13196  011786  5024               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 13197  011788  A4D8               	btfss	status,2,c
 13198  01178A  0012               	return	
 13199                           
 13200                           ;usb_device.c: 1713: {
 13201                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 13202  01178C  EC78  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13203                           
 13204                           ;usb_device.c: 1715: }
 13205                           ;usb_device.c: 1716: }
 13206  011790  0012               	return	
 13207  011792                     i2l5768:
 13208                           
 13209                           ;usb_device.c: 1717: else
 13210                           ;usb_device.c: 1718: {
 13211                           ;usb_device.c: 1729: controlTransferState = 2;
 13212  011792  0E02               	movlw	2
 13213  011794  6E29               	movwf	_controlTransferState,c	;volatile
 13214                           
 13215                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 13216  011796  EE20 F001          	lfsr	2,1
 13217  01179A  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13218  01179C  26D9               	addwf	fsr2l,f,c
 13219  01179E  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13220  0117A0  22DA               	addwfc	fsr2h,f,c
 13221  0117A2  0E08               	movlw	8
 13222  0117A4  6EDF               	movwf	indf2,c
 13223                           
 13224                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13225  0117A6  EE20 F002          	lfsr	2,2
 13226  0117AA  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13227  0117AC  26D9               	addwf	fsr2l,f,c
 13228  0117AE  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13229  0117B0  22DA               	addwfc	fsr2h,f,c
 13230  0117B2  0E30               	movlw	48
 13231  0117B4  6EDE               	movwf	postinc2,c
 13232  0117B6  0E0D               	movlw	13
 13233  0117B8  6EDD               	movwf	postdec2,c
 13234                           
 13235                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13236  0117BA  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13237  0117BE  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13238  0117C2  0E04               	movlw	4
 13239  0117C4  6EDF               	movwf	indf2,c
 13240                           
 13241                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13242  0117C6  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13243  0117CA  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13244  0117CE  0E00               	movlw	0
 13245  0117D0  8EDB               	bsf	plusw2,7,c
 13246                           
 13247                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 13248  0117D2  0E00               	movlw	0
 13249  0117D4  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13250                           
 13251                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 13252  0117D6  0E00               	movlw	0
 13253  0117D8  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13254                           
 13255                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 13256  0117DA  5024               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 13257  0117DC  A4D8               	btfss	status,2,c
 13258  0117DE  0012               	return	
 13259                           
 13260                           ;usb_device.c: 1741: {
 13261                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 13262  0117E0  EC78  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13263  0117E4  0012               	return	
 13264  0117E6                     __end_of_USBCtrlEPServiceComplete:
 13265                           	opt stack 0
 13266                           pclatu	equ	0xFFB
 13267                           pclath	equ	0xFFA
 13268                           tblptru	equ	0xFF8
 13269                           tblptrh	equ	0xFF7
 13270                           tblptrl	equ	0xFF6
 13271                           tablat	equ	0xFF5
 13272                           prodh	equ	0xFF4
 13273                           prodl	equ	0xFF3
 13274                           intcon	equ	0xFF2
 13275                           intcon2	equ	0xFF1
 13276                           indf0	equ	0xFEF
 13277                           postinc0	equ	0xFEE
 13278                           fsr0h	equ	0xFEA
 13279                           fsr0l	equ	0xFE9
 13280                           wreg	equ	0xFE8
 13281                           indf1	equ	0xFE7
 13282                           postinc1	equ	0xFE6
 13283                           postdec1	equ	0xFE5
 13284                           fsr1h	equ	0xFE2
 13285                           fsr1l	equ	0xFE1
 13286                           indf2	equ	0xFDF
 13287                           postinc2	equ	0xFDE
 13288                           postdec2	equ	0xFDD
 13289                           plusw2	equ	0xFDB
 13290                           fsr2h	equ	0xFDA
 13291                           fsr2l	equ	0xFD9
 13292                           status	equ	0xFD8
 13293                           
 13294 ;; *************** function _USBCtrlEPAllowDataStage *****************
 13295 ;; Defined at:
 13296 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 13297 ;; Parameters:    Size  Location     Type
 13298 ;;		None
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;		None
 13301 ;; Return value:  Size  Location     Type
 13302 ;;		None               void
 13303 ;; Registers used:
 13304 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13305 ;; Tracked objects:
 13306 ;;		On entry : 0/0
 13307 ;;		On exit  : 0/0
 13308 ;;		Unchanged: 0/0
 13309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13314 ;;Total ram usage:        0 bytes
 13315 ;; Hardware stack levels used:    1
 13316 ;; Hardware stack levels required when called:    1
 13317 ;; This function calls:
 13318 ;;		_USBCtrlTrfTxService
 13319 ;; This function is called by:
 13320 ;;		_USBCtrlEPServiceComplete
 13321 ;; This function uses a non-reentrant model
 13322 ;;
 13323                           
 13324                           	psect	text69
 13325  012B70                     __ptext69:
 13326                           	opt stack 0
 13327  012B70                     _USBCtrlEPAllowDataStage:
 13328                           	opt stack 17
 13329                           
 13330                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 13331                           
 13332                           ;incstack = 0
 13333  012B70  0E00               	movlw	0
 13334  012B72  6E22               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13335                           
 13336                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 13337  012B74  0E00               	movlw	0
 13338  012B76  6E23               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13339                           
 13340                           ;usb_device.c: 1493: if(controlTransferState == 2)
 13341  012B78  0E02               	movlw	2
 13342  012B7A  1829               	xorwf	_controlTransferState,w,c	;volatile
 13343  012B7C  A4D8               	btfss	status,2,c
 13344  012B7E  D01F               	goto	i2l5378
 13345                           
 13346                           ;usb_device.c: 1494: {
 13347                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 13348  012B80  EE20 F001          	lfsr	2,1
 13349  012B84  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13350  012B86  26D9               	addwf	fsr2l,f,c
 13351  012B88  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13352  012B8A  22DA               	addwfc	fsr2h,f,c
 13353  012B8C  0E08               	movlw	8
 13354  012B8E  6EDF               	movwf	indf2,c
 13355                           
 13356                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13357  012B90  EE20 F002          	lfsr	2,2
 13358  012B94  501E               	movf	_pBDTEntryEP0OutNext,w,c
 13359  012B96  26D9               	addwf	fsr2l,f,c
 13360  012B98  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 13361  012B9A  22DA               	addwfc	fsr2h,f,c
 13362  012B9C  0E38               	movlw	56
 13363  012B9E  6EDE               	movwf	postinc2,c
 13364  012BA0  0E0D               	movlw	13
 13365  012BA2  6EDD               	movwf	postdec2,c
 13366                           
 13367                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13368  012BA4  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13369  012BA8  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13370  012BAC  0E48               	movlw	72
 13371  012BAE  6EDF               	movwf	indf2,c
 13372                           
 13373                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13374  012BB0  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13375  012BB4  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13376  012BB8  0E00               	movlw	0
 13377  012BBA  8EDB               	bsf	plusw2,7,c
 13378                           
 13379                           ;usb_device.c: 1500: }
 13380  012BBC  0012               	return	
 13381  012BBE                     i2l5378:
 13382                           
 13383                           ;usb_device.c: 1501: else
 13384                           ;usb_device.c: 1502: {
 13385                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 13386  012BBE  500E               	movf	_inPipes+4,w,c	;volatile
 13387  012BC0  010D               	movlb	13	; () banked
 13388  012BC2  5D36               	subwf	54,w,b	;volatile
 13389  012BC4  500F               	movf	_inPipes+5,w,c	;volatile
 13390  012BC6  010D               	movlb	13	; () banked
 13391  012BC8  5937               	subwfb	55,w,b	;volatile
 13392  012BCA  B0D8               	btfsc	status,0,c
 13393  012BCC  D004               	goto	i2l5382
 13394                           
 13395                           ; BSR set to: 13
 13396                           ;usb_device.c: 1506: {
 13397                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 13398  012BCE  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 13399  012BD2  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 13400  012BD6                     i2l5382:
 13401                           
 13402                           ; BSR set to: 13
 13403                           ;usb_device.c: 1508: }
 13404                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 13405  012BD6  ECDA  F08F         	call	_USBCtrlTrfTxService	;wreg free
 13406                           
 13407                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 13408  012BDA  EE20 F002          	lfsr	2,2
 13409  012BDE  5010               	movf	_pBDTEntryIn,w,c
 13410  012BE0  26D9               	addwf	fsr2l,f,c
 13411  012BE2  5011               	movf	_pBDTEntryIn+1,w,c
 13412  012BE4  22DA               	addwfc	fsr2h,f,c
 13413  012BE6  0E38               	movlw	56
 13414  012BE8  6EDE               	movwf	postinc2,c
 13415  012BEA  0E0D               	movlw	13
 13416  012BEC  6EDD               	movwf	postdec2,c
 13417                           
 13418                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13419  012BEE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13420  012BF2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13421  012BF6  0E48               	movlw	72
 13422  012BF8  6EDF               	movwf	indf2,c
 13423                           
 13424                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13425  012BFA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 13426  012BFE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13427  012C02  0E00               	movlw	0
 13428  012C04  8EDB               	bsf	plusw2,7,c
 13429  012C06  0012               	return	
 13430  012C08                     __end_of_USBCtrlEPAllowDataStage:
 13431                           	opt stack 0
 13432                           pclatu	equ	0xFFB
 13433                           pclath	equ	0xFFA
 13434                           tblptru	equ	0xFF8
 13435                           tblptrh	equ	0xFF7
 13436                           tblptrl	equ	0xFF6
 13437                           tablat	equ	0xFF5
 13438                           prodh	equ	0xFF4
 13439                           prodl	equ	0xFF3
 13440                           intcon	equ	0xFF2
 13441                           intcon2	equ	0xFF1
 13442                           indf0	equ	0xFEF
 13443                           postinc0	equ	0xFEE
 13444                           fsr0h	equ	0xFEA
 13445                           fsr0l	equ	0xFE9
 13446                           wreg	equ	0xFE8
 13447                           indf1	equ	0xFE7
 13448                           postinc1	equ	0xFE6
 13449                           postdec1	equ	0xFE5
 13450                           fsr1h	equ	0xFE2
 13451                           fsr1l	equ	0xFE1
 13452                           indf2	equ	0xFDF
 13453                           postinc2	equ	0xFDE
 13454                           postdec2	equ	0xFDD
 13455                           plusw2	equ	0xFDB
 13456                           fsr2h	equ	0xFDA
 13457                           fsr2l	equ	0xFD9
 13458                           status	equ	0xFD8
 13459                           
 13460 ;; *************** function _USBCheckStdRequest *****************
 13461 ;; Defined at:
 13462 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 13463 ;; Parameters:    Size  Location     Type
 13464 ;;		None
 13465 ;; Auto vars:     Size  Location     Type
 13466 ;;		None
 13467 ;; Return value:  Size  Location     Type
 13468 ;;		None               void
 13469 ;; Registers used:
 13470 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13471 ;; Tracked objects:
 13472 ;;		On entry : 0/0
 13473 ;;		On exit  : 0/0
 13474 ;;		Unchanged: 0/0
 13475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13480 ;;Total ram usage:        0 bytes
 13481 ;; Hardware stack levels used:    1
 13482 ;; Hardware stack levels required when called:    5
 13483 ;; This function calls:
 13484 ;;		_USBStdFeatureReqHandler
 13485 ;;		_USBStdGetDscHandler
 13486 ;;		_USBStdGetStatusHandler
 13487 ;;		_USBStdSetCfgHandler
 13488 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13489 ;; This function is called by:
 13490 ;;		_USBCtrlTrfSetupHandler
 13491 ;; This function uses a non-reentrant model
 13492 ;;
 13493                           
 13494                           	psect	text70
 13495  011C5A                     __ptext70:
 13496                           	opt stack 0
 13497  011C5A                     _USBCheckStdRequest:
 13498                           	opt stack 14
 13499                           
 13500                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 13501                           
 13502                           ;incstack = 0
 13503  011C5A  010D               	movlb	13	; () banked
 13504  011C5C  3930               	swapf	48,w,b	;volatile
 13505  011C5E  32E8               	rrcf	wreg,f,c
 13506  011C60  0B03               	andlw	3
 13507  011C62  0900               	iorlw	0
 13508  011C64  A4D8               	btfss	status,2,c
 13509  011C66  0012               	return	
 13510  011C68  D043               	goto	i2l5866
 13511  011C6A                     i2l1281:
 13512                           
 13513                           ; BSR set to: 13
 13514                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 13515  011C6A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13516                           
 13517                           ; BSR set to: 13
 13518                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 13519  011C6C  0E08               	movlw	8
 13520  011C6E  6E25               	movwf	_USBDeviceState,c	;volatile
 13521                           
 13522                           ;usb_device.c: 2699: break;
 13523  011C70  0012               	return	
 13524  011C72                     i2l5836:
 13525                           
 13526                           ; BSR set to: 13
 13527                           ;usb_device.c: 2701: USBStdGetDscHandler();
 13528  011C72  EC5C  F08A         	call	_USBStdGetDscHandler	;wreg free
 13529                           
 13530                           ;usb_device.c: 2702: break;
 13531  011C76  0012               	return	
 13532  011C78                     i2l5838:
 13533                           
 13534                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 13535  011C78  ECBF  F08D         	call	_USBStdSetCfgHandler	;wreg free
 13536                           
 13537                           ;usb_device.c: 2705: break;
 13538  011C7C  0012               	return	
 13539  011C7E                     i2l5840:
 13540                           
 13541                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 13542  011C7E  0E2C               	movlw	low _USBActiveConfiguration
 13543  011C80  6E0A               	movwf	_inPipes,c	;volatile
 13544  011C82  0E00               	movlw	high _USBActiveConfiguration
 13545  011C84  6E0B               	movwf	_inPipes+1,c	;volatile
 13546                           
 13547                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13548  011C86  800D               	bsf	_inPipes+3,0,c	;volatile
 13549                           
 13550                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 13551  011C88  0E01               	movlw	1
 13552  011C8A  6E0E               	movwf	_inPipes+4,c	;volatile
 13553                           
 13554                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 13555  011C8C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13556                           
 13557                           ;usb_device.c: 2711: break;
 13558  011C8E  0012               	return	
 13559  011C90                     i2l5848:
 13560                           
 13561                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 13562  011C90  EC12  F095         	call	_USBStdGetStatusHandler	;wreg free
 13563                           
 13564                           ;usb_device.c: 2714: break;
 13565  011C94  0012               	return	
 13566  011C96                     i2l5850:
 13567                           
 13568                           ;usb_device.c: 2716: case 3:
 13569                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 13570  011C96  EC74  F083         	call	_USBStdFeatureReqHandler	;wreg free
 13571                           
 13572                           ;usb_device.c: 2718: break;
 13573  011C9A  0012               	return	
 13574  011C9C                     i2l5852:
 13575                           
 13576                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13577  011C9C  010D               	movlb	13	; () banked
 13578  011C9E  5134               	movf	52,w,b	;volatile
 13579  011CA0  0D01               	mullw	1
 13580  011CA2  0ED4               	movlw	low _USBAlternateInterface
 13581  011CA4  24F3               	addwf	prodl,w,c
 13582  011CA6  6E0A               	movwf	_inPipes,c	;volatile
 13583  011CA8  0E00               	movlw	high _USBAlternateInterface
 13584  011CAA  20F4               	addwfc	prodh,w,c
 13585  011CAC  6E0B               	movwf	_inPipes+1,c	;volatile
 13586                           
 13587                           ; BSR set to: 13
 13588                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13589  011CAE  800D               	bsf	_inPipes+3,0,c	;volatile
 13590                           
 13591                           ; BSR set to: 13
 13592                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 13593  011CB0  0E01               	movlw	1
 13594  011CB2  6E0E               	movwf	_inPipes+4,c	;volatile
 13595                           
 13596                           ; BSR set to: 13
 13597                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 13598  011CB4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13599                           
 13600                           ;usb_device.c: 2724: break;
 13601  011CB6  0012               	return	
 13602  011CB8                     i2l1290:
 13603                           
 13604                           ; BSR set to: 13
 13605                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 13606  011CB8  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13607                           
 13608                           ; BSR set to: 13
 13609                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 13610  011CBA  010D               	movlb	13	; () banked
 13611  011CBC  5134               	movf	52,w,b	;volatile
 13612  011CBE  0D01               	mullw	1
 13613  011CC0  0ED4               	movlw	low _USBAlternateInterface
 13614  011CC2  24F3               	addwf	prodl,w,c
 13615  011CC4  6ED9               	movwf	fsr2l,c
 13616  011CC6  0E00               	movlw	high _USBAlternateInterface
 13617  011CC8  20F4               	addwfc	prodh,w,c
 13618  011CCA  6EDA               	movwf	fsr2h,c
 13619  011CCC  CD32 FFDF          	movff	3378,indf2	;volatile
 13620                           
 13621                           ;usb_device.c: 2728: break;
 13622  011CD0  0012               	return	
 13623  011CD2                     i2l5862:
 13624                           
 13625                           ; BSR set to: 13
 13626                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 13627  011CD2  0E00               	movlw	0
 13628  011CD4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13629  011CD6  0E02               	movlw	2
 13630  011CD8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13631  011CDA  0E00               	movlw	0
 13632  011CDC  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13633  011CDE  0E00               	movlw	0
 13634  011CE0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13635  011CE2  0E00               	movlw	0
 13636  011CE4  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13637  011CE6  0E00               	movlw	0
 13638  011CE8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13639  011CEA  EC39  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13640                           
 13641                           ;usb_device.c: 2735: }
 13642                           
 13643                           ;usb_device.c: 2734: break;
 13644                           
 13645                           ;usb_device.c: 2733: default:
 13646                           
 13647                           ;usb_device.c: 2732: case 12:
 13648                           
 13649                           ;usb_device.c: 2731: break;
 13650  011CEE  0012               	return	
 13651  011CF0                     i2l5866:
 13652  011CF0  010D               	movlb	13	; () banked
 13653  011CF2  5131               	movf	49,w,b	;volatile
 13654                           
 13655                           ; Switch size 1, requested type "space"
 13656                           ; Number of cases is 11, Range of values is 0 to 12
 13657                           ; switch strategies available:
 13658                           ; Name         Instructions Cycles
 13659                           ; simple_byte           34    18 (average)
 13660                           ;	Chosen strategy is simple_byte
 13661  011CF4  0A00               	xorlw	0	; case 0
 13662  011CF6  B4D8               	btfsc	status,2,c
 13663  011CF8  D7CB               	goto	i2l5848
 13664  011CFA  0A01               	xorlw	1	; case 1
 13665  011CFC  B4D8               	btfsc	status,2,c
 13666  011CFE  D7CB               	goto	i2l5850
 13667  011D00  0A02               	xorlw	2	; case 3
 13668  011D02  B4D8               	btfsc	status,2,c
 13669  011D04  D7C8               	goto	i2l5850
 13670  011D06  0A06               	xorlw	6	; case 5
 13671  011D08  B4D8               	btfsc	status,2,c
 13672  011D0A  D7AF               	goto	i2l1281
 13673  011D0C  0A03               	xorlw	3	; case 6
 13674  011D0E  B4D8               	btfsc	status,2,c
 13675  011D10  D7B0               	goto	i2l5836
 13676  011D12  0A01               	xorlw	1	; case 7
 13677  011D14  B4D8               	btfsc	status,2,c
 13678  011D16  D7DD               	goto	i2l5862
 13679  011D18  0A0F               	xorlw	15	; case 8
 13680  011D1A  B4D8               	btfsc	status,2,c
 13681  011D1C  D7B0               	goto	i2l5840
 13682  011D1E  0A01               	xorlw	1	; case 9
 13683  011D20  B4D8               	btfsc	status,2,c
 13684  011D22  D7AA               	goto	i2l5838
 13685  011D24  0A03               	xorlw	3	; case 10
 13686  011D26  B4D8               	btfsc	status,2,c
 13687  011D28  D7B9               	goto	i2l5852
 13688  011D2A  0A01               	xorlw	1	; case 11
 13689  011D2C  B4D8               	btfsc	status,2,c
 13690  011D2E  D7C4               	goto	i2l1290
 13691  011D30  0A07               	xorlw	7	; case 12
 13692  011D32  0012               	return	
 13693  011D34                     __end_of_USBCheckStdRequest:
 13694                           	opt stack 0
 13695                           pclatu	equ	0xFFB
 13696                           pclath	equ	0xFFA
 13697                           tblptru	equ	0xFF8
 13698                           tblptrh	equ	0xFF7
 13699                           tblptrl	equ	0xFF6
 13700                           tablat	equ	0xFF5
 13701                           prodh	equ	0xFF4
 13702                           prodl	equ	0xFF3
 13703                           intcon	equ	0xFF2
 13704                           intcon2	equ	0xFF1
 13705                           indf0	equ	0xFEF
 13706                           postinc0	equ	0xFEE
 13707                           fsr0h	equ	0xFEA
 13708                           fsr0l	equ	0xFE9
 13709                           wreg	equ	0xFE8
 13710                           indf1	equ	0xFE7
 13711                           postinc1	equ	0xFE6
 13712                           postdec1	equ	0xFE5
 13713                           fsr1h	equ	0xFE2
 13714                           fsr1l	equ	0xFE1
 13715                           indf2	equ	0xFDF
 13716                           postinc2	equ	0xFDE
 13717                           postdec2	equ	0xFDD
 13718                           plusw2	equ	0xFDB
 13719                           fsr2h	equ	0xFDA
 13720                           fsr2l	equ	0xFD9
 13721                           status	equ	0xFD8
 13722                           
 13723 ;; *************** function _USBStdSetCfgHandler *****************
 13724 ;; Defined at:
 13725 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 13726 ;; Parameters:    Size  Location     Type
 13727 ;;		None
 13728 ;; Auto vars:     Size  Location     Type
 13729 ;;  i               1   20[COMRAM] unsigned char 
 13730 ;; Return value:  Size  Location     Type
 13731 ;;		None               void
 13732 ;; Registers used:
 13733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13734 ;; Tracked objects:
 13735 ;;		On entry : 0/0
 13736 ;;		On exit  : 0/0
 13737 ;;		Unchanged: 0/0
 13738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13742 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13743 ;;Total ram usage:        1 bytes
 13744 ;; Hardware stack levels used:    1
 13745 ;; Hardware stack levels required when called:    4
 13746 ;; This function calls:
 13747 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13748 ;;		i2_memset
 13749 ;; This function is called by:
 13750 ;;		_USBCheckStdRequest
 13751 ;; This function uses a non-reentrant model
 13752 ;;
 13753                           
 13754                           	psect	text71
 13755  011B7E                     __ptext71:
 13756                           	opt stack 0
 13757  011B7E                     _USBStdSetCfgHandler:
 13758                           	opt stack 14
 13759                           
 13760                           ;usb_device.c: 1970: uint8_t i;
 13761                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 13762                           
 13763                           ;incstack = 0
 13764  011B7E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 13765                           
 13766                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 13767  011B80  0E27               	movlw	39
 13768  011B82  6E2E               	movwf	i2memset@p1,c
 13769  011B84  0E0F               	movlw	15
 13770  011B86  6E2F               	movwf	i2memset@p1+1,c
 13771  011B88  0E00               	movlw	0
 13772  011B8A  6E31               	movwf	i2memset@c+1,c
 13773  011B8C  0E00               	movlw	0
 13774  011B8E  6E30               	movwf	i2memset@c,c
 13775  011B90  0E00               	movlw	0
 13776  011B92  6E33               	movwf	i2memset@n+1,c
 13777  011B94  0E02               	movlw	2
 13778  011B96  6E32               	movwf	i2memset@n,c
 13779  011B98  EC92  F09B         	call	i2_memset	;wreg free
 13780                           
 13781                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13782  011B9C  0E00               	movlw	0
 13783  011B9E  6E2E               	movwf	i2memset@p1,c
 13784  011BA0  0E0D               	movlw	13
 13785  011BA2  6E2F               	movwf	i2memset@p1+1,c
 13786  011BA4  0E00               	movlw	0
 13787  011BA6  6E31               	movwf	i2memset@c+1,c
 13788  011BA8  0E00               	movlw	0
 13789  011BAA  6E30               	movwf	i2memset@c,c
 13790  011BAC  0E00               	movlw	0
 13791  011BAE  6E33               	movwf	i2memset@n+1,c
 13792  011BB0  0E30               	movlw	48
 13793  011BB2  6E32               	movwf	i2memset@n,c
 13794  011BB4  EC92  F09B         	call	i2_memset	;wreg free
 13795                           
 13796                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 13797  011BB8  8C65               	bsf	3941,6,c	;volatile
 13798                           
 13799                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 13800  011BBA  0E00               	movlw	0
 13801  011BBC  6E42               	movwf	USBStdSetCfgHandler@i,c
 13802  011BBE                     i2l5398:
 13803  011BBE  0E02               	movlw	2
 13804  011BC0  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 13805  011BC2  D001               	goto	i2l5402
 13806  011BC4  D016               	goto	i2l5408
 13807  011BC6                     i2l5402:
 13808                           
 13809                           ;usb_device.c: 1988: {
 13810                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 13811  011BC6  5042               	movf	USBStdSetCfgHandler@i,w,c
 13812  011BC8  0D01               	mullw	1
 13813  011BCA  0E16               	movlw	low _ep_data_in
 13814  011BCC  24F3               	addwf	prodl,w,c
 13815  011BCE  6ED9               	movwf	fsr2l,c
 13816  011BD0  0E00               	movlw	high _ep_data_in
 13817  011BD2  20F4               	addwfc	prodh,w,c
 13818  011BD4  6EDA               	movwf	fsr2h,c
 13819  011BD6  0E00               	movlw	0
 13820  011BD8  6EDF               	movwf	indf2,c
 13821                           
 13822                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 13823  011BDA  5042               	movf	USBStdSetCfgHandler@i,w,c
 13824  011BDC  0D01               	mullw	1
 13825  011BDE  0E19               	movlw	low _ep_data_out
 13826  011BE0  24F3               	addwf	prodl,w,c
 13827  011BE2  6ED9               	movwf	fsr2l,c
 13828  011BE4  0E00               	movlw	high _ep_data_out
 13829  011BE6  20F4               	addwfc	prodh,w,c
 13830  011BE8  6EDA               	movwf	fsr2h,c
 13831  011BEA  0E00               	movlw	0
 13832  011BEC  6EDF               	movwf	indf2,c
 13833  011BEE  2A42               	incf	USBStdSetCfgHandler@i,f,c
 13834  011BF0  D7E6               	goto	i2l5398
 13835  011BF2                     i2l5408:
 13836                           
 13837                           ;usb_device.c: 1991: }
 13838                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 13839  011BF2  0ED4               	movlw	low _USBAlternateInterface
 13840  011BF4  6E2E               	movwf	i2memset@p1,c
 13841  011BF6  0E00               	movlw	high _USBAlternateInterface
 13842  011BF8  6E2F               	movwf	i2memset@p1+1,c
 13843  011BFA  0E00               	movlw	0
 13844  011BFC  6E31               	movwf	i2memset@c+1,c
 13845  011BFE  0E00               	movlw	0
 13846  011C00  6E30               	movwf	i2memset@c,c
 13847  011C02  0E00               	movlw	0
 13848  011C04  6E33               	movwf	i2memset@n+1,c
 13849  011C06  0E02               	movlw	2
 13850  011C08  6E32               	movwf	i2memset@n,c
 13851  011C0A  EC92  F09B         	call	i2_memset	;wreg free
 13852                           
 13853                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 13854  011C0E  9C65               	bcf	3941,6,c	;volatile
 13855                           
 13856                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13857  011C10  0E08               	movlw	8
 13858  011C12  6E10               	movwf	_pBDTEntryIn,c
 13859  011C14  0E0D               	movlw	13
 13860  011C16  6E11               	movwf	_pBDTEntryIn+1,c
 13861                           
 13862                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13863  011C18  0E00               	movlw	0
 13864  011C1A  6E1C               	movwf	_pBDTEntryEP0OutCurrent,c
 13865  011C1C  0E0D               	movlw	13
 13866  011C1E  6E1D               	movwf	_pBDTEntryEP0OutCurrent+1,c
 13867                           
 13868                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13869  011C20  C01C  F01E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13870  011C24  C01D  F01F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13871                           
 13872                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13873  011C28  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 13874                           
 13875                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 13876  011C2C  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 13877  011C2E  A4D8               	btfss	status,2,c
 13878  011C30  D003               	goto	i2l5424
 13879                           
 13880                           ;usb_device.c: 2010: {
 13881                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 13882  011C32  0E10               	movlw	16
 13883  011C34  6E25               	movwf	_USBDeviceState,c	;volatile
 13884                           
 13885                           ;usb_device.c: 2013: }
 13886  011C36  0012               	return	
 13887  011C38                     i2l5424:
 13888                           
 13889                           ;usb_device.c: 2014: else
 13890                           ;usb_device.c: 2015: {
 13891                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 13892  011C38  0E00               	movlw	0
 13893  011C3A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13894  011C3C  0E01               	movlw	1
 13895  011C3E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13896  011C40  0E2C               	movlw	low _USBActiveConfiguration
 13897  011C42  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13898  011C44  0E00               	movlw	high _USBActiveConfiguration
 13899  011C46  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13900  011C48  0E00               	movlw	0
 13901  011C4A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13902  011C4C  0E01               	movlw	1
 13903  011C4E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13904  011C50  EC39  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13905                           
 13906                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 13907  011C54  0E20               	movlw	32
 13908  011C56  6E25               	movwf	_USBDeviceState,c	;volatile
 13909  011C58  0012               	return	
 13910  011C5A                     __end_of_USBStdSetCfgHandler:
 13911                           	opt stack 0
 13912                           pclatu	equ	0xFFB
 13913                           pclath	equ	0xFFA
 13914                           tblptru	equ	0xFF8
 13915                           tblptrh	equ	0xFF7
 13916                           tblptrl	equ	0xFF6
 13917                           tablat	equ	0xFF5
 13918                           prodh	equ	0xFF4
 13919                           prodl	equ	0xFF3
 13920                           intcon	equ	0xFF2
 13921                           intcon2	equ	0xFF1
 13922                           indf0	equ	0xFEF
 13923                           postinc0	equ	0xFEE
 13924                           fsr0h	equ	0xFEA
 13925                           fsr0l	equ	0xFE9
 13926                           wreg	equ	0xFE8
 13927                           indf1	equ	0xFE7
 13928                           postinc1	equ	0xFE6
 13929                           postdec1	equ	0xFE5
 13930                           fsr1h	equ	0xFE2
 13931                           fsr1l	equ	0xFE1
 13932                           indf2	equ	0xFDF
 13933                           postinc2	equ	0xFDE
 13934                           postdec2	equ	0xFDD
 13935                           plusw2	equ	0xFDB
 13936                           fsr2h	equ	0xFDA
 13937                           fsr2l	equ	0xFD9
 13938                           status	equ	0xFD8
 13939                           
 13940 ;; *************** function i2_memset *****************
 13941 ;; Defined at:
 13942 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 13943 ;; Parameters:    Size  Location     Type
 13944 ;;  p1              2    0[COMRAM] PTR void 
 13945 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13946 ;;  c               2    2[COMRAM] int 
 13947 ;;  n               2    4[COMRAM] unsigned int 
 13948 ;; Auto vars:     Size  Location     Type
 13949 ;;  memset          2    6[COMRAM] PTR unsigned char 
 13950 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13951 ;; Return value:  Size  Location     Type
 13952 ;;                  2    0[COMRAM] PTR void 
 13953 ;; Registers used:
 13954 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13955 ;; Tracked objects:
 13956 ;;		On entry : 0/0
 13957 ;;		On exit  : 0/0
 13958 ;;		Unchanged: 0/0
 13959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13960 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13963 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13964 ;;Total ram usage:        8 bytes
 13965 ;; Hardware stack levels used:    1
 13966 ;; This function calls:
 13967 ;;		Nothing
 13968 ;; This function is called by:
 13969 ;;		_USBStdSetCfgHandler
 13970 ;;		i2_USBDeviceInit
 13971 ;; This function uses a non-reentrant model
 13972 ;;
 13973                           
 13974                           	psect	text72
 13975  013724                     __ptext72:
 13976                           	opt stack 0
 13977  013724                     i2_memset:
 13978                           	opt stack 20
 13979                           
 13980                           ;incstack = 0
 13981  013724  C02E  F034         	movff	i2memset@p1,i2memset@p
 13982  013728  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 13983  01372C  D008               	goto	i2l5328
 13984  01372E                     i2l5324:
 13985  01372E  C034  FFD9         	movff	i2memset@p,fsr2l
 13986  013732  C035  FFDA         	movff	i2memset@p+1,fsr2h
 13987  013736  C030  FFDF         	movff	i2memset@c,indf2
 13988  01373A  4A34               	infsnz	i2memset@p,f,c
 13989  01373C  2A35               	incf	i2memset@p+1,f,c
 13990  01373E                     i2l5328:
 13991  01373E  0632               	decf	i2memset@n,f,c
 13992  013740  A0D8               	btfss	status,0,c
 13993  013742  0633               	decf	i2memset@n+1,f,c
 13994  013744  2832               	incf	i2memset@n,w,c
 13995  013746  E1F3               	bnz	i2l5324
 13996  013748  2833               	incf	i2memset@n+1,w,c
 13997  01374A  B4D8               	btfsc	status,2,c
 13998  01374C  0012               	return	
 13999  01374E  D7EF               	goto	i2l5324
 14000  013750                     __end_ofi2_memset:
 14001                           	opt stack 0
 14002                           pclatu	equ	0xFFB
 14003                           pclath	equ	0xFFA
 14004                           tblptru	equ	0xFF8
 14005                           tblptrh	equ	0xFF7
 14006                           tblptrl	equ	0xFF6
 14007                           tablat	equ	0xFF5
 14008                           prodh	equ	0xFF4
 14009                           prodl	equ	0xFF3
 14010                           intcon	equ	0xFF2
 14011                           intcon2	equ	0xFF1
 14012                           indf0	equ	0xFEF
 14013                           postinc0	equ	0xFEE
 14014                           fsr0h	equ	0xFEA
 14015                           fsr0l	equ	0xFE9
 14016                           wreg	equ	0xFE8
 14017                           indf1	equ	0xFE7
 14018                           postinc1	equ	0xFE6
 14019                           postdec1	equ	0xFE5
 14020                           fsr1h	equ	0xFE2
 14021                           fsr1l	equ	0xFE1
 14022                           indf2	equ	0xFDF
 14023                           postinc2	equ	0xFDE
 14024                           postdec2	equ	0xFDD
 14025                           plusw2	equ	0xFDB
 14026                           fsr2h	equ	0xFDA
 14027                           fsr2l	equ	0xFD9
 14028                           status	equ	0xFD8
 14029                           
 14030 ;; *************** function _USBStdGetStatusHandler *****************
 14031 ;; Defined at:
 14032 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 14033 ;; Parameters:    Size  Location     Type
 14034 ;;		None
 14035 ;; Auto vars:     Size  Location     Type
 14036 ;;  p               2    1[COMRAM] PTR struct __BDT
 14037 ;;		 -> NULL(0), BDT(48), 
 14038 ;; Return value:  Size  Location     Type
 14039 ;;		None               void
 14040 ;; Registers used:
 14041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14042 ;; Tracked objects:
 14043 ;;		On entry : 0/0
 14044 ;;		On exit  : 0/0
 14045 ;;		Unchanged: 0/0
 14046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14051 ;;Total ram usage:        3 bytes
 14052 ;; Hardware stack levels used:    1
 14053 ;; This function calls:
 14054 ;;		Nothing
 14055 ;; This function is called by:
 14056 ;;		_USBCheckStdRequest
 14057 ;; This function uses a non-reentrant model
 14058 ;;
 14059                           
 14060                           	psect	text73
 14061  012A24                     __ptext73:
 14062                           	opt stack 0
 14063  012A24                     _USBStdGetStatusHandler:
 14064                           	opt stack 18
 14065                           
 14066                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 14067                           
 14068                           ;incstack = 0
 14069  012A24  0E00               	movlw	0
 14070  012A26  010D               	movlb	13	; () banked
 14071  012A28  6F38               	movwf	56,b	;volatile
 14072                           
 14073                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 14074  012A2A  0E00               	movlw	0
 14075  012A2C  010D               	movlb	13	; () banked
 14076  012A2E  6F39               	movwf	57,b	;volatile
 14077                           
 14078                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 14079  012A30  D038               	goto	i2l5480
 14080  012A32                     i2l1217:
 14081                           
 14082                           ; BSR set to: 13
 14083                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 14084  012A32  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14085                           
 14086                           ; BSR set to: 13
 14087                           ;usb_device.c: 2145: }
 14088                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 14089                           
 14090                           ; BSR set to: 13
 14091                           
 14092                           ; BSR set to: 13
 14093                           ;usb_device.c: 2143: {
 14094                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 14095                           
 14096                           ;usb_device.c: 2142: if(0 == 1)
 14097  012A34  0421               	decf	_RemoteWakeup,w,c	;volatile
 14098  012A36  A4D8               	btfss	status,2,c
 14099  012A38  D040               	goto	i2l1220
 14100                           
 14101                           ; BSR set to: 13
 14102                           ;usb_device.c: 2148: {
 14103                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 14104  012A3A  010D               	movlb	13	; () banked
 14105  012A3C  8338               	bsf	56,1,b	;volatile
 14106                           
 14107                           ; BSR set to: 13
 14108                           ;usb_device.c: 2150: }
 14109                           ;usb_device.c: 2151: break;
 14110  012A3E  D03D               	goto	i2l1220
 14111  012A40                     i2l1221:
 14112                           
 14113                           ; BSR set to: 13
 14114                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 14115  012A40  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14116                           
 14117                           ;usb_device.c: 2154: break;
 14118  012A42  D03B               	goto	i2l1220
 14119  012A44                     i2l1222:
 14120                           
 14121                           ; BSR set to: 13
 14122                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 14123  012A44  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14124                           
 14125                           ;usb_device.c: 2160: {
 14126                           ;usb_device.c: 2161: BDT_ENTRY *p;
 14127                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 14128  012A46  010D               	movlb	13	; () banked
 14129  012A48  BF34               	btfsc	52,7,b	;volatile
 14130  012A4A  D00B               	goto	i2l5470
 14131                           
 14132                           ; BSR set to: 13
 14133                           ;usb_device.c: 2164: {
 14134                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14135  012A4C  010D               	movlb	13	; () banked
 14136  012A4E  5134               	movf	52,w,b	;volatile
 14137  012A50  0B0F               	andlw	15
 14138  012A52  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14139  012A54  502E               	movf	??_USBStdGetStatusHandler,w,c
 14140  012A56  0D02               	mullw	2
 14141  012A58  0E9E               	movlw	low _pBDTEntryOut
 14142  012A5A  24F3               	addwf	prodl,w,c
 14143  012A5C  6ED9               	movwf	fsr2l,c
 14144  012A5E  0E00               	movlw	high _pBDTEntryOut
 14145  012A60  D00A               	goto	L5
 14146  012A62                     i2l5470:
 14147                           
 14148                           ; BSR set to: 13
 14149                           ;usb_device.c: 2167: else
 14150                           ;usb_device.c: 2168: {
 14151                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 14152  012A62  010D               	movlb	13	; () banked
 14153  012A64  5134               	movf	52,w,b	;volatile
 14154  012A66  0B0F               	andlw	15
 14155  012A68  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14156  012A6A  502E               	movf	??_USBStdGetStatusHandler,w,c
 14157  012A6C  0D02               	mullw	2
 14158  012A6E  0E10               	movlw	low _pBDTEntryIn
 14159  012A70  24F3               	addwf	prodl,w,c
 14160  012A72  6ED9               	movwf	fsr2l,c
 14161  012A74  0E00               	movlw	high _pBDTEntryIn
 14162  012A76                     L5:
 14163  012A76  20F4               	addwfc	prodh,w,c
 14164  012A78  6EDA               	movwf	fsr2h,c
 14165  012A7A  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 14166  012A7E  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 14167                           
 14168                           ; BSR set to: 13
 14169                           ;usb_device.c: 2170: }
 14170                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 14171                           
 14172                           ; BSR set to: 13
 14173  012A82  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14174  012A86  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14175  012A8A  AEDF               	btfss	indf2,7,c
 14176  012A8C  D016               	goto	i2l1220
 14177                           
 14178                           ; BSR set to: 13
 14179  012A8E  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14180  012A92  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14181  012A96  A4DF               	btfss	indf2,2,c
 14182  012A98  D010               	goto	i2l1220
 14183                           
 14184                           ; BSR set to: 13
 14185                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 14186  012A9A  0E01               	movlw	1
 14187  012A9C  010D               	movlb	13	; () banked
 14188  012A9E  6F38               	movwf	56,b	;volatile
 14189                           
 14190                           ; BSR set to: 13
 14191                           ;usb_device.c: 2175: }
 14192                           ;usb_device.c: 2176: }
 14193                           
 14194                           ; BSR set to: 13
 14195                           ;usb_device.c: 2174: break;
 14196  012AA0  D00C               	goto	i2l1220
 14197  012AA2                     i2l5480:
 14198                           
 14199                           ; BSR set to: 13
 14200  012AA2  010D               	movlb	13	; () banked
 14201  012AA4  5130               	movf	48,w,b	;volatile
 14202  012AA6  0B1F               	andlw	31
 14203                           
 14204                           ; Switch size 1, requested type "space"
 14205                           ; Number of cases is 3, Range of values is 0 to 2
 14206                           ; switch strategies available:
 14207                           ; Name         Instructions Cycles
 14208                           ; simple_byte           10     6 (average)
 14209                           ;	Chosen strategy is simple_byte
 14210  012AA8  0A00               	xorlw	0	; case 0
 14211  012AAA  B4D8               	btfsc	status,2,c
 14212  012AAC  D7C2               	goto	i2l1217
 14213  012AAE  0A01               	xorlw	1	; case 1
 14214  012AB0  B4D8               	btfsc	status,2,c
 14215  012AB2  D7C6               	goto	i2l1221
 14216  012AB4  0A03               	xorlw	3	; case 2
 14217  012AB6  B4D8               	btfsc	status,2,c
 14218  012AB8  D7C5               	goto	i2l1222
 14219  012ABA                     i2l1220:
 14220                           
 14221                           ; BSR set to: 13
 14222                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 14223  012ABA  AE0D               	btfss	_inPipes+3,7,c	;volatile
 14224  012ABC  0012               	return	
 14225                           
 14226                           ; BSR set to: 13
 14227                           ;usb_device.c: 2179: {
 14228                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 14229  012ABE  0E38               	movlw	56
 14230  012AC0  6E0A               	movwf	_inPipes,c	;volatile
 14231  012AC2  0E0D               	movlw	13
 14232  012AC4  6E0B               	movwf	_inPipes+1,c	;volatile
 14233                           
 14234                           ; BSR set to: 13
 14235                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14236  012AC6  800D               	bsf	_inPipes+3,0,c	;volatile
 14237                           
 14238                           ; BSR set to: 13
 14239                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 14240  012AC8  0E02               	movlw	2
 14241  012ACA  6E0E               	movwf	_inPipes+4,c	;volatile
 14242  012ACC  0012               	return	
 14243  012ACE                     __end_of_USBStdGetStatusHandler:
 14244                           	opt stack 0
 14245                           pclatu	equ	0xFFB
 14246                           pclath	equ	0xFFA
 14247                           tblptru	equ	0xFF8
 14248                           tblptrh	equ	0xFF7
 14249                           tblptrl	equ	0xFF6
 14250                           tablat	equ	0xFF5
 14251                           prodh	equ	0xFF4
 14252                           prodl	equ	0xFF3
 14253                           intcon	equ	0xFF2
 14254                           intcon2	equ	0xFF1
 14255                           indf0	equ	0xFEF
 14256                           postinc0	equ	0xFEE
 14257                           fsr0h	equ	0xFEA
 14258                           fsr0l	equ	0xFE9
 14259                           wreg	equ	0xFE8
 14260                           indf1	equ	0xFE7
 14261                           postinc1	equ	0xFE6
 14262                           postdec1	equ	0xFE5
 14263                           fsr1h	equ	0xFE2
 14264                           fsr1l	equ	0xFE1
 14265                           indf2	equ	0xFDF
 14266                           postinc2	equ	0xFDE
 14267                           postdec2	equ	0xFDD
 14268                           plusw2	equ	0xFDB
 14269                           fsr2h	equ	0xFDA
 14270                           fsr2l	equ	0xFD9
 14271                           status	equ	0xFD8
 14272                           
 14273 ;; *************** function _USBStdGetDscHandler *****************
 14274 ;; Defined at:
 14275 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 14276 ;; Parameters:    Size  Location     Type
 14277 ;;		None
 14278 ;; Auto vars:     Size  Location     Type
 14279 ;;		None
 14280 ;; Return value:  Size  Location     Type
 14281 ;;		None               void
 14282 ;; Registers used:
 14283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14284 ;; Tracked objects:
 14285 ;;		On entry : 0/0
 14286 ;;		On exit  : 0/0
 14287 ;;		Unchanged: 0/0
 14288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14293 ;;Total ram usage:        2 bytes
 14294 ;; Hardware stack levels used:    1
 14295 ;; This function calls:
 14296 ;;		Nothing
 14297 ;; This function is called by:
 14298 ;;		_USBCheckStdRequest
 14299 ;; This function uses a non-reentrant model
 14300 ;;
 14301                           
 14302                           	psect	text74
 14303  0114B8                     __ptext74:
 14304                           	opt stack 0
 14305  0114B8                     _USBStdGetDscHandler:
 14306                           	opt stack 18
 14307                           
 14308                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 14309                           
 14310                           ; BSR set to: 13
 14311                           ;incstack = 0
 14312  0114B8  0E80               	movlw	128
 14313  0114BA  010D               	movlb	13	; () banked
 14314  0114BC  1930               	xorwf	48,w,b	;volatile
 14315  0114BE  A4D8               	btfss	status,2,c
 14316  0114C0  0012               	return	
 14317                           
 14318                           ; BSR set to: 13
 14319                           ;usb_device.c: 2046: {
 14320                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 14321  0114C2  0EC0               	movlw	192
 14322  0114C4  6E0D               	movwf	_inPipes+3,c	;volatile
 14323                           
 14324                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 14325  0114C6  D085               	goto	i2l5458
 14326  0114C8                     i2l5432:
 14327                           
 14328                           ; BSR set to: 13
 14329                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 14330  0114C8  0E46               	movlw	low _device_dsc
 14331  0114CA  6E0A               	movwf	_inPipes,c	;volatile
 14332  0114CC  0EFF               	movlw	high _device_dsc
 14333  0114CE  6E0B               	movwf	_inPipes+1,c	;volatile
 14334                           
 14335                           ; BSR set to: 13
 14336                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 14337  0114D0  0E00               	movlw	0
 14338  0114D2  6E0F               	movwf	_inPipes+5,c	;volatile
 14339  0114D4  0E12               	movlw	18
 14340  0114D6  6E0E               	movwf	_inPipes+4,c	;volatile
 14341                           
 14342                           ;usb_device.c: 2058: break;
 14343  0114D8  0012               	return	
 14344  0114DA                     i2l5436:
 14345                           
 14346                           ; BSR set to: 13
 14347                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 14348  0114DA  010D               	movlb	13	; () banked
 14349  0114DC  5132               	movf	50,w,b	;volatile
 14350  0114DE  A4D8               	btfss	status,2,c
 14351  0114E0  D043               	goto	i2l5444
 14352                           
 14353                           ; BSR set to: 13
 14354                           ;usb_device.c: 2064: {
 14355                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 14356  0114E2  010D               	movlb	13	; () banked
 14357  0114E4  5132               	movf	50,w,b	;volatile
 14358  0114E6  0D02               	mullw	2
 14359  0114E8  0E7D               	movlw	low _USB_CD_Ptr
 14360  0114EA  24F3               	addwf	prodl,w,c
 14361  0114EC  6EF6               	movwf	tblptrl,c
 14362  0114EE  0EFE               	movlw	high _USB_CD_Ptr
 14363  0114F0  20F4               	addwfc	prodh,w,c
 14364  0114F2  6EF7               	movwf	tblptrh,c
 14365  0114F4                     	if	1	;There are 3 active tblptr bytes
 14366  0114F4  6AF8               	clrf	tblptru,c
 14367  0114F6  0E00               	movlw	low (__mediumconst shr (0+16))
 14368  0114F8  22F8               	addwfc	tblptru,f,c
 14369  0114FA                     	endif
 14370  0114FA  0009               	tblrd		*+
 14371  0114FC  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 14372  011500  000A               	tblrd		*-
 14373  011502  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 14374                           
 14375                           ; BSR set to: 13
 14376                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 14377  011506  0E02               	movlw	2
 14378  011508  240A               	addwf	_inPipes,w,c	;volatile
 14379  01150A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14380  01150C  0E00               	movlw	0
 14381  01150E  200B               	addwfc	_inPipes+1,w,c	;volatile
 14382  011510  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14383  011512  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14384  011516  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14385  01151A  0E00               	movlw	low (__mediumconst shr (0+16))
 14386  01151C  6EF8               	movwf	tblptru,c
 14387  01151E  0E0E               	movlw	(high __ramtop+-1)
 14388  011520  64F7               	cpfsgt	tblptrh,c
 14389  011522  D003               	bra	i2u420_47
 14390  011524  0008               	tblrd		*
 14391  011526  50F5               	movf	tablat,w,c
 14392  011528  D005               	bra	i2u420_40
 14393  01152A                     i2u420_47:
 14394  01152A  CFF6 FFE9          	movff	tblptrl,fsr0l
 14395  01152E  CFF7 FFEA          	movff	tblptrh,fsr0h
 14396  011532  50EF               	movf	indf0,w,c
 14397  011534                     i2u420_40:
 14398  011534  6E0E               	movwf	_inPipes+4,c	;volatile
 14399                           
 14400                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 14401  011536  0E03               	movlw	3
 14402  011538  240A               	addwf	_inPipes,w,c	;volatile
 14403  01153A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14404  01153C  0E00               	movlw	0
 14405  01153E  200B               	addwfc	_inPipes+1,w,c	;volatile
 14406  011540  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14407  011542  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14408  011546  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14409  01154A  0E00               	movlw	low (__mediumconst shr (0+16))
 14410  01154C  6EF8               	movwf	tblptru,c
 14411  01154E  0E0E               	movlw	(high __ramtop+-1)
 14412  011550  64F7               	cpfsgt	tblptrh,c
 14413  011552  D003               	bra	i2u421_47
 14414  011554  0008               	tblrd		*
 14415  011556  50F5               	movf	tablat,w,c
 14416  011558  D005               	bra	i2u421_40
 14417  01155A                     i2u421_47:
 14418  01155A  CFF6 FFE9          	movff	tblptrl,fsr0l
 14419  01155E  CFF7 FFEA          	movff	tblptrh,fsr0h
 14420  011562  50EF               	movf	indf0,w,c
 14421  011564                     i2u421_40:
 14422  011564  6E0F               	movwf	_inPipes+5,c	;volatile
 14423                           
 14424                           ;usb_device.c: 2076: }
 14425  011566  0012               	return	
 14426  011568                     i2l5444:
 14427                           
 14428                           ;usb_device.c: 2077: else
 14429                           ;usb_device.c: 2078: {
 14430                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 14431  011568  0E00               	movlw	0
 14432  01156A  6E0D               	movwf	_inPipes+3,c	;volatile
 14433                           
 14434                           ;usb_device.c: 2080: }
 14435                           ;usb_device.c: 2081: break;
 14436  01156C  0012               	return	
 14437  01156E                     i2l5446:
 14438                           
 14439                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 14440  01156E  0E03               	movlw	3
 14441  011570  010D               	movlb	13	; () banked
 14442  011572  6132               	cpfslt	50,b	;volatile
 14443  011574  D028               	goto	i2l5452
 14444                           
 14445                           ; BSR set to: 13
 14446                           ;usb_device.c: 2087: {
 14447                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 14448  011576  010D               	movlb	13	; () banked
 14449  011578  5132               	movf	50,w,b	;volatile
 14450  01157A  0D02               	mullw	2
 14451  01157C  0E77               	movlw	low _USB_SD_Ptr
 14452  01157E  24F3               	addwf	prodl,w,c
 14453  011580  6EF6               	movwf	tblptrl,c
 14454  011582  0EFE               	movlw	high _USB_SD_Ptr
 14455  011584  20F4               	addwfc	prodh,w,c
 14456  011586  6EF7               	movwf	tblptrh,c
 14457  011588                     	if	1	;There are 3 active tblptr bytes
 14458  011588  6AF8               	clrf	tblptru,c
 14459  01158A  0E00               	movlw	low (__mediumconst shr (0+16))
 14460  01158C  22F8               	addwfc	tblptru,f,c
 14461  01158E                     	endif
 14462  01158E  0009               	tblrd		*+
 14463  011590  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 14464  011594  000A               	tblrd		*-
 14465  011596  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 14466                           
 14467                           ; BSR set to: 13
 14468                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 14469  01159A  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 14470  01159E  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 14471  0115A2  0E00               	movlw	low (__mediumconst shr (0+16))
 14472  0115A4  6EF8               	movwf	tblptru,c
 14473  0115A6  0E0E               	movlw	(high __ramtop+-1)
 14474  0115A8  64F7               	cpfsgt	tblptrh,c
 14475  0115AA  D003               	bra	i2u423_47
 14476  0115AC  0008               	tblrd		*
 14477  0115AE  50F5               	movf	tablat,w,c
 14478  0115B0  D005               	bra	i2u423_40
 14479  0115B2                     i2u423_47:
 14480  0115B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14481  0115B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14482  0115BA  50EF               	movf	indf0,w,c
 14483  0115BC                     i2u423_40:
 14484  0115BC  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 14485  0115BE  502E               	movf	??_USBStdGetDscHandler,w,c
 14486  0115C0  6E0E               	movwf	_inPipes+4,c	;volatile
 14487  0115C2  6A0F               	clrf	_inPipes+5,c	;volatile
 14488                           
 14489                           ;usb_device.c: 2092: }
 14490  0115C4  0012               	return	
 14491  0115C6                     i2l5452:
 14492                           
 14493                           ;usb_device.c: 2102: else
 14494                           ;usb_device.c: 2103: {
 14495                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 14496  0115C6  0E00               	movlw	0
 14497  0115C8  6E0D               	movwf	_inPipes+3,c	;volatile
 14498                           
 14499                           ;usb_device.c: 2105: }
 14500                           ;usb_device.c: 2106: break;
 14501  0115CA  0012               	return	
 14502  0115CC                     i2l5454:
 14503                           
 14504                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 14505  0115CC  0E00               	movlw	0
 14506  0115CE  6E0D               	movwf	_inPipes+3,c	;volatile
 14507                           
 14508                           ;usb_device.c: 2110: }
 14509                           
 14510                           ;usb_device.c: 2109: break;
 14511  0115D0  0012               	return	
 14512  0115D2                     i2l5458:
 14513  0115D2  010D               	movlb	13	; () banked
 14514  0115D4  5133               	movf	51,w,b	;volatile
 14515                           
 14516                           ; Switch size 1, requested type "space"
 14517                           ; Number of cases is 3, Range of values is 1 to 3
 14518                           ; switch strategies available:
 14519                           ; Name         Instructions Cycles
 14520                           ; simple_byte           10     6 (average)
 14521                           ;	Chosen strategy is simple_byte
 14522  0115D6  0A01               	xorlw	1	; case 1
 14523  0115D8  B4D8               	btfsc	status,2,c
 14524  0115DA  D776               	goto	i2l5432
 14525  0115DC  0A03               	xorlw	3	; case 2
 14526  0115DE  B4D8               	btfsc	status,2,c
 14527  0115E0  D77C               	goto	i2l5436
 14528  0115E2  0A01               	xorlw	1	; case 3
 14529  0115E4  B4D8               	btfsc	status,2,c
 14530  0115E6  D7C3               	goto	i2l5446
 14531  0115E8  D7F1               	goto	i2l5454
 14532  0115EA                     __end_of_USBStdGetDscHandler:
 14533                           	opt stack 0
 14534                           pclatu	equ	0xFFB
 14535                           pclath	equ	0xFFA
 14536                           tblptru	equ	0xFF8
 14537                           tblptrh	equ	0xFF7
 14538                           tblptrl	equ	0xFF6
 14539                           tablat	equ	0xFF5
 14540                           prodh	equ	0xFF4
 14541                           prodl	equ	0xFF3
 14542                           intcon	equ	0xFF2
 14543                           intcon2	equ	0xFF1
 14544                           indf0	equ	0xFEF
 14545                           postinc0	equ	0xFEE
 14546                           fsr0h	equ	0xFEA
 14547                           fsr0l	equ	0xFE9
 14548                           wreg	equ	0xFE8
 14549                           indf1	equ	0xFE7
 14550                           postinc1	equ	0xFE6
 14551                           postdec1	equ	0xFE5
 14552                           fsr1h	equ	0xFE2
 14553                           fsr1l	equ	0xFE1
 14554                           indf2	equ	0xFDF
 14555                           postinc2	equ	0xFDE
 14556                           postdec2	equ	0xFDD
 14557                           plusw2	equ	0xFDB
 14558                           fsr2h	equ	0xFDA
 14559                           fsr2l	equ	0xFD9
 14560                           status	equ	0xFD8
 14561                           
 14562 ;; *************** function _USBStdFeatureReqHandler *****************
 14563 ;; Defined at:
 14564 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 14565 ;; Parameters:    Size  Location     Type
 14566 ;;		None
 14567 ;; Auto vars:     Size  Location     Type
 14568 ;;  p               2   24[COMRAM] PTR struct __BDT
 14569 ;;		 -> NULL(0), BDT(48), 
 14570 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 14571 ;;		 -> UEP0(1), 
 14572 ;;  current_ep_d    1   23[COMRAM] struct .
 14573 ;; Return value:  Size  Location     Type
 14574 ;;		None               void
 14575 ;; Registers used:
 14576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14577 ;; Tracked objects:
 14578 ;;		On entry : 0/0
 14579 ;;		On exit  : 0/0
 14580 ;;		Unchanged: 0/0
 14581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14583 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14585 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14586 ;;Total ram usage:        6 bytes
 14587 ;; Hardware stack levels used:    1
 14588 ;; Hardware stack levels required when called:    4
 14589 ;; This function calls:
 14590 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14591 ;; This function is called by:
 14592 ;;		_USBCheckStdRequest
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text75
 14597  0106E8                     __ptext75:
 14598                           	opt stack 0
 14599  0106E8                     _USBStdFeatureReqHandler:
 14600                           	opt stack 14
 14601                           
 14602                           ;usb_device.c: 2759: BDT_ENTRY *p;
 14603                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 14604                           ;usb_device.c: 2764: unsigned char* pUEP;
 14605                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 14606                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 14607                           
 14608                           ;incstack = 0
 14609  0106E8  010D               	movlb	13	; () banked
 14610  0106EA  0532               	decf	50,w,b	;volatile
 14611  0106EC  A4D8               	btfss	status,2,c
 14612  0106EE  D010               	goto	i2l1296
 14613                           
 14614                           ; BSR set to: 13
 14615  0106F0  010D               	movlb	13	; () banked
 14616  0106F2  5130               	movf	48,w,b	;volatile
 14617  0106F4  0B1F               	andlw	31
 14618  0106F6  0900               	iorlw	0
 14619  0106F8  A4D8               	btfss	status,2,c
 14620  0106FA  D00A               	goto	i2l1296
 14621                           
 14622                           ; BSR set to: 13
 14623                           ;usb_device.c: 2804: {
 14624                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 14625  0106FC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14626                           
 14627                           ; BSR set to: 13
 14628                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 14629  0106FE  0E03               	movlw	3
 14630  010700  010D               	movlb	13	; () banked
 14631  010702  1931               	xorwf	49,w,b	;volatile
 14632  010704  A4D8               	btfss	status,2,c
 14633  010706  D002               	goto	i2l5498
 14634                           
 14635                           ; BSR set to: 13
 14636                           ;usb_device.c: 2807: RemoteWakeup = 1;
 14637  010708  0E01               	movlw	1
 14638  01070A  D001               	goto	L6
 14639  01070C                     i2l5498:
 14640                           
 14641                           ; BSR set to: 13
 14642                           ;usb_device.c: 2808: else
 14643                           ;usb_device.c: 2809: RemoteWakeup = 0;
 14644  01070C  0E00               	movlw	0
 14645  01070E                     L6:
 14646  01070E  6E21               	movwf	_RemoteWakeup,c	;volatile
 14647  010710                     i2l1296:
 14648                           
 14649                           ; BSR set to: 13
 14650                           ;usb_device.c: 2810: }
 14651                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 14652                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 14653                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 14654                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 14655  010710  010D               	movlb	13	; () banked
 14656  010712  5132               	movf	50,w,b	;volatile
 14657  010714  A4D8               	btfss	status,2,c
 14658  010716  0012               	return	
 14659                           
 14660                           ; BSR set to: 13
 14661  010718  010D               	movlb	13	; () banked
 14662  01071A  5130               	movf	48,w,b	;volatile
 14663  01071C  0B1F               	andlw	31
 14664  01071E  0A02               	xorlw	2
 14665  010720  A4D8               	btfss	status,2,c
 14666  010722  0012               	return	
 14667                           
 14668                           ; BSR set to: 13
 14669  010724  010D               	movlb	13	; () banked
 14670  010726  5134               	movf	52,w,b	;volatile
 14671  010728  0B0F               	andlw	15
 14672  01072A  0900               	iorlw	0
 14673  01072C  B4D8               	btfsc	status,2,c
 14674  01072E  0012               	return	
 14675                           
 14676                           ; BSR set to: 13
 14677  010730  010D               	movlb	13	; () banked
 14678  010732  5134               	movf	52,w,b	;volatile
 14679  010734  0B0F               	andlw	15
 14680  010736  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14681  010738  0E03               	movlw	3
 14682  01073A  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 14683  01073C  0012               	return	
 14684                           
 14685                           ; BSR set to: 13
 14686  01073E  0E20               	movlw	32
 14687  010740  1825               	xorwf	_USBDeviceState,w,c	;volatile
 14688  010742  A4D8               	btfss	status,2,c
 14689  010744  0012               	return	
 14690                           
 14691                           ; BSR set to: 13
 14692                           ;usb_device.c: 2817: {
 14693                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 14694  010746  8E0D               	bsf	_inPipes+3,7,c	;volatile
 14695                           
 14696                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 14697  010748  010D               	movlb	13	; () banked
 14698  01074A  BF34               	btfsc	52,7,b	;volatile
 14699  01074C  D01B               	goto	i2l5512
 14700                           
 14701                           ; BSR set to: 13
 14702                           ;usb_device.c: 2824: {
 14703                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14704  01074E  010D               	movlb	13	; () banked
 14705  010750  5134               	movf	52,w,b	;volatile
 14706  010752  0B0F               	andlw	15
 14707  010754  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14708  010756  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14709  010758  0D02               	mullw	2
 14710  01075A  0E9E               	movlw	low _pBDTEntryOut
 14711  01075C  24F3               	addwf	prodl,w,c
 14712  01075E  6ED9               	movwf	fsr2l,c
 14713  010760  0E00               	movlw	high _pBDTEntryOut
 14714  010762  20F4               	addwfc	prodh,w,c
 14715  010764  6EDA               	movwf	fsr2h,c
 14716  010766  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 14717  01076A  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14718                           
 14719                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14720  01076E  010D               	movlb	13	; () banked
 14721  010770  5134               	movf	52,w,b	;volatile
 14722  010772  0B0F               	andlw	15
 14723  010774  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14724  010776  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14725  010778  0D01               	mullw	1
 14726  01077A  0E19               	movlw	low _ep_data_out
 14727  01077C  24F3               	addwf	prodl,w,c
 14728  01077E  6ED9               	movwf	fsr2l,c
 14729  010780  0E00               	movlw	high _ep_data_out
 14730  010782  D01A               	goto	L7
 14731  010784                     i2l5512:
 14732                           
 14733                           ; BSR set to: 13
 14734                           ;usb_device.c: 2828: else
 14735                           ;usb_device.c: 2829: {
 14736                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 14737  010784  010D               	movlb	13	; () banked
 14738  010786  5134               	movf	52,w,b	;volatile
 14739  010788  0B0F               	andlw	15
 14740  01078A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14741  01078C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14742  01078E  0D02               	mullw	2
 14743  010790  0E10               	movlw	low _pBDTEntryIn
 14744  010792  24F3               	addwf	prodl,w,c
 14745  010794  6ED9               	movwf	fsr2l,c
 14746  010796  0E00               	movlw	high _pBDTEntryIn
 14747  010798  20F4               	addwfc	prodh,w,c
 14748  01079A  6EDA               	movwf	fsr2h,c
 14749  01079C  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 14750  0107A0  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14751                           
 14752                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14753  0107A4  010D               	movlb	13	; () banked
 14754  0107A6  5134               	movf	52,w,b	;volatile
 14755  0107A8  0B0F               	andlw	15
 14756  0107AA  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14757  0107AC  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14758  0107AE  0D01               	mullw	1
 14759  0107B0  0E16               	movlw	low _ep_data_in
 14760  0107B2  24F3               	addwf	prodl,w,c
 14761  0107B4  6ED9               	movwf	fsr2l,c
 14762  0107B6  0E00               	movlw	high _ep_data_in
 14763  0107B8                     L7:
 14764  0107B8  20F4               	addwfc	prodh,w,c
 14765  0107BA  6EDA               	movwf	fsr2h,c
 14766  0107BC  50DF               	movf	indf2,w,c
 14767  0107BE  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14768                           
 14769                           ; BSR set to: 13
 14770                           ;usb_device.c: 2832: }
 14771                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 14772                           
 14773                           ; BSR set to: 13
 14774  0107C0  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14775  0107C2  D002               	goto	i2l5518
 14776                           
 14777                           ; BSR set to: 13
 14778                           ;usb_device.c: 2839: {
 14779                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 14780  0107C4  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 14781                           
 14782                           ;usb_device.c: 2841: }
 14783  0107C6  D001               	goto	i2l5520
 14784  0107C8                     i2l5518:
 14785                           
 14786                           ; BSR set to: 13
 14787                           ;usb_device.c: 2842: else
 14788                           ;usb_device.c: 2843: {
 14789                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 14790  0107C8  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 14791  0107CA                     i2l5520:
 14792                           
 14793                           ; BSR set to: 13
 14794                           ;usb_device.c: 2845: }
 14795                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 14796  0107CA  010D               	movlb	13	; () banked
 14797  0107CC  BF34               	btfsc	52,7,b	;volatile
 14798  0107CE  D00B               	goto	i2l5524
 14799                           
 14800                           ; BSR set to: 13
 14801                           ;usb_device.c: 2851: {
 14802                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 14803  0107D0  010D               	movlb	13	; () banked
 14804  0107D2  5134               	movf	52,w,b	;volatile
 14805  0107D4  0B0F               	andlw	15
 14806  0107D6  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14807  0107D8  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14808  0107DA  0D02               	mullw	2
 14809  0107DC  0E9E               	movlw	low _pBDTEntryOut
 14810  0107DE  24F3               	addwf	prodl,w,c
 14811  0107E0  6ED9               	movwf	fsr2l,c
 14812  0107E2  0E00               	movlw	high _pBDTEntryOut
 14813  0107E4  D00A               	goto	L8
 14814  0107E6                     i2l5524:
 14815                           
 14816                           ; BSR set to: 13
 14817                           ;usb_device.c: 2854: else
 14818                           ;usb_device.c: 2855: {
 14819                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 14820  0107E6  010D               	movlb	13	; () banked
 14821  0107E8  5134               	movf	52,w,b	;volatile
 14822  0107EA  0B0F               	andlw	15
 14823  0107EC  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14824  0107EE  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14825  0107F0  0D02               	mullw	2
 14826  0107F2  0E10               	movlw	low _pBDTEntryIn
 14827  0107F4  24F3               	addwf	prodl,w,c
 14828  0107F6  6ED9               	movwf	fsr2l,c
 14829  0107F8  0E00               	movlw	high _pBDTEntryIn
 14830  0107FA                     L8:
 14831  0107FA  20F4               	addwfc	prodh,w,c
 14832  0107FC  6EDA               	movwf	fsr2h,c
 14833  0107FE  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14834  010802  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14835                           
 14836                           ; BSR set to: 13
 14837                           ;usb_device.c: 2857: }
 14838                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 14839                           
 14840                           ; BSR set to: 13
 14841  010806  0E03               	movlw	3
 14842  010808  010D               	movlb	13	; () banked
 14843  01080A  1931               	xorwf	49,w,b	;volatile
 14844  01080C  A4D8               	btfss	status,2,c
 14845  01080E  D02E               	goto	i2l5540
 14846                           
 14847                           ; BSR set to: 13
 14848                           ;usb_device.c: 2861: {
 14849                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 14850  010810  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14851  010814  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14852  010818  AEDF               	btfss	indf2,7,c
 14853  01081A  D01B               	goto	i2l5536
 14854                           
 14855                           ; BSR set to: 13
 14856                           ;usb_device.c: 2863: {
 14857                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 14858  01081C  010D               	movlb	13	; () banked
 14859  01081E  BF34               	btfsc	52,7,b	;volatile
 14860  010820  D00B               	goto	i2l5534
 14861                           
 14862                           ; BSR set to: 13
 14863                           ;usb_device.c: 2867: {
 14864                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 14865  010822  010D               	movlb	13	; () banked
 14866  010824  5134               	movf	52,w,b	;volatile
 14867  010826  0B0F               	andlw	15
 14868  010828  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14869  01082A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14870  01082C  0D01               	mullw	1
 14871  01082E  0E19               	movlw	low _ep_data_out
 14872  010830  24F3               	addwf	prodl,w,c
 14873  010832  6ED9               	movwf	fsr2l,c
 14874  010834  0E00               	movlw	high _ep_data_out
 14875  010836  D00A               	goto	L9
 14876  010838                     i2l5534:
 14877                           
 14878                           ; BSR set to: 13
 14879                           ;usb_device.c: 2870: else
 14880                           ;usb_device.c: 2871: {
 14881                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 14882  010838  010D               	movlb	13	; () banked
 14883  01083A  5134               	movf	52,w,b	;volatile
 14884  01083C  0B0F               	andlw	15
 14885  01083E  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14886  010840  5042               	movf	??_USBStdFeatureReqHandler,w,c
 14887  010842  0D01               	mullw	1
 14888  010844  0E16               	movlw	low _ep_data_in
 14889  010846  24F3               	addwf	prodl,w,c
 14890  010848  6ED9               	movwf	fsr2l,c
 14891  01084A  0E00               	movlw	high _ep_data_in
 14892  01084C                     L9:
 14893  01084C  20F4               	addwfc	prodh,w,c
 14894  01084E  6EDA               	movwf	fsr2h,c
 14895  010850  82DF               	bsf	indf2,1,c
 14896  010852                     i2l5536:
 14897                           
 14898                           ; BSR set to: 13
 14899                           ;usb_device.c: 2873: }
 14900                           ;usb_device.c: 2874: }
 14901                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 14902  010852  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14903  010856  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14904  01085A  0E00               	movlw	0
 14905  01085C  84DB               	bsf	plusw2,2,c
 14906                           
 14907                           ; BSR set to: 13
 14908                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 14909  01085E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14910  010862  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14911  010866  0E00               	movlw	0
 14912  010868  8EDB               	bsf	plusw2,7,c
 14913                           
 14914                           ;usb_device.c: 2879: }
 14915  01086A  0012               	return	
 14916  01086C                     i2l5540:
 14917                           
 14918                           ; BSR set to: 13
 14919                           ;usb_device.c: 2880: else
 14920                           ;usb_device.c: 2881: {
 14921                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 14922  01086C  0E04               	movlw	4
 14923  01086E  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 14924                           
 14925                           ; BSR set to: 13
 14926                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 14927  010870  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14928  010874  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14929  010878  AEDF               	btfss	indf2,7,c
 14930  01087A  D01B               	goto	i2l5550
 14931                           
 14932                           ; BSR set to: 13
 14933                           ;usb_device.c: 2888: {
 14934                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 14935  01087C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14936  010880  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14937  010884  0E7F               	movlw	127
 14938  010886  16DF               	andwf	indf2,f,c
 14939                           
 14940                           ; BSR set to: 13
 14941                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 14942  010888  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14943  01088C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14944  010890  0E00               	movlw	0
 14945  010892  8CDB               	bsf	plusw2,6,c
 14946                           
 14947                           ; BSR set to: 13
 14948                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14949  010894  0E00               	movlw	0
 14950  010896  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14951  010898  0E05               	movlw	5
 14952  01089A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14953  01089C  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14954  0108A0  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14955  0108A4  0E00               	movlw	0
 14956  0108A6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14957  0108A8  0E02               	movlw	2
 14958  0108AA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14959  0108AC  EC39  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14960                           
 14961                           ;usb_device.c: 2894: }
 14962  0108B0  D006               	goto	i2l5552
 14963  0108B2                     i2l5550:
 14964                           
 14965                           ;usb_device.c: 2895: else
 14966                           ;usb_device.c: 2896: {
 14967                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 14968  0108B2  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14969  0108B6  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14970  0108BA  0E00               	movlw	0
 14971  0108BC  8CDB               	bsf	plusw2,6,c
 14972  0108BE                     i2l5552:
 14973                           
 14974                           ;usb_device.c: 2899: }
 14975                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 14976  0108BE  0E04               	movlw	4
 14977  0108C0  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 14978                           
 14979                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14980  0108C2  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14981  0108C4  D006               	goto	i2l1315
 14982  0108C6  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14983  0108CA  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14984  0108CE  AEDF               	btfss	indf2,7,c
 14985  0108D0  D030               	goto	i2l5566
 14986  0108D2                     i2l1315:
 14987                           
 14988                           ;usb_device.c: 2910: {
 14989                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 14990  0108D2  010D               	movlb	13	; () banked
 14991  0108D4  BF34               	btfsc	52,7,b	;volatile
 14992  0108D6  D00B               	goto	i2l5560
 14993                           
 14994                           ; BSR set to: 13
 14995                           ;usb_device.c: 2912: {
 14996                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 14997  0108D8  010D               	movlb	13	; () banked
 14998  0108DA  5134               	movf	52,w,b	;volatile
 14999  0108DC  0B0F               	andlw	15
 15000  0108DE  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15001  0108E0  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15002  0108E2  0D01               	mullw	1
 15003  0108E4  0E19               	movlw	low _ep_data_out
 15004  0108E6  24F3               	addwf	prodl,w,c
 15005  0108E8  6ED9               	movwf	fsr2l,c
 15006  0108EA  0E00               	movlw	high _ep_data_out
 15007  0108EC  D00A               	goto	L10
 15008  0108EE                     i2l5560:
 15009                           
 15010                           ; BSR set to: 13
 15011                           ;usb_device.c: 2915: else
 15012                           ;usb_device.c: 2916: {
 15013                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 15014  0108EE  010D               	movlb	13	; () banked
 15015  0108F0  5134               	movf	52,w,b	;volatile
 15016  0108F2  0B0F               	andlw	15
 15017  0108F4  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15018  0108F6  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15019  0108F8  0D01               	mullw	1
 15020  0108FA  0E16               	movlw	low _ep_data_in
 15021  0108FC  24F3               	addwf	prodl,w,c
 15022  0108FE  6ED9               	movwf	fsr2l,c
 15023  010900  0E00               	movlw	high _ep_data_in
 15024  010902                     L10:
 15025  010902  20F4               	addwfc	prodh,w,c
 15026  010904  6EDA               	movwf	fsr2h,c
 15027  010906  92DF               	bcf	indf2,1,c
 15028                           
 15029                           ; BSR set to: 13
 15030                           ;usb_device.c: 2918: }
 15031                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15032                           
 15033                           ; BSR set to: 13
 15034  010908  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15035  01090C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15036  010910  0E3B               	movlw	59
 15037  010912  16DF               	andwf	indf2,f,c
 15038                           
 15039                           ; BSR set to: 13
 15040                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15041  010914  0E00               	movlw	0
 15042  010916  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15043  010918  0E05               	movlw	5
 15044  01091A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15045  01091C  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15046  010920  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15047  010924  0E00               	movlw	0
 15048  010926  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15049  010928  0E02               	movlw	2
 15050  01092A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15051  01092C  EC39  F09B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15052                           
 15053                           ;usb_device.c: 2924: }
 15054  010930  D006               	goto	i2l5568
 15055  010932                     i2l5566:
 15056                           
 15057                           ;usb_device.c: 2925: else
 15058                           ;usb_device.c: 2926: {
 15059                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15060  010932  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15061  010936  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15062  01093A  0E3B               	movlw	59
 15063  01093C  16DF               	andwf	indf2,f,c
 15064  01093E                     i2l5568:
 15065                           
 15066                           ;usb_device.c: 2929: }
 15067                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 15068  01093E  010D               	movlb	13	; () banked
 15069  010940  5134               	movf	52,w,b	;volatile
 15070  010942  0B0F               	andlw	15
 15071  010944  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15072  010946  5042               	movf	??_USBStdFeatureReqHandler,w,c
 15073  010948  0D01               	mullw	1
 15074  01094A  0E26               	movlw	38
 15075  01094C  24F3               	addwf	prodl,w,c
 15076  01094E  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 15077  010950  0E0F               	movlw	15
 15078  010952  20F4               	addwfc	prodh,w,c
 15079  010954  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 15080                           
 15081                           ; BSR set to: 13
 15082                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 15083  010956  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 15084  01095A  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 15085  01095E  0EFE               	movlw	254
 15086  010960  16DF               	andwf	indf2,f,c
 15087                           
 15088                           ; BSR set to: 13
 15089  010962  0012               	return	
 15090  010964                     __end_of_USBStdFeatureReqHandler:
 15091                           	opt stack 0
 15092                           pclatu	equ	0xFFB
 15093                           pclath	equ	0xFFA
 15094                           tblptru	equ	0xFF8
 15095                           tblptrh	equ	0xFF7
 15096                           tblptrl	equ	0xFF6
 15097                           tablat	equ	0xFF5
 15098                           prodh	equ	0xFF4
 15099                           prodl	equ	0xFF3
 15100                           intcon	equ	0xFF2
 15101                           intcon2	equ	0xFF1
 15102                           indf0	equ	0xFEF
 15103                           postinc0	equ	0xFEE
 15104                           fsr0h	equ	0xFEA
 15105                           fsr0l	equ	0xFE9
 15106                           wreg	equ	0xFE8
 15107                           indf1	equ	0xFE7
 15108                           postinc1	equ	0xFE6
 15109                           postdec1	equ	0xFE5
 15110                           fsr1h	equ	0xFE2
 15111                           fsr1l	equ	0xFE1
 15112                           indf2	equ	0xFDF
 15113                           postinc2	equ	0xFDE
 15114                           postdec2	equ	0xFDD
 15115                           plusw2	equ	0xFDB
 15116                           fsr2h	equ	0xFDA
 15117                           fsr2l	equ	0xFD9
 15118                           status	equ	0xFD8
 15119                           
 15120 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 15121 ;; Defined at:
 15122 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 15123 ;; Parameters:    Size  Location     Type
 15124 ;;  event           2   12[COMRAM] enum E8545
 15125 ;;  pdata           2   14[COMRAM] PTR void 
 15126 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 15127 ;;  size            2   16[COMRAM] unsigned int 
 15128 ;; Auto vars:     Size  Location     Type
 15129 ;;		None
 15130 ;; Return value:  Size  Location     Type
 15131 ;;                  1    wreg      unsigned char 
 15132 ;; Registers used:
 15133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15134 ;; Tracked objects:
 15135 ;;		On entry : 0/0
 15136 ;;		On exit  : 0/0
 15137 ;;		Unchanged: 0/0
 15138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15139 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15142 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15143 ;;Total ram usage:        8 bytes
 15144 ;; Hardware stack levels used:    1
 15145 ;; Hardware stack levels required when called:    3
 15146 ;; This function calls:
 15147 ;;		_CDCInitEP
 15148 ;;		_USBCheckCDCRequest
 15149 ;; This function is called by:
 15150 ;;		_USBDeviceTasks
 15151 ;;		_USBStdSetCfgHandler
 15152 ;;		_USBSuspend
 15153 ;;		_USBWakeFromSuspend
 15154 ;;		_USBCtrlTrfSetupHandler
 15155 ;;		_USBCheckStdRequest
 15156 ;;		_USBStdFeatureReqHandler
 15157 ;; This function uses a non-reentrant model
 15158 ;;
 15159                           
 15160                           	psect	text76
 15161  013672                     __ptext76:
 15162                           	opt stack 0
 15163  013672                     _USER_USB_CALLBACK_EVENT_HANDLER:
 15164                           	opt stack 18
 15165                           
 15166                           ;My_usb_cdc.c: 45: switch ((int) event) {
 15167                           
 15168                           ; BSR set to: 13
 15169                           ;incstack = 0
 15170  013672  D006               	goto	i2l5272
 15171  013674                     i2l5266:
 15172                           
 15173                           ;My_usb_cdc.c: 47: CDCInitEP();
 15174  013674  EC1D  F098         	call	_CDCInitEP	;wreg free
 15175                           
 15176                           ;My_usb_cdc.c: 48: break;
 15177  013678  0012               	return	
 15178  01367A                     i2l5268:
 15179                           
 15180                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 15181  01367A  EC64  F094         	call	_USBCheckCDCRequest	;wreg free
 15182                           
 15183                           ;My_usb_cdc.c: 52: }
 15184                           
 15185                           ;My_usb_cdc.c: 51: break;
 15186  01367E  0012               	return	
 15187  013680                     i2l5272:
 15188  013680  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 15189  013684  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 15190                           
 15191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15192                           ; Switch size 1, requested type "space"
 15193                           ; Number of cases is 1, Range of values is 0 to 0
 15194                           ; switch strategies available:
 15195                           ; Name         Instructions Cycles
 15196                           ; simple_byte            4     3 (average)
 15197                           ;	Chosen strategy is simple_byte
 15198  013688  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 15199  01368A  0A00               	xorlw	0	; case 0
 15200  01368C  A4D8               	btfss	status,2,c
 15201  01368E  0012               	return	
 15202                           
 15203                           ; Switch size 1, requested type "space"
 15204                           ; Number of cases is 2, Range of values is 1 to 3
 15205                           ; switch strategies available:
 15206                           ; Name         Instructions Cycles
 15207                           ; simple_byte            7     4 (average)
 15208                           ;	Chosen strategy is simple_byte
 15209  013690  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15210  013692  0A01               	xorlw	1	; case 1
 15211  013694  B4D8               	btfsc	status,2,c
 15212  013696  D7EE               	goto	i2l5266
 15213  013698  0A02               	xorlw	2	; case 3
 15214  01369A  A4D8               	btfss	status,2,c
 15215  01369C  0012               	return	
 15216  01369E  D7ED               	goto	i2l5268
 15217  0136A0                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 15218                           	opt stack 0
 15219                           pclatu	equ	0xFFB
 15220                           pclath	equ	0xFFA
 15221                           tblptru	equ	0xFF8
 15222                           tblptrh	equ	0xFF7
 15223                           tblptrl	equ	0xFF6
 15224                           tablat	equ	0xFF5
 15225                           prodh	equ	0xFF4
 15226                           prodl	equ	0xFF3
 15227                           intcon	equ	0xFF2
 15228                           intcon2	equ	0xFF1
 15229                           indf0	equ	0xFEF
 15230                           postinc0	equ	0xFEE
 15231                           fsr0h	equ	0xFEA
 15232                           fsr0l	equ	0xFE9
 15233                           wreg	equ	0xFE8
 15234                           indf1	equ	0xFE7
 15235                           postinc1	equ	0xFE6
 15236                           postdec1	equ	0xFE5
 15237                           fsr1h	equ	0xFE2
 15238                           fsr1l	equ	0xFE1
 15239                           indf2	equ	0xFDF
 15240                           postinc2	equ	0xFDE
 15241                           postdec2	equ	0xFDD
 15242                           plusw2	equ	0xFDB
 15243                           fsr2h	equ	0xFDA
 15244                           fsr2l	equ	0xFD9
 15245                           status	equ	0xFD8
 15246                           
 15247 ;; *************** function _USBCheckCDCRequest *****************
 15248 ;; Defined at:
 15249 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 15250 ;; Parameters:    Size  Location     Type
 15251 ;;		None
 15252 ;; Auto vars:     Size  Location     Type
 15253 ;;		None
 15254 ;; Return value:  Size  Location     Type
 15255 ;;		None               void
 15256 ;; Registers used:
 15257 ;;		wreg, status,2, status,0
 15258 ;; Tracked objects:
 15259 ;;		On entry : 0/0
 15260 ;;		On exit  : 0/0
 15261 ;;		Unchanged: 0/0
 15262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15267 ;;Total ram usage:        0 bytes
 15268 ;; Hardware stack levels used:    1
 15269 ;; This function calls:
 15270 ;;		Nothing
 15271 ;; This function is called by:
 15272 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15273 ;; This function uses a non-reentrant model
 15274 ;;
 15275                           
 15276                           	psect	text77
 15277  0128C8                     __ptext77:
 15278                           	opt stack 0
 15279  0128C8                     _USBCheckCDCRequest:
 15280                           	opt stack 20
 15281                           
 15282                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 15283                           
 15284                           ;incstack = 0
 15285  0128C8  010D               	movlb	13	; () banked
 15286  0128CA  5130               	movf	48,w,b	;volatile
 15287  0128CC  0B1F               	andlw	31
 15288  0128CE  06E8               	decf	wreg,f,c
 15289  0128D0  A4D8               	btfss	status,2,c
 15290  0128D2  0012               	return	
 15291                           
 15292                           ; BSR set to: 13
 15293                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 15294                           
 15295                           ; BSR set to: 13
 15296                           
 15297                           ; BSR set to: 13
 15298  0128D4  010D               	movlb	13	; () banked
 15299  0128D6  3930               	swapf	48,w,b	;volatile
 15300  0128D8  32E8               	rrcf	wreg,f,c
 15301  0128DA  0B03               	andlw	3
 15302  0128DC  06E8               	decf	wreg,f,c
 15303  0128DE  A4D8               	btfss	status,2,c
 15304  0128E0  0012               	return	
 15305                           
 15306                           ; BSR set to: 13
 15307                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 15308                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 15309                           
 15310                           ; BSR set to: 13
 15311                           
 15312                           ; BSR set to: 13
 15313  0128E2  010D               	movlb	13	; () banked
 15314  0128E4  5134               	movf	52,w,b	;volatile
 15315  0128E6  B4D8               	btfsc	status,2,c
 15316  0128E8  D035               	goto	i2l5262
 15317                           
 15318                           ; BSR set to: 13
 15319  0128EA  010D               	movlb	13	; () banked
 15320  0128EC  0534               	decf	52,w,b	;volatile
 15321  0128EE  A4D8               	btfss	status,2,c
 15322  0128F0  0012               	return	
 15323  0128F2  D030               	goto	i2l5262
 15324  0128F4                     i2l5238:
 15325                           
 15326                           ; BSR set to: 13
 15327                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 15328  0128F4  0EC4               	movlw	low _dummy_encapsulated_cmd_response
 15329  0128F6  6E0A               	movwf	_inPipes,c	;volatile
 15330  0128F8  0E01               	movlw	high _dummy_encapsulated_cmd_response
 15331  0128FA  6E0B               	movwf	_inPipes+1,c	;volatile
 15332                           
 15333                           ; BSR set to: 13
 15334                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 15335  0128FC  0E00               	movlw	0
 15336  0128FE  6E0F               	movwf	_inPipes+5,c	;volatile
 15337  012900  0E08               	movlw	8
 15338  012902  6E0E               	movwf	_inPipes+4,c	;volatile
 15339                           
 15340                           ; BSR set to: 13
 15341                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15342  012904  800D               	bsf	_inPipes+3,0,c	;volatile
 15343                           
 15344                           ; BSR set to: 13
 15345                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 15346  012906  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15347                           
 15348                           ;usb_device_cdc.c: 232: break;
 15349  012908  0012               	return	
 15350  01290A                     i2l5246:
 15351                           
 15352                           ; BSR set to: 13
 15353                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 15354  01290A  0EC4               	movlw	low _dummy_encapsulated_cmd_response
 15355  01290C  6E0A               	movwf	_inPipes,c	;volatile
 15356  01290E  0E01               	movlw	high _dummy_encapsulated_cmd_response
 15357  012910  6E0B               	movwf	_inPipes+1,c	;volatile
 15358                           
 15359                           ; BSR set to: 13
 15360                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 15361  012912  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15362                           
 15363                           ;usb_device_cdc.c: 237: break;
 15364  012914  0012               	return	
 15365  012916                     i2l1372:
 15366                           
 15367                           ; BSR set to: 13
 15368                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 15369  012916  CD36 F005          	movff	3382,_outPipes+4	;volatile
 15370  01291A  CD37 F006          	movff	3383,_outPipes+5	;volatile
 15371                           
 15372                           ; BSR set to: 13
 15373                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 15374  01291E  0EEC               	movlw	low _line_coding
 15375  012920  6E01               	movwf	_outPipes,c	;volatile
 15376  012922  0E01               	movlw	high _line_coding
 15377  012924  6E02               	movwf	_outPipes+1,c	;volatile
 15378                           
 15379                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 15380  012926  0E00               	movlw	0
 15381  012928  6E07               	movwf	_outPipes+6,c	;volatile
 15382  01292A  0E00               	movlw	0
 15383  01292C  6E08               	movwf	_outPipes+7,c	;volatile
 15384  01292E  0E00               	movlw	0
 15385  012930  6E09               	movwf	_outPipes+8,c	;volatile
 15386                           
 15387                           ; BSR set to: 13
 15388                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 15389  012932  8E04               	bsf	_outPipes+3,7,c	;volatile
 15390                           
 15391                           ;usb_device_cdc.c: 246: break;
 15392  012934  0012               	return	
 15393  012936                     i2l5254:
 15394                           
 15395                           ; BSR set to: 13
 15396                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15397  012936  0EEC               	movlw	low _line_coding
 15398  012938  6E0A               	movwf	_inPipes,c	;volatile
 15399  01293A  0E01               	movlw	high _line_coding
 15400  01293C  6E0B               	movwf	_inPipes+1,c	;volatile
 15401                           
 15402                           ; BSR set to: 13
 15403  01293E  0E00               	movlw	0
 15404  012940  6E0F               	movwf	_inPipes+5,c	;volatile
 15405  012942  0E07               	movlw	7
 15406  012944  6E0E               	movwf	_inPipes+4,c	;volatile
 15407                           
 15408                           ; BSR set to: 13
 15409  012946  0EC1               	movlw	193
 15410  012948  6E0D               	movwf	_inPipes+3,c	;volatile
 15411                           
 15412                           ;usb_device_cdc.c: 253: break;
 15413  01294A  0012               	return	
 15414  01294C                     i2l1374:
 15415                           
 15416                           ; BSR set to: 13
 15417                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 15418  01294C  CD32 F0BE          	movff	3378,_control_signal_bitmap	;volatile
 15419                           
 15420                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 15421  012950  8E0D               	bsf	_inPipes+3,7,c	;volatile
 15422                           
 15423                           ; BSR set to: 13
 15424                           ;usb_device_cdc.c: 315: }
 15425                           
 15426                           ; BSR set to: 13
 15427                           ;usb_device_cdc.c: 314: break;
 15428                           
 15429                           ;usb_device_cdc.c: 313: default:
 15430                           
 15431                           ;usb_device_cdc.c: 289: break;
 15432  012952  0012               	return	
 15433  012954                     i2l5262:
 15434                           
 15435                           ; BSR set to: 13
 15436  012954  010D               	movlb	13	; () banked
 15437  012956  5131               	movf	49,w,b	;volatile
 15438                           
 15439                           ; Switch size 1, requested type "space"
 15440                           ; Number of cases is 5, Range of values is 0 to 34
 15441                           ; switch strategies available:
 15442                           ; Name         Instructions Cycles
 15443                           ; simple_byte           16     9 (average)
 15444                           ;	Chosen strategy is simple_byte
 15445  012958  0A00               	xorlw	0	; case 0
 15446  01295A  B4D8               	btfsc	status,2,c
 15447  01295C  D7CB               	goto	i2l5238
 15448  01295E  0A01               	xorlw	1	; case 1
 15449  012960  B4D8               	btfsc	status,2,c
 15450  012962  D7D3               	goto	i2l5246
 15451  012964  0A21               	xorlw	33	; case 32
 15452  012966  B4D8               	btfsc	status,2,c
 15453  012968  D7D6               	goto	i2l1372
 15454  01296A  0A01               	xorlw	1	; case 33
 15455  01296C  B4D8               	btfsc	status,2,c
 15456  01296E  D7E3               	goto	i2l5254
 15457  012970  0A03               	xorlw	3	; case 34
 15458  012972  A4D8               	btfss	status,2,c
 15459  012974  0012               	return	
 15460  012976  D7EA               	goto	i2l1374
 15461  012978                     __end_of_USBCheckCDCRequest:
 15462                           	opt stack 0
 15463                           pclatu	equ	0xFFB
 15464                           pclath	equ	0xFFA
 15465                           tblptru	equ	0xFF8
 15466                           tblptrh	equ	0xFF7
 15467                           tblptrl	equ	0xFF6
 15468                           tablat	equ	0xFF5
 15469                           prodh	equ	0xFF4
 15470                           prodl	equ	0xFF3
 15471                           intcon	equ	0xFF2
 15472                           intcon2	equ	0xFF1
 15473                           indf0	equ	0xFEF
 15474                           postinc0	equ	0xFEE
 15475                           fsr0h	equ	0xFEA
 15476                           fsr0l	equ	0xFE9
 15477                           wreg	equ	0xFE8
 15478                           indf1	equ	0xFE7
 15479                           postinc1	equ	0xFE6
 15480                           postdec1	equ	0xFE5
 15481                           fsr1h	equ	0xFE2
 15482                           fsr1l	equ	0xFE1
 15483                           indf2	equ	0xFDF
 15484                           postinc2	equ	0xFDE
 15485                           postdec2	equ	0xFDD
 15486                           plusw2	equ	0xFDB
 15487                           fsr2h	equ	0xFDA
 15488                           fsr2l	equ	0xFD9
 15489                           status	equ	0xFD8
 15490                           
 15491 ;; *************** function _CDCInitEP *****************
 15492 ;; Defined at:
 15493 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 15494 ;; Parameters:    Size  Location     Type
 15495 ;;		None
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;		None
 15498 ;; Return value:  Size  Location     Type
 15499 ;;		None               void
 15500 ;; Registers used:
 15501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15502 ;; Tracked objects:
 15503 ;;		On entry : 0/0
 15504 ;;		On exit  : 0/0
 15505 ;;		Unchanged: 0/0
 15506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15511 ;;Total ram usage:        0 bytes
 15512 ;; Hardware stack levels used:    1
 15513 ;; Hardware stack levels required when called:    2
 15514 ;; This function calls:
 15515 ;;		_USBEnableEndpoint
 15516 ;;		i2_USBTransferOnePacket
 15517 ;; This function is called by:
 15518 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15519 ;; This function uses a non-reentrant model
 15520 ;;
 15521                           
 15522                           	psect	text78
 15523  01303A                     __ptext78:
 15524                           	opt stack 0
 15525  01303A                     _CDCInitEP:
 15526                           	opt stack 18
 15527                           
 15528                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 15529                           
 15530                           ; BSR set to: 13
 15531                           ;incstack = 0
 15532  01303A  0E00               	movlw	0
 15533  01303C  0101               	movlb	1	; () banked
 15534  01303E  6FEC               	movwf	_line_coding& (0+255),b
 15535  013040  0E4B               	movlw	75
 15536  013042  6FED               	movwf	(_line_coding+1)& (0+255),b
 15537  013044  0E00               	movlw	0
 15538  013046  6FEE               	movwf	(_line_coding+2)& (0+255),b
 15539  013048  0E00               	movlw	0
 15540  01304A  6FEF               	movwf	(_line_coding+3)& (0+255),b
 15541                           
 15542                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 15543  01304C  0E00               	movlw	0
 15544  01304E  0101               	movlb	1	; () banked
 15545  013050  6FF0               	movwf	(_line_coding+4)& (0+255),b
 15546                           
 15547                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 15548  013052  0E00               	movlw	0
 15549  013054  0101               	movlb	1	; () banked
 15550  013056  6FF1               	movwf	(_line_coding+5)& (0+255),b
 15551                           
 15552                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 15553  013058  0E08               	movlw	8
 15554  01305A  0101               	movlb	1	; () banked
 15555  01305C  6FF2               	movwf	(_line_coding+6)& (0+255),b
 15556                           
 15557                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 15558  01305E  0E00               	movlw	0
 15559  013060  0100               	movlb	0	; () banked
 15560  013062  6FBB               	movwf	_cdc_rx_len& (0+255),b
 15561                           
 15562                           ; BSR set to: 0
 15563                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 15564  013064  0E1A               	movlw	26
 15565  013066  6E36               	movwf	USBEnableEndpoint@options,c
 15566  013068  0E01               	movlw	1
 15567  01306A  EC2D  F09A         	call	_USBEnableEndpoint
 15568                           
 15569                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 15570  01306E  0E1E               	movlw	30
 15571  013070  6E36               	movwf	USBEnableEndpoint@options,c
 15572  013072  0E02               	movlw	2
 15573  013074  EC2D  F09A         	call	_USBEnableEndpoint
 15574                           
 15575                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15576  013078  0E00               	movlw	0
 15577  01307A  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 15578  01307C  0E12               	movlw	low _cdc_data_rx
 15579  01307E  6E2F               	movwf	i2USBTransferOnePacket@data,c
 15580  013080  0E01               	movlw	high _cdc_data_rx
 15581  013082  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 15582  013084  0E40               	movlw	64
 15583  013086  6E31               	movwf	i2USBTransferOnePacket@len,c
 15584  013088  0E02               	movlw	2
 15585  01308A  ECF4  F092         	call	i2_USBTransferOnePacket
 15586  01308E  C02E  F0AE         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 15587  013092  C02F  F0AF         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15588                           
 15589                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 15590  013096  0E00               	movlw	0
 15591  013098  0100               	movlb	0	; () banked
 15592  01309A  6FAC               	movwf	_CDCDataInHandle& (0+255),b
 15593  01309C  0E00               	movlw	0
 15594  01309E  0100               	movlb	0	; () banked
 15595  0130A0  6FAD               	movwf	(_CDCDataInHandle+1)& (0+255),b
 15596                           
 15597                           ; BSR set to: 0
 15598                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 15599  0130A2  0E00               	movlw	0
 15600  0130A4  0100               	movlb	0	; () banked
 15601  0130A6  6FBC               	movwf	_cdc_trf_state& (0+255),b
 15602                           
 15603                           ; BSR set to: 0
 15604  0130A8  0012               	return		;funcret
 15605  0130AA                     __end_of_CDCInitEP:
 15606                           	opt stack 0
 15607                           pclatu	equ	0xFFB
 15608                           pclath	equ	0xFFA
 15609                           tblptru	equ	0xFF8
 15610                           tblptrh	equ	0xFF7
 15611                           tblptrl	equ	0xFF6
 15612                           tablat	equ	0xFF5
 15613                           prodh	equ	0xFF4
 15614                           prodl	equ	0xFF3
 15615                           intcon	equ	0xFF2
 15616                           intcon2	equ	0xFF1
 15617                           indf0	equ	0xFEF
 15618                           postinc0	equ	0xFEE
 15619                           fsr0h	equ	0xFEA
 15620                           fsr0l	equ	0xFE9
 15621                           wreg	equ	0xFE8
 15622                           indf1	equ	0xFE7
 15623                           postinc1	equ	0xFE6
 15624                           postdec1	equ	0xFE5
 15625                           fsr1h	equ	0xFE2
 15626                           fsr1l	equ	0xFE1
 15627                           indf2	equ	0xFDF
 15628                           postinc2	equ	0xFDE
 15629                           postdec2	equ	0xFDD
 15630                           plusw2	equ	0xFDB
 15631                           fsr2h	equ	0xFDA
 15632                           fsr2l	equ	0xFD9
 15633                           status	equ	0xFD8
 15634                           
 15635 ;; *************** function i2_USBTransferOnePacket *****************
 15636 ;; Defined at:
 15637 ;;		line 995 in file "../My_library/usb/usb_device.c"
 15638 ;; Parameters:    Size  Location     Type
 15639 ;;  ep              1    wreg     unsigned char 
 15640 ;;  dir             1    0[COMRAM] unsigned char 
 15641 ;;  data            2    1[COMRAM] PTR unsigned char 
 15642 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 15643 ;;  len             1    3[COMRAM] unsigned char 
 15644 ;; Auto vars:     Size  Location     Type
 15645 ;;  ep              1    4[COMRAM] unsigned char 
 15646 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 15647 ;;		 -> NULL(0), BDT(48), 
 15648 ;; Return value:  Size  Location     Type
 15649 ;;                  2    0[COMRAM] PTR void 
 15650 ;; Registers used:
 15651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15652 ;; Tracked objects:
 15653 ;;		On entry : 0/0
 15654 ;;		On exit  : 0/0
 15655 ;;		Unchanged: 0/0
 15656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15658 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15660 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15661 ;;Total ram usage:        7 bytes
 15662 ;; Hardware stack levels used:    1
 15663 ;; This function calls:
 15664 ;;		Nothing
 15665 ;; This function is called by:
 15666 ;;		_CDCInitEP
 15667 ;; This function uses a non-reentrant model
 15668 ;;
 15669                           
 15670                           	psect	text79
 15671  0125E8                     __ptext79:
 15672                           	opt stack 0
 15673  0125E8                     i2_USBTransferOnePacket:
 15674                           	opt stack 19
 15675                           
 15676                           ; BSR set to: 0
 15677                           ;incstack = 0
 15678                           ;i2USBTransferOnePacket@ep stored from wreg
 15679  0125E8  6E32               	movwf	i2USBTransferOnePacket@ep,c
 15680                           
 15681                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 15682                           ;usb_device.c: 1000: if(dir != 0)
 15683  0125EA  502E               	movf	i2USBTransferOnePacket@dir,w,c
 15684  0125EC  B4D8               	btfsc	status,2,c
 15685  0125EE  D007               	goto	i2l5186
 15686                           
 15687                           ;usb_device.c: 1001: {
 15688                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 15689  0125F0  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15690  0125F2  0D02               	mullw	2
 15691  0125F4  0E10               	movlw	low _pBDTEntryIn
 15692  0125F6  24F3               	addwf	prodl,w,c
 15693  0125F8  6ED9               	movwf	fsr2l,c
 15694  0125FA  0E00               	movlw	high _pBDTEntryIn
 15695  0125FC  D006               	goto	L11
 15696  0125FE                     i2l5186:
 15697                           
 15698                           ;usb_device.c: 1005: else
 15699                           ;usb_device.c: 1006: {
 15700                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 15701  0125FE  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15702  012600  0D02               	mullw	2
 15703  012602  0E9E               	movlw	low _pBDTEntryOut
 15704  012604  24F3               	addwf	prodl,w,c
 15705  012606  6ED9               	movwf	fsr2l,c
 15706  012608  0E00               	movlw	high _pBDTEntryOut
 15707  01260A                     L11:
 15708  01260A  20F4               	addwfc	prodh,w,c
 15709  01260C  6EDA               	movwf	fsr2h,c
 15710  01260E  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 15711  012612  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 15712                           
 15713                           ;usb_device.c: 1009: }
 15714                           ;usb_device.c: 1013: if(handle == 0)
 15715  012616  5033               	movf	i2USBTransferOnePacket@handle,w,c
 15716  012618  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 15717  01261A  A4D8               	btfss	status,2,c
 15718  01261C  D005               	goto	i2l5194
 15719                           
 15720                           ;usb_device.c: 1014: {
 15721                           ;usb_device.c: 1015: return 0;
 15722  01261E  0E00               	movlw	0
 15723  012620  6E2E               	movwf	?i2_USBTransferOnePacket,c
 15724  012622  0E00               	movlw	0
 15725  012624  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 15726  012626  0012               	return	
 15727  012628                     i2l5194:
 15728                           
 15729                           ;usb_device.c: 1016: }
 15730                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 15731  012628  EE20 F002          	lfsr	2,2
 15732  01262C  5033               	movf	i2USBTransferOnePacket@handle,w,c
 15733  01262E  26D9               	addwf	fsr2l,f,c
 15734  012630  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 15735  012632  22DA               	addwfc	fsr2h,f,c
 15736  012634  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 15737  012638  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 15738                           
 15739                           ;usb_device.c: 1030: handle->CNT = len;
 15740  01263C  EE20 F001          	lfsr	2,1
 15741  012640  5033               	movf	i2USBTransferOnePacket@handle,w,c
 15742  012642  26D9               	addwf	fsr2l,f,c
 15743  012644  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 15744  012646  22DA               	addwfc	fsr2h,f,c
 15745  012648  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 15746                           
 15747                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 15748  01264C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 15749  012650  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 15750  012654  0E40               	movlw	64
 15751  012656  16DF               	andwf	indf2,f,c
 15752                           
 15753                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 15754  012658  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 15755  01265C  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 15756  012660  0E00               	movlw	0
 15757  012662  86DB               	bsf	plusw2,3,c
 15758                           
 15759                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 15760  012664  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 15761  012668  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 15762  01266C  0E00               	movlw	0
 15763  01266E  8EDB               	bsf	plusw2,7,c
 15764                           
 15765                           ;usb_device.c: 1036: if(dir != 0)
 15766  012670  502E               	movf	i2USBTransferOnePacket@dir,w,c
 15767  012672  B4D8               	btfsc	status,2,c
 15768  012674  D007               	goto	i2l5206
 15769                           
 15770                           ;usb_device.c: 1037: {
 15771                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 15772  012676  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15773  012678  0D02               	mullw	2
 15774  01267A  0E10               	movlw	low _pBDTEntryIn
 15775  01267C  24F3               	addwf	prodl,w,c
 15776  01267E  6ED9               	movwf	fsr2l,c
 15777  012680  0E00               	movlw	high _pBDTEntryIn
 15778  012682  D006               	goto	L12
 15779  012684                     i2l5206:
 15780                           
 15781                           ;usb_device.c: 1041: else
 15782                           ;usb_device.c: 1042: {
 15783                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 15784  012684  5032               	movf	i2USBTransferOnePacket@ep,w,c
 15785  012686  0D02               	mullw	2
 15786  012688  0E9E               	movlw	low _pBDTEntryOut
 15787  01268A  24F3               	addwf	prodl,w,c
 15788  01268C  6ED9               	movwf	fsr2l,c
 15789  01268E  0E00               	movlw	high _pBDTEntryOut
 15790  012690                     L12:
 15791  012690  20F4               	addwfc	prodh,w,c
 15792  012692  6EDA               	movwf	fsr2h,c
 15793  012694  0E04               	movlw	4
 15794  012696  1ADF               	xorwf	indf2,f,c
 15795                           
 15796                           ;usb_device.c: 1045: }
 15797                           ;usb_device.c: 1046: return (void*)handle;
 15798  012698  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 15799  01269C  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 15800  0126A0  0012               	return	
 15801  0126A2                     __end_ofi2_USBTransferOnePacket:
 15802                           	opt stack 0
 15803                           pclatu	equ	0xFFB
 15804                           pclath	equ	0xFFA
 15805                           tblptru	equ	0xFF8
 15806                           tblptrh	equ	0xFF7
 15807                           tblptrl	equ	0xFF6
 15808                           tablat	equ	0xFF5
 15809                           prodh	equ	0xFF4
 15810                           prodl	equ	0xFF3
 15811                           intcon	equ	0xFF2
 15812                           intcon2	equ	0xFF1
 15813                           indf0	equ	0xFEF
 15814                           postinc0	equ	0xFEE
 15815                           fsr0h	equ	0xFEA
 15816                           fsr0l	equ	0xFE9
 15817                           wreg	equ	0xFE8
 15818                           indf1	equ	0xFE7
 15819                           postinc1	equ	0xFE6
 15820                           postdec1	equ	0xFE5
 15821                           fsr1h	equ	0xFE2
 15822                           fsr1l	equ	0xFE1
 15823                           indf2	equ	0xFDF
 15824                           postinc2	equ	0xFDE
 15825                           postdec2	equ	0xFDD
 15826                           plusw2	equ	0xFDB
 15827                           fsr2h	equ	0xFDA
 15828                           fsr2l	equ	0xFD9
 15829                           status	equ	0xFD8
 15830                           
 15831 ;; *************** function _USBEnableEndpoint *****************
 15832 ;; Defined at:
 15833 ;;		line 878 in file "../My_library/usb/usb_device.c"
 15834 ;; Parameters:    Size  Location     Type
 15835 ;;  ep              1    wreg     unsigned char 
 15836 ;;  options         1    8[COMRAM] unsigned char 
 15837 ;; Auto vars:     Size  Location     Type
 15838 ;;  ep              1   11[COMRAM] unsigned char 
 15839 ;;  p               2    9[COMRAM] PTR unsigned char 
 15840 ;;		 -> UEP0(1), 
 15841 ;; Return value:  Size  Location     Type
 15842 ;;		None               void
 15843 ;; Registers used:
 15844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15845 ;; Tracked objects:
 15846 ;;		On entry : 0/0
 15847 ;;		On exit  : 0/0
 15848 ;;		Unchanged: 0/0
 15849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15850 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15851 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15853 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15854 ;;Total ram usage:        4 bytes
 15855 ;; Hardware stack levels used:    1
 15856 ;; Hardware stack levels required when called:    1
 15857 ;; This function calls:
 15858 ;;		_USBConfigureEndpoint
 15859 ;; This function is called by:
 15860 ;;		_CDCInitEP
 15861 ;; This function uses a non-reentrant model
 15862 ;;
 15863                           
 15864                           	psect	text80
 15865  01345A                     __ptext80:
 15866                           	opt stack 0
 15867  01345A                     _USBEnableEndpoint:
 15868                           	opt stack 18
 15869                           
 15870                           ;incstack = 0
 15871                           ;USBEnableEndpoint@ep stored from wreg
 15872  01345A  6E39               	movwf	USBEnableEndpoint@ep,c
 15873                           
 15874                           ;usb_device.c: 880: unsigned char* p;
 15875                           ;usb_device.c: 884: if(options & 0x04)
 15876  01345C  A436               	btfss	USBEnableEndpoint@options,2,c
 15877  01345E  D005               	goto	i2l5174
 15878                           
 15879                           ;usb_device.c: 885: {
 15880                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 15881  013460  0E00               	movlw	0
 15882  013462  6E2E               	movwf	USBConfigureEndpoint@direction,c
 15883  013464  5039               	movf	USBEnableEndpoint@ep,w,c
 15884  013466  EC04  F096         	call	_USBConfigureEndpoint
 15885  01346A                     i2l5174:
 15886                           
 15887                           ;usb_device.c: 887: }
 15888                           ;usb_device.c: 888: if(options & 0x02)
 15889  01346A  A236               	btfss	USBEnableEndpoint@options,1,c
 15890  01346C  D005               	goto	i2l5178
 15891                           
 15892                           ;usb_device.c: 889: {
 15893                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 15894  01346E  0E01               	movlw	1
 15895  013470  6E2E               	movwf	USBConfigureEndpoint@direction,c
 15896  013472  5039               	movf	USBEnableEndpoint@ep,w,c
 15897  013474  EC04  F096         	call	_USBConfigureEndpoint
 15898  013478                     i2l5178:
 15899                           
 15900                           ;usb_device.c: 891: }
 15901                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 15902  013478  5039               	movf	USBEnableEndpoint@ep,w,c
 15903  01347A  0D01               	mullw	1
 15904  01347C  0E26               	movlw	38
 15905  01347E  24F3               	addwf	prodl,w,c
 15906  013480  6E37               	movwf	USBEnableEndpoint@p,c
 15907  013482  0E0F               	movlw	15
 15908  013484  20F4               	addwfc	prodh,w,c
 15909  013486  6E38               	movwf	USBEnableEndpoint@p+1,c
 15910                           
 15911                           ;usb_device.c: 901: *p = options;
 15912  013488  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 15913  01348C  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 15914  013490  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 15915  013494  0012               	return		;funcret
 15916  013496                     __end_of_USBEnableEndpoint:
 15917                           	opt stack 0
 15918                           pclatu	equ	0xFFB
 15919                           pclath	equ	0xFFA
 15920                           tblptru	equ	0xFF8
 15921                           tblptrh	equ	0xFF7
 15922                           tblptrl	equ	0xFF6
 15923                           tablat	equ	0xFF5
 15924                           prodh	equ	0xFF4
 15925                           prodl	equ	0xFF3
 15926                           intcon	equ	0xFF2
 15927                           intcon2	equ	0xFF1
 15928                           indf0	equ	0xFEF
 15929                           postinc0	equ	0xFEE
 15930                           fsr0h	equ	0xFEA
 15931                           fsr0l	equ	0xFE9
 15932                           wreg	equ	0xFE8
 15933                           indf1	equ	0xFE7
 15934                           postinc1	equ	0xFE6
 15935                           postdec1	equ	0xFE5
 15936                           fsr1h	equ	0xFE2
 15937                           fsr1l	equ	0xFE1
 15938                           indf2	equ	0xFDF
 15939                           postinc2	equ	0xFDE
 15940                           postdec2	equ	0xFDD
 15941                           plusw2	equ	0xFDB
 15942                           fsr2h	equ	0xFDA
 15943                           fsr2l	equ	0xFD9
 15944                           status	equ	0xFD8
 15945                           
 15946 ;; *************** function _USBConfigureEndpoint *****************
 15947 ;; Defined at:
 15948 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 15949 ;; Parameters:    Size  Location     Type
 15950 ;;  EPNum           1    wreg     unsigned char 
 15951 ;;  direction       1    0[COMRAM] unsigned char 
 15952 ;; Auto vars:     Size  Location     Type
 15953 ;;  EPNum           1    5[COMRAM] unsigned char 
 15954 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 15955 ;;		 -> BDT(48), 
 15956 ;; Return value:  Size  Location     Type
 15957 ;;		None               void
 15958 ;; Registers used:
 15959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15960 ;; Tracked objects:
 15961 ;;		On entry : 0/0
 15962 ;;		On exit  : 0/0
 15963 ;;		Unchanged: 0/0
 15964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15965 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15966 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15967 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15968 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15969 ;;Total ram usage:        8 bytes
 15970 ;; Hardware stack levels used:    1
 15971 ;; This function calls:
 15972 ;;		Nothing
 15973 ;; This function is called by:
 15974 ;;		_USBEnableEndpoint
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           	psect	text81
 15979  012C08                     __ptext81:
 15980                           	opt stack 0
 15981  012C08                     _USBConfigureEndpoint:
 15982                           	opt stack 18
 15983                           
 15984                           ;incstack = 0
 15985                           ;USBConfigureEndpoint@EPNum stored from wreg
 15986  012C08  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 15987                           
 15988                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 15989                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 15990  012C0A  0E00               	movlw	0
 15991  012C0C  6E34               	movwf	USBConfigureEndpoint@handle,c
 15992  012C0E  0E0D               	movlw	13
 15993  012C10  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 15994                           
 15995                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 15996  012C12  502E               	movf	USBConfigureEndpoint@direction,w,c
 15997  012C14  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 15998  012C16  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 15999  012C18  90D8               	bcf	status,0,c
 16000  012C1A  362F               	rlcf	??_USBConfigureEndpoint,f,c
 16001  012C1C  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 16002  012C1E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16003  012C20  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 16004  012C22  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 16005  012C24  90D8               	bcf	status,0,c
 16006  012C26  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16007  012C28  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16008  012C2A  90D8               	bcf	status,0,c
 16009  012C2C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16010  012C2E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16011  012C30  502F               	movf	??_USBConfigureEndpoint,w,c
 16012  012C32  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 16013  012C34  5030               	movf	??_USBConfigureEndpoint+1,w,c
 16014  012C36  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 16015  012C38  90D8               	bcf	status,0,c
 16016  012C3A  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16017  012C3C  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16018  012C3E  90D8               	bcf	status,0,c
 16019  012C40  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 16020  012C42  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 16021  012C44  5031               	movf	??_USBConfigureEndpoint+2,w,c
 16022  012C46  2634               	addwf	USBConfigureEndpoint@handle,f,c
 16023  012C48  5032               	movf	??_USBConfigureEndpoint+3,w,c
 16024  012C4A  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16025                           
 16026                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 16027  012C4C  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16028  012C50  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16029  012C54  9EDF               	bcf	indf2,7,c
 16030                           
 16031                           ;usb_device.c: 1557: if(direction == 0)
 16032  012C56  502E               	movf	USBConfigureEndpoint@direction,w,c
 16033  012C58  A4D8               	btfss	status,2,c
 16034  012C5A  D007               	goto	i2l5164
 16035                           
 16036                           ;usb_device.c: 1558: {
 16037                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 16038  012C5C  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16039  012C5E  0D02               	mullw	2
 16040  012C60  0E9E               	movlw	low _pBDTEntryOut
 16041  012C62  24F3               	addwf	prodl,w,c
 16042  012C64  6ED9               	movwf	fsr2l,c
 16043  012C66  0E00               	movlw	high _pBDTEntryOut
 16044  012C68  D006               	goto	L13
 16045  012C6A                     i2l5164:
 16046                           
 16047                           ;usb_device.c: 1561: else
 16048                           ;usb_device.c: 1562: {
 16049                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 16050  012C6A  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 16051  012C6C  0D02               	mullw	2
 16052  012C6E  0E10               	movlw	low _pBDTEntryIn
 16053  012C70  24F3               	addwf	prodl,w,c
 16054  012C72  6ED9               	movwf	fsr2l,c
 16055  012C74  0E00               	movlw	high _pBDTEntryIn
 16056  012C76                     L13:
 16057  012C76  20F4               	addwfc	prodh,w,c
 16058  012C78  6EDA               	movwf	fsr2h,c
 16059  012C7A  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16060  012C7E  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16061                           
 16062                           ;usb_device.c: 1564: }
 16063                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 16064  012C82  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16065  012C86  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16066  012C8A  9CDF               	bcf	indf2,6,c
 16067                           
 16068                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 16069  012C8C  EE20 F004          	lfsr	2,4
 16070  012C90  5034               	movf	USBConfigureEndpoint@handle,w,c
 16071  012C92  26D9               	addwf	fsr2l,f,c
 16072  012C94  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 16073  012C96  22DA               	addwfc	fsr2h,f,c
 16074  012C98  8CDF               	bsf	indf2,6,c
 16075  012C9A  0012               	return		;funcret
 16076  012C9C                     __end_of_USBConfigureEndpoint:
 16077                           	opt stack 0
 16078                           pclatu	equ	0xFFB
 16079                           pclath	equ	0xFFA
 16080                           tblptru	equ	0xFF8
 16081                           tblptrh	equ	0xFF7
 16082                           tblptrl	equ	0xFF6
 16083                           tablat	equ	0xFF5
 16084                           prodh	equ	0xFF4
 16085                           prodl	equ	0xFF3
 16086                           intcon	equ	0xFF2
 16087                           intcon2	equ	0xFF1
 16088                           indf0	equ	0xFEF
 16089                           postinc0	equ	0xFEE
 16090                           fsr0h	equ	0xFEA
 16091                           fsr0l	equ	0xFE9
 16092                           wreg	equ	0xFE8
 16093                           indf1	equ	0xFE7
 16094                           postinc1	equ	0xFE6
 16095                           postdec1	equ	0xFE5
 16096                           fsr1h	equ	0xFE2
 16097                           fsr1l	equ	0xFE1
 16098                           indf2	equ	0xFDF
 16099                           postinc2	equ	0xFDE
 16100                           postdec2	equ	0xFDD
 16101                           plusw2	equ	0xFDB
 16102                           fsr2h	equ	0xFDA
 16103                           fsr2l	equ	0xFD9
 16104                           status	equ	0xFD8
 16105                           
 16106 ;; *************** function _USBCtrlTrfOutHandler *****************
 16107 ;; Defined at:
 16108 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;		None
 16111 ;; Auto vars:     Size  Location     Type
 16112 ;;		None
 16113 ;; Return value:  Size  Location     Type
 16114 ;;		None               void
 16115 ;; Registers used:
 16116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16117 ;; Tracked objects:
 16118 ;;		On entry : 0/0
 16119 ;;		On exit  : 0/0
 16120 ;;		Unchanged: 0/0
 16121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16126 ;;Total ram usage:        0 bytes
 16127 ;; Hardware stack levels used:    1
 16128 ;; Hardware stack levels required when called:    2
 16129 ;; This function calls:
 16130 ;;		_USBCtrlTrfRxService
 16131 ;; This function is called by:
 16132 ;;		_USBCtrlEPService
 16133 ;; This function uses a non-reentrant model
 16134 ;;
 16135                           
 16136                           	psect	text82
 16137  013240                     __ptext82:
 16138                           	opt stack 0
 16139  013240                     _USBCtrlTrfOutHandler:
 16140                           	opt stack 18
 16141                           
 16142                           ;usb_device.c: 2543: if(controlTransferState == 2)
 16143                           
 16144                           ;incstack = 0
 16145  013240  0E02               	movlw	2
 16146  013242  1829               	xorwf	_controlTransferState,w,c	;volatile
 16147  013244  A4D8               	btfss	status,2,c
 16148  013246  D003               	goto	i2l6062
 16149                           
 16150                           ;usb_device.c: 2544: {
 16151                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 16152  013248  ECF5  F08A         	call	_USBCtrlTrfRxService	;wreg free
 16153                           
 16154                           ;usb_device.c: 2546: }
 16155  01324C  0012               	return	
 16156  01324E                     i2l6062:
 16157                           
 16158                           ;usb_device.c: 2547: else
 16159                           ;usb_device.c: 2548: {
 16160                           ;usb_device.c: 2551: controlTransferState = 0;
 16161  01324E  0E00               	movlw	0
 16162  013250  6E29               	movwf	_controlTransferState,c	;volatile
 16163                           
 16164                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 16165  013252  5020               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 16166  013254  A4D8               	btfss	status,2,c
 16167  013256  D01F               	goto	i2l6070
 16168                           
 16169                           ;usb_device.c: 2559: {
 16170                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 16171  013258  EE20 F001          	lfsr	2,1
 16172  01325C  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16173  01325E  26D9               	addwf	fsr2l,f,c
 16174  013260  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16175  013262  22DA               	addwfc	fsr2h,f,c
 16176  013264  0E08               	movlw	8
 16177  013266  6EDF               	movwf	indf2,c
 16178                           
 16179                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16180  013268  EE20 F002          	lfsr	2,2
 16181  01326C  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16182  01326E  26D9               	addwf	fsr2l,f,c
 16183  013270  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16184  013272  22DA               	addwfc	fsr2h,f,c
 16185  013274  0E30               	movlw	48
 16186  013276  6EDE               	movwf	postinc2,c
 16187  013278  0E0D               	movlw	13
 16188  01327A  6EDD               	movwf	postdec2,c
 16189                           
 16190                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16191  01327C  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16192  013280  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16193  013284  0E0C               	movlw	12
 16194  013286  6EDF               	movwf	indf2,c
 16195                           
 16196                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16197  013288  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16198  01328C  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16199  013290  0E00               	movlw	0
 16200  013292  8EDB               	bsf	plusw2,7,c
 16201                           
 16202                           ;usb_device.c: 2564: }
 16203  013294  0012               	return	
 16204  013296                     i2l6070:
 16205                           
 16206                           ;usb_device.c: 2565: else
 16207                           ;usb_device.c: 2566: {
 16208                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 16209  013296  0E00               	movlw	0
 16210  013298  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16211  01329A  0012               	return	
 16212  01329C                     __end_of_USBCtrlTrfOutHandler:
 16213                           	opt stack 0
 16214                           pclatu	equ	0xFFB
 16215                           pclath	equ	0xFFA
 16216                           tblptru	equ	0xFF8
 16217                           tblptrh	equ	0xFF7
 16218                           tblptrl	equ	0xFF6
 16219                           tablat	equ	0xFF5
 16220                           prodh	equ	0xFF4
 16221                           prodl	equ	0xFF3
 16222                           intcon	equ	0xFF2
 16223                           intcon2	equ	0xFF1
 16224                           indf0	equ	0xFEF
 16225                           postinc0	equ	0xFEE
 16226                           fsr0h	equ	0xFEA
 16227                           fsr0l	equ	0xFE9
 16228                           wreg	equ	0xFE8
 16229                           indf1	equ	0xFE7
 16230                           postinc1	equ	0xFE6
 16231                           postdec1	equ	0xFE5
 16232                           fsr1h	equ	0xFE2
 16233                           fsr1l	equ	0xFE1
 16234                           indf2	equ	0xFDF
 16235                           postinc2	equ	0xFDE
 16236                           postdec2	equ	0xFDD
 16237                           plusw2	equ	0xFDB
 16238                           fsr2h	equ	0xFDA
 16239                           fsr2l	equ	0xFD9
 16240                           status	equ	0xFD8
 16241                           
 16242 ;; *************** function _USBCtrlTrfRxService *****************
 16243 ;; Defined at:
 16244 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 16245 ;; Parameters:    Size  Location     Type
 16246 ;;		None
 16247 ;; Auto vars:     Size  Location     Type
 16248 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16249 ;;  i               1    0[COMRAM] unsigned char 
 16250 ;; Return value:  Size  Location     Type
 16251 ;;		None               void
 16252 ;; Registers used:
 16253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16254 ;; Tracked objects:
 16255 ;;		On entry : 0/0
 16256 ;;		On exit  : 0/0
 16257 ;;		Unchanged: 0/0
 16258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16262 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16263 ;;Total ram usage:        2 bytes
 16264 ;; Hardware stack levels used:    1
 16265 ;; Hardware stack levels required when called:    1
 16266 ;; This function calls:
 16267 ;;		_USBCtrlEPAllowStatusStage
 16268 ;; This function is called by:
 16269 ;;		_USBCtrlTrfOutHandler
 16270 ;; This function uses a non-reentrant model
 16271 ;;
 16272                           
 16273                           	psect	text83
 16274  0115EA                     __ptext83:
 16275                           	opt stack 0
 16276  0115EA                     _USBCtrlTrfRxService:
 16277                           	opt stack 18
 16278                           
 16279                           ;usb_device.c: 1854: uint8_t byteToRead;
 16280                           ;usb_device.c: 1855: uint8_t i;
 16281                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16282                           
 16283                           ;incstack = 0
 16284  0115EA  EE20 F001          	lfsr	2,1
 16285  0115EE  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 16286  0115F0  26D9               	addwf	fsr2l,f,c
 16287  0115F2  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16288  0115F4  22DA               	addwfc	fsr2h,f,c
 16289  0115F6  50DF               	movf	indf2,w,c
 16290  0115F8  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 16291                           
 16292                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 16293  0115FA  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16294  0115FC  5C05               	subwf	_outPipes+4,w,c	;volatile
 16295  0115FE  0E00               	movlw	0
 16296  011600  5806               	subwfb	_outPipes+5,w,c	;volatile
 16297  011602  A0D8               	btfss	status,0,c
 16298                           
 16299                           ;usb_device.c: 1866: {
 16300                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 16301  011604  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 16302                           
 16303                           ;usb_device.c: 1868: }
 16304                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 16305  011608  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16306  01160A  5E05               	subwf	_outPipes+4,f,c	;volatile
 16307  01160C  0E00               	movlw	0
 16308  01160E  5A06               	subwfb	_outPipes+5,f,c	;volatile
 16309                           
 16310                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 16311  011610  0E00               	movlw	0
 16312  011612  6E2E               	movwf	USBCtrlTrfRxService@i,c
 16313  011614  D011               	goto	i2l5802
 16314  011616                     i2l5796:
 16315                           
 16316                           ;usb_device.c: 1875: {
 16317                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16318  011616  502E               	movf	USBCtrlTrfRxService@i,w,c
 16319  011618  0D01               	mullw	1
 16320  01161A  0E38               	movlw	56
 16321  01161C  24F3               	addwf	prodl,w,c
 16322  01161E  6ED9               	movwf	fsr2l,c
 16323  011620  0E0D               	movlw	13
 16324  011622  20F4               	addwfc	prodh,w,c
 16325  011624  6EDA               	movwf	fsr2h,c
 16326  011626  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 16327  01162A  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 16328  01162E  CFDF FFE7          	movff	indf2,indf1
 16329  011632  4A01               	infsnz	_outPipes,f,c	;volatile
 16330  011634  2A02               	incf	_outPipes+1,f,c	;volatile
 16331  011636  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 16332  011638                     i2l5802:
 16333  011638  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16334  01163A  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 16335  01163C  A0D8               	btfss	status,0,c
 16336  01163E  D7EB               	goto	i2l5796
 16337                           
 16338                           ;usb_device.c: 1877: }
 16339                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 16340  011640  5005               	movf	_outPipes+4,w,c	;volatile
 16341  011642  1006               	iorwf	_outPipes+5,w,c	;volatile
 16342  011644  B4D8               	btfsc	status,2,c
 16343  011646  D032               	goto	i2l5818
 16344                           
 16345                           ;usb_device.c: 1882: {
 16346                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 16347  011648  EE20 F001          	lfsr	2,1
 16348  01164C  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16349  01164E  26D9               	addwf	fsr2l,f,c
 16350  011650  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16351  011652  22DA               	addwfc	fsr2h,f,c
 16352  011654  0E08               	movlw	8
 16353  011656  6EDF               	movwf	indf2,c
 16354                           
 16355                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16356  011658  EE20 F002          	lfsr	2,2
 16357  01165C  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16358  01165E  26D9               	addwf	fsr2l,f,c
 16359  011660  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16360  011662  22DA               	addwfc	fsr2h,f,c
 16361  011664  0E38               	movlw	56
 16362  011666  6EDE               	movwf	postinc2,c
 16363  011668  0E0D               	movlw	13
 16364  01166A  6EDD               	movwf	postdec2,c
 16365                           
 16366                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16367  01166C  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16368  011670  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16369  011674  BCDF               	btfsc	indf2,6,c
 16370  011676  D00D               	goto	i2l5814
 16371                           
 16372                           ;usb_device.c: 1886: {
 16373                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16374  011678  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16375  01167C  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16376  011680  0E48               	movlw	72
 16377  011682  6EDF               	movwf	indf2,c
 16378                           
 16379                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16380  011684  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16381  011688  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16382  01168C  0E00               	movlw	0
 16383  01168E  8EDB               	bsf	plusw2,7,c
 16384                           
 16385                           ;usb_device.c: 1889: }
 16386  011690  0012               	return	
 16387  011692                     i2l5814:
 16388                           
 16389                           ;usb_device.c: 1890: else
 16390                           ;usb_device.c: 1891: {
 16391                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 16392  011692  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16393  011696  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16394  01169A  0E08               	movlw	8
 16395  01169C  6EDF               	movwf	indf2,c
 16396                           
 16397                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16398  01169E  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16399  0116A2  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16400  0116A6  0E00               	movlw	0
 16401  0116A8  8EDB               	bsf	plusw2,7,c
 16402                           
 16403                           ;usb_device.c: 1894: }
 16404                           ;usb_device.c: 1895: }
 16405  0116AA  0012               	return	
 16406  0116AC                     i2l5818:
 16407                           
 16408                           ;usb_device.c: 1896: else
 16409                           ;usb_device.c: 1897: {
 16410                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 16411  0116AC  EE20 F001          	lfsr	2,1
 16412  0116B0  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16413  0116B2  26D9               	addwf	fsr2l,f,c
 16414  0116B4  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16415  0116B6  22DA               	addwfc	fsr2h,f,c
 16416  0116B8  0E08               	movlw	8
 16417  0116BA  6EDF               	movwf	indf2,c
 16418                           
 16419                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16420  0116BC  EE20 F002          	lfsr	2,2
 16421  0116C0  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16422  0116C2  26D9               	addwf	fsr2l,f,c
 16423  0116C4  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16424  0116C6  22DA               	addwfc	fsr2h,f,c
 16425  0116C8  0E30               	movlw	48
 16426  0116CA  6EDE               	movwf	postinc2,c
 16427  0116CC  0E0D               	movlw	13
 16428  0116CE  6EDD               	movwf	postdec2,c
 16429                           
 16430                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16431  0116D0  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16432  0116D4  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16433  0116D8  0E04               	movlw	4
 16434  0116DA  6EDF               	movwf	indf2,c
 16435                           
 16436                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16437  0116DC  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16438  0116E0  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16439  0116E4  0E00               	movlw	0
 16440  0116E6  8EDB               	bsf	plusw2,7,c
 16441                           
 16442                           ;usb_device.c: 1926: }
 16443                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 16444                           
 16445                           ;usb_device.c: 1915: {
 16446                           ;usb_device.c: 1921: outPipes[0].pFunc();
 16447  0116E8  9E04               	bcf	_outPipes+3,7,c	;volatile
 16448                           
 16449                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 16450  0116EA  5024               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16451  0116EC  A4D8               	btfss	status,2,c
 16452  0116EE  0012               	return	
 16453                           
 16454                           ;usb_device.c: 1942: {
 16455                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 16456  0116F0  EC78  F091         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16457  0116F4  0012               	return	
 16458  0116F6                     __end_of_USBCtrlTrfRxService:
 16459                           	opt stack 0
 16460                           pclatu	equ	0xFFB
 16461                           pclath	equ	0xFFA
 16462                           tblptru	equ	0xFF8
 16463                           tblptrh	equ	0xFF7
 16464                           tblptrl	equ	0xFF6
 16465                           tablat	equ	0xFF5
 16466                           prodh	equ	0xFF4
 16467                           prodl	equ	0xFF3
 16468                           intcon	equ	0xFF2
 16469                           intcon2	equ	0xFF1
 16470                           indf0	equ	0xFEF
 16471                           postinc0	equ	0xFEE
 16472                           fsr0h	equ	0xFEA
 16473                           fsr0l	equ	0xFE9
 16474                           wreg	equ	0xFE8
 16475                           indf1	equ	0xFE7
 16476                           postinc1	equ	0xFE6
 16477                           postdec1	equ	0xFE5
 16478                           fsr1h	equ	0xFE2
 16479                           fsr1l	equ	0xFE1
 16480                           indf2	equ	0xFDF
 16481                           postinc2	equ	0xFDE
 16482                           postdec2	equ	0xFDD
 16483                           plusw2	equ	0xFDB
 16484                           fsr2h	equ	0xFDA
 16485                           fsr2l	equ	0xFD9
 16486                           status	equ	0xFD8
 16487                           
 16488 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16489 ;; Defined at:
 16490 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 16491 ;; Parameters:    Size  Location     Type
 16492 ;;		None
 16493 ;; Auto vars:     Size  Location     Type
 16494 ;;		None
 16495 ;; Return value:  Size  Location     Type
 16496 ;;		None               void
 16497 ;; Registers used:
 16498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16499 ;; Tracked objects:
 16500 ;;		On entry : 0/0
 16501 ;;		On exit  : 0/0
 16502 ;;		Unchanged: 0/0
 16503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16508 ;;Total ram usage:        0 bytes
 16509 ;; Hardware stack levels used:    1
 16510 ;; This function calls:
 16511 ;;		Nothing
 16512 ;; This function is called by:
 16513 ;;		_USBDeviceTasks
 16514 ;;		_USBCtrlEPServiceComplete
 16515 ;;		_USBCtrlTrfRxService
 16516 ;; This function uses a non-reentrant model
 16517 ;;
 16518                           
 16519                           	psect	text84
 16520  0122F0                     __ptext84:
 16521                           	opt stack 0
 16522  0122F0                     _USBCtrlEPAllowStatusStage:
 16523                           	opt stack 18
 16524                           
 16525                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 16526                           
 16527                           ;incstack = 0
 16528  0122F0  5026               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 16529  0122F2  A4D8               	btfss	status,2,c
 16530  0122F4  0012               	return	
 16531                           
 16532                           ;usb_device.c: 1424: {
 16533                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 16534  0122F6  0E01               	movlw	1
 16535  0122F8  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16536                           
 16537                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 16538  0122FA  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 16539  0122FC  A4D8               	btfss	status,2,c
 16540  0122FE  0012               	return	
 16541                           
 16542                           ;usb_device.c: 1427: {
 16543                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 16544  012300  0E01               	movlw	1
 16545  012302  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16546                           
 16547                           ;usb_device.c: 1432: if(controlTransferState == 2)
 16548  012304  0E02               	movlw	2
 16549  012306  1829               	xorwf	_controlTransferState,w,c	;volatile
 16550  012308  A4D8               	btfss	status,2,c
 16551  01230A  D015               	goto	i2l5348
 16552                           
 16553                           ;usb_device.c: 1433: {
 16554                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 16555  01230C  EE20 F001          	lfsr	2,1
 16556  012310  5010               	movf	_pBDTEntryIn,w,c
 16557  012312  26D9               	addwf	fsr2l,f,c
 16558  012314  5011               	movf	_pBDTEntryIn+1,w,c
 16559  012316  22DA               	addwfc	fsr2h,f,c
 16560  012318  0E00               	movlw	0
 16561  01231A  6EDF               	movwf	indf2,c
 16562                           
 16563                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16564  01231C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16565  012320  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16566  012324  0E48               	movlw	72
 16567  012326  6EDF               	movwf	indf2,c
 16568                           
 16569                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16570  012328  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16571  01232C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16572  012330  0E00               	movlw	0
 16573  012332  8EDB               	bsf	plusw2,7,c
 16574                           
 16575                           ;usb_device.c: 1437: }
 16576  012334  0012               	return	
 16577  012336                     i2l5348:
 16578                           
 16579                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 16580  012336  0429               	decf	_controlTransferState,w,c	;volatile
 16581  012338  A4D8               	btfss	status,2,c
 16582  01233A  0012               	return	
 16583                           
 16584                           ;usb_device.c: 1439: {
 16585                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 16586  01233C  0E00               	movlw	0
 16587  01233E  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16588                           
 16589                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 16590  012340  EE20 F001          	lfsr	2,1
 16591  012344  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 16592  012346  26D9               	addwf	fsr2l,f,c
 16593  012348  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16594  01234A  22DA               	addwfc	fsr2h,f,c
 16595  01234C  0E08               	movlw	8
 16596  01234E  6EDF               	movwf	indf2,c
 16597                           
 16598                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16599  012350  EE20 F002          	lfsr	2,2
 16600  012354  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 16601  012356  26D9               	addwf	fsr2l,f,c
 16602  012358  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16603  01235A  22DA               	addwfc	fsr2h,f,c
 16604  01235C  0E30               	movlw	48
 16605  01235E  6EDE               	movwf	postinc2,c
 16606  012360  0E0D               	movlw	13
 16607  012362  6EDD               	movwf	postdec2,c
 16608                           
 16609                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 16610  012364  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16611  012368  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16612  01236C  0E04               	movlw	4
 16613  01236E  6EDF               	movwf	indf2,c
 16614                           
 16615                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16616  012370  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16617  012374  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16618  012378  0E00               	movlw	0
 16619  01237A  8EDB               	bsf	plusw2,7,c
 16620                           
 16621                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 16622  01237C  0E01               	movlw	1
 16623  01237E  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16624                           
 16625                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 16626  012380  EE20 F001          	lfsr	2,1
 16627  012384  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16628  012386  26D9               	addwf	fsr2l,f,c
 16629  012388  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16630  01238A  22DA               	addwfc	fsr2h,f,c
 16631  01238C  0E08               	movlw	8
 16632  01238E  6EDF               	movwf	indf2,c
 16633                           
 16634                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16635  012390  EE20 F002          	lfsr	2,2
 16636  012394  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16637  012396  26D9               	addwf	fsr2l,f,c
 16638  012398  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16639  01239A  22DA               	addwfc	fsr2h,f,c
 16640  01239C  0E30               	movlw	48
 16641  01239E  6EDE               	movwf	postinc2,c
 16642  0123A0  0E0D               	movlw	13
 16643  0123A2  6EDD               	movwf	postdec2,c
 16644                           
 16645                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 16646  0123A4  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16647  0123A8  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16648  0123AC  0E80               	movlw	128
 16649  0123AE  6EDF               	movwf	indf2,c
 16650  0123B0  0012               	return	
 16651  0123B2                     __end_of_USBCtrlEPAllowStatusStage:
 16652                           	opt stack 0
 16653                           pclatu	equ	0xFFB
 16654                           pclath	equ	0xFFA
 16655                           tblptru	equ	0xFF8
 16656                           tblptrh	equ	0xFF7
 16657                           tblptrl	equ	0xFF6
 16658                           tablat	equ	0xFF5
 16659                           prodh	equ	0xFF4
 16660                           prodl	equ	0xFF3
 16661                           intcon	equ	0xFF2
 16662                           intcon2	equ	0xFF1
 16663                           indf0	equ	0xFEF
 16664                           postinc0	equ	0xFEE
 16665                           fsr0h	equ	0xFEA
 16666                           fsr0l	equ	0xFE9
 16667                           wreg	equ	0xFE8
 16668                           indf1	equ	0xFE7
 16669                           postinc1	equ	0xFE6
 16670                           postdec1	equ	0xFE5
 16671                           fsr1h	equ	0xFE2
 16672                           fsr1l	equ	0xFE1
 16673                           indf2	equ	0xFDF
 16674                           postinc2	equ	0xFDE
 16675                           postdec2	equ	0xFDD
 16676                           plusw2	equ	0xFDB
 16677                           fsr2h	equ	0xFDA
 16678                           fsr2l	equ	0xFD9
 16679                           status	equ	0xFD8
 16680                           
 16681 ;; *************** function _USBCtrlTrfInHandler *****************
 16682 ;; Defined at:
 16683 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 16684 ;; Parameters:    Size  Location     Type
 16685 ;;		None
 16686 ;; Auto vars:     Size  Location     Type
 16687 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16688 ;; Return value:  Size  Location     Type
 16689 ;;		None               void
 16690 ;; Registers used:
 16691 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16692 ;; Tracked objects:
 16693 ;;		On entry : 0/0
 16694 ;;		On exit  : 0/0
 16695 ;;		Unchanged: 0/0
 16696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16701 ;;Total ram usage:        1 bytes
 16702 ;; Hardware stack levels used:    1
 16703 ;; Hardware stack levels required when called:    1
 16704 ;; This function calls:
 16705 ;;		_USBCtrlTrfTxService
 16706 ;; This function is called by:
 16707 ;;		_USBCtrlEPService
 16708 ;; This function uses a non-reentrant model
 16709 ;;
 16710                           
 16711                           	psect	text85
 16712  0126A2                     __ptext85:
 16713                           	opt stack 0
 16714  0126A2                     _USBCtrlTrfInHandler:
 16715                           	opt stack 19
 16716                           
 16717                           ;usb_device.c: 2597: uint8_t lastDTS;
 16718                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 16719                           
 16720                           ;incstack = 0
 16721  0126A2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16722  0126A6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16723  0126AA  0E00               	movlw	0
 16724  0126AC  BCDF               	btfsc	indf2,6,c
 16725  0126AE  0E01               	movlw	1
 16726  0126B0  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 16727                           
 16728                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16729  0126B2  0E04               	movlw	4
 16730  0126B4  1A10               	xorwf	_pBDTEntryIn,f,c
 16731                           
 16732                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 16733  0126B6  0E08               	movlw	8
 16734  0126B8  1825               	xorwf	_USBDeviceState,w,c	;volatile
 16735  0126BA  A4D8               	btfss	status,2,c
 16736  0126BC  D00D               	goto	i2l6086
 16737                           
 16738                           ;usb_device.c: 2608: {
 16739                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 16740  0126BE  010D               	movlb	13	; () banked
 16741  0126C0  5132               	movf	50,w,b	;volatile
 16742  0126C2  0B7F               	andlw	127
 16743  0126C4  010F               	movlb	15	; () banked
 16744  0126C6  6F38               	movwf	56,b	;volatile
 16745                           
 16746                           ; BSR set to: 15
 16747                           ;usb_device.c: 2610: if(UADDR != 0u)
 16748  0126C8  010F               	movlb	15	; () banked
 16749  0126CA  5138               	movf	56,w,b	;volatile
 16750  0126CC  B4D8               	btfsc	status,2,c
 16751  0126CE  D002               	goto	i2l6084
 16752                           
 16753                           ; BSR set to: 15
 16754                           ;usb_device.c: 2611: {
 16755                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 16756  0126D0  0E10               	movlw	16
 16757  0126D2  D001               	goto	L14
 16758  0126D4                     i2l6084:
 16759                           
 16760                           ; BSR set to: 15
 16761                           ;usb_device.c: 2614: else
 16762                           ;usb_device.c: 2615: {
 16763                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 16764  0126D4  0E04               	movlw	4
 16765  0126D6                     L14:
 16766  0126D6  6E25               	movwf	_USBDeviceState,c	;volatile
 16767  0126D8                     i2l6086:
 16768                           
 16769                           ;usb_device.c: 2617: }
 16770                           ;usb_device.c: 2618: }
 16771                           ;usb_device.c: 2621: if(controlTransferState == 1)
 16772  0126D8  0429               	decf	_controlTransferState,w,c	;volatile
 16773  0126DA  A4D8               	btfss	status,2,c
 16774  0126DC  D03A               	goto	i2l1267
 16775                           
 16776                           ;usb_device.c: 2622: {
 16777                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 16778  0126DE  EE20 F002          	lfsr	2,2
 16779  0126E2  5010               	movf	_pBDTEntryIn,w,c
 16780  0126E4  26D9               	addwf	fsr2l,f,c
 16781  0126E6  5011               	movf	_pBDTEntryIn+1,w,c
 16782  0126E8  22DA               	addwfc	fsr2h,f,c
 16783  0126EA  0E38               	movlw	56
 16784  0126EC  6EDE               	movwf	postinc2,c
 16785  0126EE  0E0D               	movlw	13
 16786  0126F0  6EDD               	movwf	postdec2,c
 16787                           
 16788                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 16789  0126F2  ECDA  F08F         	call	_USBCtrlTrfTxService	;wreg free
 16790                           
 16791                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 16792  0126F6  0E02               	movlw	2
 16793  0126F8  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 16794  0126FA  A4D8               	btfss	status,2,c
 16795  0126FC  D00D               	goto	i2l6098
 16796                           
 16797                           ;usb_device.c: 2631: {
 16798                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 16799  0126FE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16800  012702  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16801  012706  0E04               	movlw	4
 16802  012708  6EDF               	movwf	indf2,c
 16803                           
 16804                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16805  01270A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16806  01270E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16807  012712  0E00               	movlw	0
 16808  012714  8EDB               	bsf	plusw2,7,c
 16809                           
 16810                           ;usb_device.c: 2636: }
 16811  012716  0012               	return	
 16812  012718                     i2l6098:
 16813                           
 16814                           ;usb_device.c: 2637: else
 16815                           ;usb_device.c: 2638: {
 16816                           ;usb_device.c: 2639: if(lastDTS == 0)
 16817  012718  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 16818  01271A  A4D8               	btfss	status,2,c
 16819  01271C  D00D               	goto	i2l6104
 16820                           
 16821                           ;usb_device.c: 2640: {
 16822                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16823  01271E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16824  012722  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16825  012726  0E48               	movlw	72
 16826  012728  6EDF               	movwf	indf2,c
 16827                           
 16828                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16829  01272A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16830  01272E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16831  012732  0E00               	movlw	0
 16832  012734  8EDB               	bsf	plusw2,7,c
 16833                           
 16834                           ;usb_device.c: 2643: }
 16835  012736  0012               	return	
 16836  012738                     i2l6104:
 16837                           
 16838                           ;usb_device.c: 2644: else
 16839                           ;usb_device.c: 2645: {
 16840                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 16841  012738  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16842  01273C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16843  012740  0E08               	movlw	8
 16844  012742  6EDF               	movwf	indf2,c
 16845                           
 16846                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16847  012744  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16848  012748  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16849  01274C  0E00               	movlw	0
 16850  01274E  8EDB               	bsf	plusw2,7,c
 16851                           
 16852                           ;usb_device.c: 2648: }
 16853                           ;usb_device.c: 2649: }
 16854                           ;usb_device.c: 2650: }
 16855  012750  0012               	return	
 16856  012752                     i2l1267:
 16857                           
 16858                           ;usb_device.c: 2651: else
 16859                           ;usb_device.c: 2652: {
 16860                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 16861  012752  BE04               	btfsc	_outPipes+3,7,c	;volatile
 16862                           
 16863                           ;usb_device.c: 2661: }
 16864                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 16865                           
 16866                           ;usb_device.c: 2659: {
 16867                           ;usb_device.c: 2660: outPipes[0].pFunc();
 16868  012754  9E04               	bcf	_outPipes+3,7,c	;volatile
 16869                           
 16870                           ;usb_device.c: 2663: }
 16871                           ;usb_device.c: 2665: controlTransferState = 0;
 16872  012756  0E00               	movlw	0
 16873  012758  6E29               	movwf	_controlTransferState,c	;volatile
 16874  01275A  0012               	return	
 16875  01275C                     __end_of_USBCtrlTrfInHandler:
 16876                           	opt stack 0
 16877                           pclatu	equ	0xFFB
 16878                           pclath	equ	0xFFA
 16879                           tblptru	equ	0xFF8
 16880                           tblptrh	equ	0xFF7
 16881                           tblptrl	equ	0xFF6
 16882                           tablat	equ	0xFF5
 16883                           prodh	equ	0xFF4
 16884                           prodl	equ	0xFF3
 16885                           intcon	equ	0xFF2
 16886                           intcon2	equ	0xFF1
 16887                           indf0	equ	0xFEF
 16888                           postinc0	equ	0xFEE
 16889                           fsr0h	equ	0xFEA
 16890                           fsr0l	equ	0xFE9
 16891                           wreg	equ	0xFE8
 16892                           indf1	equ	0xFE7
 16893                           postinc1	equ	0xFE6
 16894                           postdec1	equ	0xFE5
 16895                           fsr1h	equ	0xFE2
 16896                           fsr1l	equ	0xFE1
 16897                           indf2	equ	0xFDF
 16898                           postinc2	equ	0xFDE
 16899                           postdec2	equ	0xFDD
 16900                           plusw2	equ	0xFDB
 16901                           fsr2h	equ	0xFDA
 16902                           fsr2l	equ	0xFD9
 16903                           status	equ	0xFD8
 16904                           
 16905 ;; *************** function _USBCtrlTrfTxService *****************
 16906 ;; Defined at:
 16907 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 16908 ;; Parameters:    Size  Location     Type
 16909 ;;		None
 16910 ;; Auto vars:     Size  Location     Type
 16911 ;;  byteToSend      1    0[COMRAM] unsigned char 
 16912 ;; Return value:  Size  Location     Type
 16913 ;;		None               void
 16914 ;; Registers used:
 16915 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16916 ;; Tracked objects:
 16917 ;;		On entry : 0/0
 16918 ;;		On exit  : 0/0
 16919 ;;		Unchanged: 0/0
 16920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16925 ;;Total ram usage:        1 bytes
 16926 ;; Hardware stack levels used:    1
 16927 ;; This function calls:
 16928 ;;		Nothing
 16929 ;; This function is called by:
 16930 ;;		_USBCtrlEPAllowDataStage
 16931 ;;		_USBCtrlTrfInHandler
 16932 ;; This function uses a non-reentrant model
 16933 ;;
 16934                           
 16935                           	psect	text86
 16936  011FB4                     __ptext86:
 16937                           	opt stack 0
 16938  011FB4                     _USBCtrlTrfTxService:
 16939                           	opt stack 17
 16940                           
 16941                           ;usb_device.c: 1773: uint8_t byteToSend;
 16942                           ;usb_device.c: 1777: byteToSend = 8;
 16943                           
 16944                           ;incstack = 0
 16945  011FB4  0E08               	movlw	8
 16946  011FB6  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 16947                           
 16948                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 16949  011FB8  500F               	movf	_inPipes+5,w,c	;volatile
 16950  011FBA  E110               	bnz	i2l5292
 16951  011FBC  0E08               	movlw	8
 16952  011FBE  5C0E               	subwf	_inPipes+4,w,c	;volatile
 16953  011FC0  B0D8               	btfsc	status,0,c
 16954  011FC2  D00C               	goto	i2l5292
 16955                           
 16956                           ;usb_device.c: 1779: {
 16957                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 16958  011FC4  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 16959                           
 16960                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 16961  011FC8  502B               	movf	_shortPacketStatus,w,c	;volatile
 16962  011FCA  A4D8               	btfss	status,2,c
 16963  011FCC  D002               	goto	i2l5288
 16964                           
 16965                           ;usb_device.c: 1788: {
 16966                           ;usb_device.c: 1789: shortPacketStatus = 1;
 16967  011FCE  0E01               	movlw	1
 16968  011FD0  D004               	goto	L15
 16969  011FD2                     i2l5288:
 16970                           
 16971                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 16972  011FD2  042B               	decf	_shortPacketStatus,w,c	;volatile
 16973  011FD4  A4D8               	btfss	status,2,c
 16974  011FD6  D002               	goto	i2l5292
 16975                           
 16976                           ;usb_device.c: 1792: {
 16977                           ;usb_device.c: 1793: shortPacketStatus = 2;
 16978  011FD8  0E02               	movlw	2
 16979  011FDA                     L15:
 16980  011FDA  6E2B               	movwf	_shortPacketStatus,c	;volatile
 16981  011FDC                     i2l5292:
 16982                           
 16983                           ;usb_device.c: 1794: }
 16984                           ;usb_device.c: 1795: }
 16985                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 16986  011FDC  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 16987  011FDE  5E0E               	subwf	_inPipes+4,f,c	;volatile
 16988  011FE0  0E00               	movlw	0
 16989  011FE2  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 16990                           
 16991                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 16992  011FE4  EE20 F001          	lfsr	2,1
 16993  011FE8  5010               	movf	_pBDTEntryIn,w,c
 16994  011FEA  26D9               	addwf	fsr2l,f,c
 16995  011FEC  5011               	movf	_pBDTEntryIn+1,w,c
 16996  011FEE  22DA               	addwfc	fsr2h,f,c
 16997  011FF0  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 16998                           
 16999                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 17000  011FF4  0E38               	movlw	56
 17001  011FF6  0100               	movlb	0	; () banked
 17002  011FF8  6FB0               	movwf	_pDst& (0+255),b
 17003  011FFA  0E0D               	movlw	13
 17004  011FFC  0100               	movlb	0	; () banked
 17005  011FFE  6FB1               	movwf	(_pDst+1)& (0+255),b
 17006                           
 17007                           ; BSR set to: 0
 17008                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17009  012000  A00D               	btfss	_inPipes+3,0,c	;volatile
 17010  012002  D01D               	goto	i2l5310
 17011  012004  D03C               	goto	i2l5320
 17012  012006                     i2l5302:
 17013                           
 17014                           ; BSR set to: 0
 17015                           ;usb_device.c: 1812: {
 17016                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 17017  012006  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17018  01200A  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17019  01200E  0E00               	movlw	low (__mediumconst shr (0+16))
 17020  012010  6EF8               	movwf	tblptru,c
 17021  012012  C0B0  FFD9         	movff	_pDst,fsr2l
 17022  012016  C0B1  FFDA         	movff	_pDst+1,fsr2h
 17023  01201A  0E0E               	movlw	(high __ramtop+-1)
 17024  01201C  64F7               	cpfsgt	tblptrh,c
 17025  01201E  D003               	bra	i2u403_47
 17026  012020  0008               	tblrd		*
 17027  012022  50F5               	movf	tablat,w,c
 17028  012024  D005               	bra	i2u403_40
 17029  012026                     i2u403_47:
 17030  012026  CFF6 FFE9          	movff	tblptrl,fsr0l
 17031  01202A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17032  01202E  50EF               	movf	indf0,w,c
 17033  012030                     i2u403_40:
 17034  012030  6EDF               	movwf	indf2,c
 17035  012032  4A0A               	infsnz	_inPipes,f,c	;volatile
 17036  012034  2A0B               	incf	_inPipes+1,f,c	;volatile
 17037  012036  0100               	movlb	0	; () banked
 17038  012038  4BB0               	infsnz	_pDst& (0+255),f,b
 17039  01203A  2BB1               	incf	(_pDst+1)& (0+255),f,b
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;usb_device.c: 1814: byteToSend--;
 17043  01203C  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17044  01203E                     i2l5310:
 17045                           
 17046                           ; BSR set to: 0
 17047  01203E  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17048  012040  B4D8               	btfsc	status,2,c
 17049  012042  0012               	return	
 17050  012044  D7E0               	goto	i2l5302
 17051  012046                     i2l5312:
 17052                           
 17053                           ; BSR set to: 0
 17054                           ;usb_device.c: 1820: {
 17055                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 17056  012046  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17057  01204A  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17058  01204E  0E00               	movlw	low (__mediumconst shr (0+16))
 17059  012050  6EF8               	movwf	tblptru,c
 17060  012052  C0B0  FFD9         	movff	_pDst,fsr2l
 17061  012056  C0B1  FFDA         	movff	_pDst+1,fsr2h
 17062  01205A  0E0E               	movlw	(high __ramtop+-1)
 17063  01205C  64F7               	cpfsgt	tblptrh,c
 17064  01205E  D003               	bra	i2u405_47
 17065  012060  0008               	tblrd		*
 17066  012062  50F5               	movf	tablat,w,c
 17067  012064  D005               	bra	i2u405_40
 17068  012066                     i2u405_47:
 17069  012066  CFF6 FFE9          	movff	tblptrl,fsr0l
 17070  01206A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17071  01206E  50EF               	movf	indf0,w,c
 17072  012070                     i2u405_40:
 17073  012070  6EDF               	movwf	indf2,c
 17074  012072  4A0A               	infsnz	_inPipes,f,c	;volatile
 17075  012074  2A0B               	incf	_inPipes+1,f,c	;volatile
 17076  012076  0100               	movlb	0	; () banked
 17077  012078  4BB0               	infsnz	_pDst& (0+255),f,b
 17078  01207A  2BB1               	incf	(_pDst+1)& (0+255),f,b
 17079                           
 17080                           ; BSR set to: 0
 17081                           ;usb_device.c: 1822: byteToSend--;
 17082  01207C  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17083  01207E                     i2l5320:
 17084                           
 17085                           ; BSR set to: 0
 17086  01207E  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17087  012080  B4D8               	btfsc	status,2,c
 17088  012082  0012               	return	
 17089  012084  D7E0               	goto	i2l5312
 17090  012086                     __end_of_USBCtrlTrfTxService:
 17091                           	opt stack 0
 17092                           pclatu	equ	0xFFB
 17093                           pclath	equ	0xFFA
 17094                           tblptru	equ	0xFF8
 17095                           tblptrh	equ	0xFF7
 17096                           tblptrl	equ	0xFF6
 17097                           tablat	equ	0xFF5
 17098                           prodh	equ	0xFF4
 17099                           prodl	equ	0xFF3
 17100                           intcon	equ	0xFF2
 17101                           intcon2	equ	0xFF1
 17102                           indf0	equ	0xFEF
 17103                           postinc0	equ	0xFEE
 17104                           fsr0h	equ	0xFEA
 17105                           fsr0l	equ	0xFE9
 17106                           wreg	equ	0xFE8
 17107                           indf1	equ	0xFE7
 17108                           postinc1	equ	0xFE6
 17109                           postdec1	equ	0xFE5
 17110                           fsr1h	equ	0xFE2
 17111                           fsr1l	equ	0xFE1
 17112                           indf2	equ	0xFDF
 17113                           postinc2	equ	0xFDE
 17114                           postdec2	equ	0xFDD
 17115                           plusw2	equ	0xFDB
 17116                           fsr2h	equ	0xFDA
 17117                           fsr2l	equ	0xFD9
 17118                           status	equ	0xFD8
 17119                           
 17120 ;; *************** function _UART_ISR *****************
 17121 ;; Defined at:
 17122 ;;		line 29 in file "../My_library/My_UART.c"
 17123 ;; Parameters:    Size  Location     Type
 17124 ;;		None
 17125 ;; Auto vars:     Size  Location     Type
 17126 ;;  ascii           1   15[COMRAM] unsigned char 
 17127 ;; Return value:  Size  Location     Type
 17128 ;;		None               void
 17129 ;; Registers used:
 17130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17131 ;; Tracked objects:
 17132 ;;		On entry : 0/0
 17133 ;;		On exit  : 0/0
 17134 ;;		Unchanged: 0/0
 17135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17140 ;;Total ram usage:        1 bytes
 17141 ;; Hardware stack levels used:    1
 17142 ;; Hardware stack levels required when called:    2
 17143 ;; This function calls:
 17144 ;;		i2_ringbuf_num
 17145 ;;		i2_ringbuf_pop
 17146 ;;		i2_ringbuf_put
 17147 ;; This function is called by:
 17148 ;;		_ISR
 17149 ;; This function uses a non-reentrant model
 17150 ;;
 17151                           
 17152                           	psect	text87
 17153  01338E                     __ptext87:
 17154                           	opt stack 0
 17155  01338E                     _UART_ISR:
 17156                           	opt stack 21
 17157                           
 17158                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 17159                           
 17160                           ; BSR set to: 0
 17161                           ;incstack = 0
 17162  01338E  B89D               	btfsc	3997,4,c	;volatile
 17163  013390  A89E               	btfss	3998,4,c	;volatile
 17164  013392  D013               	goto	i2l836
 17165                           
 17166                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
 17167  013394  0ED4               	movlw	low _uart_tx
 17168  013396  6E2E               	movwf	i2ringbuf_num@rb,c
 17169  013398  0E01               	movlw	high _uart_tx
 17170  01339A  6E2F               	movwf	i2ringbuf_num@rb+1,c
 17171  01339C  EC96  F092         	call	i2_ringbuf_num	;wreg free
 17172  0133A0  502E               	movf	?i2_ringbuf_num,w,c
 17173  0133A2  102F               	iorwf	?i2_ringbuf_num+1,w,c
 17174  0133A4  B4D8               	btfsc	status,2,c
 17175  0133A6  D008               	goto	i2l837
 17176                           
 17177                           ;My_UART.c: 32: TXREG1 = ringbuf_pop(&uart_tx);
 17178  0133A8  0ED4               	movlw	low _uart_tx
 17179  0133AA  6E36               	movwf	i2ringbuf_pop@rb,c
 17180  0133AC  0E01               	movlw	high _uart_tx
 17181  0133AE  6E37               	movwf	i2ringbuf_pop@rb+1,c
 17182  0133B0  ECBC  F094         	call	i2_ringbuf_pop	;wreg free
 17183  0133B4  6EAE               	movwf	4014,c	;volatile
 17184                           
 17185                           ;My_UART.c: 33: } else {
 17186  0133B6  D001               	goto	i2l836
 17187  0133B8                     i2l837:
 17188                           
 17189                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
 17190  0133B8  989D               	bcf	3997,4,c	;volatile
 17191  0133BA                     i2l836:
 17192                           
 17193                           ;My_UART.c: 35: }
 17194                           ;My_UART.c: 36: }
 17195                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 17196  0133BA  AA9D               	btfss	3997,5,c	;volatile
 17197  0133BC  0012               	return	
 17198  0133BE  AA9E               	btfss	3998,5,c	;volatile
 17199  0133C0  0012               	return	
 17200                           
 17201                           ;My_UART.c: 38: char ascii = RCREG1;
 17202  0133C2  CFAF F03D          	movff	4015,UART_ISR@ascii	;volatile
 17203                           
 17204                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
 17205  0133C6  0ECC               	movlw	low _uart_rx
 17206  0133C8  6E36               	movwf	i2ringbuf_put@rb,c
 17207  0133CA  0E01               	movlw	high _uart_rx
 17208  0133CC  6E37               	movwf	i2ringbuf_put@rb+1,c
 17209  0133CE  C03D  F038         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 17210  0133D2  EC09  F094         	call	i2_ringbuf_put	;wreg free
 17211  0133D6  0012               	return	
 17212  0133D8                     __end_of_UART_ISR:
 17213                           	opt stack 0
 17214                           pclatu	equ	0xFFB
 17215                           pclath	equ	0xFFA
 17216                           tblptru	equ	0xFF8
 17217                           tblptrh	equ	0xFF7
 17218                           tblptrl	equ	0xFF6
 17219                           tablat	equ	0xFF5
 17220                           prodh	equ	0xFF4
 17221                           prodl	equ	0xFF3
 17222                           intcon	equ	0xFF2
 17223                           intcon2	equ	0xFF1
 17224                           indf0	equ	0xFEF
 17225                           postinc0	equ	0xFEE
 17226                           fsr0h	equ	0xFEA
 17227                           fsr0l	equ	0xFE9
 17228                           wreg	equ	0xFE8
 17229                           indf1	equ	0xFE7
 17230                           postinc1	equ	0xFE6
 17231                           postdec1	equ	0xFE5
 17232                           fsr1h	equ	0xFE2
 17233                           fsr1l	equ	0xFE1
 17234                           indf2	equ	0xFDF
 17235                           postinc2	equ	0xFDE
 17236                           postdec2	equ	0xFDD
 17237                           plusw2	equ	0xFDB
 17238                           fsr2h	equ	0xFDA
 17239                           fsr2l	equ	0xFD9
 17240                           status	equ	0xFD8
 17241                           
 17242 ;; *************** function i2_ringbuf_put *****************
 17243 ;; Defined at:
 17244 ;;		line 20 in file "../My_library/My_ringbuf.c"
 17245 ;; Parameters:    Size  Location     Type
 17246 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 17247 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_rx(8), uart_tx(8), 
 17248 ;;		 -> usb_rx(8), usb_tx(8), 
 17249 ;;  asciicode       1   10[COMRAM] unsigned char 
 17250 ;; Auto vars:     Size  Location     Type
 17251 ;;		None
 17252 ;; Return value:  Size  Location     Type
 17253 ;;		None               void
 17254 ;; Registers used:
 17255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17256 ;; Tracked objects:
 17257 ;;		On entry : 0/0
 17258 ;;		On exit  : 0/0
 17259 ;;		Unchanged: 0/0
 17260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17261 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17263 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17264 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17265 ;;Total ram usage:        7 bytes
 17266 ;; Hardware stack levels used:    1
 17267 ;; Hardware stack levels required when called:    1
 17268 ;; This function calls:
 17269 ;;		i2_ringbuf_num
 17270 ;; This function is called by:
 17271 ;;		_UART_ISR
 17272 ;; This function uses a non-reentrant model
 17273 ;;
 17274                           
 17275                           	psect	text88
 17276  012812                     __ptext88:
 17277                           	opt stack 0
 17278  012812                     i2_ringbuf_put:
 17279                           	opt stack 21
 17280                           
 17281                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 17282                           
 17283                           ;incstack = 0
 17284  012812  C036  F02E         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 17285  012816  C037  F02F         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 17286  01281A  EC96  F092         	call	i2_ringbuf_num	;wreg free
 17287  01281E  EE20 F002          	lfsr	2,2
 17288  012822  5036               	movf	i2ringbuf_put@rb,w,c
 17289  012824  26D9               	addwf	fsr2l,f,c
 17290  012826  5037               	movf	i2ringbuf_put@rb+1,w,c
 17291  012828  22DA               	addwfc	fsr2h,f,c
 17292  01282A  50DE               	movf	postinc2,w,c
 17293  01282C  5C2E               	subwf	?i2_ringbuf_num,w,c
 17294  01282E  50DE               	movf	postinc2,w,c
 17295  012830  582F               	subwfb	?i2_ringbuf_num+1,w,c
 17296  012832  B0D8               	btfsc	status,0,c
 17297  012834  0012               	return	
 17298                           
 17299                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 17300  012836  EE20 F004          	lfsr	2,4
 17301  01283A  5036               	movf	i2ringbuf_put@rb,w,c
 17302  01283C  26D9               	addwf	fsr2l,f,c
 17303  01283E  5037               	movf	i2ringbuf_put@rb+1,w,c
 17304  012840  22DA               	addwfc	fsr2h,f,c
 17305  012842  CFDE F039          	movff	postinc2,??i2_ringbuf_put
 17306  012846  CFDD F03A          	movff	postdec2,??i2_ringbuf_put+1
 17307  01284A  C036  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 17308  01284E  C037  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 17309  012852  CFDE F03B          	movff	postinc2,??i2_ringbuf_put+2
 17310  012856  CFDD F03C          	movff	postdec2,??i2_ringbuf_put+3
 17311  01285A  5039               	movf	??i2_ringbuf_put,w,c
 17312  01285C  243B               	addwf	??i2_ringbuf_put+2,w,c
 17313  01285E  6ED9               	movwf	fsr2l,c
 17314  012860  503A               	movf	??i2_ringbuf_put+1,w,c
 17315  012862  203C               	addwfc	??i2_ringbuf_put+3,w,c
 17316  012864  6EDA               	movwf	fsr2h,c
 17317  012866  C038  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 17318                           
 17319                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 17320  01286A  EE20 F002          	lfsr	2,2
 17321  01286E  5036               	movf	i2ringbuf_put@rb,w,c
 17322  012870  26D9               	addwf	fsr2l,f,c
 17323  012872  5037               	movf	i2ringbuf_put@rb+1,w,c
 17324  012874  22DA               	addwfc	fsr2h,f,c
 17325  012876  EE10 F004          	lfsr	1,4
 17326  01287A  5036               	movf	i2ringbuf_put@rb,w,c
 17327  01287C  26E1               	addwf	fsr1l,f,c
 17328  01287E  5037               	movf	i2ringbuf_put@rb+1,w,c
 17329  012880  22E2               	addwfc	fsr1h,f,c
 17330  012882  CFE6 F03B          	movff	postinc1,??i2_ringbuf_put+2
 17331  012886  CFE5 F03C          	movff	postdec1,??i2_ringbuf_put+3
 17332  01288A  0E01               	movlw	1
 17333  01288C  263B               	addwf	??i2_ringbuf_put+2,f,c
 17334  01288E  0E00               	movlw	0
 17335  012890  223C               	addwfc	??i2_ringbuf_put+3,f,c
 17336  012892  50DE               	movf	postinc2,w,c
 17337  012894  5C3B               	subwf	??i2_ringbuf_put+2,w,c
 17338  012896  50DE               	movf	postinc2,w,c
 17339  012898  583C               	subwfb	??i2_ringbuf_put+3,w,c
 17340  01289A  B0D8               	btfsc	status,0,c
 17341  01289C  D00A               	goto	i2l7036
 17342  01289E  EE20 F004          	lfsr	2,4
 17343  0128A2  5036               	movf	i2ringbuf_put@rb,w,c
 17344  0128A4  26D9               	addwf	fsr2l,f,c
 17345  0128A6  5037               	movf	i2ringbuf_put@rb+1,w,c
 17346  0128A8  22DA               	addwfc	fsr2h,f,c
 17347  0128AA  2ADE               	incf	postinc2,f,c
 17348  0128AC  0E00               	movlw	0
 17349  0128AE  22DD               	addwfc	postdec2,f,c
 17350  0128B0  0012               	return	
 17351  0128B2                     i2l7036:
 17352                           
 17353                           ;My_ringbuf.c: 24: else rb->head = 0;
 17354  0128B2  EE20 F004          	lfsr	2,4
 17355  0128B6  5036               	movf	i2ringbuf_put@rb,w,c
 17356  0128B8  26D9               	addwf	fsr2l,f,c
 17357  0128BA  5037               	movf	i2ringbuf_put@rb+1,w,c
 17358  0128BC  22DA               	addwfc	fsr2h,f,c
 17359  0128BE  0E00               	movlw	0
 17360  0128C0  6EDE               	movwf	postinc2,c
 17361  0128C2  0E00               	movlw	0
 17362  0128C4  6EDD               	movwf	postdec2,c
 17363  0128C6  0012               	return	
 17364  0128C8                     __end_ofi2_ringbuf_put:
 17365                           	opt stack 0
 17366                           pclatu	equ	0xFFB
 17367                           pclath	equ	0xFFA
 17368                           tblptru	equ	0xFF8
 17369                           tblptrh	equ	0xFF7
 17370                           tblptrl	equ	0xFF6
 17371                           tablat	equ	0xFF5
 17372                           prodh	equ	0xFF4
 17373                           prodl	equ	0xFF3
 17374                           intcon	equ	0xFF2
 17375                           intcon2	equ	0xFF1
 17376                           indf0	equ	0xFEF
 17377                           postinc0	equ	0xFEE
 17378                           fsr0h	equ	0xFEA
 17379                           fsr0l	equ	0xFE9
 17380                           wreg	equ	0xFE8
 17381                           indf1	equ	0xFE7
 17382                           postinc1	equ	0xFE6
 17383                           postdec1	equ	0xFE5
 17384                           fsr1h	equ	0xFE2
 17385                           fsr1l	equ	0xFE1
 17386                           indf2	equ	0xFDF
 17387                           postinc2	equ	0xFDE
 17388                           postdec2	equ	0xFDD
 17389                           plusw2	equ	0xFDB
 17390                           fsr2h	equ	0xFDA
 17391                           fsr2l	equ	0xFD9
 17392                           status	equ	0xFD8
 17393                           
 17394 ;; *************** function i2_ringbuf_pop *****************
 17395 ;; Defined at:
 17396 ;;		line 45 in file "../My_library/My_ringbuf.c"
 17397 ;; Parameters:    Size  Location     Type
 17398 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 17399 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_rx(8), uart_tx(8), 
 17400 ;;		 -> usb_rx(8), usb_tx(8), 
 17401 ;; Auto vars:     Size  Location     Type
 17402 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 17403 ;; Return value:  Size  Location     Type
 17404 ;;                  1    wreg      unsigned char 
 17405 ;; Registers used:
 17406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17407 ;; Tracked objects:
 17408 ;;		On entry : 0/0
 17409 ;;		On exit  : 0/0
 17410 ;;		Unchanged: 0/0
 17411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17414 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17415 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17416 ;;Total ram usage:        7 bytes
 17417 ;; Hardware stack levels used:    1
 17418 ;; Hardware stack levels required when called:    1
 17419 ;; This function calls:
 17420 ;;		i2_ringbuf_num
 17421 ;; This function is called by:
 17422 ;;		_UART_ISR
 17423 ;; This function uses a non-reentrant model
 17424 ;;
 17425                           
 17426                           	psect	text89
 17427  012978                     __ptext89:
 17428                           	opt stack 0
 17429  012978                     i2_ringbuf_pop:
 17430                           	opt stack 21
 17431                           
 17432                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 17433                           
 17434                           ;incstack = 0
 17435  012978  C036  F02E         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 17436  01297C  C037  F02F         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 17437  012980  EC96  F092         	call	i2_ringbuf_num	;wreg free
 17438  012984  502E               	movf	?i2_ringbuf_num,w,c
 17439  012986  102F               	iorwf	?i2_ringbuf_num+1,w,c
 17440  012988  B4D8               	btfsc	status,2,c
 17441  01298A  D04A               	goto	i2l7054
 17442                           
 17443                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 17444  01298C  EE20 F006          	lfsr	2,6
 17445  012990  5036               	movf	i2ringbuf_pop@rb,w,c
 17446  012992  26D9               	addwf	fsr2l,f,c
 17447  012994  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17448  012996  22DA               	addwfc	fsr2h,f,c
 17449  012998  CFDE F038          	movff	postinc2,??i2_ringbuf_pop
 17450  01299C  CFDD F039          	movff	postdec2,??i2_ringbuf_pop+1
 17451  0129A0  C036  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 17452  0129A4  C037  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 17453  0129A8  CFDE F03A          	movff	postinc2,??i2_ringbuf_pop+2
 17454  0129AC  CFDD F03B          	movff	postdec2,??i2_ringbuf_pop+3
 17455  0129B0  5038               	movf	??i2_ringbuf_pop,w,c
 17456  0129B2  243A               	addwf	??i2_ringbuf_pop+2,w,c
 17457  0129B4  6ED9               	movwf	fsr2l,c
 17458  0129B6  5039               	movf	??i2_ringbuf_pop+1,w,c
 17459  0129B8  203B               	addwfc	??i2_ringbuf_pop+3,w,c
 17460  0129BA  6EDA               	movwf	fsr2h,c
 17461  0129BC  50DF               	movf	indf2,w,c
 17462  0129BE  6E3C               	movwf	i2ringbuf_pop@ret,c
 17463                           
 17464                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 17465  0129C0  EE20 F002          	lfsr	2,2
 17466  0129C4  5036               	movf	i2ringbuf_pop@rb,w,c
 17467  0129C6  26D9               	addwf	fsr2l,f,c
 17468  0129C8  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17469  0129CA  22DA               	addwfc	fsr2h,f,c
 17470  0129CC  EE10 F006          	lfsr	1,6
 17471  0129D0  5036               	movf	i2ringbuf_pop@rb,w,c
 17472  0129D2  26E1               	addwf	fsr1l,f,c
 17473  0129D4  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17474  0129D6  22E2               	addwfc	fsr1h,f,c
 17475  0129D8  CFE6 F03A          	movff	postinc1,??i2_ringbuf_pop+2
 17476  0129DC  CFE5 F03B          	movff	postdec1,??i2_ringbuf_pop+3
 17477  0129E0  0E01               	movlw	1
 17478  0129E2  263A               	addwf	??i2_ringbuf_pop+2,f,c
 17479  0129E4  0E00               	movlw	0
 17480  0129E6  223B               	addwfc	??i2_ringbuf_pop+3,f,c
 17481  0129E8  50DE               	movf	postinc2,w,c
 17482  0129EA  5C3A               	subwf	??i2_ringbuf_pop+2,w,c
 17483  0129EC  50DE               	movf	postinc2,w,c
 17484  0129EE  583B               	subwfb	??i2_ringbuf_pop+3,w,c
 17485  0129F0  B0D8               	btfsc	status,0,c
 17486  0129F2  D00A               	goto	i2l7046
 17487                           
 17488                           ;My_ringbuf.c: 49: rb->tail++;
 17489  0129F4  EE20 F006          	lfsr	2,6
 17490  0129F8  5036               	movf	i2ringbuf_pop@rb,w,c
 17491  0129FA  26D9               	addwf	fsr2l,f,c
 17492  0129FC  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17493  0129FE  22DA               	addwfc	fsr2h,f,c
 17494  012A00  2ADE               	incf	postinc2,f,c
 17495  012A02  0E00               	movlw	0
 17496  012A04  22DD               	addwfc	postdec2,f,c
 17497                           
 17498                           ;My_ringbuf.c: 50: } else {
 17499  012A06  D00A               	goto	i2l7048
 17500  012A08                     i2l7046:
 17501                           
 17502                           ;My_ringbuf.c: 51: rb->tail = 0;
 17503  012A08  EE20 F006          	lfsr	2,6
 17504  012A0C  5036               	movf	i2ringbuf_pop@rb,w,c
 17505  012A0E  26D9               	addwf	fsr2l,f,c
 17506  012A10  5037               	movf	i2ringbuf_pop@rb+1,w,c
 17507  012A12  22DA               	addwfc	fsr2h,f,c
 17508  012A14  0E00               	movlw	0
 17509  012A16  6EDE               	movwf	postinc2,c
 17510  012A18  0E00               	movlw	0
 17511  012A1A  6EDD               	movwf	postdec2,c
 17512  012A1C                     i2l7048:
 17513                           
 17514                           ;My_ringbuf.c: 52: }
 17515                           ;My_ringbuf.c: 53: return ret;
 17516  012A1C  503C               	movf	i2ringbuf_pop@ret,w,c
 17517                           
 17518                           ;My_ringbuf.c: 54: } else {
 17519  012A1E  0012               	return	
 17520  012A20                     i2l7054:
 17521                           
 17522                           ;My_ringbuf.c: 55: return 0;
 17523  012A20  0E00               	movlw	0
 17524  012A22  0012               	return	
 17525  012A24                     __end_ofi2_ringbuf_pop:
 17526                           	opt stack 0
 17527                           pclatu	equ	0xFFB
 17528                           pclath	equ	0xFFA
 17529                           tblptru	equ	0xFF8
 17530                           tblptrh	equ	0xFF7
 17531                           tblptrl	equ	0xFF6
 17532                           tablat	equ	0xFF5
 17533                           prodh	equ	0xFF4
 17534                           prodl	equ	0xFF3
 17535                           intcon	equ	0xFF2
 17536                           intcon2	equ	0xFF1
 17537                           indf0	equ	0xFEF
 17538                           postinc0	equ	0xFEE
 17539                           fsr0h	equ	0xFEA
 17540                           fsr0l	equ	0xFE9
 17541                           wreg	equ	0xFE8
 17542                           indf1	equ	0xFE7
 17543                           postinc1	equ	0xFE6
 17544                           postdec1	equ	0xFE5
 17545                           fsr1h	equ	0xFE2
 17546                           fsr1l	equ	0xFE1
 17547                           indf2	equ	0xFDF
 17548                           postinc2	equ	0xFDE
 17549                           postdec2	equ	0xFDD
 17550                           plusw2	equ	0xFDB
 17551                           fsr2h	equ	0xFDA
 17552                           fsr2l	equ	0xFD9
 17553                           status	equ	0xFD8
 17554                           
 17555 ;; *************** function i2_ringbuf_num *****************
 17556 ;; Defined at:
 17557 ;;		line 12 in file "../My_library/My_ringbuf.c"
 17558 ;; Parameters:    Size  Location     Type
 17559 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 17560 ;;		 -> terminal_task@command(8), lcd_tx(8), uart_rx(8), uart_tx(8), 
 17561 ;;		 -> usb_rx(8), usb_tx(8), 
 17562 ;; Auto vars:     Size  Location     Type
 17563 ;;		None
 17564 ;; Return value:  Size  Location     Type
 17565 ;;                  2    0[COMRAM] unsigned int 
 17566 ;; Registers used:
 17567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17568 ;; Tracked objects:
 17569 ;;		On entry : 0/0
 17570 ;;		On exit  : 0/0
 17571 ;;		Unchanged: 0/0
 17572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17575 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17576 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17577 ;;Total ram usage:        8 bytes
 17578 ;; Hardware stack levels used:    1
 17579 ;; This function calls:
 17580 ;;		Nothing
 17581 ;; This function is called by:
 17582 ;;		_UART_ISR
 17583 ;;		i2_ringbuf_put
 17584 ;;		i2_ringbuf_pop
 17585 ;; This function uses a non-reentrant model
 17586 ;;
 17587                           
 17588                           	psect	text90
 17589  01252C                     __ptext90:
 17590                           	opt stack 0
 17591  01252C                     i2_ringbuf_num:
 17592                           	opt stack 21
 17593                           
 17594                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 17595                           
 17596                           ;incstack = 0
 17597  01252C  EE20 F006          	lfsr	2,6
 17598  012530  502E               	movf	i2ringbuf_num@rb,w,c
 17599  012532  26D9               	addwf	fsr2l,f,c
 17600  012534  502F               	movf	i2ringbuf_num@rb+1,w,c
 17601  012536  22DA               	addwfc	fsr2h,f,c
 17602  012538  EE10 F004          	lfsr	1,4
 17603  01253C  502E               	movf	i2ringbuf_num@rb,w,c
 17604  01253E  26E1               	addwf	fsr1l,f,c
 17605  012540  502F               	movf	i2ringbuf_num@rb+1,w,c
 17606  012542  22E2               	addwfc	fsr1h,f,c
 17607  012544  50DE               	movf	postinc2,w,c
 17608  012546  5CE6               	subwf	postinc1,w,c
 17609  012548  50DE               	movf	postinc2,w,c
 17610  01254A  58E6               	subwfb	postinc1,w,c
 17611  01254C  A0D8               	btfss	status,0,c
 17612  01254E  D01F               	goto	i2l6628
 17613                           
 17614                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 17615  012550  EE20 F004          	lfsr	2,4
 17616  012554  502E               	movf	i2ringbuf_num@rb,w,c
 17617  012556  26D9               	addwf	fsr2l,f,c
 17618  012558  502F               	movf	i2ringbuf_num@rb+1,w,c
 17619  01255A  22DA               	addwfc	fsr2h,f,c
 17620  01255C  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 17621  012560  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 17622  012564  EE20 F006          	lfsr	2,6
 17623  012568  502E               	movf	i2ringbuf_num@rb,w,c
 17624  01256A  26D9               	addwf	fsr2l,f,c
 17625  01256C  502F               	movf	i2ringbuf_num@rb+1,w,c
 17626  01256E  22DA               	addwfc	fsr2h,f,c
 17627  012570  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 17628  012574  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 17629  012578  1E32               	comf	??i2_ringbuf_num+2,f,c
 17630  01257A  1E33               	comf	??i2_ringbuf_num+3,f,c
 17631  01257C  4A32               	infsnz	??i2_ringbuf_num+2,f,c
 17632  01257E  2A33               	incf	??i2_ringbuf_num+3,f,c
 17633  012580  5030               	movf	??i2_ringbuf_num,w,c
 17634  012582  2432               	addwf	??i2_ringbuf_num+2,w,c
 17635  012584  6E2E               	movwf	?i2_ringbuf_num,c
 17636  012586  5031               	movf	??i2_ringbuf_num+1,w,c
 17637  012588  2033               	addwfc	??i2_ringbuf_num+3,w,c
 17638  01258A  6E2F               	movwf	?i2_ringbuf_num+1,c
 17639                           
 17640                           ;My_ringbuf.c: 15: } else {
 17641  01258C  0012               	return	
 17642  01258E                     i2l6628:
 17643                           
 17644                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 17645  01258E  EE20 F004          	lfsr	2,4
 17646  012592  502E               	movf	i2ringbuf_num@rb,w,c
 17647  012594  26D9               	addwf	fsr2l,f,c
 17648  012596  502F               	movf	i2ringbuf_num@rb+1,w,c
 17649  012598  22DA               	addwfc	fsr2h,f,c
 17650  01259A  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 17651  01259E  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 17652  0125A2  EE20 F002          	lfsr	2,2
 17653  0125A6  502E               	movf	i2ringbuf_num@rb,w,c
 17654  0125A8  26D9               	addwf	fsr2l,f,c
 17655  0125AA  502F               	movf	i2ringbuf_num@rb+1,w,c
 17656  0125AC  22DA               	addwfc	fsr2h,f,c
 17657  0125AE  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 17658  0125B2  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 17659  0125B6  EE20 F006          	lfsr	2,6
 17660  0125BA  502E               	movf	i2ringbuf_num@rb,w,c
 17661  0125BC  26D9               	addwf	fsr2l,f,c
 17662  0125BE  502F               	movf	i2ringbuf_num@rb+1,w,c
 17663  0125C0  22DA               	addwfc	fsr2h,f,c
 17664  0125C2  CFDE F034          	movff	postinc2,??i2_ringbuf_num+4
 17665  0125C6  CFDD F035          	movff	postdec2,??i2_ringbuf_num+5
 17666  0125CA  1E34               	comf	??i2_ringbuf_num+4,f,c
 17667  0125CC  1E35               	comf	??i2_ringbuf_num+5,f,c
 17668  0125CE  4A34               	infsnz	??i2_ringbuf_num+4,f,c
 17669  0125D0  2A35               	incf	??i2_ringbuf_num+5,f,c
 17670  0125D2  5032               	movf	??i2_ringbuf_num+2,w,c
 17671  0125D4  2634               	addwf	??i2_ringbuf_num+4,f,c
 17672  0125D6  5033               	movf	??i2_ringbuf_num+3,w,c
 17673  0125D8  2235               	addwfc	??i2_ringbuf_num+5,f,c
 17674  0125DA  5030               	movf	??i2_ringbuf_num,w,c
 17675  0125DC  2434               	addwf	??i2_ringbuf_num+4,w,c
 17676  0125DE  6E2E               	movwf	?i2_ringbuf_num,c
 17677  0125E0  5031               	movf	??i2_ringbuf_num+1,w,c
 17678  0125E2  2035               	addwfc	??i2_ringbuf_num+5,w,c
 17679  0125E4  6E2F               	movwf	?i2_ringbuf_num+1,c
 17680  0125E6  0012               	return	
 17681  0125E8                     __end_ofi2_ringbuf_num:
 17682                           	opt stack 0
 17683                           pclatu	equ	0xFFB
 17684                           pclath	equ	0xFFA
 17685                           tblptru	equ	0xFF8
 17686                           tblptrh	equ	0xFF7
 17687                           tblptrl	equ	0xFF6
 17688                           tablat	equ	0xFF5
 17689                           prodh	equ	0xFF4
 17690                           prodl	equ	0xFF3
 17691                           intcon	equ	0xFF2
 17692                           intcon2	equ	0xFF1
 17693                           indf0	equ	0xFEF
 17694                           postinc0	equ	0xFEE
 17695                           fsr0h	equ	0xFEA
 17696                           fsr0l	equ	0xFE9
 17697                           wreg	equ	0xFE8
 17698                           indf1	equ	0xFE7
 17699                           postinc1	equ	0xFE6
 17700                           postdec1	equ	0xFE5
 17701                           fsr1h	equ	0xFE2
 17702                           fsr1l	equ	0xFE1
 17703                           indf2	equ	0xFDF
 17704                           postinc2	equ	0xFDE
 17705                           postdec2	equ	0xFDD
 17706                           plusw2	equ	0xFDB
 17707                           fsr2h	equ	0xFDA
 17708                           fsr2l	equ	0xFD9
 17709                           status	equ	0xFD8
 17710                           pclatu	equ	0xFFB
 17711                           pclath	equ	0xFFA
 17712                           tblptru	equ	0xFF8
 17713                           tblptrh	equ	0xFF7
 17714                           tblptrl	equ	0xFF6
 17715                           tablat	equ	0xFF5
 17716                           prodh	equ	0xFF4
 17717                           prodl	equ	0xFF3
 17718                           intcon	equ	0xFF2
 17719                           intcon2	equ	0xFF1
 17720                           indf0	equ	0xFEF
 17721                           postinc0	equ	0xFEE
 17722                           fsr0h	equ	0xFEA
 17723                           fsr0l	equ	0xFE9
 17724                           wreg	equ	0xFE8
 17725                           indf1	equ	0xFE7
 17726                           postinc1	equ	0xFE6
 17727                           postdec1	equ	0xFE5
 17728                           fsr1h	equ	0xFE2
 17729                           fsr1l	equ	0xFE1
 17730                           indf2	equ	0xFDF
 17731                           postinc2	equ	0xFDE
 17732                           postdec2	equ	0xFDD
 17733                           plusw2	equ	0xFDB
 17734                           fsr2h	equ	0xFDA
 17735                           fsr2l	equ	0xFD9
 17736                           status	equ	0xFD8
 17737                           
 17738                           	psect	rparam
 17739  0000                     pclatu	equ	0xFFB
 17740                           pclath	equ	0xFFA
 17741                           tblptru	equ	0xFF8
 17742                           tblptrh	equ	0xFF7
 17743                           tblptrl	equ	0xFF6
 17744                           tablat	equ	0xFF5
 17745                           prodh	equ	0xFF4
 17746                           prodl	equ	0xFF3
 17747                           intcon	equ	0xFF2
 17748                           intcon2	equ	0xFF1
 17749                           indf0	equ	0xFEF
 17750                           postinc0	equ	0xFEE
 17751                           fsr0h	equ	0xFEA
 17752                           fsr0l	equ	0xFE9
 17753                           wreg	equ	0xFE8
 17754                           indf1	equ	0xFE7
 17755                           postinc1	equ	0xFE6
 17756                           postdec1	equ	0xFE5
 17757                           fsr1h	equ	0xFE2
 17758                           fsr1l	equ	0xFE1
 17759                           indf2	equ	0xFDF
 17760                           postinc2	equ	0xFDE
 17761                           postdec2	equ	0xFDD
 17762                           plusw2	equ	0xFDB
 17763                           fsr2h	equ	0xFDA
 17764                           fsr2l	equ	0xFD9
 17765                           status	equ	0xFD8
 17766                           
 17767                           	psect	temp
 17768  00005B                     btemp:
 17769                           	opt stack 0
 17770  00005B                     	ds	1
 17771  0000                     int$flags	set	btemp
 17772                           pclatu	equ	0xFFB
 17773                           pclath	equ	0xFFA
 17774                           tblptru	equ	0xFF8
 17775                           tblptrh	equ	0xFF7
 17776                           tblptrl	equ	0xFF6
 17777                           tablat	equ	0xFF5
 17778                           prodh	equ	0xFF4
 17779                           prodl	equ	0xFF3
 17780                           intcon	equ	0xFF2
 17781                           intcon2	equ	0xFF1
 17782                           indf0	equ	0xFEF
 17783                           postinc0	equ	0xFEE
 17784                           fsr0h	equ	0xFEA
 17785                           fsr0l	equ	0xFE9
 17786                           wreg	equ	0xFE8
 17787                           indf1	equ	0xFE7
 17788                           postinc1	equ	0xFE6
 17789                           postdec1	equ	0xFE5
 17790                           fsr1h	equ	0xFE2
 17791                           fsr1l	equ	0xFE1
 17792                           indf2	equ	0xFDF
 17793                           postinc2	equ	0xFDE
 17794                           postdec2	equ	0xFDD
 17795                           plusw2	equ	0xFDB
 17796                           fsr2h	equ	0xFDA
 17797                           fsr2l	equ	0xFD9
 17798                           status	equ	0xFD8


Data Sizes:
    Strings     162
    Constant    239
    Data        5
    BSS         2808
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     62     123
    BANK1           256      0     243
    BANK2           256     40     204
    BANK3           256      0     100
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    terminal_operation$4	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK1[25]), 

    terminal_operation$3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_operation$2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation$1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_operation$0	PTR struct ringbuf size(2) Largest target is 0

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), STR_12(CODE[1]), STR_8(CODE[1]), STR_5(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_16(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_4(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_43(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_25(CODE[37]), STR_23(CODE[5]), STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(COMRAM[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5246_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5246_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5246_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5246_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK1[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3993$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S3983$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3983$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3959$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3959$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3959$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3959$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), STR_2(CODE[9]), STR_1(CODE[9]), 

    display_time_0802@line1	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_time_0802@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_time_0802@line0	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK2[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), lcd_tx(BANK0[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    S398ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK0[100]), I2C_LCD_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), 
		 -> main_init@usbrx(BANK2[100]), main_init@usbtx(BIGRAMl[1000]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_display_time_0802
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _ST7032_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _display_time_0802->_display_dec
    _display_dec->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USB_task->_ringbuf_put
    _ringbuf_put->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0  123148
                                             61 BANK0      1     1      0
                                              0 BANK2     40    40      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_task
                          _UART_task
                           _USB_task
                  _display_time_0802
                          _main_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   23069
                           _I2C_init
                           _OSC_init
                          _RTCC_init
                        _ST7032_init
                          _UART_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17305
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9963
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (5) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_time_0802                                    6     0      6   34553
                                             55 BANK0      6     0      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    1061
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_dec                                          8     4      4   21305
                                             47 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    21     18   12708
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    8744
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     708
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   22154
                                             22 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _ringbuf_put                                          7     4      3    8959
                                             15 BANK0      7     4      3
                        _ringbuf_num
                        _ringbuf_pop (ARG)
 ---------------------------------------------------------------------------------
 (1) _ringbuf_pop                                          7     5      2    3135
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1610
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_num                                          8     6      2    1610
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7342
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_RTCC                                       2     0      2    7342
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (4) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (5) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (4) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (5) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1    1302
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2    1237
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0   33321
                                             30 COMRAM    15    15      0
                           _UART_ISR
                            _USB_ISR
 ---------------------------------------------------------------------------------
 (8) _USB_ISR                                              0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (9) _USBDeviceTasks                                       1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (10) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (10) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (11) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (13) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (11) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (12) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (13) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _UART_ISR                                             1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_put                                        7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
       _ringbuf_pop (ARG)
         _ringbuf_num
   _display_time_0802
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _display_dec
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
     _strcat
     _strcpy
   _main_init
     _I2C_init
     _OSC_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _ST7032_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _UART_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _ringbuf_num
   _ringbuf_pop
     _ringbuf_num
   _ringbuf_put
     _ringbuf_num
     _ringbuf_pop (ARG)
       _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      64      12       39.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     28      CC      10       79.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F3       7       94.9%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      7B       5       76.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C0       8        0.0%
DATA                 0      0     B90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 12 23:11:33 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FE77  
                      __size_of_I2C_Start 0030                              ?_display_dec 008F  
                            ___awdiv@sign 0065                                        _ms 010E  
                           _USBDeviceInit 10E2                       ___wmul@multiplicand 0062  
                       ??_RTCC_from_epoch 0091                        __size_of_CDCInitEP 0070  
                            __CFG_CP0$OFF 000000      USER_USB_CALLBACK_EVENT_HANDLER@event 003A  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C                                       l172 3634  
             __end_of_USBStdGetDscHandler 15EA                                       l350 331A  
                                     l345 34AE                                       l187 38DE  
                                     l508 0C64                                       l920 2CDE  
                                     l649 356C                                       _BDT 000D00  
                                     l888 387A                                       _ISR 1008  
                                     _UIE 000F36                                       _UIR 000F62  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                                _USBSuspend 36F8  
                                     _now 01B6                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0042                             _i2c_lcd_state 00C0  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 123A                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0025                     ??_USBCtrlTrfRxService 002E  
                            _I2C_LCD_Puts 2D2A                  __size_ofi2_USBDeviceInit 013A  
                          ??_getsUSBUSART 006A                  USBEnableEndpoint@options 0036  
                       ??_I2C_LCD_Command 0064                                      ?_ISR 002E  
                  __end_of_get_string_usb 338E                                      l1130 34FC  
                                    l1129 34FE                                      l1068 1158  
                                    l1431 1010                                      l1426 0FB4  
              USBConfigureEndpoint@handle 0034                                      l1930 2FBA  
                                    l1940 31D6                                      l1877 251A  
                                    l8000 2452                                      l8020 2AFA  
                                    l8004 2466                                      l8040 2B66  
                                    l8032 2B44                                      l8024 2B0E  
                                    l8016 2AEA                                      l9010 2D8A  
                                    l8026 2B1A                                      l8050 249E  
                                    l9004 2D58                                      l9012 2DB2  
                                    l8028 2B20                                      l8036 2B52  
                                    l8108 1B2A                                      l8212 0484  
                                    l8220 04E2                                      l8052 24AE  
                                    l8206 0474                                      l8310 2F7C  
                                    l8062 2508                                      l8054 24B4  
                                    l8224 0502                                      l8208 047A  
                      __CFG_WPFP$PAGE_127 000000                                      l8218 04DE  
                                    l8306 2F6A                                      l8330 31A4  
                                    l8410 0144                                      l8250 35CA  
                                    l8228 0566                                      l8308 2F76  
                                    l9204 0DA8                                      l8318 2FAC  
                                    l8334 31C8                                      l8326 3192  
                                    l8510 0420                                      l8502 03B8  
                                    l8430 01F4                                      l8422 01B6  
                                    l8406 0132                                      l8246 35B8  
                                    l9230 0E56                                      l8264 1D86  
                                    l8256 1D52                                      l8328 319E  
                                    l8504 03BE                                      l8424 01CE  
                                    l8416 0198                                      l8408 013E  
                                    l8512 042C                                      l8520 31EA  
                                    l9064 0AD6                                      l8192 0CE2  
                                    l9216 0DE6                                      l8290 3770  
                                    l8418 01A4                                      l8514 044C  
                                    l8434 020C                                      l8522 31F0  
                                    l9066 0AEE                                      l8186 0CD6  
                                    l8276 1DEC                                      l8460 02B4  
                                    l8436 0242                                      l8380 003E  
                                    l8372 000E                                      l8524 3200  
                                    l8188 0CDA                                      l9236 0EBA  
                                    l8358 185E                                      l8710 190C  
                                    l8702 37C4                                      l8470 030E  
                                    l8446 0272                                      l8390 0080  
                                    l8526 320C                                      l8542 112E  
                                    l8632 0FA4                                      l8720 1956  
                                    l8712 1916                                      l8480 033E  
                                    l8472 0318                                      l8448 0278  
                                    l8384 0048                                      l8650 1014  
                                    l8626 0F8A                                      l8490 0372  
                                    l8466 02D6                                      l8378 002C  
                                    l8810 2E0A                                      l8802 2DC8  
                                    l8570 1198                                      l8546 1138  
                                    l9258 0F52                                      l8644 0FF8  
                                    l8628 0F94                                      l8724 1986  
                                    l8580 1208                                      l8638 0FC0  
                                    l8718 194E                                      l8398 0100  
                                    l8814 2E14                                      l8806 2DE0  
                                    l8574 11A2                                      l8558 1166  
                                    l8566 1178                                      l7952 382E  
                                    l7960 2FFC                                      l8728 19B8  
                                    l8496 0398                                      l8488 0366  
                                    l8920 351E                                      l8744 34C6  
                                    l8658 103E                                      l8666 1062  
                                    l8914 3164                                      l8826 30C0  
                                    l8818 2E2C                                      l7956 2FD6  
                                    l8684 10B4                                      l8668 106E  
                                    l8676 1092                                      l8932 3650  
                                    l7972 23CE                                      l8756 331C  
                                    l8686 10BA                                      l8678 109C  
                                    l8950 335A                                      l8934 3654  
                                    l8918 3512                                      l8688 10DE  
                                    l8880 22E6                                      l7984 2402  
                                    l7986 240E                                      l7978 23E4  
                                    l8948 3356                                      l7996 2444  
                                    l7988 2414                                      l8878 22D0  
                                    l8886 22EC                                      l8798 2DBE  
                                    STR_1 FFA1                                      STR_2 FFAA  
                                    STR_3 FFE0                                      l8898 1F9C  
                                    STR_4 FF9E                                      STR_5 FFE8  
                                    STR_6 FFFA                                      STR_7 FFFA  
                                    STR_8 FFE8                                      STR_9 FFFC  
                                    u9110 0E40                     ??_USBCtrlTrfTxService 002E  
                                    i2l91 1052                                      u8340 3236  
                                    u9140 0EA2                                      i2l94 107C  
                                    _UCFG 000F39                                      u8600 18FC  
                                    u9160 0EC8                                      u9128 0E44  
                                    u7810 1B1C                                      u8347 322C  
                                    u7740 3640                                      u7820 1B1E  
                                    u8460 0F7A                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u7830 1B76  
                                    u9158 0EA6                                      u7840 1B78  
                                    u7808 1B0A                                      u8608 1900  
                                    u7770 1AD4                                      u9178 0ECC  
                                    _UEIE 000F37                                      u7780 1AD6  
                                    u8468 0F7E                                      u7790 1B06  
                                    u8840 2D7A                                      u8850 2DAC  
                                    u9807 2D86                                      u8847 2D70  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u8857 2DA2                                      u9767 2DD0  
                                    u9777 2E1C                                      u9787 388E  
                                    u9797 3572                           _CDCDataInHandle 00AC  
  USBStdFeatureReqHandler@current_ep_data 0045                                      _pDst 00B0  
                                    _main 0D6A                  ??i2_USBTransferOnePacket 0032  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 010A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 38E6                           _USBDeviceAttach 34D0  
                                    btemp 005B                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 3916                          __end_of_I2C_Stop 3910  
                                    pclat 000FFA                          __end_of_I2C_init 38F8  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 10B8                             __CFG_IESO$OFF 000000  
              __end_of_USBCheckStdRequest 1D34                    ??_USBCtrlTrfOutHandler 0030  
                            ?_ST7032_init 002E                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0042                             _I2C_LCD_Clear 3880  
                   __end_ofi2_ringbuf_pop 2A24                     __end_ofi2_ringbuf_num 25E8  
                   __end_ofi2_ringbuf_put 28C8                                     ??_ISR 004C  
                  __size_of_I2C_IdleCheck 001E                  ??_USBStdGetStatusHandler 002E  
                          ?_USBDeviceInit 002E                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   ?_main 002E                   __size_of_put_string_usb 002E  
                          ??_get_quot_rem 007D                           __end_of___awdiv 2470  
                                   _ADRES 000FC3                                     STR_10 FF9F  
                                   STR_11 FFF8                                     STR_21 FFE5  
                                   STR_30 FF81                                     STR_15 FFF6  
                                   STR_32 FFD6                                     STR_40 FFC9  
                                   STR_41 FFF4                                     STR_33 FFF0  
                                   STR_17 FF98                                     STR_25 FF5C  
                                   STR_34 FFD0                                     STR_42 FFC2  
                                   STR_26 FFB3                                     STR_43 FFBB  
                                   STR_27 FF8D                                     STR_36 FFE9  
                         __end_of___awmod 2B70                                     STR_29 FFED  
                                   STR_38 FFDB                                     STR_39 FFF2  
       __size_of_USBCtrlEPServiceComplete 00F0                           __end_of___lldiv 252C  
                         ___awdiv@divisor 0062                    __end_of_USBDeviceTasks 137E  
                                   _LATB2 007C52                 ?_USBCtrlEPServiceComplete 002E  
                         __end_of___lwdiv 2FC4                           __end_of___lwmod 31E0  
                                   i2l836 33BA                                     i2l837 33B8  
                                   _UADDR 000F38                           ___awdiv@counter 0064  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64        __size_of_USBCtrlEPAllowStatusStage 00C2  
                     ___lmul@multiplicand 0071                            __CFG_FCMEN$OFF 000000  
                        __end_of_UART_ISR 33D8           __end_of_USBCtrlEPAllowDataStage 2C08  
                                   _sd000 FF58                                     _sd001 FEC2  
                                   _sd002 FEF6                      caltime_to_epoch@year 007F  
                              i2memset@p1 002E                        __size_of_UART_init 0022  
                         __end_of_dpowers FE77                        __size_of_UART_task 0020  
                        __end_of_OSC_init 3906                           __end_of_isdigit 377A  
                      __size_of_RTCC_init 006A                           ?_get_string_usb 006D  
                      __size_of_RTCC_task 003C                                     main@s 02A4  
                       __end_of_I2C_Start 3644                              display_dec@s 0093  
                                   tablat 000FF5                                     plusw2 000FDB  
                       __end_of_CDCInitEP 30AA                          __end_of_USB_init 3864  
                        __end_of_USB_task 2D2A                                     status 000FD8  
                         __end_of_sprintf 045A                          __end_ofi2_memset 3750  
                       month_length@month 0066                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00DC                            ?_I2C_LCD_Clear 002E  
                         __initialization 2E44                              __end_of_main 0F56  
                   _control_signal_bitmap 00BE                       ringbuf_init@bufsize 0064  
                        RTCC_from_RTCC@tm 0086                 __size_of_USBCtrlEPService 00CE  
                                  ??_main 009D                             __activetblptr 000003  
                         ?_USBDeviceTasks 002E                               ?_USBSuspend 002E  
                            _cdc_mem_type 00BA                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 382A                   __end_of_USBDeviceAttach 3508  
                        _CDCDataOutHandle 00AE                         _getsUSBUSART$5624 006B  
                       _I2C_LCD_SetCursor 36CC                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                     display_time_0802@tm 0097                          ___awdiv@dividend 0060  
                               ??_USB_ISR 004C                        I2C_LCD_Command@ans 0065  
                         getsUSBUSART@len 0069                     __size_of_CDCTxService 018C  
                                  i2l1220 2ABA                                    i2l1221 2A40  
                                  i2l1222 2A44                                    i2l1230 341A  
                                  i2l1080 126A                                    i2l1217 2A32  
                                  i2l1154 176C                                    i2l1090 1304  
                                  i2l1315 08D2                                    i2l1091 137A  
                                  i2l1068 13E4                                    i2l1092 1316  
                                  i2l1281 1C6A                                    i2l1290 1CB8  
                                  i2l1267 2752                                    i2l1372 2916  
                                  i2l1374 294C                                    i2l1296 0710  
                          __CFG_WDTEN$OFF 000000                                    i2l5302 2006  
                                  i2l5310 203E                                    i2l5206 2684  
                                  i2l5312 2046                                    i2l5320 207E  
                                  i2l6104 2738                                    i2l5402 1BC6  
                                  i2l3634 3416                                    i2l5164 2C6A  
                                  i2l5324 372E                                    i2l6070 3296  
                                  i2l6062 324E                                    i2l5174 346A  
                                  i2l5254 2936                                    i2l5246 290A  
                                  i2l5238 28F4                                    i2l5262 2954  
                                  i2l5272 3680                                    i2l5520 07CA  
                                  i2l5512 0784                                    i2l5432 14C8  
                                  i2l5328 373E                                    i2l5424 1C38  
                                  i2l5408 1BF2                                    i2l5178 3478  
                                  i2l5194 2628                                    i2l5186 25FE  
                                  i2l5266 3674                                    i2l7036 28B2  
                                  i2l5292 1FDC                                    i2l6084 26D4  
                                  i2l5348 2336                                    i2l5268 367A  
                                  i2l5540 086C                                    i2l5524 07E6  
                                  i2l5452 15C6                                    i2l5444 1568  
                                  i2l5436 14DA                                    i2l7046 2A08  
                                  i2l7054 2A20                                    i2l6086 26D8  
                                  i2l5550 08B2                                    i2l5534 0838  
                                  i2l5518 07C8                                    i2l5454 15CC  
                                  i2l5446 156E                                    i2l5470 2A62  
                                  i2l5382 2BD6                                    i2l7048 2A1C  
                                  i2l5288 1FD2                                    i2l5560 08EE  
                                  i2l5552 08BE                                    i2l5536 0852  
                                  i2l5480 2AA2                                    i2l6098 2718  
                                  i2l5802 1638                                    i2l5458 15D2  
                                  i2l5378 2BBE                                    i2l6610 21F4  
                                  i2l6602 21AE                                    i2l7332 1074  
                                  i2l5814 1692                                    i2l5566 0932  
                                  i2l5398 1BBE                                    i2l6614 220E  
                                  i2l5568 093E                                    i2l5840 1C7E  
                                  i2l6616 2214                                    i2l5818 16AC  
                                  i2l5498 070C                                    i2l5850 1C96  
                                  i2l6570 360C                                    i2l6650 13C8  
                                  i2l6628 258E                                    i2l5852 1C9C  
                                  i2l5836 1C72                                    i2l5748 1716  
                                  i2l6572 360E                                    i2l5862 1CD2  
                                  i2l5838 1C78                                    i2l6662 13F2  
                                  i2l6670 1404                                    i2l6646 13C0  
                                  i2l5848 1C90                                    i2l5768 1792  
                                  i2l5866 1CF0                                    i2l6674 1422  
                                  i2l6914 1262                                    i2l6906 1252  
                                  i2l5796 1616                                    i2l6684 1486  
                                  i2l6598 21A6                                    i2l6678 142A  
                                  i2l6942 12B6                                    i2l6952 12C6  
                                  i2l6936 1290                                    i2l6928 1280  
                                  i2l6972 130E                                    i2l6966 12FA  
                                  i2l6958 12D2                                    i2l6992 135A  
                                  i2l6994 1376                                    i2l6986 133C  
                      ?_I2C_LCD_SetCursor 0066                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0032                         ??i2_USBDeviceInit 0036  
                         i2ringbuf_pop@rb 0036                           i2ringbuf_num@rb 002E  
         __size_ofi2_USBTransferOnePacket 00BA                           i2ringbuf_put@rb 0036  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 3880  
                      epoch_to_caltime@tm 0081                      get_string_usb@rx_len 0072  
                       _shortPacketStatus 002B                       ??_I2C_LCD_SetCursor 0067  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                         USBDeviceTasks@i 004B                     caltime_to_epoch@epoch 0081  
             USBStdFeatureReqHandler@pUEP 0043                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002F                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 006F                     caltime_to_epoch@month 0085  
                                  ___lmul 2FC4                              ?_putUSBUSART 0060  
                         _caltime_to_RTCC 2086                                    ___wmul 3578  
                      ??_epoch_to_caltime 0083                         __end_of_UART_init 37EA  
                               ??___awdiv 0064                         __end_of_UART_task 380A  
                               ??___awmod 0064                                    _d_to_x 377A  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 19BE  
                            ?_timer0_init 002E                         __end_of_RTCC_init 3114  
                            ?_timer1_init 0060                                 ??___lwdiv 0064  
                       __end_of_RTCC_task 345A                                 ??___lwmod 006B  
                            ?_timer3_init 002E                                    _lcd_tx 00C4  
                       _USBEnableEndpoint 345A           __size_of_USBStdGetStatusHandler 00AA  
                                  _memset 35AE                                    clear_0 2E4C  
                                  clear_1 2E5E                                    clear_2 2E6A  
                         put_string_usb@s 006C                                    clear_3 2E76  
                                  clear_4 2E82                                    clear_5 2E8E  
                                  clear_6 2E9A                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0066                           ___awmod@divisor 0062  
                         ___awmod@counter 0064                                    _x_to_d 380A  
                      ?_USBEnableEndpoint 0036                                    _usb_rx 01DC  
                                  _usb_tx 01E4                      __size_of_display_dec 006A  
                                  _strcat 31E0                                    _strcpy 3508  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                               ??_isdigit 0060                                 ?_I2C_Send 002E  
                            _CDCTxService 0F56                                 ?_I2C_Stop 002E  
                            __mediumconst FE6C                                 ?_I2C_init 002E  
               __end_of_I2C_LCD_SetCursor 36F8                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                     ??_USBEnableEndpoint 0037                            ?_I2C_IdleCheck 002E  
                               ??_sprintf 007E                               _CtrlTrfData 000D38  
                    _controlTransferState 0029                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 2EC0  
                            __pbssBIGRAMl 04C8                      __end_of_get_quot_rem 1EE0  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 389A                  __size_of_USBStallHandler 0046  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002C  
                        terminal_task@op0 0152                          terminal_task@op1 016B  
                        terminal_task@op2 0184                          terminal_task@op3 019D  
                          __pcstackCOMRAM 002E                 __end_of_USBEnableEndpoint 3496  
                           __end_of_sd000 FF5C                             __end_of_sd001 FEF6  
                           __end_of_sd002 FF2A                              __pidataBANK0 3916  
                               ?_UART_ISR 002E          __size_of_USBCtrlEPAllowDataStage 0098  
                    __size_of_ST7032_init 008C             __size_of_USBConfigureEndpoint 0094  
                               ?_OSC_init 002E               __end_of_USBCtrlTrfInHandler 275C  
                         __CFG_DSWDTPS$G2 000000                           _I2C_LCD_Command 3540  
                          _put_string_usb 3644                    i2_USBTransferOnePacket 25E8  
                    terminal_task@command 00CC                                 ?_USB_init 002E  
                               ?_USB_task 002E                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                         _CDCTxService$5672 0068  
                              ??_I2C_Stop 0062                                _cdc_notice 0100  
                               ?i2_memset 002E                                _cdc_rx_len 00BB  
                              ??_I2C_init 0060                                _cdc_tx_len 00BD  
              caltime_to_epoch@month_2357 0080                  ??_USBCtrlTrfSetupHandler 0048  
                        ?_USBDeviceAttach 002E                    _USBStdGetStatusHandler 2A24  
                            sprintf@width 008D                        __size_of_main_init 00E2  
                              __pbssBANK0 009E                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0400                   __end_of_caltime_to_RTCC 2156  
                         _RTCC_to_caltime 275C               __size_of_USBWakeFromSuspend 0032  
                             _pBDTEntryIn 0010          __end_of_USBCtrlEPServiceComplete 17E6  
             __size_of_USBCheckCDCRequest 00B0                     __end_of_weekday_3char FF46  
                            ST7032_init@i 0068                     RTCC_task@prev_halfsec 00B8  
                    USBCtrlTrfRxService@i 002E                                   ?___lmul 006D  
                              ??_UART_ISR 003D                                   ?___wmul 0060  
                                 ?_d_to_x 002E                    __end_of_put_string_usb 3672  
                              ??_OSC_init 0060                                   ?_memset 0060  
                    I2C_LCD_SetCursor@col 0069                            ___lmul@product 0075  
                              _device_dsc FF46                      I2C_LCD_SetCursor@row 0066  
                        _USBCtrlEPService 2156                                   ?_x_to_d 002E  
                            I2C_Send@data 0062                                _ep_data_in 0016  
                                 ?_strcat 0060                                   ?_strcpy 0060  
             __end_of_USBCtrlTrfRxService 16F6                        _USBCheckStdRequest 1C5A  
                              ??_USB_init 0069                         _configDescriptor1 FE7F  
                              ??_USB_task 0076                          ??_get_string_usb 0071  
                      __CFG_OSC$INTOSCPLL 000000                           ??_I2C_IdleCheck 0060  
                              ??i2_memset 0034               __end_of_USBCtrlTrfTxService 2086  
                     _USBStdSetCfgHandler 1B7E                __size_of_I2C_LCD_SetCursor 002C  
                  I2C_LCD_SetCursor@F8620 00D6                           __CFG_WDTPS$1024 000000  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                                   _RTCVALH 000F3B  
                                 _RTCVALL 000F3A                       ?_USBCheckStdRequest 002E  
            __size_of_USBStdGetDscHandler 0132                                   _UIEbits 000F36  
                                 _USB_ISR 3910                   __end_of_RTCC_from_epoch 38B4  
                    timer1_init@prescaler 0062                                   _UIRbits 000F62  
                        i2ringbuf_pop@ret 003C                          __CFG_CFGPLLEN$ON 000000  
                           _cdc_trf_state 00BC                             ?_month_length 0066  
                     epoch_to_caltime@day 0087                       epoch_to_caltime@num 008B  
                       RTCC_from_epoch@tm 008F                                 _I2C_Start 3614  
                                 _pCDCDst 00A4                                   _pCDCSrc 00A7  
                   __size_of_getsUSBUSART 00EA                    display_time_0802@line0 0099  
                  display_time_0802@line1 009B                                   __Hparam 0000  
                    ?_USBStdSetCfgHandler 002E                                 _CDCInitEP 303A  
                                 __Lparam 0000                   __end_of_I2C_LCD_Command 3578  
              __size_of_USBEnableEndpoint 003C                              USB_task@data 0078  
                    ??_USBCheckStdRequest 0048             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 23B2  
                         __size_of___lmul 0076                                   ___awmod 2ACE  
                                 ___lldiv 2470                          ??_USBDeviceTasks 004B  
                         __size_of___wmul 0036                                   ___lwdiv 2F4C  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002E  
                                 ___lwmod 317E                           __size_of_d_to_x 0028  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 1AA0                      __size_of_putUSBUSART 0026  
             epoch_to_caltime@month_cache 00DA                                   __pcinit 2E44  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FEC2                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 0D6A                                   __ptext1 19BE  
                                 __ptext2 36A0                                   __ptext3 32F0  
                                 __ptext4 3496                                   __ptext5 329C  
                                 __ptext6 3848                                   __ptext7 10E2  
                                 __ptext8 35AE                                   __ptext9 34D0  
                                 _inPipes 000A                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 0064  
             _USBDeferOUTDataStagePackets 0023                                 _T0CONbits 000FD5  
                         __size_of_strcat 0060                          _time_change_flag 00C1  
                        _caltime_to_epoch 045A                           __size_of_strcpy 0038  
                            __size_of_ISR 00B0                                 _T1CONbits 000FCD  
                                 _dpowers FE6D                              ??_USBSuspend 0042  
                 __size_of_RTCC_from_RTCC 001A                                   _isdigit 3750  
                               _T3CONbits 000F79                          ___awmod@dividend 0060  
                               _T5CONbits 000F22                           i2_USBDeviceInit 137E  
                        i2USBDeviceInit@i 0036                                   _uart_rx 01CC  
                                 _uart_tx 01D4                        __end_of_USB_CD_Ptr FE7F  
                                 _sprintf 0000           __size_of_USBCtrlTrfSetupHandler 0082  
                 __end_of_RTCC_to_caltime 2812                     __size_of_get_quot_rem 00D4  
                    end_of_initialization 2EC0                              _getsUSBUSART 18D4  
                  __size_ofi2_ringbuf_pop 00AC                    __size_ofi2_ringbuf_num 00BC  
                  __size_ofi2_ringbuf_put 00B6                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FE7D                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 001E                            ??_month_length 0067  
                          display_dec@dec 0091                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                          display_dec@str 008F           _dummy_encapsulated_cmd_response 01C4  
                ?_USBStdFeatureReqHandler 002E                          ?_caltime_to_RTCC 0069  
                              ?_I2C_Start 0062                     ??_USBStdSetCfgHandler 0042  
                         ___lldiv@divisor 0064                      timer3_init@prescaler 0061  
                              ?_CDCInitEP 002E                           ___lldiv@counter 006C  
                       ?_is_usb_available 002E                        __end_of_USBSuspend 3724  
                          ??_ringbuf_init 0066                   _USBCtrlEPAllowDataStage 2B70  
                        I2C_LCD_task@wait 00B7                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 16F6  
              _USBStatusStageEnabledFlag1 0026                _USBStatusStageEnabledFlag2 0027  
                      USBEnableEndpoint@p 0037                                 _UART_init 37C8  
                               _UART_task 37EA                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 30AA                                 _RTCC_task 341E  
               epoch_to_caltime@day_cache 00B2                    i2ringbuf_put@asciicode 0038  
                            _get_quot_rem 1E0C                 __size_of_epoch_to_caltime 01F2  
                        __CFG_CPUDIV$OSC1 000000                        _BothEP0OutUOWNsSet 0020  
                       __size_of_I2C_Send 0018                         __size_of_I2C_Stop 000A  
                       __size_of_I2C_init 0012                 USBConfigureEndpoint@EPNum 0033  
              ?_USBCtrlEPAllowStatusStage 002E                          ?_RTCC_from_epoch 008F  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003E                              _i2c_lcd_flag 00BF  
                               _USTATcopy 002D                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 1E0C                          __CFG_IOL1WAY$OFF 000000  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                        ?_I2C_LCD_Command 002E                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 2ECA                            ringbuf_pop@ret 006E  
                           ??_display_dec 0093                             i2_ringbuf_pop 2978  
                           i2_ringbuf_num 252C                   ?i2_USBTransferOnePacket 002E  
                           i2_ringbuf_put 2812                     __end_of_USBDeviceInit 123A  
                          __end_of___lmul 303A                            __end_of___wmul 35AE  
                          __end_of_d_to_x 37A2                         __size_of_UART_ISR 004A  
                 __end_ofi2_USBDeviceInit 14B8                                ?_UART_init 002E  
                               i2memset@c 0030                                 i2memset@n 0032  
                               i2memset@p 0034                                ?_UART_task 002E  
                          __end_of_memset 35E2                                ?_RTCC_init 002E  
                       __size_of_OSC_init 000E                                ?_RTCC_task 002E  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 00B9  
                          __end_of_x_to_d 382A                            __end_of_strcat 3240  
                   epoch_to_caltime@month 008A                            __end_of_strcpy 3540  
                     start_initialization 2E44                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002E                               __end_of_ISR 10B8  
           USBCtrlTrfRxService@byteToRead 002F                         __size_of_USB_init 001C  
                       __size_of_USB_task 008E                             ?_I2C_LCD_Puts 0064  
                             _cdc_data_rx 0112                               _cdc_data_tx 0264  
                       __size_ofi2_memset 002C                             UART_ISR@ascii 003D  
            __end_of_USBConfigureEndpoint 2C9C                          ?_RTCC_to_caltime 0062  
         __end_of_USBStdFeatureReqHandler 0964         __end_of_USBCtrlEPAllowStatusStage 23B2  
                __end_of_USBCtrlEPService 2224                               ??_I2C_Start 0063  
               ??_USBCtrlEPAllowDataStage 002F                               ??_CDCInitEP 003A  
                          USBDeviceInit@i 0068                             ??_ST7032_init 0067  
                   __end_of_I2C_LCD_Clear 389A                    _pBDTEntryEP0OutCurrent 001C  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 26A2                                  ??___lmul 0075  
                          ?i2_ringbuf_pop 0036                            ?i2_ringbuf_num 002E  
                          ?i2_ringbuf_put 0036                                  ??___wmul 0064  
                     _USBStdGetDscHandler 14B8                                  ??_d_to_x 0068  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK0 00D6  
                     I2C_LCD_cursor@F8592 00D8                                  ??_memset 0066  
                                ??_x_to_d 0060                                  ??_strcat 0064  
                                ??_strcpy 0064                      __end_of_month_length 1B7E  
                          _RTCC_from_RTCC 38B4                    _USBActiveConfiguration 002C  
          __end_of_USBStdGetStatusHandler 2ACE                       __end_of_display_dec 317E  
                             __pbssCOMRAM 0001                            USB_task@rx_len 0076  
                     RTCC_to_caltime@dumy 0064                             __pcstackBANK0 0060  
                           __pcstackBANK2 02A4              __size_of_USBCtrlTrfInHandler 00BA  
                          ??_I2C_LCD_Puts 0066                      __end_of_ringbuf_init 32F0  
                    ?_USBStdGetDscHandler 002E                              _isdigit$5925 0061  
                                ?_USB_ISR 002E                __end_of_USBWakeFromSuspend 3614  
                             sprintf@flag 008B                               sprintf@prec 0082  
                         _USBStallHandler 33D8                              _pBDTEntryOut 009E  
              __end_of_USBCheckCDCRequest 2978                  __end_of_caltime_to_epoch 06E8  
                         millis_timer@cnt 00B4                  __size_of_USBDeviceAttach 0038  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 0060  
                               __pintcode 1008                             __pmediumconst FE6C  
                                ?___awdiv 0060                                  ?___awmod 0060  
                                ?___lldiv 0060                                  ?___lwdiv 0060  
                                ?___lwmod 0067                     _is_usb_available$3807 0060  
                  __end_of_RTCC_from_RTCC 38CE                           I2C_LCD_Puts@ans 0067  
                     __end_of_ST7032_init 2E44                          ?i2_USBDeviceInit 002E  
                             ??_UART_init 0060                USBCBSendResume@delay_count 00AA  
                             ??_UART_task 0068                               ??_RTCC_init 0091  
                             ??_RTCC_task 0088                      _USBTransferOnePacket 1D34  
                               _main_init 19BE                               I2C_Start@rw 0062  
                                ?_isdigit 002E                          _epoch_to_caltime 0B78  
                                _I2C_Send 38CE                                  _I2C_Stop 3906  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_init 38E6  
                   __end_of_I2C_IdleCheck 3848                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 329C                         ST7032_init@i_3110 0069  
                   ??_USBStdGetDscHandler 002E                               _ep_data_out 0019  
                        ___lwdiv@quotient 0065                                  ?_sprintf 006C  
            __size_of_USBCtrlTrfRxService 010C             USBConfigureEndpoint@direction 002E  
                               d_to_x@dec 0068                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
            __size_of_USBCtrlTrfTxService 00D2                  ringbuf_init@internal_buf 0062  
                          ___wmul@product 0064                                  _LATAbits 000F89  
                                _LATBbits 000F8A                           I2C_LCD_init@buf 0400  
              ??_USBCtrlEPServiceComplete 002F                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                                  i2u403_40 2030  
                                i2u403_47 2026                                  i2u420_40 1534  
                         ??i2_ringbuf_pop 0038                           ??i2_ringbuf_num 0030  
                                i2u420_47 152A                                  i2u405_40 2070  
                                i2u421_40 1564                                  i2u405_47 2066  
                                i2u421_47 155A                           ??i2_ringbuf_put 0039  
                                i2u423_40 15BC                                  i2u423_47 15B2  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR5bits 000F98                epoch_to_caltime@year_cache 00C2  
                                i2u670_40 1068                                  i2u671_48 106A  
               USBCtrlEPService@setup_cnt 004A                             ??_ringbuf_pop 006A  
                           ??_ringbuf_num 0062                             ??_ringbuf_put 0072  
                                _RCONbits 000FD0                         _display_time_0802 0964  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
              _USBDeferINDataStagePackets 0022                                  _UART_ISR 338E  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00DA                             ??_timer3_init 0060  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_0802 0097                               _display_dec 3114  
                    _USBConfigureEndpoint 2C08                                  _OSC_init 38F8  
                         ?_RTCC_from_RTCC 0086          __size_of_USBStdFeatureReqHandler 027C  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0060                     ?_USBTransferOnePacket 0060  
                        __CFG_SOSCSEL$LOW 000000                                  _USB_init 3848  
                                _USB_task 2C9C                                ?_main_init 002E  
               __size_of_is_usb_available 001C                             ?_CDCTxService 002E  
                     ??_display_time_0802 009D                              _RemoteWakeup 0021  
                                i2_memset 3724                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 341E  
                           I2C_Start@adrs 0063                             ringbuf_put@rb 006F  
                       ___lmul@multiplier 006D                               _INTCON2bits 000FF1  
                               copy_data0 2EB4               ??_USBCtrlEPAllowStatusStage 002E  
             __end_of_USBStdSetCfgHandler 1C5A                          __size_of_USB_ISR 0006  
                    epoch_to_caltime@year 0089                           main_init@uartrx 0300  
                         main_init@uarttx 04C8                   __size_of_get_string_usb 004E  
                      __end_of_device_dsc FF58                   ?_USBCtrlTrfSetupHandler 002E  
               __end_of_display_time_0802 0B78                   USBStdGetStatusHandler@p 002F  
                                __Hrparam 0000                               _ST7032_init 2DB8  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                    __end_of_I2C_LCD_Puts 2DB8                                  _SetupPkt 000D30  
                           _weekday_3char FF2A                     __size_of_month_length 00DE  
                   ?_USBConfigureEndpoint 002E                  __size_of_caltime_to_RTCC 00D0  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 0061  
                        __size_of___lldiv 00BC                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                       __end_of_ringbuf_pop 22F0  
                     __end_of_ringbuf_num 18D4                       __end_of_ringbuf_put 1FB4  
                     __end_of_putUSBUSART 37C8                               _line_coding 01EC  
                          ??_CDCTxService 0067                       __end_of_timer0_init 34D0  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 3340  
                              sprintf@len 0089                       __end_of_timer3_init 36CC  
                              sprintf@val 0087                                strcat@from 0062  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0144  
                         ___lwdiv@divisor 0062                           ___lwdiv@counter 0064  
                    timer0_init@prescaler 0061                                  __ptext10 37C8  
                                __ptext11 2DB8                                  __ptext20 23B2  
                                __ptext12 3880                                  __ptext21 38F8  
                                __ptext13 30AA                                  __ptext30 317E  
                                __ptext22 38E6                                  __ptext14 389A  
                                __ptext31 2F4C                                  __ptext23 0964  
                                __ptext15 0B78                                  __ptext40 0F56  
                                __ptext32 2C9C                                  __ptext24 3508  
                                __ptext16 1E0C                                  __ptext41 1D34  
                                __ptext33 1EE0                                  __ptext25 3114  
                                __ptext17 2470                                  __ptext50 275C  
                                __ptext42 37EA                                  __ptext34 2224  
                                __ptext26 31E0                                  __ptext18 2086  
                                __ptext51 380A                                  __ptext43 17E6  
                                __ptext35 3644                                  __ptext27 0000  
                                __ptext19 377A                                  __ptext60 3910  
                                __ptext52 36CC                                  __ptext44 341E  
                                __ptext36 37A2                                  __ptext28 3750  
                                __ptext61 123A                                  __ptext53 3540  
                                __ptext45 38B4                                  __ptext37 3340  
                                __ptext29 3578                                  __ptext70 1C5A  
                                __ptext62 137E                                  __ptext54 2D2A  
                                __ptext46 045A                                  __ptext38 3864  
                                __ptext71 1B7E                                  __ptext63 35E2  
                                __ptext55 3906                                  __ptext47 1AA0  
                                __ptext39 18D4                                  __ptext80 345A  
                                __ptext72 3724                                  __ptext64 36F8  
                                __ptext56 3614                                  __ptext48 2ACE  
                                __ptext81 2C08                                  __ptext73 2A24  
                                __ptext65 33D8                                  __ptext57 38CE  
                                __ptext49 2FC4                                  __ptext90 252C  
                                __ptext82 3240                                  __ptext74 14B8  
                                __ptext66 2156                                  __ptext58 382A  
                                __ptext83 15EA                                  __ptext75 06E8  
                                __ptext67 2ECA                                  __ptext84 22F0  
                                __ptext76 3672                                  __ptext68 16F6  
                                __ptext85 26A2                                  __ptext77 28C8  
                                __ptext69 2B70                                  __ptext86 1FB4  
                                __ptext78 303A                                  __ptext87 338E  
                                __ptext79 25E8                                  __ptext88 2812  
                                __ptext89 2978                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                          __size_of_sprintf 045A  
                              strcpy@from 0062            __end_of_USBCtrlTrfSetupHandler 2F4C  
                           __size_of_main 01EC                         ?_USBCtrlEPService 002E  
                            _month_length 1AA0                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0048                  __size_of_RTCC_from_epoch 001A  
                     _USBCtrlTrfInHandler 26A2                                  _outPipes 0001  
                    _USBCtrlTrfOutHandler 3240                                  int$flags 005B  
                            _ringbuf_init 329C                 _USBCtrlEPAllowStatusStage 22F0  
                               x_to_d@hex 0061                              _SSP1STATbits 000FC7  
                  ??_USBTransferOnePacket 0064                  __size_of_I2C_LCD_Command 0038  
               _USBDeferStatusStagePacket 0024                  CDCTxService@byte_to_send 006B  
                          main_init@usbrx 0200                            main_init@usbtx 08B0  
                             ??_main_init 0091                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 0071  
                    ?_USBCtrlTrfInHandler 002E             USBCtrlTrfTxService@byteToSend 002E  
            I2C_LCD_SetCursor@row_offsets 0067                           display_dec@edit 0092  
                                isdigit@c 0062                                  memset@p1 0060  
                        ?_USBStallHandler 002E                  USBStdFeatureReqHandler@p 0046  
                        get_quot_rem@quot 0079                 terminal_task@command_init 00C3  
                       RTCC_to_caltime@tm 0062                                  intlevel2 0000  
                               sprintf@ap 0083                                 sprintf@cp 0085  
                               sprintf@sp 006C                    __size_of_USBDeviceInit 0158  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 36A0  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0040          ?_USER_USB_CALLBACK_EVENT_HANDLER 003A  
         _USER_USB_CALLBACK_EVENT_HANDLER 3672                          ___lwmod@dividend 0067  
            i2USBTransferOnePacket@handle 0033                          ___lldiv@dividend 0060  
                              _RCSTA1bits 000FAC                         ?_caltime_to_epoch 0079  
              __size_of_display_time_0802 0214                  __end_of_epoch_to_caltime 0D6A  
                __size_of_RTCC_to_caltime 00B6                                _OSCCONbits 000FD3  
              i2USBTransferOnePacket@data 002F                        ??_caltime_to_epoch 007B  
                  ??_USBConfigureEndpoint 002F                     ?_USBCtrlTrfOutHandler 002E  
                             _ringbuf_pop 2224                               _ringbuf_num 17E6  
                             _ringbuf_put 1EE0                               _putUSBUSART 37A2  
                     _USBCtrlTrfRxService 15EA                               _timer0_init 3496  
                      _USBWakeFromSuspend 35E2                               _timer1_init 32F0  
                             _timer3_init 36A0                   _USBStdFeatureReqHandler 06E8  
                      _USBCheckCDCRequest 28C8                       _USBCtrlTrfTxService 1FB4  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                                  sprintf@c 008C  
                                sprintf@f 006E                                  strcat@cp 0064  
                                strcat@to 0060                       ?_USBWakeFromSuspend 002E  
                        _is_usb_available 3864                          ___lldiv@quotient 0068  
                         ___lwmod@divisor 0069                         caltime_to_RTCC@tm 0069  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002F  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 00D4                           ___lwmod@counter 006B  
                     ?_USBCheckCDCRequest 002E                 i2USBTransferOnePacket@dir 002E  
               i2USBTransferOnePacket@len 0031                       USBEnableEndpoint@ep 0039  
                         _endpoint_number 002A                    __size_of_I2C_LCD_Clear 001A  
                    ?_USBCtrlTrfRxService 002E           epoch_to_caltime@day_since_epoch 0085  
                           ?_getsUSBUSART 0067                  ?_USBCtrlEPAllowDataStage 002E  
                          _get_string_usb 3340                      ?_USBCtrlTrfTxService 002E  
               I2C_LCD_task@i2c_lcd_state 00B6              _USBStatusStageTimeoutCounter 0028  
                   __size_of_I2C_LCD_Puts 008E                      ??_USBWakeFromSuspend 0042  
              USBTransferOnePacket@handle 0065                      __end_of_CDCTxService 10E2  
                    ??_USBCheckCDCRequest 002E                                _USB_CD_Ptr FE7D  
                        ??_RTCC_from_RTCC 0088  
