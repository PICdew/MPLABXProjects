

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Apr 04 23:50:52 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	idataBANK3,global,class=CODE,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    17                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	idataCOMRAM
    57  0018BE                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for main@F7644
    61  0018BE  48                 	db	72
    62  0018BF  65                 	db	101
    63  0018C0  6C                 	db	108
    64  0018C1  6C                 	db	108
    65  0018C2  6F                 	db	111
    66  0018C3  20                 	db	32
    67  0018C4  57                 	db	87
    68  0018C5  6F                 	db	111
    69  0018C6  72                 	db	114
    70  0018C7  6C                 	db	108
    71  0018C8  64                 	db	100
    72  0018C9  21                 	db	33
    73  0018CA  00                 	db	0
    74                           
    75                           ;initializer for _return_reset
    76  0018CB  01                 	db	1
    77                           
    78                           	psect	idataBIGRAM
    79  000B9E                     __pidataBIGRAM:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _pattern
    83  000B9E  FF                 	db	255
    84  000B9F  FF                 	db	255
    85  000BA0  FF                 	db	255
    86  000BA1  FF                 	db	255
    87  000BA2  FF                 	db	255
    88  000BA3  FF                 	db	255
    89  000BA4  FF                 	db	255
    90  000BA5  41                 	db	65
    91  000BA6  FF                 	db	255
    92  000BA7  FF                 	db	255
    93  000BA8  FF                 	db	255
    94  000BA9  F9                 	db	249
    95  000BAA  FF                 	db	255
    96  000BAB  F9                 	db	249
    97  000BAC  FF                 	db	255
    98  000BAD  D7                 	db	215
    99  000BAE  01                 	db	1
   100  000BAF  D7                 	db	215
   101  000BB0  01                 	db	1
   102  000BB1  D7                 	db	215
   103  000BB2  B7                 	db	183
   104  000BB3  AB                 	db	171
   105  000BB4  01                 	db	1
   106  000BB5  AB                 	db	171
   107  000BB6  DB                 	db	219
   108  000BB7  B1                 	db	177
   109  000BB8  D5                 	db	213
   110  000BB9  29                 	db	41
   111  000BBA  57                 	db	87
   112  000BBB  1B                 	db	27
   113  000BBC  93                 	db	147
   114  000BBD  6D                 	db	109
   115  000BBE  53                 	db	83
   116  000BBF  BF                 	db	191
   117  000BC0  5F                 	db	95
   118  000BC1  FF                 	db	255
   119  000BC2  FF                 	db	255
   120  000BC3  F9                 	db	249
   121  000BC4  FF                 	db	255
   122  000BC5  FF                 	db	255
   123  000BC6  FF                 	db	255
   124  000BC7  FF                 	db	255
   125  000BC8  C7                 	db	199
   126  000BC9  BB                 	db	187
   127  000BCA  7D                 	db	125
   128  000BCB  7D                 	db	125
   129  000BCC  BB                 	db	187
   130  000BCD  C7                 	db	199
   131  000BCE  FF                 	db	255
   132  000BCF  FF                 	db	255
   133  000BD0  BB                 	db	187
   134  000BD1  D7                 	db	215
   135  000BD2  01                 	db	1
   136  000BD3  D7                 	db	215
   137  000BD4  BB                 	db	187
   138  000BD5  EF                 	db	239
   139  000BD6  EF                 	db	239
   140  000BD7  83                 	db	131
   141  000BD8  EF                 	db	239
   142  000BD9  EF                 	db	239
   143  000BDA  FF                 	db	255
   144  000BDB  5F                 	db	95
   145  000BDC  9F                 	db	159
   146  000BDD  FF                 	db	255
   147  000BDE  FF                 	db	255
   148  000BDF  EF                 	db	239
   149  000BE0  EF                 	db	239
   150  000BE1  EF                 	db	239
   151  000BE2  EF                 	db	239
   152  000BE3  EF                 	db	239
   153  000BE4  FF                 	db	255
   154  000BE5  3F                 	db	63
   155  000BE6  3F                 	db	63
   156  000BE7  FF                 	db	255
   157  000BE8  FF                 	db	255
   158  000BE9  BF                 	db	191
   159  000BEA  DF                 	db	223
   160  000BEB  EF                 	db	239
   161  000BEC  F7                 	db	247
   162  000BED  FB                 	db	251
   163  000BEE  83                 	db	131
   164  000BEF  5D                 	db	93
   165  000BF0  6D                 	db	109
   166  000BF1  75                 	db	117
   167  000BF2  83                 	db	131
   168  000BF3  FF                 	db	255
   169  000BF4  7B                 	db	123
   170  000BF5  01                 	db	1
   171  000BF6  7F                 	db	127
   172  000BF7  FF                 	db	255
   173  000BF8  7B                 	db	123
   174  000BF9  3D                 	db	61
   175  000BFA  5D                 	db	93
   176  000BFB  6D                 	db	109
   177  000BFC  73                 	db	115
   178  000BFD  BB                 	db	187
   179  000BFE  7D                 	db	125
   180  000BFF  6D                 	db	109
   181  000C00  6D                 	db	109
   182  000C01  93                 	db	147
   183  000C02  CF                 	db	207
   184  000C03  D7                 	db	215
   185  000C04  DB                 	db	219
   186  000C05  01                 	db	1
   187  000C06  DF                 	db	223
   188  000C07  A1                 	db	161
   189  000C08  6D                 	db	109
   190  000C09  6D                 	db	109
   191  000C0A  6D                 	db	109
   192  000C0B  9D                 	db	157
   193  000C0C  83                 	db	131
   194  000C0D  6D                 	db	109
   195  000C0E  6D                 	db	109
   196  000C0F  6D                 	db	109
   197  000C10  9B                 	db	155
   198  000C11  F9                 	db	249
   199  000C12  FD                 	db	253
   200  000C13  1D                 	db	29
   201  000C14  ED                 	db	237
   202  000C15  F1                 	db	241
   203  000C16  93                 	db	147
   204  000C17  6D                 	db	109
   205  000C18  6D                 	db	109
   206  000C19  6D                 	db	109
   207  000C1A  93                 	db	147
   208  000C1B  B3                 	db	179
   209  000C1C  6D                 	db	109
   210  000C1D  6D                 	db	109
   211  000C1E  6D                 	db	109
   212  000C1F  83                 	db	131
   213  000C20  FF                 	db	255
   214  000C21  93                 	db	147
   215  000C22  93                 	db	147
   216  000C23  FF                 	db	255
   217  000C24  FF                 	db	255
   218  000C25  FF                 	db	255
   219  000C26  53                 	db	83
   220  000C27  93                 	db	147
   221  000C28  FF                 	db	255
   222  000C29  FF                 	db	255
   223  000C2A  EF                 	db	239
   224  000C2B  D7                 	db	215
   225  000C2C  BB                 	db	187
   226  000C2D  7D                 	db	125
   227  000C2E  FF                 	db	255
   228  000C2F  BB                 	db	187
   229  000C30  BB                 	db	187
   230  000C31  BB                 	db	187
   231  000C32  BB                 	db	187
   232  000C33  BB                 	db	187
   233  000C34  FF                 	db	255
   234  000C35  7D                 	db	125
   235  000C36  BB                 	db	187
   236  000C37  D7                 	db	215
   237  000C38  EF                 	db	239
   238  000C39  F3                 	db	243
   239  000C3A  FD                 	db	253
   240  000C3B  4D                 	db	77
   241  000C3C  ED                 	db	237
   242  000C3D  F3                 	db	243
   243  000C3E  9B                 	db	155
   244  000C3F  6D                 	db	109
   245  000C40  1D                 	db	29
   246  000C41  7D                 	db	125
   247  000C42  83                 	db	131
   248  000C43  03                 	db	3
   249  000C44  ED                 	db	237
   250  000C45  ED                 	db	237
   251  000C46  ED                 	db	237
   252  000C47  03                 	db	3
   253  000C48  01                 	db	1
   254  000C49  6D                 	db	109
   255  000C4A  6D                 	db	109
   256  000C4B  6D                 	db	109
   257  000C4C  93                 	db	147
   258  000C4D  83                 	db	131
   259  000C4E  7D                 	db	125
   260  000C4F  7D                 	db	125
   261  000C50  7D                 	db	125
   262  000C51  BB                 	db	187
   263  000C52  01                 	db	1
   264  000C53  7D                 	db	125
   265  000C54  7D                 	db	125
   266  000C55  7D                 	db	125
   267  000C56  83                 	db	131
   268  000C57  01                 	db	1
   269  000C58  6D                 	db	109
   270  000C59  6D                 	db	109
   271  000C5A  6D                 	db	109
   272  000C5B  7D                 	db	125
   273  000C5C  01                 	db	1
   274  000C5D  ED                 	db	237
   275  000C5E  ED                 	db	237
   276  000C5F  ED                 	db	237
   277  000C60  FD                 	db	253
   278  000C61  83                 	db	131
   279  000C62  7D                 	db	125
   280  000C63  5D                 	db	93
   281  000C64  5D                 	db	93
   282  000C65  9B                 	db	155
   283  000C66  01                 	db	1
   284  000C67  EF                 	db	239
   285  000C68  EF                 	db	239
   286  000C69  EF                 	db	239
   287  000C6A  01                 	db	1
   288  000C6B  FF                 	db	255
   289  000C6C  7D                 	db	125
   290  000C6D  01                 	db	1
   291  000C6E  7D                 	db	125
   292  000C6F  FF                 	db	255
   293  000C70  9F                 	db	159
   294  000C71  7F                 	db	127
   295  000C72  7F                 	db	127
   296  000C73  7F                 	db	127
   297  000C74  81                 	db	129
   298  000C75  01                 	db	1
   299  000C76  EF                 	db	239
   300  000C77  D7                 	db	215
   301  000C78  BB                 	db	187
   302  000C79  7D                 	db	125
   303  000C7A  01                 	db	1
   304  000C7B  7F                 	db	127
   305  000C7C  7F                 	db	127
   306  000C7D  7F                 	db	127
   307  000C7E  7F                 	db	127
   308  000C7F  01                 	db	1
   309  000C80  FB                 	db	251
   310  000C81  F7                 	db	247
   311  000C82  FB                 	db	251
   312  000C83  01                 	db	1
   313  000C84  01                 	db	1
   314  000C85  F7                 	db	247
   315  000C86  EF                 	db	239
   316  000C87  DF                 	db	223
   317  000C88  01                 	db	1
   318  000C89  83                 	db	131
   319  000C8A  7D                 	db	125
   320  000C8B  7D                 	db	125
   321  000C8C  7D                 	db	125
   322  000C8D  83                 	db	131
   323  000C8E  01                 	db	1
   324  000C8F  ED                 	db	237
   325  000C90  ED                 	db	237
   326  000C91  ED                 	db	237
   327  000C92  F3                 	db	243
   328  000C93  83                 	db	131
   329  000C94  7D                 	db	125
   330  000C95  5D                 	db	93
   331  000C96  83                 	db	131
   332  000C97  DF                 	db	223
   333  000C98  01                 	db	1
   334  000C99  ED                 	db	237
   335  000C9A  CD                 	db	205
   336  000C9B  AD                 	db	173
   337  000C9C  73                 	db	115
   338  000C9D  B3                 	db	179
   339  000C9E  6D                 	db	109
   340  000C9F  6D                 	db	109
   341  000CA0  6D                 	db	109
   342  000CA1  9B                 	db	155
   343  000CA2  FD                 	db	253
   344  000CA3  FD                 	db	253
   345  000CA4  01                 	db	1
   346  000CA5  FD                 	db	253
   347  000CA6  FD                 	db	253
   348  000CA7  81                 	db	129
   349  000CA8  7F                 	db	127
   350  000CA9  7F                 	db	127
   351  000CAA  7F                 	db	127
   352  000CAB  81                 	db	129
   353  000CAC  C1                 	db	193
   354  000CAD  BF                 	db	191
   355  000CAE  7F                 	db	127
   356  000CAF  BF                 	db	191
   357  000CB0  C1                 	db	193
   358  000CB1  81                 	db	129
   359  000CB2  7F                 	db	127
   360  000CB3  9F                 	db	159
   361  000CB4  7F                 	db	127
   362  000CB5  81                 	db	129
   363  000CB6  39                 	db	57
   364  000CB7  D7                 	db	215
   365  000CB8  EF                 	db	239
   366  000CB9  D7                 	db	215
   367  000CBA  39                 	db	57
   368  000CBB  F9                 	db	249
   369  000CBC  F7                 	db	247
   370  000CBD  0F                 	db	15
   371  000CBE  F7                 	db	247
   372  000CBF  F9                 	db	249
   373  000CC0  3D                 	db	61
   374  000CC1  5D                 	db	93
   375  000CC2  6D                 	db	109
   376  000CC3  75                 	db	117
   377  000CC4  79                 	db	121
   378  000CC5  FF                 	db	255
   379  000CC6  FF                 	db	255
   380  000CC7  01                 	db	1
   381  000CC8  7D                 	db	125
   382  000CC9  FF                 	db	255
   383  000CCA  FB                 	db	251
   384  000CCB  F7                 	db	247
   385  000CCC  EF                 	db	239
   386  000CCD  DF                 	db	223
   387  000CCE  BF                 	db	191
   388  000CCF  FF                 	db	255
   389  000CD0  FF                 	db	255
   390  000CD1  01                 	db	1
   391  000CD2  7D                 	db	125
   392  000CD3  FF                 	db	255
   393  000CD4  F7                 	db	247
   394  000CD5  FB                 	db	251
   395  000CD6  FD                 	db	253
   396  000CD7  FB                 	db	251
   397  000CD8  F7                 	db	247
   398  000CD9  7F                 	db	127
   399  000CDA  7F                 	db	127
   400  000CDB  7F                 	db	127
   401  000CDC  7F                 	db	127
   402  000CDD  7F                 	db	127
   403  000CDE  FF                 	db	255
   404  000CDF  FD                 	db	253
   405  000CE0  FB                 	db	251
   406  000CE1  FF                 	db	255
   407  000CE2  FF                 	db	255
   408  000CE3  BF                 	db	191
   409  000CE4  57                 	db	87
   410  000CE5  57                 	db	87
   411  000CE6  57                 	db	87
   412  000CE7  0F                 	db	15
   413  000CE8  01                 	db	1
   414  000CE9  6F                 	db	111
   415  000CEA  77                 	db	119
   416  000CEB  77                 	db	119
   417  000CEC  8F                 	db	143
   418  000CED  8F                 	db	143
   419  000CEE  77                 	db	119
   420  000CEF  77                 	db	119
   421  000CF0  77                 	db	119
   422  000CF1  BF                 	db	191
   423  000CF2  8F                 	db	143
   424  000CF3  77                 	db	119
   425  000CF4  77                 	db	119
   426  000CF5  6F                 	db	111
   427  000CF6  01                 	db	1
   428  000CF7  8F                 	db	143
   429  000CF8  57                 	db	87
   430  000CF9  57                 	db	87
   431  000CFA  57                 	db	87
   432  000CFB  CF                 	db	207
   433  000CFC  EF                 	db	239
   434  000CFD  03                 	db	3
   435  000CFE  ED                 	db	237
   436  000CFF  FD                 	db	253
   437  000D00  FB                 	db	251
   438  000D01  E7                 	db	231
   439  000D02  5B                 	db	91
   440  000D03  5B                 	db	91
   441  000D04  5B                 	db	91
   442  000D05  83                 	db	131
   443  000D06  01                 	db	1
   444  000D07  EF                 	db	239
   445  000D08  F7                 	db	247
   446  000D09  F7                 	db	247
   447  000D0A  0F                 	db	15
   448  000D0B  FF                 	db	255
   449  000D0C  77                 	db	119
   450  000D0D  05                 	db	5
   451  000D0E  7F                 	db	127
   452  000D0F  FF                 	db	255
   453  000D10  BF                 	db	191
   454  000D11  7F                 	db	127
   455  000D12  77                 	db	119
   456  000D13  85                 	db	133
   457  000D14  FF                 	db	255
   458  000D15  01                 	db	1
   459  000D16  DF                 	db	223
   460  000D17  AF                 	db	175
   461  000D18  77                 	db	119
   462  000D19  FF                 	db	255
   463  000D1A  FF                 	db	255
   464  000D1B  7D                 	db	125
   465  000D1C  01                 	db	1
   466  000D1D  7F                 	db	127
   467  000D1E  FF                 	db	255
   468  000D1F  07                 	db	7
   469  000D20  F7                 	db	247
   470  000D21  CF                 	db	207
   471  000D22  F7                 	db	247
   472  000D23  0F                 	db	15
   473  000D24  07                 	db	7
   474  000D25  EF                 	db	239
   475  000D26  F7                 	db	247
   476  000D27  F7                 	db	247
   477  000D28  0F                 	db	15
   478  000D29  8F                 	db	143
   479  000D2A  77                 	db	119
   480  000D2B  77                 	db	119
   481  000D2C  77                 	db	119
   482  000D2D  8F                 	db	143
   483  000D2E  07                 	db	7
   484  000D2F  D7                 	db	215
   485  000D30  D7                 	db	215
   486  000D31  D7                 	db	215
   487  000D32  EF                 	db	239
   488  000D33  EF                 	db	239
   489  000D34  D7                 	db	215
   490  000D35  D7                 	db	215
   491  000D36  CF                 	db	207
   492  000D37  07                 	db	7
   493  000D38  07                 	db	7
   494  000D39  EF                 	db	239
   495  000D3A  F7                 	db	247
   496  000D3B  F7                 	db	247
   497  000D3C  EF                 	db	239
   498  000D3D  6F                 	db	111
   499  000D3E  57                 	db	87
   500  000D3F  57                 	db	87
   501  000D40  57                 	db	87
   502  000D41  BF                 	db	191
   503  000D42  F7                 	db	247
   504  000D43  81                 	db	129
   505  000D44  77                 	db	119
   506  000D45  7F                 	db	127
   507  000D46  BF                 	db	191
   508  000D47  87                 	db	135
   509  000D48  7F                 	db	127
   510  000D49  7F                 	db	127
   511  000D4A  BF                 	db	191
   512  000D4B  07                 	db	7
   513  000D4C  C7                 	db	199
   514  000D4D  BF                 	db	191
   515  000D4E  7F                 	db	127
   516  000D4F  BF                 	db	191
   517  000D50  C7                 	db	199
   518  000D51  87                 	db	135
   519  000D52  7F                 	db	127
   520  000D53  9F                 	db	159
   521  000D54  7F                 	db	127
   522  000D55  87                 	db	135
   523  000D56  77                 	db	119
   524  000D57  AF                 	db	175
   525  000D58  DF                 	db	223
   526  000D59  AF                 	db	175
   527  000D5A  77                 	db	119
   528  000D5B  E7                 	db	231
   529  000D5C  5F                 	db	95
   530  000D5D  5F                 	db	95
   531  000D5E  5F                 	db	95
   532  000D5F  87                 	db	135
   533  000D60  77                 	db	119
   534  000D61  37                 	db	55
   535  000D62  57                 	db	87
   536  000D63  67                 	db	103
   537  000D64  77                 	db	119
   538  000D65  FF                 	db	255
   539  000D66  EF                 	db	239
   540  000D67  93                 	db	147
   541  000D68  7D                 	db	125
   542  000D69  FF                 	db	255
   543  000D6A  FF                 	db	255
   544  000D6B  FF                 	db	255
   545  000D6C  01                 	db	1
   546  000D6D  FF                 	db	255
   547  000D6E  FF                 	db	255
   548  000D6F  FF                 	db	255
   549  000D70  7D                 	db	125
   550  000D71  93                 	db	147
   551  000D72  EF                 	db	239
   552  000D73  FF                 	db	255
   553  000D74  FB                 	db	251
   554  000D75  FD                 	db	253
   555  000D76  FB                 	db	251
   556  000D77  F7                 	db	247
   557  000D78  FB                 	db	251
   558                           
   559                           	psect	idataBANK2
   560  0011E4                     __pidataBANK2:
   561                           	opt stack 0
   562                           
   563                           ;initializer for main@F7642
   564  0011E4  57                 	db	87
   565  0011E5  68                 	db	104
   566  0011E6  65                 	db	101
   567  0011E7  6E                 	db	110
   568  0011E8  20                 	db	32
   569  0011E9  61                 	db	97
   570  0011EA  20                 	db	32
   571  0011EB  62                 	db	98
   572  0011EC  75                 	db	117
   573  0011ED  74                 	db	116
   574  0011EE  74                 	db	116
   575  0011EF  6F                 	db	111
   576  0011F0  6E                 	db	110
   577  0011F1  20                 	db	32
   578  0011F2  69                 	db	105
   579  0011F3  73                 	db	115
   580  0011F4  20                 	db	32
   581  0011F5  70                 	db	112
   582  0011F6  72                 	db	114
   583  0011F7  65                 	db	101
   584  0011F8  73                 	db	115
   585  0011F9  73                 	db	115
   586  0011FA  65                 	db	101
   587  0011FB  64                 	db	100
   588  0011FC  20                 	db	32
   589  0011FD  66                 	db	102
   590  0011FE  6F                 	db	111
   591  0011FF  72                 	db	114
   592  001200  20                 	db	32
   593  001201  61                 	db	97
   594  001202  20                 	db	32
   595  001203  6C                 	db	108
   596  001204  6F                 	db	111
   597  001205  6E                 	db	110
   598  001206  67                 	db	103
   599  001207  20                 	db	32
   600  001208  74                 	db	116
   601  001209  69                 	db	105
   602  00120A  6D                 	db	109
   603  00120B  65                 	db	101
   604  00120C  2C                 	db	44
   605  00120D  20                 	db	32
   606  00120E  61                 	db	97
   607  00120F  20                 	db	32
   608  001210  73                 	db	115
   609  001211  65                 	db	101
   610  001212  6E                 	db	110
   611  001213  74                 	db	116
   612  001214  65                 	db	101
   613  001215  6E                 	db	110
   614  001216  63                 	db	99
   615  001217  65                 	db	101
   616  001218  20                 	db	32
   617  001219  69                 	db	105
   618  00121A  73                 	db	115
   619  00121B  20                 	db	32
   620  00121C  6D                 	db	109
   621  00121D  65                 	db	101
   622  00121E  6D                 	db	109
   623  00121F  6F                 	db	111
   624  001220  72                 	db	114
   625  001221  69                 	db	105
   626  001222  7A                 	db	122
   627  001223  65                 	db	101
   628  001224  64                 	db	100
   629  001225  2E                 	db	46
   630  001226  00                 	db	0
   631                           
   632                           ;initializer for main@F7636
   633  001227  54                 	db	84
   634  001228  68                 	db	104
   635  001229  69                 	db	105
   636  00122A  73                 	db	115
   637  00122B  20                 	db	32
   638  00122C  69                 	db	105
   639  00122D  73                 	db	115
   640  00122E  20                 	db	32
   641  00122F  61                 	db	97
   642  001230  6E                 	db	110
   643  001231  20                 	db	32
   644  001232  4C                 	db	76
   645  001233  45                 	db	69
   646  001234  44                 	db	68
   647  001235  20                 	db	32
   648  001236  62                 	db	98
   649  001237  75                 	db	117
   650  001238  6C                 	db	108
   651  001239  6C                 	db	108
   652  00123A  65                 	db	101
   653  00123B  74                 	db	116
   654  00123C  69                 	db	105
   655  00123D  6E                 	db	110
   656  00123E  20                 	db	32
   657  00123F  62                 	db	98
   658  001240  6F                 	db	111
   659  001241  61                 	db	97
   660  001242  72                 	db	114
   661  001243  64                 	db	100
   662  001244  2E                 	db	46
   663  001245  00                 	db	0
   664                           
   665                           ;initializer for main@F7638
   666  001246  34                 	db	52
   667  001247  20                 	db	32
   668  001248  73                 	db	115
   669  001249  65                 	db	101
   670  00124A  6E                 	db	110
   671  00124B  74                 	db	116
   672  00124C  65                 	db	101
   673  00124D  6E                 	db	110
   674  00124E  63                 	db	99
   675  00124F  65                 	db	101
   676  001250  73                 	db	115
   677  001251  20                 	db	32
   678  001252  63                 	db	99
   679  001253  61                 	db	97
   680  001254  6E                 	db	110
   681  001255  20                 	db	32
   682  001256  62                 	db	98
   683  001257  65                 	db	101
   684  001258  20                 	db	32
   685  001259  6D                 	db	109
   686  00125A  65                 	db	101
   687  00125B  6D                 	db	109
   688  00125C  6F                 	db	111
   689  00125D  72                 	db	114
   690  00125E  69                 	db	105
   691  00125F  7A                 	db	122
   692  001260  65                 	db	101
   693  001261  64                 	db	100
   694  001262  2E                 	db	46
   695  001263  00                 	db	0
   696                           
   697                           	psect	idataBANK3
   698  0016CC                     __pidataBANK3:
   699                           	opt stack 0
   700                           
   701                           ;initializer for main@F7640
   702  0016CC  57                 	db	87
   703  0016CD  68                 	db	104
   704  0016CE  65                 	db	101
   705  0016CF  6E                 	db	110
   706  0016D0  20                 	db	32
   707  0016D1  61                 	db	97
   708  0016D2  20                 	db	32
   709  0016D3  62                 	db	98
   710  0016D4  75                 	db	117
   711  0016D5  74                 	db	116
   712  0016D6  74                 	db	116
   713  0016D7  6F                 	db	111
   714  0016D8  6E                 	db	110
   715  0016D9  20                 	db	32
   716  0016DA  69                 	db	105
   717  0016DB  73                 	db	115
   718  0016DC  20                 	db	32
   719  0016DD  70                 	db	112
   720  0016DE  72                 	db	114
   721  0016DF  65                 	db	101
   722  0016E0  73                 	db	115
   723  0016E1  73                 	db	115
   724  0016E2  65                 	db	101
   725  0016E3  64                 	db	100
   726  0016E4  2C                 	db	44
   727  0016E5  20                 	db	32
   728  0016E6  74                 	db	116
   729  0016E7  68                 	db	104
   730  0016E8  65                 	db	101
   731  0016E9  20                 	db	32
   732  0016EA  73                 	db	115
   733  0016EB  65                 	db	101
   734  0016EC  6E                 	db	110
   735  0016ED  74                 	db	116
   736  0016EE  65                 	db	101
   737  0016EF  6E                 	db	110
   738  0016F0  63                 	db	99
   739  0016F1  65                 	db	101
   740  0016F2  20                 	db	32
   741  0016F3  77                 	db	119
   742  0016F4  68                 	db	104
   743  0016F5  69                 	db	105
   744  0016F6  63                 	db	99
   745  0016F7  68                 	db	104
   746  0016F8  20                 	db	32
   747  0016F9  6D                 	db	109
   748  0016FA  65                 	db	101
   749  0016FB  6D                 	db	109
   750  0016FC  6F                 	db	111
   751  0016FD  72                 	db	114
   752  0016FE  69                 	db	105
   753  0016FF  7A                 	db	122
   754  001700  65                 	db	101
   755  001701  64                 	db	100
   756  001702  20                 	db	32
   757  001703  62                 	db	98
   758  001704  79                 	db	121
   759  001705  20                 	db	32
   760  001706  74                 	db	116
   761  001707  68                 	db	104
   762  001708  65                 	db	101
   763  001709  20                 	db	32
   764  00170A  62                 	db	98
   765  00170B  75                 	db	117
   766  00170C  74                 	db	116
   767  00170D  74                 	db	116
   768  00170E  6F                 	db	111
   769  00170F  6E                 	db	110
   770  001710  20                 	db	32
   771  001711  69                 	db	105
   772  001712  73                 	db	115
   773  001713  20                 	db	32
   774  001714  73                 	db	115
   775  001715  68                 	db	104
   776  001716  6F                 	db	111
   777  001717  77                 	db	119
   778  001718  6E                 	db	110
   779  001719  2E                 	db	46
   780  00171A  00                 	db	0
   781  0000                     _ANSELA	set	3896
   782  0000                     _ANSELB	set	3897
   783  0000                     _ANSELC	set	3898
   784  0000                     _BAUDCON1bits	set	4024
   785  0000                     _INTCON2bits	set	4081
   786  0000                     _INTCONbits	set	4082
   787  0000                     _IPR1bits	set	3999
   788  0000                     _IPR2bits	set	4002
   789  0000                     _LATA	set	3977
   790  0000                     _LATBbits	set	3978
   791  0000                     _LATCbits	set	3979
   792  0000                     _OSCCON2bits	set	4050
   793  0000                     _OSCCONbits	set	4051
   794  0000                     _OSCTUNEbits	set	3995
   795  0000                     _PIE1bits	set	3997
   796  0000                     _PIE2bits	set	4000
   797  0000                     _PIR1bits	set	3998
   798  0000                     _PIR2bits	set	4001
   799  0000                     _PORTCbits	set	3970
   800  0000                     _RCREG1	set	4014
   801  0000                     _RCSTA1bits	set	4011
   802  0000                     _SPBRG1	set	4015
   803  0000                     _T0CONbits	set	4053
   804  0000                     _T1CONbits	set	4045
   805  0000                     _T3CONbits	set	4017
   806  0000                     _TRISA	set	3986
   807  0000                     _TRISB	set	3987
   808  0000                     _TRISC	set	3988
   809  0000                     _TXREG1	set	4013
   810  0000                     _TXSTA1bits	set	4012
   811  0000                     _RC1IF	set	31989
   812  0000                     _TX1IE	set	31980
   813  0000                     _TX1IF	set	31988
   814                           
   815                           ; #config settings
   816  0000                     
   817                           	psect	cinit
   818  000FF2                     __pcinit:
   819                           	opt stack 0
   820  000FF2                     start_initialization:
   821                           	opt stack 0
   822  000FF2                     __initialization:
   823                           	opt stack 0
   824                           
   825                           ; Clear objects allocated to BIGRAM (1020 bytes)
   826  000FF2  EE04  F0FF         	lfsr	0,__pbssBIGRAM
   827  000FF6  EE13 F0FC          	lfsr	1,1020
   828  000FFA                     clear_0:
   829  000FFA  6AEE               	clrf	postinc0,c
   830  000FFC  50E5               	movf	postdec1,w,c
   831  000FFE  50E1               	movf	fsr1l,w,c
   832  001000  E1FC               	bnz	clear_0
   833  001002  50E2               	movf	fsr1h,w,c
   834  001004  E1FA               	bnz	clear_0
   835                           
   836                           ; Clear objects allocated to BANK4 (255 bytes)
   837  001006  EE04  F000         	lfsr	0,__pbssBANK4
   838  00100A  EE10 F0FF          	lfsr	1,255
   839  00100E                     clear_1:
   840  00100E  6AEE               	clrf	postinc0,c
   841  001010  50E5               	movf	postdec1,w,c
   842  001012  50E1               	movf	fsr1l,w,c
   843  001014  E1FC               	bnz	clear_1
   844  001016  50E2               	movf	fsr1h,w,c
   845  001018  E1FA               	bnz	clear_1
   846                           
   847                           ; Clear objects allocated to BANK1 (1 bytes)
   848  00101A  0101               	movlb	1
   849  00101C  6BFF               	clrf	__pbssBANK1& (0+255),b
   850                           
   851                           ; Clear objects allocated to COMRAM (18 bytes)
   852  00101E  EE00  F022         	lfsr	0,__pbssCOMRAM
   853  001022  0E12               	movlw	18
   854  001024                     clear_2:
   855  001024  6AEE               	clrf	postinc0,c
   856  001026  06E8               	decf	wreg,f,c
   857  001028  E1FD               	bnz	clear_2
   858                           
   859                           ; Initialize objects allocated to BIGRAM (475 bytes)
   860                           ; load TBLPTR registers with __pidataBIGRAM
   861  00102A  0E9E               	movlw	low __pidataBIGRAM
   862  00102C  6EF6               	movwf	tblptrl,c
   863  00102E  0E0B               	movlw	high __pidataBIGRAM
   864  001030  6EF7               	movwf	tblptrh,c
   865  001032  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
   866  001034  6EF8               	movwf	tblptru,c
   867  001036  EE08  F0FB         	lfsr	0,__pdataBIGRAM
   868  00103A  EE11 F0DB          	lfsr	1,475
   869  00103E                     copy_data0:
   870  00103E  0009               	tblrd		*+
   871  001040  CFF5 FFEE          	movff	tablat,postinc0
   872  001044  50E5               	movf	postdec1,w,c
   873  001046  50E1               	movf	fsr1l,w,c
   874  001048  E1FA               	bnz	copy_data0
   875  00104A  50E2               	movf	fsr1h,w,c
   876  00104C  E1F8               	bnz	copy_data0
   877                           
   878                           ; Initialize objects allocated to BANK3 (79 bytes)
   879                           ; load TBLPTR registers with __pidataBANK3
   880  00104E  0ECC               	movlw	low __pidataBANK3
   881  001050  6EF6               	movwf	tblptrl,c
   882  001052  0E16               	movlw	high __pidataBANK3
   883  001054  6EF7               	movwf	tblptrh,c
   884  001056  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   885  001058  6EF8               	movwf	tblptru,c
   886  00105A  EE03  F000         	lfsr	0,__pdataBANK3
   887  00105E  EE10 F04F          	lfsr	1,79
   888  001062                     copy_data1:
   889  001062  0009               	tblrd		*+
   890  001064  CFF5 FFEE          	movff	tablat,postinc0
   891  001068  50E5               	movf	postdec1,w,c
   892  00106A  50E1               	movf	fsr1l,w,c
   893  00106C  E1FA               	bnz	copy_data1
   894                           
   895                           ; Initialize objects allocated to BANK2 (128 bytes)
   896                           ; load TBLPTR registers with __pidataBANK2
   897  00106E  0EE4               	movlw	low __pidataBANK2
   898  001070  6EF6               	movwf	tblptrl,c
   899  001072  0E11               	movlw	high __pidataBANK2
   900  001074  6EF7               	movwf	tblptrh,c
   901  001076  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   902  001078  6EF8               	movwf	tblptru,c
   903  00107A  EE02  F000         	lfsr	0,__pdataBANK2
   904  00107E  EE10 F080          	lfsr	1,128
   905  001082                     copy_data2:
   906  001082  0009               	tblrd		*+
   907  001084  CFF5 FFEE          	movff	tablat,postinc0
   908  001088  50E5               	movf	postdec1,w,c
   909  00108A  50E1               	movf	fsr1l,w,c
   910  00108C  E1FA               	bnz	copy_data2
   911                           
   912                           ; Initialize objects allocated to COMRAM (14 bytes)
   913                           ; load TBLPTR registers with __pidataCOMRAM
   914  00108E  0EBE               	movlw	low __pidataCOMRAM
   915  001090  6EF6               	movwf	tblptrl,c
   916  001092  0E18               	movlw	high __pidataCOMRAM
   917  001094  6EF7               	movwf	tblptrh,c
   918  001096  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   919  001098  6EF8               	movwf	tblptru,c
   920  00109A  EE00  F034         	lfsr	0,__pdataCOMRAM
   921  00109E  EE10 F00E          	lfsr	1,14
   922  0010A2                     copy_data3:
   923  0010A2  0009               	tblrd		*+
   924  0010A4  CFF5 FFEE          	movff	tablat,postinc0
   925  0010A8  50E5               	movf	postdec1,w,c
   926  0010AA  50E1               	movf	fsr1l,w,c
   927  0010AC  E1FA               	bnz	copy_data3
   928  0010AE                     end_of_initialization:
   929                           	opt stack 0
   930  0010AE                     __end_of__initialization:
   931                           	opt stack 0
   932  0010AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   933  0010B0  6EF8               	movwf	tblptru,c
   934  0010B2  0100               	movlb	0
   935  0010B4  EF5B  F000         	goto	_main	;jump to C main() function
   936                           tblptru	equ	0xFF8
   937                           tblptrh	equ	0xFF7
   938                           tblptrl	equ	0xFF6
   939                           tablat	equ	0xFF5
   940                           postinc0	equ	0xFEE
   941                           wreg	equ	0xFE8
   942                           postdec1	equ	0xFE5
   943                           fsr1h	equ	0xFE2
   944                           fsr1l	equ	0xFE1
   945                           
   946                           	psect	bssCOMRAM
   947  000022                     __pbssCOMRAM:
   948                           	opt stack 0
   949  000022                     _cnt_sw:
   950                           	opt stack 0
   951  000022                     	ds	4
   952  000026                     _print_char:
   953                           	opt stack 0
   954  000026                     	ds	2
   955  000028                     _scroll_pointer:
   956                           	opt stack 0
   957  000028                     	ds	2
   958  00002A                     _cnt_t1:
   959                           	opt stack 0
   960  00002A                     	ds	1
   961  00002B                     _dinamic:
   962                           	opt stack 0
   963  00002B                     	ds	1
   964  00002C                     _printON:
   965                           	opt stack 0
   966  00002C                     	ds	1
   967  00002D                     _scrollON:
   968                           	opt stack 0
   969  00002D                     	ds	1
   970  00002E                     _scroll_char_pointer:
   971                           	opt stack 0
   972  00002E                     	ds	1
   973  00002F                     _tx_buf:
   974                           	opt stack 0
   975  00002F                     	ds	5
   976                           tblptru	equ	0xFF8
   977                           tblptrh	equ	0xFF7
   978                           tblptrl	equ	0xFF6
   979                           tablat	equ	0xFF5
   980                           postinc0	equ	0xFEE
   981                           wreg	equ	0xFE8
   982                           postdec1	equ	0xFE5
   983                           fsr1h	equ	0xFE2
   984                           fsr1l	equ	0xFE1
   985                           
   986                           	psect	dataCOMRAM
   987  000034                     __pdataCOMRAM:
   988                           	opt stack 0
   989  000034                     main@F7644:
   990                           	opt stack 0
   991  000034                     	ds	13
   992  000041                     _return_reset:
   993                           	opt stack 0
   994  000041                     	ds	1
   995                           tblptru	equ	0xFF8
   996                           tblptrh	equ	0xFF7
   997                           tblptrl	equ	0xFF6
   998                           tablat	equ	0xFF5
   999                           postinc0	equ	0xFEE
  1000                           wreg	equ	0xFE8
  1001                           postdec1	equ	0xFE5
  1002                           fsr1h	equ	0xFE2
  1003                           fsr1l	equ	0xFE1
  1004                           
  1005                           	psect	bssBANK1
  1006  0001FF                     __pbssBANK1:
  1007                           	opt stack 0
  1008  0001FF                     _long_hold_flag:
  1009                           	opt stack 0
  1010  0001FF                     	ds	1
  1011                           tblptru	equ	0xFF8
  1012                           tblptrh	equ	0xFF7
  1013                           tblptrl	equ	0xFF6
  1014                           tablat	equ	0xFF5
  1015                           postinc0	equ	0xFEE
  1016                           wreg	equ	0xFE8
  1017                           postdec1	equ	0xFE5
  1018                           fsr1h	equ	0xFE2
  1019                           fsr1l	equ	0xFE1
  1020                           
  1021                           	psect	dataBANK2
  1022  000200                     __pdataBANK2:
  1023                           	opt stack 0
  1024  000200                     main@F7642:
  1025                           	opt stack 0
  1026  000200                     	ds	67
  1027  000243                     main@F7636:
  1028                           	opt stack 0
  1029  000243                     	ds	31
  1030  000262                     main@F7638:
  1031                           	opt stack 0
  1032  000262                     	ds	30
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           postinc0	equ	0xFEE
  1038                           wreg	equ	0xFE8
  1039                           postdec1	equ	0xFE5
  1040                           fsr1h	equ	0xFE2
  1041                           fsr1l	equ	0xFE1
  1042                           
  1043                           	psect	dataBANK3
  1044  000300                     __pdataBANK3:
  1045                           	opt stack 0
  1046  000300                     main@F7640:
  1047                           	opt stack 0
  1048  000300                     	ds	79
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           postinc0	equ	0xFEE
  1054                           wreg	equ	0xFE8
  1055                           postdec1	equ	0xFE5
  1056                           fsr1h	equ	0xFE2
  1057                           fsr1l	equ	0xFE1
  1058                           
  1059                           	psect	bssBANK4
  1060  000400                     __pbssBANK4:
  1061                           	opt stack 0
  1062  000400                     _scroll_char:
  1063                           	opt stack 0
  1064  000400                     	ds	255
  1065                           tblptru	equ	0xFF8
  1066                           tblptrh	equ	0xFF7
  1067                           tblptrl	equ	0xFF6
  1068                           tablat	equ	0xFF5
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           postdec1	equ	0xFE5
  1072                           fsr1h	equ	0xFE2
  1073                           fsr1l	equ	0xFE1
  1074                           
  1075                           	psect	bssBIGRAM
  1076  0004FF                     __pbssBIGRAM:
  1077                           	opt stack 0
  1078  0004FF                     _memory_char:
  1079                           	opt stack 0
  1080  0004FF                     	ds	1020
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           postinc0	equ	0xFEE
  1086                           wreg	equ	0xFE8
  1087                           postdec1	equ	0xFE5
  1088                           fsr1h	equ	0xFE2
  1089                           fsr1l	equ	0xFE1
  1090                           
  1091                           	psect	dataBIGRAM
  1092  0008FB                     __pdataBIGRAM:
  1093                           	opt stack 0
  1094  0008FB                     _pattern:
  1095                           	opt stack 0
  1096  0008FB                     	ds	475
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           postinc0	equ	0xFEE
  1102                           wreg	equ	0xFE8
  1103                           postdec1	equ	0xFE5
  1104                           fsr1h	equ	0xFE2
  1105                           fsr1l	equ	0xFE1
  1106                           
  1107                           	psect	cstackBANK2
  1108  000280                     __pcstackBANK2:
  1109                           	opt stack 0
  1110  000280                     main@preset_eep_char_3:
  1111                           	opt stack 0
  1112                           
  1113                           ; 67 bytes @ 0x0
  1114  000280                     	ds	67
  1115  0002C3                     main@preset_eep_char_0:
  1116                           	opt stack 0
  1117                           
  1118                           ; 31 bytes @ 0x43
  1119  0002C3                     	ds	31
  1120  0002E2                     main@preset_eep_char_1:
  1121                           	opt stack 0
  1122                           
  1123                           ; 30 bytes @ 0x62
  1124  0002E2                     	ds	30
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec1	equ	0xFE5
  1132                           fsr1h	equ	0xFE2
  1133                           fsr1l	equ	0xFE1
  1134                           
  1135                           	psect	cstackBANK1
  1136  000100                     __pcstackBANK1:
  1137                           	opt stack 0
  1138  000100                     main@buf:
  1139                           	opt stack 0
  1140                           
  1141                           ; 255 bytes @ 0x0
  1142  000100                     	ds	255
  1143                           tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           tblptrl	equ	0xFF6
  1146                           tablat	equ	0xFF5
  1147                           postinc0	equ	0xFEE
  1148                           wreg	equ	0xFE8
  1149                           postdec1	equ	0xFE5
  1150                           fsr1h	equ	0xFE2
  1151                           fsr1l	equ	0xFE1
  1152                           
  1153                           	psect	cstackBANK0
  1154  000060                     __pcstackBANK0:
  1155                           	opt stack 0
  1156  000060                     ?___lwdiv:
  1157                           	opt stack 0
  1158  000060                     ?___lwmod:
  1159                           	opt stack 0
  1160  000060                     encode@asciicode:
  1161                           	opt stack 0
  1162  000060                     matrix_column@column:
  1163                           	opt stack 0
  1164  000060                     sw@i:
  1165                           	opt stack 0
  1166  000060                     ringbuf_init@rb:
  1167                           	opt stack 0
  1168  000060                     ___lwdiv@dividend:
  1169                           	opt stack 0
  1170  000060                     ___lwmod@dividend:
  1171                           	opt stack 0
  1172                           
  1173                           ; 2 bytes @ 0x0
  1174  000060                     	ds	2
  1175  000062                     ringbuf_init@internal_buf:
  1176                           	opt stack 0
  1177  000062                     ___lwdiv@divisor:
  1178                           	opt stack 0
  1179  000062                     ___lwmod@divisor:
  1180                           	opt stack 0
  1181                           
  1182                           ; 2 bytes @ 0x2
  1183  000062                     	ds	2
  1184  000064                     ringbuf_init@bufsize:
  1185                           	opt stack 0
  1186  000064                     ___lwdiv@counter:
  1187                           	opt stack 0
  1188  000064                     ___lwmod@counter:
  1189                           	opt stack 0
  1190                           
  1191                           ; 1 bytes @ 0x4
  1192  000064                     	ds	1
  1193  000065                     ___lwdiv@quotient:
  1194                           	opt stack 0
  1195                           
  1196                           ; 2 bytes @ 0x5
  1197  000065                     	ds	2
  1198  000067                     display_matrix@data:
  1199                           	opt stack 0
  1200                           
  1201                           ; 1 bytes @ 0x7
  1202  000067                     	ds	1
  1203  000068                     display_matrix@column:
  1204                           	opt stack 0
  1205                           
  1206                           ; 1 bytes @ 0x8
  1207  000068                     	ds	1
  1208  000069                     ??_display_scroll:
  1209  000069                     ??_display_print:
  1210                           
  1211                           ; 0 bytes @ 0x9
  1212  000069                     	ds	1
  1213  00006A                     display_print@column:
  1214                           	opt stack 0
  1215                           
  1216                           ; 1 bytes @ 0xA
  1217  00006A                     	ds	1
  1218  00006B                     print@value:
  1219                           	opt stack 0
  1220                           
  1221                           ; 1 bytes @ 0xB
  1222  00006B                     	ds	5
  1223  000070                     display_scroll@column:
  1224                           	opt stack 0
  1225                           
  1226                           ; 1 bytes @ 0x10
  1227  000070                     	ds	1
  1228  000071                     scroll@value:
  1229                           	opt stack 0
  1230                           
  1231                           ; 1 bytes @ 0x11
  1232  000071                     	ds	1
  1233  000072                     ??_main:
  1234                           
  1235                           ; 0 bytes @ 0x12
  1236  000072                     	ds	2
  1237  000074                     main@preset_eep_char_2:
  1238                           	opt stack 0
  1239                           
  1240                           ; 79 bytes @ 0x14
  1241  000074                     	ds	79
  1242  0000C3                     main@preset_char:
  1243                           	opt stack 0
  1244                           
  1245                           ; 13 bytes @ 0x63
  1246  0000C3                     	ds	13
  1247  0000D0                     main@sw_flag:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x70
  1251  0000D0                     	ds	2
  1252  0000D2                     main@j:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x72
  1256  0000D2                     	ds	1
  1257  0000D3                     main@i:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x73
  1261  0000D3                     	ds	1
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           postinc0	equ	0xFEE
  1267                           wreg	equ	0xFE8
  1268                           postdec1	equ	0xFE5
  1269                           fsr1h	equ	0xFE2
  1270                           fsr1l	equ	0xFE1
  1271                           
  1272                           	psect	cstackCOMRAM
  1273  000001                     __pcstackCOMRAM:
  1274                           	opt stack 0
  1275  000001                     ?i2___lwdiv:
  1276                           	opt stack 0
  1277  000001                     ?i2___lwmod:
  1278                           	opt stack 0
  1279  000001                     i2encode@asciicode:
  1280                           	opt stack 0
  1281  000001                     i2matrix_column@column:
  1282                           	opt stack 0
  1283  000001                     i2sw@i:
  1284                           	opt stack 0
  1285  000001                     ringbuf_put@rb:
  1286                           	opt stack 0
  1287  000001                     ringbuf_pop@rb:
  1288                           	opt stack 0
  1289  000001                     ringbuf_num@rb:
  1290                           	opt stack 0
  1291  000001                     i2___lwdiv@dividend:
  1292                           	opt stack 0
  1293  000001                     i2___lwmod@dividend:
  1294                           	opt stack 0
  1295                           
  1296                           ; 2 bytes @ 0x0
  1297  000001                     	ds	1
  1298  000002                     ??_intrrupt_TMR3IF:
  1299                           
  1300                           ; 0 bytes @ 0x1
  1301  000002                     	ds	1
  1302  000003                     ??_ringbuf_num:
  1303  000003                     ??_ringbuf_pop:
  1304  000003                     ringbuf_put@asciicode:
  1305                           	opt stack 0
  1306  000003                     i2___lwdiv@divisor:
  1307                           	opt stack 0
  1308  000003                     i2___lwmod@divisor:
  1309                           	opt stack 0
  1310                           
  1311                           ; 2 bytes @ 0x2
  1312  000003                     	ds	1
  1313  000004                     ??_ringbuf_put:
  1314  000004                     intrrupt_TMR3IF@i:
  1315                           	opt stack 0
  1316                           
  1317                           ; 1 bytes @ 0x3
  1318  000004                     	ds	1
  1319  000005                     i2___lwmod@counter:
  1320                           	opt stack 0
  1321  000005                     i2___lwdiv@quotient:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x4
  1325  000005                     	ds	1
  1326  000006                     ringbuf_pop@ret:
  1327                           	opt stack 0
  1328                           
  1329                           ; 1 bytes @ 0x5
  1330  000006                     	ds	1
  1331  000007                     tx_send@asciicode:
  1332                           	opt stack 0
  1333  000007                     i2___lwdiv@counter:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x6
  1337  000007                     	ds	1
  1338  000008                     i2display_matrix@data:
  1339                           	opt stack 0
  1340                           
  1341                           ; 1 bytes @ 0x7
  1342  000008                     	ds	1
  1343  000009                     i2display_matrix@column:
  1344                           	opt stack 0
  1345                           
  1346                           ; 1 bytes @ 0x8
  1347  000009                     	ds	1
  1348  00000A                     ??i2_display_scroll:
  1349  00000A                     ??i2_display_print:
  1350                           
  1351                           ; 0 bytes @ 0x9
  1352  00000A                     	ds	1
  1353  00000B                     i2display_print@column:
  1354                           	opt stack 0
  1355                           
  1356                           ; 1 bytes @ 0xA
  1357  00000B                     	ds	6
  1358  000011                     i2display_scroll@column:
  1359                           	opt stack 0
  1360                           
  1361                           ; 1 bytes @ 0x10
  1362  000011                     	ds	1
  1363  000012                     i2scroll@value:
  1364                           	opt stack 0
  1365                           
  1366                           ; 1 bytes @ 0x11
  1367  000012                     	ds	1
  1368  000013                     intrrupt_RCIF@ascii:
  1369                           	opt stack 0
  1370                           
  1371                           ; 1 bytes @ 0x12
  1372  000013                     	ds	1
  1373  000014                     ??_isr:
  1374                           
  1375                           ; 0 bytes @ 0x13
  1376  000014                     	ds	14
  1377                           tblptru	equ	0xFF8
  1378                           tblptrh	equ	0xFF7
  1379                           tblptrl	equ	0xFF6
  1380                           tablat	equ	0xFF5
  1381                           postinc0	equ	0xFEE
  1382                           wreg	equ	0xFE8
  1383                           postdec1	equ	0xFE5
  1384                           fsr1h	equ	0xFE2
  1385                           fsr1l	equ	0xFE1
  1386                           
  1387 ;;
  1388 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1389 ;;
  1390 ;; *************** function _main *****************
  1391 ;; Defined at:
  1392 ;;		line 1127 in file "main.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  sw_flag         2  112[BANK0 ] unsigned int 
  1397 ;;  buf           255    0[BANK1 ] unsigned char [255]
  1398 ;;  preset_eep_c   79   20[BANK0 ] unsigned char [79]
  1399 ;;  preset_eep_c   67    0[BANK2 ] unsigned char [67]
  1400 ;;  preset_eep_c   31   67[BANK2 ] unsigned char [31]
  1401 ;;  preset_eep_c   30   98[BANK2 ] unsigned char [30]
  1402 ;;  preset_char    13   99[BANK0 ] unsigned char [13]
  1403 ;;  i               1  115[BANK0 ] unsigned char 
  1404 ;;  j               1  114[BANK0 ] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  2  270[COMRAM] int 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Locals:         0      96     255     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Totals:         0      98     255     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;Total ram usage:      481 bytes
  1419 ;; Hardware stack levels required when called:   10
  1420 ;; This function calls:
  1421 ;;		_print
  1422 ;;		_ringbuf_init
  1423 ;;		_scroll
  1424 ;;		_sw
  1425 ;; This function is called by:
  1426 ;;		Startup code after reset
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text0
  1431  0000B6                     __ptext0:
  1432                           	opt stack 0
  1433  0000B6                     _main:
  1434                           	opt stack 21
  1435                           
  1436                           ;main.c: 1129: ANSELA = 0x00;
  1437                           
  1438                           ;incstack = 0
  1439  0000B6  0E00               	movlw	0
  1440  0000B8  010F               	movlb	15	; () banked
  1441  0000BA  6F38               	movwf	56,b	;volatile
  1442                           
  1443                           ;main.c: 1130: ANSELB = 0x00;
  1444  0000BC  0E00               	movlw	0
  1445  0000BE  010F               	movlb	15	; () banked
  1446  0000C0  6F39               	movwf	57,b	;volatile
  1447                           
  1448                           ;main.c: 1131: ANSELC = 0x00;
  1449  0000C2  0E00               	movlw	0
  1450  0000C4  010F               	movlb	15	; () banked
  1451  0000C6  6F3A               	movwf	58,b	;volatile
  1452                           
  1453                           ;main.c: 1132: TRISA = 0x00;
  1454  0000C8  0E00               	movlw	0
  1455  0000CA  6E92               	movwf	3986,c	;volatile
  1456                           
  1457                           ;main.c: 1133: TRISB = 0x00;
  1458  0000CC  0E00               	movlw	0
  1459  0000CE  6E93               	movwf	3987,c	;volatile
  1460                           
  1461                           ;main.c: 1134: TRISC = 0xBC;
  1462  0000D0  0EBC               	movlw	188
  1463  0000D2  6E94               	movwf	3988,c	;volatile
  1464                           
  1465                           ;main.c: 1136: OSCCONbits.IRCF = 6;
  1466  0000D4  50D3               	movf	4051,w,c	;volatile
  1467  0000D6  0B8F               	andlw	-113
  1468  0000D8  0960               	iorlw	96
  1469  0000DA  6ED3               	movwf	4051,c	;volatile
  1470                           
  1471                           ; BSR set to: 15
  1472                           ;main.c: 1137: OSCCON2bits.PLLRDY = 1;
  1473  0000DC  8ED2               	bsf	4050,7,c	;volatile
  1474                           
  1475                           ; BSR set to: 15
  1476                           ;main.c: 1138: OSCTUNEbits.PLLEN = 1;
  1477  0000DE  8C9B               	bsf	3995,6,c	;volatile
  1478                           
  1479                           ; BSR set to: 15
  1480                           ;main.c: 1140: T0CONbits.TMR0ON = 1;
  1481  0000E0  8ED5               	bsf	4053,7,c	;volatile
  1482                           
  1483                           ; BSR set to: 15
  1484                           ;main.c: 1141: T0CONbits.T08BIT = 1;
  1485  0000E2  8CD5               	bsf	4053,6,c	;volatile
  1486                           
  1487                           ; BSR set to: 15
  1488                           ;main.c: 1142: T0CONbits.T0CS = 0;
  1489  0000E4  9AD5               	bcf	4053,5,c	;volatile
  1490                           
  1491                           ; BSR set to: 15
  1492                           ;main.c: 1143: T0CONbits.PSA = 0;
  1493  0000E6  96D5               	bcf	4053,3,c	;volatile
  1494                           
  1495                           ;main.c: 1144: T0CONbits.T0PS = 2;
  1496  0000E8  50D5               	movf	4053,w,c	;volatile
  1497  0000EA  0BF8               	andlw	-8
  1498  0000EC  0902               	iorlw	2
  1499  0000EE  6ED5               	movwf	4053,c	;volatile
  1500                           
  1501                           ; BSR set to: 15
  1502                           ;main.c: 1145: INTCONbits.T0IE = 1;
  1503  0000F0  8AF2               	bsf	intcon,5,c	;volatile
  1504                           
  1505                           ; BSR set to: 15
  1506                           ;main.c: 1146: INTCON2bits.TMR0IP = 0;
  1507  0000F2  94F1               	bcf	intcon2,2,c	;volatile
  1508                           
  1509                           ;main.c: 1148: T1CONbits.TMR1CS = 0;
  1510  0000F4  0E3F               	movlw	-193
  1511  0000F6  16CD               	andwf	4045,f,c	;volatile
  1512                           
  1513                           ;main.c: 1149: T1CONbits.T1CKPS = 0;
  1514  0000F8  0ECF               	movlw	-49
  1515  0000FA  16CD               	andwf	4045,f,c	;volatile
  1516                           
  1517                           ; BSR set to: 15
  1518                           ;main.c: 1150: T1CONbits.T1RD16 = 1;
  1519  0000FC  82CD               	bsf	4045,1,c	;volatile
  1520                           
  1521                           ; BSR set to: 15
  1522                           ;main.c: 1151: T1CONbits.TMR1ON = 1;
  1523  0000FE  80CD               	bsf	4045,0,c	;volatile
  1524                           
  1525                           ; BSR set to: 15
  1526                           ;main.c: 1152: IPR1bits.TMR1IP = 0;
  1527  000100  909F               	bcf	3999,0,c	;volatile
  1528                           
  1529                           ; BSR set to: 15
  1530                           ;main.c: 1153: PIE1bits.TMR1IE = 1;
  1531  000102  809D               	bsf	3997,0,c	;volatile
  1532                           
  1533                           ;main.c: 1155: T3CONbits.TMR3CS = 0;
  1534  000104  0E3F               	movlw	-193
  1535  000106  16B1               	andwf	4017,f,c	;volatile
  1536                           
  1537                           ;main.c: 1156: T3CONbits.T3CKPS = 0;
  1538  000108  0ECF               	movlw	-49
  1539  00010A  16B1               	andwf	4017,f,c	;volatile
  1540                           
  1541                           ; BSR set to: 15
  1542                           ;main.c: 1157: T3CONbits.T3RD16 = 1;
  1543  00010C  82B1               	bsf	4017,1,c	;volatile
  1544                           
  1545                           ; BSR set to: 15
  1546                           ;main.c: 1158: T3CONbits.TMR3ON = 1;
  1547  00010E  80B1               	bsf	4017,0,c	;volatile
  1548                           
  1549                           ; BSR set to: 15
  1550                           ;main.c: 1159: IPR2bits.TMR3IP = 0;
  1551  000110  92A2               	bcf	4002,1,c	;volatile
  1552                           
  1553                           ; BSR set to: 15
  1554                           ;main.c: 1160: PIE2bits.TMR3IE = 1;
  1555  000112  82A0               	bsf	4000,1,c	;volatile
  1556                           
  1557                           ; BSR set to: 15
  1558                           ;main.c: 1162: TXSTA1bits.TX9 = 0;
  1559  000114  9CAC               	bcf	4012,6,c	;volatile
  1560                           
  1561                           ; BSR set to: 15
  1562                           ;main.c: 1163: TXSTA1bits.TXEN = 1;
  1563  000116  8AAC               	bsf	4012,5,c	;volatile
  1564                           
  1565                           ; BSR set to: 15
  1566                           ;main.c: 1164: TXSTA1bits.SYNC = 0;
  1567  000118  98AC               	bcf	4012,4,c	;volatile
  1568                           
  1569                           ; BSR set to: 15
  1570                           ;main.c: 1165: TXSTA1bits.BRGH = 0;
  1571  00011A  94AC               	bcf	4012,2,c	;volatile
  1572                           
  1573                           ; BSR set to: 15
  1574                           ;main.c: 1166: RCSTA1bits.SPEN = 1;
  1575  00011C  8EAB               	bsf	4011,7,c	;volatile
  1576                           
  1577                           ; BSR set to: 15
  1578                           ;main.c: 1167: RCSTA1bits.RX9 = 0;
  1579  00011E  9CAB               	bcf	4011,6,c	;volatile
  1580                           
  1581                           ; BSR set to: 15
  1582                           ;main.c: 1168: RCSTA1bits.CREN = 1;
  1583  000120  88AB               	bsf	4011,4,c	;volatile
  1584                           
  1585                           ; BSR set to: 15
  1586                           ;main.c: 1169: BAUDCON1bits.BRG16 = 0;
  1587  000122  96B8               	bcf	4024,3,c	;volatile
  1588                           
  1589                           ;main.c: 1170: SPBRG1 = 51;
  1590  000124  0E33               	movlw	51
  1591  000126  6EAF               	movwf	4015,c	;volatile
  1592                           
  1593                           ; BSR set to: 15
  1594                           ;main.c: 1171: IPR1bits.RC1IP = 0;
  1595  000128  9A9F               	bcf	3999,5,c	;volatile
  1596                           
  1597                           ; BSR set to: 15
  1598                           ;main.c: 1172: PIE1bits.RC1IE = 1;
  1599  00012A  8A9D               	bsf	3997,5,c	;volatile
  1600                           
  1601                           ; BSR set to: 15
  1602                           ;main.c: 1174: INTCONbits.PEIE = 1;
  1603  00012C  8CF2               	bsf	intcon,6,c	;volatile
  1604                           
  1605                           ; BSR set to: 15
  1606                           ;main.c: 1175: INTCONbits.GIE = 0;
  1607  00012E  9EF2               	bcf	intcon,7,c	;volatile
  1608                           
  1609                           ; BSR set to: 15
  1610                           ;main.c: 1177: uint8_t buf[255];
  1611                           ;main.c: 1178: ringbuf_init(&tx_buf, buf, sizeof (buf));
  1612  000130  0E00               	movlw	high _tx_buf
  1613  000132  0100               	movlb	0	; () banked
  1614  000134  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1615  000136  0E2F               	movlw	low _tx_buf
  1616  000138  0100               	movlb	0	; () banked
  1617  00013A  6F60               	movwf	ringbuf_init@rb& (0+255),b
  1618  00013C  0101               	movlb	1	; () banked
  1619  00013E  0E01               	movlw	high main@buf
  1620  000140  0100               	movlb	0	; () banked
  1621  000142  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1622  000144  0101               	movlb	1	; () banked
  1623  000146  0E00               	movlw	low main@buf
  1624  000148  0100               	movlb	0	; () banked
  1625  00014A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  1626  00014C  0EFF               	movlw	255
  1627  00014E  0100               	movlb	0	; () banked
  1628  000150  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  1629  000152  ECBC  F00A         	call	_ringbuf_init	;wreg free
  1630                           
  1631                           ;main.c: 1180: uint8_t i;
  1632                           ;main.c: 1181: uint8_t j;
  1633                           ;main.c: 1182: uint8_t preset_eep_char_0[] = "This is an LED bulletin board.";
  1634  000156  EE22  F043         	lfsr	2,main@F7636
  1635  00015A  EE12  F0C3         	lfsr	1,main@preset_eep_char_0
  1636  00015E  0E1F               	movlw	31
  1637  000160                     u2911:
  1638  000160  CFDE FFE6          	movff	postinc2,postinc1
  1639  000164  2EE8               	decfsz	wreg,f,c
  1640  000166  D7FC               	goto	u2911
  1641                           
  1642                           ;main.c: 1183: uint8_t preset_eep_char_1[] = "4 sentences can be memorized.";
  1643  000168  EE22  F062         	lfsr	2,main@F7638
  1644  00016C  EE12  F0E2         	lfsr	1,main@preset_eep_char_1
  1645  000170  0E1E               	movlw	30
  1646  000172                     u2921:
  1647  000172  CFDE FFE6          	movff	postinc2,postinc1
  1648  000176  2EE8               	decfsz	wreg,f,c
  1649  000178  D7FC               	goto	u2921
  1650                           
  1651                           ;main.c: 1184: uint8_t preset_eep_char_2[] = "When a button is pressed, the sentence whi
      +                          ch memorized by the button is shown.";
  1652  00017A  EE23  F000         	lfsr	2,main@F7640
  1653  00017E  EE10  F074         	lfsr	1,main@preset_eep_char_2
  1654  000182  0E4F               	movlw	79
  1655  000184                     u2931:
  1656  000184  CFDE FFE6          	movff	postinc2,postinc1
  1657  000188  2EE8               	decfsz	wreg,f,c
  1658  00018A  D7FC               	goto	u2931
  1659                           
  1660                           ;main.c: 1185: uint8_t preset_eep_char_3[] = "When a button is pressed for a long time, 
      +                          a sentence is memorized.";
  1661  00018C  EE22  F000         	lfsr	2,main@F7642
  1662  000190  EE12  F080         	lfsr	1,main@preset_eep_char_3
  1663  000194  0E43               	movlw	67
  1664  000196                     u2941:
  1665  000196  CFDE FFE6          	movff	postinc2,postinc1
  1666  00019A  2EE8               	decfsz	wreg,f,c
  1667  00019C  D7FC               	goto	u2941
  1668                           
  1669                           ;main.c: 1186: uint8_t preset_char[] = "Hello World!";
  1670  00019E  EE20  F034         	lfsr	2,main@F7644
  1671  0001A2  EE10  F0C3         	lfsr	1,main@preset_char
  1672  0001A6  0E0D               	movlw	13
  1673  0001A8                     u2951:
  1674  0001A8  CFDE FFE6          	movff	postinc2,postinc1
  1675  0001AC  2EE8               	decfsz	wreg,f,c
  1676  0001AE  D7FC               	goto	u2951
  1677                           
  1678                           ;main.c: 1187: if (sw(0)) {
  1679  0001B0  0E00               	movlw	0
  1680  0001B2  ECE9  F00A         	call	_sw
  1681  0001B6  0900               	iorlw	0
  1682  0001B8  B4D8               	btfsc	status,2,c
  1683  0001BA  D050               	goto	l2687
  1684                           
  1685                           ;main.c: 1188: ;
  1686                           ;main.c: 1189: for (i = 0; preset_eep_char_0[i]; i++) ;
  1687  0001BC  0E00               	movlw	0
  1688  0001BE  0100               	movlb	0	; () banked
  1689  0001C0  6FD3               	movwf	main@i& (0+255),b
  1690  0001C2  D002               	goto	l2667
  1691  0001C4                     l2665:
  1692  0001C4  0100               	movlb	0	; () banked
  1693  0001C6  2BD3               	incf	main@i& (0+255),f,b
  1694  0001C8                     l2667:
  1695                           
  1696                           ; BSR set to: 0
  1697  0001C8  0100               	movlb	0	; () banked
  1698  0001CA  51D3               	movf	main@i& (0+255),w,b
  1699  0001CC  0D01               	mullw	1
  1700  0001CE  0102               	movlb	2	; () banked
  1701  0001D0  0EC3               	movlw	low main@preset_eep_char_0
  1702  0001D2  24F3               	addwf	prodl,w,c
  1703  0001D4  6ED9               	movwf	fsr2l,c
  1704  0001D6  0102               	movlb	2	; () banked
  1705  0001D8  0E02               	movlw	high main@preset_eep_char_0
  1706  0001DA  20F4               	addwfc	prodh,w,c
  1707  0001DC  6EDA               	movwf	fsr2h,c
  1708  0001DE  50DF               	movf	indf2,w,c
  1709  0001E0  A4D8               	btfss	status,2,c
  1710  0001E2  D7F0               	goto	l2665
  1711                           
  1712                           ; BSR set to: 2
  1713                           ;main.c: 1190: ;
  1714                           ;main.c: 1191: for (i = 0; preset_eep_char_1[i]; i++) ;
  1715                           
  1716                           ; BSR set to: 2
  1717  0001E4  0E00               	movlw	0
  1718  0001E6  0100               	movlb	0	; () banked
  1719  0001E8  6FD3               	movwf	main@i& (0+255),b
  1720  0001EA  D002               	goto	l2673
  1721  0001EC                     l2671:
  1722  0001EC  0100               	movlb	0	; () banked
  1723  0001EE  2BD3               	incf	main@i& (0+255),f,b
  1724  0001F0                     l2673:
  1725                           
  1726                           ; BSR set to: 0
  1727  0001F0  0100               	movlb	0	; () banked
  1728  0001F2  51D3               	movf	main@i& (0+255),w,b
  1729  0001F4  0D01               	mullw	1
  1730  0001F6  0102               	movlb	2	; () banked
  1731  0001F8  0EE2               	movlw	low main@preset_eep_char_1
  1732  0001FA  24F3               	addwf	prodl,w,c
  1733  0001FC  6ED9               	movwf	fsr2l,c
  1734  0001FE  0102               	movlb	2	; () banked
  1735  000200  0E02               	movlw	high main@preset_eep_char_1
  1736  000202  20F4               	addwfc	prodh,w,c
  1737  000204  6EDA               	movwf	fsr2h,c
  1738  000206  50DF               	movf	indf2,w,c
  1739  000208  A4D8               	btfss	status,2,c
  1740  00020A  D7F0               	goto	l2671
  1741                           
  1742                           ; BSR set to: 2
  1743                           ;main.c: 1192: ;
  1744                           ;main.c: 1193: for (i = 0; preset_eep_char_2[i]; i++) ;
  1745                           
  1746                           ; BSR set to: 2
  1747  00020C  0E00               	movlw	0
  1748  00020E  0100               	movlb	0	; () banked
  1749  000210  6FD3               	movwf	main@i& (0+255),b
  1750  000212  D002               	goto	l2679
  1751  000214                     l2677:
  1752                           
  1753                           ; BSR set to: 0
  1754  000214  0100               	movlb	0	; () banked
  1755  000216  2BD3               	incf	main@i& (0+255),f,b
  1756  000218                     l2679:
  1757                           
  1758                           ; BSR set to: 0
  1759  000218  0100               	movlb	0	; () banked
  1760  00021A  51D3               	movf	main@i& (0+255),w,b
  1761  00021C  0D01               	mullw	1
  1762  00021E  0100               	movlb	0	; () banked
  1763  000220  0E74               	movlw	low main@preset_eep_char_2
  1764  000222  24F3               	addwf	prodl,w,c
  1765  000224  6ED9               	movwf	fsr2l,c
  1766  000226  0100               	movlb	0	; () banked
  1767  000228  0E00               	movlw	high main@preset_eep_char_2
  1768  00022A  20F4               	addwfc	prodh,w,c
  1769  00022C  6EDA               	movwf	fsr2h,c
  1770  00022E  50DF               	movf	indf2,w,c
  1771  000230  A4D8               	btfss	status,2,c
  1772  000232  D7F0               	goto	l2677
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;main.c: 1194: ;
  1776                           ;main.c: 1195: for (i = 0; preset_eep_char_3[i]; i++) ;
  1777                           
  1778                           ; BSR set to: 0
  1779  000234  0E00               	movlw	0
  1780  000236  0100               	movlb	0	; () banked
  1781  000238  6FD3               	movwf	main@i& (0+255),b
  1782  00023A  D002               	goto	l2685
  1783  00023C                     l2683:
  1784  00023C  0100               	movlb	0	; () banked
  1785  00023E  2BD3               	incf	main@i& (0+255),f,b
  1786  000240                     l2685:
  1787                           
  1788                           ; BSR set to: 0
  1789  000240  0100               	movlb	0	; () banked
  1790  000242  51D3               	movf	main@i& (0+255),w,b
  1791  000244  0D01               	mullw	1
  1792  000246  0102               	movlb	2	; () banked
  1793  000248  0E80               	movlw	low main@preset_eep_char_3
  1794  00024A  24F3               	addwf	prodl,w,c
  1795  00024C  6ED9               	movwf	fsr2l,c
  1796  00024E  0102               	movlb	2	; () banked
  1797  000250  0E02               	movlw	high main@preset_eep_char_3
  1798  000252  20F4               	addwfc	prodh,w,c
  1799  000254  6EDA               	movwf	fsr2h,c
  1800  000256  50DF               	movf	indf2,w,c
  1801  000258  A4D8               	btfss	status,2,c
  1802  00025A  D7F0               	goto	l2683
  1803  00025C                     l2687:
  1804                           
  1805                           ;main.c: 1196: }
  1806                           ;main.c: 1197: for (i = 0; preset_char[i]; i++) {
  1807  00025C  0E00               	movlw	0
  1808  00025E  0100               	movlb	0	; () banked
  1809  000260  6FD3               	movwf	main@i& (0+255),b
  1810  000262  D01B               	goto	l2695
  1811  000264                     l2689:
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;main.c: 1198: scroll_char[i] = preset_char[i];
  1815  000264  0100               	movlb	0	; () banked
  1816  000266  51D3               	movf	main@i& (0+255),w,b
  1817  000268  0D01               	mullw	1
  1818  00026A  0100               	movlb	0	; () banked
  1819  00026C  0EC3               	movlw	low main@preset_char
  1820  00026E  24F3               	addwf	prodl,w,c
  1821  000270  6ED9               	movwf	fsr2l,c
  1822  000272  0100               	movlb	0	; () banked
  1823  000274  0E00               	movlw	high main@preset_char
  1824  000276  20F4               	addwfc	prodh,w,c
  1825  000278  6EDA               	movwf	fsr2h,c
  1826  00027A  0100               	movlb	0	; () banked
  1827  00027C  51D3               	movf	main@i& (0+255),w,b
  1828  00027E  0D01               	mullw	1
  1829  000280  0104               	movlb	4	; () banked
  1830  000282  0E00               	movlw	low _scroll_char
  1831  000284  24F3               	addwf	prodl,w,c
  1832  000286  6EE1               	movwf	fsr1l,c
  1833  000288  0104               	movlb	4	; () banked
  1834  00028A  0E04               	movlw	high _scroll_char
  1835  00028C  20F4               	addwfc	prodh,w,c
  1836  00028E  6EE2               	movwf	fsr1h,c
  1837  000290  CFDF FFE7          	movff	indf2,indf1
  1838                           
  1839                           ; BSR set to: 4
  1840                           ;main.c: 1199: scroll_char_pointer++;
  1841  000294  2A2E               	incf	_scroll_char_pointer,f,c
  1842                           
  1843                           ; BSR set to: 4
  1844  000296  0100               	movlb	0	; () banked
  1845  000298  2BD3               	incf	main@i& (0+255),f,b
  1846  00029A                     l2695:
  1847                           
  1848                           ; BSR set to: 0
  1849  00029A  0100               	movlb	0	; () banked
  1850  00029C  51D3               	movf	main@i& (0+255),w,b
  1851  00029E  0D01               	mullw	1
  1852  0002A0  0100               	movlb	0	; () banked
  1853  0002A2  0EC3               	movlw	low main@preset_char
  1854  0002A4  24F3               	addwf	prodl,w,c
  1855  0002A6  6ED9               	movwf	fsr2l,c
  1856  0002A8  0100               	movlb	0	; () banked
  1857  0002AA  0E00               	movlw	high main@preset_char
  1858  0002AC  20F4               	addwfc	prodh,w,c
  1859  0002AE  6EDA               	movwf	fsr2h,c
  1860  0002B0  50DF               	movf	indf2,w,c
  1861  0002B2  A4D8               	btfss	status,2,c
  1862  0002B4  D7D7               	goto	l2689
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;main.c: 1200: }
  1866                           ;main.c: 1201: for (i = 0; preset_eep_char_0[i]; i++) {
  1867                           
  1868                           ; BSR set to: 0
  1869  0002B6  0E00               	movlw	0
  1870  0002B8  0100               	movlb	0	; () banked
  1871  0002BA  6FD3               	movwf	main@i& (0+255),b
  1872  0002BC  D018               	goto	l2703
  1873  0002BE                     l2699:
  1874                           
  1875                           ;main.c: 1202: memory_char[0][i] = preset_eep_char_0[i];
  1876  0002BE  0100               	movlb	0	; () banked
  1877  0002C0  51D3               	movf	main@i& (0+255),w,b
  1878  0002C2  0D01               	mullw	1
  1879  0002C4  0102               	movlb	2	; () banked
  1880  0002C6  0EC3               	movlw	low main@preset_eep_char_0
  1881  0002C8  24F3               	addwf	prodl,w,c
  1882  0002CA  6ED9               	movwf	fsr2l,c
  1883  0002CC  0102               	movlb	2	; () banked
  1884  0002CE  0E02               	movlw	high main@preset_eep_char_0
  1885  0002D0  20F4               	addwfc	prodh,w,c
  1886  0002D2  6EDA               	movwf	fsr2h,c
  1887  0002D4  0100               	movlb	0	; () banked
  1888  0002D6  51D3               	movf	main@i& (0+255),w,b
  1889  0002D8  0D01               	mullw	1
  1890  0002DA  0EFF               	movlw	low _memory_char
  1891  0002DC  24F3               	addwf	prodl,w,c
  1892  0002DE  6EE1               	movwf	fsr1l,c
  1893  0002E0  0E04               	movlw	high _memory_char
  1894  0002E2  20F4               	addwfc	prodh,w,c
  1895  0002E4  6EE2               	movwf	fsr1h,c
  1896  0002E6  CFDF FFE7          	movff	indf2,indf1
  1897                           
  1898                           ; BSR set to: 0
  1899  0002EA  0100               	movlb	0	; () banked
  1900  0002EC  2BD3               	incf	main@i& (0+255),f,b
  1901  0002EE                     l2703:
  1902                           
  1903                           ; BSR set to: 0
  1904  0002EE  0100               	movlb	0	; () banked
  1905  0002F0  51D3               	movf	main@i& (0+255),w,b
  1906  0002F2  0D01               	mullw	1
  1907  0002F4  0102               	movlb	2	; () banked
  1908  0002F6  0EC3               	movlw	low main@preset_eep_char_0
  1909  0002F8  24F3               	addwf	prodl,w,c
  1910  0002FA  6ED9               	movwf	fsr2l,c
  1911  0002FC  0102               	movlb	2	; () banked
  1912  0002FE  0E02               	movlw	high main@preset_eep_char_0
  1913  000300  20F4               	addwfc	prodh,w,c
  1914  000302  6EDA               	movwf	fsr2h,c
  1915  000304  50DF               	movf	indf2,w,c
  1916  000306  A4D8               	btfss	status,2,c
  1917  000308  D7DA               	goto	l2699
  1918                           
  1919                           ; BSR set to: 2
  1920                           ;main.c: 1203: }
  1921                           ;main.c: 1204: memory_char[0][i] = '\0';
  1922                           
  1923                           ; BSR set to: 2
  1924  00030A  0100               	movlb	0	; () banked
  1925  00030C  51D3               	movf	main@i& (0+255),w,b
  1926  00030E  0D01               	mullw	1
  1927  000310  0EFF               	movlw	low _memory_char
  1928  000312  24F3               	addwf	prodl,w,c
  1929  000314  6ED9               	movwf	fsr2l,c
  1930  000316  0E04               	movlw	high _memory_char
  1931  000318  20F4               	addwfc	prodh,w,c
  1932  00031A  6EDA               	movwf	fsr2h,c
  1933  00031C  0E00               	movlw	0
  1934  00031E  6EDF               	movwf	indf2,c
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;main.c: 1205: for (i = 0; preset_eep_char_1[i]; i++) {
  1938  000320  0E00               	movlw	0
  1939  000322  0100               	movlb	0	; () banked
  1940  000324  6FD3               	movwf	main@i& (0+255),b
  1941  000326  D018               	goto	l2713
  1942  000328                     l2709:
  1943                           
  1944                           ;main.c: 1206: memory_char[1][i] = preset_eep_char_1[i];
  1945  000328  0100               	movlb	0	; () banked
  1946  00032A  51D3               	movf	main@i& (0+255),w,b
  1947  00032C  0D01               	mullw	1
  1948  00032E  0102               	movlb	2	; () banked
  1949  000330  0EE2               	movlw	low main@preset_eep_char_1
  1950  000332  24F3               	addwf	prodl,w,c
  1951  000334  6ED9               	movwf	fsr2l,c
  1952  000336  0102               	movlb	2	; () banked
  1953  000338  0E02               	movlw	high main@preset_eep_char_1
  1954  00033A  20F4               	addwfc	prodh,w,c
  1955  00033C  6EDA               	movwf	fsr2h,c
  1956  00033E  0100               	movlb	0	; () banked
  1957  000340  51D3               	movf	main@i& (0+255),w,b
  1958  000342  0D01               	mullw	1
  1959  000344  0EFE               	movlw	low (_memory_char+255)
  1960  000346  24F3               	addwf	prodl,w,c
  1961  000348  6EE1               	movwf	fsr1l,c
  1962  00034A  0E05               	movlw	high (_memory_char+255)
  1963  00034C  20F4               	addwfc	prodh,w,c
  1964  00034E  6EE2               	movwf	fsr1h,c
  1965  000350  CFDF FFE7          	movff	indf2,indf1
  1966                           
  1967                           ; BSR set to: 0
  1968  000354  0100               	movlb	0	; () banked
  1969  000356  2BD3               	incf	main@i& (0+255),f,b
  1970  000358                     l2713:
  1971                           
  1972                           ; BSR set to: 0
  1973  000358  0100               	movlb	0	; () banked
  1974  00035A  51D3               	movf	main@i& (0+255),w,b
  1975  00035C  0D01               	mullw	1
  1976  00035E  0102               	movlb	2	; () banked
  1977  000360  0EE2               	movlw	low main@preset_eep_char_1
  1978  000362  24F3               	addwf	prodl,w,c
  1979  000364  6ED9               	movwf	fsr2l,c
  1980  000366  0102               	movlb	2	; () banked
  1981  000368  0E02               	movlw	high main@preset_eep_char_1
  1982  00036A  20F4               	addwfc	prodh,w,c
  1983  00036C  6EDA               	movwf	fsr2h,c
  1984  00036E  50DF               	movf	indf2,w,c
  1985  000370  A4D8               	btfss	status,2,c
  1986  000372  D7DA               	goto	l2709
  1987                           
  1988                           ; BSR set to: 2
  1989                           ;main.c: 1207: }
  1990                           ;main.c: 1208: memory_char[1][i] = '\0';
  1991                           
  1992                           ; BSR set to: 2
  1993  000374  0100               	movlb	0	; () banked
  1994  000376  51D3               	movf	main@i& (0+255),w,b
  1995  000378  0D01               	mullw	1
  1996  00037A  0EFE               	movlw	low (_memory_char+255)
  1997  00037C  24F3               	addwf	prodl,w,c
  1998  00037E  6ED9               	movwf	fsr2l,c
  1999  000380  0E05               	movlw	high (_memory_char+255)
  2000  000382  20F4               	addwfc	prodh,w,c
  2001  000384  6EDA               	movwf	fsr2h,c
  2002  000386  0E00               	movlw	0
  2003  000388  6EDF               	movwf	indf2,c
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;main.c: 1209: for (i = 0; preset_eep_char_2[i]; i++) {
  2007  00038A  0E00               	movlw	0
  2008  00038C  0100               	movlb	0	; () banked
  2009  00038E  6FD3               	movwf	main@i& (0+255),b
  2010  000390  D018               	goto	l2723
  2011  000392                     l2719:
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;main.c: 1210: memory_char[2][i] = preset_eep_char_2[i];
  2015  000392  0100               	movlb	0	; () banked
  2016  000394  51D3               	movf	main@i& (0+255),w,b
  2017  000396  0D01               	mullw	1
  2018  000398  0100               	movlb	0	; () banked
  2019  00039A  0E74               	movlw	low main@preset_eep_char_2
  2020  00039C  24F3               	addwf	prodl,w,c
  2021  00039E  6ED9               	movwf	fsr2l,c
  2022  0003A0  0100               	movlb	0	; () banked
  2023  0003A2  0E00               	movlw	high main@preset_eep_char_2
  2024  0003A4  20F4               	addwfc	prodh,w,c
  2025  0003A6  6EDA               	movwf	fsr2h,c
  2026  0003A8  0100               	movlb	0	; () banked
  2027  0003AA  51D3               	movf	main@i& (0+255),w,b
  2028  0003AC  0D01               	mullw	1
  2029  0003AE  0EFD               	movlw	low (_memory_char+510)
  2030  0003B0  24F3               	addwf	prodl,w,c
  2031  0003B2  6EE1               	movwf	fsr1l,c
  2032  0003B4  0E06               	movlw	high (_memory_char+510)
  2033  0003B6  20F4               	addwfc	prodh,w,c
  2034  0003B8  6EE2               	movwf	fsr1h,c
  2035  0003BA  CFDF FFE7          	movff	indf2,indf1
  2036                           
  2037                           ; BSR set to: 0
  2038  0003BE  0100               	movlb	0	; () banked
  2039  0003C0  2BD3               	incf	main@i& (0+255),f,b
  2040  0003C2                     l2723:
  2041                           
  2042                           ; BSR set to: 0
  2043  0003C2  0100               	movlb	0	; () banked
  2044  0003C4  51D3               	movf	main@i& (0+255),w,b
  2045  0003C6  0D01               	mullw	1
  2046  0003C8  0100               	movlb	0	; () banked
  2047  0003CA  0E74               	movlw	low main@preset_eep_char_2
  2048  0003CC  24F3               	addwf	prodl,w,c
  2049  0003CE  6ED9               	movwf	fsr2l,c
  2050  0003D0  0100               	movlb	0	; () banked
  2051  0003D2  0E00               	movlw	high main@preset_eep_char_2
  2052  0003D4  20F4               	addwfc	prodh,w,c
  2053  0003D6  6EDA               	movwf	fsr2h,c
  2054  0003D8  50DF               	movf	indf2,w,c
  2055  0003DA  A4D8               	btfss	status,2,c
  2056  0003DC  D7DA               	goto	l2719
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;main.c: 1211: }
  2060                           ;main.c: 1212: memory_char[2][i] = '\0';
  2061                           
  2062                           ; BSR set to: 0
  2063  0003DE  0100               	movlb	0	; () banked
  2064  0003E0  51D3               	movf	main@i& (0+255),w,b
  2065  0003E2  0D01               	mullw	1
  2066  0003E4  0EFD               	movlw	low (_memory_char+510)
  2067  0003E6  24F3               	addwf	prodl,w,c
  2068  0003E8  6ED9               	movwf	fsr2l,c
  2069  0003EA  0E06               	movlw	high (_memory_char+510)
  2070  0003EC  20F4               	addwfc	prodh,w,c
  2071  0003EE  6EDA               	movwf	fsr2h,c
  2072  0003F0  0E00               	movlw	0
  2073  0003F2  6EDF               	movwf	indf2,c
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;main.c: 1213: for (i = 0; preset_eep_char_3[i]; i++) {
  2077  0003F4  0E00               	movlw	0
  2078  0003F6  0100               	movlb	0	; () banked
  2079  0003F8  6FD3               	movwf	main@i& (0+255),b
  2080  0003FA  D018               	goto	l2733
  2081  0003FC                     l2729:
  2082                           
  2083                           ;main.c: 1214: memory_char[3][i] = preset_eep_char_3[i];
  2084  0003FC  0100               	movlb	0	; () banked
  2085  0003FE  51D3               	movf	main@i& (0+255),w,b
  2086  000400  0D01               	mullw	1
  2087  000402  0102               	movlb	2	; () banked
  2088  000404  0E80               	movlw	low main@preset_eep_char_3
  2089  000406  24F3               	addwf	prodl,w,c
  2090  000408  6ED9               	movwf	fsr2l,c
  2091  00040A  0102               	movlb	2	; () banked
  2092  00040C  0E02               	movlw	high main@preset_eep_char_3
  2093  00040E  20F4               	addwfc	prodh,w,c
  2094  000410  6EDA               	movwf	fsr2h,c
  2095  000412  0100               	movlb	0	; () banked
  2096  000414  51D3               	movf	main@i& (0+255),w,b
  2097  000416  0D01               	mullw	1
  2098  000418  0EFC               	movlw	low (_memory_char+765)
  2099  00041A  24F3               	addwf	prodl,w,c
  2100  00041C  6EE1               	movwf	fsr1l,c
  2101  00041E  0E07               	movlw	high (_memory_char+765)
  2102  000420  20F4               	addwfc	prodh,w,c
  2103  000422  6EE2               	movwf	fsr1h,c
  2104  000424  CFDF FFE7          	movff	indf2,indf1
  2105                           
  2106                           ; BSR set to: 0
  2107  000428  0100               	movlb	0	; () banked
  2108  00042A  2BD3               	incf	main@i& (0+255),f,b
  2109  00042C                     l2733:
  2110                           
  2111                           ; BSR set to: 0
  2112  00042C  0100               	movlb	0	; () banked
  2113  00042E  51D3               	movf	main@i& (0+255),w,b
  2114  000430  0D01               	mullw	1
  2115  000432  0102               	movlb	2	; () banked
  2116  000434  0E80               	movlw	low main@preset_eep_char_3
  2117  000436  24F3               	addwf	prodl,w,c
  2118  000438  6ED9               	movwf	fsr2l,c
  2119  00043A  0102               	movlb	2	; () banked
  2120  00043C  0E02               	movlw	high main@preset_eep_char_3
  2121  00043E  20F4               	addwfc	prodh,w,c
  2122  000440  6EDA               	movwf	fsr2h,c
  2123  000442  50DF               	movf	indf2,w,c
  2124  000444  A4D8               	btfss	status,2,c
  2125  000446  D7DA               	goto	l2729
  2126                           
  2127                           ; BSR set to: 2
  2128                           ;main.c: 1215: }
  2129                           ;main.c: 1216: memory_char[3][i] = '\0';
  2130                           
  2131                           ; BSR set to: 2
  2132  000448  0100               	movlb	0	; () banked
  2133  00044A  51D3               	movf	main@i& (0+255),w,b
  2134  00044C  0D01               	mullw	1
  2135  00044E  0EFC               	movlw	low (_memory_char+765)
  2136  000450  24F3               	addwf	prodl,w,c
  2137  000452  6ED9               	movwf	fsr2l,c
  2138  000454  0E07               	movlw	high (_memory_char+765)
  2139  000456  20F4               	addwfc	prodh,w,c
  2140  000458  6EDA               	movwf	fsr2h,c
  2141  00045A  0E00               	movlw	0
  2142  00045C  6EDF               	movwf	indf2,c
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;main.c: 1218: scroll_pointer = 0;
  2146  00045E  0E00               	movlw	0
  2147  000460  6E29               	movwf	_scroll_pointer+1,c
  2148  000462  0E00               	movlw	0
  2149  000464  6E28               	movwf	_scroll_pointer,c
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;main.c: 1219: scroll(1);
  2153  000466  0E01               	movlw	1
  2154  000468  EC08  F00C         	call	_scroll
  2155                           
  2156                           ;main.c: 1221: INTCONbits.GIE = 1;
  2157  00046C  8EF2               	bsf	intcon,7,c	;volatile
  2158  00046E                     l2743:
  2159                           
  2160                           ;main.c: 1224: uint16_t sw_flag = 0;
  2161  00046E  0E00               	movlw	0
  2162  000470  0100               	movlb	0	; () banked
  2163  000472  6FD1               	movwf	(main@sw_flag+1)& (0+255),b
  2164  000474  0E00               	movlw	0
  2165  000476  0100               	movlb	0	; () banked
  2166  000478  6FD0               	movwf	main@sw_flag& (0+255),b
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;main.c: 1225: for (j = 0; j < 4; j++) {
  2170  00047A  0E00               	movlw	0
  2171  00047C  0100               	movlb	0	; () banked
  2172  00047E  6FD2               	movwf	main@j& (0+255),b
  2173  000480  D12C               	goto	L1
  2174  000482                     l2751:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;main.c: 1226: if (sw(j))sw_flag = 1;
  2178  000482  0100               	movlb	0	; () banked
  2179  000484  51D2               	movf	main@j& (0+255),w,b
  2180  000486  ECE9  F00A         	call	_sw
  2181  00048A  0900               	iorlw	0
  2182  00048C  B4D8               	btfsc	status,2,c
  2183  00048E  D006               	goto	l2755
  2184  000490  0E00               	movlw	0
  2185  000492  0100               	movlb	0	; () banked
  2186  000494  6FD1               	movwf	(main@sw_flag+1)& (0+255),b
  2187  000496  0E01               	movlw	1
  2188  000498  0100               	movlb	0	; () banked
  2189  00049A  6FD0               	movwf	main@sw_flag& (0+255),b
  2190  00049C                     l2755:
  2191                           
  2192                           ;main.c: 1227: if ((long_hold_flag)&(1 << j)) {
  2193  00049C  C0D2  F072         	movff	main@j,??_main
  2194  0004A0  0E01               	movlw	1
  2195  0004A2  0100               	movlb	0	; () banked
  2196  0004A4  6F73               	movwf	(??_main+1)& (0+255),b
  2197  0004A6  0100               	movlb	0	; () banked
  2198  0004A8  2B72               	incf	??_main& (0+255),f,b
  2199  0004AA  D003               	goto	u3084
  2200  0004AC                     u3085:
  2201  0004AC  0100               	movlb	0	; () banked
  2202  0004AE  90D8               	bcf	status,0,c
  2203  0004B0  3773               	rlcf	(??_main+1)& (0+255),f,b
  2204  0004B2                     u3084:
  2205  0004B2  0100               	movlb	0	; () banked
  2206  0004B4  2F72               	decfsz	??_main& (0+255),f,b
  2207  0004B6  D7FA               	goto	u3085
  2208  0004B8  0100               	movlb	0	; () banked
  2209  0004BA  5173               	movf	(??_main+1)& (0+255),w,b
  2210  0004BC  0101               	movlb	1	; () banked
  2211  0004BE  15FF               	andwf	_long_hold_flag& (0+255),w,b
  2212  0004C0  0900               	iorlw	0
  2213  0004C2  B4D8               	btfsc	status,2,c
  2214  0004C4  D06B               	goto	l2777
  2215                           
  2216                           ; BSR set to: 1
  2217                           ;main.c: 1228: long_hold_flag &= ~(1 << j);
  2218  0004C6  C0D2  F072         	movff	main@j,??_main
  2219  0004CA  0E01               	movlw	1
  2220  0004CC  0100               	movlb	0	; () banked
  2221  0004CE  6F73               	movwf	(??_main+1)& (0+255),b
  2222  0004D0  0100               	movlb	0	; () banked
  2223  0004D2  2B72               	incf	??_main& (0+255),f,b
  2224  0004D4  D003               	goto	u3104
  2225  0004D6                     u3105:
  2226  0004D6  0100               	movlb	0	; () banked
  2227  0004D8  90D8               	bcf	status,0,c
  2228  0004DA  3773               	rlcf	(??_main+1)& (0+255),f,b
  2229  0004DC                     u3104:
  2230  0004DC  0100               	movlb	0	; () banked
  2231  0004DE  2F72               	decfsz	??_main& (0+255),f,b
  2232  0004E0  D7FA               	goto	u3105
  2233  0004E2  0100               	movlb	0	; () banked
  2234  0004E4  5173               	movf	(??_main+1)& (0+255),w,b
  2235  0004E6  0AFF               	xorlw	255
  2236  0004E8  0101               	movlb	1	; () banked
  2237  0004EA  17FF               	andwf	_long_hold_flag& (0+255),f,b
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;main.c: 1229: scroll(0);
  2241  0004EC  0E00               	movlw	0
  2242  0004EE  EC08  F00C         	call	_scroll
  2243                           
  2244                           ;main.c: 1230: ;
  2245                           ;main.c: 1231: for (i = 0; i < scroll_char_pointer; i++) {
  2246  0004F2  0E00               	movlw	0
  2247  0004F4  0100               	movlb	0	; () banked
  2248  0004F6  6FD3               	movwf	main@i& (0+255),b
  2249  0004F8  D028               	goto	l2767
  2250  0004FA                     l2763:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;main.c: 1232: ;
  2254                           ;main.c: 1233: memory_char[j][i] = scroll_char[i];
  2255  0004FA  0100               	movlb	0	; () banked
  2256  0004FC  51D3               	movf	main@i& (0+255),w,b
  2257  0004FE  0D01               	mullw	1
  2258  000500  0104               	movlb	4	; () banked
  2259  000502  0E00               	movlw	low _scroll_char
  2260  000504  24F3               	addwf	prodl,w,c
  2261  000506  6ED9               	movwf	fsr2l,c
  2262  000508  0104               	movlb	4	; () banked
  2263  00050A  0E04               	movlw	high _scroll_char
  2264  00050C  20F4               	addwfc	prodh,w,c
  2265  00050E  6EDA               	movwf	fsr2h,c
  2266  000510  0100               	movlb	0	; () banked
  2267  000512  51D2               	movf	main@j& (0+255),w,b
  2268  000514  0DFF               	mullw	255
  2269  000516  0EFF               	movlw	low _memory_char
  2270  000518  0100               	movlb	0	; () banked
  2271  00051A  6F72               	movwf	??_main& (0+255),b
  2272  00051C  0E04               	movlw	high _memory_char
  2273  00051E  6F73               	movwf	(??_main+1)& (0+255),b
  2274  000520  50F3               	movf	prodl,w,c
  2275  000522  0100               	movlb	0	; () banked
  2276  000524  2772               	addwf	??_main& (0+255),f,b
  2277  000526  50F4               	movf	prodh,w,c
  2278  000528  0100               	movlb	0	; () banked
  2279  00052A  2373               	addwfc	(??_main+1)& (0+255),f,b
  2280  00052C  0100               	movlb	0	; () banked
  2281  00052E  51D3               	movf	main@i& (0+255),w,b
  2282  000530  0D01               	mullw	1
  2283  000532  50F3               	movf	prodl,w,c
  2284  000534  0100               	movlb	0	; () banked
  2285  000536  2572               	addwf	??_main& (0+255),w,b
  2286  000538  6EE1               	movwf	fsr1l,c
  2287  00053A  50F4               	movf	prodh,w,c
  2288  00053C  0100               	movlb	0	; () banked
  2289  00053E  2173               	addwfc	(??_main+1)& (0+255),w,b
  2290  000540  6EE2               	movwf	fsr1h,c
  2291  000542  CFDF FFE7          	movff	indf2,indf1
  2292                           
  2293                           ; BSR set to: 0
  2294  000546  0100               	movlb	0	; () banked
  2295  000548  2BD3               	incf	main@i& (0+255),f,b
  2296  00054A                     l2767:
  2297                           
  2298                           ; BSR set to: 0
  2299  00054A  502E               	movf	_scroll_char_pointer,w,c
  2300  00054C  0100               	movlb	0	; () banked
  2301  00054E  5DD3               	subwf	main@i& (0+255),w,b
  2302  000550  A0D8               	btfss	status,0,c
  2303  000552  D7D3               	goto	l2763
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;main.c: 1234: }
  2307                           ;main.c: 1235: memory_char[j][i]='\0';
  2308                           
  2309                           ; BSR set to: 0
  2310  000554  0100               	movlb	0	; () banked
  2311  000556  51D2               	movf	main@j& (0+255),w,b
  2312  000558  0DFF               	mullw	255
  2313  00055A  0EFF               	movlw	low _memory_char
  2314  00055C  0100               	movlb	0	; () banked
  2315  00055E  6F72               	movwf	??_main& (0+255),b
  2316  000560  0E04               	movlw	high _memory_char
  2317  000562  6F73               	movwf	(??_main+1)& (0+255),b
  2318  000564  50F3               	movf	prodl,w,c
  2319  000566  0100               	movlb	0	; () banked
  2320  000568  2772               	addwf	??_main& (0+255),f,b
  2321  00056A  50F4               	movf	prodh,w,c
  2322  00056C  0100               	movlb	0	; () banked
  2323  00056E  2373               	addwfc	(??_main+1)& (0+255),f,b
  2324  000570  0100               	movlb	0	; () banked
  2325  000572  51D3               	movf	main@i& (0+255),w,b
  2326  000574  0D01               	mullw	1
  2327  000576  50F3               	movf	prodl,w,c
  2328  000578  0100               	movlb	0	; () banked
  2329  00057A  2572               	addwf	??_main& (0+255),w,b
  2330  00057C  6ED9               	movwf	fsr2l,c
  2331  00057E  50F4               	movf	prodh,w,c
  2332  000580  0100               	movlb	0	; () banked
  2333  000582  2173               	addwfc	(??_main+1)& (0+255),w,b
  2334  000584  6EDA               	movwf	fsr2h,c
  2335  000586  0E00               	movlw	0
  2336  000588  6EDF               	movwf	indf2,c
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;main.c: 1236: print_char[0] = 'M';
  2340  00058A  0E4D               	movlw	77
  2341  00058C  6E26               	movwf	_print_char,c
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;main.c: 1237: print_char[1] = '0' + j + 1;
  2345  00058E  0100               	movlb	0	; () banked
  2346  000590  51D2               	movf	main@j& (0+255),w,b
  2347  000592  0F31               	addlw	49
  2348  000594  6E27               	movwf	_print_char+1,c
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 1238: print(1);
  2352  000596  0E01               	movlw	1
  2353  000598  EC17  F00C         	call	_print
  2354  00059C                     l2777:
  2355                           
  2356                           ;main.c: 1239: }
  2357                           ;main.c: 1240: if (cnt_sw[j] > 1 && cnt_sw[j] < 75 && sw(j) == 0) {
  2358  00059C  0100               	movlb	0	; () banked
  2359  00059E  51D2               	movf	main@j& (0+255),w,b
  2360  0005A0  0D01               	mullw	1
  2361  0005A2  0E22               	movlw	low _cnt_sw
  2362  0005A4  24F3               	addwf	prodl,w,c
  2363  0005A6  6ED9               	movwf	fsr2l,c
  2364  0005A8  0E00               	movlw	high _cnt_sw
  2365  0005AA  20F4               	addwfc	prodh,w,c
  2366  0005AC  6EDA               	movwf	fsr2h,c
  2367  0005AE  0E01               	movlw	1
  2368  0005B0  64DF               	cpfsgt	indf2,c
  2369  0005B2  D091               	goto	l2809
  2370                           
  2371                           ; BSR set to: 0
  2372  0005B4  0100               	movlb	0	; () banked
  2373  0005B6  51D2               	movf	main@j& (0+255),w,b
  2374  0005B8  0D01               	mullw	1
  2375  0005BA  0E22               	movlw	low _cnt_sw
  2376  0005BC  24F3               	addwf	prodl,w,c
  2377  0005BE  6ED9               	movwf	fsr2l,c
  2378  0005C0  0E00               	movlw	high _cnt_sw
  2379  0005C2  20F4               	addwfc	prodh,w,c
  2380  0005C4  6EDA               	movwf	fsr2h,c
  2381  0005C6  50DF               	movf	indf2,w,c
  2382  0005C8  0100               	movlb	0	; () banked
  2383  0005CA  6F72               	movwf	??_main& (0+255),b
  2384  0005CC  0E4B               	movlw	75
  2385  0005CE  0100               	movlb	0	; () banked
  2386  0005D0  5D72               	subwf	??_main& (0+255),w,b
  2387  0005D2  B0D8               	btfsc	status,0,c
  2388  0005D4  D080               	goto	l2809
  2389                           
  2390                           ; BSR set to: 0
  2391  0005D6  0100               	movlb	0	; () banked
  2392  0005D8  51D2               	movf	main@j& (0+255),w,b
  2393  0005DA  ECE9  F00A         	call	_sw
  2394  0005DE  0900               	iorlw	0
  2395  0005E0  A4D8               	btfss	status,2,c
  2396  0005E2  D079               	goto	l2809
  2397                           
  2398                           ;main.c: 1241: cnt_sw[j] = 0;
  2399  0005E4  0100               	movlb	0	; () banked
  2400  0005E6  51D2               	movf	main@j& (0+255),w,b
  2401  0005E8  0D01               	mullw	1
  2402  0005EA  0E22               	movlw	low _cnt_sw
  2403  0005EC  24F3               	addwf	prodl,w,c
  2404  0005EE  6ED9               	movwf	fsr2l,c
  2405  0005F0  0E00               	movlw	high _cnt_sw
  2406  0005F2  20F4               	addwfc	prodh,w,c
  2407  0005F4  6EDA               	movwf	fsr2h,c
  2408  0005F6  0E00               	movlw	0
  2409  0005F8  6EDF               	movwf	indf2,c
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;main.c: 1242: scroll_char_pointer = 0;
  2413  0005FA  0E00               	movlw	0
  2414  0005FC  6E2E               	movwf	_scroll_char_pointer,c
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;main.c: 1243: for (i = 0; i < scroll_char_pointer; i++) {
  2418  0005FE  0E00               	movlw	0
  2419  000600  0100               	movlb	0	; () banked
  2420  000602  6FD3               	movwf	main@i& (0+255),b
  2421  000604  D00F               	goto	l2793
  2422  000606                     l2789:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;main.c: 1244: scroll_char[i] = 0;
  2426  000606  0100               	movlb	0	; () banked
  2427  000608  51D3               	movf	main@i& (0+255),w,b
  2428  00060A  0D01               	mullw	1
  2429  00060C  0104               	movlb	4	; () banked
  2430  00060E  0E00               	movlw	low _scroll_char
  2431  000610  24F3               	addwf	prodl,w,c
  2432  000612  6ED9               	movwf	fsr2l,c
  2433  000614  0104               	movlb	4	; () banked
  2434  000616  0E04               	movlw	high _scroll_char
  2435  000618  20F4               	addwfc	prodh,w,c
  2436  00061A  6EDA               	movwf	fsr2h,c
  2437  00061C  0E00               	movlw	0
  2438  00061E  6EDF               	movwf	indf2,c
  2439                           
  2440                           ; BSR set to: 4
  2441  000620  0100               	movlb	0	; () banked
  2442  000622  2BD3               	incf	main@i& (0+255),f,b
  2443  000624                     l2793:
  2444                           
  2445                           ; BSR set to: 0
  2446  000624  502E               	movf	_scroll_char_pointer,w,c
  2447  000626  0100               	movlb	0	; () banked
  2448  000628  5DD3               	subwf	main@i& (0+255),w,b
  2449  00062A  A0D8               	btfss	status,0,c
  2450  00062C  D7EC               	goto	l2789
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;main.c: 1245: }
  2454                           ;main.c: 1246: scroll_char_pointer = 0;
  2455                           
  2456                           ; BSR set to: 0
  2457  00062E  0E00               	movlw	0
  2458  000630  6E2E               	movwf	_scroll_char_pointer,c
  2459                           
  2460                           ;main.c: 1247: for (i = 0; memory_char[j][i]; i++) {
  2461  000632  0E00               	movlw	0
  2462  000634  0100               	movlb	0	; () banked
  2463  000636  6FD3               	movwf	main@i& (0+255),b
  2464  000638  D029               	goto	l2803
  2465  00063A                     l2797:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;main.c: 1248: scroll_char[i] = memory_char[j][i];
  2469  00063A  0100               	movlb	0	; () banked
  2470  00063C  51D2               	movf	main@j& (0+255),w,b
  2471  00063E  0DFF               	mullw	255
  2472  000640  0EFF               	movlw	low _memory_char
  2473  000642  0100               	movlb	0	; () banked
  2474  000644  6F72               	movwf	??_main& (0+255),b
  2475  000646  0E04               	movlw	high _memory_char
  2476  000648  6F73               	movwf	(??_main+1)& (0+255),b
  2477  00064A  50F3               	movf	prodl,w,c
  2478  00064C  0100               	movlb	0	; () banked
  2479  00064E  2772               	addwf	??_main& (0+255),f,b
  2480  000650  50F4               	movf	prodh,w,c
  2481  000652  0100               	movlb	0	; () banked
  2482  000654  2373               	addwfc	(??_main+1)& (0+255),f,b
  2483  000656  0100               	movlb	0	; () banked
  2484  000658  51D3               	movf	main@i& (0+255),w,b
  2485  00065A  0D01               	mullw	1
  2486  00065C  50F3               	movf	prodl,w,c
  2487  00065E  0100               	movlb	0	; () banked
  2488  000660  2572               	addwf	??_main& (0+255),w,b
  2489  000662  6ED9               	movwf	fsr2l,c
  2490  000664  50F4               	movf	prodh,w,c
  2491  000666  0100               	movlb	0	; () banked
  2492  000668  2173               	addwfc	(??_main+1)& (0+255),w,b
  2493  00066A  6EDA               	movwf	fsr2h,c
  2494  00066C  0100               	movlb	0	; () banked
  2495  00066E  51D3               	movf	main@i& (0+255),w,b
  2496  000670  0D01               	mullw	1
  2497  000672  0104               	movlb	4	; () banked
  2498  000674  0E00               	movlw	low _scroll_char
  2499  000676  24F3               	addwf	prodl,w,c
  2500  000678  6EE1               	movwf	fsr1l,c
  2501  00067A  0104               	movlb	4	; () banked
  2502  00067C  0E04               	movlw	high _scroll_char
  2503  00067E  20F4               	addwfc	prodh,w,c
  2504  000680  6EE2               	movwf	fsr1h,c
  2505  000682  CFDF FFE7          	movff	indf2,indf1
  2506                           
  2507                           ; BSR set to: 4
  2508                           ;main.c: 1249: scroll_char_pointer++;
  2509  000686  2A2E               	incf	_scroll_char_pointer,f,c
  2510                           
  2511                           ; BSR set to: 4
  2512  000688  0100               	movlb	0	; () banked
  2513  00068A  2BD3               	incf	main@i& (0+255),f,b
  2514  00068C                     l2803:
  2515                           
  2516                           ; BSR set to: 0
  2517  00068C  0100               	movlb	0	; () banked
  2518  00068E  51D2               	movf	main@j& (0+255),w,b
  2519  000690  0DFF               	mullw	255
  2520  000692  0EFF               	movlw	low _memory_char
  2521  000694  0100               	movlb	0	; () banked
  2522  000696  6F72               	movwf	??_main& (0+255),b
  2523  000698  0E04               	movlw	high _memory_char
  2524  00069A  6F73               	movwf	(??_main+1)& (0+255),b
  2525  00069C  50F3               	movf	prodl,w,c
  2526  00069E  0100               	movlb	0	; () banked
  2527  0006A0  2772               	addwf	??_main& (0+255),f,b
  2528  0006A2  50F4               	movf	prodh,w,c
  2529  0006A4  0100               	movlb	0	; () banked
  2530  0006A6  2373               	addwfc	(??_main+1)& (0+255),f,b
  2531  0006A8  0100               	movlb	0	; () banked
  2532  0006AA  51D3               	movf	main@i& (0+255),w,b
  2533  0006AC  0D01               	mullw	1
  2534  0006AE  50F3               	movf	prodl,w,c
  2535  0006B0  0100               	movlb	0	; () banked
  2536  0006B2  2572               	addwf	??_main& (0+255),w,b
  2537  0006B4  6ED9               	movwf	fsr2l,c
  2538  0006B6  50F4               	movf	prodh,w,c
  2539  0006B8  0100               	movlb	0	; () banked
  2540  0006BA  2173               	addwfc	(??_main+1)& (0+255),w,b
  2541  0006BC  6EDA               	movwf	fsr2h,c
  2542  0006BE  50DF               	movf	indf2,w,c
  2543  0006C0  A4D8               	btfss	status,2,c
  2544  0006C2  D7BB               	goto	l2797
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;main.c: 1250: }
  2548                           ;main.c: 1251: scroll_pointer = 0;
  2549                           
  2550                           ; BSR set to: 0
  2551  0006C4  0E00               	movlw	0
  2552  0006C6  6E29               	movwf	_scroll_pointer+1,c
  2553  0006C8  0E00               	movlw	0
  2554  0006CA  6E28               	movwf	_scroll_pointer,c
  2555                           
  2556                           ;main.c: 1252: return_reset = 1;
  2557  0006CC  0E01               	movlw	1
  2558  0006CE  6E41               	movwf	_return_reset,c
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;main.c: 1253: scroll(1);
  2562  0006D0  0E01               	movlw	1
  2563  0006D2  EC08  F00C         	call	_scroll
  2564  0006D6                     l2809:
  2565  0006D6  0100               	movlb	0	; () banked
  2566  0006D8  2BD2               	incf	main@j& (0+255),f,b
  2567  0006DA                     L1:
  2568                           
  2569                           ; BSR set to: 0
  2570  0006DA  0E03               	movlw	3
  2571  0006DC  0100               	movlb	0	; () banked
  2572  0006DE  65D2               	cpfsgt	main@j& (0+255),b
  2573  0006E0  D6D0               	goto	l2751
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;main.c: 1254: }
  2577                           ;main.c: 1255: }
  2578                           ;main.c: 1256: if (sw_flag == 0 && printON == 1) {
  2579                           
  2580                           ; BSR set to: 0
  2581  0006E2  0100               	movlb	0	; () banked
  2582  0006E4  51D1               	movf	(main@sw_flag+1)& (0+255),w,b
  2583  0006E6  11D0               	iorwf	main@sw_flag& (0+255),w,b
  2584  0006E8  A4D8               	btfss	status,2,c
  2585  0006EA  D6C1               	goto	l2743
  2586                           
  2587                           ; BSR set to: 0
  2588  0006EC  042C               	decf	_printON,w,c
  2589  0006EE  A4D8               	btfss	status,2,c
  2590  0006F0  D6BE               	goto	l2743
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;main.c: 1257: print(0);
  2594  0006F2  0E00               	movlw	0
  2595  0006F4  EC17  F00C         	call	_print
  2596                           
  2597                           ;main.c: 1258: scroll(1);
  2598  0006F8  0E01               	movlw	1
  2599  0006FA  EC08  F00C         	call	_scroll
  2600  0006FE  D6B7               	goto	l2743
  2601  000700                     __end_of_main:
  2602                           	opt stack 0
  2603                           tblptru	equ	0xFF8
  2604                           tblptrh	equ	0xFF7
  2605                           tblptrl	equ	0xFF6
  2606                           tablat	equ	0xFF5
  2607                           prodh	equ	0xFF4
  2608                           prodl	equ	0xFF3
  2609                           intcon	equ	0xFF2
  2610                           intcon2	equ	0xFF1
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           indf1	equ	0xFE7
  2614                           postinc1	equ	0xFE6
  2615                           postdec1	equ	0xFE5
  2616                           fsr1h	equ	0xFE2
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           postinc2	equ	0xFDE
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _sw *****************
  2625 ;; Defined at:
  2626 ;;		line 1092 in file "main.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  i               1    wreg     unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  i               1    0[BANK0 ] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      unsigned char 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;Total ram usage:        1 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    6
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text1
  2655  0015D2                     __ptext1:
  2656                           	opt stack 0
  2657  0015D2                     _sw:
  2658                           	opt stack 24
  2659                           
  2660                           ;incstack = 0
  2661                           ;sw@i stored from wreg
  2662  0015D2  0100               	movlb	0	; () banked
  2663  0015D4  6F60               	movwf	sw@i& (0+255),b
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;main.c: 1093: switch (i) {
  2667  0015D6  D018               	goto	l2569
  2668  0015D8                     l2551:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;main.c: 1095: return !PORTCbits.RC5;
  2672  0015D8  BA82               	btfsc	3970,5,c	;volatile
  2673  0015DA  D002               	goto	u2860
  2674  0015DC  0E01               	movlw	1
  2675  0015DE  0012               	return	
  2676  0015E0                     u2860:
  2677  0015E0  0E00               	movlw	0
  2678  0015E2  0012               	return	
  2679  0015E4                     l2555:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;main.c: 1097: return !PORTCbits.RC4;
  2683  0015E4  B882               	btfsc	3970,4,c	;volatile
  2684  0015E6  D002               	goto	u2870
  2685  0015E8  0E01               	movlw	1
  2686  0015EA  0012               	return	
  2687  0015EC                     u2870:
  2688  0015EC  0E00               	movlw	0
  2689  0015EE  0012               	return	
  2690  0015F0                     l2559:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;main.c: 1099: return !PORTCbits.RC3;
  2694  0015F0  B682               	btfsc	3970,3,c	;volatile
  2695  0015F2  D002               	goto	u2880
  2696  0015F4  0E01               	movlw	1
  2697  0015F6  0012               	return	
  2698  0015F8                     u2880:
  2699  0015F8  0E00               	movlw	0
  2700  0015FA  0012               	return	
  2701  0015FC                     l2563:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;main.c: 1101: return !PORTCbits.RC2;
  2705  0015FC  B482               	btfsc	3970,2,c	;volatile
  2706  0015FE  D002               	goto	u2890
  2707  001600  0E01               	movlw	1
  2708  001602  0012               	return	
  2709  001604                     u2890:
  2710  001604  0E00               	movlw	0
  2711  001606  0012               	return	
  2712  001608                     l2569:
  2713                           
  2714                           ; BSR set to: 0
  2715  001608  0100               	movlb	0	; () banked
  2716  00160A  5160               	movf	sw@i& (0+255),w,b
  2717                           
  2718                           ; Switch size 1, requested type "space"
  2719                           ; Number of cases is 4, Range of values is 0 to 3
  2720                           ; switch strategies available:
  2721                           ; Name         Instructions Cycles
  2722                           ; simple_byte           13     7 (average)
  2723                           ;	Chosen strategy is simple_byte
  2724  00160C  0A00               	xorlw	0	; case 0
  2725  00160E  B4D8               	btfsc	status,2,c
  2726  001610  D7E3               	goto	l2551
  2727  001612  0A01               	xorlw	1	; case 1
  2728  001614  B4D8               	btfsc	status,2,c
  2729  001616  D7E6               	goto	l2555
  2730  001618  0A03               	xorlw	3	; case 2
  2731  00161A  B4D8               	btfsc	status,2,c
  2732  00161C  D7E9               	goto	l2559
  2733  00161E  0A01               	xorlw	1	; case 3
  2734  001620  B4D8               	btfsc	status,2,c
  2735  001622  D7EC               	goto	l2563
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;main.c: 1103: return 2;
  2739                           
  2740                           ; BSR set to: 0
  2741  001624  0E02               	movlw	2
  2742  001626  0012               	return	
  2743  001628                     __end_of_sw:
  2744                           	opt stack 0
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           prodh	equ	0xFF4
  2750                           prodl	equ	0xFF3
  2751                           intcon	equ	0xFF2
  2752                           intcon2	equ	0xFF1
  2753                           postinc0	equ	0xFEE
  2754                           wreg	equ	0xFE8
  2755                           indf1	equ	0xFE7
  2756                           postinc1	equ	0xFE6
  2757                           postdec1	equ	0xFE5
  2758                           fsr1h	equ	0xFE2
  2759                           fsr1l	equ	0xFE1
  2760                           indf2	equ	0xFDF
  2761                           postinc2	equ	0xFDE
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _scroll *****************
  2767 ;; Defined at:
  2768 ;;		line 1107 in file "main.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  value           1    wreg     unsigned char 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  value           1   17[BANK0 ] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;		None               void
  2775 ;; Registers used:
  2776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;Total ram usage:        1 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    9
  2789 ;; This function calls:
  2790 ;;		_display_scroll
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text2
  2797  001810                     __ptext2:
  2798                           	opt stack 0
  2799  001810                     _scroll:
  2800                           	opt stack 21
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;incstack = 0
  2804                           ;scroll@value stored from wreg
  2805  001810  0100               	movlb	0	; () banked
  2806  001812  6F71               	movwf	scroll@value& (0+255),b
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;main.c: 1108: if (value) {
  2810  001814  0100               	movlb	0	; () banked
  2811  001816  5171               	movf	scroll@value& (0+255),w,b
  2812  001818  B4D8               	btfsc	status,2,c
  2813  00181A  D003               	goto	l2545
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;main.c: 1109: scrollON = 1;
  2817  00181C  0E01               	movlw	1
  2818  00181E  6E2D               	movwf	_scrollON,c
  2819                           
  2820                           ;main.c: 1110: } else {
  2821  001820  0012               	return	
  2822  001822                     l2545:
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;main.c: 1111: scrollON = 0;
  2826  001822  0E00               	movlw	0
  2827  001824  6E2D               	movwf	_scrollON,c
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;main.c: 1112: display_scroll(0x10);
  2831  001826  0E10               	movlw	16
  2832  001828  ECBD  F006         	call	_display_scroll
  2833  00182C  0012               	return	
  2834  00182E                     __end_of_scroll:
  2835                           	opt stack 0
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           prodh	equ	0xFF4
  2841                           prodl	equ	0xFF3
  2842                           intcon	equ	0xFF2
  2843                           intcon2	equ	0xFF1
  2844                           postinc0	equ	0xFEE
  2845                           wreg	equ	0xFE8
  2846                           indf1	equ	0xFE7
  2847                           postinc1	equ	0xFE6
  2848                           postdec1	equ	0xFE5
  2849                           fsr1h	equ	0xFE2
  2850                           fsr1l	equ	0xFE1
  2851                           indf2	equ	0xFDF
  2852                           postinc2	equ	0xFDE
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857 ;; *************** function _display_scroll *****************
  2858 ;; Defined at:
  2859 ;;		line 1040 in file "main.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  column          1    wreg     unsigned char 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  column          1   16[BANK0 ] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;		None               void
  2866 ;; Registers used:
  2867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;Total ram usage:        8 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    8
  2880 ;; This function calls:
  2881 ;;		___lwdiv
  2882 ;;		___lwmod
  2883 ;;		_display_matrix
  2884 ;;		_encode
  2885 ;; This function is called by:
  2886 ;;		_scroll
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text3
  2891  000D7A                     __ptext3:
  2892                           	opt stack 0
  2893  000D7A                     _display_scroll:
  2894                           	opt stack 21
  2895                           
  2896                           ;incstack = 0
  2897                           ;display_scroll@column stored from wreg
  2898  000D7A  0100               	movlb	0	; () banked
  2899  000D7C  6F70               	movwf	display_scroll@column& (0+255),b
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;main.c: 1041: if (scroll_pointer + column < 16 || scroll_pointer + column >= 16 + scrol
      +                          l_char_pointer * 6 || (scroll_pointer + column - 16) % 6 == 5)display_matrix(column, 0x0
      +                          0);
  2903  000D7E  0100               	movlb	0	; () banked
  2904  000D80  5170               	movf	display_scroll@column& (0+255),w,b
  2905  000D82  2428               	addwf	_scroll_pointer,w,c
  2906  000D84  0100               	movlb	0	; () banked
  2907  000D86  6F69               	movwf	??_display_scroll& (0+255),b
  2908  000D88  0E00               	movlw	0
  2909  000D8A  2029               	addwfc	_scroll_pointer+1,w,c
  2910  000D8C  0100               	movlb	0	; () banked
  2911  000D8E  6F6A               	movwf	(??_display_scroll+1)& (0+255),b
  2912  000D90  0E10               	movlw	16
  2913  000D92  0100               	movlb	0	; () banked
  2914  000D94  5D69               	subwf	??_display_scroll& (0+255),w,b
  2915  000D96  0E00               	movlw	0
  2916  000D98  596A               	subwfb	(??_display_scroll+1)& (0+255),w,b
  2917  000D9A  A0D8               	btfss	status,0,c
  2918  000D9C  D039               	goto	l2495
  2919                           
  2920                           ; BSR set to: 0
  2921  000D9E  502E               	movf	_scroll_char_pointer,w,c
  2922  000DA0  0D06               	mullw	6
  2923  000DA2  0E10               	movlw	16
  2924  000DA4  26F3               	addwf	prodl,f,c
  2925  000DA6  0E00               	movlw	0
  2926  000DA8  22F4               	addwfc	prodh,f,c
  2927  000DAA  0100               	movlb	0	; () banked
  2928  000DAC  5170               	movf	display_scroll@column& (0+255),w,b
  2929  000DAE  2428               	addwf	_scroll_pointer,w,c
  2930  000DB0  0100               	movlb	0	; () banked
  2931  000DB2  6F69               	movwf	??_display_scroll& (0+255),b
  2932  000DB4  0E00               	movlw	0
  2933  000DB6  2029               	addwfc	_scroll_pointer+1,w,c
  2934  000DB8  0100               	movlb	0	; () banked
  2935  000DBA  6F6A               	movwf	(??_display_scroll+1)& (0+255),b
  2936  000DBC  50F3               	movf	prodl,w,c
  2937  000DBE  0100               	movlb	0	; () banked
  2938  000DC0  5D69               	subwf	??_display_scroll& (0+255),w,b
  2939  000DC2  50F4               	movf	prodh,w,c
  2940  000DC4  0100               	movlb	0	; () banked
  2941  000DC6  596A               	subwfb	(??_display_scroll+1)& (0+255),w,b
  2942  000DC8  B0D8               	btfsc	status,0,c
  2943  000DCA  D022               	goto	l2495
  2944                           
  2945                           ; BSR set to: 0
  2946  000DCC  0100               	movlb	0	; () banked
  2947  000DCE  5170               	movf	display_scroll@column& (0+255),w,b
  2948  000DD0  2428               	addwf	_scroll_pointer,w,c
  2949  000DD2  0100               	movlb	0	; () banked
  2950  000DD4  6F69               	movwf	??_display_scroll& (0+255),b
  2951  000DD6  0E00               	movlw	0
  2952  000DD8  2029               	addwfc	_scroll_pointer+1,w,c
  2953  000DDA  0100               	movlb	0	; () banked
  2954  000DDC  6F6A               	movwf	(??_display_scroll+1)& (0+255),b
  2955  000DDE  0EF0               	movlw	240
  2956  000DE0  0100               	movlb	0	; () banked
  2957  000DE2  2569               	addwf	??_display_scroll& (0+255),w,b
  2958  000DE4  0100               	movlb	0	; () banked
  2959  000DE6  6F60               	movwf	___lwmod@dividend& (0+255),b
  2960  000DE8  0EFF               	movlw	255
  2961  000DEA  0100               	movlb	0	; () banked
  2962  000DEC  216A               	addwfc	(??_display_scroll+1)& (0+255),w,b
  2963  000DEE  0100               	movlb	0	; () banked
  2964  000DF0  6F61               	movwf	(___lwmod@dividend+1)& (0+255),b
  2965  000DF2  0E00               	movlw	0
  2966  000DF4  0100               	movlb	0	; () banked
  2967  000DF6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  2968  000DF8  0E06               	movlw	6
  2969  000DFA  0100               	movlb	0	; () banked
  2970  000DFC  6F62               	movwf	___lwmod@divisor& (0+255),b
  2971  000DFE  EC5E  F00A         	call	___lwmod	;wreg free
  2972  000E02  0100               	movlb	0	; () banked
  2973  000E04  5160               	movf	?___lwmod& (0+255),w,b
  2974  000E06  0A05               	xorlw	5
  2975  000E08  0100               	movlb	0	; () banked
  2976  000E0A  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
  2977  000E0C  A4D8               	btfss	status,2,c
  2978  000E0E  D008               	goto	l2497
  2979  000E10                     l2495:
  2980                           
  2981                           ; BSR set to: 0
  2982  000E10  0E00               	movlw	0
  2983  000E12  0100               	movlb	0	; () banked
  2984  000E14  6F67               	movwf	display_matrix@data& (0+255),b
  2985  000E16  0100               	movlb	0	; () banked
  2986  000E18  5170               	movf	display_scroll@column& (0+255),w,b
  2987  000E1A  EC40  F00C         	call	_display_matrix
  2988  000E1E  0012               	return	
  2989  000E20                     l2497:
  2990                           
  2991                           ;main.c: 1042: else display_matrix(column, ~(pattern[encode(scroll_char[(scroll_pointer 
      +                          + column - 16) / 6])][(scroll_pointer + column - 16) % 6]));
  2992  000E20  0100               	movlb	0	; () banked
  2993  000E22  5170               	movf	display_scroll@column& (0+255),w,b
  2994  000E24  2428               	addwf	_scroll_pointer,w,c
  2995  000E26  0100               	movlb	0	; () banked
  2996  000E28  6F69               	movwf	??_display_scroll& (0+255),b
  2997  000E2A  0E00               	movlw	0
  2998  000E2C  2029               	addwfc	_scroll_pointer+1,w,c
  2999  000E2E  0100               	movlb	0	; () banked
  3000  000E30  6F6A               	movwf	(??_display_scroll+1)& (0+255),b
  3001  000E32  0EF0               	movlw	240
  3002  000E34  0100               	movlb	0	; () banked
  3003  000E36  2569               	addwf	??_display_scroll& (0+255),w,b
  3004  000E38  0100               	movlb	0	; () banked
  3005  000E3A  6F60               	movwf	___lwdiv@dividend& (0+255),b
  3006  000E3C  0EFF               	movlw	255
  3007  000E3E  0100               	movlb	0	; () banked
  3008  000E40  216A               	addwfc	(??_display_scroll+1)& (0+255),w,b
  3009  000E42  0100               	movlb	0	; () banked
  3010  000E44  6F61               	movwf	(___lwdiv@dividend+1)& (0+255),b
  3011  000E46  0E00               	movlw	0
  3012  000E48  0100               	movlb	0	; () banked
  3013  000E4A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3014  000E4C  0E06               	movlw	6
  3015  000E4E  0100               	movlb	0	; () banked
  3016  000E50  6F62               	movwf	___lwdiv@divisor& (0+255),b
  3017  000E52  ECAE  F009         	call	___lwdiv	;wreg free
  3018  000E56  0104               	movlb	4	; () banked
  3019  000E58  0E00               	movlw	low _scroll_char
  3020  000E5A  0100               	movlb	0	; () banked
  3021  000E5C  2560               	addwf	?___lwdiv& (0+255),w,b
  3022  000E5E  6ED9               	movwf	fsr2l,c
  3023  000E60  0104               	movlb	4	; () banked
  3024  000E62  0E04               	movlw	high _scroll_char
  3025  000E64  0100               	movlb	0	; () banked
  3026  000E66  2161               	addwfc	(?___lwdiv+1)& (0+255),w,b
  3027  000E68  6EDA               	movwf	fsr2h,c
  3028  000E6A  50DF               	movf	indf2,w,c
  3029  000E6C  ECF7  F00B         	call	_encode
  3030  000E70  0100               	movlb	0	; () banked
  3031  000E72  6F6B               	movwf	(??_display_scroll+2)& (0+255),b
  3032  000E74  0100               	movlb	0	; () banked
  3033  000E76  516B               	movf	(??_display_scroll+2)& (0+255),w,b
  3034  000E78  0D05               	mullw	5
  3035  000E7A  0EFB               	movlw	low _pattern
  3036  000E7C  0100               	movlb	0	; () banked
  3037  000E7E  6F6C               	movwf	(??_display_scroll+3)& (0+255),b
  3038  000E80  0E08               	movlw	high _pattern
  3039  000E82  6F6D               	movwf	(??_display_scroll+4)& (0+255),b
  3040  000E84  50F3               	movf	prodl,w,c
  3041  000E86  0100               	movlb	0	; () banked
  3042  000E88  276C               	addwf	(??_display_scroll+3)& (0+255),f,b
  3043  000E8A  50F4               	movf	prodh,w,c
  3044  000E8C  0100               	movlb	0	; () banked
  3045  000E8E  236D               	addwfc	(??_display_scroll+4)& (0+255),f,b
  3046  000E90  0100               	movlb	0	; () banked
  3047  000E92  5170               	movf	display_scroll@column& (0+255),w,b
  3048  000E94  2428               	addwf	_scroll_pointer,w,c
  3049  000E96  0100               	movlb	0	; () banked
  3050  000E98  6F6E               	movwf	(??_display_scroll+5)& (0+255),b
  3051  000E9A  0E00               	movlw	0
  3052  000E9C  2029               	addwfc	_scroll_pointer+1,w,c
  3053  000E9E  0100               	movlb	0	; () banked
  3054  000EA0  6F6F               	movwf	(??_display_scroll+6)& (0+255),b
  3055  000EA2  0EF0               	movlw	240
  3056  000EA4  0100               	movlb	0	; () banked
  3057  000EA6  256E               	addwf	(??_display_scroll+5)& (0+255),w,b
  3058  000EA8  0100               	movlb	0	; () banked
  3059  000EAA  6F60               	movwf	___lwmod@dividend& (0+255),b
  3060  000EAC  0EFF               	movlw	255
  3061  000EAE  0100               	movlb	0	; () banked
  3062  000EB0  216F               	addwfc	(??_display_scroll+6)& (0+255),w,b
  3063  000EB2  0100               	movlb	0	; () banked
  3064  000EB4  6F61               	movwf	(___lwmod@dividend+1)& (0+255),b
  3065  000EB6  0E00               	movlw	0
  3066  000EB8  0100               	movlb	0	; () banked
  3067  000EBA  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  3068  000EBC  0E06               	movlw	6
  3069  000EBE  0100               	movlb	0	; () banked
  3070  000EC0  6F62               	movwf	___lwmod@divisor& (0+255),b
  3071  000EC2  EC5E  F00A         	call	___lwmod	;wreg free
  3072  000EC6  0100               	movlb	0	; () banked
  3073  000EC8  5160               	movf	?___lwmod& (0+255),w,b
  3074  000ECA  0100               	movlb	0	; () banked
  3075  000ECC  256C               	addwf	(??_display_scroll+3)& (0+255),w,b
  3076  000ECE  6ED9               	movwf	fsr2l,c
  3077  000ED0  0100               	movlb	0	; () banked
  3078  000ED2  5161               	movf	(?___lwmod+1)& (0+255),w,b
  3079  000ED4  0100               	movlb	0	; () banked
  3080  000ED6  216D               	addwfc	(??_display_scroll+4)& (0+255),w,b
  3081  000ED8  6EDA               	movwf	fsr2h,c
  3082  000EDA  50DF               	movf	indf2,w,c
  3083  000EDC  0AFF               	xorlw	255
  3084  000EDE  0100               	movlb	0	; () banked
  3085  000EE0  6F67               	movwf	display_matrix@data& (0+255),b
  3086  000EE2  0100               	movlb	0	; () banked
  3087  000EE4  5170               	movf	display_scroll@column& (0+255),w,b
  3088  000EE6  EC40  F00C         	call	_display_matrix
  3089  000EEA  0012               	return	
  3090  000EEC                     __end_of_display_scroll:
  3091                           	opt stack 0
  3092                           tblptru	equ	0xFF8
  3093                           tblptrh	equ	0xFF7
  3094                           tblptrl	equ	0xFF6
  3095                           tablat	equ	0xFF5
  3096                           prodh	equ	0xFF4
  3097                           prodl	equ	0xFF3
  3098                           intcon	equ	0xFF2
  3099                           intcon2	equ	0xFF1
  3100                           postinc0	equ	0xFEE
  3101                           wreg	equ	0xFE8
  3102                           indf1	equ	0xFE7
  3103                           postinc1	equ	0xFE6
  3104                           postdec1	equ	0xFE5
  3105                           fsr1h	equ	0xFE2
  3106                           fsr1l	equ	0xFE1
  3107                           indf2	equ	0xFDF
  3108                           postinc2	equ	0xFDE
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function ___lwmod *****************
  3114 ;; Defined at:
  3115 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  dividend        2    0[BANK0 ] unsigned int 
  3118 ;;  divisor         2    2[BANK0 ] unsigned int 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  counter         1    4[BANK0 ] unsigned char 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  2    0[BANK0 ] unsigned int 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;Total ram usage:        5 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    6
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_display_scroll
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text4
  3145  0014BC                     __ptext4:
  3146                           	opt stack 0
  3147  0014BC                     ___lwmod:
  3148                           	opt stack 22
  3149                           
  3150                           ;incstack = 0
  3151  0014BC  0100               	movlb	0	; () banked
  3152  0014BE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3153  0014C0  1162               	iorwf	___lwmod@divisor& (0+255),w,b
  3154  0014C2  B4D8               	btfsc	status,2,c
  3155  0014C4  D026               	goto	l852
  3156                           
  3157                           ; BSR set to: 0
  3158  0014C6  0E01               	movlw	1
  3159  0014C8  0100               	movlb	0	; () banked
  3160  0014CA  6F64               	movwf	___lwmod@counter& (0+255),b
  3161  0014CC  D006               	goto	l2479
  3162  0014CE                     l2477:
  3163                           
  3164                           ; BSR set to: 0
  3165  0014CE  0100               	movlb	0	; () banked
  3166  0014D0  90D8               	bcf	status,0,c
  3167  0014D2  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  3168  0014D4  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3169  0014D6  0100               	movlb	0	; () banked
  3170  0014D8  2B64               	incf	___lwmod@counter& (0+255),f,b
  3171  0014DA                     l2479:
  3172                           
  3173                           ; BSR set to: 0
  3174  0014DA  0100               	movlb	0	; () banked
  3175  0014DC  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3176  0014DE  D7F7               	goto	l2477
  3177  0014E0                     l2481:
  3178                           
  3179                           ; BSR set to: 0
  3180  0014E0  0100               	movlb	0	; () banked
  3181  0014E2  5162               	movf	___lwmod@divisor& (0+255),w,b
  3182  0014E4  0100               	movlb	0	; () banked
  3183  0014E6  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  3184  0014E8  0100               	movlb	0	; () banked
  3185  0014EA  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3186  0014EC  0100               	movlb	0	; () banked
  3187  0014EE  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3188  0014F0  A0D8               	btfss	status,0,c
  3189  0014F2  D008               	goto	l2485
  3190                           
  3191                           ; BSR set to: 0
  3192  0014F4  0100               	movlb	0	; () banked
  3193  0014F6  5162               	movf	___lwmod@divisor& (0+255),w,b
  3194  0014F8  0100               	movlb	0	; () banked
  3195  0014FA  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  3196  0014FC  0100               	movlb	0	; () banked
  3197  0014FE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3198  001500  0100               	movlb	0	; () banked
  3199  001502  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3200  001504                     l2485:
  3201                           
  3202                           ; BSR set to: 0
  3203  001504  0100               	movlb	0	; () banked
  3204  001506  90D8               	bcf	status,0,c
  3205  001508  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3206  00150A  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  3207                           
  3208                           ; BSR set to: 0
  3209  00150C  0100               	movlb	0	; () banked
  3210  00150E  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  3211  001510  D7E7               	goto	l2481
  3212  001512                     l852:
  3213                           
  3214                           ; BSR set to: 0
  3215  001512  C060  F060         	movff	___lwmod@dividend,?___lwmod
  3216  001516  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  3217                           
  3218                           ; BSR set to: 0
  3219  00151A  0012               	return	
  3220  00151C                     __end_of___lwmod:
  3221                           	opt stack 0
  3222                           tblptru	equ	0xFF8
  3223                           tblptrh	equ	0xFF7
  3224                           tblptrl	equ	0xFF6
  3225                           tablat	equ	0xFF5
  3226                           prodh	equ	0xFF4
  3227                           prodl	equ	0xFF3
  3228                           intcon	equ	0xFF2
  3229                           intcon2	equ	0xFF1
  3230                           postinc0	equ	0xFEE
  3231                           wreg	equ	0xFE8
  3232                           indf1	equ	0xFE7
  3233                           postinc1	equ	0xFE6
  3234                           postdec1	equ	0xFE5
  3235                           fsr1h	equ	0xFE2
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           postinc2	equ	0xFDE
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function ___lwdiv *****************
  3244 ;; Defined at:
  3245 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  dividend        2    0[BANK0 ] unsigned int 
  3248 ;;  divisor         2    2[BANK0 ] unsigned int 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  quotient        2    5[BANK0 ] unsigned int 
  3251 ;;  counter         1    4[BANK0 ] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2    0[BANK0 ] unsigned int 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3261 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;Total ram usage:        7 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    6
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_display_scroll
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text5
  3276  00135C                     __ptext5:
  3277                           	opt stack 0
  3278  00135C                     ___lwdiv:
  3279                           	opt stack 22
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;incstack = 0
  3283  00135C  0E00               	movlw	0
  3284  00135E  0100               	movlb	0	; () banked
  3285  001360  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3286  001362  0E00               	movlw	0
  3287  001364  0100               	movlb	0	; () banked
  3288  001366  6F65               	movwf	___lwdiv@quotient& (0+255),b
  3289                           
  3290                           ; BSR set to: 0
  3291  001368  0100               	movlb	0	; () banked
  3292  00136A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3293  00136C  1162               	iorwf	___lwdiv@divisor& (0+255),w,b
  3294  00136E  B4D8               	btfsc	status,2,c
  3295  001370  D02C               	goto	l842
  3296                           
  3297                           ; BSR set to: 0
  3298  001372  0E01               	movlw	1
  3299  001374  0100               	movlb	0	; () banked
  3300  001376  6F64               	movwf	___lwdiv@counter& (0+255),b
  3301  001378  D006               	goto	l2459
  3302  00137A                     l2457:
  3303                           
  3304                           ; BSR set to: 0
  3305  00137A  0100               	movlb	0	; () banked
  3306  00137C  90D8               	bcf	status,0,c
  3307  00137E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  3308  001380  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3309  001382  0100               	movlb	0	; () banked
  3310  001384  2B64               	incf	___lwdiv@counter& (0+255),f,b
  3311  001386                     l2459:
  3312                           
  3313                           ; BSR set to: 0
  3314  001386  0100               	movlb	0	; () banked
  3315  001388  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3316  00138A  D7F7               	goto	l2457
  3317  00138C                     l2461:
  3318                           
  3319                           ; BSR set to: 0
  3320  00138C  0100               	movlb	0	; () banked
  3321  00138E  90D8               	bcf	status,0,c
  3322  001390  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  3323  001392  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3324                           
  3325                           ; BSR set to: 0
  3326  001394  0100               	movlb	0	; () banked
  3327  001396  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3328  001398  0100               	movlb	0	; () banked
  3329  00139A  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  3330  00139C  0100               	movlb	0	; () banked
  3331  00139E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3332  0013A0  0100               	movlb	0	; () banked
  3333  0013A2  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3334  0013A4  A0D8               	btfss	status,0,c
  3335  0013A6  D00A               	goto	l2469
  3336                           
  3337                           ; BSR set to: 0
  3338  0013A8  0100               	movlb	0	; () banked
  3339  0013AA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3340  0013AC  0100               	movlb	0	; () banked
  3341  0013AE  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  3342  0013B0  0100               	movlb	0	; () banked
  3343  0013B2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3344  0013B4  0100               	movlb	0	; () banked
  3345  0013B6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3346                           
  3347                           ; BSR set to: 0
  3348  0013B8  0100               	movlb	0	; () banked
  3349  0013BA  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  3350  0013BC                     l2469:
  3351                           
  3352                           ; BSR set to: 0
  3353  0013BC  0100               	movlb	0	; () banked
  3354  0013BE  90D8               	bcf	status,0,c
  3355  0013C0  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3356  0013C2  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  3357                           
  3358                           ; BSR set to: 0
  3359  0013C4  0100               	movlb	0	; () banked
  3360  0013C6  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  3361  0013C8  D7E1               	goto	l2461
  3362  0013CA                     l842:
  3363                           
  3364                           ; BSR set to: 0
  3365  0013CA  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  3366  0013CE  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3367                           
  3368                           ; BSR set to: 0
  3369  0013D2  0012               	return	
  3370  0013D4                     __end_of___lwdiv:
  3371                           	opt stack 0
  3372                           tblptru	equ	0xFF8
  3373                           tblptrh	equ	0xFF7
  3374                           tblptrl	equ	0xFF6
  3375                           tablat	equ	0xFF5
  3376                           prodh	equ	0xFF4
  3377                           prodl	equ	0xFF3
  3378                           intcon	equ	0xFF2
  3379                           intcon2	equ	0xFF1
  3380                           postinc0	equ	0xFEE
  3381                           wreg	equ	0xFE8
  3382                           indf1	equ	0xFE7
  3383                           postinc1	equ	0xFE6
  3384                           postdec1	equ	0xFE5
  3385                           fsr1h	equ	0xFE2
  3386                           fsr1l	equ	0xFE1
  3387                           indf2	equ	0xFDF
  3388                           postinc2	equ	0xFDE
  3389                           fsr2h	equ	0xFDA
  3390                           fsr2l	equ	0xFD9
  3391                           status	equ	0xFD8
  3392                           
  3393 ;; *************** function _ringbuf_init *****************
  3394 ;; Defined at:
  3395 ;;		line 998 in file "main.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  3398 ;;		 -> tx_buf(5), 
  3399 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  3400 ;;		 -> main@buf(255), 
  3401 ;;  bufsize         1    4[BANK0 ] unsigned char 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3413 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;Total ram usage:        5 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    6
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text6
  3428  001578                     __ptext6:
  3429                           	opt stack 0
  3430  001578                     _ringbuf_init:
  3431                           	opt stack 24
  3432                           
  3433                           ;main.c: 999: rb->buf = internal_buf;
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;incstack = 0
  3437  001578  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  3438  00157C  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  3439  001580  0100               	movlb	0	; () banked
  3440  001582  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  3441  001586  0100               	movlb	0	; () banked
  3442  001588  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;main.c: 1000: rb->size = bufsize;
  3446  00158C  0100               	movlb	0	; () banked
  3447  00158E  EE20 F002          	lfsr	2,2
  3448  001592  0100               	movlb	0	; () banked
  3449  001594  5160               	movf	ringbuf_init@rb& (0+255),w,b
  3450  001596  26D9               	addwf	fsr2l,f,c
  3451  001598  0100               	movlb	0	; () banked
  3452  00159A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  3453  00159C  22DA               	addwfc	fsr2h,f,c
  3454  00159E  0100               	movlb	0	; () banked
  3455  0015A0  C064  FFDF         	movff	ringbuf_init@bufsize,indf2
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;main.c: 1001: rb->head = 0;
  3459  0015A4  0100               	movlb	0	; () banked
  3460  0015A6  EE20 F003          	lfsr	2,3
  3461  0015AA  0100               	movlb	0	; () banked
  3462  0015AC  5160               	movf	ringbuf_init@rb& (0+255),w,b
  3463  0015AE  26D9               	addwf	fsr2l,f,c
  3464  0015B0  0100               	movlb	0	; () banked
  3465  0015B2  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  3466  0015B4  22DA               	addwfc	fsr2h,f,c
  3467  0015B6  0E00               	movlw	0
  3468  0015B8  6EDF               	movwf	indf2,c
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;main.c: 1002: rb->tail = 0;
  3472  0015BA  0100               	movlb	0	; () banked
  3473  0015BC  EE20 F004          	lfsr	2,4
  3474  0015C0  0100               	movlb	0	; () banked
  3475  0015C2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  3476  0015C4  26D9               	addwf	fsr2l,f,c
  3477  0015C6  0100               	movlb	0	; () banked
  3478  0015C8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  3479  0015CA  22DA               	addwfc	fsr2h,f,c
  3480  0015CC  0E00               	movlw	0
  3481  0015CE  6EDF               	movwf	indf2,c
  3482                           
  3483                           ; BSR set to: 0
  3484  0015D0  0012               	return	
  3485  0015D2                     __end_of_ringbuf_init:
  3486                           	opt stack 0
  3487                           tblptru	equ	0xFF8
  3488                           tblptrh	equ	0xFF7
  3489                           tblptrl	equ	0xFF6
  3490                           tablat	equ	0xFF5
  3491                           prodh	equ	0xFF4
  3492                           prodl	equ	0xFF3
  3493                           intcon	equ	0xFF2
  3494                           intcon2	equ	0xFF1
  3495                           postinc0	equ	0xFEE
  3496                           wreg	equ	0xFE8
  3497                           indf1	equ	0xFE7
  3498                           postinc1	equ	0xFE6
  3499                           postdec1	equ	0xFE5
  3500                           fsr1h	equ	0xFE2
  3501                           fsr1l	equ	0xFE1
  3502                           indf2	equ	0xFDF
  3503                           postinc2	equ	0xFDE
  3504                           postdec2	equ	0xFDD
  3505                           fsr2h	equ	0xFDA
  3506                           fsr2l	equ	0xFD9
  3507                           status	equ	0xFD8
  3508                           
  3509 ;; *************** function _print *****************
  3510 ;; Defined at:
  3511 ;;		line 1117 in file "main.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  value           1    wreg     unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  value           1   11[BANK0 ] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;		None               void
  3518 ;; Registers used:
  3519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    9
  3532 ;; This function calls:
  3533 ;;		_display_print
  3534 ;; This function is called by:
  3535 ;;		_main
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text7
  3540  00182E                     __ptext7:
  3541                           	opt stack 0
  3542  00182E                     _print:
  3543                           	opt stack 21
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;incstack = 0
  3547                           ;print@value stored from wreg
  3548  00182E  0100               	movlb	0	; () banked
  3549  001830  6F6B               	movwf	print@value& (0+255),b
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;main.c: 1118: if (value) {
  3553  001832  0100               	movlb	0	; () banked
  3554  001834  516B               	movf	print@value& (0+255),w,b
  3555  001836  B4D8               	btfsc	status,2,c
  3556  001838  D003               	goto	l2587
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;main.c: 1119: printON = 1;
  3560  00183A  0E01               	movlw	1
  3561  00183C  6E2C               	movwf	_printON,c
  3562                           
  3563                           ;main.c: 1120: } else {
  3564  00183E  0012               	return	
  3565  001840                     l2587:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;main.c: 1121: printON = 0;
  3569  001840  0E00               	movlw	0
  3570  001842  6E2C               	movwf	_printON,c
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;main.c: 1122: display_print(0x10);
  3574  001844  0E10               	movlw	16
  3575  001846  EC80  F003         	call	_display_print
  3576  00184A  0012               	return	
  3577  00184C                     __end_of_print:
  3578                           	opt stack 0
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           prodh	equ	0xFF4
  3584                           prodl	equ	0xFF3
  3585                           intcon	equ	0xFF2
  3586                           intcon2	equ	0xFF1
  3587                           postinc0	equ	0xFEE
  3588                           wreg	equ	0xFE8
  3589                           indf1	equ	0xFE7
  3590                           postinc1	equ	0xFE6
  3591                           postdec1	equ	0xFE5
  3592                           fsr1h	equ	0xFE2
  3593                           fsr1l	equ	0xFE1
  3594                           indf2	equ	0xFDF
  3595                           postinc2	equ	0xFDE
  3596                           postdec2	equ	0xFDD
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _display_print *****************
  3602 ;; Defined at:
  3603 ;;		line 1046 in file "main.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  column          1    wreg     unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  column          1   10[BANK0 ] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;		None               void
  3610 ;; Registers used:
  3611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;Total ram usage:        2 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    8
  3624 ;; This function calls:
  3625 ;;		_display_matrix
  3626 ;;		_encode
  3627 ;; This function is called by:
  3628 ;;		_print
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text8
  3633  000700                     __ptext8:
  3634                           	opt stack 0
  3635  000700                     _display_print:
  3636                           	opt stack 21
  3637                           
  3638                           ;incstack = 0
  3639                           ;display_print@column stored from wreg
  3640  000700  0100               	movlb	0	; () banked
  3641  000702  6F6A               	movwf	display_print@column& (0+255),b
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;main.c: 1047: if (column == 2)display_matrix(column, ~(pattern[encode(print_char[0])][0
      +                          ]));
  3645  000704  0100               	movlb	0	; () banked
  3646  000706  516A               	movf	display_print@column& (0+255),w,b
  3647  000708  0A02               	xorlw	2
  3648  00070A  A4D8               	btfss	status,2,c
  3649  00070C  D017               	goto	l2503
  3650                           
  3651                           ; BSR set to: 0
  3652  00070E  5026               	movf	_print_char,w,c
  3653  000710  ECF7  F00B         	call	_encode
  3654  000714  0100               	movlb	0	; () banked
  3655  000716  6F69               	movwf	??_display_print& (0+255),b
  3656  000718  0100               	movlb	0	; () banked
  3657  00071A  5169               	movf	??_display_print& (0+255),w,b
  3658  00071C  0D05               	mullw	5
  3659  00071E  0EFB               	movlw	low _pattern
  3660  000720  24F3               	addwf	prodl,w,c
  3661  000722  6ED9               	movwf	fsr2l,c
  3662  000724  0E08               	movlw	high _pattern
  3663  000726  20F4               	addwfc	prodh,w,c
  3664  000728  6EDA               	movwf	fsr2h,c
  3665  00072A  50DF               	movf	indf2,w,c
  3666  00072C  0AFF               	xorlw	255
  3667  00072E  0100               	movlb	0	; () banked
  3668  000730  6F67               	movwf	display_matrix@data& (0+255),b
  3669  000732  0100               	movlb	0	; () banked
  3670  000734  516A               	movf	display_print@column& (0+255),w,b
  3671  000736  EC40  F00C         	call	_display_matrix
  3672  00073A  0012               	return	
  3673  00073C                     l2503:
  3674                           
  3675                           ;main.c: 1048: else if (column == 3)display_matrix(column, ~(pattern[encode(print_char[0
      +                          ])][1]));
  3676  00073C  0100               	movlb	0	; () banked
  3677  00073E  516A               	movf	display_print@column& (0+255),w,b
  3678  000740  0A03               	xorlw	3
  3679  000742  A4D8               	btfss	status,2,c
  3680  000744  D01B               	goto	l2507
  3681                           
  3682                           ; BSR set to: 0
  3683  000746  5026               	movf	_print_char,w,c
  3684  000748  ECF7  F00B         	call	_encode
  3685  00074C  0100               	movlb	0	; () banked
  3686  00074E  6F69               	movwf	??_display_print& (0+255),b
  3687  000750  0100               	movlb	0	; () banked
  3688  000752  5169               	movf	??_display_print& (0+255),w,b
  3689  000754  0D05               	mullw	5
  3690  000756  0E01               	movlw	1
  3691  000758  26F3               	addwf	prodl,f,c
  3692  00075A  0E00               	movlw	0
  3693  00075C  22F4               	addwfc	prodh,f,c
  3694  00075E  0EFB               	movlw	low _pattern
  3695  000760  24F3               	addwf	prodl,w,c
  3696  000762  6ED9               	movwf	fsr2l,c
  3697  000764  0E08               	movlw	high _pattern
  3698  000766  20F4               	addwfc	prodh,w,c
  3699  000768  6EDA               	movwf	fsr2h,c
  3700  00076A  50DF               	movf	indf2,w,c
  3701  00076C  0AFF               	xorlw	255
  3702  00076E  0100               	movlb	0	; () banked
  3703  000770  6F67               	movwf	display_matrix@data& (0+255),b
  3704  000772  0100               	movlb	0	; () banked
  3705  000774  516A               	movf	display_print@column& (0+255),w,b
  3706  000776  EC40  F00C         	call	_display_matrix
  3707  00077A  0012               	return	
  3708  00077C                     l2507:
  3709                           
  3710                           ;main.c: 1049: else if (column == 4)display_matrix(column, ~(pattern[encode(print_char[0
      +                          ])][2]));
  3711  00077C  0100               	movlb	0	; () banked
  3712  00077E  516A               	movf	display_print@column& (0+255),w,b
  3713  000780  0A04               	xorlw	4
  3714  000782  A4D8               	btfss	status,2,c
  3715  000784  D01B               	goto	l2511
  3716                           
  3717                           ; BSR set to: 0
  3718  000786  5026               	movf	_print_char,w,c
  3719  000788  ECF7  F00B         	call	_encode
  3720  00078C  0100               	movlb	0	; () banked
  3721  00078E  6F69               	movwf	??_display_print& (0+255),b
  3722  000790  0100               	movlb	0	; () banked
  3723  000792  5169               	movf	??_display_print& (0+255),w,b
  3724  000794  0D05               	mullw	5
  3725  000796  0E02               	movlw	2
  3726  000798  26F3               	addwf	prodl,f,c
  3727  00079A  0E00               	movlw	0
  3728  00079C  22F4               	addwfc	prodh,f,c
  3729  00079E  0EFB               	movlw	low _pattern
  3730  0007A0  24F3               	addwf	prodl,w,c
  3731  0007A2  6ED9               	movwf	fsr2l,c
  3732  0007A4  0E08               	movlw	high _pattern
  3733  0007A6  20F4               	addwfc	prodh,w,c
  3734  0007A8  6EDA               	movwf	fsr2h,c
  3735  0007AA  50DF               	movf	indf2,w,c
  3736  0007AC  0AFF               	xorlw	255
  3737  0007AE  0100               	movlb	0	; () banked
  3738  0007B0  6F67               	movwf	display_matrix@data& (0+255),b
  3739  0007B2  0100               	movlb	0	; () banked
  3740  0007B4  516A               	movf	display_print@column& (0+255),w,b
  3741  0007B6  EC40  F00C         	call	_display_matrix
  3742  0007BA  0012               	return	
  3743  0007BC                     l2511:
  3744                           
  3745                           ;main.c: 1050: else if (column == 5)display_matrix(column, ~(pattern[encode(print_char[0
      +                          ])][3]));
  3746  0007BC  0100               	movlb	0	; () banked
  3747  0007BE  516A               	movf	display_print@column& (0+255),w,b
  3748  0007C0  0A05               	xorlw	5
  3749  0007C2  A4D8               	btfss	status,2,c
  3750  0007C4  D01B               	goto	l2515
  3751                           
  3752                           ; BSR set to: 0
  3753  0007C6  5026               	movf	_print_char,w,c
  3754  0007C8  ECF7  F00B         	call	_encode
  3755  0007CC  0100               	movlb	0	; () banked
  3756  0007CE  6F69               	movwf	??_display_print& (0+255),b
  3757  0007D0  0100               	movlb	0	; () banked
  3758  0007D2  5169               	movf	??_display_print& (0+255),w,b
  3759  0007D4  0D05               	mullw	5
  3760  0007D6  0E03               	movlw	3
  3761  0007D8  26F3               	addwf	prodl,f,c
  3762  0007DA  0E00               	movlw	0
  3763  0007DC  22F4               	addwfc	prodh,f,c
  3764  0007DE  0EFB               	movlw	low _pattern
  3765  0007E0  24F3               	addwf	prodl,w,c
  3766  0007E2  6ED9               	movwf	fsr2l,c
  3767  0007E4  0E08               	movlw	high _pattern
  3768  0007E6  20F4               	addwfc	prodh,w,c
  3769  0007E8  6EDA               	movwf	fsr2h,c
  3770  0007EA  50DF               	movf	indf2,w,c
  3771  0007EC  0AFF               	xorlw	255
  3772  0007EE  0100               	movlb	0	; () banked
  3773  0007F0  6F67               	movwf	display_matrix@data& (0+255),b
  3774  0007F2  0100               	movlb	0	; () banked
  3775  0007F4  516A               	movf	display_print@column& (0+255),w,b
  3776  0007F6  EC40  F00C         	call	_display_matrix
  3777  0007FA  0012               	return	
  3778  0007FC                     l2515:
  3779                           
  3780                           ;main.c: 1051: else if (column == 6)display_matrix(column, ~(pattern[encode(print_char[0
      +                          ])][4]));
  3781  0007FC  0100               	movlb	0	; () banked
  3782  0007FE  516A               	movf	display_print@column& (0+255),w,b
  3783  000800  0A06               	xorlw	6
  3784  000802  A4D8               	btfss	status,2,c
  3785  000804  D01B               	goto	l2519
  3786                           
  3787                           ; BSR set to: 0
  3788  000806  5026               	movf	_print_char,w,c
  3789  000808  ECF7  F00B         	call	_encode
  3790  00080C  0100               	movlb	0	; () banked
  3791  00080E  6F69               	movwf	??_display_print& (0+255),b
  3792  000810  0100               	movlb	0	; () banked
  3793  000812  5169               	movf	??_display_print& (0+255),w,b
  3794  000814  0D05               	mullw	5
  3795  000816  0E04               	movlw	4
  3796  000818  26F3               	addwf	prodl,f,c
  3797  00081A  0E00               	movlw	0
  3798  00081C  22F4               	addwfc	prodh,f,c
  3799  00081E  0EFB               	movlw	low _pattern
  3800  000820  24F3               	addwf	prodl,w,c
  3801  000822  6ED9               	movwf	fsr2l,c
  3802  000824  0E08               	movlw	high _pattern
  3803  000826  20F4               	addwfc	prodh,w,c
  3804  000828  6EDA               	movwf	fsr2h,c
  3805  00082A  50DF               	movf	indf2,w,c
  3806  00082C  0AFF               	xorlw	255
  3807  00082E  0100               	movlb	0	; () banked
  3808  000830  6F67               	movwf	display_matrix@data& (0+255),b
  3809  000832  0100               	movlb	0	; () banked
  3810  000834  516A               	movf	display_print@column& (0+255),w,b
  3811  000836  EC40  F00C         	call	_display_matrix
  3812  00083A  0012               	return	
  3813  00083C                     l2519:
  3814                           
  3815                           ;main.c: 1052: else if (column == 9)display_matrix(column, ~(pattern[encode(print_char[1
      +                          ])][0]));
  3816  00083C  0100               	movlb	0	; () banked
  3817  00083E  516A               	movf	display_print@column& (0+255),w,b
  3818  000840  0A09               	xorlw	9
  3819  000842  A4D8               	btfss	status,2,c
  3820  000844  D017               	goto	l2523
  3821                           
  3822                           ; BSR set to: 0
  3823  000846  5027               	movf	_print_char+1,w,c
  3824  000848  ECF7  F00B         	call	_encode
  3825  00084C  0100               	movlb	0	; () banked
  3826  00084E  6F69               	movwf	??_display_print& (0+255),b
  3827  000850  0100               	movlb	0	; () banked
  3828  000852  5169               	movf	??_display_print& (0+255),w,b
  3829  000854  0D05               	mullw	5
  3830  000856  0EFB               	movlw	low _pattern
  3831  000858  24F3               	addwf	prodl,w,c
  3832  00085A  6ED9               	movwf	fsr2l,c
  3833  00085C  0E08               	movlw	high _pattern
  3834  00085E  20F4               	addwfc	prodh,w,c
  3835  000860  6EDA               	movwf	fsr2h,c
  3836  000862  50DF               	movf	indf2,w,c
  3837  000864  0AFF               	xorlw	255
  3838  000866  0100               	movlb	0	; () banked
  3839  000868  6F67               	movwf	display_matrix@data& (0+255),b
  3840  00086A  0100               	movlb	0	; () banked
  3841  00086C  516A               	movf	display_print@column& (0+255),w,b
  3842  00086E  EC40  F00C         	call	_display_matrix
  3843  000872  0012               	return	
  3844  000874                     l2523:
  3845                           
  3846                           ;main.c: 1053: else if (column == 10)display_matrix(column, ~(pattern[encode(print_char[
      +                          1])][1]));
  3847  000874  0100               	movlb	0	; () banked
  3848  000876  516A               	movf	display_print@column& (0+255),w,b
  3849  000878  0A0A               	xorlw	10
  3850  00087A  A4D8               	btfss	status,2,c
  3851  00087C  D01B               	goto	l2527
  3852                           
  3853                           ; BSR set to: 0
  3854  00087E  5027               	movf	_print_char+1,w,c
  3855  000880  ECF7  F00B         	call	_encode
  3856  000884  0100               	movlb	0	; () banked
  3857  000886  6F69               	movwf	??_display_print& (0+255),b
  3858  000888  0100               	movlb	0	; () banked
  3859  00088A  5169               	movf	??_display_print& (0+255),w,b
  3860  00088C  0D05               	mullw	5
  3861  00088E  0E01               	movlw	1
  3862  000890  26F3               	addwf	prodl,f,c
  3863  000892  0E00               	movlw	0
  3864  000894  22F4               	addwfc	prodh,f,c
  3865  000896  0EFB               	movlw	low _pattern
  3866  000898  24F3               	addwf	prodl,w,c
  3867  00089A  6ED9               	movwf	fsr2l,c
  3868  00089C  0E08               	movlw	high _pattern
  3869  00089E  20F4               	addwfc	prodh,w,c
  3870  0008A0  6EDA               	movwf	fsr2h,c
  3871  0008A2  50DF               	movf	indf2,w,c
  3872  0008A4  0AFF               	xorlw	255
  3873  0008A6  0100               	movlb	0	; () banked
  3874  0008A8  6F67               	movwf	display_matrix@data& (0+255),b
  3875  0008AA  0100               	movlb	0	; () banked
  3876  0008AC  516A               	movf	display_print@column& (0+255),w,b
  3877  0008AE  EC40  F00C         	call	_display_matrix
  3878  0008B2  0012               	return	
  3879  0008B4                     l2527:
  3880                           
  3881                           ;main.c: 1054: else if (column == 11)display_matrix(column, ~(pattern[encode(print_char[
      +                          1])][2]));
  3882  0008B4  0100               	movlb	0	; () banked
  3883  0008B6  516A               	movf	display_print@column& (0+255),w,b
  3884  0008B8  0A0B               	xorlw	11
  3885  0008BA  A4D8               	btfss	status,2,c
  3886  0008BC  D01B               	goto	l2531
  3887                           
  3888                           ; BSR set to: 0
  3889  0008BE  5027               	movf	_print_char+1,w,c
  3890  0008C0  ECF7  F00B         	call	_encode
  3891  0008C4  0100               	movlb	0	; () banked
  3892  0008C6  6F69               	movwf	??_display_print& (0+255),b
  3893  0008C8  0100               	movlb	0	; () banked
  3894  0008CA  5169               	movf	??_display_print& (0+255),w,b
  3895  0008CC  0D05               	mullw	5
  3896  0008CE  0E02               	movlw	2
  3897  0008D0  26F3               	addwf	prodl,f,c
  3898  0008D2  0E00               	movlw	0
  3899  0008D4  22F4               	addwfc	prodh,f,c
  3900  0008D6  0EFB               	movlw	low _pattern
  3901  0008D8  24F3               	addwf	prodl,w,c
  3902  0008DA  6ED9               	movwf	fsr2l,c
  3903  0008DC  0E08               	movlw	high _pattern
  3904  0008DE  20F4               	addwfc	prodh,w,c
  3905  0008E0  6EDA               	movwf	fsr2h,c
  3906  0008E2  50DF               	movf	indf2,w,c
  3907  0008E4  0AFF               	xorlw	255
  3908  0008E6  0100               	movlb	0	; () banked
  3909  0008E8  6F67               	movwf	display_matrix@data& (0+255),b
  3910  0008EA  0100               	movlb	0	; () banked
  3911  0008EC  516A               	movf	display_print@column& (0+255),w,b
  3912  0008EE  EC40  F00C         	call	_display_matrix
  3913  0008F2  0012               	return	
  3914  0008F4                     l2531:
  3915                           
  3916                           ;main.c: 1055: else if (column == 12)display_matrix(column, ~(pattern[encode(print_char[
      +                          1])][3]));
  3917  0008F4  0100               	movlb	0	; () banked
  3918  0008F6  516A               	movf	display_print@column& (0+255),w,b
  3919  0008F8  0A0C               	xorlw	12
  3920  0008FA  A4D8               	btfss	status,2,c
  3921  0008FC  D01B               	goto	l2535
  3922                           
  3923                           ; BSR set to: 0
  3924  0008FE  5027               	movf	_print_char+1,w,c
  3925  000900  ECF7  F00B         	call	_encode
  3926  000904  0100               	movlb	0	; () banked
  3927  000906  6F69               	movwf	??_display_print& (0+255),b
  3928  000908  0100               	movlb	0	; () banked
  3929  00090A  5169               	movf	??_display_print& (0+255),w,b
  3930  00090C  0D05               	mullw	5
  3931  00090E  0E03               	movlw	3
  3932  000910  26F3               	addwf	prodl,f,c
  3933  000912  0E00               	movlw	0
  3934  000914  22F4               	addwfc	prodh,f,c
  3935  000916  0EFB               	movlw	low _pattern
  3936  000918  24F3               	addwf	prodl,w,c
  3937  00091A  6ED9               	movwf	fsr2l,c
  3938  00091C  0E08               	movlw	high _pattern
  3939  00091E  20F4               	addwfc	prodh,w,c
  3940  000920  6EDA               	movwf	fsr2h,c
  3941  000922  50DF               	movf	indf2,w,c
  3942  000924  0AFF               	xorlw	255
  3943  000926  0100               	movlb	0	; () banked
  3944  000928  6F67               	movwf	display_matrix@data& (0+255),b
  3945  00092A  0100               	movlb	0	; () banked
  3946  00092C  516A               	movf	display_print@column& (0+255),w,b
  3947  00092E  EC40  F00C         	call	_display_matrix
  3948  000932  0012               	return	
  3949  000934                     l2535:
  3950                           
  3951                           ;main.c: 1056: else if (column == 13)display_matrix(column, ~(pattern[encode(print_char[
      +                          1])][4]));
  3952  000934  0100               	movlb	0	; () banked
  3953  000936  516A               	movf	display_print@column& (0+255),w,b
  3954  000938  0A0D               	xorlw	13
  3955  00093A  A4D8               	btfss	status,2,c
  3956  00093C  D01B               	goto	l2539
  3957                           
  3958                           ; BSR set to: 0
  3959  00093E  5027               	movf	_print_char+1,w,c
  3960  000940  ECF7  F00B         	call	_encode
  3961  000944  0100               	movlb	0	; () banked
  3962  000946  6F69               	movwf	??_display_print& (0+255),b
  3963  000948  0100               	movlb	0	; () banked
  3964  00094A  5169               	movf	??_display_print& (0+255),w,b
  3965  00094C  0D05               	mullw	5
  3966  00094E  0E04               	movlw	4
  3967  000950  26F3               	addwf	prodl,f,c
  3968  000952  0E00               	movlw	0
  3969  000954  22F4               	addwfc	prodh,f,c
  3970  000956  0EFB               	movlw	low _pattern
  3971  000958  24F3               	addwf	prodl,w,c
  3972  00095A  6ED9               	movwf	fsr2l,c
  3973  00095C  0E08               	movlw	high _pattern
  3974  00095E  20F4               	addwfc	prodh,w,c
  3975  000960  6EDA               	movwf	fsr2h,c
  3976  000962  50DF               	movf	indf2,w,c
  3977  000964  0AFF               	xorlw	255
  3978  000966  0100               	movlb	0	; () banked
  3979  000968  6F67               	movwf	display_matrix@data& (0+255),b
  3980  00096A  0100               	movlb	0	; () banked
  3981  00096C  516A               	movf	display_print@column& (0+255),w,b
  3982  00096E  EC40  F00C         	call	_display_matrix
  3983  000972  0012               	return	
  3984  000974                     l2539:
  3985                           
  3986                           ;main.c: 1057: else display_matrix(column, 0x00);
  3987  000974  0E00               	movlw	0
  3988  000976  0100               	movlb	0	; () banked
  3989  000978  6F67               	movwf	display_matrix@data& (0+255),b
  3990  00097A  0100               	movlb	0	; () banked
  3991  00097C  516A               	movf	display_print@column& (0+255),w,b
  3992  00097E  EC40  F00C         	call	_display_matrix
  3993  000982  0012               	return	
  3994  000984                     __end_of_display_print:
  3995                           	opt stack 0
  3996                           tblptru	equ	0xFF8
  3997                           tblptrh	equ	0xFF7
  3998                           tblptrl	equ	0xFF6
  3999                           tablat	equ	0xFF5
  4000                           prodh	equ	0xFF4
  4001                           prodl	equ	0xFF3
  4002                           intcon	equ	0xFF2
  4003                           intcon2	equ	0xFF1
  4004                           postinc0	equ	0xFEE
  4005                           wreg	equ	0xFE8
  4006                           indf1	equ	0xFE7
  4007                           postinc1	equ	0xFE6
  4008                           postdec1	equ	0xFE5
  4009                           fsr1h	equ	0xFE2
  4010                           fsr1l	equ	0xFE1
  4011                           indf2	equ	0xFDF
  4012                           postinc2	equ	0xFDE
  4013                           postdec2	equ	0xFDD
  4014                           fsr2h	equ	0xFDA
  4015                           fsr2l	equ	0xFD9
  4016                           status	equ	0xFD8
  4017                           
  4018 ;; *************** function _encode *****************
  4019 ;; Defined at:
  4020 ;;		line 1034 in file "main.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  asciicode       1    wreg     unsigned char 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  asciicode       1    0[BANK0 ] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      unsigned char 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;Total ram usage:        1 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    6
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_display_scroll
  4045 ;;		_display_print
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text9
  4050  0017EE                     __ptext9:
  4051                           	opt stack 0
  4052  0017EE                     _encode:
  4053                           	opt stack 22
  4054                           
  4055                           ;incstack = 0
  4056                           ;encode@asciicode stored from wreg
  4057  0017EE  0100               	movlb	0	; () banked
  4058  0017F0  6F60               	movwf	encode@asciicode& (0+255),b
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;main.c: 1035: if ((asciicode >= 0x20)&(asciicode <= 0x80)) return asciicode - 0x20;
  4062  0017F2  0E1F               	movlw	31
  4063  0017F4  0100               	movlb	0	; () banked
  4064  0017F6  6560               	cpfsgt	encode@asciicode& (0+255),b
  4065  0017F8  D009               	goto	l2441
  4066                           
  4067                           ; BSR set to: 0
  4068  0017FA  0E81               	movlw	129
  4069  0017FC  0100               	movlb	0	; () banked
  4070  0017FE  5D60               	subwf	encode@asciicode& (0+255),w,b
  4071  001800  B0D8               	btfsc	status,0,c
  4072  001802  D004               	goto	l2441
  4073                           
  4074                           ; BSR set to: 0
  4075  001804  0100               	movlb	0	; () banked
  4076  001806  5160               	movf	encode@asciicode& (0+255),w,b
  4077  001808  0FE0               	addlw	224
  4078  00180A  0012               	return	
  4079  00180C                     l2441:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;main.c: 1036: else return 0;
  4083  00180C  0E00               	movlw	0
  4084  00180E  0012               	return	
  4085  001810                     __end_of_encode:
  4086                           	opt stack 0
  4087                           tblptru	equ	0xFF8
  4088                           tblptrh	equ	0xFF7
  4089                           tblptrl	equ	0xFF6
  4090                           tablat	equ	0xFF5
  4091                           prodh	equ	0xFF4
  4092                           prodl	equ	0xFF3
  4093                           intcon	equ	0xFF2
  4094                           intcon2	equ	0xFF1
  4095                           postinc0	equ	0xFEE
  4096                           wreg	equ	0xFE8
  4097                           indf1	equ	0xFE7
  4098                           postinc1	equ	0xFE6
  4099                           postdec1	equ	0xFE5
  4100                           fsr1h	equ	0xFE2
  4101                           fsr1l	equ	0xFE1
  4102                           indf2	equ	0xFDF
  4103                           postinc2	equ	0xFDE
  4104                           postdec2	equ	0xFDD
  4105                           fsr2h	equ	0xFDA
  4106                           fsr2l	equ	0xFD9
  4107                           status	equ	0xFD8
  4108                           
  4109 ;; *************** function _display_matrix *****************
  4110 ;; Defined at:
  4111 ;;		line 1061 in file "main.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  column          1    wreg     unsigned char 
  4114 ;;  data            1    7[BANK0 ] unsigned char 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  column          1    8[BANK0 ] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;		None               void
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4126 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;Total ram usage:        2 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    7
  4133 ;; This function calls:
  4134 ;;		_matrix_column
  4135 ;; This function is called by:
  4136 ;;		_display_scroll
  4137 ;;		_display_print
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text10
  4142  001880                     __ptext10:
  4143                           	opt stack 0
  4144  001880                     _display_matrix:
  4145                           	opt stack 21
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;incstack = 0
  4149                           ;display_matrix@column stored from wreg
  4150  001880  0100               	movlb	0	; () banked
  4151  001882  6F68               	movwf	display_matrix@column& (0+255),b
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;main.c: 1062: LATA = 0x00;
  4155  001884  0E00               	movlw	0
  4156  001886  6E89               	movwf	3977,c	;volatile
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;main.c: 1063: matrix_column(column);
  4160  001888  0100               	movlb	0	; () banked
  4161  00188A  5168               	movf	display_matrix@column& (0+255),w,b
  4162  00188C  EC26  F00A         	call	_matrix_column
  4163                           
  4164                           ;main.c: 1064: LATA = data;
  4165  001890  C067  FF89         	movff	display_matrix@data,3977	;volatile
  4166  001894  0012               	return	
  4167  001896                     __end_of_display_matrix:
  4168                           	opt stack 0
  4169                           tblptru	equ	0xFF8
  4170                           tblptrh	equ	0xFF7
  4171                           tblptrl	equ	0xFF6
  4172                           tablat	equ	0xFF5
  4173                           prodh	equ	0xFF4
  4174                           prodl	equ	0xFF3
  4175                           intcon	equ	0xFF2
  4176                           intcon2	equ	0xFF1
  4177                           postinc0	equ	0xFEE
  4178                           wreg	equ	0xFE8
  4179                           indf1	equ	0xFE7
  4180                           postinc1	equ	0xFE6
  4181                           postdec1	equ	0xFE5
  4182                           fsr1h	equ	0xFE2
  4183                           fsr1l	equ	0xFE1
  4184                           indf2	equ	0xFDF
  4185                           postinc2	equ	0xFDE
  4186                           postdec2	equ	0xFDD
  4187                           fsr2h	equ	0xFDA
  4188                           fsr2l	equ	0xFD9
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function _matrix_column *****************
  4192 ;; Defined at:
  4193 ;;		line 1068 in file "main.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  column          1    wreg     unsigned char 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  column          1    0[BANK0 ] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;		None               void
  4200 ;; Registers used:
  4201 ;;		wreg
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;Total ram usage:        1 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    6
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_display_matrix
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text11
  4222  00144C                     __ptext11:
  4223                           	opt stack 0
  4224  00144C                     _matrix_column:
  4225                           	opt stack 21
  4226                           
  4227                           ;incstack = 0
  4228                           ;matrix_column@column stored from wreg
  4229  00144C  0100               	movlb	0	; () banked
  4230  00144E  6F60               	movwf	matrix_column@column& (0+255),b
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;main.c: 1069: if ((column & 0x01) == 0)LATBbits.LATB0 = 0;
  4234  001450  0100               	movlb	0	; () banked
  4235  001452  B160               	btfsc	matrix_column@column& (0+255),0,b
  4236  001454  D002               	goto	l232
  4237                           
  4238                           ; BSR set to: 0
  4239  001456  908A               	bcf	3978,0,c	;volatile
  4240  001458  D001               	goto	l2399
  4241  00145A                     l232:
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;main.c: 1070: else LATBbits.LATB0 = 1;
  4245  00145A  808A               	bsf	3978,0,c	;volatile
  4246  00145C                     l2399:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;main.c: 1071: if ((column & 0x02) == 0)LATBbits.LATB1 = 0;
  4250  00145C  0100               	movlb	0	; () banked
  4251  00145E  B360               	btfsc	matrix_column@column& (0+255),1,b
  4252  001460  D002               	goto	l234
  4253                           
  4254                           ; BSR set to: 0
  4255  001462  928A               	bcf	3978,1,c	;volatile
  4256  001464  D001               	goto	l2403
  4257  001466                     l234:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;main.c: 1072: else LATBbits.LATB1 = 1;
  4261  001466  828A               	bsf	3978,1,c	;volatile
  4262  001468                     l2403:
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;main.c: 1073: if ((column & 0x04) == 0)LATBbits.LATB2 = 0;
  4266  001468  0100               	movlb	0	; () banked
  4267  00146A  B560               	btfsc	matrix_column@column& (0+255),2,b
  4268  00146C  D002               	goto	l236
  4269                           
  4270                           ; BSR set to: 0
  4271  00146E  948A               	bcf	3978,2,c	;volatile
  4272  001470  D001               	goto	l2407
  4273  001472                     l236:
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;main.c: 1074: else LATBbits.LATB2 = 1;
  4277  001472  848A               	bsf	3978,2,c	;volatile
  4278  001474                     l2407:
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;main.c: 1075: if ((column & 0x08) == 0)LATBbits.LATB3 = 0;
  4282  001474  0100               	movlb	0	; () banked
  4283  001476  B760               	btfsc	matrix_column@column& (0+255),3,b
  4284  001478  D002               	goto	l238
  4285                           
  4286                           ; BSR set to: 0
  4287  00147A  968A               	bcf	3978,3,c	;volatile
  4288  00147C  D001               	goto	l2411
  4289  00147E                     l238:
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;main.c: 1076: else LATBbits.LATB3 = 1;
  4293  00147E  868A               	bsf	3978,3,c	;volatile
  4294  001480                     l2411:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;main.c: 1077: if ((column & 0x01) == 0)LATBbits.LATB4 = 0;
  4298  001480  0100               	movlb	0	; () banked
  4299  001482  B160               	btfsc	matrix_column@column& (0+255),0,b
  4300  001484  D002               	goto	l240
  4301                           
  4302                           ; BSR set to: 0
  4303  001486  988A               	bcf	3978,4,c	;volatile
  4304  001488  D001               	goto	l2415
  4305  00148A                     l240:
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;main.c: 1078: else LATBbits.LATB4 = 1;
  4309  00148A  888A               	bsf	3978,4,c	;volatile
  4310  00148C                     l2415:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;main.c: 1079: if ((column & 0x02) == 0)LATBbits.LATB5 = 0;
  4314  00148C  0100               	movlb	0	; () banked
  4315  00148E  B360               	btfsc	matrix_column@column& (0+255),1,b
  4316  001490  D002               	goto	l242
  4317                           
  4318                           ; BSR set to: 0
  4319  001492  9A8A               	bcf	3978,5,c	;volatile
  4320  001494  D001               	goto	l2419
  4321  001496                     l242:
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;main.c: 1080: else LATBbits.LATB5 = 1;
  4325  001496  8A8A               	bsf	3978,5,c	;volatile
  4326  001498                     l2419:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;main.c: 1081: if ((column & 0x04) == 0)LATCbits.LATC0 = 0;
  4330  001498  0100               	movlb	0	; () banked
  4331  00149A  B560               	btfsc	matrix_column@column& (0+255),2,b
  4332  00149C  D002               	goto	l244
  4333                           
  4334                           ; BSR set to: 0
  4335  00149E  908B               	bcf	3979,0,c	;volatile
  4336  0014A0  D001               	goto	l2423
  4337  0014A2                     l244:
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;main.c: 1082: else LATCbits.LATC0 = 1;
  4341  0014A2  808B               	bsf	3979,0,c	;volatile
  4342  0014A4                     l2423:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;main.c: 1083: if ((column & 0x08) != 0)LATCbits.LATC1 = 0;
  4346  0014A4  0100               	movlb	0	; () banked
  4347  0014A6  A760               	btfss	matrix_column@column& (0+255),3,b
  4348  0014A8  D002               	goto	l246
  4349                           
  4350                           ; BSR set to: 0
  4351  0014AA  928B               	bcf	3979,1,c	;volatile
  4352  0014AC  D001               	goto	l2427
  4353  0014AE                     l246:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;main.c: 1084: else LATCbits.LATC1 = 1;
  4357  0014AE  828B               	bsf	3979,1,c	;volatile
  4358  0014B0                     l2427:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;main.c: 1085: if ((column & 0x10) != 0) {
  4362  0014B0  0100               	movlb	0	; () banked
  4363  0014B2  A960               	btfss	matrix_column@column& (0+255),4,b
  4364  0014B4  0012               	return	
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;main.c: 1086: LATBbits.LATB3 = 1;
  4368  0014B6  868A               	bsf	3978,3,c	;volatile
  4369                           
  4370                           ;main.c: 1087: LATCbits.LATC1 = 1;
  4371  0014B8  828B               	bsf	3979,1,c	;volatile
  4372  0014BA  0012               	return	
  4373  0014BC                     __end_of_matrix_column:
  4374                           	opt stack 0
  4375                           tblptru	equ	0xFF8
  4376                           tblptrh	equ	0xFF7
  4377                           tblptrl	equ	0xFF6
  4378                           tablat	equ	0xFF5
  4379                           prodh	equ	0xFF4
  4380                           prodl	equ	0xFF3
  4381                           intcon	equ	0xFF2
  4382                           intcon2	equ	0xFF1
  4383                           postinc0	equ	0xFEE
  4384                           wreg	equ	0xFE8
  4385                           indf1	equ	0xFE7
  4386                           postinc1	equ	0xFE6
  4387                           postdec1	equ	0xFE5
  4388                           fsr1h	equ	0xFE2
  4389                           fsr1l	equ	0xFE1
  4390                           indf2	equ	0xFDF
  4391                           postinc2	equ	0xFDE
  4392                           postdec2	equ	0xFDD
  4393                           fsr2h	equ	0xFDA
  4394                           fsr2l	equ	0xFD9
  4395                           status	equ	0xFD8
  4396                           
  4397 ;; *************** function _isr *****************
  4398 ;; Defined at:
  4399 ;;		line 884 in file "main.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;		None               void
  4406 ;; Registers used:
  4407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;Total ram usage:       14 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    5
  4420 ;; This function calls:
  4421 ;;		_intrrupt_RCIF
  4422 ;;		_intrrupt_TMR0IF
  4423 ;;		_intrrupt_TMR1IF
  4424 ;;		_intrrupt_TMR3IF
  4425 ;;		_intrrupt_TXIF
  4426 ;; This function is called by:
  4427 ;;		Interrupt level 2
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	intcode
  4432  000008                     __pintcode:
  4433                           	opt stack 0
  4434  000008                     _isr:
  4435                           	opt stack 21
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;incstack = 0
  4439  000008  CFFA F014          	movff	pclath,??_isr
  4440  00000C  CFFB F015          	movff	pclatu,??_isr+1
  4441  000010  CFE9 F016          	movff	fsr0l,??_isr+2
  4442  000014  CFEA F017          	movff	fsr0h,??_isr+3
  4443  000018  CFE1 F018          	movff	fsr1l,??_isr+4
  4444  00001C  CFE2 F019          	movff	fsr1h,??_isr+5
  4445  000020  CFD9 F01A          	movff	fsr2l,??_isr+6
  4446  000024  CFDA F01B          	movff	fsr2h,??_isr+7
  4447  000028  CFF3 F01C          	movff	prodl,??_isr+8
  4448  00002C  CFF4 F01D          	movff	prodh,??_isr+9
  4449  000030  CFF6 F01E          	movff	tblptrl,??_isr+10
  4450  000034  CFF7 F01F          	movff	tblptrh,??_isr+11
  4451  000038  CFF8 F020          	movff	tblptru,??_isr+12
  4452  00003C  CFF5 F021          	movff	tablat,??_isr+13
  4453                           
  4454                           ;main.c: 886: if (RC1IF == 1) {
  4455  000040  AA9E               	btfss	3998,5,c	;volatile
  4456  000042  D003               	goto	i2l2145
  4457                           
  4458                           ;main.c: 887: RC1IF = 0;
  4459  000044  9A9E               	bcf	3998,5,c	;volatile
  4460                           
  4461                           ;main.c: 888: intrrupt_RCIF();
  4462  000046  ECA7  F008         	call	_intrrupt_RCIF	;wreg free
  4463  00004A                     i2l2145:
  4464                           
  4465                           ;main.c: 889: }
  4466                           ;main.c: 891: if (TX1IF & TX1IE) {
  4467  00004A  0E01               	movlw	1
  4468  00004C  A89E               	btfss	3998,4,c	;volatile
  4469  00004E  0E00               	movlw	0
  4470  000050  A89D               	btfss	3997,4,c	;volatile
  4471  000052  0E00               	movlw	0
  4472  000054  B0E8               	btfsc	wreg,0,c
  4473                           
  4474                           ;main.c: 892: intrrupt_TXIF();
  4475  000056  ECE4  F00B         	call	_intrrupt_TXIF	;wreg free
  4476                           
  4477                           ;main.c: 893: }
  4478                           ;main.c: 895: if (INTCONbits.TMR0IF == 1) {
  4479  00005A  A4F2               	btfss	intcon,2,c	;volatile
  4480  00005C  D003               	goto	i2l2155
  4481                           
  4482                           ;main.c: 896: INTCONbits.TMR0IF = 0;
  4483  00005E  94F2               	bcf	intcon,2,c	;volatile
  4484                           
  4485                           ;main.c: 897: intrrupt_TMR0IF();
  4486  000060  ECCB  F00B         	call	_intrrupt_TMR0IF	;wreg free
  4487  000064                     i2l2155:
  4488                           
  4489                           ;main.c: 898: }
  4490                           ;main.c: 900: if (PIR1bits.TMR1IF == 1) {
  4491  000064  A09E               	btfss	3998,0,c	;volatile
  4492  000066  D003               	goto	i2l2161
  4493                           
  4494                           ;main.c: 901: PIR1bits.TMR1IF = 0;
  4495  000068  909E               	bcf	3998,0,c	;volatile
  4496                           
  4497                           ;main.c: 902: intrrupt_TMR1IF();
  4498  00006A  ECAF  F00B         	call	_intrrupt_TMR1IF	;wreg free
  4499  00006E                     i2l2161:
  4500                           
  4501                           ;main.c: 903: }
  4502                           ;main.c: 905: if (PIR2bits.TMR3IF == 1) {
  4503  00006E  A2A1               	btfss	4001,1,c	;volatile
  4504  000070  D003               	goto	i2l132
  4505                           
  4506                           ;main.c: 906: PIR2bits.TMR3IF = 0;
  4507  000072  92A1               	bcf	4001,1,c	;volatile
  4508                           
  4509                           ;main.c: 907: intrrupt_TMR3IF();
  4510  000074  EC5C  F008         	call	_intrrupt_TMR3IF	;wreg free
  4511  000078                     i2l132:
  4512  000078  C021  FFF5         	movff	??_isr+13,tablat
  4513  00007C  C020  FFF8         	movff	??_isr+12,tblptru
  4514  000080  C01F  FFF7         	movff	??_isr+11,tblptrh
  4515  000084  C01E  FFF6         	movff	??_isr+10,tblptrl
  4516  000088  C01D  FFF4         	movff	??_isr+9,prodh
  4517  00008C  C01C  FFF3         	movff	??_isr+8,prodl
  4518  000090  C01B  FFDA         	movff	??_isr+7,fsr2h
  4519  000094  C01A  FFD9         	movff	??_isr+6,fsr2l
  4520  000098  C019  FFE2         	movff	??_isr+5,fsr1h
  4521  00009C  C018  FFE1         	movff	??_isr+4,fsr1l
  4522  0000A0  C017  FFEA         	movff	??_isr+3,fsr0h
  4523  0000A4  C016  FFE9         	movff	??_isr+2,fsr0l
  4524  0000A8  C015  FFFB         	movff	??_isr+1,pclatu
  4525  0000AC  C014  FFFA         	movff	??_isr,pclath
  4526  0000B0  0011               	retfie		f
  4527  0000B2                     __end_of_isr:
  4528                           	opt stack 0
  4529                           pclatu	equ	0xFFB
  4530                           pclath	equ	0xFFA
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           prodh	equ	0xFF4
  4536                           prodl	equ	0xFF3
  4537                           intcon	equ	0xFF2
  4538                           intcon2	equ	0xFF1
  4539                           postinc0	equ	0xFEE
  4540                           fsr0h	equ	0xFEA
  4541                           fsr0l	equ	0xFE9
  4542                           wreg	equ	0xFE8
  4543                           indf1	equ	0xFE7
  4544                           postinc1	equ	0xFE6
  4545                           postdec1	equ	0xFE5
  4546                           fsr1h	equ	0xFE2
  4547                           fsr1l	equ	0xFE1
  4548                           indf2	equ	0xFDF
  4549                           postinc2	equ	0xFDE
  4550                           postdec2	equ	0xFDD
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function _intrrupt_TXIF *****************
  4556 ;; Defined at:
  4557 ;;		line 942 in file "main.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;		None               void
  4564 ;; Registers used:
  4565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    1
  4578 ;; This function calls:
  4579 ;;		_ringbuf_num
  4580 ;;		_ringbuf_pop
  4581 ;; This function is called by:
  4582 ;;		_isr
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text13
  4587  0017C8                     __ptext13:
  4588                           	opt stack 0
  4589  0017C8                     _intrrupt_TXIF:
  4590                           	opt stack 24
  4591                           
  4592                           ;main.c: 943: if (ringbuf_num(&tx_buf) > 0) {
  4593                           
  4594                           ;incstack = 0
  4595  0017C8  0E00               	movlw	high _tx_buf
  4596  0017CA  6E02               	movwf	ringbuf_num@rb+1,c
  4597  0017CC  0E2F               	movlw	low _tx_buf
  4598  0017CE  6E01               	movwf	ringbuf_num@rb,c
  4599  0017D0  EC32  F009         	call	_ringbuf_num	;wreg free
  4600  0017D4  0900               	iorlw	0
  4601  0017D6  B4D8               	btfsc	status,2,c
  4602  0017D8  D008               	goto	i2l148
  4603                           
  4604                           ;main.c: 944: TXREG1 = ringbuf_pop(&tx_buf);
  4605  0017DA  0E00               	movlw	high _tx_buf
  4606  0017DC  6E02               	movwf	ringbuf_pop@rb+1,c
  4607  0017DE  0E2F               	movlw	low _tx_buf
  4608  0017E0  6E01               	movwf	ringbuf_pop@rb,c
  4609  0017E2  EC71  F009         	call	_ringbuf_pop	;wreg free
  4610  0017E6  6EAD               	movwf	4013,c	;volatile
  4611                           
  4612                           ;main.c: 945: } else {
  4613  0017E8  0012               	return	
  4614  0017EA                     i2l148:
  4615                           
  4616                           ;main.c: 946: PIE1bits.TX1IE = 0;
  4617  0017EA  989D               	bcf	3997,4,c	;volatile
  4618  0017EC  0012               	return	
  4619  0017EE                     __end_of_intrrupt_TXIF:
  4620                           	opt stack 0
  4621                           pclatu	equ	0xFFB
  4622                           pclath	equ	0xFFA
  4623                           tblptru	equ	0xFF8
  4624                           tblptrh	equ	0xFF7
  4625                           tblptrl	equ	0xFF6
  4626                           tablat	equ	0xFF5
  4627                           prodh	equ	0xFF4
  4628                           prodl	equ	0xFF3
  4629                           intcon	equ	0xFF2
  4630                           intcon2	equ	0xFF1
  4631                           postinc0	equ	0xFEE
  4632                           fsr0h	equ	0xFEA
  4633                           fsr0l	equ	0xFE9
  4634                           wreg	equ	0xFE8
  4635                           indf1	equ	0xFE7
  4636                           postinc1	equ	0xFE6
  4637                           postdec1	equ	0xFE5
  4638                           fsr1h	equ	0xFE2
  4639                           fsr1l	equ	0xFE1
  4640                           indf2	equ	0xFDF
  4641                           postinc2	equ	0xFDE
  4642                           postdec2	equ	0xFDD
  4643                           fsr2h	equ	0xFDA
  4644                           fsr2l	equ	0xFD9
  4645                           status	equ	0xFD8
  4646                           
  4647 ;; *************** function _ringbuf_pop *****************
  4648 ;; Defined at:
  4649 ;;		line 1015 in file "main.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  4652 ;;		 -> tx_buf(5), 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  ret             1    5[COMRAM] unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      unsigned char 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;Total ram usage:        6 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_intrrupt_TXIF
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text14
  4678  0012E2                     __ptext14:
  4679                           	opt stack 0
  4680  0012E2                     _ringbuf_pop:
  4681                           	opt stack 24
  4682                           
  4683                           ;main.c: 1016: uint8_t ret = rb->buf[rb->tail];
  4684                           
  4685                           ;incstack = 0
  4686  0012E2  EE20 F004          	lfsr	2,4
  4687  0012E6  5001               	movf	ringbuf_pop@rb,w,c
  4688  0012E8  26D9               	addwf	fsr2l,f,c
  4689  0012EA  5002               	movf	ringbuf_pop@rb+1,w,c
  4690  0012EC  22DA               	addwfc	fsr2h,f,c
  4691  0012EE  50DF               	movf	indf2,w,c
  4692  0012F0  6E03               	movwf	??_ringbuf_pop& (0+255),c
  4693  0012F2  5003               	movf	??_ringbuf_pop,w,c
  4694  0012F4  0D01               	mullw	1
  4695  0012F6  C001  FFD9         	movff	ringbuf_pop@rb,fsr2l
  4696  0012FA  C002  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  4697  0012FE  CFDE F004          	movff	postinc2,??_ringbuf_pop+1
  4698  001302  CFDD F005          	movff	postdec2,??_ringbuf_pop+2
  4699  001306  50F3               	movf	prodl,w,c
  4700  001308  2404               	addwf	??_ringbuf_pop+1,w,c
  4701  00130A  6ED9               	movwf	fsr2l,c
  4702  00130C  50F4               	movf	prodh,w,c
  4703  00130E  2005               	addwfc	??_ringbuf_pop+2,w,c
  4704  001310  6EDA               	movwf	fsr2h,c
  4705  001312  50DF               	movf	indf2,w,c
  4706  001314  6E06               	movwf	ringbuf_pop@ret,c
  4707                           
  4708                           ;main.c: 1017: rb->tail++;
  4709  001316  EE20 F004          	lfsr	2,4
  4710  00131A  5001               	movf	ringbuf_pop@rb,w,c
  4711  00131C  26D9               	addwf	fsr2l,f,c
  4712  00131E  5002               	movf	ringbuf_pop@rb+1,w,c
  4713  001320  22DA               	addwfc	fsr2h,f,c
  4714  001322  2ADF               	incf	indf2,f,c
  4715                           
  4716                           ;main.c: 1018: if (rb->tail >= rb->size) {
  4717  001324  EE20 F004          	lfsr	2,4
  4718  001328  5001               	movf	ringbuf_pop@rb,w,c
  4719  00132A  26D9               	addwf	fsr2l,f,c
  4720  00132C  5002               	movf	ringbuf_pop@rb+1,w,c
  4721  00132E  22DA               	addwfc	fsr2h,f,c
  4722  001330  50DF               	movf	indf2,w,c
  4723  001332  6E03               	movwf	??_ringbuf_pop& (0+255),c
  4724  001334  EE20 F002          	lfsr	2,2
  4725  001338  5001               	movf	ringbuf_pop@rb,w,c
  4726  00133A  26D9               	addwf	fsr2l,f,c
  4727  00133C  5002               	movf	ringbuf_pop@rb+1,w,c
  4728  00133E  22DA               	addwfc	fsr2h,f,c
  4729  001340  50DF               	movf	indf2,w,c
  4730  001342  5C03               	subwf	??_ringbuf_pop,w,c
  4731  001344  A0D8               	btfss	status,0,c
  4732  001346  D008               	goto	i2l1141
  4733                           
  4734                           ;main.c: 1019: rb->tail = 0;
  4735  001348  EE20 F004          	lfsr	2,4
  4736  00134C  5001               	movf	ringbuf_pop@rb,w,c
  4737  00134E  26D9               	addwf	fsr2l,f,c
  4738  001350  5002               	movf	ringbuf_pop@rb+1,w,c
  4739  001352  22DA               	addwfc	fsr2h,f,c
  4740  001354  0E00               	movlw	0
  4741  001356  6EDF               	movwf	indf2,c
  4742  001358                     i2l1141:
  4743                           
  4744                           ;main.c: 1020: }
  4745                           ;main.c: 1021: return ret;
  4746  001358  5006               	movf	ringbuf_pop@ret,w,c
  4747  00135A  0012               	return	
  4748  00135C                     __end_of_ringbuf_pop:
  4749                           	opt stack 0
  4750                           pclatu	equ	0xFFB
  4751                           pclath	equ	0xFFA
  4752                           tblptru	equ	0xFF8
  4753                           tblptrh	equ	0xFF7
  4754                           tblptrl	equ	0xFF6
  4755                           tablat	equ	0xFF5
  4756                           prodh	equ	0xFF4
  4757                           prodl	equ	0xFF3
  4758                           intcon	equ	0xFF2
  4759                           intcon2	equ	0xFF1
  4760                           postinc0	equ	0xFEE
  4761                           fsr0h	equ	0xFEA
  4762                           fsr0l	equ	0xFE9
  4763                           wreg	equ	0xFE8
  4764                           indf1	equ	0xFE7
  4765                           postinc1	equ	0xFE6
  4766                           postdec1	equ	0xFE5
  4767                           fsr1h	equ	0xFE2
  4768                           fsr1l	equ	0xFE1
  4769                           indf2	equ	0xFDF
  4770                           postinc2	equ	0xFDE
  4771                           postdec2	equ	0xFDD
  4772                           fsr2h	equ	0xFDA
  4773                           fsr2l	equ	0xFD9
  4774                           status	equ	0xFD8
  4775                           
  4776 ;; *************** function _ringbuf_num *****************
  4777 ;; Defined at:
  4778 ;;		line 1025 in file "main.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  4781 ;;		 -> tx_buf(5), 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      unsigned char 
  4786 ;; Registers used:
  4787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;Total ram usage:        4 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_intrrupt_TXIF
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text15
  4807  001264                     __ptext15:
  4808                           	opt stack 0
  4809  001264                     _ringbuf_num:
  4810                           	opt stack 24
  4811                           
  4812                           ;main.c: 1026: if (rb->head >= rb->tail) {
  4813                           
  4814                           ;incstack = 0
  4815  001264  EE20 F003          	lfsr	2,3
  4816  001268  5001               	movf	ringbuf_num@rb,w,c
  4817  00126A  26D9               	addwf	fsr2l,f,c
  4818  00126C  5002               	movf	ringbuf_num@rb+1,w,c
  4819  00126E  22DA               	addwfc	fsr2h,f,c
  4820  001270  50DF               	movf	indf2,w,c
  4821  001272  6E03               	movwf	??_ringbuf_num& (0+255),c
  4822  001274  EE20 F004          	lfsr	2,4
  4823  001278  5001               	movf	ringbuf_num@rb,w,c
  4824  00127A  26D9               	addwf	fsr2l,f,c
  4825  00127C  5002               	movf	ringbuf_num@rb+1,w,c
  4826  00127E  22DA               	addwfc	fsr2h,f,c
  4827  001280  50DF               	movf	indf2,w,c
  4828  001282  5C03               	subwf	??_ringbuf_num,w,c
  4829  001284  A0D8               	btfss	status,0,c
  4830  001286  D012               	goto	i2l1129
  4831                           
  4832                           ;main.c: 1027: return (rb->head - rb->tail);
  4833  001288  EE20 F003          	lfsr	2,3
  4834  00128C  5001               	movf	ringbuf_num@rb,w,c
  4835  00128E  26D9               	addwf	fsr2l,f,c
  4836  001290  5002               	movf	ringbuf_num@rb+1,w,c
  4837  001292  22DA               	addwfc	fsr2h,f,c
  4838  001294  50DF               	movf	indf2,w,c
  4839  001296  6E03               	movwf	??_ringbuf_num& (0+255),c
  4840  001298  EE20 F004          	lfsr	2,4
  4841  00129C  5001               	movf	ringbuf_num@rb,w,c
  4842  00129E  26D9               	addwf	fsr2l,f,c
  4843  0012A0  5002               	movf	ringbuf_num@rb+1,w,c
  4844  0012A2  22DA               	addwfc	fsr2h,f,c
  4845  0012A4  50DF               	movf	indf2,w,c
  4846  0012A6  0800               	sublw	0
  4847  0012A8  2403               	addwf	??_ringbuf_num,w,c
  4848  0012AA  0012               	return	
  4849  0012AC                     i2l1129:
  4850                           
  4851                           ;main.c: 1029: return (rb->size + rb->head - rb->tail);
  4852  0012AC  EE20 F003          	lfsr	2,3
  4853  0012B0  5001               	movf	ringbuf_num@rb,w,c
  4854  0012B2  26D9               	addwf	fsr2l,f,c
  4855  0012B4  5002               	movf	ringbuf_num@rb+1,w,c
  4856  0012B6  22DA               	addwfc	fsr2h,f,c
  4857  0012B8  50DF               	movf	indf2,w,c
  4858  0012BA  6E03               	movwf	??_ringbuf_num& (0+255),c
  4859  0012BC  EE20 F002          	lfsr	2,2
  4860  0012C0  5001               	movf	ringbuf_num@rb,w,c
  4861  0012C2  26D9               	addwf	fsr2l,f,c
  4862  0012C4  5002               	movf	ringbuf_num@rb+1,w,c
  4863  0012C6  22DA               	addwfc	fsr2h,f,c
  4864  0012C8  50DF               	movf	indf2,w,c
  4865  0012CA  6E04               	movwf	(??_ringbuf_num+1)& (0+255),c
  4866  0012CC  EE20 F004          	lfsr	2,4
  4867  0012D0  5001               	movf	ringbuf_num@rb,w,c
  4868  0012D2  26D9               	addwf	fsr2l,f,c
  4869  0012D4  5002               	movf	ringbuf_num@rb+1,w,c
  4870  0012D6  22DA               	addwfc	fsr2h,f,c
  4871  0012D8  50DF               	movf	indf2,w,c
  4872  0012DA  0800               	sublw	0
  4873  0012DC  2404               	addwf	??_ringbuf_num+1,w,c
  4874  0012DE  2403               	addwf	??_ringbuf_num,w,c
  4875  0012E0  0012               	return	
  4876  0012E2                     __end_of_ringbuf_num:
  4877                           	opt stack 0
  4878                           pclatu	equ	0xFFB
  4879                           pclath	equ	0xFFA
  4880                           tblptru	equ	0xFF8
  4881                           tblptrh	equ	0xFF7
  4882                           tblptrl	equ	0xFF6
  4883                           tablat	equ	0xFF5
  4884                           prodh	equ	0xFF4
  4885                           prodl	equ	0xFF3
  4886                           intcon	equ	0xFF2
  4887                           intcon2	equ	0xFF1
  4888                           postinc0	equ	0xFEE
  4889                           fsr0h	equ	0xFEA
  4890                           fsr0l	equ	0xFE9
  4891                           wreg	equ	0xFE8
  4892                           indf1	equ	0xFE7
  4893                           postinc1	equ	0xFE6
  4894                           postdec1	equ	0xFE5
  4895                           fsr1h	equ	0xFE2
  4896                           fsr1l	equ	0xFE1
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           fsr2h	equ	0xFDA
  4901                           fsr2l	equ	0xFD9
  4902                           status	equ	0xFD8
  4903                           
  4904 ;; *************** function _intrrupt_TMR3IF *****************
  4905 ;; Defined at:
  4906 ;;		line 980 in file "main.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  i               1    3[COMRAM] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;		None               void
  4913 ;; Registers used:
  4914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;Total ram usage:        3 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:    1
  4927 ;; This function calls:
  4928 ;;		i2_sw
  4929 ;; This function is called by:
  4930 ;;		_isr
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text16
  4935  0010B8                     __ptext16:
  4936                           	opt stack 0
  4937  0010B8                     _intrrupt_TMR3IF:
  4938                           	opt stack 24
  4939                           
  4940                           ;main.c: 981: uint8_t i;
  4941                           ;main.c: 982: for (i = 0; i < 4; i++) {
  4942                           
  4943                           ;incstack = 0
  4944  0010B8  0E00               	movlw	0
  4945  0010BA  6E04               	movwf	intrrupt_TMR3IF@i,c
  4946  0010BC  0E03               	movlw	3
  4947  0010BE  6404               	cpfsgt	intrrupt_TMR3IF@i,c
  4948  0010C0  D001               	goto	i2l2075
  4949  0010C2  0012               	return	
  4950  0010C4                     i2l2075:
  4951                           
  4952                           ;main.c: 983: if (sw(i)) {
  4953  0010C4  5004               	movf	intrrupt_TMR3IF@i,w,c
  4954  0010C6  EC14  F00B         	call	i2_sw
  4955  0010CA  0900               	iorlw	0
  4956  0010CC  B4D8               	btfsc	status,2,c
  4957  0010CE  D030               	goto	i2l2083
  4958                           
  4959                           ;main.c: 984: if (cnt_sw[i] < 75 + 1) cnt_sw[i]++;
  4960  0010D0  5004               	movf	intrrupt_TMR3IF@i,w,c
  4961  0010D2  0D01               	mullw	1
  4962  0010D4  0E22               	movlw	low _cnt_sw
  4963  0010D6  24F3               	addwf	prodl,w,c
  4964  0010D8  6ED9               	movwf	fsr2l,c
  4965  0010DA  0E00               	movlw	high _cnt_sw
  4966  0010DC  20F4               	addwfc	prodh,w,c
  4967  0010DE  6EDA               	movwf	fsr2h,c
  4968  0010E0  50DF               	movf	indf2,w,c
  4969  0010E2  6E02               	movwf	??_intrrupt_TMR3IF& (0+255),c
  4970  0010E4  0E4C               	movlw	76
  4971  0010E6  5C02               	subwf	??_intrrupt_TMR3IF,w,c
  4972  0010E8  B0D8               	btfsc	status,0,c
  4973  0010EA  D009               	goto	i2l169
  4974  0010EC  5004               	movf	intrrupt_TMR3IF@i,w,c
  4975  0010EE  0D01               	mullw	1
  4976  0010F0  0E22               	movlw	low _cnt_sw
  4977  0010F2  24F3               	addwf	prodl,w,c
  4978  0010F4  6ED9               	movwf	fsr2l,c
  4979  0010F6  0E00               	movlw	high _cnt_sw
  4980  0010F8  20F4               	addwfc	prodh,w,c
  4981  0010FA  6EDA               	movwf	fsr2h,c
  4982  0010FC  2ADF               	incf	indf2,f,c
  4983  0010FE                     i2l169:
  4984                           
  4985                           ;main.c: 986: if (cnt_sw[i] == 75)long_hold_flag |= (1 << i);
  4986  0010FE  5004               	movf	intrrupt_TMR3IF@i,w,c
  4987  001100  0D01               	mullw	1
  4988  001102  0E22               	movlw	low _cnt_sw
  4989  001104  24F3               	addwf	prodl,w,c
  4990  001106  6ED9               	movwf	fsr2l,c
  4991  001108  0E00               	movlw	high _cnt_sw
  4992  00110A  20F4               	addwfc	prodh,w,c
  4993  00110C  6EDA               	movwf	fsr2h,c
  4994  00110E  0E4B               	movlw	75
  4995  001110  62DF               	cpfseq	indf2,c
  4996  001112  D018               	goto	i2l2085
  4997  001114  C004  F002         	movff	intrrupt_TMR3IF@i,??_intrrupt_TMR3IF
  4998  001118  0E01               	movlw	1
  4999  00111A  6E03               	movwf	(??_intrrupt_TMR3IF+1)& (0+255),c
  5000  00111C  2A02               	incf	??_intrrupt_TMR3IF,f,c
  5001  00111E  D002               	goto	i2u213_44
  5002  001120                     i2u213_45:
  5003  001120  90D8               	bcf	status,0,c
  5004  001122  3603               	rlcf	??_intrrupt_TMR3IF+1,f,c
  5005  001124                     i2u213_44:
  5006  001124  2E02               	decfsz	??_intrrupt_TMR3IF,f,c
  5007  001126  D7FC               	goto	i2u213_45
  5008  001128  5003               	movf	??_intrrupt_TMR3IF+1,w,c
  5009  00112A  0101               	movlb	1	; () banked
  5010  00112C  13FF               	iorwf	_long_hold_flag& (0+255),f,b
  5011  00112E  D00A               	goto	i2l2085
  5012  001130                     i2l2083:
  5013  001130  5004               	movf	intrrupt_TMR3IF@i,w,c
  5014  001132  0D01               	mullw	1
  5015  001134  0E22               	movlw	low _cnt_sw
  5016  001136  24F3               	addwf	prodl,w,c
  5017  001138  6ED9               	movwf	fsr2l,c
  5018  00113A  0E00               	movlw	high _cnt_sw
  5019  00113C  20F4               	addwfc	prodh,w,c
  5020  00113E  6EDA               	movwf	fsr2h,c
  5021  001140  0E00               	movlw	0
  5022  001142  6EDF               	movwf	indf2,c
  5023  001144                     i2l2085:
  5024  001144  2A04               	incf	intrrupt_TMR3IF@i,f,c
  5025  001146  0E03               	movlw	3
  5026  001148  6404               	cpfsgt	intrrupt_TMR3IF@i,c
  5027  00114A  D7BC               	goto	i2l2075
  5028  00114C  0012               	return	
  5029  00114E                     __end_of_intrrupt_TMR3IF:
  5030                           	opt stack 0
  5031                           pclatu	equ	0xFFB
  5032                           pclath	equ	0xFFA
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           intcon2	equ	0xFF1
  5041                           postinc0	equ	0xFEE
  5042                           fsr0h	equ	0xFEA
  5043                           fsr0l	equ	0xFE9
  5044                           wreg	equ	0xFE8
  5045                           indf1	equ	0xFE7
  5046                           postinc1	equ	0xFE6
  5047                           postdec1	equ	0xFE5
  5048                           fsr1h	equ	0xFE2
  5049                           fsr1l	equ	0xFE1
  5050                           indf2	equ	0xFDF
  5051                           postinc2	equ	0xFDE
  5052                           postdec2	equ	0xFDD
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function i2_sw *****************
  5058 ;; Defined at:
  5059 ;;		line 1092 in file "main.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  i               1    wreg     unsigned char 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  i               1    0[COMRAM] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      unsigned char 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;Total ram usage:        1 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_intrrupt_TMR3IF
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text17
  5087  001628                     __ptext17:
  5088                           	opt stack 0
  5089  001628                     i2_sw:
  5090                           	opt stack 24
  5091                           
  5092                           ;incstack = 0
  5093                           ;i2sw@i stored from wreg
  5094  001628  6E01               	movwf	i2sw@i,c
  5095                           
  5096                           ;main.c: 1093: switch (i) {
  5097  00162A  D018               	goto	i2l1997
  5098  00162C                     i2l1979:
  5099                           
  5100                           ;main.c: 1095: return !PORTCbits.RC5;
  5101  00162C  BA82               	btfsc	3970,5,c	;volatile
  5102  00162E  D002               	goto	i2u192_40
  5103  001630  0E01               	movlw	1
  5104  001632  0012               	return	
  5105  001634                     i2u192_40:
  5106  001634  0E00               	movlw	0
  5107  001636  0012               	return	
  5108  001638                     i2l1983:
  5109                           
  5110                           ;main.c: 1097: return !PORTCbits.RC4;
  5111  001638  B882               	btfsc	3970,4,c	;volatile
  5112  00163A  D002               	goto	i2u193_40
  5113  00163C  0E01               	movlw	1
  5114  00163E  0012               	return	
  5115  001640                     i2u193_40:
  5116  001640  0E00               	movlw	0
  5117  001642  0012               	return	
  5118  001644                     i2l1987:
  5119                           
  5120                           ;main.c: 1099: return !PORTCbits.RC3;
  5121  001644  B682               	btfsc	3970,3,c	;volatile
  5122  001646  D002               	goto	i2u194_40
  5123  001648  0E01               	movlw	1
  5124  00164A  0012               	return	
  5125  00164C                     i2u194_40:
  5126  00164C  0E00               	movlw	0
  5127  00164E  0012               	return	
  5128  001650                     i2l1991:
  5129                           
  5130                           ;main.c: 1101: return !PORTCbits.RC2;
  5131  001650  B482               	btfsc	3970,2,c	;volatile
  5132  001652  D002               	goto	i2u195_40
  5133  001654  0E01               	movlw	1
  5134  001656  0012               	return	
  5135  001658                     i2u195_40:
  5136  001658  0E00               	movlw	0
  5137  00165A  0012               	return	
  5138  00165C                     i2l1997:
  5139  00165C  5001               	movf	i2sw@i,w,c
  5140                           
  5141                           ; Switch size 1, requested type "space"
  5142                           ; Number of cases is 4, Range of values is 0 to 3
  5143                           ; switch strategies available:
  5144                           ; Name         Instructions Cycles
  5145                           ; simple_byte           13     7 (average)
  5146                           ;	Chosen strategy is simple_byte
  5147  00165E  0A00               	xorlw	0	; case 0
  5148  001660  B4D8               	btfsc	status,2,c
  5149  001662  D7E4               	goto	i2l1979
  5150  001664  0A01               	xorlw	1	; case 1
  5151  001666  B4D8               	btfsc	status,2,c
  5152  001668  D7E7               	goto	i2l1983
  5153  00166A  0A03               	xorlw	3	; case 2
  5154  00166C  B4D8               	btfsc	status,2,c
  5155  00166E  D7EA               	goto	i2l1987
  5156  001670  0A01               	xorlw	1	; case 3
  5157  001672  B4D8               	btfsc	status,2,c
  5158  001674  D7ED               	goto	i2l1991
  5159                           
  5160                           ;main.c: 1103: return 2;
  5161  001676  0E02               	movlw	2
  5162  001678  0012               	return	
  5163  00167A                     __end_ofi2_sw:
  5164                           	opt stack 0
  5165                           pclatu	equ	0xFFB
  5166                           pclath	equ	0xFFA
  5167                           tblptru	equ	0xFF8
  5168                           tblptrh	equ	0xFF7
  5169                           tblptrl	equ	0xFF6
  5170                           tablat	equ	0xFF5
  5171                           prodh	equ	0xFF4
  5172                           prodl	equ	0xFF3
  5173                           intcon	equ	0xFF2
  5174                           intcon2	equ	0xFF1
  5175                           postinc0	equ	0xFEE
  5176                           fsr0h	equ	0xFEA
  5177                           fsr0l	equ	0xFE9
  5178                           wreg	equ	0xFE8
  5179                           indf1	equ	0xFE7
  5180                           postinc1	equ	0xFE6
  5181                           postdec1	equ	0xFE5
  5182                           fsr1h	equ	0xFE2
  5183                           fsr1l	equ	0xFE1
  5184                           indf2	equ	0xFDF
  5185                           postinc2	equ	0xFDE
  5186                           postdec2	equ	0xFDD
  5187                           fsr2h	equ	0xFDA
  5188                           fsr2l	equ	0xFD9
  5189                           status	equ	0xFD8
  5190                           
  5191 ;; *************** function _intrrupt_TMR1IF *****************
  5192 ;; Defined at:
  5193 ;;		line 965 in file "main.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;		None               void
  5200 ;; Registers used:
  5201 ;;		wreg, status,2, status,0, prodl, prodh
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;Total ram usage:        0 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_isr
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text18
  5221  00175E                     __ptext18:
  5222                           	opt stack 0
  5223  00175E                     _intrrupt_TMR1IF:
  5224                           	opt stack 25
  5225                           
  5226                           ;main.c: 966: cnt_t1++;
  5227                           
  5228                           ;incstack = 0
  5229  00175E  2A2A               	incf	_cnt_t1,f,c
  5230                           
  5231                           ;main.c: 967: if (cnt_t1 >= 6) {
  5232  001760  0E05               	movlw	5
  5233  001762  642A               	cpfsgt	_cnt_t1,c
  5234  001764  0012               	return	
  5235                           
  5236                           ;main.c: 968: cnt_t1 = 0;
  5237  001766  0E00               	movlw	0
  5238  001768  6E2A               	movwf	_cnt_t1,c
  5239                           
  5240                           ;main.c: 970: if (scrollON) {
  5241  00176A  502D               	movf	_scrollON,w,c
  5242  00176C  B4D8               	btfsc	status,2,c
  5243  00176E  0012               	return	
  5244                           
  5245                           ;main.c: 971: scroll_pointer++;
  5246  001770  4A28               	infsnz	_scroll_pointer,f,c
  5247  001772  2A29               	incf	_scroll_pointer+1,f,c
  5248                           
  5249                           ;main.c: 972: if (scroll_pointer > scroll_char_pointer * 6 + 16) {
  5250  001774  502E               	movf	_scroll_char_pointer,w,c
  5251  001776  0D06               	mullw	6
  5252  001778  0E10               	movlw	16
  5253  00177A  26F3               	addwf	prodl,f,c
  5254  00177C  0E00               	movlw	0
  5255  00177E  22F4               	addwfc	prodh,f,c
  5256  001780  5028               	movf	_scroll_pointer,w,c
  5257  001782  5CF3               	subwf	prodl,w,c
  5258  001784  5029               	movf	_scroll_pointer+1,w,c
  5259  001786  58F4               	subwfb	prodh,w,c
  5260  001788  B0D8               	btfsc	status,0,c
  5261  00178A  0012               	return	
  5262                           
  5263                           ;main.c: 973: scroll_pointer = 0;
  5264  00178C  0E00               	movlw	0
  5265  00178E  6E29               	movwf	_scroll_pointer+1,c
  5266  001790  0E00               	movlw	0
  5267  001792  6E28               	movwf	_scroll_pointer,c
  5268  001794  0012               	return	
  5269  001796                     __end_of_intrrupt_TMR1IF:
  5270                           	opt stack 0
  5271                           pclatu	equ	0xFFB
  5272                           pclath	equ	0xFFA
  5273                           tblptru	equ	0xFF8
  5274                           tblptrh	equ	0xFF7
  5275                           tblptrl	equ	0xFF6
  5276                           tablat	equ	0xFF5
  5277                           prodh	equ	0xFF4
  5278                           prodl	equ	0xFF3
  5279                           intcon	equ	0xFF2
  5280                           intcon2	equ	0xFF1
  5281                           postinc0	equ	0xFEE
  5282                           fsr0h	equ	0xFEA
  5283                           fsr0l	equ	0xFE9
  5284                           wreg	equ	0xFE8
  5285                           indf1	equ	0xFE7
  5286                           postinc1	equ	0xFE6
  5287                           postdec1	equ	0xFE5
  5288                           fsr1h	equ	0xFE2
  5289                           fsr1l	equ	0xFE1
  5290                           indf2	equ	0xFDF
  5291                           postinc2	equ	0xFDE
  5292                           postdec2	equ	0xFDD
  5293                           fsr2h	equ	0xFDA
  5294                           fsr2l	equ	0xFD9
  5295                           status	equ	0xFD8
  5296                           
  5297 ;; *************** function _intrrupt_TMR0IF *****************
  5298 ;; Defined at:
  5299 ;;		line 951 in file "main.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;		None               void
  5306 ;; Registers used:
  5307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;Total ram usage:        0 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    3
  5320 ;; This function calls:
  5321 ;;		i2_display_print
  5322 ;;		i2_display_scroll
  5323 ;; This function is called by:
  5324 ;;		_isr
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text19
  5329  001796                     __ptext19:
  5330                           	opt stack 0
  5331  001796                     _intrrupt_TMR0IF:
  5332                           	opt stack 22
  5333                           
  5334                           ;main.c: 952: if (scrollON) {
  5335                           
  5336                           ;incstack = 0
  5337  001796  502D               	movf	_scrollON,w,c
  5338  001798  B4D8               	btfsc	status,2,c
  5339  00179A  D009               	goto	i2l153
  5340                           
  5341                           ;main.c: 953: display_scroll(dinamic);
  5342  00179C  502B               	movf	_dinamic,w,c
  5343  00179E  EC76  F007         	call	i2_display_scroll
  5344                           
  5345                           ;main.c: 954: dinamic++;
  5346  0017A2  2A2B               	incf	_dinamic,f,c
  5347                           
  5348                           ;main.c: 955: if (dinamic >= 16)dinamic = 0;
  5349  0017A4  0E0F               	movlw	15
  5350  0017A6  642B               	cpfsgt	_dinamic,c
  5351  0017A8  D002               	goto	i2l153
  5352  0017AA  0E00               	movlw	0
  5353  0017AC  6E2B               	movwf	_dinamic,c
  5354  0017AE                     i2l153:
  5355                           
  5356                           ;main.c: 956: }
  5357                           ;main.c: 957: if (printON) {
  5358  0017AE  502C               	movf	_printON,w,c
  5359  0017B0  B4D8               	btfsc	status,2,c
  5360  0017B2  0012               	return	
  5361                           
  5362                           ;main.c: 958: display_print(dinamic);
  5363  0017B4  502B               	movf	_dinamic,w,c
  5364  0017B6  ECC2  F004         	call	i2_display_print
  5365                           
  5366                           ;main.c: 959: dinamic++;
  5367  0017BA  2A2B               	incf	_dinamic,f,c
  5368                           
  5369                           ;main.c: 960: if (dinamic >= 16)dinamic = 0;
  5370  0017BC  0E0F               	movlw	15
  5371  0017BE  642B               	cpfsgt	_dinamic,c
  5372  0017C0  0012               	return	
  5373  0017C2  0E00               	movlw	0
  5374  0017C4  6E2B               	movwf	_dinamic,c
  5375  0017C6  0012               	return	
  5376  0017C8                     __end_of_intrrupt_TMR0IF:
  5377                           	opt stack 0
  5378                           pclatu	equ	0xFFB
  5379                           pclath	equ	0xFFA
  5380                           tblptru	equ	0xFF8
  5381                           tblptrh	equ	0xFF7
  5382                           tblptrl	equ	0xFF6
  5383                           tablat	equ	0xFF5
  5384                           prodh	equ	0xFF4
  5385                           prodl	equ	0xFF3
  5386                           intcon	equ	0xFF2
  5387                           intcon2	equ	0xFF1
  5388                           postinc0	equ	0xFEE
  5389                           fsr0h	equ	0xFEA
  5390                           fsr0l	equ	0xFE9
  5391                           wreg	equ	0xFE8
  5392                           indf1	equ	0xFE7
  5393                           postinc1	equ	0xFE6
  5394                           postdec1	equ	0xFE5
  5395                           fsr1h	equ	0xFE2
  5396                           fsr1l	equ	0xFE1
  5397                           indf2	equ	0xFDF
  5398                           postinc2	equ	0xFDE
  5399                           postdec2	equ	0xFDD
  5400                           fsr2h	equ	0xFDA
  5401                           fsr2l	equ	0xFD9
  5402                           status	equ	0xFD8
  5403                           
  5404 ;; *************** function i2_display_print *****************
  5405 ;; Defined at:
  5406 ;;		line 1046 in file "main.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  column          1    wreg     unsigned char 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  column          1   10[COMRAM] unsigned char 
  5411 ;; Return value:  Size  Location     Type
  5412 ;;		None               void
  5413 ;; Registers used:
  5414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;Total ram usage:        2 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    2
  5427 ;; This function calls:
  5428 ;;		i2_display_matrix
  5429 ;;		i2_encode
  5430 ;; This function is called by:
  5431 ;;		_intrrupt_TMR0IF
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text20
  5436  000984                     __ptext20:
  5437                           	opt stack 0
  5438  000984                     i2_display_print:
  5439                           	opt stack 22
  5440                           
  5441                           ;incstack = 0
  5442                           ;i2display_print@column stored from wreg
  5443  000984  6E0B               	movwf	i2display_print@column,c
  5444                           
  5445                           ;main.c: 1047: if (column == 2)display_matrix(column, ~(pattern[encode(print_char[0])][0
      +                          ]));
  5446  000986  500B               	movf	i2display_print@column,w,c
  5447  000988  0A02               	xorlw	2
  5448  00098A  A4D8               	btfss	status,2,c
  5449  00098C  D013               	goto	i2l1939
  5450  00098E  5026               	movf	_print_char,w,c
  5451  000990  EC33  F00C         	call	i2_encode
  5452  000994  6E0A               	movwf	??i2_display_print& (0+255),c
  5453  000996  500A               	movf	??i2_display_print,w,c
  5454  000998  0D05               	mullw	5
  5455  00099A  0EFB               	movlw	low _pattern
  5456  00099C  24F3               	addwf	prodl,w,c
  5457  00099E  6ED9               	movwf	fsr2l,c
  5458  0009A0  0E08               	movlw	high _pattern
  5459  0009A2  20F4               	addwfc	prodh,w,c
  5460  0009A4  6EDA               	movwf	fsr2h,c
  5461  0009A6  50DF               	movf	indf2,w,c
  5462  0009A8  0AFF               	xorlw	255
  5463  0009AA  6E08               	movwf	i2display_matrix@data,c
  5464  0009AC  500B               	movf	i2display_print@column,w,c
  5465  0009AE  EC56  F00C         	call	i2_display_matrix
  5466  0009B2  0012               	return	
  5467  0009B4                     i2l1939:
  5468                           
  5469                           ;main.c: 1048: else if (column == 3)display_matrix(column, ~(pattern[encode(print_char[0
      +                          ])][1]));
  5470  0009B4  500B               	movf	i2display_print@column,w,c
  5471  0009B6  0A03               	xorlw	3
  5472  0009B8  A4D8               	btfss	status,2,c
  5473  0009BA  D017               	goto	i2l1943
  5474  0009BC  5026               	movf	_print_char,w,c
  5475  0009BE  EC33  F00C         	call	i2_encode
  5476  0009C2  6E0A               	movwf	??i2_display_print& (0+255),c
  5477  0009C4  500A               	movf	??i2_display_print,w,c
  5478  0009C6  0D05               	mullw	5
  5479  0009C8  0E01               	movlw	1
  5480  0009CA  26F3               	addwf	prodl,f,c
  5481  0009CC  0E00               	movlw	0
  5482  0009CE  22F4               	addwfc	prodh,f,c
  5483  0009D0  0EFB               	movlw	low _pattern
  5484  0009D2  24F3               	addwf	prodl,w,c
  5485  0009D4  6ED9               	movwf	fsr2l,c
  5486  0009D6  0E08               	movlw	high _pattern
  5487  0009D8  20F4               	addwfc	prodh,w,c
  5488  0009DA  6EDA               	movwf	fsr2h,c
  5489  0009DC  50DF               	movf	indf2,w,c
  5490  0009DE  0AFF               	xorlw	255
  5491  0009E0  6E08               	movwf	i2display_matrix@data,c
  5492  0009E2  500B               	movf	i2display_print@column,w,c
  5493  0009E4  EC56  F00C         	call	i2_display_matrix
  5494  0009E8  0012               	return	
  5495  0009EA                     i2l1943:
  5496                           
  5497                           ;main.c: 1049: else if (column == 4)display_matrix(column, ~(pattern[encode(print_char[0
      +                          ])][2]));
  5498  0009EA  500B               	movf	i2display_print@column,w,c
  5499  0009EC  0A04               	xorlw	4
  5500  0009EE  A4D8               	btfss	status,2,c
  5501  0009F0  D017               	goto	i2l1947
  5502  0009F2  5026               	movf	_print_char,w,c
  5503  0009F4  EC33  F00C         	call	i2_encode
  5504  0009F8  6E0A               	movwf	??i2_display_print& (0+255),c
  5505  0009FA  500A               	movf	??i2_display_print,w,c
  5506  0009FC  0D05               	mullw	5
  5507  0009FE  0E02               	movlw	2
  5508  000A00  26F3               	addwf	prodl,f,c
  5509  000A02  0E00               	movlw	0
  5510  000A04  22F4               	addwfc	prodh,f,c
  5511  000A06  0EFB               	movlw	low _pattern
  5512  000A08  24F3               	addwf	prodl,w,c
  5513  000A0A  6ED9               	movwf	fsr2l,c
  5514  000A0C  0E08               	movlw	high _pattern
  5515  000A0E  20F4               	addwfc	prodh,w,c
  5516  000A10  6EDA               	movwf	fsr2h,c
  5517  000A12  50DF               	movf	indf2,w,c
  5518  000A14  0AFF               	xorlw	255
  5519  000A16  6E08               	movwf	i2display_matrix@data,c
  5520  000A18  500B               	movf	i2display_print@column,w,c
  5521  000A1A  EC56  F00C         	call	i2_display_matrix
  5522  000A1E  0012               	return	
  5523  000A20                     i2l1947:
  5524                           
  5525                           ;main.c: 1050: else if (column == 5)display_matrix(column, ~(pattern[encode(print_char[0
      +                          ])][3]));
  5526  000A20  500B               	movf	i2display_print@column,w,c
  5527  000A22  0A05               	xorlw	5
  5528  000A24  A4D8               	btfss	status,2,c
  5529  000A26  D017               	goto	i2l1951
  5530  000A28  5026               	movf	_print_char,w,c
  5531  000A2A  EC33  F00C         	call	i2_encode
  5532  000A2E  6E0A               	movwf	??i2_display_print& (0+255),c
  5533  000A30  500A               	movf	??i2_display_print,w,c
  5534  000A32  0D05               	mullw	5
  5535  000A34  0E03               	movlw	3
  5536  000A36  26F3               	addwf	prodl,f,c
  5537  000A38  0E00               	movlw	0
  5538  000A3A  22F4               	addwfc	prodh,f,c
  5539  000A3C  0EFB               	movlw	low _pattern
  5540  000A3E  24F3               	addwf	prodl,w,c
  5541  000A40  6ED9               	movwf	fsr2l,c
  5542  000A42  0E08               	movlw	high _pattern
  5543  000A44  20F4               	addwfc	prodh,w,c
  5544  000A46  6EDA               	movwf	fsr2h,c
  5545  000A48  50DF               	movf	indf2,w,c
  5546  000A4A  0AFF               	xorlw	255
  5547  000A4C  6E08               	movwf	i2display_matrix@data,c
  5548  000A4E  500B               	movf	i2display_print@column,w,c
  5549  000A50  EC56  F00C         	call	i2_display_matrix
  5550  000A54  0012               	return	
  5551  000A56                     i2l1951:
  5552                           
  5553                           ;main.c: 1051: else if (column == 6)display_matrix(column, ~(pattern[encode(print_char[0
      +                          ])][4]));
  5554  000A56  500B               	movf	i2display_print@column,w,c
  5555  000A58  0A06               	xorlw	6
  5556  000A5A  A4D8               	btfss	status,2,c
  5557  000A5C  D017               	goto	i2l1955
  5558  000A5E  5026               	movf	_print_char,w,c
  5559  000A60  EC33  F00C         	call	i2_encode
  5560  000A64  6E0A               	movwf	??i2_display_print& (0+255),c
  5561  000A66  500A               	movf	??i2_display_print,w,c
  5562  000A68  0D05               	mullw	5
  5563  000A6A  0E04               	movlw	4
  5564  000A6C  26F3               	addwf	prodl,f,c
  5565  000A6E  0E00               	movlw	0
  5566  000A70  22F4               	addwfc	prodh,f,c
  5567  000A72  0EFB               	movlw	low _pattern
  5568  000A74  24F3               	addwf	prodl,w,c
  5569  000A76  6ED9               	movwf	fsr2l,c
  5570  000A78  0E08               	movlw	high _pattern
  5571  000A7A  20F4               	addwfc	prodh,w,c
  5572  000A7C  6EDA               	movwf	fsr2h,c
  5573  000A7E  50DF               	movf	indf2,w,c
  5574  000A80  0AFF               	xorlw	255
  5575  000A82  6E08               	movwf	i2display_matrix@data,c
  5576  000A84  500B               	movf	i2display_print@column,w,c
  5577  000A86  EC56  F00C         	call	i2_display_matrix
  5578  000A8A  0012               	return	
  5579  000A8C                     i2l1955:
  5580                           
  5581                           ;main.c: 1052: else if (column == 9)display_matrix(column, ~(pattern[encode(print_char[1
      +                          ])][0]));
  5582  000A8C  500B               	movf	i2display_print@column,w,c
  5583  000A8E  0A09               	xorlw	9
  5584  000A90  A4D8               	btfss	status,2,c
  5585  000A92  D013               	goto	i2l1959
  5586  000A94  5027               	movf	_print_char+1,w,c
  5587  000A96  EC33  F00C         	call	i2_encode
  5588  000A9A  6E0A               	movwf	??i2_display_print& (0+255),c
  5589  000A9C  500A               	movf	??i2_display_print,w,c
  5590  000A9E  0D05               	mullw	5
  5591  000AA0  0EFB               	movlw	low _pattern
  5592  000AA2  24F3               	addwf	prodl,w,c
  5593  000AA4  6ED9               	movwf	fsr2l,c
  5594  000AA6  0E08               	movlw	high _pattern
  5595  000AA8  20F4               	addwfc	prodh,w,c
  5596  000AAA  6EDA               	movwf	fsr2h,c
  5597  000AAC  50DF               	movf	indf2,w,c
  5598  000AAE  0AFF               	xorlw	255
  5599  000AB0  6E08               	movwf	i2display_matrix@data,c
  5600  000AB2  500B               	movf	i2display_print@column,w,c
  5601  000AB4  EC56  F00C         	call	i2_display_matrix
  5602  000AB8  0012               	return	
  5603  000ABA                     i2l1959:
  5604                           
  5605                           ;main.c: 1053: else if (column == 10)display_matrix(column, ~(pattern[encode(print_char[
      +                          1])][1]));
  5606  000ABA  500B               	movf	i2display_print@column,w,c
  5607  000ABC  0A0A               	xorlw	10
  5608  000ABE  A4D8               	btfss	status,2,c
  5609  000AC0  D017               	goto	i2l1963
  5610  000AC2  5027               	movf	_print_char+1,w,c
  5611  000AC4  EC33  F00C         	call	i2_encode
  5612  000AC8  6E0A               	movwf	??i2_display_print& (0+255),c
  5613  000ACA  500A               	movf	??i2_display_print,w,c
  5614  000ACC  0D05               	mullw	5
  5615  000ACE  0E01               	movlw	1
  5616  000AD0  26F3               	addwf	prodl,f,c
  5617  000AD2  0E00               	movlw	0
  5618  000AD4  22F4               	addwfc	prodh,f,c
  5619  000AD6  0EFB               	movlw	low _pattern
  5620  000AD8  24F3               	addwf	prodl,w,c
  5621  000ADA  6ED9               	movwf	fsr2l,c
  5622  000ADC  0E08               	movlw	high _pattern
  5623  000ADE  20F4               	addwfc	prodh,w,c
  5624  000AE0  6EDA               	movwf	fsr2h,c
  5625  000AE2  50DF               	movf	indf2,w,c
  5626  000AE4  0AFF               	xorlw	255
  5627  000AE6  6E08               	movwf	i2display_matrix@data,c
  5628  000AE8  500B               	movf	i2display_print@column,w,c
  5629  000AEA  EC56  F00C         	call	i2_display_matrix
  5630  000AEE  0012               	return	
  5631  000AF0                     i2l1963:
  5632                           
  5633                           ;main.c: 1054: else if (column == 11)display_matrix(column, ~(pattern[encode(print_char[
      +                          1])][2]));
  5634  000AF0  500B               	movf	i2display_print@column,w,c
  5635  000AF2  0A0B               	xorlw	11
  5636  000AF4  A4D8               	btfss	status,2,c
  5637  000AF6  D017               	goto	i2l1967
  5638  000AF8  5027               	movf	_print_char+1,w,c
  5639  000AFA  EC33  F00C         	call	i2_encode
  5640  000AFE  6E0A               	movwf	??i2_display_print& (0+255),c
  5641  000B00  500A               	movf	??i2_display_print,w,c
  5642  000B02  0D05               	mullw	5
  5643  000B04  0E02               	movlw	2
  5644  000B06  26F3               	addwf	prodl,f,c
  5645  000B08  0E00               	movlw	0
  5646  000B0A  22F4               	addwfc	prodh,f,c
  5647  000B0C  0EFB               	movlw	low _pattern
  5648  000B0E  24F3               	addwf	prodl,w,c
  5649  000B10  6ED9               	movwf	fsr2l,c
  5650  000B12  0E08               	movlw	high _pattern
  5651  000B14  20F4               	addwfc	prodh,w,c
  5652  000B16  6EDA               	movwf	fsr2h,c
  5653  000B18  50DF               	movf	indf2,w,c
  5654  000B1A  0AFF               	xorlw	255
  5655  000B1C  6E08               	movwf	i2display_matrix@data,c
  5656  000B1E  500B               	movf	i2display_print@column,w,c
  5657  000B20  EC56  F00C         	call	i2_display_matrix
  5658  000B24  0012               	return	
  5659  000B26                     i2l1967:
  5660                           
  5661                           ;main.c: 1055: else if (column == 12)display_matrix(column, ~(pattern[encode(print_char[
      +                          1])][3]));
  5662  000B26  500B               	movf	i2display_print@column,w,c
  5663  000B28  0A0C               	xorlw	12
  5664  000B2A  A4D8               	btfss	status,2,c
  5665  000B2C  D017               	goto	i2l1971
  5666  000B2E  5027               	movf	_print_char+1,w,c
  5667  000B30  EC33  F00C         	call	i2_encode
  5668  000B34  6E0A               	movwf	??i2_display_print& (0+255),c
  5669  000B36  500A               	movf	??i2_display_print,w,c
  5670  000B38  0D05               	mullw	5
  5671  000B3A  0E03               	movlw	3
  5672  000B3C  26F3               	addwf	prodl,f,c
  5673  000B3E  0E00               	movlw	0
  5674  000B40  22F4               	addwfc	prodh,f,c
  5675  000B42  0EFB               	movlw	low _pattern
  5676  000B44  24F3               	addwf	prodl,w,c
  5677  000B46  6ED9               	movwf	fsr2l,c
  5678  000B48  0E08               	movlw	high _pattern
  5679  000B4A  20F4               	addwfc	prodh,w,c
  5680  000B4C  6EDA               	movwf	fsr2h,c
  5681  000B4E  50DF               	movf	indf2,w,c
  5682  000B50  0AFF               	xorlw	255
  5683  000B52  6E08               	movwf	i2display_matrix@data,c
  5684  000B54  500B               	movf	i2display_print@column,w,c
  5685  000B56  EC56  F00C         	call	i2_display_matrix
  5686  000B5A  0012               	return	
  5687  000B5C                     i2l1971:
  5688                           
  5689                           ;main.c: 1056: else if (column == 13)display_matrix(column, ~(pattern[encode(print_char[
      +                          1])][4]));
  5690  000B5C  500B               	movf	i2display_print@column,w,c
  5691  000B5E  0A0D               	xorlw	13
  5692  000B60  A4D8               	btfss	status,2,c
  5693  000B62  D017               	goto	i2l1975
  5694  000B64  5027               	movf	_print_char+1,w,c
  5695  000B66  EC33  F00C         	call	i2_encode
  5696  000B6A  6E0A               	movwf	??i2_display_print& (0+255),c
  5697  000B6C  500A               	movf	??i2_display_print,w,c
  5698  000B6E  0D05               	mullw	5
  5699  000B70  0E04               	movlw	4
  5700  000B72  26F3               	addwf	prodl,f,c
  5701  000B74  0E00               	movlw	0
  5702  000B76  22F4               	addwfc	prodh,f,c
  5703  000B78  0EFB               	movlw	low _pattern
  5704  000B7A  24F3               	addwf	prodl,w,c
  5705  000B7C  6ED9               	movwf	fsr2l,c
  5706  000B7E  0E08               	movlw	high _pattern
  5707  000B80  20F4               	addwfc	prodh,w,c
  5708  000B82  6EDA               	movwf	fsr2h,c
  5709  000B84  50DF               	movf	indf2,w,c
  5710  000B86  0AFF               	xorlw	255
  5711  000B88  6E08               	movwf	i2display_matrix@data,c
  5712  000B8A  500B               	movf	i2display_print@column,w,c
  5713  000B8C  EC56  F00C         	call	i2_display_matrix
  5714  000B90  0012               	return	
  5715  000B92                     i2l1975:
  5716                           
  5717                           ;main.c: 1057: else display_matrix(column, 0x00);
  5718  000B92  0E00               	movlw	0
  5719  000B94  6E08               	movwf	i2display_matrix@data,c
  5720  000B96  500B               	movf	i2display_print@column,w,c
  5721  000B98  EC56  F00C         	call	i2_display_matrix
  5722  000B9C  0012               	return	
  5723  000B9E                     __end_ofi2_display_print:
  5724                           	opt stack 0
  5725                           pclatu	equ	0xFFB
  5726                           pclath	equ	0xFFA
  5727                           tblptru	equ	0xFF8
  5728                           tblptrh	equ	0xFF7
  5729                           tblptrl	equ	0xFF6
  5730                           tablat	equ	0xFF5
  5731                           prodh	equ	0xFF4
  5732                           prodl	equ	0xFF3
  5733                           intcon	equ	0xFF2
  5734                           intcon2	equ	0xFF1
  5735                           postinc0	equ	0xFEE
  5736                           fsr0h	equ	0xFEA
  5737                           fsr0l	equ	0xFE9
  5738                           wreg	equ	0xFE8
  5739                           indf1	equ	0xFE7
  5740                           postinc1	equ	0xFE6
  5741                           postdec1	equ	0xFE5
  5742                           fsr1h	equ	0xFE2
  5743                           fsr1l	equ	0xFE1
  5744                           indf2	equ	0xFDF
  5745                           postinc2	equ	0xFDE
  5746                           postdec2	equ	0xFDD
  5747                           fsr2h	equ	0xFDA
  5748                           fsr2l	equ	0xFD9
  5749                           status	equ	0xFD8
  5750                           
  5751 ;; *************** function _intrrupt_RCIF *****************
  5752 ;; Defined at:
  5753 ;;		line 912 in file "main.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;		None
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  ascii           1   18[COMRAM] unsigned char 
  5758 ;;  i               1    0        unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;		None               void
  5761 ;; Registers used:
  5762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;Total ram usage:        1 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    4
  5775 ;; This function calls:
  5776 ;;		_tx_send
  5777 ;;		i2_scroll
  5778 ;; This function is called by:
  5779 ;;		_isr
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text21
  5784  00114E                     __ptext21:
  5785                           	opt stack 0
  5786  00114E                     _intrrupt_RCIF:
  5787                           	opt stack 21
  5788                           
  5789                           ;main.c: 913: uint8_t i;
  5790                           ;main.c: 914: uint8_t ascii = RCREG1;
  5791                           
  5792                           ;incstack = 0
  5793  00114E  CFAE F013          	movff	4014,intrrupt_RCIF@ascii	;volatile
  5794                           
  5795                           ;main.c: 915: tx_send(ascii);
  5796  001152  5013               	movf	intrrupt_RCIF@ascii,w,c
  5797  001154  EC4B  F00C         	call	_tx_send
  5798                           
  5799                           ;main.c: 916: if (ascii == '\b') {
  5800  001158  5013               	movf	intrrupt_RCIF@ascii,w,c
  5801  00115A  0A08               	xorlw	8
  5802  00115C  A4D8               	btfss	status,2,c
  5803  00115E  D005               	goto	i2l2021
  5804                           
  5805                           ;main.c: 917: if (scroll_char_pointer > 0) {
  5806  001160  502E               	movf	_scroll_char_pointer,w,c
  5807  001162  B4D8               	btfsc	status,2,c
  5808  001164  0012               	return	
  5809                           
  5810                           ;main.c: 918: scroll_char_pointer--;
  5811  001166  062E               	decf	_scroll_char_pointer,f,c
  5812  001168  0012               	return	
  5813  00116A                     i2l2021:
  5814  00116A  5013               	movf	intrrupt_RCIF@ascii,w,c
  5815  00116C  0A7F               	xorlw	127
  5816  00116E  A4D8               	btfss	status,2,c
  5817  001170  D006               	goto	i2l2027
  5818                           
  5819                           ;main.c: 921: scroll_char_pointer = 0;
  5820  001172  0E00               	movlw	0
  5821  001174  6E2E               	movwf	_scroll_char_pointer,c
  5822                           
  5823                           ;main.c: 922: scroll(0);
  5824  001176  0E00               	movlw	0
  5825  001178  EC26  F00C         	call	i2_scroll
  5826                           
  5827                           ;main.c: 923: } else if (ascii == '\r') {
  5828  00117C  0012               	return	
  5829  00117E                     i2l2027:
  5830  00117E  5013               	movf	intrrupt_RCIF@ascii,w,c
  5831  001180  0A0D               	xorlw	13
  5832  001182  A4D8               	btfss	status,2,c
  5833  001184  D010               	goto	i2l2037
  5834                           
  5835                           ;main.c: 924: if (scroll_char_pointer) {
  5836  001186  502E               	movf	_scroll_char_pointer,w,c
  5837  001188  B4D8               	btfsc	status,2,c
  5838  00118A  D005               	goto	i2l2035
  5839                           
  5840                           ;main.c: 925: tx_send('\n');
  5841  00118C  0E0A               	movlw	10
  5842  00118E  EC4B  F00C         	call	_tx_send
  5843                           
  5844                           ;main.c: 926: return_reset = 1;
  5845  001192  0E01               	movlw	1
  5846  001194  6E41               	movwf	_return_reset,c
  5847  001196                     i2l2035:
  5848                           
  5849                           ;main.c: 927: }
  5850                           ;main.c: 928: scroll_pointer = 0;
  5851  001196  0E00               	movlw	0
  5852  001198  6E29               	movwf	_scroll_pointer+1,c
  5853  00119A  0E00               	movlw	0
  5854  00119C  6E28               	movwf	_scroll_pointer,c
  5855                           
  5856                           ;main.c: 929: scroll(1);
  5857  00119E  0E01               	movlw	1
  5858  0011A0  EC26  F00C         	call	i2_scroll
  5859                           
  5860                           ;main.c: 930: } else if ((ascii >= 0x20)&(ascii <= 0x7E)) {
  5861  0011A4  0012               	return	
  5862  0011A6                     i2l2037:
  5863  0011A6  0E1F               	movlw	31
  5864  0011A8  6413               	cpfsgt	intrrupt_RCIF@ascii,c
  5865  0011AA  0012               	return	
  5866  0011AC  0E7F               	movlw	127
  5867  0011AE  5C13               	subwf	intrrupt_RCIF@ascii,w,c
  5868  0011B0  B0D8               	btfsc	status,0,c
  5869  0011B2  0012               	return	
  5870                           
  5871                           ;main.c: 931: if (return_reset == 1) {
  5872  0011B4  0441               	decf	_return_reset,w,c
  5873  0011B6  A4D8               	btfss	status,2,c
  5874  0011B8  D004               	goto	i2l2045
  5875                           
  5876                           ;main.c: 932: return_reset = 0;
  5877  0011BA  0E00               	movlw	0
  5878  0011BC  6E41               	movwf	_return_reset,c
  5879                           
  5880                           ;main.c: 933: scroll_char_pointer = 0;
  5881  0011BE  0E00               	movlw	0
  5882  0011C0  6E2E               	movwf	_scroll_char_pointer,c
  5883  0011C2                     i2l2045:
  5884                           
  5885                           ;main.c: 934: }
  5886                           ;main.c: 935: scroll_char[scroll_char_pointer] = ascii;
  5887  0011C2  502E               	movf	_scroll_char_pointer,w,c
  5888  0011C4  0D01               	mullw	1
  5889  0011C6  0104               	movlb	4	; () banked
  5890  0011C8  0E00               	movlw	low _scroll_char
  5891  0011CA  24F3               	addwf	prodl,w,c
  5892  0011CC  6ED9               	movwf	fsr2l,c
  5893  0011CE  0104               	movlb	4	; () banked
  5894  0011D0  0E04               	movlw	high _scroll_char
  5895  0011D2  20F4               	addwfc	prodh,w,c
  5896  0011D4  6EDA               	movwf	fsr2h,c
  5897  0011D6  C013  FFDF         	movff	intrrupt_RCIF@ascii,indf2
  5898                           
  5899                           ; BSR set to: 4
  5900                           ;main.c: 936: scroll_char_pointer++;
  5901  0011DA  2A2E               	incf	_scroll_char_pointer,f,c
  5902                           
  5903                           ; BSR set to: 4
  5904                           ;main.c: 937: scroll(1);
  5905  0011DC  0E01               	movlw	1
  5906  0011DE  EC26  F00C         	call	i2_scroll
  5907  0011E2  0012               	return	
  5908  0011E4                     __end_of_intrrupt_RCIF:
  5909                           	opt stack 0
  5910                           pclatu	equ	0xFFB
  5911                           pclath	equ	0xFFA
  5912                           tblptru	equ	0xFF8
  5913                           tblptrh	equ	0xFF7
  5914                           tblptrl	equ	0xFF6
  5915                           tablat	equ	0xFF5
  5916                           prodh	equ	0xFF4
  5917                           prodl	equ	0xFF3
  5918                           intcon	equ	0xFF2
  5919                           intcon2	equ	0xFF1
  5920                           postinc0	equ	0xFEE
  5921                           fsr0h	equ	0xFEA
  5922                           fsr0l	equ	0xFE9
  5923                           wreg	equ	0xFE8
  5924                           indf1	equ	0xFE7
  5925                           postinc1	equ	0xFE6
  5926                           postdec1	equ	0xFE5
  5927                           fsr1h	equ	0xFE2
  5928                           fsr1l	equ	0xFE1
  5929                           indf2	equ	0xFDF
  5930                           postinc2	equ	0xFDE
  5931                           postdec2	equ	0xFDD
  5932                           fsr2h	equ	0xFDA
  5933                           fsr2l	equ	0xFD9
  5934                           status	equ	0xFD8
  5935                           
  5936 ;; *************** function i2_scroll *****************
  5937 ;; Defined at:
  5938 ;;		line 1107 in file "main.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  value           1    wreg     unsigned char 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  value           1   17[COMRAM] unsigned char 
  5943 ;; Return value:  Size  Location     Type
  5944 ;;		None               void
  5945 ;; Registers used:
  5946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;Total ram usage:        1 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    3
  5959 ;; This function calls:
  5960 ;;		i2_display_scroll
  5961 ;; This function is called by:
  5962 ;;		_intrrupt_RCIF
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           	psect	text22
  5967  00184C                     __ptext22:
  5968                           	opt stack 0
  5969  00184C                     i2_scroll:
  5970                           	opt stack 21
  5971                           
  5972                           ;incstack = 0
  5973                           ;i2scroll@value stored from wreg
  5974  00184C  6E12               	movwf	i2scroll@value,c
  5975                           
  5976                           ;main.c: 1108: if (value) {
  5977  00184E  5012               	movf	i2scroll@value,w,c
  5978  001850  B4D8               	btfsc	status,2,c
  5979  001852  D003               	goto	i2l2007
  5980                           
  5981                           ;main.c: 1109: scrollON = 1;
  5982  001854  0E01               	movlw	1
  5983  001856  6E2D               	movwf	_scrollON,c
  5984                           
  5985                           ;main.c: 1110: } else {
  5986  001858  0012               	return	
  5987  00185A                     i2l2007:
  5988                           
  5989                           ;main.c: 1111: scrollON = 0;
  5990  00185A  0E00               	movlw	0
  5991  00185C  6E2D               	movwf	_scrollON,c
  5992                           
  5993                           ;main.c: 1112: display_scroll(0x10);
  5994  00185E  0E10               	movlw	16
  5995  001860  EC76  F007         	call	i2_display_scroll
  5996  001864  0012               	return	
  5997  001866                     __end_ofi2_scroll:
  5998                           	opt stack 0
  5999                           pclatu	equ	0xFFB
  6000                           pclath	equ	0xFFA
  6001                           tblptru	equ	0xFF8
  6002                           tblptrh	equ	0xFF7
  6003                           tblptrl	equ	0xFF6
  6004                           tablat	equ	0xFF5
  6005                           prodh	equ	0xFF4
  6006                           prodl	equ	0xFF3
  6007                           intcon	equ	0xFF2
  6008                           intcon2	equ	0xFF1
  6009                           postinc0	equ	0xFEE
  6010                           fsr0h	equ	0xFEA
  6011                           fsr0l	equ	0xFE9
  6012                           wreg	equ	0xFE8
  6013                           indf1	equ	0xFE7
  6014                           postinc1	equ	0xFE6
  6015                           postdec1	equ	0xFE5
  6016                           fsr1h	equ	0xFE2
  6017                           fsr1l	equ	0xFE1
  6018                           indf2	equ	0xFDF
  6019                           postinc2	equ	0xFDE
  6020                           postdec2	equ	0xFDD
  6021                           fsr2h	equ	0xFDA
  6022                           fsr2l	equ	0xFD9
  6023                           status	equ	0xFD8
  6024                           
  6025 ;; *************** function i2_display_scroll *****************
  6026 ;; Defined at:
  6027 ;;		line 1040 in file "main.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  column          1    wreg     unsigned char 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;  column          1   16[COMRAM] unsigned char 
  6032 ;; Return value:  Size  Location     Type
  6033 ;;		None               void
  6034 ;; Registers used:
  6035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6043 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6044 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;Total ram usage:        8 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    2
  6048 ;; This function calls:
  6049 ;;		i2___lwdiv
  6050 ;;		i2___lwmod
  6051 ;;		i2_display_matrix
  6052 ;;		i2_encode
  6053 ;; This function is called by:
  6054 ;;		_intrrupt_TMR0IF
  6055 ;;		i2_scroll
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text23
  6060  000EEC                     __ptext23:
  6061                           	opt stack 0
  6062  000EEC                     i2_display_scroll:
  6063                           	opt stack 22
  6064                           
  6065                           ;incstack = 0
  6066                           ;i2display_scroll@column stored from wreg
  6067  000EEC  6E11               	movwf	i2display_scroll@column,c
  6068                           
  6069                           ;main.c: 1041: if (scroll_pointer + column < 16 || scroll_pointer + column >= 16 + scrol
      +                          l_char_pointer * 6 || (scroll_pointer + column - 16) % 6 == 5)display_matrix(column, 0x0
      +                          0);
  6070  000EEE  5011               	movf	i2display_scroll@column,w,c
  6071  000EF0  2428               	addwf	_scroll_pointer,w,c
  6072  000EF2  6E0A               	movwf	??i2_display_scroll& (0+255),c
  6073  000EF4  0E00               	movlw	0
  6074  000EF6  2029               	addwfc	_scroll_pointer+1,w,c
  6075  000EF8  6E0B               	movwf	(??i2_display_scroll+1)& (0+255),c
  6076  000EFA  0E10               	movlw	16
  6077  000EFC  5C0A               	subwf	??i2_display_scroll,w,c
  6078  000EFE  0E00               	movlw	0
  6079  000F00  580B               	subwfb	??i2_display_scroll+1,w,c
  6080  000F02  A0D8               	btfss	status,0,c
  6081  000F04  D029               	goto	i2l1875
  6082  000F06  502E               	movf	_scroll_char_pointer,w,c
  6083  000F08  0D06               	mullw	6
  6084  000F0A  0E10               	movlw	16
  6085  000F0C  26F3               	addwf	prodl,f,c
  6086  000F0E  0E00               	movlw	0
  6087  000F10  22F4               	addwfc	prodh,f,c
  6088  000F12  5011               	movf	i2display_scroll@column,w,c
  6089  000F14  2428               	addwf	_scroll_pointer,w,c
  6090  000F16  6E0A               	movwf	??i2_display_scroll& (0+255),c
  6091  000F18  0E00               	movlw	0
  6092  000F1A  2029               	addwfc	_scroll_pointer+1,w,c
  6093  000F1C  6E0B               	movwf	(??i2_display_scroll+1)& (0+255),c
  6094  000F1E  50F3               	movf	prodl,w,c
  6095  000F20  5C0A               	subwf	??i2_display_scroll,w,c
  6096  000F22  50F4               	movf	prodh,w,c
  6097  000F24  580B               	subwfb	??i2_display_scroll+1,w,c
  6098  000F26  B0D8               	btfsc	status,0,c
  6099  000F28  D017               	goto	i2l1875
  6100  000F2A  5011               	movf	i2display_scroll@column,w,c
  6101  000F2C  2428               	addwf	_scroll_pointer,w,c
  6102  000F2E  6E0A               	movwf	??i2_display_scroll& (0+255),c
  6103  000F30  0E00               	movlw	0
  6104  000F32  2029               	addwfc	_scroll_pointer+1,w,c
  6105  000F34  6E0B               	movwf	(??i2_display_scroll+1)& (0+255),c
  6106  000F36  0EF0               	movlw	240
  6107  000F38  240A               	addwf	??i2_display_scroll,w,c
  6108  000F3A  6E01               	movwf	i2___lwmod@dividend,c
  6109  000F3C  0EFF               	movlw	255
  6110  000F3E  200B               	addwfc	??i2_display_scroll+1,w,c
  6111  000F40  6E02               	movwf	i2___lwmod@dividend+1,c
  6112  000F42  0E00               	movlw	0
  6113  000F44  6E04               	movwf	i2___lwmod@divisor+1,c
  6114  000F46  0E06               	movlw	6
  6115  000F48  6E03               	movwf	i2___lwmod@divisor,c
  6116  000F4A  EC8E  F00B         	call	i2___lwmod	;wreg free
  6117  000F4E  5001               	movf	?i2___lwmod,w,c
  6118  000F50  0A05               	xorlw	5
  6119  000F52  1002               	iorwf	?i2___lwmod+1,w,c
  6120  000F54  A4D8               	btfss	status,2,c
  6121  000F56  D006               	goto	i2l1877
  6122  000F58                     i2l1875:
  6123  000F58  0E00               	movlw	0
  6124  000F5A  6E08               	movwf	i2display_matrix@data,c
  6125  000F5C  5011               	movf	i2display_scroll@column,w,c
  6126  000F5E  EC56  F00C         	call	i2_display_matrix
  6127  000F62  0012               	return	
  6128  000F64                     i2l1877:
  6129                           
  6130                           ;main.c: 1042: else display_matrix(column, ~(pattern[encode(scroll_char[(scroll_pointer 
      +                          + column - 16) / 6])][(scroll_pointer + column - 16) % 6]));
  6131  000F64  5011               	movf	i2display_scroll@column,w,c
  6132  000F66  2428               	addwf	_scroll_pointer,w,c
  6133  000F68  6E0A               	movwf	??i2_display_scroll& (0+255),c
  6134  000F6A  0E00               	movlw	0
  6135  000F6C  2029               	addwfc	_scroll_pointer+1,w,c
  6136  000F6E  6E0B               	movwf	(??i2_display_scroll+1)& (0+255),c
  6137  000F70  0EF0               	movlw	240
  6138  000F72  240A               	addwf	??i2_display_scroll,w,c
  6139  000F74  6E01               	movwf	i2___lwdiv@dividend,c
  6140  000F76  0EFF               	movlw	255
  6141  000F78  200B               	addwfc	??i2_display_scroll+1,w,c
  6142  000F7A  6E02               	movwf	i2___lwdiv@dividend+1,c
  6143  000F7C  0E00               	movlw	0
  6144  000F7E  6E04               	movwf	i2___lwdiv@divisor+1,c
  6145  000F80  0E06               	movlw	6
  6146  000F82  6E03               	movwf	i2___lwdiv@divisor,c
  6147  000F84  EC3D  F00B         	call	i2___lwdiv	;wreg free
  6148  000F88  0104               	movlb	4	; () banked
  6149  000F8A  0E00               	movlw	low _scroll_char
  6150  000F8C  2401               	addwf	?i2___lwdiv,w,c
  6151  000F8E  6ED9               	movwf	fsr2l,c
  6152  000F90  0104               	movlb	4	; () banked
  6153  000F92  0E04               	movlw	high _scroll_char
  6154  000F94  2002               	addwfc	?i2___lwdiv+1,w,c
  6155  000F96  6EDA               	movwf	fsr2h,c
  6156  000F98  50DF               	movf	indf2,w,c
  6157  000F9A  EC33  F00C         	call	i2_encode
  6158  000F9E  6E0C               	movwf	(??i2_display_scroll+2)& (0+255),c
  6159  000FA0  500C               	movf	??i2_display_scroll+2,w,c
  6160  000FA2  0D05               	mullw	5
  6161  000FA4  0EFB               	movlw	low _pattern
  6162  000FA6  6E0D               	movwf	(??i2_display_scroll+3)& (0+255),c
  6163  000FA8  0E08               	movlw	high _pattern
  6164  000FAA  6E0E               	movwf	(??i2_display_scroll+4)& (0+255),c
  6165  000FAC  50F3               	movf	prodl,w,c
  6166  000FAE  260D               	addwf	??i2_display_scroll+3,f,c
  6167  000FB0  50F4               	movf	prodh,w,c
  6168  000FB2  220E               	addwfc	??i2_display_scroll+4,f,c
  6169  000FB4  5011               	movf	i2display_scroll@column,w,c
  6170  000FB6  2428               	addwf	_scroll_pointer,w,c
  6171  000FB8  6E0F               	movwf	(??i2_display_scroll+5)& (0+255),c
  6172  000FBA  0E00               	movlw	0
  6173  000FBC  2029               	addwfc	_scroll_pointer+1,w,c
  6174  000FBE  6E10               	movwf	(??i2_display_scroll+6)& (0+255),c
  6175  000FC0  0EF0               	movlw	240
  6176  000FC2  240F               	addwf	??i2_display_scroll+5,w,c
  6177  000FC4  6E01               	movwf	i2___lwmod@dividend,c
  6178  000FC6  0EFF               	movlw	255
  6179  000FC8  2010               	addwfc	??i2_display_scroll+6,w,c
  6180  000FCA  6E02               	movwf	i2___lwmod@dividend+1,c
  6181  000FCC  0E00               	movlw	0
  6182  000FCE  6E04               	movwf	i2___lwmod@divisor+1,c
  6183  000FD0  0E06               	movlw	6
  6184  000FD2  6E03               	movwf	i2___lwmod@divisor,c
  6185  000FD4  EC8E  F00B         	call	i2___lwmod	;wreg free
  6186  000FD8  5001               	movf	?i2___lwmod,w,c
  6187  000FDA  240D               	addwf	??i2_display_scroll+3,w,c
  6188  000FDC  6ED9               	movwf	fsr2l,c
  6189  000FDE  5002               	movf	?i2___lwmod+1,w,c
  6190  000FE0  200E               	addwfc	??i2_display_scroll+4,w,c
  6191  000FE2  6EDA               	movwf	fsr2h,c
  6192  000FE4  50DF               	movf	indf2,w,c
  6193  000FE6  0AFF               	xorlw	255
  6194  000FE8  6E08               	movwf	i2display_matrix@data,c
  6195  000FEA  5011               	movf	i2display_scroll@column,w,c
  6196  000FEC  EC56  F00C         	call	i2_display_matrix
  6197  000FF0  0012               	return	
  6198  000FF2                     __end_ofi2_display_scroll:
  6199                           	opt stack 0
  6200                           pclatu	equ	0xFFB
  6201                           pclath	equ	0xFFA
  6202                           tblptru	equ	0xFF8
  6203                           tblptrh	equ	0xFF7
  6204                           tblptrl	equ	0xFF6
  6205                           tablat	equ	0xFF5
  6206                           prodh	equ	0xFF4
  6207                           prodl	equ	0xFF3
  6208                           intcon	equ	0xFF2
  6209                           intcon2	equ	0xFF1
  6210                           postinc0	equ	0xFEE
  6211                           fsr0h	equ	0xFEA
  6212                           fsr0l	equ	0xFE9
  6213                           wreg	equ	0xFE8
  6214                           indf1	equ	0xFE7
  6215                           postinc1	equ	0xFE6
  6216                           postdec1	equ	0xFE5
  6217                           fsr1h	equ	0xFE2
  6218                           fsr1l	equ	0xFE1
  6219                           indf2	equ	0xFDF
  6220                           postinc2	equ	0xFDE
  6221                           postdec2	equ	0xFDD
  6222                           fsr2h	equ	0xFDA
  6223                           fsr2l	equ	0xFD9
  6224                           status	equ	0xFD8
  6225                           
  6226 ;; *************** function i2_encode *****************
  6227 ;; Defined at:
  6228 ;;		line 1034 in file "main.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  asciicode       1    wreg     unsigned char 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  asciicode       1    0[COMRAM] unsigned char 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      unsigned char 
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;Total ram usage:        1 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; This function calls:
  6249 ;;		Nothing
  6250 ;; This function is called by:
  6251 ;;		i2_display_scroll
  6252 ;;		i2_display_print
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text24
  6257  001866                     __ptext24:
  6258                           	opt stack 0
  6259  001866                     i2_encode:
  6260                           	opt stack 23
  6261                           
  6262                           ;incstack = 0
  6263                           ;i2encode@asciicode stored from wreg
  6264  001866  6E01               	movwf	i2encode@asciicode,c
  6265                           
  6266                           ;main.c: 1035: if ((asciicode >= 0x20)&(asciicode <= 0x80)) return asciicode - 0x20;
  6267  001868  0E1F               	movlw	31
  6268  00186A  6401               	cpfsgt	i2encode@asciicode,c
  6269  00186C  D007               	goto	i2l1755
  6270  00186E  0E81               	movlw	129
  6271  001870  5C01               	subwf	i2encode@asciicode,w,c
  6272  001872  B0D8               	btfsc	status,0,c
  6273  001874  D003               	goto	i2l1755
  6274  001876  5001               	movf	i2encode@asciicode,w,c
  6275  001878  0FE0               	addlw	224
  6276  00187A  0012               	return	
  6277  00187C                     i2l1755:
  6278                           
  6279                           ;main.c: 1036: else return 0;
  6280  00187C  0E00               	movlw	0
  6281  00187E  0012               	return	
  6282  001880                     __end_ofi2_encode:
  6283                           	opt stack 0
  6284                           pclatu	equ	0xFFB
  6285                           pclath	equ	0xFFA
  6286                           tblptru	equ	0xFF8
  6287                           tblptrh	equ	0xFF7
  6288                           tblptrl	equ	0xFF6
  6289                           tablat	equ	0xFF5
  6290                           prodh	equ	0xFF4
  6291                           prodl	equ	0xFF3
  6292                           intcon	equ	0xFF2
  6293                           intcon2	equ	0xFF1
  6294                           postinc0	equ	0xFEE
  6295                           fsr0h	equ	0xFEA
  6296                           fsr0l	equ	0xFE9
  6297                           wreg	equ	0xFE8
  6298                           indf1	equ	0xFE7
  6299                           postinc1	equ	0xFE6
  6300                           postdec1	equ	0xFE5
  6301                           fsr1h	equ	0xFE2
  6302                           fsr1l	equ	0xFE1
  6303                           indf2	equ	0xFDF
  6304                           postinc2	equ	0xFDE
  6305                           postdec2	equ	0xFDD
  6306                           fsr2h	equ	0xFDA
  6307                           fsr2l	equ	0xFD9
  6308                           status	equ	0xFD8
  6309                           
  6310 ;; *************** function i2_display_matrix *****************
  6311 ;; Defined at:
  6312 ;;		line 1061 in file "main.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  column          1    wreg     unsigned char 
  6315 ;;  data            1    7[COMRAM] unsigned char 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  column          1    8[COMRAM] unsigned char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;		None               void
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, cstack
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6327 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;Total ram usage:        2 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; Hardware stack levels required when called:    1
  6334 ;; This function calls:
  6335 ;;		i2_matrix_column
  6336 ;; This function is called by:
  6337 ;;		i2_display_scroll
  6338 ;;		i2_display_print
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text25
  6343  0018AC                     __ptext25:
  6344                           	opt stack 0
  6345  0018AC                     i2_display_matrix:
  6346                           	opt stack 22
  6347                           
  6348                           ;incstack = 0
  6349                           ;i2display_matrix@column stored from wreg
  6350  0018AC  6E09               	movwf	i2display_matrix@column,c
  6351                           
  6352                           ;main.c: 1062: LATA = 0x00;
  6353  0018AE  0E00               	movlw	0
  6354  0018B0  6E89               	movwf	3977,c	;volatile
  6355                           
  6356                           ;main.c: 1063: matrix_column(column);
  6357  0018B2  5009               	movf	i2display_matrix@column,w,c
  6358  0018B4  EC8E  F00A         	call	i2_matrix_column
  6359                           
  6360                           ;main.c: 1064: LATA = data;
  6361  0018B8  C008  FF89         	movff	i2display_matrix@data,3977	;volatile
  6362  0018BC  0012               	return	
  6363  0018BE                     __end_ofi2_display_matrix:
  6364                           	opt stack 0
  6365                           pclatu	equ	0xFFB
  6366                           pclath	equ	0xFFA
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           prodh	equ	0xFF4
  6372                           prodl	equ	0xFF3
  6373                           intcon	equ	0xFF2
  6374                           intcon2	equ	0xFF1
  6375                           postinc0	equ	0xFEE
  6376                           fsr0h	equ	0xFEA
  6377                           fsr0l	equ	0xFE9
  6378                           wreg	equ	0xFE8
  6379                           indf1	equ	0xFE7
  6380                           postinc1	equ	0xFE6
  6381                           postdec1	equ	0xFE5
  6382                           fsr1h	equ	0xFE2
  6383                           fsr1l	equ	0xFE1
  6384                           indf2	equ	0xFDF
  6385                           postinc2	equ	0xFDE
  6386                           postdec2	equ	0xFDD
  6387                           fsr2h	equ	0xFDA
  6388                           fsr2l	equ	0xFD9
  6389                           status	equ	0xFD8
  6390                           
  6391 ;; *************** function i2_matrix_column *****************
  6392 ;; Defined at:
  6393 ;;		line 1068 in file "main.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  column          1    wreg     unsigned char 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  column          1    0[COMRAM] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;		None               void
  6400 ;; Registers used:
  6401 ;;		wreg
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;Total ram usage:        1 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		i2_display_matrix
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           	psect	text26
  6421  00151C                     __ptext26:
  6422                           	opt stack 0
  6423  00151C                     i2_matrix_column:
  6424                           	opt stack 22
  6425                           
  6426                           ;incstack = 0
  6427                           ;i2matrix_column@column stored from wreg
  6428  00151C  6E01               	movwf	i2matrix_column@column,c
  6429                           
  6430                           ;main.c: 1069: if ((column & 0x01) == 0)LATBbits.LATB0 = 0;
  6431  00151E  B001               	btfsc	i2matrix_column@column,0,c
  6432  001520  D002               	goto	i2l232
  6433  001522  908A               	bcf	3978,0,c	;volatile
  6434  001524  D001               	goto	i2l1677
  6435  001526                     i2l232:
  6436                           
  6437                           ;main.c: 1070: else LATBbits.LATB0 = 1;
  6438  001526  808A               	bsf	3978,0,c	;volatile
  6439  001528                     i2l1677:
  6440                           
  6441                           ;main.c: 1071: if ((column & 0x02) == 0)LATBbits.LATB1 = 0;
  6442  001528  B201               	btfsc	i2matrix_column@column,1,c
  6443  00152A  D002               	goto	i2l234
  6444  00152C  928A               	bcf	3978,1,c	;volatile
  6445  00152E  D001               	goto	i2l1681
  6446  001530                     i2l234:
  6447                           
  6448                           ;main.c: 1072: else LATBbits.LATB1 = 1;
  6449  001530  828A               	bsf	3978,1,c	;volatile
  6450  001532                     i2l1681:
  6451                           
  6452                           ;main.c: 1073: if ((column & 0x04) == 0)LATBbits.LATB2 = 0;
  6453  001532  B401               	btfsc	i2matrix_column@column,2,c
  6454  001534  D002               	goto	i2l236
  6455  001536  948A               	bcf	3978,2,c	;volatile
  6456  001538  D001               	goto	i2l1685
  6457  00153A                     i2l236:
  6458                           
  6459                           ;main.c: 1074: else LATBbits.LATB2 = 1;
  6460  00153A  848A               	bsf	3978,2,c	;volatile
  6461  00153C                     i2l1685:
  6462                           
  6463                           ;main.c: 1075: if ((column & 0x08) == 0)LATBbits.LATB3 = 0;
  6464  00153C  B601               	btfsc	i2matrix_column@column,3,c
  6465  00153E  D002               	goto	i2l238
  6466  001540  968A               	bcf	3978,3,c	;volatile
  6467  001542  D001               	goto	i2l1689
  6468  001544                     i2l238:
  6469                           
  6470                           ;main.c: 1076: else LATBbits.LATB3 = 1;
  6471  001544  868A               	bsf	3978,3,c	;volatile
  6472  001546                     i2l1689:
  6473                           
  6474                           ;main.c: 1077: if ((column & 0x01) == 0)LATBbits.LATB4 = 0;
  6475  001546  B001               	btfsc	i2matrix_column@column,0,c
  6476  001548  D002               	goto	i2l240
  6477  00154A  988A               	bcf	3978,4,c	;volatile
  6478  00154C  D001               	goto	i2l1693
  6479  00154E                     i2l240:
  6480                           
  6481                           ;main.c: 1078: else LATBbits.LATB4 = 1;
  6482  00154E  888A               	bsf	3978,4,c	;volatile
  6483  001550                     i2l1693:
  6484                           
  6485                           ;main.c: 1079: if ((column & 0x02) == 0)LATBbits.LATB5 = 0;
  6486  001550  B201               	btfsc	i2matrix_column@column,1,c
  6487  001552  D002               	goto	i2l242
  6488  001554  9A8A               	bcf	3978,5,c	;volatile
  6489  001556  D001               	goto	i2l1697
  6490  001558                     i2l242:
  6491                           
  6492                           ;main.c: 1080: else LATBbits.LATB5 = 1;
  6493  001558  8A8A               	bsf	3978,5,c	;volatile
  6494  00155A                     i2l1697:
  6495                           
  6496                           ;main.c: 1081: if ((column & 0x04) == 0)LATCbits.LATC0 = 0;
  6497  00155A  B401               	btfsc	i2matrix_column@column,2,c
  6498  00155C  D002               	goto	i2l244
  6499  00155E  908B               	bcf	3979,0,c	;volatile
  6500  001560  D001               	goto	i2l1701
  6501  001562                     i2l244:
  6502                           
  6503                           ;main.c: 1082: else LATCbits.LATC0 = 1;
  6504  001562  808B               	bsf	3979,0,c	;volatile
  6505  001564                     i2l1701:
  6506                           
  6507                           ;main.c: 1083: if ((column & 0x08) != 0)LATCbits.LATC1 = 0;
  6508  001564  A601               	btfss	i2matrix_column@column,3,c
  6509  001566  D002               	goto	i2l246
  6510  001568  928B               	bcf	3979,1,c	;volatile
  6511  00156A  D001               	goto	i2l1705
  6512  00156C                     i2l246:
  6513                           
  6514                           ;main.c: 1084: else LATCbits.LATC1 = 1;
  6515  00156C  828B               	bsf	3979,1,c	;volatile
  6516  00156E                     i2l1705:
  6517                           
  6518                           ;main.c: 1085: if ((column & 0x10) != 0) {
  6519  00156E  A801               	btfss	i2matrix_column@column,4,c
  6520  001570  0012               	return	
  6521                           
  6522                           ;main.c: 1086: LATBbits.LATB3 = 1;
  6523  001572  868A               	bsf	3978,3,c	;volatile
  6524                           
  6525                           ;main.c: 1087: LATCbits.LATC1 = 1;
  6526  001574  828B               	bsf	3979,1,c	;volatile
  6527  001576  0012               	return	
  6528  001578                     __end_ofi2_matrix_column:
  6529                           	opt stack 0
  6530                           pclatu	equ	0xFFB
  6531                           pclath	equ	0xFFA
  6532                           tblptru	equ	0xFF8
  6533                           tblptrh	equ	0xFF7
  6534                           tblptrl	equ	0xFF6
  6535                           tablat	equ	0xFF5
  6536                           prodh	equ	0xFF4
  6537                           prodl	equ	0xFF3
  6538                           intcon	equ	0xFF2
  6539                           intcon2	equ	0xFF1
  6540                           postinc0	equ	0xFEE
  6541                           fsr0h	equ	0xFEA
  6542                           fsr0l	equ	0xFE9
  6543                           wreg	equ	0xFE8
  6544                           indf1	equ	0xFE7
  6545                           postinc1	equ	0xFE6
  6546                           postdec1	equ	0xFE5
  6547                           fsr1h	equ	0xFE2
  6548                           fsr1l	equ	0xFE1
  6549                           indf2	equ	0xFDF
  6550                           postinc2	equ	0xFDE
  6551                           postdec2	equ	0xFDD
  6552                           fsr2h	equ	0xFDA
  6553                           fsr2l	equ	0xFD9
  6554                           status	equ	0xFD8
  6555                           
  6556 ;; *************** function i2___lwmod *****************
  6557 ;; Defined at:
  6558 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  dividend        2    0[COMRAM] unsigned int 
  6561 ;;  divisor         2    2[COMRAM] unsigned int 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  __lwmod         1    4[COMRAM] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  2    0[COMRAM] unsigned int 
  6566 ;; Registers used:
  6567 ;;		wreg, status,2, status,0
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;Total ram usage:        5 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		i2_display_scroll
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text27
  6587  00171C                     __ptext27:
  6588                           	opt stack 0
  6589  00171C                     i2___lwmod:
  6590                           	opt stack 23
  6591                           
  6592                           ;incstack = 0
  6593  00171C  5004               	movf	i2___lwmod@divisor+1,w,c
  6594  00171E  1003               	iorwf	i2___lwmod@divisor,w,c
  6595  001720  B4D8               	btfsc	status,2,c
  6596  001722  D018               	goto	i2l852
  6597  001724  0E01               	movlw	1
  6598  001726  6E05               	movwf	i2___lwmod@counter,c
  6599  001728  D004               	goto	i2l1793
  6600  00172A                     i2l1791:
  6601  00172A  90D8               	bcf	status,0,c
  6602  00172C  3603               	rlcf	i2___lwmod@divisor,f,c
  6603  00172E  3604               	rlcf	i2___lwmod@divisor+1,f,c
  6604  001730  2A05               	incf	i2___lwmod@counter,f,c
  6605  001732                     i2l1793:
  6606  001732  AE04               	btfss	i2___lwmod@divisor+1,7,c
  6607  001734  D7FA               	goto	i2l1791
  6608  001736                     i2l1795:
  6609  001736  5003               	movf	i2___lwmod@divisor,w,c
  6610  001738  5C01               	subwf	i2___lwmod@dividend,w,c
  6611  00173A  5004               	movf	i2___lwmod@divisor+1,w,c
  6612  00173C  5802               	subwfb	i2___lwmod@dividend+1,w,c
  6613  00173E  A0D8               	btfss	status,0,c
  6614  001740  D004               	goto	i2l1799
  6615  001742  5003               	movf	i2___lwmod@divisor,w,c
  6616  001744  5E01               	subwf	i2___lwmod@dividend,f,c
  6617  001746  5004               	movf	i2___lwmod@divisor+1,w,c
  6618  001748  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  6619  00174A                     i2l1799:
  6620  00174A  90D8               	bcf	status,0,c
  6621  00174C  3204               	rrcf	i2___lwmod@divisor+1,f,c
  6622  00174E  3203               	rrcf	i2___lwmod@divisor,f,c
  6623  001750  2E05               	decfsz	i2___lwmod@counter,f,c
  6624  001752  D7F1               	goto	i2l1795
  6625  001754                     i2l852:
  6626  001754  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  6627  001758  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  6628  00175C  0012               	return	
  6629  00175E                     __end_ofi2___lwmod:
  6630                           	opt stack 0
  6631                           pclatu	equ	0xFFB
  6632                           pclath	equ	0xFFA
  6633                           tblptru	equ	0xFF8
  6634                           tblptrh	equ	0xFF7
  6635                           tblptrl	equ	0xFF6
  6636                           tablat	equ	0xFF5
  6637                           prodh	equ	0xFF4
  6638                           prodl	equ	0xFF3
  6639                           intcon	equ	0xFF2
  6640                           intcon2	equ	0xFF1
  6641                           postinc0	equ	0xFEE
  6642                           fsr0h	equ	0xFEA
  6643                           fsr0l	equ	0xFE9
  6644                           wreg	equ	0xFE8
  6645                           indf1	equ	0xFE7
  6646                           postinc1	equ	0xFE6
  6647                           postdec1	equ	0xFE5
  6648                           fsr1h	equ	0xFE2
  6649                           fsr1l	equ	0xFE1
  6650                           indf2	equ	0xFDF
  6651                           postinc2	equ	0xFDE
  6652                           postdec2	equ	0xFDD
  6653                           fsr2h	equ	0xFDA
  6654                           fsr2l	equ	0xFD9
  6655                           status	equ	0xFD8
  6656                           
  6657 ;; *************** function i2___lwdiv *****************
  6658 ;; Defined at:
  6659 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  dividend        2    0[COMRAM] unsigned int 
  6662 ;;  divisor         2    2[COMRAM] unsigned int 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  6665 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  2    0[COMRAM] unsigned int 
  6668 ;; Registers used:
  6669 ;;		wreg, status,2, status,0
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;Total ram usage:        7 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		i2_display_scroll
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text28
  6689  00167A                     __ptext28:
  6690                           	opt stack 0
  6691  00167A                     i2___lwdiv:
  6692                           	opt stack 23
  6693                           
  6694                           ;incstack = 0
  6695  00167A  0E00               	movlw	0
  6696  00167C  6E06               	movwf	i2___lwdiv@quotient+1,c
  6697  00167E  0E00               	movlw	0
  6698  001680  6E05               	movwf	i2___lwdiv@quotient,c
  6699  001682  5004               	movf	i2___lwdiv@divisor+1,w,c
  6700  001684  1003               	iorwf	i2___lwdiv@divisor,w,c
  6701  001686  B4D8               	btfsc	status,2,c
  6702  001688  D01C               	goto	i2l842
  6703  00168A  0E01               	movlw	1
  6704  00168C  6E07               	movwf	i2___lwdiv@counter,c
  6705  00168E  D004               	goto	i2l1773
  6706  001690                     i2l1771:
  6707  001690  90D8               	bcf	status,0,c
  6708  001692  3603               	rlcf	i2___lwdiv@divisor,f,c
  6709  001694  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  6710  001696  2A07               	incf	i2___lwdiv@counter,f,c
  6711  001698                     i2l1773:
  6712  001698  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  6713  00169A  D7FA               	goto	i2l1771
  6714  00169C                     i2l1775:
  6715  00169C  90D8               	bcf	status,0,c
  6716  00169E  3605               	rlcf	i2___lwdiv@quotient,f,c
  6717  0016A0  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  6718  0016A2  5003               	movf	i2___lwdiv@divisor,w,c
  6719  0016A4  5C01               	subwf	i2___lwdiv@dividend,w,c
  6720  0016A6  5004               	movf	i2___lwdiv@divisor+1,w,c
  6721  0016A8  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  6722  0016AA  A0D8               	btfss	status,0,c
  6723  0016AC  D005               	goto	i2l1783
  6724  0016AE  5003               	movf	i2___lwdiv@divisor,w,c
  6725  0016B0  5E01               	subwf	i2___lwdiv@dividend,f,c
  6726  0016B2  5004               	movf	i2___lwdiv@divisor+1,w,c
  6727  0016B4  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  6728  0016B6  8005               	bsf	i2___lwdiv@quotient,0,c
  6729  0016B8                     i2l1783:
  6730  0016B8  90D8               	bcf	status,0,c
  6731  0016BA  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  6732  0016BC  3203               	rrcf	i2___lwdiv@divisor,f,c
  6733  0016BE  2E07               	decfsz	i2___lwdiv@counter,f,c
  6734  0016C0  D7ED               	goto	i2l1775
  6735  0016C2                     i2l842:
  6736  0016C2  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  6737  0016C6  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  6738  0016CA  0012               	return	
  6739  0016CC                     __end_ofi2___lwdiv:
  6740                           	opt stack 0
  6741                           pclatu	equ	0xFFB
  6742                           pclath	equ	0xFFA
  6743                           tblptru	equ	0xFF8
  6744                           tblptrh	equ	0xFF7
  6745                           tblptrl	equ	0xFF6
  6746                           tablat	equ	0xFF5
  6747                           prodh	equ	0xFF4
  6748                           prodl	equ	0xFF3
  6749                           intcon	equ	0xFF2
  6750                           intcon2	equ	0xFF1
  6751                           postinc0	equ	0xFEE
  6752                           fsr0h	equ	0xFEA
  6753                           fsr0l	equ	0xFE9
  6754                           wreg	equ	0xFE8
  6755                           indf1	equ	0xFE7
  6756                           postinc1	equ	0xFE6
  6757                           postdec1	equ	0xFE5
  6758                           fsr1h	equ	0xFE2
  6759                           fsr1l	equ	0xFE1
  6760                           indf2	equ	0xFDF
  6761                           postinc2	equ	0xFDE
  6762                           postdec2	equ	0xFDD
  6763                           fsr2h	equ	0xFDA
  6764                           fsr2l	equ	0xFD9
  6765                           status	equ	0xFD8
  6766                           
  6767 ;; *************** function _tx_send *****************
  6768 ;; Defined at:
  6769 ;;		line 992 in file "main.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  asciicode       1    wreg     unsigned char 
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;  asciicode       1    6[COMRAM] unsigned char 
  6774 ;; Return value:  Size  Location     Type
  6775 ;;		None               void
  6776 ;; Registers used:
  6777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;Total ram usage:        1 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    1
  6790 ;; This function calls:
  6791 ;;		_ringbuf_put
  6792 ;; This function is called by:
  6793 ;;		_intrrupt_RCIF
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text29
  6798  001896                     __ptext29:
  6799                           	opt stack 0
  6800  001896                     _tx_send:
  6801                           	opt stack 23
  6802                           
  6803                           ;incstack = 0
  6804                           ;tx_send@asciicode stored from wreg
  6805  001896  6E07               	movwf	tx_send@asciicode,c
  6806                           
  6807                           ;main.c: 993: ringbuf_put(&tx_buf, asciicode);
  6808  001898  0E00               	movlw	high _tx_buf
  6809  00189A  6E02               	movwf	ringbuf_put@rb+1,c
  6810  00189C  0E2F               	movlw	low _tx_buf
  6811  00189E  6E01               	movwf	ringbuf_put@rb,c
  6812  0018A0  C007  F003         	movff	tx_send@asciicode,ringbuf_put@asciicode
  6813  0018A4  ECEA  F009         	call	_ringbuf_put	;wreg free
  6814                           
  6815                           ;main.c: 994: PIE1bits.TX1IE = 1;
  6816  0018A8  889D               	bsf	3997,4,c	;volatile
  6817  0018AA  0012               	return	
  6818  0018AC                     __end_of_tx_send:
  6819                           	opt stack 0
  6820                           pclatu	equ	0xFFB
  6821                           pclath	equ	0xFFA
  6822                           tblptru	equ	0xFF8
  6823                           tblptrh	equ	0xFF7
  6824                           tblptrl	equ	0xFF6
  6825                           tablat	equ	0xFF5
  6826                           prodh	equ	0xFF4
  6827                           prodl	equ	0xFF3
  6828                           intcon	equ	0xFF2
  6829                           intcon2	equ	0xFF1
  6830                           postinc0	equ	0xFEE
  6831                           fsr0h	equ	0xFEA
  6832                           fsr0l	equ	0xFE9
  6833                           wreg	equ	0xFE8
  6834                           indf1	equ	0xFE7
  6835                           postinc1	equ	0xFE6
  6836                           postdec1	equ	0xFE5
  6837                           fsr1h	equ	0xFE2
  6838                           fsr1l	equ	0xFE1
  6839                           indf2	equ	0xFDF
  6840                           postinc2	equ	0xFDE
  6841                           postdec2	equ	0xFDD
  6842                           fsr2h	equ	0xFDA
  6843                           fsr2l	equ	0xFD9
  6844                           status	equ	0xFD8
  6845                           
  6846 ;; *************** function _ringbuf_put *****************
  6847 ;; Defined at:
  6848 ;;		line 1006 in file "main.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  6851 ;;		 -> tx_buf(5), 
  6852 ;;  asciicode       1    2[COMRAM] unsigned char 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;		None               void
  6857 ;; Registers used:
  6858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6864 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;Total ram usage:        6 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_tx_send
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text30
  6878  0013D4                     __ptext30:
  6879                           	opt stack 0
  6880  0013D4                     _ringbuf_put:
  6881                           	opt stack 23
  6882                           
  6883                           ;main.c: 1007: rb->buf[rb->head] = asciicode;
  6884                           
  6885                           ;incstack = 0
  6886  0013D4  EE20 F003          	lfsr	2,3
  6887  0013D8  5001               	movf	ringbuf_put@rb,w,c
  6888  0013DA  26D9               	addwf	fsr2l,f,c
  6889  0013DC  5002               	movf	ringbuf_put@rb+1,w,c
  6890  0013DE  22DA               	addwfc	fsr2h,f,c
  6891  0013E0  50DF               	movf	indf2,w,c
  6892  0013E2  6E04               	movwf	??_ringbuf_put& (0+255),c
  6893  0013E4  5004               	movf	??_ringbuf_put,w,c
  6894  0013E6  0D01               	mullw	1
  6895  0013E8  C001  FFD9         	movff	ringbuf_put@rb,fsr2l
  6896  0013EC  C002  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  6897  0013F0  CFDE F005          	movff	postinc2,??_ringbuf_put+1
  6898  0013F4  CFDD F006          	movff	postdec2,??_ringbuf_put+2
  6899  0013F8  50F3               	movf	prodl,w,c
  6900  0013FA  2405               	addwf	??_ringbuf_put+1,w,c
  6901  0013FC  6ED9               	movwf	fsr2l,c
  6902  0013FE  50F4               	movf	prodh,w,c
  6903  001400  2006               	addwfc	??_ringbuf_put+2,w,c
  6904  001402  6EDA               	movwf	fsr2h,c
  6905  001404  C003  FFDF         	movff	ringbuf_put@asciicode,indf2
  6906                           
  6907                           ;main.c: 1008: rb->head++;
  6908  001408  EE20 F003          	lfsr	2,3
  6909  00140C  5001               	movf	ringbuf_put@rb,w,c
  6910  00140E  26D9               	addwf	fsr2l,f,c
  6911  001410  5002               	movf	ringbuf_put@rb+1,w,c
  6912  001412  22DA               	addwfc	fsr2h,f,c
  6913  001414  2ADF               	incf	indf2,f,c
  6914                           
  6915                           ;main.c: 1009: if (rb->head >= rb->size) {
  6916  001416  EE20 F003          	lfsr	2,3
  6917  00141A  5001               	movf	ringbuf_put@rb,w,c
  6918  00141C  26D9               	addwf	fsr2l,f,c
  6919  00141E  5002               	movf	ringbuf_put@rb+1,w,c
  6920  001420  22DA               	addwfc	fsr2h,f,c
  6921  001422  50DF               	movf	indf2,w,c
  6922  001424  6E04               	movwf	??_ringbuf_put& (0+255),c
  6923  001426  EE20 F002          	lfsr	2,2
  6924  00142A  5001               	movf	ringbuf_put@rb,w,c
  6925  00142C  26D9               	addwf	fsr2l,f,c
  6926  00142E  5002               	movf	ringbuf_put@rb+1,w,c
  6927  001430  22DA               	addwfc	fsr2h,f,c
  6928  001432  50DF               	movf	indf2,w,c
  6929  001434  5C04               	subwf	??_ringbuf_put,w,c
  6930  001436  A0D8               	btfss	status,0,c
  6931  001438  0012               	return	
  6932                           
  6933                           ;main.c: 1010: rb->head = 0;
  6934  00143A  EE20 F003          	lfsr	2,3
  6935  00143E  5001               	movf	ringbuf_put@rb,w,c
  6936  001440  26D9               	addwf	fsr2l,f,c
  6937  001442  5002               	movf	ringbuf_put@rb+1,w,c
  6938  001444  22DA               	addwfc	fsr2h,f,c
  6939  001446  0E00               	movlw	0
  6940  001448  6EDF               	movwf	indf2,c
  6941  00144A  0012               	return	
  6942  00144C                     __end_of_ringbuf_put:
  6943                           	opt stack 0
  6944  0000                     pclatu	equ	0xFFB
  6945                           pclath	equ	0xFFA
  6946                           tblptru	equ	0xFF8
  6947                           tblptrh	equ	0xFF7
  6948                           tblptrl	equ	0xFF6
  6949                           tablat	equ	0xFF5
  6950                           prodh	equ	0xFF4
  6951                           prodl	equ	0xFF3
  6952                           intcon	equ	0xFF2
  6953                           intcon2	equ	0xFF1
  6954                           postinc0	equ	0xFEE
  6955                           fsr0h	equ	0xFEA
  6956                           fsr0l	equ	0xFE9
  6957                           wreg	equ	0xFE8
  6958                           indf1	equ	0xFE7
  6959                           postinc1	equ	0xFE6
  6960                           postdec1	equ	0xFE5
  6961                           fsr1h	equ	0xFE2
  6962                           fsr1l	equ	0xFE1
  6963                           indf2	equ	0xFDF
  6964                           postinc2	equ	0xFDE
  6965                           postdec2	equ	0xFDD
  6966                           fsr2h	equ	0xFDA
  6967                           fsr2l	equ	0xFD9
  6968                           status	equ	0xFD8
  6969                           pclatu	equ	0xFFB
  6970                           pclath	equ	0xFFA
  6971                           tblptru	equ	0xFF8
  6972                           tblptrh	equ	0xFF7
  6973                           tblptrl	equ	0xFF6
  6974                           tablat	equ	0xFF5
  6975                           prodh	equ	0xFF4
  6976                           prodl	equ	0xFF3
  6977                           intcon	equ	0xFF2
  6978                           intcon2	equ	0xFF1
  6979                           postinc0	equ	0xFEE
  6980                           fsr0h	equ	0xFEA
  6981                           fsr0l	equ	0xFE9
  6982                           wreg	equ	0xFE8
  6983                           indf1	equ	0xFE7
  6984                           postinc1	equ	0xFE6
  6985                           postdec1	equ	0xFE5
  6986                           fsr1h	equ	0xFE2
  6987                           fsr1l	equ	0xFE1
  6988                           indf2	equ	0xFDF
  6989                           postinc2	equ	0xFDE
  6990                           postdec2	equ	0xFDD
  6991                           fsr2h	equ	0xFDA
  6992                           fsr2l	equ	0xFD9
  6993                           status	equ	0xFD8
  6994                           
  6995                           	psect	rparam
  6996  0000                     pclatu	equ	0xFFB
  6997                           pclath	equ	0xFFA
  6998                           tblptru	equ	0xFF8
  6999                           tblptrh	equ	0xFF7
  7000                           tblptrl	equ	0xFF6
  7001                           tablat	equ	0xFF5
  7002                           prodh	equ	0xFF4
  7003                           prodl	equ	0xFF3
  7004                           intcon	equ	0xFF2
  7005                           intcon2	equ	0xFF1
  7006                           postinc0	equ	0xFEE
  7007                           fsr0h	equ	0xFEA
  7008                           fsr0l	equ	0xFE9
  7009                           wreg	equ	0xFE8
  7010                           indf1	equ	0xFE7
  7011                           postinc1	equ	0xFE6
  7012                           postdec1	equ	0xFE5
  7013                           fsr1h	equ	0xFE2
  7014                           fsr1l	equ	0xFE1
  7015                           indf2	equ	0xFDF
  7016                           postinc2	equ	0xFDE
  7017                           postdec2	equ	0xFDD
  7018                           fsr2h	equ	0xFDA
  7019                           fsr2l	equ	0xFD9
  7020                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        696
    BSS         1294
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      65
    BANK0           160    116     116
    BANK1           256    255     256
    BANK2           256    128     256
    BANK3           256      0      79
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 255
		 -> main@buf(BANK1[255]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 255
		 -> main@buf(BANK1[255]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 255
		 -> main@buf(BANK1[255]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 255
		 -> main@buf(BANK1[255]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 255
		 -> main@buf(BANK1[255]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    S21ringbuf$buf	PTR unsigned char  size(2) Largest target is 255
		 -> main@buf(BANK1[255]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 255
		 -> main@buf(BANK1[255]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_intrrupt_RCIF
    _intrrupt_TXIF->_ringbuf_pop
    _intrrupt_TMR3IF->i2_sw
    _intrrupt_TMR0IF->i2_display_scroll
    i2_display_print->i2_display_matrix
    _intrrupt_RCIF->i2_scroll
    i2_scroll->i2_display_scroll
    i2_display_scroll->i2_display_matrix
    i2_display_matrix->i2___lwdiv
    _tx_send->_ringbuf_put

Critical Paths under _main in BANK0

    _main->_scroll
    _scroll->_display_scroll
    _display_scroll->_display_matrix
    _print->_display_print
    _display_print->_display_matrix
    _display_matrix->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               481   481      0    6834
                                             18 BANK0     98    98      0
                                              0 BANK1    255   255      0
                                              0 BANK2    128   128      0
                              _print
                       _ringbuf_init
                             _scroll
                                 _sw
 ---------------------------------------------------------------------------------
 (1) _sw                                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _scroll                                               1     1      0    2390
                                             17 BANK0      1     1      0
                     _display_scroll
 ---------------------------------------------------------------------------------
 (2) _display_scroll                                       8     8      0    2359
                                              9 BANK0      8     8      0
                            ___lwdiv
                            ___lwmod
                     _display_matrix
                             _encode
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     492
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     371
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         5     0      5     381
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (1) _print                                                1     1      0    1961
                                             11 BANK0      1     1      0
                      _display_print
 ---------------------------------------------------------------------------------
 (2) _display_print                                        2     2      0    1930
                                              9 BANK0      2     2      0
                     _display_matrix
                             _encode
 ---------------------------------------------------------------------------------
 (3) _encode                                               1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _display_matrix                                       2     1      1    1186
                                              7 BANK0      2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             _encode (ARG)
                      _matrix_column
 ---------------------------------------------------------------------------------
 (4) _matrix_column                                        1     1      0     279
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 14    14      0    4617
                                             19 COMRAM    14    14      0
                      _intrrupt_RCIF
                    _intrrupt_TMR0IF
                    _intrrupt_TMR1IF
                    _intrrupt_TMR3IF
                      _intrrupt_TXIF
 ---------------------------------------------------------------------------------
 (6) _intrrupt_TXIF                                        0     0      0     296
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (7) _ringbuf_pop                                          6     4      2     148
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          4     2      2     148
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _intrrupt_TMR3IF                                      3     3      0     200
                                              1 COMRAM     3     3      0
                               i2_sw
 ---------------------------------------------------------------------------------
 (7) i2_sw                                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _intrrupt_TMR1IF                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _intrrupt_TMR0IF                                      0     0      0    2385
                    i2_display_print
                   i2_display_scroll
 ---------------------------------------------------------------------------------
 (7) i2_display_print                                      2     2      0    1108
                                              9 COMRAM     2     2      0
                   i2_display_matrix
                           i2_encode
 ---------------------------------------------------------------------------------
 (6) _intrrupt_RCIF                                        2     2      0    1736
                                             18 COMRAM     1     1      0
                            _tx_send
                           i2_scroll
 ---------------------------------------------------------------------------------
 (7) i2_scroll                                             1     1      0    1299
                                             17 COMRAM     1     1      0
                   i2_display_scroll
 ---------------------------------------------------------------------------------
 (7) i2_display_scroll                                     8     8      0    1277
                                              9 COMRAM     8     8      0
                          i2___lwdiv
                          i2___lwmod
                   i2_display_matrix
                           i2_encode
 ---------------------------------------------------------------------------------
 (8) i2_encode                                             1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_display_matrix                                     2     1      1     580
                                              7 COMRAM     2     1      1
                          i2___lwdiv (ARG)
                          i2___lwmod (ARG)
                           i2_encode (ARG)
                    i2_matrix_column
 ---------------------------------------------------------------------------------
 (9) i2_matrix_column                                      1     1      0     198
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2___lwmod                                            5     1      4     263
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _tx_send                                              1     1      0     282
                                              6 COMRAM     1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (8) _ringbuf_put                                          6     3      3     260
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _print
     _display_print
       _display_matrix
         ___lwdiv (ARG)
         ___lwmod (ARG)
         _encode (ARG)
         _matrix_column (ARG)
       _encode
   _ringbuf_init
   _scroll
     _display_scroll
       ___lwdiv
       ___lwmod
       _display_matrix
         ___lwdiv (ARG)
         ___lwmod (ARG)
         _encode (ARG)
         _matrix_column (ARG)
       _encode
   _sw

 _isr (ROOT)
   _intrrupt_RCIF
     _tx_send
       _ringbuf_put
     i2_scroll
       i2_display_scroll
         i2___lwdiv
         i2___lwmod
         i2_display_matrix
           i2___lwdiv (ARG)
           i2___lwmod (ARG)
           i2_encode (ARG)
           i2_matrix_column (ARG)
         i2_encode
   _intrrupt_TMR0IF
     i2_display_print
       i2_display_matrix
         i2___lwdiv (ARG)
         i2___lwmod (ARG)
         i2_encode (ARG)
         i2_matrix_column (ARG)
       i2_encode
     i2_display_scroll
       i2___lwdiv
       i2___lwmod
       i2_display_matrix
         i2___lwdiv (ARG)
         i2___lwmod (ARG)
         i2_encode (ARG)
         i2_matrix_column (ARG)
       i2_encode
   _intrrupt_TMR1IF
   _intrrupt_TMR3IF
     i2_sw
   _intrrupt_TXIF
     _ringbuf_num
     _ringbuf_pop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     5D7      37       38.4%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      FF      14       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      4F      11       30.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     80     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FF     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      74       5       72.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      41       1       68.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     403      12        0.0%
DATA                 0      0     9DA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Apr 04 23:50:52 2016

 __size_ofi2_display_print 021A                         _sw 15D2         i2___lwdiv@dividend 0001  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                        l240 148A                        l232 145A  
                      l242 1496                        l234 1466                        l244 14A2  
                      l236 1472                        l246 14AE                        l238 147E  
                      ?_sw 0001                        l842 13CA                        l852 1512  
             __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000     __end_of_display_matrix 1896  
                      _isr 0008     __end_of_display_scroll 0EEC                        sw@i 0060  
                      prod 000FF3                        wreg 000FE8                 _TXSTA1bits 000FAC  
 __end_ofi2_display_matrix 18BE             _long_hold_flag 01FF           ?i2_matrix_column 0001  
                     ??_sw 0060               __CFG_LVP$OFF 000000   __end_ofi2_display_scroll 0FF2  
                     l2411 1480                       l2403 1468                       l2423 14A4  
                     l2415 148C                       l2407 1474                       l2511 07BC  
                     l2503 073C                       l2441 180C                       l2427 14B0  
                     l2419 1498                       l2531 08F4                       l2523 0874  
                     l2515 07FC                       l2507 077C                       l2461 138C  
                     l2535 0934                       l2527 08B4                       l2519 083C  
                     l2551 15D8                       l2703 02EE                       l2457 137A  
                     l2481 14E0                       l2545 1822                       l2713 0358  
                     l2539 0974                       l2459 1386                       l2563 15FC  
                     l2555 15E4                       l2803 068C                       l2723 03C2  
                     l2469 13BC                       l2485 1504                       l2477 14CE  
                     l2733 042C                       l2709 0328                       l2399 145C  
                     l2479 14DA                       l2495 0E10                       l2559 15F0  
                     l2751 0482                       l2743 046E                       l2719 0392  
                     l2671 01EC                       l2497 0E20                       l2569 1608  
                     l2809 06D6                       l2729 03FC                       l2673 01F0  
                     l2665 01C4                       l2587 1840                       l2763 04FA  
                     l2755 049C                       l2683 023C                       l2667 01C8  
                     l2685 0240                       l2677 0214                       l2767 054A  
                     l2695 029A                       l2679 0218                       l2687 025C  
                     l2793 0624                       l2777 059C                       l2689 0264  
                     l2699 02BE                       l2797 063A                       l2789 0606  
            i2scroll@value 0012                       ?_isr 0001                       _LATA 000F89  
                     u3104 04DC                       u3105 04D6                       u3084 04B2  
                     u3085 04AC                       u2911 0160                       u2921 0172  
                     u2931 0184                       u2860 15E0                       u2941 0196  
                     u2870 15EC                       u2951 01A8                       u2880 15F8  
                     u2890 1604             ?_display_print 0001                       i2_sw 1628  
                     _main 00B6                       fsr0h 000FEA                       fsr1h 000FE2  
       i2___lwdiv@quotient 0005                       fsr0l 000FE9                       fsr2h 000FDA  
                     indf1 000FE7                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9              __CFG_BORV$190 000000                       pclat 000FFA  
                     prodh 000FF4                main@sw_flag 00D0                       prodl 000FF3  
                     start 00B2              __CFG_IESO$OFF 000000                      ??_isr 0014  
    i2matrix_column@column 0001               _BAUDCON1bits 000FB8                      ?i2_sw 0001  
   i2display_scroll@column 0011       display_matrix@column 0068                      ?_main 0001  
        ??_intrrupt_TMR0IF 0012          ??_intrrupt_TMR1IF 0001          ??_intrrupt_TMR3IF 0002  
                    _RC1IF 007CF5            __end_of___lwdiv 13D4            __end_of___lwmod 151C  
                    i2l132 0078                      i2l240 154E                      i2l232 1526  
                    i2l153 17AE                      i2l242 1558                      i2l234 1530  
                    i2l244 1562                      i2l236 153A                      i2l148 17EA  
                    i2l246 156C                      i2l238 1544                      i2l169 10FE  
                    i2l842 16C2                      i2l852 1754            ?_display_matrix 0067  
                    _TX1IE 007CEC                      _TX1IF 007CF4                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94            ?_display_scroll 0001  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
                    i2sw@i 0001              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000      i2display_print@column 000B  
       __CFG_MCLRE$EXTMCLR 000000                      _print 182E                      main@i 00D3  
                    main@j 00D2      __end_of_intrrupt_RCIF 11E4             __CFG_BOREN$OFF 000000  
    __end_of_intrrupt_TXIF 17EE                      tablat 000FF5                      status 000FD8  
         __end_ofi2_encode 1880            __end_of_tx_send 18AC           __end_ofi2_scroll 1866  
       __size_ofi2___lwdiv 0052         __size_ofi2___lwmod 0042               __end_ofi2_sw 167A  
          __initialization 0FF2               __end_of_main 0700        ringbuf_init@bufsize 0064  
                   ??i2_sw 0001                     ??_main 0072              __activetblptr 000002  
           __CFG_PLLCFG$ON 000000          ??i2_display_print 000A            ??_display_print 0069  
                   ?_print 0001                     _ANSELA 000F38                     _ANSELB 000F39  
                   _ANSELC 000F3A                     i2l2021 116A                     i2l1141 1358  
                   i2l2007 185A                     i2l1129 12AC                     i2l2035 1196  
                   i2l2027 117E                     i2l2045 11C2                     i2l2037 11A6  
                   i2l2161 006E                     i2l2145 004A                     i2l2083 1130  
                   i2l2075 10C4                     i2l2155 0064                     i2l1701 1564  
                   i2l2085 1144                     i2l1705 156E             __CFG_WDTEN$OFF 000000  
                   i2l1681 1532                     i2l1771 1690                     i2l1755 187C  
                   i2l1773 1698                     i2l1693 1550                     i2l1685 153C  
                   i2l1677 1528                     i2l1783 16B8                     i2l1775 169C  
                   i2l1791 172A                     i2l1951 0A56                     i2l1943 09EA  
                   i2l1793 1732                     i2l1697 155A                     i2l1689 1546  
                   i2l1795 1736                     i2l1875 0F58                     i2l1971 0B5C  
                   i2l1963 0AF0                     i2l1955 0A8C                     i2l1947 0A20  
                   i2l1939 09B4                     i2l1877 0F64                     i2l1799 174A  
                   i2l1975 0B92                     i2l1967 0B26                     i2l1959 0ABA  
                   i2l1991 1650                     i2l1983 1638                     i2l1987 1644  
                   i2l1979 162C                     i2l1997 165C                     _RCREG1 000FAE  
                   _SPBRG1 000FAF                     _TXREG1 000FAD             __CFG_XINST$OFF 000000  
             ?_ringbuf_pop 0001               ?_ringbuf_num 0001               ?_ringbuf_put 0001  
                ??___lwdiv 0064                     _cnt_t1 002A                  ??___lwmod 0064  
                   _encode 17EE                     _cnt_sw 0022                     clear_0 0FFA  
                   clear_1 100E                     clear_2 1024                     _scroll 1810  
                   _tx_buf 002F               __pdataBIGRAM 08FB               __pdataCOMRAM 0034  
        __end_ofi2___lwdiv 16CC          __end_ofi2___lwmod 175E                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_tx_send 0007  
          __CFG_HFOFST$OFF 000000                 __accesstop 0060    __end_of__initialization 10AE  
          __CFG_PBADEN$OFF 000000         i2___lwmod@dividend 0001     __size_of_matrix_column 0070  
           __pcstackCOMRAM 0001               __pidataBANK2 11E4               __pidataBANK3 16CC  
      matrix_column@column 0060              __end_of_print 184C                 __end_of_sw 1628  
                ?i2_encode 0001                  ?i2_scroll 0001          ?i2_display_matrix 0008  
      display_print@column 006A                    ??_print 006B          ?i2_display_scroll 0001  
               __pbssBANK1 01FF                 __pbssBANK4 0400         ??i2_display_matrix 0009  
       ??i2_display_scroll 000A            _intrrupt_TMR0IF 1796            _intrrupt_TMR1IF 175E  
          _intrrupt_TMR3IF 10B8         __CFG_CCP2MX$PORTC1 000000         __CFG_CCP3MX$PORTB5 000000  
         ??_display_matrix 0068                    ?_encode 0001           ??_display_scroll 0069  
                  ?_scroll 0001                 ??i2_encode 0001                 ??i2_scroll 0012  
            _matrix_column 144C          __CFG_PRICLKEN$OFF 000000   __size_ofi2_matrix_column 005C  
          __CFG_PWRTEN$OFF 000000                    __Hparam 0000                    __Lparam 0000  
          i2_display_print 0984              ?_ringbuf_init 0060                    ___lwdiv 135C  
                  ___lwmod 14BC            __size_of_encode 0022       __size_of_ringbuf_pop 007A  
     __size_of_ringbuf_num 007E       __size_of_ringbuf_put 0078            __CFG_STVREN$OFF 000000  
                  __pcinit 0FF2                    __ramtop 1000                    _dinamic 002B  
                  __ptext0 00B6                    __ptext1 15D2                    __ptext2 1810  
                  __ptext3 0D7A                    __ptext4 14BC                    __ptext5 135C  
                  __ptext6 1578                    __ptext7 182E                    __ptext8 0700  
                  __ptext9 17EE            __size_of_scroll 001E                  _T0CONbits 000FD5  
                _T1CONbits 000FCD               __size_of_isr 00AA                  _T3CONbits 000FB1  
           ?_matrix_column 0001                    _pattern 08FB                    _printON 002C  
              scroll@value 0071                    main@buf 0100                    _tx_send 1896  
     end_of_initialization 10AE    __end_of_intrrupt_TMR0IF 17C8    __end_of_intrrupt_TMR1IF 1796  
  __end_of_intrrupt_TMR3IF 114E              __Lmediumconst 0000             ??_ringbuf_init 0065  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE     __size_of_intrrupt_RCIF 0096  
   __size_of_intrrupt_TXIF 0026                  _PORTCbits 000F82       display_scroll@column 0070  
         intrrupt_TMR3IF@i 0004                 _print_char 0026          i2___lwdiv@divisor 0003  
                i2___lwdiv 167A                  i2___lwmod 171C          i2___lwdiv@counter 0007  
    __end_of_display_print 0984         display_matrix@data 0067    __end_ofi2_display_print 0B9E  
           ringbuf_init@rb 0060             ringbuf_pop@ret 0006          ??i2_matrix_column 0001  
            __pidataBIGRAM 0B9E              __pidataCOMRAM 18BE             __end_of_encode 1810  
           _scroll_pointer 0028            ??_matrix_column 0060             __end_of_scroll 182E  
      start_initialization 0FF2                __end_of_isr 00B2          __size_ofi2_encode 001A  
               ?i2___lwdiv 0001          __size_ofi2_scroll 001A                 ?i2___lwmod 0001  
            _intrrupt_RCIF 114E              _intrrupt_TXIF 17C8           ?_intrrupt_TMR0IF 0001  
         ?_intrrupt_TMR1IF 0001           ?_intrrupt_TMR3IF 0001  __size_ofi2_display_matrix 0012  
        i2encode@asciicode 0001  __size_ofi2_display_scroll 0106                   ??_encode 0060  
              __pdataBANK2 0200                __pdataBANK3 0300                   ??_scroll 0071  
              __pbssBIGRAM 04FF                __pbssCOMRAM 0022              __pcstackBANK0 0060  
            __pcstackBANK1 0100              __pcstackBANK2 0280          i2___lwmod@divisor 0003  
        i2___lwmod@counter 0005       __end_of_ringbuf_init 15D2           tx_send@asciicode 0007  
           ?_intrrupt_RCIF 0001             ?_intrrupt_TXIF 0001      main@preset_eep_char_0 02C3  
    main@preset_eep_char_1 02E2      main@preset_eep_char_2 0074      main@preset_eep_char_3 0280  
         ?i2_display_print 0001           ___lwdiv@dividend 0060                  __pintcode 0008  
                 ?___lwdiv 0060                   ?___lwmod 0060     i2display_matrix@column 0009  
         ___lwdiv@quotient 0065                   ?_tx_send 0001                ??i2___lwdiv 0005  
              ??i2___lwmod 0005             __size_of_print 001E                __size_of_sw 0056  
 ringbuf_init@internal_buf 0062                   _LATBbits 000F8A                   _LATCbits 000F8B  
                 _IPR1bits 000F9F                   _IPR2bits 000FA2                   _PIE1bits 000F9D  
                 _PIE2bits 000FA0                   i2u213_44 1124                   i2u213_45 1120  
                 i2u192_40 1634                   i2u193_40 1640                   _PIR1bits 000F9E  
                 i2u194_40 164C                   i2u195_40 1658                   _PIR2bits 000FA1  
            ??_ringbuf_pop 0003              ??_ringbuf_num 0003              ??_ringbuf_put 0004  
         __CFG_WDTPS$32768 000000                  main@F7640 0300                  main@F7642 0200  
                main@F7636 0243                  main@F7644 0034                  main@F7638 0262  
               print@value 006B                   i2_encode 1866                   i2_scroll 184C  
  __size_of_display_matrix 0016              ringbuf_pop@rb 0001              ringbuf_num@rb 0001  
  __size_of_display_scroll 0172            ??_intrrupt_RCIF 0013              ringbuf_put@rb 0001  
          ??_intrrupt_TXIF 0007                _INTCON2bits 000FF1                  copy_data0 103E  
                copy_data1 1062                  copy_data2 1082                  copy_data3 10A2  
          i2_matrix_column 151C                   __Hrparam 0000                   __Lrparam 0000  
         i2_display_matrix 18AC           i2_display_scroll 0EEC          __CFG_P2BMX$PORTB5 000000  
         __size_of___lwdiv 0078           __size_of___lwmod 0060        __end_of_ringbuf_pop 135C  
      __end_of_ringbuf_num 12E2        __end_of_ringbuf_put 144C      __size_of_ringbuf_init 005A  
          ___lwdiv@divisor 0062            ___lwdiv@counter 0064                   __ptext10 1880  
                 __ptext11 144C                   __ptext20 0984                   __ptext21 114E  
                 __ptext13 17C8                   __ptext30 13D4                   __ptext22 184C  
                 __ptext14 12E2                   __ptext23 0EEC                   __ptext15 1264  
                 __ptext24 1866                   __ptext16 10B8                   __ptext25 18AC  
                 __ptext17 1628                   __ptext26 151C                   __ptext18 175E  
                 __ptext27 171C                   __ptext19 1796                   __ptext28 167A  
                 __ptext29 1896           __size_of_tx_send 0016                _OSCCON2bits 000FD2  
            __size_ofi2_sw 0052                _memory_char 04FF              __size_of_main 064A  
                 _scrollON 002D               _ringbuf_init 1578     __size_of_display_print 0284  
              _OSCTUNEbits 000F9B                 _INTCONbits 000FF2       ringbuf_put@asciicode 0003  
    __end_of_matrix_column 14BC            main@preset_char 00C3    __end_ofi2_matrix_column 1578  
       intrrupt_RCIF@ascii 0013                   intlevel2 0000           ___lwmod@dividend 0060  
     i2display_matrix@data 0008                 _RCSTA1bits 000FAB                 _OSCCONbits 000FD3  
          encode@asciicode 0060   __size_of_intrrupt_TMR0IF 0032   __size_of_intrrupt_TMR1IF 0038  
 __size_of_intrrupt_TMR3IF 0096                _ringbuf_pop 12E2                _ringbuf_num 1264  
              _ringbuf_put 13D4                _scroll_char 0400               _return_reset 0041  
          ___lwmod@divisor 0062            ___lwmod@counter 0064             _display_matrix 1880  
        __CFG_T3CMX$PORTC0 000000             _display_scroll 0D7A              _display_print 0700  
        __CFG_FOSC$INTIO67 000000        _scroll_char_pointer 002E  
