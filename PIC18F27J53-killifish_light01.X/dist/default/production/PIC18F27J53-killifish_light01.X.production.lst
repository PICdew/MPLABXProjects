

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 19:16:49 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    12                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    13                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           	psect	idataBANK0
    79  0036B4                     __pidataBANK0:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _cursor_left
    83  0036B4  1B                 	db	27
    84  0036B5  5B                 	db	91
    85  0036B6  44                 	db	68
    86  0036B7  00                 	db	0
    87                           
    88                           ;initializer for epoch_to_caltime@month_cache
    89  0036B8  01                 	db	1
    90                           
    91                           ;initializer for _cursor_down
    92  0036B9  1B                 	db	27
    93  0036BA  5B                 	db	91
    94  0036BB  42                 	db	66
    95  0036BC  00                 	db	0
    96                           
    97                           ;initializer for _cursor_right
    98  0036BD  1B                 	db	27
    99  0036BE  5B                 	db	91
   100  0036BF  43                 	db	67
   101  0036C0  00                 	db	0
   102                           
   103                           ;initializer for _cursor_up
   104  0036C1  1B                 	db	27
   105  0036C2  5B                 	db	91
   106  0036C3  41                 	db	65
   107  0036C4  00                 	db	0
   108                           
   109                           	psect	smallconst
   110  000F00                     __psmallconst:
   111                           	opt stack 0
   112  000F00  00                 	db	0
   113  000F01                     _weekday_3char:
   114                           	opt stack 0
   115  000F01  53                 	db	83
   116  000F02  55                 	db	85
   117  000F03  4E                 	db	78
   118  000F04  00                 	db	0
   119  000F05  4D                 	db	77
   120  000F06  4F                 	db	79
   121  000F07  4E                 	db	78
   122  000F08  00                 	db	0
   123  000F09  54                 	db	84
   124  000F0A  55                 	db	85
   125  000F0B  45                 	db	69
   126  000F0C  00                 	db	0
   127  000F0D  57                 	db	87
   128  000F0E  45                 	db	69
   129  000F0F  44                 	db	68
   130  000F10  00                 	db	0
   131  000F11  54                 	db	84
   132  000F12  48                 	db	72
   133  000F13  55                 	db	85
   134  000F14  00                 	db	0
   135  000F15  46                 	db	70
   136  000F16  52                 	db	82
   137  000F17  49                 	db	73
   138  000F18  00                 	db	0
   139  000F19  53                 	db	83
   140  000F1A  41                 	db	65
   141  000F1B  54                 	db	84
   142  000F1C  00                 	db	0
   143  000F1D                     __end_of_weekday_3char:
   144                           	opt stack 0
   145  0000                     _PPSCONbits	set	3775
   146  0000                     _RPOR3	set	3779
   147  0000                     _RPOR4	set	3780
   148  0000                     _RPOR5	set	3781
   149  0000                     _ANCON0	set	3912
   150  0000                     _ANCON1	set	3913
   151  0000                     _CCP3CONbits	set	3861
   152  0000                     _CCP4CONbits	set	3858
   153  0000                     _CCPR3L	set	3862
   154  0000                     _CCPR3Lbits	set	3862
   155  0000                     _CCPR4L	set	3859
   156  0000                     _CCPR4Lbits	set	3859
   157  0000                     _CCPTMRS0bits	set	3922
   158  0000                     _CCPTMRS1bits	set	3921
   159  0000                     _PADCFG1bits	set	3900
   160  0000                     _RTCCAL	set	3902
   161  0000                     _RTCCFGbits	set	3903
   162  0000                     _RTCVALH	set	3899
   163  0000                     _RTCVALL	set	3898
   164  0000                     _T5CONbits	set	3874
   165  0000                     _ADRES	set	4035
   166  0000                     _ADCON0bits	set	4034
   167  0000                     _ADCON1bits	set	4033
   168  0000                     _BAUDCON1bits	set	3966
   169  0000                     _CCP1CONbits	set	4026
   170  0000                     _CCP2CONbits	set	4020
   171  0000                     _CCPR1L	set	4027
   172  0000                     _CCPR1Lbits	set	4027
   173  0000                     _CCPR2L	set	4021
   174  0000                     _CCPR2Lbits	set	4021
   175  0000                     _CTMUCONH	set	4019
   176  0000                     _CTMUCONHbits	set	4019
   177  0000                     _CTMUCONL	set	4018
   178  0000                     _CTMUCONLbits	set	4018
   179  0000                     _CTMUICON	set	4017
   180  0000                     _EECON2	set	4007
   181  0000                     _INTCON2bits	set	4081
   182  0000                     _INTCONbits	set	4082
   183  0000                     _IPR1bits	set	3999
   184  0000                     _IPR2bits	set	4002
   185  0000                     _IPR5bits	set	3993
   186  0000                     _OSCCONbits	set	4051
   187  0000                     _OSCTUNEbits	set	3995
   188  0000                     _PIE1bits	set	3997
   189  0000                     _PIE2bits	set	4000
   190  0000                     _PIE5bits	set	3985
   191  0000                     _PIR1bits	set	3998
   192  0000                     _PIR2bits	set	4001
   193  0000                     _PIR5bits	set	3992
   194  0000                     _PORTAbits	set	3968
   195  0000                     _PR2	set	4043
   196  0000                     _RCREG1	set	4015
   197  0000                     _RCSTA1bits	set	4012
   198  0000                     _SPBRG1	set	4016
   199  0000                     _SPBRGH1	set	3967
   200  0000                     _T0CONbits	set	4053
   201  0000                     _T1CONbits	set	4045
   202  0000                     _T2CONbits	set	4042
   203  0000                     _T3CONbits	set	3961
   204  0000                     _TMR1H	set	4047
   205  0000                     _TRISA	set	3986
   206  0000                     _TRISB	set	3987
   207  0000                     _TRISC	set	3988
   208  0000                     _TXREG1	set	4014
   209  0000                     _TXSTA1bits	set	4013
   210  0000                     _GIE	set	32663
   211  0000                     _LATB2	set	31826
   212  000F1D                     STR_2:
   213  000F1D  08                 	db	8
   214  000F1E  5F                 	db	95	;'_'
   215  000F1F  20                 	db	32
   216  000F20  08                 	db	8
   217  000F21  08                 	db	8
   218  000F22  00                 	db	0
   219  000F23                     STR_20:
   220  000F23  73                 	db	115	;'s'
   221  000F24  79                 	db	121	;'y'
   222  000F25  6E                 	db	110	;'n'
   223  000F26  63                 	db	99	;'c'
   224  000F27  00                 	db	0
   225  000F28                     STR_26:
   226  000F28  0A                 	db	10
   227  000F29  0A                 	db	10
   228  000F2A  0A                 	db	10
   229  000F2B  00                 	db	0
   230  000F2C                     STR_21:
   231  000F2C  61                 	db	97	;'a'
   232  000F2D  64                 	db	100	;'d'
   233  000F2E  63                 	db	99	;'c'
   234  000F2F  00                 	db	0
   235  000F30                     STR_19:
   236  000F30  73                 	db	115	;'s'
   237  000F31  65                 	db	101	;'e'
   238  000F32  74                 	db	116	;'t'
   239  000F33  00                 	db	0
   240  000F34                     STR_1:
   241  000F34  5F                 	db	95	;'_'
   242  000F35  08                 	db	8
   243  000F36  00                 	db	0
   244  000F37                     STR_5:
   245  000F37  20                 	db	32
   246  000F38  20                 	db	32
   247  000F39  00                 	db	0
   248  000F3A                     STR_9:
   249  000F3A  29                 	db	41
   250  000F3B  20                 	db	32
   251  000F3C  00                 	db	0
   252  000F3D                     STR_8:
   253  000F3D  20                 	db	32
   254  000F3E  28                 	db	40
   255  000F3F  00                 	db	0
   256  000F40                     STR_12:
   257  000F40  74                 	db	116	;'t'
   258  000F41  73                 	db	115	;'s'
   259  000F42  00                 	db	0
   260  000F43                     STR_10:
   261  000F43  2D                 	db	45
   262  000F44  00                 	db	0
   263  000F45                     STR_6:
   264  000F45  2F                 	db	47
   265  000F46  00                 	db	0
   266  000F47                     STR_14:
   267  000F47  4D                 	db	77	;'M'
   268  000F48  00                 	db	0
   269  000F49                     STR_24:
   270  000F49  62                 	db	98	;'b'
   271  000F4A  00                 	db	0
   272  000F4B                     STR_15:
   273  000F4B  64                 	db	100	;'d'
   274  000F4C  00                 	db	0
   275  000F4D                     STR_23:
   276  000F4D  67                 	db	103	;'g'
   277  000F4E  00                 	db	0
   278  000F4F                     STR_16:
   279  000F4F  68                 	db	104	;'h'
   280  000F50  00                 	db	0
   281  000F51                     STR_17:
   282  000F51  6D                 	db	109	;'m'
   283  000F52  00                 	db	0
   284  000F53                     STR_22:
   285  000F53  72                 	db	114	;'r'
   286  000F54  00                 	db	0
   287  000F55                     STR_25:
   288  000F55  77                 	db	119	;'w'
   289  000F56  00                 	db	0
   290  000F57                     STR_13:
   291  000F57  79                 	db	121	;'y'
   292  000F58  00                 	db	0
   293  0000                     
   294                           ; #config settings
   295  000F59  00                 	db	0	; dummy byte at the end
   296  0000                     
   297                           	psect	cinit
   298  0032BA                     __pcinit:
   299                           	opt stack 0
   300  0032BA                     start_initialization:
   301                           	opt stack 0
   302  0032BA                     __initialization:
   303                           	opt stack 0
   304                           
   305                           ; Clear objects allocated to BANK6 (250 bytes)
   306  0032BA  EE06  F000         	lfsr	0,__pbssBANK6
   307  0032BE  0EFA               	movlw	250
   308  0032C0                     clear_0:
   309  0032C0  6AEE               	clrf	postinc0,c
   310  0032C2  06E8               	decf	wreg,f,c
   311  0032C4  E1FD               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK5 (250 bytes)
   314  0032C6  EE05  F000         	lfsr	0,__pbssBANK5
   315  0032CA  0EFA               	movlw	250
   316  0032CC                     clear_1:
   317  0032CC  6AEE               	clrf	postinc0,c
   318  0032CE  06E8               	decf	wreg,f,c
   319  0032D0  E1FD               	bnz	clear_1
   320                           
   321                           ; Clear objects allocated to BANK0 (30 bytes)
   322  0032D2  EE00  F0B1         	lfsr	0,__pbssBANK0
   323  0032D6  0E1E               	movlw	30
   324  0032D8                     clear_2:
   325  0032D8  6AEE               	clrf	postinc0,c
   326  0032DA  06E8               	decf	wreg,f,c
   327  0032DC  E1FD               	bnz	clear_2
   328                           
   329                           ; Clear objects allocated to COMRAM (35 bytes)
   330  0032DE  EE00  F025         	lfsr	0,__pbssCOMRAM
   331  0032E2  0E23               	movlw	35
   332  0032E4                     clear_3:
   333  0032E4  6AEE               	clrf	postinc0,c
   334  0032E6  06E8               	decf	wreg,f,c
   335  0032E8  E1FD               	bnz	clear_3
   336                           
   337                           ; Initialize objects allocated to BANK0 (17 bytes)
   338                           ; load TBLPTR registers with __pidataBANK0
   339  0032EA  0EB4               	movlw	low __pidataBANK0
   340  0032EC  6EF6               	movwf	tblptrl,c
   341  0032EE  0E36               	movlw	high __pidataBANK0
   342  0032F0  6EF7               	movwf	tblptrh,c
   343  0032F2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   344  0032F4  6EF8               	movwf	tblptru,c
   345  0032F6  EE00  F0CF         	lfsr	0,__pdataBANK0
   346  0032FA  EE10 F011          	lfsr	1,17
   347  0032FE                     copy_data0:
   348  0032FE  0009               	tblrd		*+
   349  003300  CFF5 FFEE          	movff	tablat,postinc0
   350  003304  50E5               	movf	postdec1,w,c
   351  003306  50E1               	movf	fsr1l,w,c
   352  003308  E1FA               	bnz	copy_data0
   353  00330A                     end_of_initialization:
   354                           	opt stack 0
   355  00330A                     __end_of__initialization:
   356                           	opt stack 0
   357  00330A  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   358  00330C  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   359  00330E  0100               	movlb	0
   360  003310  EF2D  F00A         	goto	_main	;jump to C main() function
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	bssCOMRAM
   371  000025                     __pbssCOMRAM:
   372                           	opt stack 0
   373  000025                     millis_timer@cnt:
   374                           	opt stack 0
   375  000025                     	ds	2
   376  000027                     _colon:
   377                           	opt stack 0
   378  000027                     	ds	1
   379  000028                     _display_flag:
   380                           	opt stack 0
   381  000028                     	ds	1
   382  000029                     _edit_flag:
   383                           	opt stack 0
   384  000029                     	ds	1
   385  00002A                     _rx_flag:
   386                           	opt stack 0
   387  00002A                     	ds	1
   388  00002B                     _time_sync:
   389                           	opt stack 0
   390  00002B                     	ds	1
   391  00002C                     _rx_buf:
   392                           	opt stack 0
   393  00002C                     	ds	8
   394  000034                     _tx_buf:
   395                           	opt stack 0
   396  000034                     	ds	8
   397  00003C                     _sw_B:
   398                           	opt stack 0
   399  00003C                     	ds	4
   400  000040                     _sw_G:
   401                           	opt stack 0
   402  000040                     	ds	4
   403  000044                     _sw_R:
   404                           	opt stack 0
   405  000044                     	ds	4
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           postdec1	equ	0xFE5
   413                           fsr1l	equ	0xFE1
   414                           
   415                           	psect	bssBANK0
   416  0000B1                     __pbssBANK0:
   417                           	opt stack 0
   418  0000B1                     _ms:
   419                           	opt stack 0
   420  0000B1                     	ds	4
   421  0000B5                     _d1:
   422                           	opt stack 0
   423  0000B5                     	ds	3
   424  0000B8                     main@prev_scan:
   425                           	opt stack 0
   426  0000B8                     	ds	3
   427  0000BB                     epoch_to_caltime@day_cache:
   428                           	opt stack 0
   429  0000BB                     	ds	2
   430  0000BD                     RTCC_loop@prev_halfsec:
   431                           	opt stack 0
   432  0000BD                     	ds	1
   433  0000BE                     _halfsec:
   434                           	opt stack 0
   435  0000BE                     	ds	1
   436  0000BF                     _light_mode:
   437                           	opt stack 0
   438  0000BF                     	ds	1
   439  0000C0                     _time_change_flag:
   440                           	opt stack 0
   441  0000C0                     	ds	1
   442  0000C1                     epoch_to_caltime@year_cache:
   443                           	opt stack 0
   444  0000C1                     	ds	1
   445  0000C2                     _caltime_now:
   446                           	opt stack 0
   447  0000C2                     	ds	7
   448  0000C9                     _epoch_now:
   449                           	opt stack 0
   450  0000C9                     	ds	4
   451  0000CD                     main@_2482:
   452                           	opt stack 0
   453  0000CD                     	ds	1
   454  0000CE                     main@n:
   455                           	opt stack 0
   456  0000CE                     	ds	1
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           postdec1	equ	0xFE5
   464                           fsr1l	equ	0xFE1
   465                           
   466                           	psect	dataBANK0
   467  0000CF                     __pdataBANK0:
   468                           	opt stack 0
   469  0000CF                     _cursor_left:
   470                           	opt stack 0
   471  0000CF                     	ds	4
   472  0000D3                     epoch_to_caltime@month_cache:
   473                           	opt stack 0
   474  0000D3                     	ds	1
   475  0000D4                     _cursor_down:
   476                           	opt stack 0
   477  0000D4                     	ds	4
   478  0000D8                     _cursor_right:
   479                           	opt stack 0
   480  0000D8                     	ds	4
   481  0000DC                     _cursor_up:
   482                           	opt stack 0
   483  0000DC                     	ds	4
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           postdec1	equ	0xFE5
   491                           fsr1l	equ	0xFE1
   492                           
   493                           	psect	bssBANK5
   494  000500                     __pbssBANK5:
   495                           	opt stack 0
   496  000500                     main_init@txbuf:
   497                           	opt stack 0
   498  000500                     	ds	250
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	bssBANK6
   509  000600                     __pbssBANK6:
   510                           	opt stack 0
   511  000600                     main_init@rxbuf:
   512                           	opt stack 0
   513  000600                     	ds	250
   514                           tblptru	equ	0xFF8
   515                           tblptrh	equ	0xFF7
   516                           tblptrl	equ	0xFF6
   517                           tablat	equ	0xFF5
   518                           postinc0	equ	0xFEE
   519                           wreg	equ	0xFE8
   520                           postdec1	equ	0xFE5
   521                           fsr1l	equ	0xFE1
   522                           
   523                           	psect	cstackBANK4
   524  000400                     __pcstackBANK4:
   525                           	opt stack 0
   526  000400                     rx_operation@opland1:
   527                           	opt stack 0
   528                           
   529                           ; 250 bytes @ 0x0
   530  000400                     	ds	250
   531                           tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           postinc0	equ	0xFEE
   536                           wreg	equ	0xFE8
   537                           postdec1	equ	0xFE5
   538                           fsr1l	equ	0xFE1
   539                           
   540                           	psect	cstackBANK3
   541  000300                     __pcstackBANK3:
   542                           	opt stack 0
   543  000300                     rx_operation@opland2:
   544                           	opt stack 0
   545                           
   546                           ; 250 bytes @ 0x0
   547  000300                     	ds	250
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	cstackBANK2
   558  000200                     __pcstackBANK2:
   559                           	opt stack 0
   560  000200                     rx_operation@opcode:
   561                           	opt stack 0
   562                           
   563                           ; 250 bytes @ 0x0
   564  000200                     	ds	250
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           postdec1	equ	0xFE5
   572                           fsr1l	equ	0xFE1
   573                           
   574                           	psect	cstackBANK1
   575  000100                     __pcstackBANK1:
   576                           	opt stack 0
   577  000100                     rx_operation@cmd:
   578                           	opt stack 0
   579                           
   580                           ; 250 bytes @ 0x0
   581  000100                     	ds	250
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1l	equ	0xFE1
   590                           
   591                           	psect	cstackBANK0
   592  000060                     __pcstackBANK0:
   593                           	opt stack 0
   594  000060                     ??_timer3_init:
   595  000060                     ??_x_to_d:
   596  000060                     ?_ADC:
   597                           	opt stack 0
   598  000060                     ?_ringbuf_num:
   599                           	opt stack 0
   600  000060                     ?___wmul:
   601                           	opt stack 0
   602  000060                     ?___awdiv:
   603                           	opt stack 0
   604  000060                     ?___awmod:
   605                           	opt stack 0
   606  000060                     ?___lwmod:
   607                           	opt stack 0
   608  000060                     ?___llmod:
   609                           	opt stack 0
   610  000060                     timer1_init@clock_select:
   611                           	opt stack 0
   612  000060                     ADC_init@p_ref:
   613                           	opt stack 0
   614  000060                     PWM_init@PR:
   615                           	opt stack 0
   616  000060                     ringbuf_init@rb:
   617                           	opt stack 0
   618  000060                     ringbuf_num@rb:
   619                           	opt stack 0
   620  000060                     my_strcmp@str1:
   621                           	opt stack 0
   622  000060                     ___wmul@multiplier:
   623                           	opt stack 0
   624  000060                     ___awdiv@dividend:
   625                           	opt stack 0
   626  000060                     ___awmod@dividend:
   627                           	opt stack 0
   628  000060                     ___lwmod@dividend:
   629                           	opt stack 0
   630  000060                     ___llmod@dividend:
   631                           	opt stack 0
   632                           
   633                           ; 4 bytes @ 0x0
   634  000060                     	ds	1
   635  000061                     ??_timer1_init:
   636  000061                     timer3_init@prescaler:
   637                           	opt stack 0
   638  000061                     x_to_d@hex:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x1
   642  000061                     	ds	1
   643  000062                     ??_ADC:
   644  000062                     ??_ringbuf_num:
   645  000062                     timer1_init@prescaler:
   646                           	opt stack 0
   647  000062                     ringbuf_init@internal_buf:
   648                           	opt stack 0
   649  000062                     RTCC_to_caltime@ct:
   650                           	opt stack 0
   651  000062                     my_strcmp@str2:
   652                           	opt stack 0
   653  000062                     ___wmul@multiplicand:
   654                           	opt stack 0
   655  000062                     ___awdiv@divisor:
   656                           	opt stack 0
   657  000062                     ___awmod@divisor:
   658                           	opt stack 0
   659  000062                     ___lwmod@divisor:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x2
   663  000062                     	ds	1
   664  000063                     ADC@ch:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x3
   668  000063                     	ds	1
   669  000064                     ??_my_strcmp:
   670  000064                     RTCC_to_caltime@dumy:
   671                           	opt stack 0
   672  000064                     ___awdiv@counter:
   673                           	opt stack 0
   674  000064                     ___awmod@counter:
   675                           	opt stack 0
   676  000064                     ___lwmod@counter:
   677                           	opt stack 0
   678  000064                     ringbuf_init@bufsize:
   679                           	opt stack 0
   680  000064                     ___wmul@product:
   681                           	opt stack 0
   682  000064                     ___llmod@divisor:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x4
   686  000064                     	ds	1
   687  000065                     ___awdiv@sign:
   688                           	opt stack 0
   689  000065                     ___awmod@sign:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x5
   693  000065                     	ds	1
   694  000066                     ?_my_atoi:
   695                           	opt stack 0
   696  000066                     ?___lwdiv:
   697                           	opt stack 0
   698  000066                     month_length@month:
   699                           	opt stack 0
   700  000066                     my_atoi@str:
   701                           	opt stack 0
   702  000066                     ___awdiv@quotient:
   703                           	opt stack 0
   704  000066                     ___lwdiv@dividend:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x6
   708  000066                     	ds	1
   709  000067                     ??_month_length:
   710                           
   711                           ; 0 bytes @ 0x7
   712  000067                     	ds	1
   713  000068                     ??_my_atoi:
   714  000068                     d_to_x@dec:
   715                           	opt stack 0
   716  000068                     ___llmod@counter:
   717                           	opt stack 0
   718  000068                     ringbuf_put@rb:
   719                           	opt stack 0
   720  000068                     ringbuf_pop@rb:
   721                           	opt stack 0
   722  000068                     ___lwdiv@divisor:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x8
   726  000068                     	ds	1
   727  000069                     caltime_to_RTCC@ct:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x9
   731  000069                     	ds	1
   732  00006A                     ??_ringbuf_pop:
   733  00006A                     ringbuf_put@asciicode:
   734                           	opt stack 0
   735  00006A                     ___lwdiv@counter:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0xA
   739  00006A                     	ds	1
   740  00006B                     ??_ringbuf_put:
   741  00006B                     month_length@year:
   742                           	opt stack 0
   743  00006B                     ___lwdiv@quotient:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0xB
   747  00006B                     	ds	1
   748  00006C                     ?___lmul:
   749                           	opt stack 0
   750  00006C                     my_atoi@ret:
   751                           	opt stack 0
   752  00006C                     ___lmul@multiplier:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0xC
   756  00006C                     	ds	1
   757  00006D                     my_utoa@str:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0xD
   761  00006D                     	ds	1
   762  00006E                     ringbuf_pop@ret:
   763                           	opt stack 0
   764  00006E                     PWM_set@value:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0xE
   768  00006E                     	ds	1
   769  00006F                     tx_send@asciicode:
   770                           	opt stack 0
   771  00006F                     tx_sends@asciicode:
   772                           	opt stack 0
   773  00006F                     my_utoa@value:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0xF
   777  00006F                     	ds	1
   778  000070                     PWM_set@color:
   779                           	opt stack 0
   780  000070                     ___lmul@multiplicand:
   781                           	opt stack 0
   782                           
   783                           ; 4 bytes @ 0x10
   784  000070                     	ds	1
   785  000071                     my_utoa@digits:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x11
   789  000071                     	ds	1
   790  000072                     my_utoa@d:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x12
   794  000072                     	ds	1
   795  000073                     my_utoa@v:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x13
   799  000073                     	ds	1
   800  000074                     ___lmul@product:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x14
   804  000074                     	ds	1
   805  000075                     tx_send_dec@edit:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x15
   809  000075                     	ds	1
   810  000076                     tx_send_dec@str:
   811                           	opt stack 0
   812                           
   813                           ; 10 bytes @ 0x16
   814  000076                     	ds	2
   815  000078                     ?___lldiv:
   816                           	opt stack 0
   817  000078                     caltime_to_epoch@ct:
   818                           	opt stack 0
   819  000078                     ___lldiv@dividend:
   820                           	opt stack 0
   821                           
   822                           ; 4 bytes @ 0x18
   823  000078                     	ds	2
   824  00007A                     caltime_to_epoch@ep:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x1A
   828  00007A                     	ds	2
   829  00007C                     ??_caltime_to_epoch:
   830  00007C                     ___lldiv@divisor:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x1C
   834  00007C                     	ds	4
   835  000080                     caltime_to_epoch@year:
   836                           	opt stack 0
   837  000080                     tx_send_dec@dec:
   838                           	opt stack 0
   839  000080                     ___lldiv@quotient:
   840                           	opt stack 0
   841                           
   842                           ; 4 bytes @ 0x20
   843  000080                     	ds	1
   844  000081                     caltime_to_epoch@month_2069:
   845                           	opt stack 0
   846  000081                     print_time@row:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x21
   850  000081                     	ds	1
   851  000082                     print_time@i:
   852                           	opt stack 0
   853  000082                     caltime_to_epoch@epoch:
   854                           	opt stack 0
   855                           
   856                           ; 4 bytes @ 0x22
   857  000082                     	ds	2
   858  000084                     ___lldiv@counter:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x24
   862  000084                     	ds	1
   863  000085                     ?_get_quot_rem:
   864                           	opt stack 0
   865  000085                     get_quot_rem@quot:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x25
   869  000085                     	ds	1
   870  000086                     caltime_to_epoch@month:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x26
   874  000086                     	ds	1
   875  000087                     get_quot_rem@div:
   876                           	opt stack 0
   877  000087                     RTCC_from_RTCC@ct:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x27
   881  000087                     	ds	2
   882  000089                     RTCC_from_RTCC@ep:
   883                           	opt stack 0
   884  000089                     get_quot_rem@num:
   885                           	opt stack 0
   886                           
   887                           ; 4 bytes @ 0x29
   888  000089                     	ds	2
   889  00008B                     
   890                           ; 0 bytes @ 0x2B
   891  00008B                     	ds	2
   892  00008D                     epoch_to_caltime@ct:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0x2D
   896  00008D                     	ds	2
   897  00008F                     epoch_to_caltime@ep:
   898                           	opt stack 0
   899                           
   900                           ; 2 bytes @ 0x2F
   901  00008F                     	ds	2
   902  000091                     ??_epoch_to_caltime:
   903                           
   904                           ; 0 bytes @ 0x31
   905  000091                     	ds	2
   906  000093                     epoch_to_caltime@day_since_epoch:
   907                           	opt stack 0
   908                           
   909                           ; 2 bytes @ 0x33
   910  000093                     	ds	2
   911  000095                     epoch_to_caltime@day:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x35
   915  000095                     	ds	2
   916  000097                     epoch_to_caltime@year:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x37
   920  000097                     	ds	1
   921  000098                     epoch_to_caltime@month:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x38
   925  000098                     	ds	1
   926  000099                     epoch_to_caltime@num:
   927                           	opt stack 0
   928                           
   929                           ; 4 bytes @ 0x39
   930  000099                     	ds	4
   931  00009D                     RTCC_from_caltime@ct:
   932                           	opt stack 0
   933  00009D                     RTCC_from_epoch@ct:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x3D
   937  00009D                     	ds	2
   938  00009F                     RTCC_from_caltime@ep:
   939                           	opt stack 0
   940  00009F                     RTCC_from_epoch@ep:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x3F
   944  00009F                     	ds	2
   945  0000A1                     ??_rx_operation:
   946                           
   947                           ; 0 bytes @ 0x41
   948  0000A1                     	ds	1
   949  0000A2                     rx_operation@cnt_char:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x42
   953  0000A2                     	ds	1
   954  0000A3                     rx_operation@i:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x43
   958  0000A3                     	ds	1
   959  0000A4                     ??_main:
   960                           
   961                           ; 0 bytes @ 0x44
   962  0000A4                     	ds	4
   963  0000A8                     main@value:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x48
   967  0000A8                     	ds	1
   968  0000A9                     main@value_2483:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x49
   972  0000A9                     	ds	1
   973  0000AA                     main@scan:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x4A
   977  0000AA                     	ds	1
   978  0000AB                     main@temp:
   979                           	opt stack 0
   980                           
   981                           ; 4 bytes @ 0x4B
   982  0000AB                     	ds	4
   983  0000AF                     main@i:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x4F
   987  0000AF                     	ds	2
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec1	equ	0xFE5
   995                           fsr1l	equ	0xFE1
   996                           
   997                           	psect	cstackCOMRAM
   998  000001                     __pcstackCOMRAM:
   999                           	opt stack 0
  1000  000001                     ?i2_ringbuf_num:
  1001                           	opt stack 0
  1002  000001                     ringbuf_delete@rb:
  1003                           	opt stack 0
  1004  000001                     button_timer_interrupt@bt:
  1005                           	opt stack 0
  1006  000001                     i2ringbuf_num@rb:
  1007                           	opt stack 0
  1008                           
  1009                           ; 2 bytes @ 0x0
  1010  000001                     	ds	2
  1011  000003                     ??i2_ringbuf_num:
  1012  000003                     button_timer_interrupt@sw_value:
  1013                           	opt stack 0
  1014                           
  1015                           ; 1 bytes @ 0x2
  1016  000003                     	ds	1
  1017  000004                     
  1018                           ; 0 bytes @ 0x3
  1019  000004                     	ds	5
  1020  000009                     ringbuf_backspace@rb:
  1021                           	opt stack 0
  1022  000009                     i2ringbuf_put@rb:
  1023                           	opt stack 0
  1024  000009                     i2ringbuf_pop@rb:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x8
  1028  000009                     	ds	2
  1029  00000B                     ??_ringbuf_backspace:
  1030  00000B                     ??i2_ringbuf_pop:
  1031  00000B                     i2ringbuf_put@asciicode:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0xA
  1035  00000B                     	ds	1
  1036  00000C                     ??i2_ringbuf_put:
  1037                           
  1038                           ; 0 bytes @ 0xB
  1039  00000C                     	ds	3
  1040  00000F                     i2ringbuf_pop@ret:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0xE
  1044  00000F                     	ds	1
  1045  000010                     UART_ISR@ascii:
  1046                           	opt stack 0
  1047  000010                     i2tx_send@asciicode:
  1048                           	opt stack 0
  1049  000010                     i2tx_sends@asciicode:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0xF
  1053  000010                     	ds	2
  1054  000012                     ??_judgement:
  1055  000012                     
  1056                           ; 0 bytes @ 0x11
  1057  000012                     	ds	2
  1058  000014                     judgement@ascii:
  1059                           	opt stack 0
  1060                           
  1061                           ; 1 bytes @ 0x13
  1062  000014                     	ds	1
  1063  000015                     judgement@i:
  1064                           	opt stack 0
  1065                           
  1066                           ; 1 bytes @ 0x14
  1067  000015                     	ds	1
  1068  000016                     ??_ISR:
  1069                           
  1070                           ; 0 bytes @ 0x15
  1071  000016                     	ds	14
  1072  000024                     ISR@ascii:
  1073                           	opt stack 0
  1074                           
  1075                           ; 1 bytes @ 0x23
  1076  000024                     	ds	1
  1077                           tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           tblptrl	equ	0xFF6
  1080                           tablat	equ	0xFF5
  1081                           postinc0	equ	0xFEE
  1082                           wreg	equ	0xFE8
  1083                           postdec1	equ	0xFE5
  1084                           fsr1l	equ	0xFE1
  1085                           
  1086 ;;
  1087 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1088 ;;
  1089 ;; *************** function _main *****************
  1090 ;; Defined at:
  1091 ;;		line 334 in file "PIC18F27J53-killifish_light01.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  scan            1   74[BANK0 ] unsigned char 
  1096 ;;  temp            4   75[BANK0 ] unsigned long 
  1097 ;;  value           1   73[BANK0 ] unsigned char 
  1098 ;;  value           1   72[BANK0 ] unsigned char 
  1099 ;;  i               2   79[BANK0 ] unsigned int 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  2  627[None  ] int 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1110 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1111 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1112 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1113 ;;Total ram usage:       13 bytes
  1114 ;; Hardware stack levels required when called:   11
  1115 ;; This function calls:
  1116 ;;		_ADC
  1117 ;;		_PWM_set
  1118 ;;		_RTCC_from_RTCC
  1119 ;;		_RTCC_from_epoch
  1120 ;;		_RTCC_loop
  1121 ;;		___lldiv
  1122 ;;		___llmod
  1123 ;;		___lmul
  1124 ;;		_main_init
  1125 ;;		_print_time
  1126 ;;		_rx_operation
  1127 ;;		_tx_sends
  1128 ;; This function is called by:
  1129 ;;		Startup code after reset
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text0
  1134  00145A                     __ptext0:
  1135                           	opt stack 0
  1136  00145A                     _main:
  1137                           	opt stack 20
  1138                           
  1139                           ;PIC18F27J53-killifish_light01.c: 335: main_init();
  1140                           
  1141                           ;incstack = 0
  1142  00145A  EC4A  F017         	call	_main_init	;wreg free
  1143                           
  1144                           ;PIC18F27J53-killifish_light01.c: 336: INTCONbits.GIE = 1;
  1145  00145E  8EF2               	bsf	intcon,7,c	;volatile
  1146                           
  1147                           ;PIC18F27J53-killifish_light01.c: 339: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1148  001460  0EC2               	movlw	low _caltime_now
  1149  001462  0100               	movlb	0	; () banked
  1150  001464  6F87               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1151  001466  0E00               	movlw	high _caltime_now
  1152  001468  0100               	movlb	0	; () banked
  1153  00146A  6F88               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1154  00146C  0EC9               	movlw	low _epoch_now
  1155  00146E  0100               	movlb	0	; () banked
  1156  001470  6F89               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1157  001472  0E00               	movlw	high _epoch_now
  1158  001474  0100               	movlb	0	; () banked
  1159  001476  6F8A               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1160  001478  ECDE  F01A         	call	_RTCC_from_RTCC	;wreg free
  1161                           
  1162                           ;PIC18F27J53-killifish_light01.c: 340: if (caltime_now.DD == 0) {
  1163  00147C  0100               	movlb	0	; () banked
  1164  00147E  51C6               	movf	(_caltime_now+4)& (0+255),w,b
  1165  001480  A4D8               	btfss	status,2,c
  1166  001482  D017               	goto	l5241
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;PIC18F27J53-killifish_light01.c: 341: epoch_now = 0;
  1170  001484  0E00               	movlw	0
  1171  001486  0100               	movlb	0	; () banked
  1172  001488  6FC9               	movwf	_epoch_now& (0+255),b
  1173  00148A  0E00               	movlw	0
  1174  00148C  6FCA               	movwf	(_epoch_now+1)& (0+255),b
  1175  00148E  0E00               	movlw	0
  1176  001490  6FCB               	movwf	(_epoch_now+2)& (0+255),b
  1177  001492  0E00               	movlw	0
  1178  001494  6FCC               	movwf	(_epoch_now+3)& (0+255),b
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;PIC18F27J53-killifish_light01.c: 342: RTCC_from_epoch(&caltime_now, &epoch_now);
  1182  001496  0EC2               	movlw	low _caltime_now
  1183  001498  0100               	movlb	0	; () banked
  1184  00149A  6F9D               	movwf	RTCC_from_epoch@ct& (0+255),b
  1185  00149C  0E00               	movlw	high _caltime_now
  1186  00149E  0100               	movlb	0	; () banked
  1187  0014A0  6F9E               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1188  0014A2  0EC9               	movlw	low _epoch_now
  1189  0014A4  0100               	movlb	0	; () banked
  1190  0014A6  6F9F               	movwf	RTCC_from_epoch@ep& (0+255),b
  1191  0014A8  0E00               	movlw	high _epoch_now
  1192  0014AA  0100               	movlb	0	; () banked
  1193  0014AC  6FA0               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1194  0014AE  ECEF  F01A         	call	_RTCC_from_epoch	;wreg free
  1195  0014B2                     l5241:
  1196                           
  1197                           ;PIC18F27J53-killifish_light01.c: 343: }
  1198                           ;PIC18F27J53-killifish_light01.c: 345: tx_sends("\n\n\n");
  1199  0014B2  0E28               	movlw	low STR_26
  1200  0014B4  0100               	movlb	0	; () banked
  1201  0014B6  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  1202  0014B8  0E0F               	movlw	high STR_26
  1203  0014BA  0100               	movlb	0	; () banked
  1204  0014BC  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  1205  0014BE  ECC6  F018         	call	_tx_sends	;wreg free
  1206  0014C2                     l629:
  1207  0014C2  0004               	clrwdt		;# 
  1208                           
  1209                           ;PIC18F27J53-killifish_light01.c: 350: RTCC_loop();
  1210  0014C4  EC2C  F01A         	call	_RTCC_loop	;wreg free
  1211                           
  1212                           ;PIC18F27J53-killifish_light01.c: 351: rx_operation();
  1213  0014C8  ECAD  F007         	call	_rx_operation	;wreg free
  1214                           
  1215                           ;PIC18F27J53-killifish_light01.c: 352: if (time_change_flag) {
  1216  0014CC  0100               	movlb	0	; () banked
  1217  0014CE  51C0               	movf	_time_change_flag& (0+255),w,b
  1218  0014D0  B4D8               	btfsc	status,2,c
  1219  0014D2  D096               	goto	l5265
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;PIC18F27J53-killifish_light01.c: 353: time_change_flag = 0;
  1223  0014D4  0E00               	movlw	0
  1224  0014D6  0100               	movlb	0	; () banked
  1225  0014D8  6FC0               	movwf	_time_change_flag& (0+255),b
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;PIC18F27J53-killifish_light01.c: 354: print_time(2);
  1229  0014DA  0E02               	movlw	2
  1230  0014DC  ECD7  F017         	call	_print_time
  1231                           
  1232                           ;PIC18F27J53-killifish_light01.c: 355: if (light_mode == TIME_SYNC_mode) {
  1233  0014E0  0100               	movlb	0	; () banked
  1234  0014E2  51BF               	movf	_light_mode& (0+255),w,b
  1235  0014E4  A4D8               	btfss	status,2,c
  1236  0014E6  D08C               	goto	l5265
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;PIC18F27J53-killifish_light01.c: 356: epoch_t temp = (epoch_t) epoch_now % ((epoch_t)60
      +                          *60*24);
  1240  0014E8  C0C9  F060         	movff	_epoch_now,___llmod@dividend
  1241  0014EC  C0CA  F061         	movff	_epoch_now+1,___llmod@dividend+1
  1242  0014F0  C0CB  F062         	movff	_epoch_now+2,___llmod@dividend+2
  1243  0014F4  C0CC  F063         	movff	_epoch_now+3,___llmod@dividend+3
  1244  0014F8  0E80               	movlw	128
  1245  0014FA  0100               	movlb	0	; () banked
  1246  0014FC  6F64               	movwf	___llmod@divisor& (0+255),b
  1247  0014FE  0E51               	movlw	81
  1248  001500  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  1249  001502  0E01               	movlw	1
  1250  001504  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  1251  001506  0E00               	movlw	0
  1252  001508  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  1253  00150A  ECFD  F016         	call	___llmod	;wreg free
  1254  00150E  C060  F0AB         	movff	?___llmod,main@temp
  1255  001512  C061  F0AC         	movff	?___llmod+1,main@temp+1
  1256  001516  C062  F0AD         	movff	?___llmod+2,main@temp+2
  1257  00151A  C063  F0AE         	movff	?___llmod+3,main@temp+3
  1258                           
  1259                           ;PIC18F27J53-killifish_light01.c: 357: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  1260  00151E  0100               	movlb	0	; () banked
  1261  001520  51AE               	movf	(main@temp+3)& (0+255),w,b
  1262  001522  0100               	movlb	0	; () banked
  1263  001524  11AD               	iorwf	(main@temp+2)& (0+255),w,b
  1264  001526  E108               	bnz	u5520
  1265  001528  0EC1               	movlw	193
  1266  00152A  0100               	movlb	0	; () banked
  1267  00152C  5DAB               	subwf	main@temp& (0+255),w,b
  1268  00152E  0EA8               	movlw	168
  1269  001530  0100               	movlb	0	; () banked
  1270  001532  59AC               	subwfb	(main@temp+1)& (0+255),w,b
  1271  001534  A0D8               	btfss	status,0,c
  1272  001536  D026               	goto	l5261
  1273  001538                     u5520:
  1274                           
  1275                           ; BSR set to: 0
  1276  001538  C0AB  F0A4         	movff	main@temp,??_main
  1277  00153C  C0AC  F0A5         	movff	main@temp+1,??_main+1
  1278  001540  C0AD  F0A6         	movff	main@temp+2,??_main+2
  1279  001544  C0AE  F0A7         	movff	main@temp+3,??_main+3
  1280  001548  0100               	movlb	0	; () banked
  1281  00154A  1FA4               	comf	??_main& (0+255),f,b
  1282  00154C  1FA5               	comf	(??_main+1)& (0+255),f,b
  1283  00154E  1FA6               	comf	(??_main+2)& (0+255),f,b
  1284  001550  1FA7               	comf	(??_main+3)& (0+255),f,b
  1285  001552  2BA4               	incf	??_main& (0+255),f,b
  1286  001554  0E00               	movlw	0
  1287  001556  23A5               	addwfc	(??_main+1)& (0+255),f,b
  1288  001558  23A6               	addwfc	(??_main+2)& (0+255),f,b
  1289  00155A  23A7               	addwfc	(??_main+3)& (0+255),f,b
  1290  00155C  0E80               	movlw	128
  1291  00155E  0100               	movlb	0	; () banked
  1292  001560  25A4               	addwf	??_main& (0+255),w,b
  1293  001562  0100               	movlb	0	; () banked
  1294  001564  6FAB               	movwf	main@temp& (0+255),b
  1295  001566  0E51               	movlw	81
  1296  001568  0100               	movlb	0	; () banked
  1297  00156A  21A5               	addwfc	(??_main+1)& (0+255),w,b
  1298  00156C  0100               	movlb	0	; () banked
  1299  00156E  6FAC               	movwf	(main@temp+1)& (0+255),b
  1300  001570  0E01               	movlw	1
  1301  001572  0100               	movlb	0	; () banked
  1302  001574  21A6               	addwfc	(??_main+2)& (0+255),w,b
  1303  001576  0100               	movlb	0	; () banked
  1304  001578  6FAD               	movwf	(main@temp+2)& (0+255),b
  1305  00157A  0E00               	movlw	0
  1306  00157C  0100               	movlb	0	; () banked
  1307  00157E  21A7               	addwfc	(??_main+3)& (0+255),w,b
  1308  001580  0100               	movlb	0	; () banked
  1309  001582  6FAE               	movwf	(main@temp+3)& (0+255),b
  1310  001584                     l5261:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;PIC18F27J53-killifish_light01.c: 358: temp = temp * 2 * 255 / ((epoch_t)60*60*24);
  1314  001584  90D8               	bcf	status,0,c
  1315  001586  0100               	movlb	0	; () banked
  1316  001588  35AB               	rlcf	main@temp& (0+255),w,b
  1317  00158A  0100               	movlb	0	; () banked
  1318  00158C  6F6C               	movwf	___lmul@multiplier& (0+255),b
  1319  00158E  0100               	movlb	0	; () banked
  1320  001590  35AC               	rlcf	(main@temp+1)& (0+255),w,b
  1321  001592  0100               	movlb	0	; () banked
  1322  001594  6F6D               	movwf	(___lmul@multiplier+1)& (0+255),b
  1323  001596  0100               	movlb	0	; () banked
  1324  001598  35AD               	rlcf	(main@temp+2)& (0+255),w,b
  1325  00159A  0100               	movlb	0	; () banked
  1326  00159C  6F6E               	movwf	(___lmul@multiplier+2)& (0+255),b
  1327  00159E  0100               	movlb	0	; () banked
  1328  0015A0  35AE               	rlcf	(main@temp+3)& (0+255),w,b
  1329  0015A2  0100               	movlb	0	; () banked
  1330  0015A4  6F6F               	movwf	(___lmul@multiplier+3)& (0+255),b
  1331  0015A6  0EFF               	movlw	255
  1332  0015A8  0100               	movlb	0	; () banked
  1333  0015AA  6F70               	movwf	___lmul@multiplicand& (0+255),b
  1334  0015AC  0E00               	movlw	0
  1335  0015AE  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1336  0015B0  0E00               	movlw	0
  1337  0015B2  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1338  0015B4  0E00               	movlw	0
  1339  0015B6  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1340  0015B8  EC50  F018         	call	___lmul	;wreg free
  1341  0015BC  C06C  F078         	movff	?___lmul,___lldiv@dividend
  1342  0015C0  C06D  F079         	movff	?___lmul+1,___lldiv@dividend+1
  1343  0015C4  C06E  F07A         	movff	?___lmul+2,___lldiv@dividend+2
  1344  0015C8  C06F  F07B         	movff	?___lmul+3,___lldiv@dividend+3
  1345  0015CC  0E80               	movlw	128
  1346  0015CE  0100               	movlb	0	; () banked
  1347  0015D0  6F7C               	movwf	___lldiv@divisor& (0+255),b
  1348  0015D2  0E51               	movlw	81
  1349  0015D4  6F7D               	movwf	(___lldiv@divisor+1)& (0+255),b
  1350  0015D6  0E01               	movlw	1
  1351  0015D8  6F7E               	movwf	(___lldiv@divisor+2)& (0+255),b
  1352  0015DA  0E00               	movlw	0
  1353  0015DC  6F7F               	movwf	(___lldiv@divisor+3)& (0+255),b
  1354  0015DE  EC42  F014         	call	___lldiv	;wreg free
  1355  0015E2  C078  F0AB         	movff	?___lldiv,main@temp
  1356  0015E6  C079  F0AC         	movff	?___lldiv+1,main@temp+1
  1357  0015EA  C07A  F0AD         	movff	?___lldiv+2,main@temp+2
  1358  0015EE  C07B  F0AE         	movff	?___lldiv+3,main@temp+3
  1359                           
  1360                           ;PIC18F27J53-killifish_light01.c: 359: PWM_set(3, temp);
  1361  0015F2  C0AB  F06E         	movff	main@temp,PWM_set@value
  1362  0015F6  C0AC  F06F         	movff	main@temp+1,PWM_set@value+1
  1363  0015FA  0E03               	movlw	3
  1364  0015FC  EC1F  F013         	call	_PWM_set
  1365  001600                     l5265:
  1366                           
  1367                           ;PIC18F27J53-killifish_light01.c: 360: }
  1368                           ;PIC18F27J53-killifish_light01.c: 361: }
  1369                           ;PIC18F27J53-killifish_light01.c: 362: if (sw_G.flag.press) {
  1370  001600  A042               	btfss	_sw_G+2,0,c
  1371  001602  D02F               	goto	l633
  1372                           
  1373                           ;PIC18F27J53-killifish_light01.c: 363: sw_G.flags = 0;
  1374  001604  0E00               	movlw	0
  1375  001606  6E43               	movwf	_sw_G+3,c
  1376  001608  0E00               	movlw	0
  1377  00160A  6E42               	movwf	_sw_G+2,c
  1378                           
  1379                           ;PIC18F27J53-killifish_light01.c: 364: light_mode = COMMAND_mode;
  1380  00160C  0E02               	movlw	2
  1381  00160E  0100               	movlb	0	; () banked
  1382  001610  6FBF               	movwf	_light_mode& (0+255),b
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;PIC18F27J53-killifish_light01.c: 365: static uint8_t n = 0;
  1386                           ;PIC18F27J53-killifish_light01.c: 366: if (n >= 4) n = 0;
  1387  001612  0E03               	movlw	3
  1388  001614  0100               	movlb	0	; () banked
  1389  001616  65CE               	cpfsgt	main@n& (0+255),b
  1390  001618  D004               	goto	l5273
  1391                           
  1392                           ; BSR set to: 0
  1393  00161A  0E00               	movlw	0
  1394  00161C  0100               	movlb	0	; () banked
  1395  00161E  6FCE               	movwf	main@n& (0+255),b
  1396  001620  D002               	goto	l5275
  1397  001622                     l5273:
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;PIC18F27J53-killifish_light01.c: 367: else n++;
  1401  001622  0100               	movlb	0	; () banked
  1402  001624  2BCE               	incf	main@n& (0+255),f,b
  1403  001626                     l5275:
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;PIC18F27J53-killifish_light01.c: 368: uint8_t value = 255 / 4 * n;
  1407  001626  0100               	movlb	0	; () banked
  1408  001628  51CE               	movf	main@n& (0+255),w,b
  1409  00162A  0D3F               	mullw	63
  1410  00162C  CFF3 F0A8          	movff	prodl,main@value
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;PIC18F27J53-killifish_light01.c: 369: for (i = 0; i < 3; i++) {
  1414  001630  0E00               	movlw	0
  1415  001632  0100               	movlb	0	; () banked
  1416  001634  6FB0               	movwf	(main@i+1)& (0+255),b
  1417  001636  0E00               	movlw	0
  1418  001638  6FAF               	movwf	main@i& (0+255),b
  1419  00163A                     l5279:
  1420                           
  1421                           ; BSR set to: 0
  1422  00163A  0100               	movlb	0	; () banked
  1423  00163C  51B0               	movf	(main@i+1)& (0+255),w,b
  1424  00163E  E111               	bnz	l633
  1425  001640  0E03               	movlw	3
  1426  001642  0100               	movlb	0	; () banked
  1427  001644  5DAF               	subwf	main@i& (0+255),w,b
  1428  001646  B0D8               	btfsc	status,0,c
  1429  001648  D00C               	goto	l633
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;PIC18F27J53-killifish_light01.c: 370: PWM_set(i, value);
  1433                           
  1434                           ; BSR set to: 0
  1435                           
  1436                           ; BSR set to: 0
  1437  00164A  C0A8  F06E         	movff	main@value,PWM_set@value
  1438  00164E  0100               	movlb	0	; () banked
  1439  001650  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  1440  001652  0100               	movlb	0	; () banked
  1441  001654  51AF               	movf	main@i& (0+255),w,b
  1442  001656  EC1F  F013         	call	_PWM_set
  1443  00165A  0100               	movlb	0	; () banked
  1444  00165C  4BAF               	infsnz	main@i& (0+255),f,b
  1445  00165E  2BB0               	incf	(main@i+1)& (0+255),f,b
  1446  001660  D7EC               	goto	l5279
  1447  001662                     l633:
  1448                           
  1449                           ;PIC18F27J53-killifish_light01.c: 371: }
  1450                           ;PIC18F27J53-killifish_light01.c: 372: }
  1451                           ;PIC18F27J53-killifish_light01.c: 373: if (sw_B.flag.press) {
  1452  001662  A03E               	btfss	_sw_B+2,0,c
  1453  001664  D01D               	goto	l5301
  1454                           
  1455                           ;PIC18F27J53-killifish_light01.c: 374: sw_B.flags = 0;
  1456  001666  0E00               	movlw	0
  1457  001668  6E3F               	movwf	_sw_B+3,c
  1458  00166A  0E00               	movlw	0
  1459  00166C  6E3E               	movwf	_sw_B+2,c
  1460                           
  1461                           ;PIC18F27J53-killifish_light01.c: 375: light_mode = COMMAND_mode;
  1462  00166E  0E02               	movlw	2
  1463  001670  0100               	movlb	0	; () banked
  1464  001672  6FBF               	movwf	_light_mode& (0+255),b
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;PIC18F27J53-killifish_light01.c: 376: static uint8_t n = 0;
  1468                           ;PIC18F27J53-killifish_light01.c: 377: if (n >= 4) n = 0;
  1469  001674  0E03               	movlw	3
  1470  001676  0100               	movlb	0	; () banked
  1471  001678  65CD               	cpfsgt	main@_2482& (0+255),b
  1472  00167A  D004               	goto	l5295
  1473                           
  1474                           ; BSR set to: 0
  1475  00167C  0E00               	movlw	0
  1476  00167E  0100               	movlb	0	; () banked
  1477  001680  6FCD               	movwf	main@_2482& (0+255),b
  1478  001682  D002               	goto	l5297
  1479  001684                     l5295:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;PIC18F27J53-killifish_light01.c: 378: else n++;
  1483  001684  0100               	movlb	0	; () banked
  1484  001686  2BCD               	incf	main@_2482& (0+255),f,b
  1485  001688                     l5297:
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;PIC18F27J53-killifish_light01.c: 379: uint8_t value = 255 / 4 * n;
  1489  001688  0100               	movlb	0	; () banked
  1490  00168A  51CD               	movf	main@_2482& (0+255),w,b
  1491  00168C  0D3F               	mullw	63
  1492  00168E  CFF3 F0A9          	movff	prodl,main@value_2483
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;PIC18F27J53-killifish_light01.c: 380: PWM_set(3, value);
  1496  001692  C0A9  F06E         	movff	main@value_2483,PWM_set@value
  1497  001696  0100               	movlb	0	; () banked
  1498  001698  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  1499  00169A  0E03               	movlw	3
  1500  00169C  EC1F  F013         	call	_PWM_set
  1501  0016A0                     l5301:
  1502                           
  1503                           ;PIC18F27J53-killifish_light01.c: 381: }
  1504                           ;PIC18F27J53-killifish_light01.c: 382: if (sw_R.flag.press) {
  1505  0016A0  A046               	btfss	_sw_R+2,0,c
  1506  0016A2  D018               	goto	l5315
  1507                           
  1508                           ;PIC18F27J53-killifish_light01.c: 383: sw_R.flags = 0;
  1509  0016A4  0E00               	movlw	0
  1510  0016A6  6E47               	movwf	_sw_R+3,c
  1511  0016A8  0E00               	movlw	0
  1512  0016AA  6E46               	movwf	_sw_R+2,c
  1513                           
  1514                           ;PIC18F27J53-killifish_light01.c: 384: if (light_mode == TIME_SYNC_mode)light_mode = ADC
      +                          _mode;
  1515  0016AC  0100               	movlb	0	; () banked
  1516  0016AE  51BF               	movf	_light_mode& (0+255),w,b
  1517  0016B0  A4D8               	btfss	status,2,c
  1518  0016B2  D002               	goto	l5307
  1519                           
  1520                           ; BSR set to: 0
  1521  0016B4  0E01               	movlw	1
  1522  0016B6  D00C               	goto	L2
  1523  0016B8                     l5307:
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;PIC18F27J53-killifish_light01.c: 385: else if (light_mode == ADC_mode)light_mode = COMM
      +                          AND_mode;
  1527  0016B8  0100               	movlb	0	; () banked
  1528  0016BA  05BF               	decf	_light_mode& (0+255),w,b
  1529  0016BC  A4D8               	btfss	status,2,c
  1530  0016BE  D002               	goto	l5311
  1531                           
  1532                           ; BSR set to: 0
  1533  0016C0  0E02               	movlw	2
  1534  0016C2  D006               	goto	L2
  1535  0016C4                     l5311:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;PIC18F27J53-killifish_light01.c: 386: else if (light_mode == COMMAND_mode)light_mode = 
      +                          TIME_SYNC_mode;
  1539  0016C4  0E02               	movlw	2
  1540  0016C6  0100               	movlb	0	; () banked
  1541  0016C8  19BF               	xorwf	_light_mode& (0+255),w,b
  1542  0016CA  A4D8               	btfss	status,2,c
  1543  0016CC  D003               	goto	l5315
  1544                           
  1545                           ; BSR set to: 0
  1546  0016CE  0E00               	movlw	0
  1547  0016D0                     L2:
  1548  0016D0  0100               	movlb	0	; () banked
  1549  0016D2  6FBF               	movwf	_light_mode& (0+255),b
  1550  0016D4                     l5315:
  1551                           
  1552                           ;PIC18F27J53-killifish_light01.c: 387: }
  1553                           ;PIC18F27J53-killifish_light01.c: 388: if (light_mode == ADC_mode) {
  1554  0016D4  0100               	movlb	0	; () banked
  1555  0016D6  05BF               	decf	_light_mode& (0+255),w,b
  1556  0016D8  A4D8               	btfss	status,2,c
  1557  0016DA  D6F3               	goto	l629
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;PIC18F27J53-killifish_light01.c: 389: for (i = 0; i < 3; i++) {
  1561  0016DC  0E00               	movlw	0
  1562  0016DE  0100               	movlb	0	; () banked
  1563  0016E0  6FB0               	movwf	(main@i+1)& (0+255),b
  1564  0016E2  0E00               	movlw	0
  1565  0016E4  6FAF               	movwf	main@i& (0+255),b
  1566                           
  1567                           ; BSR set to: 0
  1568  0016E6  0100               	movlb	0	; () banked
  1569  0016E8  51B0               	movf	(main@i+1)& (0+255),w,b
  1570  0016EA  E106               	bnz	u5640
  1571  0016EC  0E03               	movlw	3
  1572  0016EE  0100               	movlb	0	; () banked
  1573  0016F0  5DAF               	subwf	main@i& (0+255),w,b
  1574  0016F2  B0D8               	btfsc	status,0,c
  1575  0016F4  D6E6               	goto	l629
  1576  0016F6  D001               	goto	l5323
  1577  0016F8                     u5640:
  1578                           
  1579                           ; BSR set to: 0
  1580  0016F8  D6E4               	goto	l629
  1581  0016FA                     l5323:
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;PIC18F27J53-killifish_light01.c: 390: uint8_t scan = (ADC(i) >> 4);
  1585  0016FA  0100               	movlb	0	; () banked
  1586  0016FC  51AF               	movf	main@i& (0+255),w,b
  1587  0016FE  EC9D  F01A         	call	_ADC
  1588  001702  0E04               	movlw	4
  1589  001704  0100               	movlb	0	; () banked
  1590  001706  6FA4               	movwf	??_main& (0+255),b
  1591  001708                     u5655:
  1592  001708  0100               	movlb	0	; () banked
  1593  00170A  90D8               	bcf	status,0,c
  1594  00170C  3361               	rrcf	(?_ADC+1)& (0+255),f,b
  1595  00170E  3360               	rrcf	?_ADC& (0+255),f,b
  1596  001710  0100               	movlb	0	; () banked
  1597  001712  2FA4               	decfsz	??_main& (0+255),f,b
  1598  001714  D7F9               	goto	u5655
  1599  001716  0100               	movlb	0	; () banked
  1600  001718  5160               	movf	?_ADC& (0+255),w,b
  1601  00171A  0100               	movlb	0	; () banked
  1602  00171C  6FAA               	movwf	main@scan& (0+255),b
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;PIC18F27J53-killifish_light01.c: 391: static uint8_t prev_scan[3];
  1606                           ;PIC18F27J53-killifish_light01.c: 392: if (scan != prev_scan[i]) {
  1607  00171E  0EB8               	movlw	low main@prev_scan
  1608  001720  0100               	movlb	0	; () banked
  1609  001722  25AF               	addwf	main@i& (0+255),w,b
  1610  001724  6ED9               	movwf	fsr2l,c
  1611  001726  0E00               	movlw	high main@prev_scan
  1612  001728  0100               	movlb	0	; () banked
  1613  00172A  21B0               	addwfc	(main@i+1)& (0+255),w,b
  1614  00172C  6EDA               	movwf	fsr2h,c
  1615  00172E  0100               	movlb	0	; () banked
  1616  001730  51AA               	movf	main@scan& (0+255),w,b
  1617  001732  18DE               	xorwf	postinc2,w,c
  1618  001734  B4D8               	btfsc	status,2,c
  1619  001736  D012               	goto	l5331
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;PIC18F27J53-killifish_light01.c: 393: prev_scan[i] = scan;
  1623  001738  0EB8               	movlw	low main@prev_scan
  1624  00173A  0100               	movlb	0	; () banked
  1625  00173C  25AF               	addwf	main@i& (0+255),w,b
  1626  00173E  6ED9               	movwf	fsr2l,c
  1627  001740  0E00               	movlw	high main@prev_scan
  1628  001742  0100               	movlb	0	; () banked
  1629  001744  21B0               	addwfc	(main@i+1)& (0+255),w,b
  1630  001746  6EDA               	movwf	fsr2h,c
  1631  001748  C0AA  FFDF         	movff	main@scan,indf2
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;PIC18F27J53-killifish_light01.c: 394: PWM_set(i, scan);
  1635  00174C  C0AA  F06E         	movff	main@scan,PWM_set@value
  1636  001750  0100               	movlb	0	; () banked
  1637  001752  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  1638  001754  0100               	movlb	0	; () banked
  1639  001756  51AF               	movf	main@i& (0+255),w,b
  1640  001758  EC1F  F013         	call	_PWM_set
  1641  00175C                     l5331:
  1642  00175C  0100               	movlb	0	; () banked
  1643  00175E  4BAF               	infsnz	main@i& (0+255),f,b
  1644  001760  2BB0               	incf	(main@i+1)& (0+255),f,b
  1645                           
  1646                           ; BSR set to: 0
  1647  001762  0100               	movlb	0	; () banked
  1648  001764  51B0               	movf	(main@i+1)& (0+255),w,b
  1649  001766  E101               	bnz	u5670
  1650  001768  D7C1               	goto	L3
  1651  00176A                     u5670:
  1652                           
  1653                           ; BSR set to: 0
  1654                           
  1655                           ; BSR set to: 0
  1656                           
  1657                           ; BSR set to: 0
  1658  00176A  D6AB               	goto	l629
  1659  00176C                     __end_of_main:
  1660                           	opt stack 0
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           prodl	equ	0xFF3
  1666                           intcon	equ	0xFF2
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           postdec1	equ	0xFE5
  1670                           fsr1l	equ	0xFE1
  1671                           indf2	equ	0xFDF
  1672                           postinc2	equ	0xFDE
  1673                           fsr2h	equ	0xFDA
  1674                           fsr2l	equ	0xFD9
  1675                           status	equ	0xFD8
  1676                           
  1677 ;; *************** function _rx_operation *****************
  1678 ;; Defined at:
  1679 ;;		line 235 in file "PIC18F27J53-killifish_light01.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  opland1       250    0[BANK4 ] unsigned char [250]
  1684 ;;  opland2       250    0[BANK3 ] unsigned char [250]
  1685 ;;  opcode        250    0[BANK2 ] unsigned char [250]
  1686 ;;  cmd           250    0[BANK1 ] unsigned char [250]
  1687 ;;  i               1   67[BANK0 ] unsigned char 
  1688 ;;  cnt_char        1   66[BANK0 ] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;		None               void
  1691 ;; Registers used:
  1692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1699 ;;      Locals:         0       2     250     250     250     250       0       0       0       0       0       0       
      +0       0       0       0
  1700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1701 ;;      Totals:         0       3     250     250     250     250       0       0       0       0       0       0       
      +0       0       0       0
  1702 ;;Total ram usage:     1003 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    9
  1705 ;; This function calls:
  1706 ;;		_PWM_set
  1707 ;;		_RTCC_from_caltime
  1708 ;;		_my_atoi
  1709 ;;		_my_strcmp
  1710 ;;		_ringbuf_pop
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text1
  1717  000F5A                     __ptext1:
  1718                           	opt stack 0
  1719  000F5A                     _rx_operation:
  1720                           	opt stack 21
  1721                           
  1722                           ;PIC18F27J53-killifish_light01.c: 236: if (rx_flag) {
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;incstack = 0
  1726  000F5A  502A               	movf	_rx_flag,w,c
  1727  000F5C  B4D8               	btfsc	status,2,c
  1728  000F5E  0012               	return	
  1729                           
  1730                           ;PIC18F27J53-killifish_light01.c: 237: uint8_t i;
  1731                           ;PIC18F27J53-killifish_light01.c: 238: rx_flag = 0;
  1732  000F60  0E00               	movlw	0
  1733  000F62  6E2A               	movwf	_rx_flag,c
  1734                           
  1735                           ;PIC18F27J53-killifish_light01.c: 239: uint8_t opcode[250];
  1736                           ;PIC18F27J53-killifish_light01.c: 240: uint8_t opland1[250];
  1737                           ;PIC18F27J53-killifish_light01.c: 241: uint8_t opland2[250];
  1738                           ;PIC18F27J53-killifish_light01.c: 243: uint8_t cnt_char = 0;
  1739  000F64  0E00               	movlw	0
  1740  000F66  0100               	movlb	0	; () banked
  1741  000F68  6FA2               	movwf	rx_operation@cnt_char& (0+255),b
  1742                           
  1743                           ;PIC18F27J53-killifish_light01.c: 244: uint8_t cmd[250];
  1744                           ;PIC18F27J53-killifish_light01.c: 246: for (i = 0; opcode[i] = ringbuf_pop(&rx_buf); i++
      +                          ) {
  1745  000F6A  0E00               	movlw	0
  1746  000F6C  0100               	movlb	0	; () banked
  1747  000F6E  6FA3               	movwf	rx_operation@i& (0+255),b
  1748  000F70  D018               	goto	l4949
  1749  000F72                     l4943:
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;PIC18F27J53-killifish_light01.c: 247: cmd[cnt_char++] = opcode[i];
  1753  000F72  0100               	movlb	0	; () banked
  1754  000F74  51A3               	movf	rx_operation@i& (0+255),w,b
  1755  000F76  0D01               	mullw	1
  1756  000F78  0E00               	movlw	low rx_operation@opcode
  1757  000F7A  24F3               	addwf	prodl,w,c
  1758  000F7C  6ED9               	movwf	fsr2l,c
  1759  000F7E  0E02               	movlw	high rx_operation@opcode
  1760  000F80  20F4               	addwfc	prodh,w,c
  1761  000F82  6EDA               	movwf	fsr2h,c
  1762  000F84  0100               	movlb	0	; () banked
  1763  000F86  51A2               	movf	rx_operation@cnt_char& (0+255),w,b
  1764  000F88  0D01               	mullw	1
  1765  000F8A  0E00               	movlw	low rx_operation@cmd
  1766  000F8C  24F3               	addwf	prodl,w,c
  1767  000F8E  6EE1               	movwf	fsr1l,c
  1768  000F90  0E01               	movlw	high rx_operation@cmd
  1769  000F92  20F4               	addwfc	prodh,w,c
  1770  000F94  6EE2               	movwf	fsr1h,c
  1771  000F96  CFDF FFE7          	movff	indf2,indf1
  1772                           
  1773                           ; BSR set to: 0
  1774  000F9A  0100               	movlb	0	; () banked
  1775  000F9C  2BA2               	incf	rx_operation@cnt_char& (0+255),f,b
  1776                           
  1777                           ; BSR set to: 0
  1778  000F9E  0100               	movlb	0	; () banked
  1779  000FA0  2BA3               	incf	rx_operation@i& (0+255),f,b
  1780  000FA2                     l4949:
  1781                           
  1782                           ; BSR set to: 0
  1783  000FA2  0E2C               	movlw	low _rx_buf
  1784  000FA4  0100               	movlb	0	; () banked
  1785  000FA6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  1786  000FA8  0E00               	movlw	high _rx_buf
  1787  000FAA  0100               	movlb	0	; () banked
  1788  000FAC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1789  000FAE  ECB9  F012         	call	_ringbuf_pop	;wreg free
  1790  000FB2  0100               	movlb	0	; () banked
  1791  000FB4  6FA1               	movwf	??_rx_operation& (0+255),b
  1792  000FB6  0100               	movlb	0	; () banked
  1793  000FB8  51A3               	movf	rx_operation@i& (0+255),w,b
  1794  000FBA  0D01               	mullw	1
  1795  000FBC  0E00               	movlw	low rx_operation@opcode
  1796  000FBE  24F3               	addwf	prodl,w,c
  1797  000FC0  6ED9               	movwf	fsr2l,c
  1798  000FC2  0E02               	movlw	high rx_operation@opcode
  1799  000FC4  20F4               	addwfc	prodh,w,c
  1800  000FC6  6EDA               	movwf	fsr2h,c
  1801  000FC8  C0A1  FFDF         	movff	??_rx_operation,indf2
  1802  000FCC  50DF               	movf	indf2,w,c
  1803  000FCE  A4D8               	btfss	status,2,c
  1804  000FD0  D7D0               	goto	l4943
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;PIC18F27J53-killifish_light01.c: 248: }
  1808                           ;PIC18F27J53-killifish_light01.c: 249: opcode[i] = '\0';
  1809                           
  1810                           ; BSR set to: 0
  1811  000FD2  0100               	movlb	0	; () banked
  1812  000FD4  51A3               	movf	rx_operation@i& (0+255),w,b
  1813  000FD6  0D01               	mullw	1
  1814  000FD8  0E00               	movlw	low rx_operation@opcode
  1815  000FDA  24F3               	addwf	prodl,w,c
  1816  000FDC  6ED9               	movwf	fsr2l,c
  1817  000FDE  0E02               	movlw	high rx_operation@opcode
  1818  000FE0  20F4               	addwfc	prodh,w,c
  1819  000FE2  6EDA               	movwf	fsr2h,c
  1820  000FE4  0E00               	movlw	0
  1821  000FE6  6EDF               	movwf	indf2,c
  1822                           
  1823                           ;PIC18F27J53-killifish_light01.c: 250: cmd[cnt_char++] = ' ';
  1824  000FE8  0100               	movlb	0	; () banked
  1825  000FEA  51A2               	movf	rx_operation@cnt_char& (0+255),w,b
  1826  000FEC  0D01               	mullw	1
  1827  000FEE  0E00               	movlw	low rx_operation@cmd
  1828  000FF0  24F3               	addwf	prodl,w,c
  1829  000FF2  6ED9               	movwf	fsr2l,c
  1830  000FF4  0E01               	movlw	high rx_operation@cmd
  1831  000FF6  20F4               	addwfc	prodh,w,c
  1832  000FF8  6EDA               	movwf	fsr2h,c
  1833  000FFA  0E20               	movlw	32
  1834  000FFC  6EDF               	movwf	indf2,c
  1835                           
  1836                           ; BSR set to: 0
  1837  000FFE  0100               	movlb	0	; () banked
  1838  001000  2BA2               	incf	rx_operation@cnt_char& (0+255),f,b
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;PIC18F27J53-killifish_light01.c: 251: for (i = 0; opland1[i] = ringbuf_pop(&rx_buf); i+
      +                          +) {
  1842  001002  0E00               	movlw	0
  1843  001004  0100               	movlb	0	; () banked
  1844  001006  6FA3               	movwf	rx_operation@i& (0+255),b
  1845  001008  D018               	goto	l4963
  1846  00100A                     l4957:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;PIC18F27J53-killifish_light01.c: 252: cmd[cnt_char++] = opcode[i];
  1850  00100A  0100               	movlb	0	; () banked
  1851  00100C  51A3               	movf	rx_operation@i& (0+255),w,b
  1852  00100E  0D01               	mullw	1
  1853  001010  0E00               	movlw	low rx_operation@opcode
  1854  001012  24F3               	addwf	prodl,w,c
  1855  001014  6ED9               	movwf	fsr2l,c
  1856  001016  0E02               	movlw	high rx_operation@opcode
  1857  001018  20F4               	addwfc	prodh,w,c
  1858  00101A  6EDA               	movwf	fsr2h,c
  1859  00101C  0100               	movlb	0	; () banked
  1860  00101E  51A2               	movf	rx_operation@cnt_char& (0+255),w,b
  1861  001020  0D01               	mullw	1
  1862  001022  0E00               	movlw	low rx_operation@cmd
  1863  001024  24F3               	addwf	prodl,w,c
  1864  001026  6EE1               	movwf	fsr1l,c
  1865  001028  0E01               	movlw	high rx_operation@cmd
  1866  00102A  20F4               	addwfc	prodh,w,c
  1867  00102C  6EE2               	movwf	fsr1h,c
  1868  00102E  CFDF FFE7          	movff	indf2,indf1
  1869                           
  1870                           ; BSR set to: 0
  1871  001032  0100               	movlb	0	; () banked
  1872  001034  2BA2               	incf	rx_operation@cnt_char& (0+255),f,b
  1873                           
  1874                           ; BSR set to: 0
  1875  001036  0100               	movlb	0	; () banked
  1876  001038  2BA3               	incf	rx_operation@i& (0+255),f,b
  1877  00103A                     l4963:
  1878                           
  1879                           ; BSR set to: 0
  1880  00103A  0E2C               	movlw	low _rx_buf
  1881  00103C  0100               	movlb	0	; () banked
  1882  00103E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  1883  001040  0E00               	movlw	high _rx_buf
  1884  001042  0100               	movlb	0	; () banked
  1885  001044  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1886  001046  ECB9  F012         	call	_ringbuf_pop	;wreg free
  1887  00104A  0100               	movlb	0	; () banked
  1888  00104C  6FA1               	movwf	??_rx_operation& (0+255),b
  1889  00104E  0100               	movlb	0	; () banked
  1890  001050  51A3               	movf	rx_operation@i& (0+255),w,b
  1891  001052  0D01               	mullw	1
  1892  001054  0E00               	movlw	low rx_operation@opland1
  1893  001056  24F3               	addwf	prodl,w,c
  1894  001058  6ED9               	movwf	fsr2l,c
  1895  00105A  0E04               	movlw	high rx_operation@opland1
  1896  00105C  20F4               	addwfc	prodh,w,c
  1897  00105E  6EDA               	movwf	fsr2h,c
  1898  001060  C0A1  FFDF         	movff	??_rx_operation,indf2
  1899  001064  50DF               	movf	indf2,w,c
  1900  001066  A4D8               	btfss	status,2,c
  1901  001068  D7D0               	goto	l4957
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;PIC18F27J53-killifish_light01.c: 253: }
  1905                           ;PIC18F27J53-killifish_light01.c: 254: opland1[i] = '\0';
  1906                           
  1907                           ; BSR set to: 0
  1908  00106A  0100               	movlb	0	; () banked
  1909  00106C  51A3               	movf	rx_operation@i& (0+255),w,b
  1910  00106E  0D01               	mullw	1
  1911  001070  0E00               	movlw	low rx_operation@opland1
  1912  001072  24F3               	addwf	prodl,w,c
  1913  001074  6ED9               	movwf	fsr2l,c
  1914  001076  0E04               	movlw	high rx_operation@opland1
  1915  001078  20F4               	addwfc	prodh,w,c
  1916  00107A  6EDA               	movwf	fsr2h,c
  1917  00107C  0E00               	movlw	0
  1918  00107E  6EDF               	movwf	indf2,c
  1919                           
  1920                           ;PIC18F27J53-killifish_light01.c: 255: cmd[cnt_char++] = ' ';
  1921  001080  0100               	movlb	0	; () banked
  1922  001082  51A2               	movf	rx_operation@cnt_char& (0+255),w,b
  1923  001084  0D01               	mullw	1
  1924  001086  0E00               	movlw	low rx_operation@cmd
  1925  001088  24F3               	addwf	prodl,w,c
  1926  00108A  6ED9               	movwf	fsr2l,c
  1927  00108C  0E01               	movlw	high rx_operation@cmd
  1928  00108E  20F4               	addwfc	prodh,w,c
  1929  001090  6EDA               	movwf	fsr2h,c
  1930  001092  0E20               	movlw	32
  1931  001094  6EDF               	movwf	indf2,c
  1932                           
  1933                           ; BSR set to: 0
  1934  001096  0100               	movlb	0	; () banked
  1935  001098  2BA2               	incf	rx_operation@cnt_char& (0+255),f,b
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;PIC18F27J53-killifish_light01.c: 256: for (i = 0; opland2[i] = ringbuf_pop(&rx_buf); i+
      +                          +) {
  1939  00109A  0E00               	movlw	0
  1940  00109C  0100               	movlb	0	; () banked
  1941  00109E  6FA3               	movwf	rx_operation@i& (0+255),b
  1942  0010A0  D018               	goto	l4977
  1943  0010A2                     l4971:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;PIC18F27J53-killifish_light01.c: 257: cmd[cnt_char++] = opcode[i];
  1947  0010A2  0100               	movlb	0	; () banked
  1948  0010A4  51A3               	movf	rx_operation@i& (0+255),w,b
  1949  0010A6  0D01               	mullw	1
  1950  0010A8  0E00               	movlw	low rx_operation@opcode
  1951  0010AA  24F3               	addwf	prodl,w,c
  1952  0010AC  6ED9               	movwf	fsr2l,c
  1953  0010AE  0E02               	movlw	high rx_operation@opcode
  1954  0010B0  20F4               	addwfc	prodh,w,c
  1955  0010B2  6EDA               	movwf	fsr2h,c
  1956  0010B4  0100               	movlb	0	; () banked
  1957  0010B6  51A2               	movf	rx_operation@cnt_char& (0+255),w,b
  1958  0010B8  0D01               	mullw	1
  1959  0010BA  0E00               	movlw	low rx_operation@cmd
  1960  0010BC  24F3               	addwf	prodl,w,c
  1961  0010BE  6EE1               	movwf	fsr1l,c
  1962  0010C0  0E01               	movlw	high rx_operation@cmd
  1963  0010C2  20F4               	addwfc	prodh,w,c
  1964  0010C4  6EE2               	movwf	fsr1h,c
  1965  0010C6  CFDF FFE7          	movff	indf2,indf1
  1966                           
  1967                           ; BSR set to: 0
  1968  0010CA  0100               	movlb	0	; () banked
  1969  0010CC  2BA2               	incf	rx_operation@cnt_char& (0+255),f,b
  1970                           
  1971                           ; BSR set to: 0
  1972  0010CE  0100               	movlb	0	; () banked
  1973  0010D0  2BA3               	incf	rx_operation@i& (0+255),f,b
  1974  0010D2                     l4977:
  1975                           
  1976                           ; BSR set to: 0
  1977  0010D2  0E2C               	movlw	low _rx_buf
  1978  0010D4  0100               	movlb	0	; () banked
  1979  0010D6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  1980  0010D8  0E00               	movlw	high _rx_buf
  1981  0010DA  0100               	movlb	0	; () banked
  1982  0010DC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1983  0010DE  ECB9  F012         	call	_ringbuf_pop	;wreg free
  1984  0010E2  0100               	movlb	0	; () banked
  1985  0010E4  6FA1               	movwf	??_rx_operation& (0+255),b
  1986  0010E6  0100               	movlb	0	; () banked
  1987  0010E8  51A3               	movf	rx_operation@i& (0+255),w,b
  1988  0010EA  0D01               	mullw	1
  1989  0010EC  0E00               	movlw	low rx_operation@opland2
  1990  0010EE  24F3               	addwf	prodl,w,c
  1991  0010F0  6ED9               	movwf	fsr2l,c
  1992  0010F2  0E03               	movlw	high rx_operation@opland2
  1993  0010F4  20F4               	addwfc	prodh,w,c
  1994  0010F6  6EDA               	movwf	fsr2h,c
  1995  0010F8  C0A1  FFDF         	movff	??_rx_operation,indf2
  1996  0010FC  50DF               	movf	indf2,w,c
  1997  0010FE  A4D8               	btfss	status,2,c
  1998  001100  D7D0               	goto	l4971
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;PIC18F27J53-killifish_light01.c: 258: }
  2002                           ;PIC18F27J53-killifish_light01.c: 259: opland2[i] = '\0';
  2003                           
  2004                           ; BSR set to: 0
  2005  001102  0100               	movlb	0	; () banked
  2006  001104  51A3               	movf	rx_operation@i& (0+255),w,b
  2007  001106  0D01               	mullw	1
  2008  001108  0E00               	movlw	low rx_operation@opland2
  2009  00110A  24F3               	addwf	prodl,w,c
  2010  00110C  6ED9               	movwf	fsr2l,c
  2011  00110E  0E03               	movlw	high rx_operation@opland2
  2012  001110  20F4               	addwfc	prodh,w,c
  2013  001112  6EDA               	movwf	fsr2h,c
  2014  001114  0E00               	movlw	0
  2015  001116  6EDF               	movwf	indf2,c
  2016                           
  2017                           ;PIC18F27J53-killifish_light01.c: 260: cmd[cnt_char] = '\0';
  2018  001118  0100               	movlb	0	; () banked
  2019  00111A  51A2               	movf	rx_operation@cnt_char& (0+255),w,b
  2020  00111C  0D01               	mullw	1
  2021  00111E  0E00               	movlw	low rx_operation@cmd
  2022  001120  24F3               	addwf	prodl,w,c
  2023  001122  6ED9               	movwf	fsr2l,c
  2024  001124  0E01               	movlw	high rx_operation@cmd
  2025  001126  20F4               	addwfc	prodh,w,c
  2026  001128  6EDA               	movwf	fsr2h,c
  2027  00112A  0E00               	movlw	0
  2028  00112C  6EDF               	movwf	indf2,c
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;PIC18F27J53-killifish_light01.c: 262: if (!my_strcmp(opcode, "ts")) {
  2032  00112E  0E00               	movlw	low rx_operation@opcode
  2033  001130  0100               	movlb	0	; () banked
  2034  001132  6F60               	movwf	my_strcmp@str1& (0+255),b
  2035  001134  0E02               	movlw	high rx_operation@opcode
  2036  001136  0100               	movlb	0	; () banked
  2037  001138  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2038  00113A  0E40               	movlw	low STR_12
  2039  00113C  0100               	movlb	0	; () banked
  2040  00113E  6F62               	movwf	my_strcmp@str2& (0+255),b
  2041  001140  0E0F               	movlw	high STR_12
  2042  001142  0100               	movlb	0	; () banked
  2043  001144  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2044  001146  EC0A  F016         	call	_my_strcmp	;wreg free
  2045  00114A  0900               	iorlw	0
  2046  00114C  A4D8               	btfss	status,2,c
  2047  00114E  D0BF               	goto	l5009
  2048                           
  2049                           ;PIC18F27J53-killifish_light01.c: 263: if (!my_strcmp(opland1, "y")) {
  2050  001150  0E00               	movlw	low rx_operation@opland1
  2051  001152  0100               	movlb	0	; () banked
  2052  001154  6F60               	movwf	my_strcmp@str1& (0+255),b
  2053  001156  0E04               	movlw	high rx_operation@opland1
  2054  001158  0100               	movlb	0	; () banked
  2055  00115A  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2056  00115C  0E57               	movlw	low STR_13
  2057  00115E  0100               	movlb	0	; () banked
  2058  001160  6F62               	movwf	my_strcmp@str2& (0+255),b
  2059  001162  0E0F               	movlw	high STR_13
  2060  001164  0100               	movlb	0	; () banked
  2061  001166  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2062  001168  EC0A  F016         	call	_my_strcmp	;wreg free
  2063  00116C  0900               	iorlw	0
  2064  00116E  A4D8               	btfss	status,2,c
  2065  001170  D00C               	goto	l4987
  2066                           
  2067                           ;PIC18F27J53-killifish_light01.c: 264: caltime_now.YY = my_atoi(opland2);
  2068  001172  0E00               	movlw	low rx_operation@opland2
  2069  001174  0100               	movlb	0	; () banked
  2070  001176  6F66               	movwf	my_atoi@str& (0+255),b
  2071  001178  0E03               	movlw	high rx_operation@opland2
  2072  00117A  0100               	movlb	0	; () banked
  2073  00117C  6F67               	movwf	(my_atoi@str+1)& (0+255),b
  2074  00117E  ECAD  F016         	call	_my_atoi	;wreg free
  2075  001182  0100               	movlb	0	; () banked
  2076  001184  5166               	movf	?_my_atoi& (0+255),w,b
  2077  001186  0100               	movlb	0	; () banked
  2078  001188  6FC8               	movwf	(_caltime_now+6)& (0+255),b
  2079  00118A                     l4987:
  2080                           
  2081                           ;PIC18F27J53-killifish_light01.c: 265: }
  2082                           ;PIC18F27J53-killifish_light01.c: 266: if (!my_strcmp(opland1, "M")) {
  2083  00118A  0E00               	movlw	low rx_operation@opland1
  2084  00118C  0100               	movlb	0	; () banked
  2085  00118E  6F60               	movwf	my_strcmp@str1& (0+255),b
  2086  001190  0E04               	movlw	high rx_operation@opland1
  2087  001192  0100               	movlb	0	; () banked
  2088  001194  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2089  001196  0E47               	movlw	low STR_14
  2090  001198  0100               	movlb	0	; () banked
  2091  00119A  6F62               	movwf	my_strcmp@str2& (0+255),b
  2092  00119C  0E0F               	movlw	high STR_14
  2093  00119E  0100               	movlb	0	; () banked
  2094  0011A0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2095  0011A2  EC0A  F016         	call	_my_strcmp	;wreg free
  2096  0011A6  0900               	iorlw	0
  2097  0011A8  A4D8               	btfss	status,2,c
  2098  0011AA  D00C               	goto	l4991
  2099                           
  2100                           ;PIC18F27J53-killifish_light01.c: 267: caltime_now.MM = my_atoi(opland2);
  2101  0011AC  0E00               	movlw	low rx_operation@opland2
  2102  0011AE  0100               	movlb	0	; () banked
  2103  0011B0  6F66               	movwf	my_atoi@str& (0+255),b
  2104  0011B2  0E03               	movlw	high rx_operation@opland2
  2105  0011B4  0100               	movlb	0	; () banked
  2106  0011B6  6F67               	movwf	(my_atoi@str+1)& (0+255),b
  2107  0011B8  ECAD  F016         	call	_my_atoi	;wreg free
  2108  0011BC  0100               	movlb	0	; () banked
  2109  0011BE  5166               	movf	?_my_atoi& (0+255),w,b
  2110  0011C0  0100               	movlb	0	; () banked
  2111  0011C2  6FC7               	movwf	(_caltime_now+5)& (0+255),b
  2112  0011C4                     l4991:
  2113                           
  2114                           ;PIC18F27J53-killifish_light01.c: 268: }
  2115                           ;PIC18F27J53-killifish_light01.c: 269: if (!my_strcmp(opland1, "d")) {
  2116  0011C4  0E00               	movlw	low rx_operation@opland1
  2117  0011C6  0100               	movlb	0	; () banked
  2118  0011C8  6F60               	movwf	my_strcmp@str1& (0+255),b
  2119  0011CA  0E04               	movlw	high rx_operation@opland1
  2120  0011CC  0100               	movlb	0	; () banked
  2121  0011CE  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2122  0011D0  0E4B               	movlw	low STR_15
  2123  0011D2  0100               	movlb	0	; () banked
  2124  0011D4  6F62               	movwf	my_strcmp@str2& (0+255),b
  2125  0011D6  0E0F               	movlw	high STR_15
  2126  0011D8  0100               	movlb	0	; () banked
  2127  0011DA  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2128  0011DC  EC0A  F016         	call	_my_strcmp	;wreg free
  2129  0011E0  0900               	iorlw	0
  2130  0011E2  A4D8               	btfss	status,2,c
  2131  0011E4  D00C               	goto	l4995
  2132                           
  2133                           ;PIC18F27J53-killifish_light01.c: 270: caltime_now.DD = my_atoi(opland2);
  2134  0011E6  0E00               	movlw	low rx_operation@opland2
  2135  0011E8  0100               	movlb	0	; () banked
  2136  0011EA  6F66               	movwf	my_atoi@str& (0+255),b
  2137  0011EC  0E03               	movlw	high rx_operation@opland2
  2138  0011EE  0100               	movlb	0	; () banked
  2139  0011F0  6F67               	movwf	(my_atoi@str+1)& (0+255),b
  2140  0011F2  ECAD  F016         	call	_my_atoi	;wreg free
  2141  0011F6  0100               	movlb	0	; () banked
  2142  0011F8  5166               	movf	?_my_atoi& (0+255),w,b
  2143  0011FA  0100               	movlb	0	; () banked
  2144  0011FC  6FC6               	movwf	(_caltime_now+4)& (0+255),b
  2145  0011FE                     l4995:
  2146                           
  2147                           ;PIC18F27J53-killifish_light01.c: 271: }
  2148                           ;PIC18F27J53-killifish_light01.c: 272: if (!my_strcmp(opland1, "h")) {
  2149  0011FE  0E00               	movlw	low rx_operation@opland1
  2150  001200  0100               	movlb	0	; () banked
  2151  001202  6F60               	movwf	my_strcmp@str1& (0+255),b
  2152  001204  0E04               	movlw	high rx_operation@opland1
  2153  001206  0100               	movlb	0	; () banked
  2154  001208  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2155  00120A  0E4F               	movlw	low STR_16
  2156  00120C  0100               	movlb	0	; () banked
  2157  00120E  6F62               	movwf	my_strcmp@str2& (0+255),b
  2158  001210  0E0F               	movlw	high STR_16
  2159  001212  0100               	movlb	0	; () banked
  2160  001214  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2161  001216  EC0A  F016         	call	_my_strcmp	;wreg free
  2162  00121A  0900               	iorlw	0
  2163  00121C  A4D8               	btfss	status,2,c
  2164  00121E  D00C               	goto	l4999
  2165                           
  2166                           ;PIC18F27J53-killifish_light01.c: 273: caltime_now.hh = my_atoi(opland2);
  2167  001220  0E00               	movlw	low rx_operation@opland2
  2168  001222  0100               	movlb	0	; () banked
  2169  001224  6F66               	movwf	my_atoi@str& (0+255),b
  2170  001226  0E03               	movlw	high rx_operation@opland2
  2171  001228  0100               	movlb	0	; () banked
  2172  00122A  6F67               	movwf	(my_atoi@str+1)& (0+255),b
  2173  00122C  ECAD  F016         	call	_my_atoi	;wreg free
  2174  001230  0100               	movlb	0	; () banked
  2175  001232  5166               	movf	?_my_atoi& (0+255),w,b
  2176  001234  0100               	movlb	0	; () banked
  2177  001236  6FC4               	movwf	(_caltime_now+2)& (0+255),b
  2178  001238                     l4999:
  2179                           
  2180                           ;PIC18F27J53-killifish_light01.c: 274: }
  2181                           ;PIC18F27J53-killifish_light01.c: 275: if (!my_strcmp(opland1, "m")) {
  2182  001238  0E00               	movlw	low rx_operation@opland1
  2183  00123A  0100               	movlb	0	; () banked
  2184  00123C  6F60               	movwf	my_strcmp@str1& (0+255),b
  2185  00123E  0E04               	movlw	high rx_operation@opland1
  2186  001240  0100               	movlb	0	; () banked
  2187  001242  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2188  001244  0E51               	movlw	low STR_17
  2189  001246  0100               	movlb	0	; () banked
  2190  001248  6F62               	movwf	my_strcmp@str2& (0+255),b
  2191  00124A  0E0F               	movlw	high STR_17
  2192  00124C  0100               	movlb	0	; () banked
  2193  00124E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2194  001250  EC0A  F016         	call	_my_strcmp	;wreg free
  2195  001254  0900               	iorlw	0
  2196  001256  A4D8               	btfss	status,2,c
  2197  001258  D00C               	goto	l5003
  2198                           
  2199                           ;PIC18F27J53-killifish_light01.c: 276: caltime_now.mm = my_atoi(opland2);
  2200  00125A  0E00               	movlw	low rx_operation@opland2
  2201  00125C  0100               	movlb	0	; () banked
  2202  00125E  6F66               	movwf	my_atoi@str& (0+255),b
  2203  001260  0E03               	movlw	high rx_operation@opland2
  2204  001262  0100               	movlb	0	; () banked
  2205  001264  6F67               	movwf	(my_atoi@str+1)& (0+255),b
  2206  001266  ECAD  F016         	call	_my_atoi	;wreg free
  2207  00126A  0100               	movlb	0	; () banked
  2208  00126C  5166               	movf	?_my_atoi& (0+255),w,b
  2209  00126E  0100               	movlb	0	; () banked
  2210  001270  6FC3               	movwf	(_caltime_now+1)& (0+255),b
  2211  001272                     l5003:
  2212                           
  2213                           ;PIC18F27J53-killifish_light01.c: 277: }
  2214                           ;PIC18F27J53-killifish_light01.c: 278: if (!my_strcmp(opland1, "s")) {
  2215  001272  0E00               	movlw	low rx_operation@opland1
  2216  001274  0100               	movlb	0	; () banked
  2217  001276  6F60               	movwf	my_strcmp@str1& (0+255),b
  2218  001278  0E04               	movlw	high rx_operation@opland1
  2219  00127A  0100               	movlb	0	; () banked
  2220  00127C  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2221  00127E  0E41               	movlw	low (STR_12+1)
  2222  001280  0100               	movlb	0	; () banked
  2223  001282  6F62               	movwf	my_strcmp@str2& (0+255),b
  2224  001284  0E0F               	movlw	high (STR_12+1)
  2225  001286  0100               	movlb	0	; () banked
  2226  001288  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2227  00128A  EC0A  F016         	call	_my_strcmp	;wreg free
  2228  00128E  0900               	iorlw	0
  2229  001290  A4D8               	btfss	status,2,c
  2230  001292  D00C               	goto	l610
  2231                           
  2232                           ;PIC18F27J53-killifish_light01.c: 279: caltime_now.ss = my_atoi(opland2);
  2233  001294  0E00               	movlw	low rx_operation@opland2
  2234  001296  0100               	movlb	0	; () banked
  2235  001298  6F66               	movwf	my_atoi@str& (0+255),b
  2236  00129A  0E03               	movlw	high rx_operation@opland2
  2237  00129C  0100               	movlb	0	; () banked
  2238  00129E  6F67               	movwf	(my_atoi@str+1)& (0+255),b
  2239  0012A0  ECAD  F016         	call	_my_atoi	;wreg free
  2240  0012A4  0100               	movlb	0	; () banked
  2241  0012A6  5166               	movf	?_my_atoi& (0+255),w,b
  2242  0012A8  0100               	movlb	0	; () banked
  2243  0012AA  6FC2               	movwf	_caltime_now& (0+255),b
  2244  0012AC                     l610:
  2245                           
  2246                           ;PIC18F27J53-killifish_light01.c: 280: }
  2247                           ;PIC18F27J53-killifish_light01.c: 281: RTCC_from_caltime(&caltime_now, &epoch_now);
  2248  0012AC  0EC2               	movlw	low _caltime_now
  2249  0012AE  0100               	movlb	0	; () banked
  2250  0012B0  6F9D               	movwf	RTCC_from_caltime@ct& (0+255),b
  2251  0012B2  0E00               	movlw	high _caltime_now
  2252  0012B4  0100               	movlb	0	; () banked
  2253  0012B6  6F9E               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  2254  0012B8  0EC9               	movlw	low _epoch_now
  2255  0012BA  0100               	movlb	0	; () banked
  2256  0012BC  6F9F               	movwf	RTCC_from_caltime@ep& (0+255),b
  2257  0012BE  0E00               	movlw	high _epoch_now
  2258  0012C0  0100               	movlb	0	; () banked
  2259  0012C2  6FA0               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  2260  0012C4  EC50  F01A         	call	_RTCC_from_caltime	;wreg free
  2261                           
  2262                           ;PIC18F27J53-killifish_light01.c: 282: time_change_flag = 1;
  2263  0012C8  0E01               	movlw	1
  2264  0012CA  0100               	movlb	0	; () banked
  2265  0012CC  6FC0               	movwf	_time_change_flag& (0+255),b
  2266  0012CE                     l5009:
  2267                           
  2268                           ;PIC18F27J53-killifish_light01.c: 283: }
  2269                           ;PIC18F27J53-killifish_light01.c: 284: if (!my_strcmp(opcode, "set")) {
  2270  0012CE  0E00               	movlw	low rx_operation@opcode
  2271  0012D0  0100               	movlb	0	; () banked
  2272  0012D2  6F60               	movwf	my_strcmp@str1& (0+255),b
  2273  0012D4  0E02               	movlw	high rx_operation@opcode
  2274  0012D6  0100               	movlb	0	; () banked
  2275  0012D8  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2276  0012DA  0E30               	movlw	low STR_19
  2277  0012DC  0100               	movlb	0	; () banked
  2278  0012DE  6F62               	movwf	my_strcmp@str2& (0+255),b
  2279  0012E0  0E0F               	movlw	high STR_19
  2280  0012E2  0100               	movlb	0	; () banked
  2281  0012E4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2282  0012E6  EC0A  F016         	call	_my_strcmp	;wreg free
  2283  0012EA  0900               	iorlw	0
  2284  0012EC  A4D8               	btfss	status,2,c
  2285  0012EE  0012               	return	
  2286                           
  2287                           ;PIC18F27J53-killifish_light01.c: 285: if (!my_strcmp(opland1, "sync")) {
  2288  0012F0  0E00               	movlw	low rx_operation@opland1
  2289  0012F2  0100               	movlb	0	; () banked
  2290  0012F4  6F60               	movwf	my_strcmp@str1& (0+255),b
  2291  0012F6  0E04               	movlw	high rx_operation@opland1
  2292  0012F8  0100               	movlb	0	; () banked
  2293  0012FA  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2294  0012FC  0E23               	movlw	low STR_20
  2295  0012FE  0100               	movlb	0	; () banked
  2296  001300  6F62               	movwf	my_strcmp@str2& (0+255),b
  2297  001302  0E0F               	movlw	high STR_20
  2298  001304  0100               	movlb	0	; () banked
  2299  001306  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2300  001308  EC0A  F016         	call	_my_strcmp	;wreg free
  2301  00130C  0900               	iorlw	0
  2302  00130E  A4D8               	btfss	status,2,c
  2303  001310  D003               	goto	l5015
  2304                           
  2305                           ;PIC18F27J53-killifish_light01.c: 286: light_mode = TIME_SYNC_mode;
  2306  001312  0E00               	movlw	0
  2307  001314  0100               	movlb	0	; () banked
  2308  001316  6FBF               	movwf	_light_mode& (0+255),b
  2309  001318                     l5015:
  2310                           
  2311                           ;PIC18F27J53-killifish_light01.c: 287: }
  2312                           ;PIC18F27J53-killifish_light01.c: 288: if (!my_strcmp(opland1, "adc")) {
  2313  001318  0E00               	movlw	low rx_operation@opland1
  2314  00131A  0100               	movlb	0	; () banked
  2315  00131C  6F60               	movwf	my_strcmp@str1& (0+255),b
  2316  00131E  0E04               	movlw	high rx_operation@opland1
  2317  001320  0100               	movlb	0	; () banked
  2318  001322  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2319  001324  0E2C               	movlw	low STR_21
  2320  001326  0100               	movlb	0	; () banked
  2321  001328  6F62               	movwf	my_strcmp@str2& (0+255),b
  2322  00132A  0E0F               	movlw	high STR_21
  2323  00132C  0100               	movlb	0	; () banked
  2324  00132E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2325  001330  EC0A  F016         	call	_my_strcmp	;wreg free
  2326  001334  0900               	iorlw	0
  2327  001336  A4D8               	btfss	status,2,c
  2328  001338  D003               	goto	l5019
  2329                           
  2330                           ;PIC18F27J53-killifish_light01.c: 289: light_mode = ADC_mode;
  2331  00133A  0E01               	movlw	1
  2332  00133C  0100               	movlb	0	; () banked
  2333  00133E  6FBF               	movwf	_light_mode& (0+255),b
  2334  001340                     l5019:
  2335                           
  2336                           ;PIC18F27J53-killifish_light01.c: 290: }
  2337                           ;PIC18F27J53-killifish_light01.c: 291: if (!my_strcmp(opland1, "r")) {
  2338  001340  0E00               	movlw	low rx_operation@opland1
  2339  001342  0100               	movlb	0	; () banked
  2340  001344  6F60               	movwf	my_strcmp@str1& (0+255),b
  2341  001346  0E04               	movlw	high rx_operation@opland1
  2342  001348  0100               	movlb	0	; () banked
  2343  00134A  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2344  00134C  0E53               	movlw	low STR_22
  2345  00134E  0100               	movlb	0	; () banked
  2346  001350  6F62               	movwf	my_strcmp@str2& (0+255),b
  2347  001352  0E0F               	movlw	high STR_22
  2348  001354  0100               	movlb	0	; () banked
  2349  001356  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2350  001358  EC0A  F016         	call	_my_strcmp	;wreg free
  2351  00135C  0900               	iorlw	0
  2352  00135E  A4D8               	btfss	status,2,c
  2353  001360  D012               	goto	l5025
  2354                           
  2355                           ;PIC18F27J53-killifish_light01.c: 292: light_mode = COMMAND_mode;
  2356  001362  0E02               	movlw	2
  2357  001364  0100               	movlb	0	; () banked
  2358  001366  6FBF               	movwf	_light_mode& (0+255),b
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;PIC18F27J53-killifish_light01.c: 293: PWM_set(0, my_atoi(opland2));
  2362  001368  0E00               	movlw	low rx_operation@opland2
  2363  00136A  0100               	movlb	0	; () banked
  2364  00136C  6F66               	movwf	my_atoi@str& (0+255),b
  2365  00136E  0E03               	movlw	high rx_operation@opland2
  2366  001370  0100               	movlb	0	; () banked
  2367  001372  6F67               	movwf	(my_atoi@str+1)& (0+255),b
  2368  001374  ECAD  F016         	call	_my_atoi	;wreg free
  2369  001378  C066  F06E         	movff	?_my_atoi,PWM_set@value
  2370  00137C  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  2371  001380  0E00               	movlw	0
  2372  001382  EC1F  F013         	call	_PWM_set
  2373  001386                     l5025:
  2374                           
  2375                           ;PIC18F27J53-killifish_light01.c: 294: }
  2376                           ;PIC18F27J53-killifish_light01.c: 295: if (!my_strcmp(opland1, "g")) {
  2377  001386  0E00               	movlw	low rx_operation@opland1
  2378  001388  0100               	movlb	0	; () banked
  2379  00138A  6F60               	movwf	my_strcmp@str1& (0+255),b
  2380  00138C  0E04               	movlw	high rx_operation@opland1
  2381  00138E  0100               	movlb	0	; () banked
  2382  001390  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2383  001392  0E4D               	movlw	low STR_23
  2384  001394  0100               	movlb	0	; () banked
  2385  001396  6F62               	movwf	my_strcmp@str2& (0+255),b
  2386  001398  0E0F               	movlw	high STR_23
  2387  00139A  0100               	movlb	0	; () banked
  2388  00139C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2389  00139E  EC0A  F016         	call	_my_strcmp	;wreg free
  2390  0013A2  0900               	iorlw	0
  2391  0013A4  A4D8               	btfss	status,2,c
  2392  0013A6  D012               	goto	l5031
  2393                           
  2394                           ;PIC18F27J53-killifish_light01.c: 296: light_mode = COMMAND_mode;
  2395  0013A8  0E02               	movlw	2
  2396  0013AA  0100               	movlb	0	; () banked
  2397  0013AC  6FBF               	movwf	_light_mode& (0+255),b
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;PIC18F27J53-killifish_light01.c: 297: PWM_set(1, my_atoi(opland2));
  2401  0013AE  0E00               	movlw	low rx_operation@opland2
  2402  0013B0  0100               	movlb	0	; () banked
  2403  0013B2  6F66               	movwf	my_atoi@str& (0+255),b
  2404  0013B4  0E03               	movlw	high rx_operation@opland2
  2405  0013B6  0100               	movlb	0	; () banked
  2406  0013B8  6F67               	movwf	(my_atoi@str+1)& (0+255),b
  2407  0013BA  ECAD  F016         	call	_my_atoi	;wreg free
  2408  0013BE  C066  F06E         	movff	?_my_atoi,PWM_set@value
  2409  0013C2  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  2410  0013C6  0E01               	movlw	1
  2411  0013C8  EC1F  F013         	call	_PWM_set
  2412  0013CC                     l5031:
  2413                           
  2414                           ;PIC18F27J53-killifish_light01.c: 298: }
  2415                           ;PIC18F27J53-killifish_light01.c: 299: if (!my_strcmp(opland1, "b")) {
  2416  0013CC  0E00               	movlw	low rx_operation@opland1
  2417  0013CE  0100               	movlb	0	; () banked
  2418  0013D0  6F60               	movwf	my_strcmp@str1& (0+255),b
  2419  0013D2  0E04               	movlw	high rx_operation@opland1
  2420  0013D4  0100               	movlb	0	; () banked
  2421  0013D6  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2422  0013D8  0E49               	movlw	low STR_24
  2423  0013DA  0100               	movlb	0	; () banked
  2424  0013DC  6F62               	movwf	my_strcmp@str2& (0+255),b
  2425  0013DE  0E0F               	movlw	high STR_24
  2426  0013E0  0100               	movlb	0	; () banked
  2427  0013E2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2428  0013E4  EC0A  F016         	call	_my_strcmp	;wreg free
  2429  0013E8  0900               	iorlw	0
  2430  0013EA  A4D8               	btfss	status,2,c
  2431  0013EC  D012               	goto	l5037
  2432                           
  2433                           ;PIC18F27J53-killifish_light01.c: 300: light_mode = COMMAND_mode;
  2434  0013EE  0E02               	movlw	2
  2435  0013F0  0100               	movlb	0	; () banked
  2436  0013F2  6FBF               	movwf	_light_mode& (0+255),b
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;PIC18F27J53-killifish_light01.c: 301: PWM_set(2, my_atoi(opland2));
  2440  0013F4  0E00               	movlw	low rx_operation@opland2
  2441  0013F6  0100               	movlb	0	; () banked
  2442  0013F8  6F66               	movwf	my_atoi@str& (0+255),b
  2443  0013FA  0E03               	movlw	high rx_operation@opland2
  2444  0013FC  0100               	movlb	0	; () banked
  2445  0013FE  6F67               	movwf	(my_atoi@str+1)& (0+255),b
  2446  001400  ECAD  F016         	call	_my_atoi	;wreg free
  2447  001404  C066  F06E         	movff	?_my_atoi,PWM_set@value
  2448  001408  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  2449  00140C  0E02               	movlw	2
  2450  00140E  EC1F  F013         	call	_PWM_set
  2451  001412                     l5037:
  2452                           
  2453                           ;PIC18F27J53-killifish_light01.c: 302: }
  2454                           ;PIC18F27J53-killifish_light01.c: 303: if (!my_strcmp(opland1, "w")) {
  2455  001412  0E00               	movlw	low rx_operation@opland1
  2456  001414  0100               	movlb	0	; () banked
  2457  001416  6F60               	movwf	my_strcmp@str1& (0+255),b
  2458  001418  0E04               	movlw	high rx_operation@opland1
  2459  00141A  0100               	movlb	0	; () banked
  2460  00141C  6F61               	movwf	(my_strcmp@str1+1)& (0+255),b
  2461  00141E  0E55               	movlw	low STR_25
  2462  001420  0100               	movlb	0	; () banked
  2463  001422  6F62               	movwf	my_strcmp@str2& (0+255),b
  2464  001424  0E0F               	movlw	high STR_25
  2465  001426  0100               	movlb	0	; () banked
  2466  001428  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  2467  00142A  EC0A  F016         	call	_my_strcmp	;wreg free
  2468  00142E  0900               	iorlw	0
  2469  001430  A4D8               	btfss	status,2,c
  2470  001432  0012               	return	
  2471                           
  2472                           ;PIC18F27J53-killifish_light01.c: 304: light_mode = COMMAND_mode;
  2473  001434  0E02               	movlw	2
  2474  001436  0100               	movlb	0	; () banked
  2475  001438  6FBF               	movwf	_light_mode& (0+255),b
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;PIC18F27J53-killifish_light01.c: 305: PWM_set(3, my_atoi(opland2));
  2479  00143A  0E00               	movlw	low rx_operation@opland2
  2480  00143C  0100               	movlb	0	; () banked
  2481  00143E  6F66               	movwf	my_atoi@str& (0+255),b
  2482  001440  0E03               	movlw	high rx_operation@opland2
  2483  001442  0100               	movlb	0	; () banked
  2484  001444  6F67               	movwf	(my_atoi@str+1)& (0+255),b
  2485  001446  ECAD  F016         	call	_my_atoi	;wreg free
  2486  00144A  C066  F06E         	movff	?_my_atoi,PWM_set@value
  2487  00144E  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  2488  001452  0E03               	movlw	3
  2489  001454  EC1F  F013         	call	_PWM_set
  2490  001458  0012               	return	
  2491  00145A                     __end_of_rx_operation:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           intcon	equ	0xFF2
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           indf1	equ	0xFE7
  2503                           postdec1	equ	0xFE5
  2504                           fsr1h	equ	0xFE2
  2505                           fsr1l	equ	0xFE1
  2506                           indf2	equ	0xFDF
  2507                           postinc2	equ	0xFDE
  2508                           fsr2h	equ	0xFDA
  2509                           fsr2l	equ	0xFD9
  2510                           status	equ	0xFD8
  2511                           
  2512 ;; *************** function _ringbuf_pop *****************
  2513 ;; Defined at:
  2514 ;;		line 64 in file "../My_header\My_ringbuf.h"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  2517 ;;		 -> rx_buf(8), tx_buf(8), 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  ret             1   14[BANK0 ] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      unsigned char 
  2522 ;; Registers used:
  2523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2531 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2532 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2533 ;;Total ram usage:        7 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    6
  2536 ;; This function calls:
  2537 ;;		_ringbuf_num
  2538 ;; This function is called by:
  2539 ;;		_rx_operation
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text2
  2544  002572                     __ptext2:
  2545                           	opt stack 0
  2546  002572                     _ringbuf_pop:
  2547                           	opt stack 23
  2548                           
  2549                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  2550                           
  2551                           ;incstack = 0
  2552  002572  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2553  002576  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2554  00257A  EC97  F010         	call	_ringbuf_num	;wreg free
  2555  00257E  0100               	movlb	0	; () banked
  2556  002580  5160               	movf	?_ringbuf_num& (0+255),w,b
  2557  002582  0100               	movlb	0	; () banked
  2558  002584  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2559  002586  B4D8               	btfsc	status,2,c
  2560  002588  D058               	goto	l4615
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  2564  00258A  0100               	movlb	0	; () banked
  2565  00258C  EE20 F006          	lfsr	2,6
  2566  002590  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  2567  002592  26D9               	addwf	fsr2l,f,c
  2568  002594  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2569  002596  22DA               	addwfc	fsr2h,f,c
  2570  002598  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  2571  00259C  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  2572  0025A0  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2573  0025A4  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2574  0025A8  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  2575  0025AC  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  2576  0025B0  0100               	movlb	0	; () banked
  2577  0025B2  516A               	movf	??_ringbuf_pop& (0+255),w,b
  2578  0025B4  0100               	movlb	0	; () banked
  2579  0025B6  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2580  0025B8  6ED9               	movwf	fsr2l,c
  2581  0025BA  0100               	movlb	0	; () banked
  2582  0025BC  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2583  0025BE  0100               	movlb	0	; () banked
  2584  0025C0  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2585  0025C2  6EDA               	movwf	fsr2h,c
  2586  0025C4  50DF               	movf	indf2,w,c
  2587  0025C6  0100               	movlb	0	; () banked
  2588  0025C8  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  2592  0025CA  0100               	movlb	0	; () banked
  2593  0025CC  EE20 F002          	lfsr	2,2
  2594  0025D0  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  2595  0025D2  26D9               	addwf	fsr2l,f,c
  2596  0025D4  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2597  0025D6  22DA               	addwfc	fsr2h,f,c
  2598  0025D8  0100               	movlb	0	; () banked
  2599  0025DA  EE10 F006          	lfsr	1,6
  2600  0025DE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  2601  0025E0  26E1               	addwf	fsr1l,f,c
  2602  0025E2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2603  0025E4  22E2               	addwfc	fsr1h,f,c
  2604  0025E6  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  2605  0025EA  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  2606  0025EE  0E01               	movlw	1
  2607  0025F0  0100               	movlb	0	; () banked
  2608  0025F2  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2609  0025F4  0E00               	movlw	0
  2610  0025F6  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2611  0025F8  50DE               	movf	postinc2,w,c
  2612  0025FA  0100               	movlb	0	; () banked
  2613  0025FC  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2614  0025FE  50DE               	movf	postinc2,w,c
  2615  002600  0100               	movlb	0	; () banked
  2616  002602  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2617  002604  B0D8               	btfsc	status,0,c
  2618  002606  D00B               	goto	l4607
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  2622  002608  0100               	movlb	0	; () banked
  2623  00260A  EE20 F006          	lfsr	2,6
  2624  00260E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  2625  002610  26D9               	addwf	fsr2l,f,c
  2626  002612  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2627  002614  22DA               	addwfc	fsr2h,f,c
  2628  002616  2ADE               	incf	postinc2,f,c
  2629  002618  0E00               	movlw	0
  2630  00261A  22DD               	addwfc	postdec2,f,c
  2631                           
  2632                           ;My_header\My_ringbuf.h: 69: } else {
  2633  00261C  D00B               	goto	l4609
  2634  00261E                     l4607:
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  2638  00261E  0100               	movlb	0	; () banked
  2639  002620  EE20 F006          	lfsr	2,6
  2640  002624  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  2641  002626  26D9               	addwf	fsr2l,f,c
  2642  002628  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2643  00262A  22DA               	addwfc	fsr2h,f,c
  2644  00262C  0E00               	movlw	0
  2645  00262E  6EDE               	movwf	postinc2,c
  2646  002630  0E00               	movlw	0
  2647  002632  6EDD               	movwf	postdec2,c
  2648  002634                     l4609:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;My_header\My_ringbuf.h: 71: }
  2652                           ;My_header\My_ringbuf.h: 72: return ret;
  2653  002634  0100               	movlb	0	; () banked
  2654  002636  516E               	movf	ringbuf_pop@ret& (0+255),w,b
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;My_header\My_ringbuf.h: 73: } else {
  2658                           
  2659                           ; BSR set to: 0
  2660  002638  0012               	return	
  2661  00263A                     l4615:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;My_header\My_ringbuf.h: 74: return 0;
  2665  00263A  0E00               	movlw	0
  2666                           
  2667                           ; BSR set to: 0
  2668  00263C  0012               	return	
  2669  00263E                     __end_of_ringbuf_pop:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           tblptrh	equ	0xFF7
  2673                           tblptrl	equ	0xFF6
  2674                           tablat	equ	0xFF5
  2675                           prodh	equ	0xFF4
  2676                           prodl	equ	0xFF3
  2677                           intcon	equ	0xFF2
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           indf1	equ	0xFE7
  2681                           postinc1	equ	0xFE6
  2682                           postdec1	equ	0xFE5
  2683                           fsr1h	equ	0xFE2
  2684                           fsr1l	equ	0xFE1
  2685                           indf2	equ	0xFDF
  2686                           postinc2	equ	0xFDE
  2687                           postdec2	equ	0xFDD
  2688                           fsr2h	equ	0xFDA
  2689                           fsr2l	equ	0xFD9
  2690                           status	equ	0xFD8
  2691                           
  2692 ;; *************** function _my_strcmp *****************
  2693 ;; Defined at:
  2694 ;;		line 53 in file "../My_header\My_stdlib.h"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  str1            2    0[BANK0 ] PTR const unsigned char 
  2697 ;;		 -> rx_operation@opland1(250), rx_operation@opcode(250), 
  2698 ;;  str2            2    2[BANK0 ] PTR const unsigned char 
  2699 ;;		 -> STR_25(2), STR_24(2), STR_23(2), STR_22(2), 
  2700 ;;		 -> STR_21(4), STR_20(5), STR_19(4), STR_18(2), 
  2701 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  2702 ;;		 -> STR_13(2), STR_12(3), 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      char 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2716 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;Total ram usage:        5 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    5
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_rx_operation
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text3
  2729  002C14                     __ptext3:
  2730                           	opt stack 0
  2731  002C14                     _my_strcmp:
  2732                           	opt stack 24
  2733                           
  2734                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;incstack = 0
  2738  002C14  D02C               	goto	l4675
  2739  002C16                     l4667:
  2740                           
  2741                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  2742  002C16  C060  FFD9         	movff	my_strcmp@str1,fsr2l
  2743  002C1A  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
  2744  002C1E  50DF               	movf	indf2,w,c
  2745  002C20  0100               	movlb	0	; () banked
  2746  002C22  6F64               	movwf	??_my_strcmp& (0+255),b
  2747  002C24  C062  FFF6         	movff	my_strcmp@str2,tblptrl
  2748  002C28  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
  2749  002C2C                     	if	0	;tblptru may be non-zero
  2750  002C2C                     	endif
  2751  002C2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2752  002C2C  0E00               	movlw	low (__mediumconst shr (0+16))
  2753  002C2E  6EF8               	movwf	tblptru,c
  2754  002C30                     	endif
  2755  002C30  0008               	tblrd		*
  2756  002C32  50F5               	movf	tablat,w,c
  2757  002C34  0100               	movlb	0	; () banked
  2758  002C36  1964               	xorwf	??_my_strcmp& (0+255),w,b
  2759  002C38  B4D8               	btfsc	status,2,c
  2760  002C3A  D013               	goto	l4673
  2761                           
  2762                           ; BSR set to: 0
  2763  002C3C  C060  FFD9         	movff	my_strcmp@str1,fsr2l
  2764  002C40  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
  2765  002C44  50DF               	movf	indf2,w,c
  2766  002C46  0100               	movlb	0	; () banked
  2767  002C48  6F64               	movwf	??_my_strcmp& (0+255),b
  2768  002C4A  C062  FFF6         	movff	my_strcmp@str2,tblptrl
  2769  002C4E  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
  2770  002C52                     	if	0	;tblptru may be non-zero
  2771  002C52                     	endif
  2772  002C52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2773  002C52  0E00               	movlw	low (__mediumconst shr (0+16))
  2774  002C54  6EF8               	movwf	tblptru,c
  2775  002C56                     	endif
  2776  002C56  0008               	tblrd		*
  2777  002C58  50F5               	movf	tablat,w,c
  2778  002C5A  0800               	sublw	0
  2779  002C5C  0100               	movlb	0	; () banked
  2780  002C5E  2564               	addwf	??_my_strcmp& (0+255),w,b
  2781                           
  2782                           ; BSR set to: 0
  2783  002C60  0012               	return	
  2784  002C62                     l4673:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;My_header\My_stdlib.h: 56: str1++;
  2788  002C62  0100               	movlb	0	; () banked
  2789  002C64  4B60               	infsnz	my_strcmp@str1& (0+255),f,b
  2790  002C66  2B61               	incf	(my_strcmp@str1+1)& (0+255),f,b
  2791                           
  2792                           ;My_header\My_stdlib.h: 57: str2++;
  2793  002C68  0100               	movlb	0	; () banked
  2794  002C6A  4B62               	infsnz	my_strcmp@str2& (0+255),f,b
  2795  002C6C  2B63               	incf	(my_strcmp@str2+1)& (0+255),f,b
  2796  002C6E                     l4675:
  2797  002C6E  C060  FFD9         	movff	my_strcmp@str1,fsr2l
  2798  002C72  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
  2799  002C76  50DF               	movf	indf2,w,c
  2800  002C78  B4D8               	btfsc	status,2,c
  2801  002C7A  D00B               	goto	l4679
  2802  002C7C  C062  FFF6         	movff	my_strcmp@str2,tblptrl
  2803  002C80  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
  2804  002C84                     	if	0	;tblptru may be non-zero
  2805  002C84                     	endif
  2806  002C84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2807  002C84  0E00               	movlw	low (__mediumconst shr (0+16))
  2808  002C86  6EF8               	movwf	tblptru,c
  2809  002C88                     	endif
  2810  002C88  0008               	tblrd		*
  2811  002C8A  50F5               	movf	tablat,w,c
  2812  002C8C  0900               	iorlw	0
  2813  002C8E  A4D8               	btfss	status,2,c
  2814  002C90  D7C2               	goto	l4667
  2815  002C92                     l4679:
  2816                           
  2817                           ;My_header\My_stdlib.h: 58: }
  2818                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  2819  002C92  C060  FFD9         	movff	my_strcmp@str1,fsr2l
  2820  002C96  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
  2821  002C9A  50DF               	movf	indf2,w,c
  2822  002C9C  0100               	movlb	0	; () banked
  2823  002C9E  6F64               	movwf	??_my_strcmp& (0+255),b
  2824  002CA0  C062  FFF6         	movff	my_strcmp@str2,tblptrl
  2825  002CA4  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
  2826  002CA8                     	if	0	;tblptru may be non-zero
  2827  002CA8                     	endif
  2828  002CA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2829  002CA8  0E00               	movlw	low (__mediumconst shr (0+16))
  2830  002CAA  6EF8               	movwf	tblptru,c
  2831  002CAC                     	endif
  2832  002CAC  0008               	tblrd		*
  2833  002CAE  50F5               	movf	tablat,w,c
  2834  002CB0  0800               	sublw	0
  2835  002CB2  0100               	movlb	0	; () banked
  2836  002CB4  2564               	addwf	??_my_strcmp& (0+255),w,b
  2837  002CB6  0012               	return	
  2838  002CB8                     __end_of_my_strcmp:
  2839                           	opt stack 0
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           prodh	equ	0xFF4
  2845                           prodl	equ	0xFF3
  2846                           intcon	equ	0xFF2
  2847                           postinc0	equ	0xFEE
  2848                           wreg	equ	0xFE8
  2849                           indf1	equ	0xFE7
  2850                           postinc1	equ	0xFE6
  2851                           postdec1	equ	0xFE5
  2852                           fsr1h	equ	0xFE2
  2853                           fsr1l	equ	0xFE1
  2854                           indf2	equ	0xFDF
  2855                           postinc2	equ	0xFDE
  2856                           postdec2	equ	0xFDD
  2857                           fsr2h	equ	0xFDA
  2858                           fsr2l	equ	0xFD9
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function _my_atoi *****************
  2862 ;; Defined at:
  2863 ;;		line 41 in file "../My_header\My_stdlib.h"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  str             2    6[BANK0 ] PTR const unsigned char 
  2866 ;;		 -> rx_operation@opland2(250), 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  ret             2   12[BANK0 ] unsigned int 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  2    6[BANK0 ] unsigned int 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;Total ram usage:        8 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    6
  2885 ;; This function calls:
  2886 ;;		___wmul
  2887 ;; This function is called by:
  2888 ;;		_rx_operation
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text4
  2893  002D5A                     __ptext4:
  2894                           	opt stack 0
  2895  002D5A                     _my_atoi:
  2896                           	opt stack 23
  2897                           
  2898                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;incstack = 0
  2902  002D5A  0E00               	movlw	0
  2903  002D5C  0100               	movlb	0	; () banked
  2904  002D5E  6F6D               	movwf	(my_atoi@ret+1)& (0+255),b
  2905  002D60  0E00               	movlw	0
  2906  002D62  6F6C               	movwf	my_atoi@ret& (0+255),b
  2907                           
  2908                           ;My_header\My_stdlib.h: 43: while (*str) {
  2909  002D64  D03E               	goto	l4663
  2910  002D66                     l4653:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  2914  002D66  C066  FFD9         	movff	my_atoi@str,fsr2l
  2915  002D6A  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  2916  002D6E  0E2F               	movlw	47
  2917  002D70  64DF               	cpfsgt	indf2,c
  2918  002D72  D034               	goto	l4661
  2919                           
  2920                           ; BSR set to: 0
  2921  002D74  C066  FFD9         	movff	my_atoi@str,fsr2l
  2922  002D78  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  2923  002D7C  0E3A               	movlw	58
  2924  002D7E  60DF               	cpfslt	indf2,c
  2925  002D80  D02D               	goto	l4661
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;My_header\My_stdlib.h: 45: ret *= 10;
  2929  002D82  C06C  F060         	movff	my_atoi@ret,___wmul@multiplier
  2930  002D86  C06D  F061         	movff	my_atoi@ret+1,___wmul@multiplier+1
  2931  002D8A  0E00               	movlw	0
  2932  002D8C  0100               	movlb	0	; () banked
  2933  002D8E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2934  002D90  0E0A               	movlw	10
  2935  002D92  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2936  002D94  EC6B  F01A         	call	___wmul	;wreg free
  2937  002D98  C060  F06C         	movff	?___wmul,my_atoi@ret
  2938  002D9C  C061  F06D         	movff	?___wmul+1,my_atoi@ret+1
  2939                           
  2940                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  2941  002DA0  0ED0               	movlw	208
  2942  002DA2  0100               	movlb	0	; () banked
  2943  002DA4  6F68               	movwf	??_my_atoi& (0+255),b
  2944  002DA6  0EFF               	movlw	255
  2945  002DA8  0100               	movlb	0	; () banked
  2946  002DAA  6F69               	movwf	(??_my_atoi+1)& (0+255),b
  2947  002DAC  C066  FFD9         	movff	my_atoi@str,fsr2l
  2948  002DB0  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  2949  002DB4  50DF               	movf	indf2,w,c
  2950  002DB6  0100               	movlb	0	; () banked
  2951  002DB8  6F6A               	movwf	(??_my_atoi+2)& (0+255),b
  2952  002DBA  6B6B               	clrf	(??_my_atoi+3)& (0+255),b
  2953  002DBC  0100               	movlb	0	; () banked
  2954  002DBE  5168               	movf	??_my_atoi& (0+255),w,b
  2955  002DC0  0100               	movlb	0	; () banked
  2956  002DC2  276A               	addwf	(??_my_atoi+2)& (0+255),f,b
  2957  002DC4  0100               	movlb	0	; () banked
  2958  002DC6  5169               	movf	(??_my_atoi+1)& (0+255),w,b
  2959  002DC8  0100               	movlb	0	; () banked
  2960  002DCA  236B               	addwfc	(??_my_atoi+3)& (0+255),f,b
  2961  002DCC  0100               	movlb	0	; () banked
  2962  002DCE  516A               	movf	(??_my_atoi+2)& (0+255),w,b
  2963  002DD0  0100               	movlb	0	; () banked
  2964  002DD2  276C               	addwf	my_atoi@ret& (0+255),f,b
  2965  002DD4  0100               	movlb	0	; () banked
  2966  002DD6  516B               	movf	(??_my_atoi+3)& (0+255),w,b
  2967  002DD8  0100               	movlb	0	; () banked
  2968  002DDA  236D               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  2969  002DDC                     l4661:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;My_header\My_stdlib.h: 47: }
  2973                           ;My_header\My_stdlib.h: 48: str++;
  2974  002DDC  0100               	movlb	0	; () banked
  2975  002DDE  4B66               	infsnz	my_atoi@str& (0+255),f,b
  2976  002DE0  2B67               	incf	(my_atoi@str+1)& (0+255),f,b
  2977  002DE2                     l4663:
  2978                           
  2979                           ; BSR set to: 0
  2980  002DE2  C066  FFD9         	movff	my_atoi@str,fsr2l
  2981  002DE6  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  2982  002DEA  50DF               	movf	indf2,w,c
  2983  002DEC  A4D8               	btfss	status,2,c
  2984  002DEE  D7BB               	goto	l4653
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;My_header\My_stdlib.h: 49: }
  2988                           ;My_header\My_stdlib.h: 50: return ret;
  2989  002DF0  C06C  F066         	movff	my_atoi@ret,?_my_atoi
  2990  002DF4  C06D  F067         	movff	my_atoi@ret+1,?_my_atoi+1
  2991                           
  2992                           ; BSR set to: 0
  2993  002DF8  0012               	return		;funcret
  2994  002DFA                     __end_of_my_atoi:
  2995                           	opt stack 0
  2996                           tblptru	equ	0xFF8
  2997                           tblptrh	equ	0xFF7
  2998                           tblptrl	equ	0xFF6
  2999                           tablat	equ	0xFF5
  3000                           prodh	equ	0xFF4
  3001                           prodl	equ	0xFF3
  3002                           intcon	equ	0xFF2
  3003                           postinc0	equ	0xFEE
  3004                           wreg	equ	0xFE8
  3005                           indf1	equ	0xFE7
  3006                           postinc1	equ	0xFE6
  3007                           postdec1	equ	0xFE5
  3008                           fsr1h	equ	0xFE2
  3009                           fsr1l	equ	0xFE1
  3010                           indf2	equ	0xFDF
  3011                           postinc2	equ	0xFDE
  3012                           postdec2	equ	0xFDD
  3013                           fsr2h	equ	0xFDA
  3014                           fsr2l	equ	0xFD9
  3015                           status	equ	0xFD8
  3016                           
  3017 ;; *************** function _RTCC_from_caltime *****************
  3018 ;; Defined at:
  3019 ;;		line 236 in file "../My_header\My_RTCC.h"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  ct              2   61[BANK0 ] PTR struct .
  3022 ;;		 -> caltime_now(7), 
  3023 ;;  ep              2   63[BANK0 ] PTR unsigned long 
  3024 ;;		 -> epoch_now(4), 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3036 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3039 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3040 ;;Total ram usage:        4 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    8
  3043 ;; This function calls:
  3044 ;;		_caltime_to_RTCC
  3045 ;;		_caltime_to_epoch
  3046 ;;		_epoch_to_caltime
  3047 ;; This function is called by:
  3048 ;;		_rx_operation
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text5
  3053  0034A0                     __ptext5:
  3054                           	opt stack 0
  3055  0034A0                     _RTCC_from_caltime:
  3056                           	opt stack 21
  3057                           
  3058                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;incstack = 0
  3062  0034A0  C09D  F078         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  3063  0034A4  C09E  F079         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  3064  0034A8  C09F  F07A         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  3065  0034AC  C0A0  F07B         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  3066  0034B0  ECB6  F00B         	call	_caltime_to_epoch	;wreg free
  3067                           
  3068                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  3069  0034B4  C09D  F08D         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  3070  0034B8  C09E  F08E         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  3071  0034BC  C09F  F08F         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  3072  0034C0  C0A0  F090         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  3073  0034C4  EC3B  F00E         	call	_epoch_to_caltime	;wreg free
  3074                           
  3075                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  3076  0034C8  C09D  F069         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  3077  0034CC  C09E  F06A         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  3078  0034D0  EC51  F012         	call	_caltime_to_RTCC	;wreg free
  3079  0034D4  0012               	return		;funcret
  3080  0034D6                     __end_of_RTCC_from_caltime:
  3081                           	opt stack 0
  3082                           tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           prodh	equ	0xFF4
  3087                           prodl	equ	0xFF3
  3088                           intcon	equ	0xFF2
  3089                           postinc0	equ	0xFEE
  3090                           wreg	equ	0xFE8
  3091                           indf1	equ	0xFE7
  3092                           postinc1	equ	0xFE6
  3093                           postdec1	equ	0xFE5
  3094                           fsr1h	equ	0xFE2
  3095                           fsr1l	equ	0xFE1
  3096                           indf2	equ	0xFDF
  3097                           postinc2	equ	0xFDE
  3098                           postdec2	equ	0xFDD
  3099                           fsr2h	equ	0xFDA
  3100                           fsr2l	equ	0xFD9
  3101                           status	equ	0xFD8
  3102                           
  3103 ;; *************** function _PWM_set *****************
  3104 ;; Defined at:
  3105 ;;		line 167 in file "PIC18F27J53-killifish_light01.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  color           1    wreg     unsigned char 
  3108 ;;  value           2   14[BANK0 ] unsigned int 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  color           1   16[BANK0 ] unsigned char 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;		None               void
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;Total ram usage:        3 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    6
  3127 ;; This function calls:
  3128 ;;		___lwdiv
  3129 ;;		___wmul
  3130 ;; This function is called by:
  3131 ;;		_rx_operation
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text6
  3137  00263E                     __ptext6:
  3138                           	opt stack 0
  3139  00263E                     _PWM_set:
  3140                           	opt stack 23
  3141                           
  3142                           ;incstack = 0
  3143                           ;PWM_set@color stored from wreg
  3144  00263E  0100               	movlb	0	; () banked
  3145  002640  6F70               	movwf	PWM_set@color& (0+255),b
  3146                           
  3147                           ;PIC18F27J53-killifish_light01.c: 168: value = value * value / 255;
  3148  002642  C06E  F060         	movff	PWM_set@value,___wmul@multiplier
  3149  002646  C06F  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  3150  00264A  C06E  F062         	movff	PWM_set@value,___wmul@multiplicand
  3151  00264E  C06F  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  3152  002652  EC6B  F01A         	call	___wmul	;wreg free
  3153  002656  C060  F066         	movff	?___wmul,___lwdiv@dividend
  3154  00265A  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  3155  00265E  0E00               	movlw	0
  3156  002660  0100               	movlb	0	; () banked
  3157  002662  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3158  002664  6968               	setf	___lwdiv@divisor& (0+255),b
  3159  002666  EC14  F018         	call	___lwdiv	;wreg free
  3160  00266A  C066  F06E         	movff	?___lwdiv,PWM_set@value
  3161  00266E  C067  F06F         	movff	?___lwdiv+1,PWM_set@value+1
  3162                           
  3163                           ;PIC18F27J53-killifish_light01.c: 169: switch (color) {
  3164  002672  D03C               	goto	l4755
  3165  002674                     l4737:
  3166                           
  3167                           ;PIC18F27J53-killifish_light01.c: 171: CCP1CONbits.DC1B = 0;
  3168  002674  0ECF               	movlw	-49
  3169  002676  16BA               	andwf	4026,f,c	;volatile
  3170                           
  3171                           ;PIC18F27J53-killifish_light01.c: 172: CCPR1L = value * 2 / 3;
  3172  002678  90D8               	bcf	status,0,c
  3173  00267A  0100               	movlb	0	; () banked
  3174  00267C  356E               	rlcf	PWM_set@value& (0+255),w,b
  3175  00267E  0100               	movlb	0	; () banked
  3176  002680  6F66               	movwf	___lwdiv@dividend& (0+255),b
  3177  002682  0100               	movlb	0	; () banked
  3178  002684  356F               	rlcf	(PWM_set@value+1)& (0+255),w,b
  3179  002686  0100               	movlb	0	; () banked
  3180  002688  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
  3181  00268A  0E00               	movlw	0
  3182  00268C  0100               	movlb	0	; () banked
  3183  00268E  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3184  002690  0E03               	movlw	3
  3185  002692  6F68               	movwf	___lwdiv@divisor& (0+255),b
  3186  002694  EC14  F018         	call	___lwdiv	;wreg free
  3187  002698  0100               	movlb	0	; () banked
  3188  00269A  5166               	movf	?___lwdiv& (0+255),w,b
  3189  00269C  6EBB               	movwf	4027,c	;volatile
  3190                           
  3191                           ;PIC18F27J53-killifish_light01.c: 173: break;
  3192  00269E  0012               	return	
  3193  0026A0                     l4741:
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;PIC18F27J53-killifish_light01.c: 175: CCP2CONbits.DC2B = 0;
  3197  0026A0  0ECF               	movlw	-49
  3198  0026A2  16B4               	andwf	4020,f,c	;volatile
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;PIC18F27J53-killifish_light01.c: 176: CCPR2L = value;
  3202  0026A4  C06E  FFB5         	movff	PWM_set@value,4021	;volatile
  3203                           
  3204                           ;PIC18F27J53-killifish_light01.c: 177: break;
  3205  0026A8  0012               	return	
  3206  0026AA                     l4745:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;PIC18F27J53-killifish_light01.c: 179: CCP3CONbits.DC3B = 0;
  3210  0026AA  0ECF               	movlw	-49
  3211  0026AC  010F               	movlb	15	; () banked
  3212  0026AE  1715               	andwf	21,f,b	;volatile
  3213                           
  3214                           ; BSR set to: 15
  3215                           ;PIC18F27J53-killifish_light01.c: 180: CCPR3L = value * 3 / 4;
  3216  0026B0  C06E  F060         	movff	PWM_set@value,___wmul@multiplier
  3217  0026B4  C06F  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  3218  0026B8  0E00               	movlw	0
  3219  0026BA  0100               	movlb	0	; () banked
  3220  0026BC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3221  0026BE  0E03               	movlw	3
  3222  0026C0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3223  0026C2  EC6B  F01A         	call	___wmul	;wreg free
  3224  0026C6  0100               	movlb	0	; () banked
  3225  0026C8  90D8               	bcf	status,0,c
  3226  0026CA  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  3227  0026CC  3360               	rrcf	?___wmul& (0+255),f,b
  3228  0026CE  0100               	movlb	0	; () banked
  3229  0026D0  90D8               	bcf	status,0,c
  3230  0026D2  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  3231  0026D4  3360               	rrcf	?___wmul& (0+255),f,b
  3232  0026D6  0100               	movlb	0	; () banked
  3233  0026D8  5160               	movf	?___wmul& (0+255),w,b
  3234  0026DA  010F               	movlb	15	; () banked
  3235  0026DC  6F16               	movwf	22,b	;volatile
  3236                           
  3237                           ;PIC18F27J53-killifish_light01.c: 181: break;
  3238  0026DE  0012               	return	
  3239  0026E0                     l4749:
  3240                           
  3241                           ;PIC18F27J53-killifish_light01.c: 183: CCP4CONbits.DC4B = 0;
  3242  0026E0  0ECF               	movlw	-49
  3243  0026E2  010F               	movlb	15	; () banked
  3244  0026E4  1712               	andwf	18,f,b	;volatile
  3245                           
  3246                           ; BSR set to: 15
  3247                           ;PIC18F27J53-killifish_light01.c: 184: CCPR4L = value;
  3248  0026E6  C06E  FF13         	movff	PWM_set@value,3859	;volatile
  3249                           
  3250                           ; BSR set to: 15
  3251                           ;PIC18F27J53-killifish_light01.c: 186: }
  3252                           
  3253                           ;PIC18F27J53-killifish_light01.c: 185: break;
  3254  0026EA  0012               	return	
  3255  0026EC                     l4755:
  3256  0026EC  0100               	movlb	0	; () banked
  3257  0026EE  5170               	movf	PWM_set@color& (0+255),w,b
  3258                           
  3259                           ; Switch size 1, requested type "space"
  3260                           ; Number of cases is 4, Range of values is 0 to 3
  3261                           ; switch strategies available:
  3262                           ; Name         Instructions Cycles
  3263                           ; simple_byte           13     7 (average)
  3264                           ;	Chosen strategy is simple_byte
  3265  0026F0  0A00               	xorlw	0	; case 0
  3266  0026F2  B4D8               	btfsc	status,2,c
  3267  0026F4  D7BF               	goto	l4737
  3268  0026F6  0A01               	xorlw	1	; case 1
  3269  0026F8  B4D8               	btfsc	status,2,c
  3270  0026FA  D7D2               	goto	l4741
  3271  0026FC  0A03               	xorlw	3	; case 2
  3272  0026FE  B4D8               	btfsc	status,2,c
  3273  002700  D7D4               	goto	l4745
  3274  002702  0A01               	xorlw	1	; case 3
  3275  002704  A4D8               	btfss	status,2,c
  3276  002706  0012               	return	
  3277  002708  D7EB               	goto	l4749
  3278  00270A                     __end_of_PWM_set:
  3279                           	opt stack 0
  3280                           tblptru	equ	0xFF8
  3281                           tblptrh	equ	0xFF7
  3282                           tblptrl	equ	0xFF6
  3283                           tablat	equ	0xFF5
  3284                           prodh	equ	0xFF4
  3285                           prodl	equ	0xFF3
  3286                           intcon	equ	0xFF2
  3287                           postinc0	equ	0xFEE
  3288                           wreg	equ	0xFE8
  3289                           indf1	equ	0xFE7
  3290                           postinc1	equ	0xFE6
  3291                           postdec1	equ	0xFE5
  3292                           fsr1h	equ	0xFE2
  3293                           fsr1l	equ	0xFE1
  3294                           indf2	equ	0xFDF
  3295                           postinc2	equ	0xFDE
  3296                           postdec2	equ	0xFDD
  3297                           fsr2h	equ	0xFDA
  3298                           fsr2l	equ	0xFD9
  3299                           status	equ	0xFD8
  3300                           
  3301 ;; *************** function ___wmul *****************
  3302 ;; Defined at:
  3303 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3306 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;  product         2    4[BANK0 ] unsigned int 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  2    0[BANK0 ] unsigned int 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0, prodl, prodh
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3318 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3319 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3321 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3322 ;;Total ram usage:        6 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    5
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_my_atoi
  3329 ;;		_PWM_set
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text7
  3334  0034D6                     __ptext7:
  3335                           	opt stack 0
  3336  0034D6                     ___wmul:
  3337                           	opt stack 23
  3338                           
  3339                           ;incstack = 0
  3340  0034D6  0100               	movlb	0	; () banked
  3341  0034D8  5160               	movf	___wmul@multiplier& (0+255),w,b
  3342  0034DA  0100               	movlb	0	; () banked
  3343  0034DC  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3344  0034DE  CFF3 F064          	movff	prodl,___wmul@product
  3345  0034E2  CFF4 F065          	movff	prodh,___wmul@product+1
  3346  0034E6  0100               	movlb	0	; () banked
  3347  0034E8  5160               	movf	___wmul@multiplier& (0+255),w,b
  3348  0034EA  0100               	movlb	0	; () banked
  3349  0034EC  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3350  0034EE  50F3               	movf	prodl,w,c
  3351  0034F0  0100               	movlb	0	; () banked
  3352  0034F2  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3353  0034F4  0100               	movlb	0	; () banked
  3354  0034F6  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3355  0034F8  0100               	movlb	0	; () banked
  3356  0034FA  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3357  0034FC  50F3               	movf	prodl,w,c
  3358  0034FE  0100               	movlb	0	; () banked
  3359  003500  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3360                           
  3361                           ; BSR set to: 0
  3362  003502  C064  F060         	movff	___wmul@product,?___wmul
  3363  003506  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3364  00350A  0012               	return	
  3365  00350C                     __end_of___wmul:
  3366                           	opt stack 0
  3367                           tblptru	equ	0xFF8
  3368                           tblptrh	equ	0xFF7
  3369                           tblptrl	equ	0xFF6
  3370                           tablat	equ	0xFF5
  3371                           prodh	equ	0xFF4
  3372                           prodl	equ	0xFF3
  3373                           intcon	equ	0xFF2
  3374                           postinc0	equ	0xFEE
  3375                           wreg	equ	0xFE8
  3376                           indf1	equ	0xFE7
  3377                           postinc1	equ	0xFE6
  3378                           postdec1	equ	0xFE5
  3379                           fsr1h	equ	0xFE2
  3380                           fsr1l	equ	0xFE1
  3381                           indf2	equ	0xFDF
  3382                           postinc2	equ	0xFDE
  3383                           postdec2	equ	0xFDD
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8
  3387                           
  3388 ;; *************** function _print_time *****************
  3389 ;; Defined at:
  3390 ;;		line 215 in file "PIC18F27J53-killifish_light01.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  row             1    wreg     unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  row             1   33[BANK0 ] unsigned char 
  3395 ;;  i               1   34[BANK0 ] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;		None               void
  3398 ;; Registers used:
  3399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3406 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3408 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3409 ;;Total ram usage:        2 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:   10
  3412 ;; This function calls:
  3413 ;;		_tx_send
  3414 ;;		_tx_send_time
  3415 ;;		_tx_sends
  3416 ;; This function is called by:
  3417 ;;		_main
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text8
  3422  002FAE                     __ptext8:
  3423                           	opt stack 0
  3424  002FAE                     _print_time:
  3425                           	opt stack 20
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;incstack = 0
  3429                           ;print_time@row stored from wreg
  3430  002FAE  0100               	movlb	0	; () banked
  3431  002FB0  6F81               	movwf	print_time@row& (0+255),b
  3432                           
  3433                           ;PIC18F27J53-killifish_light01.c: 216: uint8_t i;
  3434                           ;PIC18F27J53-killifish_light01.c: 217: GIE = 0;
  3435  002FB2  9EF2               	bcf	intcon,7,c	;volatile
  3436                           
  3437                           ;PIC18F27J53-killifish_light01.c: 218: for (i = 0; i < row; i++) tx_sends(cursor_down);
  3438  002FB4  0E00               	movlw	0
  3439  002FB6  0100               	movlb	0	; () banked
  3440  002FB8  6F82               	movwf	print_time@i& (0+255),b
  3441  002FBA  D00A               	goto	l4915
  3442  002FBC                     l4911:
  3443                           
  3444                           ; BSR set to: 0
  3445  002FBC  0ED4               	movlw	low _cursor_down
  3446  002FBE  0100               	movlb	0	; () banked
  3447  002FC0  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3448  002FC2  0E00               	movlw	high _cursor_down
  3449  002FC4  0100               	movlb	0	; () banked
  3450  002FC6  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3451  002FC8  ECC6  F018         	call	_tx_sends	;wreg free
  3452  002FCC  0100               	movlb	0	; () banked
  3453  002FCE  2B82               	incf	print_time@i& (0+255),f,b
  3454  002FD0                     l4915:
  3455                           
  3456                           ; BSR set to: 0
  3457  002FD0  0100               	movlb	0	; () banked
  3458  002FD2  5181               	movf	print_time@row& (0+255),w,b
  3459  002FD4  0100               	movlb	0	; () banked
  3460  002FD6  5D82               	subwf	print_time@i& (0+255),w,b
  3461  002FD8  A0D8               	btfss	status,0,c
  3462  002FDA  D7F0               	goto	l4911
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;PIC18F27J53-killifish_light01.c: 219: tx_send_time();
  3466                           
  3467                           ; BSR set to: 0
  3468  002FDC  EC11  F010         	call	_tx_send_time	;wreg free
  3469                           
  3470                           ;PIC18F27J53-killifish_light01.c: 220: for (i = 0; i < 26; i++) tx_send('\b');
  3471  002FE0  0E00               	movlw	0
  3472  002FE2  0100               	movlb	0	; () banked
  3473  002FE4  6F82               	movwf	print_time@i& (0+255),b
  3474  002FE6                     l4921:
  3475                           
  3476                           ; BSR set to: 0
  3477  002FE6  0E19               	movlw	25
  3478  002FE8  0100               	movlb	0	; () banked
  3479  002FEA  6582               	cpfsgt	print_time@i& (0+255),b
  3480  002FEC  D001               	goto	l4925
  3481  002FEE  D006               	goto	l4931
  3482  002FF0                     l4925:
  3483                           
  3484                           ; BSR set to: 0
  3485  002FF0  0E08               	movlw	8
  3486  002FF2  EC41  F01B         	call	_tx_send
  3487  002FF6  0100               	movlb	0	; () banked
  3488  002FF8  2B82               	incf	print_time@i& (0+255),f,b
  3489  002FFA  D7F5               	goto	l4921
  3490  002FFC                     l4931:
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;PIC18F27J53-killifish_light01.c: 221: for (i = 0; i < row; i++) tx_sends(cursor_up);
  3494  002FFC  0E00               	movlw	0
  3495  002FFE  0100               	movlb	0	; () banked
  3496  003000  6F82               	movwf	print_time@i& (0+255),b
  3497  003002  D00A               	goto	l4937
  3498  003004                     l4933:
  3499                           
  3500                           ; BSR set to: 0
  3501  003004  0EDC               	movlw	low _cursor_up
  3502  003006  0100               	movlb	0	; () banked
  3503  003008  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3504  00300A  0E00               	movlw	high _cursor_up
  3505  00300C  0100               	movlb	0	; () banked
  3506  00300E  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3507  003010  ECC6  F018         	call	_tx_sends	;wreg free
  3508  003014  0100               	movlb	0	; () banked
  3509  003016  2B82               	incf	print_time@i& (0+255),f,b
  3510  003018                     l4937:
  3511                           
  3512                           ; BSR set to: 0
  3513  003018  0100               	movlb	0	; () banked
  3514  00301A  5181               	movf	print_time@row& (0+255),w,b
  3515  00301C  0100               	movlb	0	; () banked
  3516  00301E  5D82               	subwf	print_time@i& (0+255),w,b
  3517  003020  A0D8               	btfss	status,0,c
  3518  003022  D7F0               	goto	l4933
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;PIC18F27J53-killifish_light01.c: 222: GIE = 1;
  3522  003024  8EF2               	bsf	intcon,7,c	;volatile
  3523                           
  3524                           ; BSR set to: 0
  3525  003026  0012               	return		;funcret
  3526  003028                     __end_of_print_time:
  3527                           	opt stack 0
  3528                           tblptru	equ	0xFF8
  3529                           tblptrh	equ	0xFF7
  3530                           tblptrl	equ	0xFF6
  3531                           tablat	equ	0xFF5
  3532                           prodh	equ	0xFF4
  3533                           prodl	equ	0xFF3
  3534                           intcon	equ	0xFF2
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           indf1	equ	0xFE7
  3538                           postinc1	equ	0xFE6
  3539                           postdec1	equ	0xFE5
  3540                           fsr1h	equ	0xFE2
  3541                           fsr1l	equ	0xFE1
  3542                           indf2	equ	0xFDF
  3543                           postinc2	equ	0xFDE
  3544                           postdec2	equ	0xFDD
  3545                           fsr2h	equ	0xFDA
  3546                           fsr2l	equ	0xFD9
  3547                           status	equ	0xFD8
  3548                           
  3549 ;; *************** function _tx_send_time *****************
  3550 ;; Defined at:
  3551 ;;		line 196 in file "PIC18F27J53-killifish_light01.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;		None               void
  3558 ;; Registers used:
  3559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3569 ;;Total ram usage:        0 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    9
  3572 ;; This function calls:
  3573 ;;		_tx_send
  3574 ;;		_tx_send_dec
  3575 ;;		_tx_sends
  3576 ;; This function is called by:
  3577 ;;		_print_time
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text9
  3582  002022                     __ptext9:
  3583                           	opt stack 0
  3584  002022                     _tx_send_time:
  3585                           	opt stack 20
  3586                           
  3587                           ;PIC18F27J53-killifish_light01.c: 197: tx_send_dec(20, edit_flag.flag.YY);
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;incstack = 0
  3591  002022  0E00               	movlw	0
  3592  002024  BA29               	btfsc	_edit_flag,5,c
  3593  002026  0E01               	movlw	1
  3594  002028  0100               	movlb	0	; () banked
  3595  00202A  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3596  00202C  0E14               	movlw	20
  3597  00202E  EC8A  F019         	call	_tx_send_dec
  3598                           
  3599                           ;PIC18F27J53-killifish_light01.c: 198: tx_send_dec(caltime_now.YY, edit_flag.flag.YY);
  3600  002032  0E00               	movlw	0
  3601  002034  BA29               	btfsc	_edit_flag,5,c
  3602  002036  0E01               	movlw	1
  3603  002038  0100               	movlb	0	; () banked
  3604  00203A  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3605  00203C  0100               	movlb	0	; () banked
  3606  00203E  51C8               	movf	(_caltime_now+6)& (0+255),w,b
  3607  002040  EC8A  F019         	call	_tx_send_dec
  3608                           
  3609                           ;PIC18F27J53-killifish_light01.c: 199: tx_sends("/");
  3610  002044  0E45               	movlw	low STR_6
  3611  002046  0100               	movlb	0	; () banked
  3612  002048  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3613  00204A  0E0F               	movlw	high STR_6
  3614  00204C  0100               	movlb	0	; () banked
  3615  00204E  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3616  002050  ECC6  F018         	call	_tx_sends	;wreg free
  3617                           
  3618                           ;PIC18F27J53-killifish_light01.c: 200: tx_send_dec(caltime_now.MM, edit_flag.flag.MM);
  3619  002054  0E00               	movlw	0
  3620  002056  B829               	btfsc	_edit_flag,4,c
  3621  002058  0E01               	movlw	1
  3622  00205A  0100               	movlb	0	; () banked
  3623  00205C  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3624  00205E  0100               	movlb	0	; () banked
  3625  002060  51C7               	movf	(_caltime_now+5)& (0+255),w,b
  3626  002062  EC8A  F019         	call	_tx_send_dec
  3627                           
  3628                           ;PIC18F27J53-killifish_light01.c: 201: tx_sends("/");
  3629  002066  0E45               	movlw	low STR_6
  3630  002068  0100               	movlb	0	; () banked
  3631  00206A  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3632  00206C  0E0F               	movlw	high STR_6
  3633  00206E  0100               	movlb	0	; () banked
  3634  002070  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3635  002072  ECC6  F018         	call	_tx_sends	;wreg free
  3636                           
  3637                           ;PIC18F27J53-killifish_light01.c: 202: tx_send_dec(caltime_now.DD, edit_flag.flag.DD);
  3638  002076  0E00               	movlw	0
  3639  002078  B629               	btfsc	_edit_flag,3,c
  3640  00207A  0E01               	movlw	1
  3641  00207C  0100               	movlb	0	; () banked
  3642  00207E  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3643  002080  0100               	movlb	0	; () banked
  3644  002082  51C6               	movf	(_caltime_now+4)& (0+255),w,b
  3645  002084  EC8A  F019         	call	_tx_send_dec
  3646                           
  3647                           ;PIC18F27J53-killifish_light01.c: 203: tx_sends(" (");
  3648  002088  0E3D               	movlw	low STR_8
  3649  00208A  0100               	movlb	0	; () banked
  3650  00208C  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3651  00208E  0E0F               	movlw	high STR_8
  3652  002090  0100               	movlb	0	; () banked
  3653  002092  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3654  002094  ECC6  F018         	call	_tx_sends	;wreg free
  3655                           
  3656                           ;PIC18F27J53-killifish_light01.c: 204: tx_sends(weekday_3char[caltime_now.EE]);
  3657  002098  0100               	movlb	0	; () banked
  3658  00209A  51C5               	movf	(_caltime_now+3)& (0+255),w,b
  3659  00209C  0D04               	mullw	4
  3660  00209E  0E01               	movlw	low _weekday_3char
  3661  0020A0  24F3               	addwf	prodl,w,c
  3662  0020A2  0100               	movlb	0	; () banked
  3663  0020A4  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3664  0020A6  0E0F               	movlw	high _weekday_3char
  3665  0020A8  20F4               	addwfc	prodh,w,c
  3666  0020AA  0100               	movlb	0	; () banked
  3667  0020AC  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3668  0020AE  ECC6  F018         	call	_tx_sends	;wreg free
  3669                           
  3670                           ;PIC18F27J53-killifish_light01.c: 205: tx_sends(") ");
  3671  0020B2  0E3A               	movlw	low STR_9
  3672  0020B4  0100               	movlb	0	; () banked
  3673  0020B6  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3674  0020B8  0E0F               	movlw	high STR_9
  3675  0020BA  0100               	movlb	0	; () banked
  3676  0020BC  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3677  0020BE  ECC6  F018         	call	_tx_sends	;wreg free
  3678                           
  3679                           ;PIC18F27J53-killifish_light01.c: 206: tx_send_dec(caltime_now.hh, edit_flag.flag.hh);
  3680  0020C2  0E00               	movlw	0
  3681  0020C4  B429               	btfsc	_edit_flag,2,c
  3682  0020C6  0E01               	movlw	1
  3683  0020C8  0100               	movlb	0	; () banked
  3684  0020CA  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3685  0020CC  0100               	movlb	0	; () banked
  3686  0020CE  51C4               	movf	(_caltime_now+2)& (0+255),w,b
  3687  0020D0  EC8A  F019         	call	_tx_send_dec
  3688                           
  3689                           ;PIC18F27J53-killifish_light01.c: 207: if (colon)tx_send(':');
  3690  0020D4  5027               	movf	_colon,w,c
  3691  0020D6  B4D8               	btfsc	status,2,c
  3692  0020D8  D004               	goto	l4769
  3693  0020DA  0E3A               	movlw	58
  3694  0020DC  EC41  F01B         	call	_tx_send
  3695  0020E0  D003               	goto	l4771
  3696  0020E2                     l4769:
  3697                           
  3698                           ;PIC18F27J53-killifish_light01.c: 208: else tx_send(' ');
  3699  0020E2  0E20               	movlw	32
  3700  0020E4  EC41  F01B         	call	_tx_send
  3701  0020E8                     l4771:
  3702                           
  3703                           ;PIC18F27J53-killifish_light01.c: 209: tx_send_dec(caltime_now.mm, edit_flag.flag.mm);
  3704  0020E8  0E00               	movlw	0
  3705  0020EA  B229               	btfsc	_edit_flag,1,c
  3706  0020EC  0E01               	movlw	1
  3707  0020EE  0100               	movlb	0	; () banked
  3708  0020F0  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3709  0020F2  0100               	movlb	0	; () banked
  3710  0020F4  51C3               	movf	(_caltime_now+1)& (0+255),w,b
  3711  0020F6  EC8A  F019         	call	_tx_send_dec
  3712                           
  3713                           ;PIC18F27J53-killifish_light01.c: 210: tx_sends("-");
  3714  0020FA  0E43               	movlw	low STR_10
  3715  0020FC  0100               	movlb	0	; () banked
  3716  0020FE  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3717  002100  0E0F               	movlw	high STR_10
  3718  002102  0100               	movlb	0	; () banked
  3719  002104  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3720  002106  ECC6  F018         	call	_tx_sends	;wreg free
  3721                           
  3722                           ;PIC18F27J53-killifish_light01.c: 211: tx_send_dec(caltime_now.ss, edit_flag.flag.ss);
  3723  00210A  0E00               	movlw	0
  3724  00210C  B029               	btfsc	_edit_flag,0,c
  3725  00210E  0E01               	movlw	1
  3726  002110  0100               	movlb	0	; () banked
  3727  002112  6F75               	movwf	tx_send_dec@edit& (0+255),b
  3728  002114  0100               	movlb	0	; () banked
  3729  002116  51C2               	movf	_caltime_now& (0+255),w,b
  3730  002118  EC8A  F019         	call	_tx_send_dec
  3731                           
  3732                           ;PIC18F27J53-killifish_light01.c: 212: tx_sends(" ");
  3733  00211C  0E38               	movlw	low (STR_5+1)
  3734  00211E  0100               	movlb	0	; () banked
  3735  002120  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3736  002122  0E0F               	movlw	high (STR_5+1)
  3737  002124  0100               	movlb	0	; () banked
  3738  002126  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3739  002128  ECC6  F018         	call	_tx_sends	;wreg free
  3740  00212C  0012               	return		;funcret
  3741  00212E                     __end_of_tx_send_time:
  3742                           	opt stack 0
  3743                           tblptru	equ	0xFF8
  3744                           tblptrh	equ	0xFF7
  3745                           tblptrl	equ	0xFF6
  3746                           tablat	equ	0xFF5
  3747                           prodh	equ	0xFF4
  3748                           prodl	equ	0xFF3
  3749                           intcon	equ	0xFF2
  3750                           postinc0	equ	0xFEE
  3751                           wreg	equ	0xFE8
  3752                           indf1	equ	0xFE7
  3753                           postinc1	equ	0xFE6
  3754                           postdec1	equ	0xFE5
  3755                           fsr1h	equ	0xFE2
  3756                           fsr1l	equ	0xFE1
  3757                           indf2	equ	0xFDF
  3758                           postinc2	equ	0xFDE
  3759                           postdec2	equ	0xFDD
  3760                           fsr2h	equ	0xFDA
  3761                           fsr2l	equ	0xFD9
  3762                           status	equ	0xFD8
  3763                           
  3764 ;; *************** function _tx_send_dec *****************
  3765 ;; Defined at:
  3766 ;;		line 189 in file "PIC18F27J53-killifish_light01.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  dec             1    wreg     unsigned char 
  3769 ;;  edit            1   21[BANK0 ] unsigned char 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  dec             1   32[BANK0 ] unsigned char 
  3772 ;;  str            10   22[BANK0 ] unsigned char [10]
  3773 ;; Return value:  Size  Location     Type
  3774 ;;		None               void
  3775 ;; Registers used:
  3776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3782 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3785 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3786 ;;Total ram usage:       12 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    8
  3789 ;; This function calls:
  3790 ;;		_my_utoa
  3791 ;;		_tx_sends
  3792 ;; This function is called by:
  3793 ;;		_tx_send_time
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text10
  3798  003314                     __ptext10:
  3799                           	opt stack 0
  3800  003314                     _tx_send_dec:
  3801                           	opt stack 20
  3802                           
  3803                           ;incstack = 0
  3804                           ;tx_send_dec@dec stored from wreg
  3805  003314  0100               	movlb	0	; () banked
  3806  003316  6F80               	movwf	tx_send_dec@dec& (0+255),b
  3807                           
  3808                           ;PIC18F27J53-killifish_light01.c: 190: uint8_t str[10];
  3809                           ;PIC18F27J53-killifish_light01.c: 191: my_utoa(&str, dec, 2);
  3810  003318  0E76               	movlw	low tx_send_dec@str
  3811  00331A  0100               	movlb	0	; () banked
  3812  00331C  6F6D               	movwf	my_utoa@str& (0+255),b
  3813  00331E  0E00               	movlw	high tx_send_dec@str
  3814  003320  0100               	movlb	0	; () banked
  3815  003322  6F6E               	movwf	(my_utoa@str+1)& (0+255),b
  3816  003324  C080  F06F         	movff	tx_send_dec@dec,my_utoa@value
  3817  003328  0100               	movlb	0	; () banked
  3818  00332A  6B70               	clrf	(my_utoa@value+1)& (0+255),b
  3819  00332C  0E02               	movlw	2
  3820  00332E  0100               	movlb	0	; () banked
  3821  003330  6F71               	movwf	my_utoa@digits& (0+255),b
  3822  003332  EC93  F017         	call	_my_utoa	;wreg free
  3823                           
  3824                           ;PIC18F27J53-killifish_light01.c: 192: if (edit && RTCCFGbits.HALFSEC)tx_sends("  ");
  3825  003336  0100               	movlb	0	; () banked
  3826  003338  5175               	movf	tx_send_dec@edit& (0+255),w,b
  3827  00333A  0100               	movlb	0	; () banked
  3828  00333C  B4D8               	btfsc	status,2,c
  3829  00333E  D00C               	goto	l4531
  3830                           
  3831                           ; BSR set to: 0
  3832  003340  010F               	movlb	15	; () banked
  3833  003342  A73F               	btfss	63,3,b	;volatile
  3834  003344  D009               	goto	l4531
  3835                           
  3836                           ; BSR set to: 15
  3837  003346  0E37               	movlw	low STR_5
  3838  003348  0100               	movlb	0	; () banked
  3839  00334A  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3840  00334C  0E0F               	movlw	high STR_5
  3841  00334E  0100               	movlb	0	; () banked
  3842  003350  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3843  003352  ECC6  F018         	call	_tx_sends	;wreg free
  3844  003356  0012               	return	
  3845  003358                     l4531:
  3846                           
  3847                           ;PIC18F27J53-killifish_light01.c: 193: else tx_sends(str);
  3848  003358  0E76               	movlw	low tx_send_dec@str
  3849  00335A  0100               	movlb	0	; () banked
  3850  00335C  6F6F               	movwf	tx_sends@asciicode& (0+255),b
  3851  00335E  0E00               	movlw	high tx_send_dec@str
  3852  003360  0100               	movlb	0	; () banked
  3853  003362  6F70               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3854  003364  ECC6  F018         	call	_tx_sends	;wreg free
  3855  003368  0012               	return	
  3856  00336A                     __end_of_tx_send_dec:
  3857                           	opt stack 0
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           intcon	equ	0xFF2
  3865                           postinc0	equ	0xFEE
  3866                           wreg	equ	0xFE8
  3867                           indf1	equ	0xFE7
  3868                           postinc1	equ	0xFE6
  3869                           postdec1	equ	0xFE5
  3870                           fsr1h	equ	0xFE2
  3871                           fsr1l	equ	0xFE1
  3872                           indf2	equ	0xFDF
  3873                           postinc2	equ	0xFDE
  3874                           postdec2	equ	0xFDD
  3875                           fsr2h	equ	0xFDA
  3876                           fsr2l	equ	0xFD9
  3877                           status	equ	0xFD8
  3878                           
  3879 ;; *************** function _tx_sends *****************
  3880 ;; Defined at:
  3881 ;;		line 227 in file "../My_header\My_header.h"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  asciicode       2   15[BANK0 ] PTR const unsigned char 
  3884 ;;		 -> STR_26(4), STR_11(2), STR_10(2), STR_9(3), 
  3885 ;;		 -> weekday_3char(28), STR_8(3), STR_7(2), STR_6(2), 
  3886 ;;		 -> STR_5(3), tx_send_dec@str(10), cursor_up(4), STR_4(3), 
  3887 ;;		 -> STR_3(6), STR_2(6), STR_1(3), cursor_right(4), 
  3888 ;;		 -> cursor_down(4), 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;		None               void
  3893 ;; Registers used:
  3894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3900 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3903 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3904 ;;Total ram usage:        2 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    7
  3907 ;; This function calls:
  3908 ;;		_ringbuf_put
  3909 ;; This function is called by:
  3910 ;;		_tx_send_dec
  3911 ;;		_tx_send_time
  3912 ;;		_print_time
  3913 ;;		_main
  3914 ;;		_print
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text11
  3919  00318C                     __ptext11:
  3920                           	opt stack 0
  3921  00318C                     _tx_sends:
  3922                           	opt stack 23
  3923                           
  3924                           ;My_header\My_header.h: 228: while (*asciicode) {
  3925                           
  3926                           ;incstack = 0
  3927  00318C  D01E               	goto	l4357
  3928  00318E                     l4353:
  3929                           
  3930                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  3931  00318E  0E34               	movlw	low _tx_buf
  3932  003190  0100               	movlb	0	; () banked
  3933  003192  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3934  003194  0E00               	movlw	high _tx_buf
  3935  003196  0100               	movlb	0	; () banked
  3936  003198  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3937  00319A  C06F  FFF6         	movff	tx_sends@asciicode,tblptrl
  3938  00319E  C070  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3939  0031A2  0E00               	movlw	low (__smallconst shr (0+16))
  3940  0031A4  6EF8               	movwf	tblptru,c
  3941  0031A6  0E0E               	movlw	(high __ramtop+-1)
  3942  0031A8  64F7               	cpfsgt	tblptrh,c
  3943  0031AA  D003               	bra	u4457
  3944  0031AC  0008               	tblrd		*
  3945  0031AE  50F5               	movf	tablat,w,c
  3946  0031B0  D005               	bra	u4450
  3947  0031B2                     u4457:
  3948  0031B2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3949  0031B6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3950  0031BA  50E7               	movf	indf1,w,c
  3951  0031BC                     u4450:
  3952  0031BC  0100               	movlb	0	; () banked
  3953  0031BE  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3954  0031C0  EC7D  F011         	call	_ringbuf_put	;wreg free
  3955  0031C4  0100               	movlb	0	; () banked
  3956  0031C6  4B6F               	infsnz	tx_sends@asciicode& (0+255),f,b
  3957  0031C8  2B70               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  3958  0031CA                     l4357:
  3959  0031CA  C06F  FFF6         	movff	tx_sends@asciicode,tblptrl
  3960  0031CE  C070  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3961  0031D2  0E00               	movlw	low (__smallconst shr (0+16))
  3962  0031D4  6EF8               	movwf	tblptru,c
  3963  0031D6  0E0E               	movlw	(high __ramtop+-1)
  3964  0031D8  64F7               	cpfsgt	tblptrh,c
  3965  0031DA  D003               	bra	u4467
  3966  0031DC  0008               	tblrd		*
  3967  0031DE  50F5               	movf	tablat,w,c
  3968  0031E0  D005               	bra	u4460
  3969  0031E2                     u4467:
  3970  0031E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3971  0031E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3972  0031EA  50E7               	movf	indf1,w,c
  3973  0031EC                     u4460:
  3974  0031EC  0900               	iorlw	0
  3975  0031EE  A4D8               	btfss	status,2,c
  3976  0031F0  D7CE               	goto	l4353
  3977                           
  3978                           ;My_header\My_header.h: 230: }
  3979                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  3980  0031F2  889D               	bsf	3997,4,c	;volatile
  3981  0031F4  0012               	return		;funcret
  3982  0031F6                     __end_of_tx_sends:
  3983                           	opt stack 0
  3984                           tblptru	equ	0xFF8
  3985                           tblptrh	equ	0xFF7
  3986                           tblptrl	equ	0xFF6
  3987                           tablat	equ	0xFF5
  3988                           prodh	equ	0xFF4
  3989                           prodl	equ	0xFF3
  3990                           intcon	equ	0xFF2
  3991                           postinc0	equ	0xFEE
  3992                           wreg	equ	0xFE8
  3993                           indf1	equ	0xFE7
  3994                           postinc1	equ	0xFE6
  3995                           postdec1	equ	0xFE5
  3996                           fsr1h	equ	0xFE2
  3997                           fsr1l	equ	0xFE1
  3998                           indf2	equ	0xFDF
  3999                           postinc2	equ	0xFDE
  4000                           postdec2	equ	0xFDD
  4001                           fsr2h	equ	0xFDA
  4002                           fsr2l	equ	0xFD9
  4003                           status	equ	0xFD8
  4004                           
  4005 ;; *************** function _my_utoa *****************
  4006 ;; Defined at:
  4007 ;;		line 11 in file "../My_header\My_stdlib.h"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  str             2   13[BANK0 ] PTR unsigned char 
  4010 ;;		 -> tx_send_dec@str(10), 
  4011 ;;  value           2   15[BANK0 ] unsigned int 
  4012 ;;  digits          1   17[BANK0 ] unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  v               2   19[BANK0 ] unsigned int 
  4015 ;;  d               1   18[BANK0 ] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;		None               void
  4018 ;; Registers used:
  4019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4025 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4029 ;;Total ram usage:        8 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    6
  4032 ;; This function calls:
  4033 ;;		___lwdiv
  4034 ;;		___lwmod
  4035 ;; This function is called by:
  4036 ;;		_tx_send_dec
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text12
  4041  002F26                     __ptext12:
  4042                           	opt stack 0
  4043  002F26                     _my_utoa:
  4044                           	opt stack 21
  4045                           
  4046                           ;My_header\My_stdlib.h: 12: uint16_t v;
  4047                           ;My_header\My_stdlib.h: 13: uint8_t d;
  4048                           ;My_header\My_stdlib.h: 14: while (digits--) {
  4049                           
  4050                           ;incstack = 0
  4051  002F26  D036               	goto	l4397
  4052  002F28                     l467:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;My_header\My_stdlib.h: 15: v = value;
  4056  002F28  C06F  F073         	movff	my_utoa@value,my_utoa@v
  4057  002F2C  C070  F074         	movff	my_utoa@value+1,my_utoa@v+1
  4058                           
  4059                           ;My_header\My_stdlib.h: 16: d = digits;
  4060  002F30  C071  F072         	movff	my_utoa@digits,my_utoa@d
  4061                           
  4062                           ;My_header\My_stdlib.h: 17: while (d--) {
  4063  002F34  D00F               	goto	l4389
  4064  002F36                     l4387:
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;My_header\My_stdlib.h: 18: v /= 10;
  4068  002F36  C073  F066         	movff	my_utoa@v,___lwdiv@dividend
  4069  002F3A  C074  F067         	movff	my_utoa@v+1,___lwdiv@dividend+1
  4070  002F3E  0E00               	movlw	0
  4071  002F40  0100               	movlb	0	; () banked
  4072  002F42  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4073  002F44  0E0A               	movlw	10
  4074  002F46  6F68               	movwf	___lwdiv@divisor& (0+255),b
  4075  002F48  EC14  F018         	call	___lwdiv	;wreg free
  4076  002F4C  C066  F073         	movff	?___lwdiv,my_utoa@v
  4077  002F50  C067  F074         	movff	?___lwdiv+1,my_utoa@v+1
  4078  002F54                     l4389:
  4079  002F54  0100               	movlb	0	; () banked
  4080  002F56  0772               	decf	my_utoa@d& (0+255),f,b
  4081  002F58  0100               	movlb	0	; () banked
  4082  002F5A  2972               	incf	my_utoa@d& (0+255),w,b
  4083  002F5C  A4D8               	btfss	status,2,c
  4084  002F5E  D7EB               	goto	l4387
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;My_header\My_stdlib.h: 19: }
  4088                           ;My_header\My_stdlib.h: 20: v %= 10;
  4089                           
  4090                           ; BSR set to: 0
  4091  002F60  C073  F060         	movff	my_utoa@v,___lwmod@dividend
  4092  002F64  C074  F061         	movff	my_utoa@v+1,___lwmod@dividend+1
  4093  002F68  0E00               	movlw	0
  4094  002F6A  0100               	movlb	0	; () banked
  4095  002F6C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  4096  002F6E  0E0A               	movlw	10
  4097  002F70  6F62               	movwf	___lwmod@divisor& (0+255),b
  4098  002F72  ECFB  F018         	call	___lwmod	;wreg free
  4099  002F76  C060  F073         	movff	?___lwmod,my_utoa@v
  4100  002F7A  C061  F074         	movff	?___lwmod+1,my_utoa@v+1
  4101                           
  4102                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
  4103  002F7E  0100               	movlb	0	; () banked
  4104  002F80  5173               	movf	my_utoa@v& (0+255),w,b
  4105  002F82  0F30               	addlw	48
  4106  002F84  C06D  FFD9         	movff	my_utoa@str,fsr2l
  4107  002F88  C06E  FFDA         	movff	my_utoa@str+1,fsr2h
  4108  002F8C  6EDF               	movwf	indf2,c
  4109                           
  4110                           ; BSR set to: 0
  4111  002F8E  0100               	movlb	0	; () banked
  4112  002F90  4B6D               	infsnz	my_utoa@str& (0+255),f,b
  4113  002F92  2B6E               	incf	(my_utoa@str+1)& (0+255),f,b
  4114  002F94                     l4397:
  4115  002F94  0100               	movlb	0	; () banked
  4116  002F96  0771               	decf	my_utoa@digits& (0+255),f,b
  4117  002F98  0100               	movlb	0	; () banked
  4118  002F9A  2971               	incf	my_utoa@digits& (0+255),w,b
  4119  002F9C  A4D8               	btfss	status,2,c
  4120  002F9E  D7C4               	goto	l467
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;My_header\My_stdlib.h: 22: }
  4124                           ;My_header\My_stdlib.h: 23: *str = '\0';
  4125                           
  4126                           ; BSR set to: 0
  4127  002FA0  C06D  FFD9         	movff	my_utoa@str,fsr2l
  4128  002FA4  C06E  FFDA         	movff	my_utoa@str+1,fsr2h
  4129  002FA8  0E00               	movlw	0
  4130  002FAA  6EDF               	movwf	indf2,c
  4131                           
  4132                           ; BSR set to: 0
  4133  002FAC  0012               	return		;funcret
  4134  002FAE                     __end_of_my_utoa:
  4135                           	opt stack 0
  4136                           tblptru	equ	0xFF8
  4137                           tblptrh	equ	0xFF7
  4138                           tblptrl	equ	0xFF6
  4139                           tablat	equ	0xFF5
  4140                           prodh	equ	0xFF4
  4141                           prodl	equ	0xFF3
  4142                           intcon	equ	0xFF2
  4143                           postinc0	equ	0xFEE
  4144                           wreg	equ	0xFE8
  4145                           indf1	equ	0xFE7
  4146                           postinc1	equ	0xFE6
  4147                           postdec1	equ	0xFE5
  4148                           fsr1h	equ	0xFE2
  4149                           fsr1l	equ	0xFE1
  4150                           indf2	equ	0xFDF
  4151                           postinc2	equ	0xFDE
  4152                           postdec2	equ	0xFDD
  4153                           fsr2h	equ	0xFDA
  4154                           fsr2l	equ	0xFD9
  4155                           status	equ	0xFD8
  4156                           
  4157 ;; *************** function ___lwmod *****************
  4158 ;; Defined at:
  4159 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  dividend        2    0[BANK0 ] unsigned int 
  4162 ;;  divisor         2    2[BANK0 ] unsigned int 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  counter         1    4[BANK0 ] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  2    0[BANK0 ] unsigned int 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4174 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4177 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4178 ;;Total ram usage:        5 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    5
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_my_utoa
  4185 ;;		_ringbuf_put_num
  4186 ;;		_tx_sendn
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text13
  4191  0031F6                     __ptext13:
  4192                           	opt stack 0
  4193  0031F6                     ___lwmod:
  4194                           	opt stack 21
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;incstack = 0
  4198  0031F6  0100               	movlb	0	; () banked
  4199  0031F8  5162               	movf	___lwmod@divisor& (0+255),w,b
  4200  0031FA  0100               	movlb	0	; () banked
  4201  0031FC  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4202  0031FE  B4D8               	btfsc	status,2,c
  4203  003200  D026               	goto	l1072
  4204                           
  4205                           ; BSR set to: 0
  4206  003202  0E01               	movlw	1
  4207  003204  0100               	movlb	0	; () banked
  4208  003206  6F64               	movwf	___lwmod@counter& (0+255),b
  4209  003208  D006               	goto	l4341
  4210  00320A                     l4339:
  4211                           
  4212                           ; BSR set to: 0
  4213  00320A  0100               	movlb	0	; () banked
  4214  00320C  90D8               	bcf	status,0,c
  4215  00320E  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  4216  003210  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4217  003212  0100               	movlb	0	; () banked
  4218  003214  2B64               	incf	___lwmod@counter& (0+255),f,b
  4219  003216                     l4341:
  4220                           
  4221                           ; BSR set to: 0
  4222  003216  0100               	movlb	0	; () banked
  4223  003218  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  4224  00321A  D7F7               	goto	l4339
  4225  00321C                     l4343:
  4226                           
  4227                           ; BSR set to: 0
  4228  00321C  0100               	movlb	0	; () banked
  4229  00321E  5162               	movf	___lwmod@divisor& (0+255),w,b
  4230  003220  0100               	movlb	0	; () banked
  4231  003222  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  4232  003224  0100               	movlb	0	; () banked
  4233  003226  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4234  003228  0100               	movlb	0	; () banked
  4235  00322A  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4236  00322C  A0D8               	btfss	status,0,c
  4237  00322E  D008               	goto	l4347
  4238                           
  4239                           ; BSR set to: 0
  4240  003230  0100               	movlb	0	; () banked
  4241  003232  5162               	movf	___lwmod@divisor& (0+255),w,b
  4242  003234  0100               	movlb	0	; () banked
  4243  003236  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  4244  003238  0100               	movlb	0	; () banked
  4245  00323A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4246  00323C  0100               	movlb	0	; () banked
  4247  00323E  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4248  003240                     l4347:
  4249                           
  4250                           ; BSR set to: 0
  4251  003240  0100               	movlb	0	; () banked
  4252  003242  90D8               	bcf	status,0,c
  4253  003244  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4254  003246  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  4255                           
  4256                           ; BSR set to: 0
  4257  003248  0100               	movlb	0	; () banked
  4258  00324A  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  4259  00324C  D7E7               	goto	l4343
  4260  00324E                     l1072:
  4261                           
  4262                           ; BSR set to: 0
  4263  00324E  C060  F060         	movff	___lwmod@dividend,?___lwmod
  4264  003252  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  4265                           
  4266                           ; BSR set to: 0
  4267  003256  0012               	return		;funcret
  4268  003258                     __end_of___lwmod:
  4269                           	opt stack 0
  4270                           tblptru	equ	0xFF8
  4271                           tblptrh	equ	0xFF7
  4272                           tblptrl	equ	0xFF6
  4273                           tablat	equ	0xFF5
  4274                           prodh	equ	0xFF4
  4275                           prodl	equ	0xFF3
  4276                           intcon	equ	0xFF2
  4277                           postinc0	equ	0xFEE
  4278                           wreg	equ	0xFE8
  4279                           indf1	equ	0xFE7
  4280                           postinc1	equ	0xFE6
  4281                           postdec1	equ	0xFE5
  4282                           fsr1h	equ	0xFE2
  4283                           fsr1l	equ	0xFE1
  4284                           indf2	equ	0xFDF
  4285                           postinc2	equ	0xFDE
  4286                           postdec2	equ	0xFDD
  4287                           fsr2h	equ	0xFDA
  4288                           fsr2l	equ	0xFD9
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function ___lwdiv *****************
  4292 ;; Defined at:
  4293 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  dividend        2    6[BANK0 ] unsigned int 
  4296 ;;  divisor         2    8[BANK0 ] unsigned int 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  quotient        2   11[BANK0 ] unsigned int 
  4299 ;;  counter         1   10[BANK0 ] unsigned char 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  2    6[BANK0 ] unsigned int 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4309 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4310 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4312 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4313 ;;Total ram usage:        7 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    5
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_my_utoa
  4320 ;;		_PWM_set
  4321 ;;		_ringbuf_put_num
  4322 ;;		_tx_sendn
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text14
  4327  003028                     __ptext14:
  4328                           	opt stack 0
  4329  003028                     ___lwdiv:
  4330                           	opt stack 23
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;incstack = 0
  4334  003028  0E00               	movlw	0
  4335  00302A  0100               	movlb	0	; () banked
  4336  00302C  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4337  00302E  0E00               	movlw	0
  4338  003030  6F6B               	movwf	___lwdiv@quotient& (0+255),b
  4339                           
  4340                           ; BSR set to: 0
  4341  003032  0100               	movlb	0	; () banked
  4342  003034  5168               	movf	___lwdiv@divisor& (0+255),w,b
  4343  003036  0100               	movlb	0	; () banked
  4344  003038  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4345  00303A  B4D8               	btfsc	status,2,c
  4346  00303C  D02C               	goto	l1062
  4347                           
  4348                           ; BSR set to: 0
  4349  00303E  0E01               	movlw	1
  4350  003040  0100               	movlb	0	; () banked
  4351  003042  6F6A               	movwf	___lwdiv@counter& (0+255),b
  4352  003044  D006               	goto	l4321
  4353  003046                     l4319:
  4354                           
  4355                           ; BSR set to: 0
  4356  003046  0100               	movlb	0	; () banked
  4357  003048  90D8               	bcf	status,0,c
  4358  00304A  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
  4359  00304C  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4360  00304E  0100               	movlb	0	; () banked
  4361  003050  2B6A               	incf	___lwdiv@counter& (0+255),f,b
  4362  003052                     l4321:
  4363                           
  4364                           ; BSR set to: 0
  4365  003052  0100               	movlb	0	; () banked
  4366  003054  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  4367  003056  D7F7               	goto	l4319
  4368  003058                     l4323:
  4369                           
  4370                           ; BSR set to: 0
  4371  003058  0100               	movlb	0	; () banked
  4372  00305A  90D8               	bcf	status,0,c
  4373  00305C  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
  4374  00305E  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  4375                           
  4376                           ; BSR set to: 0
  4377  003060  0100               	movlb	0	; () banked
  4378  003062  5168               	movf	___lwdiv@divisor& (0+255),w,b
  4379  003064  0100               	movlb	0	; () banked
  4380  003066  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
  4381  003068  0100               	movlb	0	; () banked
  4382  00306A  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4383  00306C  0100               	movlb	0	; () banked
  4384  00306E  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  4385  003070  A0D8               	btfss	status,0,c
  4386  003072  D00A               	goto	l4331
  4387                           
  4388                           ; BSR set to: 0
  4389  003074  0100               	movlb	0	; () banked
  4390  003076  5168               	movf	___lwdiv@divisor& (0+255),w,b
  4391  003078  0100               	movlb	0	; () banked
  4392  00307A  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
  4393  00307C  0100               	movlb	0	; () banked
  4394  00307E  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4395  003080  0100               	movlb	0	; () banked
  4396  003082  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  4397                           
  4398                           ; BSR set to: 0
  4399  003084  0100               	movlb	0	; () banked
  4400  003086  816B               	bsf	___lwdiv@quotient& (0+255),0,b
  4401  003088                     l4331:
  4402                           
  4403                           ; BSR set to: 0
  4404  003088  0100               	movlb	0	; () banked
  4405  00308A  90D8               	bcf	status,0,c
  4406  00308C  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  4407  00308E  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
  4408                           
  4409                           ; BSR set to: 0
  4410  003090  0100               	movlb	0	; () banked
  4411  003092  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
  4412  003094  D7E1               	goto	l4323
  4413  003096                     l1062:
  4414                           
  4415                           ; BSR set to: 0
  4416  003096  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
  4417  00309A  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4418                           
  4419                           ; BSR set to: 0
  4420  00309E  0012               	return		;funcret
  4421  0030A0                     __end_of___lwdiv:
  4422                           	opt stack 0
  4423                           tblptru	equ	0xFF8
  4424                           tblptrh	equ	0xFF7
  4425                           tblptrl	equ	0xFF6
  4426                           tablat	equ	0xFF5
  4427                           prodh	equ	0xFF4
  4428                           prodl	equ	0xFF3
  4429                           intcon	equ	0xFF2
  4430                           postinc0	equ	0xFEE
  4431                           wreg	equ	0xFE8
  4432                           indf1	equ	0xFE7
  4433                           postinc1	equ	0xFE6
  4434                           postdec1	equ	0xFE5
  4435                           fsr1h	equ	0xFE2
  4436                           fsr1l	equ	0xFE1
  4437                           indf2	equ	0xFDF
  4438                           postinc2	equ	0xFDE
  4439                           postdec2	equ	0xFDD
  4440                           fsr2h	equ	0xFDA
  4441                           fsr2l	equ	0xFD9
  4442                           status	equ	0xFD8
  4443                           
  4444 ;; *************** function _tx_send *****************
  4445 ;; Defined at:
  4446 ;;		line 222 in file "../My_header\My_header.h"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  asciicode       1    wreg     const unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  asciicode       1   15[BANK0 ] const unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;		None               void
  4453 ;; Registers used:
  4454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4461 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4463 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4464 ;;Total ram usage:        1 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    7
  4467 ;; This function calls:
  4468 ;;		_ringbuf_put
  4469 ;; This function is called by:
  4470 ;;		_tx_send_time
  4471 ;;		_print_time
  4472 ;;		_tx_sendn
  4473 ;;		_print
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text15
  4478  003682                     __ptext15:
  4479                           	opt stack 0
  4480  003682                     _tx_send:
  4481                           	opt stack 21
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;incstack = 0
  4485                           ;tx_send@asciicode stored from wreg
  4486  003682  0100               	movlb	0	; () banked
  4487  003684  6F6F               	movwf	tx_send@asciicode& (0+255),b
  4488                           
  4489                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  4490  003686  0E34               	movlw	low _tx_buf
  4491  003688  0100               	movlb	0	; () banked
  4492  00368A  6F68               	movwf	ringbuf_put@rb& (0+255),b
  4493  00368C  0E00               	movlw	high _tx_buf
  4494  00368E  0100               	movlb	0	; () banked
  4495  003690  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4496  003692  C06F  F06A         	movff	tx_send@asciicode,ringbuf_put@asciicode
  4497  003696  EC7D  F011         	call	_ringbuf_put	;wreg free
  4498                           
  4499                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  4500  00369A  889D               	bsf	3997,4,c	;volatile
  4501  00369C  0012               	return		;funcret
  4502  00369E                     __end_of_tx_send:
  4503                           	opt stack 0
  4504                           tblptru	equ	0xFF8
  4505                           tblptrh	equ	0xFF7
  4506                           tblptrl	equ	0xFF6
  4507                           tablat	equ	0xFF5
  4508                           prodh	equ	0xFF4
  4509                           prodl	equ	0xFF3
  4510                           intcon	equ	0xFF2
  4511                           postinc0	equ	0xFEE
  4512                           wreg	equ	0xFE8
  4513                           indf1	equ	0xFE7
  4514                           postinc1	equ	0xFE6
  4515                           postdec1	equ	0xFE5
  4516                           fsr1h	equ	0xFE2
  4517                           fsr1l	equ	0xFE1
  4518                           indf2	equ	0xFDF
  4519                           postinc2	equ	0xFDE
  4520                           postdec2	equ	0xFDD
  4521                           fsr2h	equ	0xFDA
  4522                           fsr2l	equ	0xFD9
  4523                           status	equ	0xFD8
  4524                           
  4525 ;; *************** function _ringbuf_put *****************
  4526 ;; Defined at:
  4527 ;;		line 39 in file "../My_header\My_ringbuf.h"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  4530 ;;		 -> rx_buf(8), tx_buf(8), 
  4531 ;;  asciicode       1   10[BANK0 ] unsigned char 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;		None               void
  4536 ;; Registers used:
  4537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4543 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4546 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4547 ;;Total ram usage:        7 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    6
  4550 ;; This function calls:
  4551 ;;		_ringbuf_num
  4552 ;; This function is called by:
  4553 ;;		_tx_send
  4554 ;;		_tx_sends
  4555 ;;		_ringbuf_put_num
  4556 ;;		_ringbuf_put_str
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text16
  4561  0022FA                     __ptext16:
  4562                           	opt stack 0
  4563  0022FA                     _ringbuf_put:
  4564                           	opt stack 23
  4565                           
  4566                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  4567                           
  4568                           ;incstack = 0
  4569  0022FA  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  4570  0022FE  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  4571  002302  EC97  F010         	call	_ringbuf_num	;wreg free
  4572  002306  0100               	movlb	0	; () banked
  4573  002308  EE20 F002          	lfsr	2,2
  4574  00230C  5168               	movf	ringbuf_put@rb& (0+255),w,b
  4575  00230E  26D9               	addwf	fsr2l,f,c
  4576  002310  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4577  002312  22DA               	addwfc	fsr2h,f,c
  4578  002314  50DE               	movf	postinc2,w,c
  4579  002316  0100               	movlb	0	; () banked
  4580  002318  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  4581  00231A  50DE               	movf	postinc2,w,c
  4582  00231C  0100               	movlb	0	; () banked
  4583  00231E  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  4584  002320  B0D8               	btfsc	status,0,c
  4585  002322  0012               	return	
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  4589  002324  0100               	movlb	0	; () banked
  4590  002326  EE20 F004          	lfsr	2,4
  4591  00232A  5168               	movf	ringbuf_put@rb& (0+255),w,b
  4592  00232C  26D9               	addwf	fsr2l,f,c
  4593  00232E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4594  002330  22DA               	addwfc	fsr2h,f,c
  4595  002332  CFDE F06B          	movff	postinc2,??_ringbuf_put
  4596  002336  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
  4597  00233A  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
  4598  00233E  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  4599  002342  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
  4600  002346  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
  4601  00234A  0100               	movlb	0	; () banked
  4602  00234C  516B               	movf	??_ringbuf_put& (0+255),w,b
  4603  00234E  0100               	movlb	0	; () banked
  4604  002350  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  4605  002352  6ED9               	movwf	fsr2l,c
  4606  002354  0100               	movlb	0	; () banked
  4607  002356  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
  4608  002358  0100               	movlb	0	; () banked
  4609  00235A  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  4610  00235C  6EDA               	movwf	fsr2h,c
  4611  00235E  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  4615  002362  0100               	movlb	0	; () banked
  4616  002364  EE20 F002          	lfsr	2,2
  4617  002368  5168               	movf	ringbuf_put@rb& (0+255),w,b
  4618  00236A  26D9               	addwf	fsr2l,f,c
  4619  00236C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4620  00236E  22DA               	addwfc	fsr2h,f,c
  4621  002370  0100               	movlb	0	; () banked
  4622  002372  EE10 F004          	lfsr	1,4
  4623  002376  5168               	movf	ringbuf_put@rb& (0+255),w,b
  4624  002378  26E1               	addwf	fsr1l,f,c
  4625  00237A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4626  00237C  22E2               	addwfc	fsr1h,f,c
  4627  00237E  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
  4628  002382  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
  4629  002386  0E01               	movlw	1
  4630  002388  0100               	movlb	0	; () banked
  4631  00238A  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  4632  00238C  0E00               	movlw	0
  4633  00238E  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  4634  002390  50DE               	movf	postinc2,w,c
  4635  002392  0100               	movlb	0	; () banked
  4636  002394  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  4637  002396  50DE               	movf	postinc2,w,c
  4638  002398  0100               	movlb	0	; () banked
  4639  00239A  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  4640  00239C  B0D8               	btfsc	status,0,c
  4641  00239E  D00B               	goto	l4199
  4642                           
  4643                           ; BSR set to: 0
  4644  0023A0  0100               	movlb	0	; () banked
  4645  0023A2  EE20 F004          	lfsr	2,4
  4646  0023A6  5168               	movf	ringbuf_put@rb& (0+255),w,b
  4647  0023A8  26D9               	addwf	fsr2l,f,c
  4648  0023AA  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4649  0023AC  22DA               	addwfc	fsr2h,f,c
  4650  0023AE  2ADE               	incf	postinc2,f,c
  4651  0023B0  0E00               	movlw	0
  4652  0023B2  22DD               	addwfc	postdec2,f,c
  4653  0023B4  0012               	return	
  4654  0023B6                     l4199:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  4658  0023B6  0100               	movlb	0	; () banked
  4659  0023B8  EE20 F004          	lfsr	2,4
  4660  0023BC  5168               	movf	ringbuf_put@rb& (0+255),w,b
  4661  0023BE  26D9               	addwf	fsr2l,f,c
  4662  0023C0  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  4663  0023C2  22DA               	addwfc	fsr2h,f,c
  4664  0023C4  0E00               	movlw	0
  4665  0023C6  6EDE               	movwf	postinc2,c
  4666  0023C8  0E00               	movlw	0
  4667  0023CA  6EDD               	movwf	postdec2,c
  4668                           
  4669                           ; BSR set to: 0
  4670  0023CC  0012               	return	
  4671  0023CE                     __end_of_ringbuf_put:
  4672                           	opt stack 0
  4673                           tblptru	equ	0xFF8
  4674                           tblptrh	equ	0xFF7
  4675                           tblptrl	equ	0xFF6
  4676                           tablat	equ	0xFF5
  4677                           prodh	equ	0xFF4
  4678                           prodl	equ	0xFF3
  4679                           intcon	equ	0xFF2
  4680                           postinc0	equ	0xFEE
  4681                           wreg	equ	0xFE8
  4682                           indf1	equ	0xFE7
  4683                           postinc1	equ	0xFE6
  4684                           postdec1	equ	0xFE5
  4685                           fsr1h	equ	0xFE2
  4686                           fsr1l	equ	0xFE1
  4687                           indf2	equ	0xFDF
  4688                           postinc2	equ	0xFDE
  4689                           postdec2	equ	0xFDD
  4690                           fsr2h	equ	0xFDA
  4691                           fsr2l	equ	0xFD9
  4692                           status	equ	0xFD8
  4693                           
  4694 ;; *************** function _ringbuf_num *****************
  4695 ;; Defined at:
  4696 ;;		line 31 in file "../My_header\My_ringbuf.h"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  4699 ;;		 -> rx_buf(8), tx_buf(8), 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  2    0[BANK0 ] unsigned int 
  4704 ;; Registers used:
  4705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4713 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4714 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4715 ;;Total ram usage:        8 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    5
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_ringbuf_put
  4722 ;;		_ringbuf_pop
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text17
  4727  00212E                     __ptext17:
  4728                           	opt stack 0
  4729  00212E                     _ringbuf_num:
  4730                           	opt stack 23
  4731                           
  4732                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;incstack = 0
  4736  00212E  0100               	movlb	0	; () banked
  4737  002130  EE20 F006          	lfsr	2,6
  4738  002134  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4739  002136  26D9               	addwf	fsr2l,f,c
  4740  002138  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4741  00213A  22DA               	addwfc	fsr2h,f,c
  4742  00213C  0100               	movlb	0	; () banked
  4743  00213E  EE10 F004          	lfsr	1,4
  4744  002142  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4745  002144  26E1               	addwf	fsr1l,f,c
  4746  002146  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4747  002148  22E2               	addwfc	fsr1h,f,c
  4748  00214A  50DE               	movf	postinc2,w,c
  4749  00214C  5CE6               	subwf	postinc1,w,c
  4750  00214E  50DE               	movf	postinc2,w,c
  4751  002150  58E6               	subwfb	postinc1,w,c
  4752  002152  A0D8               	btfss	status,0,c
  4753  002154  D028               	goto	l4187
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  4757  002156  0100               	movlb	0	; () banked
  4758  002158  EE20 F004          	lfsr	2,4
  4759  00215C  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4760  00215E  26D9               	addwf	fsr2l,f,c
  4761  002160  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4762  002162  22DA               	addwfc	fsr2h,f,c
  4763  002164  CFDE F062          	movff	postinc2,??_ringbuf_num
  4764  002168  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  4765  00216C  0100               	movlb	0	; () banked
  4766  00216E  EE20 F006          	lfsr	2,6
  4767  002172  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4768  002174  26D9               	addwf	fsr2l,f,c
  4769  002176  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4770  002178  22DA               	addwfc	fsr2h,f,c
  4771  00217A  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  4772  00217E  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  4773  002182  0100               	movlb	0	; () banked
  4774  002184  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
  4775  002186  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
  4776  002188  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  4777  00218A  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
  4778  00218C  0100               	movlb	0	; () banked
  4779  00218E  5162               	movf	??_ringbuf_num& (0+255),w,b
  4780  002190  0100               	movlb	0	; () banked
  4781  002192  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  4782  002194  0100               	movlb	0	; () banked
  4783  002196  6F60               	movwf	?_ringbuf_num& (0+255),b
  4784  002198  0100               	movlb	0	; () banked
  4785  00219A  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  4786  00219C  0100               	movlb	0	; () banked
  4787  00219E  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  4788  0021A0  0100               	movlb	0	; () banked
  4789  0021A2  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;My_header\My_ringbuf.h: 34: } else {
  4793                           
  4794                           ; BSR set to: 0
  4795  0021A4  0012               	return	
  4796  0021A6                     l4187:
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  4800  0021A6  0100               	movlb	0	; () banked
  4801  0021A8  EE20 F004          	lfsr	2,4
  4802  0021AC  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4803  0021AE  26D9               	addwf	fsr2l,f,c
  4804  0021B0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4805  0021B2  22DA               	addwfc	fsr2h,f,c
  4806  0021B4  CFDE F062          	movff	postinc2,??_ringbuf_num
  4807  0021B8  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  4808  0021BC  0100               	movlb	0	; () banked
  4809  0021BE  EE20 F002          	lfsr	2,2
  4810  0021C2  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4811  0021C4  26D9               	addwf	fsr2l,f,c
  4812  0021C6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4813  0021C8  22DA               	addwfc	fsr2h,f,c
  4814  0021CA  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  4815  0021CE  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  4816  0021D2  0100               	movlb	0	; () banked
  4817  0021D4  EE20 F006          	lfsr	2,6
  4818  0021D8  5160               	movf	ringbuf_num@rb& (0+255),w,b
  4819  0021DA  26D9               	addwf	fsr2l,f,c
  4820  0021DC  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  4821  0021DE  22DA               	addwfc	fsr2h,f,c
  4822  0021E0  CFDE F066          	movff	postinc2,??_ringbuf_num+4
  4823  0021E4  CFDD F067          	movff	postdec2,??_ringbuf_num+5
  4824  0021E8  0100               	movlb	0	; () banked
  4825  0021EA  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
  4826  0021EC  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
  4827  0021EE  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  4828  0021F0  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
  4829  0021F2  0100               	movlb	0	; () banked
  4830  0021F4  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
  4831  0021F6  0100               	movlb	0	; () banked
  4832  0021F8  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  4833  0021FA  0100               	movlb	0	; () banked
  4834  0021FC  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
  4835  0021FE  0100               	movlb	0	; () banked
  4836  002200  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  4837  002202  0100               	movlb	0	; () banked
  4838  002204  5162               	movf	??_ringbuf_num& (0+255),w,b
  4839  002206  0100               	movlb	0	; () banked
  4840  002208  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  4841  00220A  0100               	movlb	0	; () banked
  4842  00220C  6F60               	movwf	?_ringbuf_num& (0+255),b
  4843  00220E  0100               	movlb	0	; () banked
  4844  002210  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  4845  002212  0100               	movlb	0	; () banked
  4846  002214  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  4847  002216  0100               	movlb	0	; () banked
  4848  002218  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  4849                           
  4850                           ; BSR set to: 0
  4851  00221A  0012               	return	
  4852  00221C                     __end_of_ringbuf_num:
  4853                           	opt stack 0
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           prodh	equ	0xFF4
  4859                           prodl	equ	0xFF3
  4860                           intcon	equ	0xFF2
  4861                           postinc0	equ	0xFEE
  4862                           wreg	equ	0xFE8
  4863                           indf1	equ	0xFE7
  4864                           postinc1	equ	0xFE6
  4865                           postdec1	equ	0xFE5
  4866                           fsr1h	equ	0xFE2
  4867                           fsr1l	equ	0xFE1
  4868                           indf2	equ	0xFDF
  4869                           postinc2	equ	0xFDE
  4870                           postdec2	equ	0xFDD
  4871                           fsr2h	equ	0xFDA
  4872                           fsr2l	equ	0xFD9
  4873                           status	equ	0xFD8
  4874                           
  4875 ;; *************** function _main_init *****************
  4876 ;; Defined at:
  4877 ;;		line 311 in file "PIC18F27J53-killifish_light01.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;		None
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;		None
  4882 ;; Return value:  Size  Location     Type
  4883 ;;		None               void
  4884 ;; Registers used:
  4885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;Total ram usage:        0 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    6
  4898 ;; This function calls:
  4899 ;;		_ADC_init
  4900 ;;		_OSC_init
  4901 ;;		_PWM_init
  4902 ;;		_RTCC_init
  4903 ;;		_UART_init
  4904 ;;		_ringbuf_init
  4905 ;;		_timer1_init
  4906 ;;		_timer3_init
  4907 ;; This function is called by:
  4908 ;;		_main
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text18
  4913  002E94                     __ptext18:
  4914                           	opt stack 0
  4915  002E94                     _main_init:
  4916                           	opt stack 24
  4917                           
  4918                           ;PIC18F27J53-killifish_light01.c: 312: OSC_init();
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;incstack = 0
  4922  002E94  EC63  F01B         	call	_OSC_init	;wreg free
  4923                           
  4924                           ;PIC18F27J53-killifish_light01.c: 313: TRISA = 0b11100111;
  4925  002E98  0EE7               	movlw	231
  4926  002E9A  6E92               	movwf	3986,c	;volatile
  4927                           
  4928                           ;PIC18F27J53-killifish_light01.c: 314: TRISB = 0b00000000;
  4929  002E9C  0E00               	movlw	0
  4930  002E9E  6E93               	movwf	3987,c	;volatile
  4931                           
  4932                           ;PIC18F27J53-killifish_light01.c: 315: TRISC = 0b10111010;
  4933  002EA0  0EBA               	movlw	186
  4934  002EA2  6E94               	movwf	3988,c	;volatile
  4935                           
  4936                           ;PIC18F27J53-killifish_light01.c: 316: ANCON0 = 0b11111000;
  4937  002EA4  0EF8               	movlw	248
  4938  002EA6  010F               	movlb	15	; () banked
  4939  002EA8  6F48               	movwf	72,b	;volatile
  4940                           
  4941                           ; BSR set to: 15
  4942                           ;PIC18F27J53-killifish_light01.c: 317: ANCON1 = 0b00011111;
  4943  002EAA  0E1F               	movlw	31
  4944  002EAC  010F               	movlb	15	; () banked
  4945  002EAE  6F49               	movwf	73,b	;volatile
  4946                           
  4947                           ; BSR set to: 15
  4948                           ;PIC18F27J53-killifish_light01.c: 318: INTCON2bits.RBPU = 0;
  4949  002EB0  9EF1               	bcf	intcon2,7,c	;volatile
  4950                           
  4951                           ; BSR set to: 15
  4952                           ;PIC18F27J53-killifish_light01.c: 321: timer1_init(0, 2);
  4953  002EB2  0E02               	movlw	2
  4954  002EB4  0100               	movlb	0	; () banked
  4955  002EB6  6F60               	movwf	timer1_init@clock_select& (0+255),b
  4956  002EB8  0E00               	movlw	0
  4957  002EBA  ECDF  F019         	call	_timer1_init
  4958                           
  4959                           ;PIC18F27J53-killifish_light01.c: 322: timer3_init(2);
  4960  002EBE  0E02               	movlw	2
  4961  002EC0  ECB4  F01A         	call	_timer3_init
  4962                           
  4963                           ;PIC18F27J53-killifish_light01.c: 323: ADC_init(0);
  4964  002EC4  0E00               	movlw	0
  4965  002EC6  EC21  F01B         	call	_ADC_init
  4966                           
  4967                           ;PIC18F27J53-killifish_light01.c: 324: RTCC_init();
  4968  002ECA  EC86  F01A         	call	_RTCC_init	;wreg free
  4969                           
  4970                           ;PIC18F27J53-killifish_light01.c: 325: PWM_init(255);
  4971  002ECE  0EFF               	movlw	255
  4972  002ED0  ECE4  F013         	call	_PWM_init
  4973                           
  4974                           ;PIC18F27J53-killifish_light01.c: 327: UART_init();
  4975  002ED4  EC11  F01B         	call	_UART_init	;wreg free
  4976                           
  4977                           ;PIC18F27J53-killifish_light01.c: 328: static uint8_t txbuf[250];
  4978                           ;PIC18F27J53-killifish_light01.c: 329: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  4979  002ED8  0E34               	movlw	low _tx_buf
  4980  002EDA  0100               	movlb	0	; () banked
  4981  002EDC  6F60               	movwf	ringbuf_init@rb& (0+255),b
  4982  002EDE  0E00               	movlw	high _tx_buf
  4983  002EE0  0100               	movlb	0	; () banked
  4984  002EE2  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  4985  002EE4  0E00               	movlw	low main_init@txbuf
  4986  002EE6  0100               	movlb	0	; () banked
  4987  002EE8  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  4988  002EEA  0E05               	movlw	high main_init@txbuf
  4989  002EEC  0100               	movlb	0	; () banked
  4990  002EEE  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4991  002EF0  0E00               	movlw	0
  4992  002EF2  0100               	movlb	0	; () banked
  4993  002EF4  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  4994  002EF6  0EFA               	movlw	250
  4995  002EF8  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4996  002EFA  ECB5  F019         	call	_ringbuf_init	;wreg free
  4997                           
  4998                           ;PIC18F27J53-killifish_light01.c: 330: static uint8_t rxbuf[250];
  4999                           ;PIC18F27J53-killifish_light01.c: 331: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  5000  002EFE  0E2C               	movlw	low _rx_buf
  5001  002F00  0100               	movlb	0	; () banked
  5002  002F02  6F60               	movwf	ringbuf_init@rb& (0+255),b
  5003  002F04  0E00               	movlw	high _rx_buf
  5004  002F06  0100               	movlb	0	; () banked
  5005  002F08  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  5006  002F0A  0E00               	movlw	low main_init@rxbuf
  5007  002F0C  0100               	movlb	0	; () banked
  5008  002F0E  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  5009  002F10  0E06               	movlw	high main_init@rxbuf
  5010  002F12  0100               	movlb	0	; () banked
  5011  002F14  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  5012  002F16  0E00               	movlw	0
  5013  002F18  0100               	movlb	0	; () banked
  5014  002F1A  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  5015  002F1C  0EFA               	movlw	250
  5016  002F1E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  5017  002F20  ECB5  F019         	call	_ringbuf_init	;wreg free
  5018  002F24  0012               	return		;funcret
  5019  002F26                     __end_of_main_init:
  5020                           	opt stack 0
  5021                           tblptru	equ	0xFF8
  5022                           tblptrh	equ	0xFF7
  5023                           tblptrl	equ	0xFF6
  5024                           tablat	equ	0xFF5
  5025                           prodh	equ	0xFF4
  5026                           prodl	equ	0xFF3
  5027                           intcon	equ	0xFF2
  5028                           intcon2	equ	0xFF1
  5029                           postinc0	equ	0xFEE
  5030                           wreg	equ	0xFE8
  5031                           indf1	equ	0xFE7
  5032                           postinc1	equ	0xFE6
  5033                           postdec1	equ	0xFE5
  5034                           fsr1h	equ	0xFE2
  5035                           fsr1l	equ	0xFE1
  5036                           indf2	equ	0xFDF
  5037                           postinc2	equ	0xFDE
  5038                           postdec2	equ	0xFDD
  5039                           fsr2h	equ	0xFDA
  5040                           fsr2l	equ	0xFD9
  5041                           status	equ	0xFD8
  5042                           
  5043 ;; *************** function _timer3_init *****************
  5044 ;; Defined at:
  5045 ;;		line 85 in file "../My_header\My_header.h"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  prescaler       1    wreg     unsigned char 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  prescaler       1    1[BANK0 ] unsigned char 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;		None               void
  5052 ;; Registers used:
  5053 ;;		wreg, status,2, status,0
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5061 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5062 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5063 ;;Total ram usage:        2 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:    5
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_main_init
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text19
  5074  003568                     __ptext19:
  5075                           	opt stack 0
  5076  003568                     _timer3_init:
  5077                           	opt stack 24
  5078                           
  5079                           ;incstack = 0
  5080                           ;timer3_init@prescaler stored from wreg
  5081  003568  0100               	movlb	0	; () banked
  5082  00356A  6F61               	movwf	timer3_init@prescaler& (0+255),b
  5083                           
  5084                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  5085  00356C  0E3F               	movlw	-193
  5086  00356E  1679               	andwf	3961,f,c	;volatile
  5087                           
  5088                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  5089  003570  9679               	bcf	3961,3,c	;volatile
  5090                           
  5091                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  5092  003572  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  5093  003576  0100               	movlb	0	; () banked
  5094  003578  3B60               	swapf	??_timer3_init& (0+255),f,b
  5095  00357A  5079               	movf	3961,w,c	;volatile
  5096  00357C  0100               	movlb	0	; () banked
  5097  00357E  1960               	xorwf	??_timer3_init& (0+255),w,b
  5098  003580  0BCF               	andlw	-49
  5099  003582  1960               	xorwf	??_timer3_init& (0+255),w,b
  5100  003584  6E79               	movwf	3961,c	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  5104  003586  9E79               	bcf	3961,7,c	;volatile
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  5108  003588  8079               	bsf	3961,0,c	;volatile
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  5112  00358A  92A2               	bcf	4002,1,c	;volatile
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  5116  00358C  92A1               	bcf	4001,1,c	;volatile
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  5120  00358E  82A0               	bsf	4000,1,c	;volatile
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  5124  003590  8CF2               	bsf	intcon,6,c	;volatile
  5125                           
  5126                           ; BSR set to: 0
  5127  003592  0012               	return		;funcret
  5128  003594                     __end_of_timer3_init:
  5129                           	opt stack 0
  5130                           tblptru	equ	0xFF8
  5131                           tblptrh	equ	0xFF7
  5132                           tblptrl	equ	0xFF6
  5133                           tablat	equ	0xFF5
  5134                           prodh	equ	0xFF4
  5135                           prodl	equ	0xFF3
  5136                           intcon	equ	0xFF2
  5137                           intcon2	equ	0xFF1
  5138                           postinc0	equ	0xFEE
  5139                           wreg	equ	0xFE8
  5140                           indf1	equ	0xFE7
  5141                           postinc1	equ	0xFE6
  5142                           postdec1	equ	0xFE5
  5143                           fsr1h	equ	0xFE2
  5144                           fsr1l	equ	0xFE1
  5145                           indf2	equ	0xFDF
  5146                           postinc2	equ	0xFDE
  5147                           postdec2	equ	0xFDD
  5148                           fsr2h	equ	0xFDA
  5149                           fsr2l	equ	0xFD9
  5150                           status	equ	0xFD8
  5151                           
  5152 ;; *************** function _timer1_init *****************
  5153 ;; Defined at:
  5154 ;;		line 54 in file "../My_header\My_header.h"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  prescaler       1    wreg     unsigned char 
  5157 ;;  clock_select    1    0[BANK0 ] unsigned char 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  prescaler       1    2[BANK0 ] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;		None               void
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5169 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5171 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5172 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5173 ;;Total ram usage:        3 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    5
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_main_init
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text20
  5184  0033BE                     __ptext20:
  5185                           	opt stack 0
  5186  0033BE                     _timer1_init:
  5187                           	opt stack 24
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;incstack = 0
  5191                           ;timer1_init@prescaler stored from wreg
  5192  0033BE  0100               	movlb	0	; () banked
  5193  0033C0  6F62               	movwf	timer1_init@prescaler& (0+255),b
  5194                           
  5195                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  5196  0033C2  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  5197  0033C6  0100               	movlb	0	; () banked
  5198  0033C8  3B61               	swapf	??_timer1_init& (0+255),f,b
  5199  0033CA  4761               	rlncf	??_timer1_init& (0+255),f,b
  5200  0033CC  4761               	rlncf	??_timer1_init& (0+255),f,b
  5201  0033CE  50CD               	movf	4045,w,c	;volatile
  5202  0033D0  0100               	movlb	0	; () banked
  5203  0033D2  1961               	xorwf	??_timer1_init& (0+255),w,b
  5204  0033D4  0B3F               	andlw	-193
  5205  0033D6  1961               	xorwf	??_timer1_init& (0+255),w,b
  5206  0033D8  6ECD               	movwf	4045,c	;volatile
  5207                           
  5208                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  5209  0033DA  0E02               	movlw	2
  5210  0033DC  0100               	movlb	0	; () banked
  5211  0033DE  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  5212  0033E0  A4D8               	btfss	status,2,c
  5213  0033E2  D002               	goto	l152
  5214                           
  5215                           ; BSR set to: 0
  5216  0033E4  86CD               	bsf	4045,3,c	;volatile
  5217  0033E6  D001               	goto	l4543
  5218  0033E8                     l152:
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  5222  0033E8  96CD               	bcf	4045,3,c	;volatile
  5223  0033EA                     l4543:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  5227  0033EA  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  5228  0033EE  0100               	movlb	0	; () banked
  5229  0033F0  3B61               	swapf	??_timer1_init& (0+255),f,b
  5230  0033F2  50CD               	movf	4045,w,c	;volatile
  5231  0033F4  0100               	movlb	0	; () banked
  5232  0033F6  1961               	xorwf	??_timer1_init& (0+255),w,b
  5233  0033F8  0BCF               	andlw	-49
  5234  0033FA  1961               	xorwf	??_timer1_init& (0+255),w,b
  5235  0033FC  6ECD               	movwf	4045,c	;volatile
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  5239  0033FE  84CD               	bsf	4045,2,c	;volatile
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  5243  003400  92CD               	bcf	4045,1,c	;volatile
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  5247  003402  80CD               	bsf	4045,0,c	;volatile
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  5251  003404  909F               	bcf	3999,0,c	;volatile
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  5255  003406  909E               	bcf	3998,0,c	;volatile
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  5259  003408  809D               	bsf	3997,0,c	;volatile
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  5263  00340A  8CF2               	bsf	intcon,6,c	;volatile
  5264                           
  5265                           ; BSR set to: 0
  5266  00340C  0012               	return		;funcret
  5267  00340E                     __end_of_timer1_init:
  5268                           	opt stack 0
  5269                           tblptru	equ	0xFF8
  5270                           tblptrh	equ	0xFF7
  5271                           tblptrl	equ	0xFF6
  5272                           tablat	equ	0xFF5
  5273                           prodh	equ	0xFF4
  5274                           prodl	equ	0xFF3
  5275                           intcon	equ	0xFF2
  5276                           intcon2	equ	0xFF1
  5277                           postinc0	equ	0xFEE
  5278                           wreg	equ	0xFE8
  5279                           indf1	equ	0xFE7
  5280                           postinc1	equ	0xFE6
  5281                           postdec1	equ	0xFE5
  5282                           fsr1h	equ	0xFE2
  5283                           fsr1l	equ	0xFE1
  5284                           indf2	equ	0xFDF
  5285                           postinc2	equ	0xFDE
  5286                           postdec2	equ	0xFDD
  5287                           fsr2h	equ	0xFDA
  5288                           fsr2l	equ	0xFD9
  5289                           status	equ	0xFD8
  5290                           
  5291 ;; *************** function _ringbuf_init *****************
  5292 ;; Defined at:
  5293 ;;		line 24 in file "../My_header\My_ringbuf.h"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5296 ;;		 -> rx_buf(8), tx_buf(8), 
  5297 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  5298 ;;		 -> main_init@rxbuf(250), main_init@txbuf(250), 
  5299 ;;  bufsize         2    4[BANK0 ] unsigned int 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;		None               void
  5304 ;; Registers used:
  5305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5311 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;Total ram usage:        6 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    5
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_main_init
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text21
  5326  00336A                     __ptext21:
  5327                           	opt stack 0
  5328  00336A                     _ringbuf_init:
  5329                           	opt stack 24
  5330                           
  5331                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;incstack = 0
  5335  00336A  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  5336  00336E  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  5337  003372  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  5338  003376  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  5339                           
  5340                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  5341  00337A  0100               	movlb	0	; () banked
  5342  00337C  EE20 F002          	lfsr	2,2
  5343  003380  5160               	movf	ringbuf_init@rb& (0+255),w,b
  5344  003382  26D9               	addwf	fsr2l,f,c
  5345  003384  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  5346  003386  22DA               	addwfc	fsr2h,f,c
  5347  003388  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  5348  00338C  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  5352  003390  0100               	movlb	0	; () banked
  5353  003392  EE20 F004          	lfsr	2,4
  5354  003396  5160               	movf	ringbuf_init@rb& (0+255),w,b
  5355  003398  26D9               	addwf	fsr2l,f,c
  5356  00339A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  5357  00339C  22DA               	addwfc	fsr2h,f,c
  5358  00339E  0E00               	movlw	0
  5359  0033A0  6EDE               	movwf	postinc2,c
  5360  0033A2  0E00               	movlw	0
  5361  0033A4  6EDD               	movwf	postdec2,c
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  5365  0033A6  0100               	movlb	0	; () banked
  5366  0033A8  EE20 F006          	lfsr	2,6
  5367  0033AC  5160               	movf	ringbuf_init@rb& (0+255),w,b
  5368  0033AE  26D9               	addwf	fsr2l,f,c
  5369  0033B0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  5370  0033B2  22DA               	addwfc	fsr2h,f,c
  5371  0033B4  0E00               	movlw	0
  5372  0033B6  6EDE               	movwf	postinc2,c
  5373  0033B8  0E00               	movlw	0
  5374  0033BA  6EDD               	movwf	postdec2,c
  5375                           
  5376                           ; BSR set to: 0
  5377  0033BC  0012               	return		;funcret
  5378  0033BE                     __end_of_ringbuf_init:
  5379                           	opt stack 0
  5380                           tblptru	equ	0xFF8
  5381                           tblptrh	equ	0xFF7
  5382                           tblptrl	equ	0xFF6
  5383                           tablat	equ	0xFF5
  5384                           prodh	equ	0xFF4
  5385                           prodl	equ	0xFF3
  5386                           intcon	equ	0xFF2
  5387                           intcon2	equ	0xFF1
  5388                           postinc0	equ	0xFEE
  5389                           wreg	equ	0xFE8
  5390                           indf1	equ	0xFE7
  5391                           postinc1	equ	0xFE6
  5392                           postdec1	equ	0xFE5
  5393                           fsr1h	equ	0xFE2
  5394                           fsr1l	equ	0xFE1
  5395                           indf2	equ	0xFDF
  5396                           postinc2	equ	0xFDE
  5397                           postdec2	equ	0xFDD
  5398                           fsr2h	equ	0xFDA
  5399                           fsr2l	equ	0xFD9
  5400                           status	equ	0xFD8
  5401                           
  5402 ;; *************** function _UART_init *****************
  5403 ;; Defined at:
  5404 ;;		line 192 in file "../My_header\My_header.h"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;		None               void
  5411 ;; Registers used:
  5412 ;;		wreg, status,2
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5422 ;;Total ram usage:        0 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    5
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_main_init
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text22
  5433  003622                     __ptext22:
  5434                           	opt stack 0
  5435  003622                     _UART_init:
  5436                           	opt stack 24
  5437                           
  5438                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;incstack = 0
  5442  003622  9CAD               	bcf	4013,6,c	;volatile
  5443                           
  5444                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  5445  003624  8AAD               	bsf	4013,5,c	;volatile
  5446                           
  5447                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  5448  003626  98AD               	bcf	4013,4,c	;volatile
  5449                           
  5450                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  5451  003628  94AD               	bcf	4013,2,c	;volatile
  5452                           
  5453                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  5454  00362A  8EAC               	bsf	4012,7,c	;volatile
  5455                           
  5456                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  5457  00362C  9CAC               	bcf	4012,6,c	;volatile
  5458                           
  5459                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  5460  00362E  88AC               	bsf	4012,4,c	;volatile
  5461                           
  5462                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  5463  003630  967E               	bcf	3966,3,c	;volatile
  5464                           
  5465                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  5466  003632  0E4D               	movlw	77
  5467  003634  6EB0               	movwf	4016,c	;volatile
  5468                           
  5469                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  5470  003636  0E00               	movlw	0
  5471  003638  6E7F               	movwf	3967,c	;volatile
  5472                           
  5473                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  5474  00363A  9A9F               	bcf	3999,5,c	;volatile
  5475                           
  5476                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  5477  00363C  8A9D               	bsf	3997,5,c	;volatile
  5478                           
  5479                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  5480  00363E  8CF2               	bsf	intcon,6,c	;volatile
  5481  003640  0012               	return		;funcret
  5482  003642                     __end_of_UART_init:
  5483                           	opt stack 0
  5484                           tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           prodh	equ	0xFF4
  5489                           prodl	equ	0xFF3
  5490                           intcon	equ	0xFF2
  5491                           intcon2	equ	0xFF1
  5492                           postinc0	equ	0xFEE
  5493                           wreg	equ	0xFE8
  5494                           indf1	equ	0xFE7
  5495                           postinc1	equ	0xFE6
  5496                           postdec1	equ	0xFE5
  5497                           fsr1h	equ	0xFE2
  5498                           fsr1l	equ	0xFE1
  5499                           indf2	equ	0xFDF
  5500                           postinc2	equ	0xFDE
  5501                           postdec2	equ	0xFDD
  5502                           fsr2h	equ	0xFDA
  5503                           fsr2l	equ	0xFD9
  5504                           status	equ	0xFD8
  5505                           
  5506 ;; *************** function _RTCC_init *****************
  5507 ;; Defined at:
  5508 ;;		line 56 in file "../My_header\My_RTCC.h"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;		None               void
  5515 ;; Registers used:
  5516 ;;		wreg, status,2
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    5
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_main_init
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text23
  5537  00350C                     __ptext23:
  5538                           	opt stack 0
  5539  00350C                     _RTCC_init:
  5540                           	opt stack 24
  5541                           
  5542                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
  5543                           
  5544                           ;incstack = 0
  5545  00350C  010F               	movlb	15	; () banked
  5546  00350E  8B3F               	bsf	63,5,b	;volatile
  5547                           
  5548                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
  5549  003510  010F               	movlb	15	; () banked
  5550  003512  BB3F               	btfsc	63,5,b	;volatile
  5551  003514  D006               	goto	l4635
  5552                           
  5553                           ; BSR set to: 15
  5554                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
  5555  003516  0E55               	movlw	85
  5556  003518  6EA7               	movwf	4007,c	;volatile
  5557                           
  5558                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
  5559  00351A  0EAA               	movlw	170
  5560  00351C  6EA7               	movwf	4007,c	;volatile
  5561                           
  5562                           ; BSR set to: 15
  5563                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
  5564  00351E  010F               	movlb	15	; () banked
  5565  003520  8B3F               	bsf	63,5,b	;volatile
  5566  003522                     l4635:
  5567                           
  5568                           ; BSR set to: 15
  5569                           ;My_header\My_RTCC.h: 62: }
  5570                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
  5571  003522  010F               	movlb	15	; () banked
  5572  003524  8F3F               	bsf	63,7,b	;volatile
  5573                           
  5574                           ; BSR set to: 15
  5575                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
  5576  003526  010F               	movlb	15	; () banked
  5577  003528  953F               	bcf	63,2,b	;volatile
  5578                           
  5579                           ; BSR set to: 15
  5580                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
  5581  00352A  010F               	movlb	15	; () banked
  5582  00352C  833C               	bsf	60,1,b	;volatile
  5583                           
  5584                           ; BSR set to: 15
  5585                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
  5586  00352E  010F               	movlb	15	; () banked
  5587  003530  853C               	bsf	60,2,b	;volatile
  5588                           
  5589                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
  5590  003532  0E00               	movlw	0
  5591  003534  010F               	movlb	15	; () banked
  5592  003536  6F3E               	movwf	62,b	;volatile
  5593                           
  5594                           ; BSR set to: 15
  5595  003538  0012               	return		;funcret
  5596  00353A                     __end_of_RTCC_init:
  5597                           	opt stack 0
  5598                           tblptru	equ	0xFF8
  5599                           tblptrh	equ	0xFF7
  5600                           tblptrl	equ	0xFF6
  5601                           tablat	equ	0xFF5
  5602                           prodh	equ	0xFF4
  5603                           prodl	equ	0xFF3
  5604                           intcon	equ	0xFF2
  5605                           intcon2	equ	0xFF1
  5606                           postinc0	equ	0xFEE
  5607                           wreg	equ	0xFE8
  5608                           indf1	equ	0xFE7
  5609                           postinc1	equ	0xFE6
  5610                           postdec1	equ	0xFE5
  5611                           fsr1h	equ	0xFE2
  5612                           fsr1l	equ	0xFE1
  5613                           indf2	equ	0xFDF
  5614                           postinc2	equ	0xFDE
  5615                           postdec2	equ	0xFDD
  5616                           fsr2h	equ	0xFDA
  5617                           fsr2l	equ	0xFD9
  5618                           status	equ	0xFD8
  5619                           
  5620 ;; *************** function _PWM_init *****************
  5621 ;; Defined at:
  5622 ;;		line 126 in file "PIC18F27J53-killifish_light01.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  PR              1    wreg     unsigned char 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  PR              1    0[BANK0 ] unsigned char 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;		None               void
  5629 ;; Registers used:
  5630 ;;		wreg, status,2, status,0
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5639 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5640 ;;Total ram usage:        1 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; Hardware stack levels required when called:    5
  5643 ;; This function calls:
  5644 ;;		Nothing
  5645 ;; This function is called by:
  5646 ;;		_main_init
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text24
  5651  0027C8                     __ptext24:
  5652                           	opt stack 0
  5653  0027C8                     _PWM_init:
  5654                           	opt stack 24
  5655                           
  5656                           ; BSR set to: 15
  5657                           ;incstack = 0
  5658                           ;PWM_init@PR stored from wreg
  5659  0027C8  0100               	movlb	0	; () banked
  5660  0027CA  6F60               	movwf	PWM_init@PR& (0+255),b
  5661                           
  5662                           ;PIC18F27J53-killifish_light01.c: 127: PPSCONbits.IOLOCK = 0;
  5663  0027CC  010E               	movlb	14	; () banked
  5664  0027CE  91BF               	bcf	191,0,b	;volatile
  5665                           
  5666                           ;PIC18F27J53-killifish_light01.c: 128: if (PPSCONbits.IOLOCK != 0) {
  5667  0027D0  010E               	movlb	14	; () banked
  5668  0027D2  A1BF               	btfss	191,0,b	;volatile
  5669  0027D4  D006               	goto	l548
  5670                           
  5671                           ; BSR set to: 14
  5672                           ;PIC18F27J53-killifish_light01.c: 129: EECON2 = 0x55;
  5673  0027D6  0E55               	movlw	85
  5674  0027D8  6EA7               	movwf	4007,c	;volatile
  5675                           
  5676                           ;PIC18F27J53-killifish_light01.c: 130: EECON2 = 0xAA;
  5677  0027DA  0EAA               	movlw	170
  5678  0027DC  6EA7               	movwf	4007,c	;volatile
  5679                           
  5680                           ; BSR set to: 14
  5681                           ;PIC18F27J53-killifish_light01.c: 131: PPSCONbits.IOLOCK = 0;
  5682  0027DE  010E               	movlb	14	; () banked
  5683  0027E0  91BF               	bcf	191,0,b	;volatile
  5684  0027E2                     l548:
  5685                           
  5686                           ; BSR set to: 14
  5687                           ;PIC18F27J53-killifish_light01.c: 132: }
  5688                           ;PIC18F27J53-killifish_light01.c: 134: RPOR3 = 14;
  5689  0027E2  0E0E               	movlw	14
  5690  0027E4  010E               	movlb	14	; () banked
  5691  0027E6  6FC3               	movwf	195,b	;volatile
  5692                           
  5693                           ;PIC18F27J53-killifish_light01.c: 135: RPOR4 = 18;
  5694  0027E8  0E12               	movlw	18
  5695  0027EA  010E               	movlb	14	; () banked
  5696  0027EC  6FC4               	movwf	196,b	;volatile
  5697                           
  5698                           ;PIC18F27J53-killifish_light01.c: 136: RPOR5 = 22;
  5699  0027EE  0E16               	movlw	22
  5700  0027F0  010E               	movlb	14	; () banked
  5701  0027F2  6FC5               	movwf	197,b	;volatile
  5702                           
  5703                           ; BSR set to: 14
  5704                           ;PIC18F27J53-killifish_light01.c: 138: CCP1CONbits.CCP1M = 12;
  5705  0027F4  50BA               	movf	4026,w,c	;volatile
  5706  0027F6  0BF0               	andlw	-16
  5707  0027F8  090C               	iorlw	12
  5708  0027FA  6EBA               	movwf	4026,c	;volatile
  5709                           
  5710                           ; BSR set to: 14
  5711                           ;PIC18F27J53-killifish_light01.c: 139: CCP1CONbits.P1M = 0;
  5712  0027FC  0E3F               	movlw	-193
  5713  0027FE  16BA               	andwf	4026,f,c	;volatile
  5714                           
  5715                           ; BSR set to: 14
  5716                           ;PIC18F27J53-killifish_light01.c: 140: CCPTMRS0bits.C1TSEL = 0;
  5717  002800  010F               	movlb	15	; () banked
  5718  002802  9152               	bcf	82,0,b	;volatile
  5719  002804  9352               	bcf	82,1,b	;volatile
  5720  002806  9552               	bcf	82,2,b	;volatile
  5721                           
  5722                           ; BSR set to: 15
  5723                           ;PIC18F27J53-killifish_light01.c: 141: CCPR1Lbits.CCPR1L = 0;
  5724  002808  0E00               	movlw	0
  5725  00280A  6EBB               	movwf	4027,c	;volatile
  5726                           
  5727                           ; BSR set to: 15
  5728                           ;PIC18F27J53-killifish_light01.c: 142: CCP1CONbits.DC1B = 0;
  5729  00280C  0ECF               	movlw	-49
  5730  00280E  16BA               	andwf	4026,f,c	;volatile
  5731                           
  5732                           ; BSR set to: 15
  5733                           ;PIC18F27J53-killifish_light01.c: 144: CCP2CONbits.CCP2M = 12;
  5734  002810  50B4               	movf	4020,w,c	;volatile
  5735  002812  0BF0               	andlw	-16
  5736  002814  090C               	iorlw	12
  5737  002816  6EB4               	movwf	4020,c	;volatile
  5738                           
  5739                           ; BSR set to: 15
  5740                           ;PIC18F27J53-killifish_light01.c: 145: CCP2CONbits.P2M = 0;
  5741  002818  0E3F               	movlw	-193
  5742  00281A  16B4               	andwf	4020,f,c	;volatile
  5743                           
  5744                           ; BSR set to: 15
  5745                           ;PIC18F27J53-killifish_light01.c: 146: CCPTMRS0bits.C2TSEL = 0;
  5746  00281C  010F               	movlb	15	; () banked
  5747  00281E  9752               	bcf	82,3,b	;volatile
  5748  002820  9952               	bcf	82,4,b	;volatile
  5749  002822  9B52               	bcf	82,5,b	;volatile
  5750                           
  5751                           ; BSR set to: 15
  5752                           ;PIC18F27J53-killifish_light01.c: 147: CCPR2Lbits.CCPR2L = 0;
  5753  002824  0E00               	movlw	0
  5754  002826  6EB5               	movwf	4021,c	;volatile
  5755                           
  5756                           ; BSR set to: 15
  5757                           ;PIC18F27J53-killifish_light01.c: 148: CCP2CONbits.DC2B = 0;
  5758  002828  0ECF               	movlw	-49
  5759  00282A  16B4               	andwf	4020,f,c	;volatile
  5760                           
  5761                           ; BSR set to: 15
  5762                           ;PIC18F27J53-killifish_light01.c: 150: CCP3CONbits.CCP3M = 12;
  5763  00282C  010F               	movlb	15	; () banked
  5764  00282E  5115               	movf	21,w,b	;volatile
  5765  002830  0BF0               	andlw	-16
  5766  002832  090C               	iorlw	12
  5767  002834  6F15               	movwf	21,b	;volatile
  5768                           
  5769                           ; BSR set to: 15
  5770                           ;PIC18F27J53-killifish_light01.c: 151: CCP3CONbits.P3M = 0;
  5771  002836  0E3F               	movlw	-193
  5772  002838  010F               	movlb	15	; () banked
  5773  00283A  1715               	andwf	21,f,b	;volatile
  5774                           
  5775                           ; BSR set to: 15
  5776                           ;PIC18F27J53-killifish_light01.c: 152: CCPTMRS0bits.C3TSEL = 0;
  5777  00283C  0E3F               	movlw	-193
  5778  00283E  010F               	movlb	15	; () banked
  5779  002840  1752               	andwf	82,f,b	;volatile
  5780                           
  5781                           ; BSR set to: 15
  5782                           ;PIC18F27J53-killifish_light01.c: 153: CCPR3Lbits.CCPR3L = 0;
  5783  002842  0E00               	movlw	0
  5784  002844  010F               	movlb	15	; () banked
  5785  002846  6F16               	movwf	22,b	;volatile
  5786                           
  5787                           ; BSR set to: 15
  5788                           ;PIC18F27J53-killifish_light01.c: 154: CCP3CONbits.DC3B = 0;
  5789  002848  0ECF               	movlw	-49
  5790  00284A  010F               	movlb	15	; () banked
  5791  00284C  1715               	andwf	21,f,b	;volatile
  5792                           
  5793                           ; BSR set to: 15
  5794                           ;PIC18F27J53-killifish_light01.c: 156: CCP4CONbits.CCP4M = 12;
  5795  00284E  010F               	movlb	15	; () banked
  5796  002850  5112               	movf	18,w,b	;volatile
  5797  002852  0BF0               	andlw	-16
  5798  002854  090C               	iorlw	12
  5799  002856  6F12               	movwf	18,b	;volatile
  5800                           
  5801                           ; BSR set to: 15
  5802                           ;PIC18F27J53-killifish_light01.c: 157: CCPTMRS1bits.C4TSEL = 0;
  5803  002858  0EFC               	movlw	-4
  5804  00285A  010F               	movlb	15	; () banked
  5805  00285C  1751               	andwf	81,f,b	;volatile
  5806                           
  5807                           ; BSR set to: 15
  5808                           ;PIC18F27J53-killifish_light01.c: 158: CCPR4Lbits.CCPR4L = 0;
  5809  00285E  0E00               	movlw	0
  5810  002860  010F               	movlb	15	; () banked
  5811  002862  6F13               	movwf	19,b	;volatile
  5812                           
  5813                           ; BSR set to: 15
  5814                           ;PIC18F27J53-killifish_light01.c: 159: CCP4CONbits.DC4B = 0;
  5815  002864  0ECF               	movlw	-49
  5816  002866  010F               	movlb	15	; () banked
  5817  002868  1712               	andwf	18,f,b	;volatile
  5818                           
  5819                           ; BSR set to: 15
  5820                           ;PIC18F27J53-killifish_light01.c: 161: T2CONbits.T2OUTPS = 0;
  5821  00286A  96CA               	bcf	4042,3,c	;volatile
  5822  00286C  98CA               	bcf	4042,4,c	;volatile
  5823  00286E  9ACA               	bcf	4042,5,c	;volatile
  5824  002870  9CCA               	bcf	4042,6,c	;volatile
  5825                           
  5826                           ; BSR set to: 15
  5827                           ;PIC18F27J53-killifish_light01.c: 162: T2CONbits.T2CKPS = 2;
  5828  002872  50CA               	movf	4042,w,c	;volatile
  5829  002874  0BFC               	andlw	-4
  5830  002876  0902               	iorlw	2
  5831  002878  6ECA               	movwf	4042,c	;volatile
  5832                           
  5833                           ; BSR set to: 15
  5834                           ;PIC18F27J53-killifish_light01.c: 163: PR2 = PR - 1;
  5835  00287A  0100               	movlb	0	; () banked
  5836  00287C  0560               	decf	PWM_init@PR& (0+255),w,b
  5837  00287E  6ECB               	movwf	4043,c	;volatile
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;PIC18F27J53-killifish_light01.c: 164: T2CONbits.TMR2ON = 1;
  5841  002880  84CA               	bsf	4042,2,c	;volatile
  5842                           
  5843                           ; BSR set to: 0
  5844  002882  0012               	return		;funcret
  5845  002884                     __end_of_PWM_init:
  5846                           	opt stack 0
  5847                           tblptru	equ	0xFF8
  5848                           tblptrh	equ	0xFF7
  5849                           tblptrl	equ	0xFF6
  5850                           tablat	equ	0xFF5
  5851                           prodh	equ	0xFF4
  5852                           prodl	equ	0xFF3
  5853                           intcon	equ	0xFF2
  5854                           intcon2	equ	0xFF1
  5855                           postinc0	equ	0xFEE
  5856                           wreg	equ	0xFE8
  5857                           indf1	equ	0xFE7
  5858                           postinc1	equ	0xFE6
  5859                           postdec1	equ	0xFE5
  5860                           fsr1h	equ	0xFE2
  5861                           fsr1l	equ	0xFE1
  5862                           indf2	equ	0xFDF
  5863                           postinc2	equ	0xFDE
  5864                           postdec2	equ	0xFDD
  5865                           fsr2h	equ	0xFDA
  5866                           fsr2l	equ	0xFD9
  5867                           status	equ	0xFD8
  5868                           
  5869 ;; *************** function _OSC_init *****************
  5870 ;; Defined at:
  5871 ;;		line 119 in file "../My_header\My_header.h"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;		None               void
  5878 ;; Registers used:
  5879 ;;		wreg, status,2
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;Total ram usage:        0 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    5
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		_main_init
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text25
  5900  0036C6                     __ptext25:
  5901                           	opt stack 0
  5902  0036C6                     _OSC_init:
  5903                           	opt stack 24
  5904                           
  5905                           ;My_header\My_header.h: 120: OSCCONbits.IRCF = 7;
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;incstack = 0
  5909  0036C6  88D3               	bsf	4051,4,c	;volatile
  5910  0036C8  8AD3               	bsf	4051,5,c	;volatile
  5911  0036CA  8CD3               	bsf	4051,6,c	;volatile
  5912                           
  5913                           ;My_header\My_header.h: 121: OSCTUNEbits.PLLEN = 1;
  5914  0036CC  8C9B               	bsf	3995,6,c	;volatile
  5915                           
  5916                           ;My_header\My_header.h: 122: OSCCONbits.SCS = 0;
  5917  0036CE  0EFC               	movlw	-4
  5918  0036D0  16D3               	andwf	4051,f,c	;volatile
  5919  0036D2  0012               	return		;funcret
  5920  0036D4                     __end_of_OSC_init:
  5921                           	opt stack 0
  5922                           tblptru	equ	0xFF8
  5923                           tblptrh	equ	0xFF7
  5924                           tblptrl	equ	0xFF6
  5925                           tablat	equ	0xFF5
  5926                           prodh	equ	0xFF4
  5927                           prodl	equ	0xFF3
  5928                           intcon	equ	0xFF2
  5929                           intcon2	equ	0xFF1
  5930                           postinc0	equ	0xFEE
  5931                           wreg	equ	0xFE8
  5932                           indf1	equ	0xFE7
  5933                           postinc1	equ	0xFE6
  5934                           postdec1	equ	0xFE5
  5935                           fsr1h	equ	0xFE2
  5936                           fsr1l	equ	0xFE1
  5937                           indf2	equ	0xFDF
  5938                           postinc2	equ	0xFDE
  5939                           postdec2	equ	0xFDD
  5940                           fsr2h	equ	0xFDA
  5941                           fsr2l	equ	0xFD9
  5942                           status	equ	0xFD8
  5943                           
  5944 ;; *************** function _ADC_init *****************
  5945 ;; Defined at:
  5946 ;;		line 149 in file "../My_header\My_header.h"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  p_ref           1    wreg     unsigned char 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;  p_ref           1    0[BANK0 ] unsigned char 
  5951 ;; Return value:  Size  Location     Type
  5952 ;;		None               void
  5953 ;; Registers used:
  5954 ;;		wreg, status,2
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5963 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5964 ;;Total ram usage:        1 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    5
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_main_init
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text26
  5975  003642                     __ptext26:
  5976                           	opt stack 0
  5977  003642                     _ADC_init:
  5978                           	opt stack 24
  5979                           
  5980                           ;incstack = 0
  5981                           ;ADC_init@p_ref stored from wreg
  5982  003642  0100               	movlb	0	; () banked
  5983  003644  6F60               	movwf	ADC_init@p_ref& (0+255),b
  5984                           
  5985                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  5986  003646  9EC2               	bcf	4034,7,c	;volatile
  5987                           
  5988                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  5989  003648  0100               	movlb	0	; () banked
  5990  00364A  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
  5991  00364C  D002               	bra	u4715
  5992  00364E  9CC2               	bcf	4034,6,c	;volatile
  5993  003650  D001               	bra	u4716
  5994  003652                     u4715:
  5995  003652  8CC2               	bsf	4034,6,c	;volatile
  5996  003654                     u4716:
  5997                           
  5998                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  5999  003654  8EC1               	bsf	4033,7,c	;volatile
  6000                           
  6001                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  6002  003656  9CC1               	bcf	4033,6,c	;volatile
  6003                           
  6004                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  6005  003658  50C1               	movf	4033,w,c	;volatile
  6006  00365A  0BF8               	andlw	-8
  6007  00365C  0906               	iorlw	6
  6008  00365E  6EC1               	movwf	4033,c	;volatile
  6009  003660  0012               	return		;funcret
  6010  003662                     __end_of_ADC_init:
  6011                           	opt stack 0
  6012                           tblptru	equ	0xFF8
  6013                           tblptrh	equ	0xFF7
  6014                           tblptrl	equ	0xFF6
  6015                           tablat	equ	0xFF5
  6016                           prodh	equ	0xFF4
  6017                           prodl	equ	0xFF3
  6018                           intcon	equ	0xFF2
  6019                           intcon2	equ	0xFF1
  6020                           postinc0	equ	0xFEE
  6021                           wreg	equ	0xFE8
  6022                           indf1	equ	0xFE7
  6023                           postinc1	equ	0xFE6
  6024                           postdec1	equ	0xFE5
  6025                           fsr1h	equ	0xFE2
  6026                           fsr1l	equ	0xFE1
  6027                           indf2	equ	0xFDF
  6028                           postinc2	equ	0xFDE
  6029                           postdec2	equ	0xFDD
  6030                           fsr2h	equ	0xFDA
  6031                           fsr2l	equ	0xFD9
  6032                           status	equ	0xFD8
  6033                           
  6034 ;; *************** function ___llmod *****************
  6035 ;; Defined at:
  6036 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  dividend        4    0[BANK0 ] unsigned long 
  6039 ;;  divisor         4    4[BANK0 ] unsigned long 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;  counter         1    8[BANK0 ] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  4    0[BANK0 ] unsigned long 
  6044 ;; Registers used:
  6045 ;;		wreg, status,2, status,0
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6051 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6055 ;;Total ram usage:        9 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:    5
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		_main
  6062 ;;		_my_utoa32
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text27
  6067  002DFA                     __ptext27:
  6068                           	opt stack 0
  6069  002DFA                     ___llmod:
  6070                           	opt stack 25
  6071                           
  6072                           ;incstack = 0
  6073  002DFA  0100               	movlb	0	; () banked
  6074  002DFC  5164               	movf	___llmod@divisor& (0+255),w,b
  6075  002DFE  0100               	movlb	0	; () banked
  6076  002E00  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6077  002E02  0100               	movlb	0	; () banked
  6078  002E04  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6079  002E06  0100               	movlb	0	; () banked
  6080  002E08  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6081  002E0A  B4D8               	btfsc	status,2,c
  6082  002E0C  D03A               	goto	l1019
  6083                           
  6084                           ; BSR set to: 0
  6085  002E0E  0E01               	movlw	1
  6086  002E10  0100               	movlb	0	; () banked
  6087  002E12  6F68               	movwf	___llmod@counter& (0+255),b
  6088  002E14  D008               	goto	l5079
  6089  002E16                     l5077:
  6090                           
  6091                           ; BSR set to: 0
  6092  002E16  0100               	movlb	0	; () banked
  6093  002E18  90D8               	bcf	status,0,c
  6094  002E1A  3764               	rlcf	___llmod@divisor& (0+255),f,b
  6095  002E1C  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6096  002E1E  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6097  002E20  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6098  002E22  0100               	movlb	0	; () banked
  6099  002E24  2B68               	incf	___llmod@counter& (0+255),f,b
  6100  002E26                     l5079:
  6101                           
  6102                           ; BSR set to: 0
  6103  002E26  0100               	movlb	0	; () banked
  6104  002E28  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6105  002E2A  D7F5               	goto	l5077
  6106  002E2C                     l5081:
  6107                           
  6108                           ; BSR set to: 0
  6109  002E2C  0100               	movlb	0	; () banked
  6110  002E2E  5164               	movf	___llmod@divisor& (0+255),w,b
  6111  002E30  0100               	movlb	0	; () banked
  6112  002E32  5D60               	subwf	___llmod@dividend& (0+255),w,b
  6113  002E34  0100               	movlb	0	; () banked
  6114  002E36  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  6115  002E38  0100               	movlb	0	; () banked
  6116  002E3A  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6117  002E3C  0100               	movlb	0	; () banked
  6118  002E3E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  6119  002E40  0100               	movlb	0	; () banked
  6120  002E42  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6121  002E44  0100               	movlb	0	; () banked
  6122  002E46  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  6123  002E48  0100               	movlb	0	; () banked
  6124  002E4A  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6125  002E4C  A0D8               	btfss	status,0,c
  6126  002E4E  D010               	goto	l5085
  6127                           
  6128                           ; BSR set to: 0
  6129  002E50  0100               	movlb	0	; () banked
  6130  002E52  5164               	movf	___llmod@divisor& (0+255),w,b
  6131  002E54  0100               	movlb	0	; () banked
  6132  002E56  5F60               	subwf	___llmod@dividend& (0+255),f,b
  6133  002E58  0100               	movlb	0	; () banked
  6134  002E5A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  6135  002E5C  0100               	movlb	0	; () banked
  6136  002E5E  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6137  002E60  0100               	movlb	0	; () banked
  6138  002E62  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  6139  002E64  0100               	movlb	0	; () banked
  6140  002E66  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6141  002E68  0100               	movlb	0	; () banked
  6142  002E6A  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  6143  002E6C  0100               	movlb	0	; () banked
  6144  002E6E  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6145  002E70                     l5085:
  6146                           
  6147                           ; BSR set to: 0
  6148  002E70  0100               	movlb	0	; () banked
  6149  002E72  90D8               	bcf	status,0,c
  6150  002E74  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6151  002E76  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6152  002E78  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6153  002E7A  3364               	rrcf	___llmod@divisor& (0+255),f,b
  6154                           
  6155                           ; BSR set to: 0
  6156  002E7C  0100               	movlb	0	; () banked
  6157  002E7E  2F68               	decfsz	___llmod@counter& (0+255),f,b
  6158  002E80  D7D5               	goto	l5081
  6159  002E82                     l1019:
  6160                           
  6161                           ; BSR set to: 0
  6162  002E82  C060  F060         	movff	___llmod@dividend,?___llmod
  6163  002E86  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  6164  002E8A  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  6165  002E8E  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  6166                           
  6167                           ; BSR set to: 0
  6168  002E92  0012               	return		;funcret
  6169  002E94                     __end_of___llmod:
  6170                           	opt stack 0
  6171                           tblptru	equ	0xFF8
  6172                           tblptrh	equ	0xFF7
  6173                           tblptrl	equ	0xFF6
  6174                           tablat	equ	0xFF5
  6175                           prodh	equ	0xFF4
  6176                           prodl	equ	0xFF3
  6177                           intcon	equ	0xFF2
  6178                           intcon2	equ	0xFF1
  6179                           postinc0	equ	0xFEE
  6180                           wreg	equ	0xFE8
  6181                           indf1	equ	0xFE7
  6182                           postinc1	equ	0xFE6
  6183                           postdec1	equ	0xFE5
  6184                           fsr1h	equ	0xFE2
  6185                           fsr1l	equ	0xFE1
  6186                           indf2	equ	0xFDF
  6187                           postinc2	equ	0xFDE
  6188                           postdec2	equ	0xFDD
  6189                           fsr2h	equ	0xFDA
  6190                           fsr2l	equ	0xFD9
  6191                           status	equ	0xFD8
  6192                           
  6193 ;; *************** function _RTCC_loop *****************
  6194 ;; Defined at:
  6195 ;;		line 387 in file "../My_header\My_RTCC.h"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;		None
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;		None               void
  6202 ;; Registers used:
  6203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6213 ;;Total ram usage:        0 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    9
  6216 ;; This function calls:
  6217 ;;		_RTCC_from_RTCC
  6218 ;; This function is called by:
  6219 ;;		_main
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text28
  6224  003458                     __ptext28:
  6225                           	opt stack 0
  6226  003458                     _RTCC_loop:
  6227                           	opt stack 21
  6228  003458                     l459:
  6229  003458  010F               	movlb	15	; () banked
  6230  00345A  B93F               	btfsc	63,4,b	;volatile
  6231  00345C  D7FD               	goto	l459
  6232                           
  6233                           ; BSR set to: 15
  6234                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
  6235                           
  6236                           ; BSR set to: 15
  6237  00345E  0E00               	movlw	0
  6238  003460  B73F               	btfsc	63,3,b	;volatile
  6239  003462  0E01               	movlw	1
  6240  003464  0100               	movlb	0	; () banked
  6241  003466  6FBE               	movwf	_halfsec& (0+255),b
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
  6245  003468  0100               	movlb	0	; () banked
  6246  00346A  51BE               	movf	_halfsec& (0+255),w,b
  6247  00346C  0100               	movlb	0	; () banked
  6248  00346E  19BD               	xorwf	RTCC_loop@prev_halfsec& (0+255),w,b
  6249  003470  B4D8               	btfsc	status,2,c
  6250  003472  0012               	return	
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
  6254  003474  C0BE  F0BD         	movff	_halfsec,RTCC_loop@prev_halfsec
  6255                           
  6256                           ;My_header\My_RTCC.h: 393: colon = halfsec;
  6257  003478  C0BE  F027         	movff	_halfsec,_colon
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
  6261  00347C  0E01               	movlw	1
  6262  00347E  0100               	movlb	0	; () banked
  6263  003480  6FC0               	movwf	_time_change_flag& (0+255),b
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
  6267  003482  0EC2               	movlw	low _caltime_now
  6268  003484  0100               	movlb	0	; () banked
  6269  003486  6F87               	movwf	RTCC_from_RTCC@ct& (0+255),b
  6270  003488  0E00               	movlw	high _caltime_now
  6271  00348A  0100               	movlb	0	; () banked
  6272  00348C  6F88               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  6273  00348E  0EC9               	movlw	low _epoch_now
  6274  003490  0100               	movlb	0	; () banked
  6275  003492  6F89               	movwf	RTCC_from_RTCC@ep& (0+255),b
  6276  003494  0E00               	movlw	high _epoch_now
  6277  003496  0100               	movlb	0	; () banked
  6278  003498  6F8A               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  6279  00349A  ECDE  F01A         	call	_RTCC_from_RTCC	;wreg free
  6280  00349E  0012               	return	
  6281  0034A0                     __end_of_RTCC_loop:
  6282                           	opt stack 0
  6283                           tblptru	equ	0xFF8
  6284                           tblptrh	equ	0xFF7
  6285                           tblptrl	equ	0xFF6
  6286                           tablat	equ	0xFF5
  6287                           prodh	equ	0xFF4
  6288                           prodl	equ	0xFF3
  6289                           intcon	equ	0xFF2
  6290                           intcon2	equ	0xFF1
  6291                           postinc0	equ	0xFEE
  6292                           wreg	equ	0xFE8
  6293                           indf1	equ	0xFE7
  6294                           postinc1	equ	0xFE6
  6295                           postdec1	equ	0xFE5
  6296                           fsr1h	equ	0xFE2
  6297                           fsr1l	equ	0xFE1
  6298                           indf2	equ	0xFDF
  6299                           postinc2	equ	0xFDE
  6300                           postdec2	equ	0xFDD
  6301                           fsr2h	equ	0xFDA
  6302                           fsr2l	equ	0xFD9
  6303                           status	equ	0xFD8
  6304                           
  6305 ;; *************** function _RTCC_from_RTCC *****************
  6306 ;; Defined at:
  6307 ;;		line 231 in file "../My_header\My_RTCC.h"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  ct              2   39[BANK0 ] PTR struct .
  6310 ;;		 -> caltime_now(7), 
  6311 ;;  ep              2   41[BANK0 ] PTR unsigned long 
  6312 ;;		 -> epoch_now(4), 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;		None
  6315 ;; Return value:  Size  Location     Type
  6316 ;;		None               void
  6317 ;; Registers used:
  6318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6327 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6328 ;;Total ram usage:        4 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:    8
  6331 ;; This function calls:
  6332 ;;		_RTCC_to_caltime
  6333 ;;		_caltime_to_epoch
  6334 ;; This function is called by:
  6335 ;;		_RTCC_loop
  6336 ;;		_main
  6337 ;;		_RTCC_adjust_time_inc
  6338 ;;		_RTCC_adjust_time_dec
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text29
  6343  0035BC                     __ptext29:
  6344                           	opt stack 0
  6345  0035BC                     _RTCC_from_RTCC:
  6346                           	opt stack 21
  6347                           
  6348                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  6349                           
  6350                           ;incstack = 0
  6351  0035BC  C087  F062         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  6352  0035C0  C088  F063         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  6353  0035C4  ECFE  F014         	call	_RTCC_to_caltime	;wreg free
  6354                           
  6355                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  6356  0035C8  C087  F078         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  6357  0035CC  C088  F079         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  6358  0035D0  C089  F07A         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  6359  0035D4  C08A  F07B         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  6360  0035D8  ECB6  F00B         	call	_caltime_to_epoch	;wreg free
  6361  0035DC  0012               	return		;funcret
  6362  0035DE                     __end_of_RTCC_from_RTCC:
  6363                           	opt stack 0
  6364                           tblptru	equ	0xFF8
  6365                           tblptrh	equ	0xFF7
  6366                           tblptrl	equ	0xFF6
  6367                           tablat	equ	0xFF5
  6368                           prodh	equ	0xFF4
  6369                           prodl	equ	0xFF3
  6370                           intcon	equ	0xFF2
  6371                           intcon2	equ	0xFF1
  6372                           postinc0	equ	0xFEE
  6373                           wreg	equ	0xFE8
  6374                           indf1	equ	0xFE7
  6375                           postinc1	equ	0xFE6
  6376                           postdec1	equ	0xFE5
  6377                           fsr1h	equ	0xFE2
  6378                           fsr1l	equ	0xFE1
  6379                           indf2	equ	0xFDF
  6380                           postinc2	equ	0xFDE
  6381                           postdec2	equ	0xFDD
  6382                           fsr2h	equ	0xFDA
  6383                           fsr2l	equ	0xFD9
  6384                           status	equ	0xFD8
  6385                           
  6386 ;; *************** function _caltime_to_epoch *****************
  6387 ;; Defined at:
  6388 ;;		line 211 in file "../My_header\My_RTCC.h"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  ct              2   24[BANK0 ] PTR struct .
  6391 ;;		 -> caltime_now(7), 
  6392 ;;  ep              2   26[BANK0 ] PTR unsigned long 
  6393 ;;		 -> epoch_now(4), 
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;  month           1   38[BANK0 ] unsigned char 
  6396 ;;  month           1   33[BANK0 ] unsigned char 
  6397 ;;  year            1   32[BANK0 ] unsigned char 
  6398 ;;  epoch           4   34[BANK0 ] unsigned long 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;		None               void
  6401 ;; Registers used:
  6402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6408 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6409 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6410 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6411 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6412 ;;Total ram usage:       15 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    7
  6415 ;; This function calls:
  6416 ;;		___lmul
  6417 ;;		_month_length
  6418 ;; This function is called by:
  6419 ;;		_RTCC_from_RTCC
  6420 ;;		_RTCC_from_caltime
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text30
  6425  00176C                     __ptext30:
  6426                           	opt stack 0
  6427  00176C                     _caltime_to_epoch:
  6428                           	opt stack 21
  6429                           
  6430                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  6431                           
  6432                           ;incstack = 0
  6433  00176C  0E00               	movlw	0
  6434  00176E  0100               	movlb	0	; () banked
  6435  001770  6F82               	movwf	caltime_to_epoch@epoch& (0+255),b
  6436  001772  0E00               	movlw	0
  6437  001774  6F83               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  6438  001776  0E00               	movlw	0
  6439  001778  6F84               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  6440  00177A  0E00               	movlw	0
  6441  00177C  6F85               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  6442                           
  6443                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  6444  00177E  0E00               	movlw	0
  6445  001780  0100               	movlb	0	; () banked
  6446  001782  6F80               	movwf	caltime_to_epoch@year& (0+255),b
  6447  001784  D037               	goto	l4507
  6448  001786                     l4493:
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  6452  001786  0E01               	movlw	1
  6453  001788  0100               	movlb	0	; () banked
  6454  00178A  6F86               	movwf	caltime_to_epoch@month& (0+255),b
  6455  00178C                     l4495:
  6456                           
  6457                           ; BSR set to: 0
  6458  00178C  0E0C               	movlw	12
  6459  00178E  0100               	movlb	0	; () banked
  6460  001790  6586               	cpfsgt	caltime_to_epoch@month& (0+255),b
  6461  001792  D001               	goto	l4499
  6462  001794  D02D               	goto	l4505
  6463  001796                     l4499:
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  6467  001796  C086  F066         	movff	caltime_to_epoch@month,month_length@month
  6468  00179A  0100               	movlb	0	; () banked
  6469  00179C  5180               	movf	caltime_to_epoch@year& (0+255),w,b
  6470  00179E  EC0E  F011         	call	_month_length
  6471  0017A2  0100               	movlb	0	; () banked
  6472  0017A4  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6473  0017A6  0100               	movlb	0	; () banked
  6474  0017A8  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6475  0017AA  0100               	movlb	0	; () banked
  6476  0017AC  6F6C               	movwf	___lmul@multiplier& (0+255),b
  6477  0017AE  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
  6478  0017B0  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
  6479  0017B2  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
  6480  0017B4  0E80               	movlw	128
  6481  0017B6  0100               	movlb	0	; () banked
  6482  0017B8  6F70               	movwf	___lmul@multiplicand& (0+255),b
  6483  0017BA  0E51               	movlw	81
  6484  0017BC  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6485  0017BE  0E01               	movlw	1
  6486  0017C0  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6487  0017C2  0E00               	movlw	0
  6488  0017C4  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6489  0017C6  EC50  F018         	call	___lmul	;wreg free
  6490  0017CA  0100               	movlb	0	; () banked
  6491  0017CC  516C               	movf	?___lmul& (0+255),w,b
  6492  0017CE  0100               	movlb	0	; () banked
  6493  0017D0  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6494  0017D2  0100               	movlb	0	; () banked
  6495  0017D4  516D               	movf	(?___lmul+1)& (0+255),w,b
  6496  0017D6  0100               	movlb	0	; () banked
  6497  0017D8  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6498  0017DA  0100               	movlb	0	; () banked
  6499  0017DC  516E               	movf	(?___lmul+2)& (0+255),w,b
  6500  0017DE  0100               	movlb	0	; () banked
  6501  0017E0  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6502  0017E2  0100               	movlb	0	; () banked
  6503  0017E4  516F               	movf	(?___lmul+3)& (0+255),w,b
  6504  0017E6  0100               	movlb	0	; () banked
  6505  0017E8  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6506                           
  6507                           ; BSR set to: 0
  6508  0017EA  0100               	movlb	0	; () banked
  6509  0017EC  2B86               	incf	caltime_to_epoch@month& (0+255),f,b
  6510  0017EE  D7CE               	goto	l4495
  6511  0017F0                     l4505:
  6512                           
  6513                           ; BSR set to: 0
  6514  0017F0  0100               	movlb	0	; () banked
  6515  0017F2  2B80               	incf	caltime_to_epoch@year& (0+255),f,b
  6516  0017F4                     l4507:
  6517                           
  6518                           ; BSR set to: 0
  6519  0017F4  0100               	movlb	0	; () banked
  6520  0017F6  EE20 F006          	lfsr	2,6
  6521  0017FA  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6522  0017FC  26D9               	addwf	fsr2l,f,c
  6523  0017FE  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6524  001800  22DA               	addwfc	fsr2h,f,c
  6525  001802  50DE               	movf	postinc2,w,c
  6526  001804  0100               	movlb	0	; () banked
  6527  001806  5D80               	subwf	caltime_to_epoch@year& (0+255),w,b
  6528  001808  A0D8               	btfss	status,0,c
  6529  00180A  D7BD               	goto	l4493
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;My_header\My_RTCC.h: 216: }
  6533                           ;My_header\My_RTCC.h: 217: }
  6534                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  6535                           
  6536                           ; BSR set to: 0
  6537  00180C  0E01               	movlw	1
  6538  00180E  0100               	movlb	0	; () banked
  6539  001810  6F81               	movwf	caltime_to_epoch@month_2069& (0+255),b
  6540  001812  D032               	goto	l4515
  6541  001814                     l4511:
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  6545  001814  C081  F066         	movff	caltime_to_epoch@month_2069,month_length@month
  6546  001818  0100               	movlb	0	; () banked
  6547  00181A  EE20 F006          	lfsr	2,6
  6548  00181E  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6549  001820  26D9               	addwf	fsr2l,f,c
  6550  001822  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6551  001824  22DA               	addwfc	fsr2h,f,c
  6552  001826  50DF               	movf	indf2,w,c
  6553  001828  EC0E  F011         	call	_month_length
  6554  00182C  0100               	movlb	0	; () banked
  6555  00182E  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6556  001830  0100               	movlb	0	; () banked
  6557  001832  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6558  001834  0100               	movlb	0	; () banked
  6559  001836  6F6C               	movwf	___lmul@multiplier& (0+255),b
  6560  001838  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
  6561  00183A  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
  6562  00183C  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
  6563  00183E  0E80               	movlw	128
  6564  001840  0100               	movlb	0	; () banked
  6565  001842  6F70               	movwf	___lmul@multiplicand& (0+255),b
  6566  001844  0E51               	movlw	81
  6567  001846  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6568  001848  0E01               	movlw	1
  6569  00184A  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6570  00184C  0E00               	movlw	0
  6571  00184E  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6572  001850  EC50  F018         	call	___lmul	;wreg free
  6573  001854  0100               	movlb	0	; () banked
  6574  001856  516C               	movf	?___lmul& (0+255),w,b
  6575  001858  0100               	movlb	0	; () banked
  6576  00185A  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6577  00185C  0100               	movlb	0	; () banked
  6578  00185E  516D               	movf	(?___lmul+1)& (0+255),w,b
  6579  001860  0100               	movlb	0	; () banked
  6580  001862  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6581  001864  0100               	movlb	0	; () banked
  6582  001866  516E               	movf	(?___lmul+2)& (0+255),w,b
  6583  001868  0100               	movlb	0	; () banked
  6584  00186A  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6585  00186C  0100               	movlb	0	; () banked
  6586  00186E  516F               	movf	(?___lmul+3)& (0+255),w,b
  6587  001870  0100               	movlb	0	; () banked
  6588  001872  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6589                           
  6590                           ; BSR set to: 0
  6591  001874  0100               	movlb	0	; () banked
  6592  001876  2B81               	incf	caltime_to_epoch@month_2069& (0+255),f,b
  6593  001878                     l4515:
  6594                           
  6595                           ; BSR set to: 0
  6596  001878  0100               	movlb	0	; () banked
  6597  00187A  EE20 F005          	lfsr	2,5
  6598  00187E  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6599  001880  26D9               	addwf	fsr2l,f,c
  6600  001882  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6601  001884  22DA               	addwfc	fsr2h,f,c
  6602  001886  50DE               	movf	postinc2,w,c
  6603  001888  0100               	movlb	0	; () banked
  6604  00188A  5D81               	subwf	caltime_to_epoch@month_2069& (0+255),w,b
  6605  00188C  A0D8               	btfss	status,0,c
  6606  00188E  D7C2               	goto	l4511
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;My_header\My_RTCC.h: 220: }
  6610                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  6611                           
  6612                           ; BSR set to: 0
  6613  001890  0EFF               	movlw	255
  6614  001892  0100               	movlb	0	; () banked
  6615  001894  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6616  001896  0EFF               	movlw	255
  6617  001898  0100               	movlb	0	; () banked
  6618  00189A  6F7D               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  6619  00189C  0100               	movlb	0	; () banked
  6620  00189E  EE20 F004          	lfsr	2,4
  6621  0018A2  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6622  0018A4  26D9               	addwf	fsr2l,f,c
  6623  0018A6  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6624  0018A8  22DA               	addwfc	fsr2h,f,c
  6625  0018AA  50DF               	movf	indf2,w,c
  6626  0018AC  0100               	movlb	0	; () banked
  6627  0018AE  6F7E               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  6628  0018B0  6B7F               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  6629  0018B2  0100               	movlb	0	; () banked
  6630  0018B4  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6631  0018B6  0100               	movlb	0	; () banked
  6632  0018B8  277E               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  6633  0018BA  0100               	movlb	0	; () banked
  6634  0018BC  517D               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  6635  0018BE  0100               	movlb	0	; () banked
  6636  0018C0  237F               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  6637  0018C2  C07E  F06C         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  6638  0018C6  C07F  F06D         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  6639  0018CA  0100               	movlb	0	; () banked
  6640  0018CC  0E00               	movlw	0
  6641  0018CE  BF6D               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  6642  0018D0  0EFF               	movlw	-1
  6643  0018D2  6F6E               	movwf	(___lmul@multiplier+2)& (0+255),b
  6644  0018D4  6F6F               	movwf	(___lmul@multiplier+3)& (0+255),b
  6645  0018D6  0E80               	movlw	128
  6646  0018D8  0100               	movlb	0	; () banked
  6647  0018DA  6F70               	movwf	___lmul@multiplicand& (0+255),b
  6648  0018DC  0E51               	movlw	81
  6649  0018DE  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6650  0018E0  0E01               	movlw	1
  6651  0018E2  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6652  0018E4  0E00               	movlw	0
  6653  0018E6  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6654  0018E8  EC50  F018         	call	___lmul	;wreg free
  6655  0018EC  0100               	movlb	0	; () banked
  6656  0018EE  516C               	movf	?___lmul& (0+255),w,b
  6657  0018F0  0100               	movlb	0	; () banked
  6658  0018F2  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6659  0018F4  0100               	movlb	0	; () banked
  6660  0018F6  516D               	movf	(?___lmul+1)& (0+255),w,b
  6661  0018F8  0100               	movlb	0	; () banked
  6662  0018FA  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6663  0018FC  0100               	movlb	0	; () banked
  6664  0018FE  516E               	movf	(?___lmul+2)& (0+255),w,b
  6665  001900  0100               	movlb	0	; () banked
  6666  001902  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6667  001904  0100               	movlb	0	; () banked
  6668  001906  516F               	movf	(?___lmul+3)& (0+255),w,b
  6669  001908  0100               	movlb	0	; () banked
  6670  00190A  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6671                           
  6672                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  6673  00190C  0100               	movlb	0	; () banked
  6674  00190E  EE20 F002          	lfsr	2,2
  6675  001912  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6676  001914  26D9               	addwf	fsr2l,f,c
  6677  001916  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6678  001918  22DA               	addwfc	fsr2h,f,c
  6679  00191A  50DF               	movf	indf2,w,c
  6680  00191C  0100               	movlb	0	; () banked
  6681  00191E  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6682  001920  0100               	movlb	0	; () banked
  6683  001922  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6684  001924  0100               	movlb	0	; () banked
  6685  001926  6F6C               	movwf	___lmul@multiplier& (0+255),b
  6686  001928  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
  6687  00192A  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
  6688  00192C  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
  6689  00192E  0E10               	movlw	16
  6690  001930  0100               	movlb	0	; () banked
  6691  001932  6F70               	movwf	___lmul@multiplicand& (0+255),b
  6692  001934  0E0E               	movlw	14
  6693  001936  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6694  001938  0E00               	movlw	0
  6695  00193A  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6696  00193C  0E00               	movlw	0
  6697  00193E  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6698  001940  EC50  F018         	call	___lmul	;wreg free
  6699  001944  0100               	movlb	0	; () banked
  6700  001946  516C               	movf	?___lmul& (0+255),w,b
  6701  001948  0100               	movlb	0	; () banked
  6702  00194A  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6703  00194C  0100               	movlb	0	; () banked
  6704  00194E  516D               	movf	(?___lmul+1)& (0+255),w,b
  6705  001950  0100               	movlb	0	; () banked
  6706  001952  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6707  001954  0100               	movlb	0	; () banked
  6708  001956  516E               	movf	(?___lmul+2)& (0+255),w,b
  6709  001958  0100               	movlb	0	; () banked
  6710  00195A  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6711  00195C  0100               	movlb	0	; () banked
  6712  00195E  516F               	movf	(?___lmul+3)& (0+255),w,b
  6713  001960  0100               	movlb	0	; () banked
  6714  001962  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6715                           
  6716                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  6717  001964  0100               	movlb	0	; () banked
  6718  001966  EE20 F001          	lfsr	2,1
  6719  00196A  5178               	movf	caltime_to_epoch@ct& (0+255),w,b
  6720  00196C  26D9               	addwf	fsr2l,f,c
  6721  00196E  5179               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  6722  001970  22DA               	addwfc	fsr2h,f,c
  6723  001972  50DF               	movf	indf2,w,c
  6724  001974  0100               	movlb	0	; () banked
  6725  001976  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6726  001978  0100               	movlb	0	; () banked
  6727  00197A  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6728  00197C  0100               	movlb	0	; () banked
  6729  00197E  6F6C               	movwf	___lmul@multiplier& (0+255),b
  6730  001980  6B6D               	clrf	(___lmul@multiplier+1)& (0+255),b
  6731  001982  6B6E               	clrf	(___lmul@multiplier+2)& (0+255),b
  6732  001984  6B6F               	clrf	(___lmul@multiplier+3)& (0+255),b
  6733  001986  0E3C               	movlw	60
  6734  001988  0100               	movlb	0	; () banked
  6735  00198A  6F70               	movwf	___lmul@multiplicand& (0+255),b
  6736  00198C  0E00               	movlw	0
  6737  00198E  6F71               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6738  001990  0E00               	movlw	0
  6739  001992  6F72               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6740  001994  0E00               	movlw	0
  6741  001996  6F73               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6742  001998  EC50  F018         	call	___lmul	;wreg free
  6743  00199C  0100               	movlb	0	; () banked
  6744  00199E  516C               	movf	?___lmul& (0+255),w,b
  6745  0019A0  0100               	movlb	0	; () banked
  6746  0019A2  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6747  0019A4  0100               	movlb	0	; () banked
  6748  0019A6  516D               	movf	(?___lmul+1)& (0+255),w,b
  6749  0019A8  0100               	movlb	0	; () banked
  6750  0019AA  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6751  0019AC  0100               	movlb	0	; () banked
  6752  0019AE  516E               	movf	(?___lmul+2)& (0+255),w,b
  6753  0019B0  0100               	movlb	0	; () banked
  6754  0019B2  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6755  0019B4  0100               	movlb	0	; () banked
  6756  0019B6  516F               	movf	(?___lmul+3)& (0+255),w,b
  6757  0019B8  0100               	movlb	0	; () banked
  6758  0019BA  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  6762  0019BC  C078  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  6763  0019C0  C079  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  6764  0019C4  50DF               	movf	indf2,w,c
  6765  0019C6  0100               	movlb	0	; () banked
  6766  0019C8  6F7C               	movwf	??_caltime_to_epoch& (0+255),b
  6767  0019CA  0100               	movlb	0	; () banked
  6768  0019CC  517C               	movf	??_caltime_to_epoch& (0+255),w,b
  6769  0019CE  0100               	movlb	0	; () banked
  6770  0019D0  2782               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  6771  0019D2  0E00               	movlw	0
  6772  0019D4  2383               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  6773  0019D6  2384               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  6774  0019D8  2385               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  6778  0019DA  C07A  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  6779  0019DE  C07B  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  6780  0019E2  C082  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  6781  0019E6  C083  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  6782  0019EA  C084  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  6783  0019EE  C085  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  6784                           
  6785                           ; BSR set to: 0
  6786  0019F2  0012               	return		;funcret
  6787  0019F4                     __end_of_caltime_to_epoch:
  6788                           	opt stack 0
  6789                           tblptru	equ	0xFF8
  6790                           tblptrh	equ	0xFF7
  6791                           tblptrl	equ	0xFF6
  6792                           tablat	equ	0xFF5
  6793                           prodh	equ	0xFF4
  6794                           prodl	equ	0xFF3
  6795                           intcon	equ	0xFF2
  6796                           intcon2	equ	0xFF1
  6797                           postinc0	equ	0xFEE
  6798                           wreg	equ	0xFE8
  6799                           indf1	equ	0xFE7
  6800                           postinc1	equ	0xFE6
  6801                           postdec1	equ	0xFE5
  6802                           fsr1h	equ	0xFE2
  6803                           fsr1l	equ	0xFE1
  6804                           indf2	equ	0xFDF
  6805                           postinc2	equ	0xFDE
  6806                           postdec2	equ	0xFDD
  6807                           fsr2h	equ	0xFDA
  6808                           fsr2l	equ	0xFD9
  6809                           status	equ	0xFD8
  6810                           
  6811 ;; *************** function _RTCC_to_caltime *****************
  6812 ;; Defined at:
  6813 ;;		line 121 in file "../My_header\My_RTCC.h"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  ct              2    2[BANK0 ] PTR struct .
  6816 ;;		 -> caltime_now(7), 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;  dumy            1    4[BANK0 ] unsigned char 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;		None               void
  6821 ;; Registers used:
  6822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6831 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6832 ;;Total ram usage:        3 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    6
  6835 ;; This function calls:
  6836 ;;		_x_to_d
  6837 ;; This function is called by:
  6838 ;;		_RTCC_from_RTCC
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text31
  6843  0029FC                     __ptext31:
  6844                           	opt stack 0
  6845  0029FC                     _RTCC_to_caltime:
  6846                           	opt stack 22
  6847  0029FC                     l352:
  6848  0029FC  010F               	movlb	15	; () banked
  6849  0029FE  B93F               	btfsc	63,4,b	;volatile
  6850  002A00  D7FD               	goto	l352
  6851                           
  6852                           ; BSR set to: 15
  6853                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  6854  002A02  010F               	movlb	15	; () banked
  6855  002A04  813F               	bsf	63,0,b	;volatile
  6856                           
  6857                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  6858  002A06  010F               	movlb	15	; () banked
  6859  002A08  833F               	bsf	63,1,b	;volatile
  6860                           
  6861                           ; BSR set to: 15
  6862                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  6863  002A0A  0100               	movlb	0	; () banked
  6864  002A0C  EE20 F006          	lfsr	2,6
  6865  002A10  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  6866  002A12  26D9               	addwf	fsr2l,f,c
  6867  002A14  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  6868  002A16  22DA               	addwfc	fsr2h,f,c
  6869  002A18  010F               	movlb	15	; () banked
  6870  002A1A  513A               	movf	58,w,b	;volatile
  6871  002A1C  EC31  F01B         	call	_x_to_d
  6872  002A20  6EDF               	movwf	indf2,c
  6873                           
  6874                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  6875  002A22  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
  6876                           
  6877                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  6878  002A26  0100               	movlb	0	; () banked
  6879  002A28  EE20 F004          	lfsr	2,4
  6880  002A2C  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  6881  002A2E  26D9               	addwf	fsr2l,f,c
  6882  002A30  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  6883  002A32  22DA               	addwfc	fsr2h,f,c
  6884  002A34  010F               	movlb	15	; () banked
  6885  002A36  513A               	movf	58,w,b	;volatile
  6886  002A38  EC31  F01B         	call	_x_to_d
  6887  002A3C  6EDF               	movwf	indf2,c
  6888                           
  6889                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  6890  002A3E  0100               	movlb	0	; () banked
  6891  002A40  EE20 F005          	lfsr	2,5
  6892  002A44  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  6893  002A46  26D9               	addwf	fsr2l,f,c
  6894  002A48  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  6895  002A4A  22DA               	addwfc	fsr2h,f,c
  6896  002A4C  010F               	movlb	15	; () banked
  6897  002A4E  513B               	movf	59,w,b	;volatile
  6898  002A50  EC31  F01B         	call	_x_to_d
  6899  002A54  6EDF               	movwf	indf2,c
  6900                           
  6901                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  6902  002A56  0100               	movlb	0	; () banked
  6903  002A58  EE20 F002          	lfsr	2,2
  6904  002A5C  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  6905  002A5E  26D9               	addwf	fsr2l,f,c
  6906  002A60  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  6907  002A62  22DA               	addwfc	fsr2h,f,c
  6908  002A64  010F               	movlb	15	; () banked
  6909  002A66  513A               	movf	58,w,b	;volatile
  6910  002A68  EC31  F01B         	call	_x_to_d
  6911  002A6C  6EDF               	movwf	indf2,c
  6912                           
  6913                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  6914  002A6E  0100               	movlb	0	; () banked
  6915  002A70  EE20 F003          	lfsr	2,3
  6916  002A74  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  6917  002A76  26D9               	addwf	fsr2l,f,c
  6918  002A78  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  6919  002A7A  22DA               	addwfc	fsr2h,f,c
  6920  002A7C  010F               	movlb	15	; () banked
  6921  002A7E  513B               	movf	59,w,b	;volatile
  6922  002A80  EC31  F01B         	call	_x_to_d
  6923  002A84  6EDF               	movwf	indf2,c
  6924                           
  6925                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  6926  002A86  010F               	movlb	15	; () banked
  6927  002A88  513A               	movf	58,w,b	;volatile
  6928  002A8A  EC31  F01B         	call	_x_to_d
  6929  002A8E  C062  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  6930  002A92  C063  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  6931  002A96  6EDF               	movwf	indf2,c
  6932                           
  6933                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  6934  002A98  0100               	movlb	0	; () banked
  6935  002A9A  EE20 F001          	lfsr	2,1
  6936  002A9E  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
  6937  002AA0  26D9               	addwf	fsr2l,f,c
  6938  002AA2  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  6939  002AA4  22DA               	addwfc	fsr2h,f,c
  6940  002AA6  010F               	movlb	15	; () banked
  6941  002AA8  513B               	movf	59,w,b	;volatile
  6942  002AAA  EC31  F01B         	call	_x_to_d
  6943  002AAE  6EDF               	movwf	indf2,c
  6944  002AB0  0012               	return		;funcret
  6945  002AB2                     __end_of_RTCC_to_caltime:
  6946                           	opt stack 0
  6947                           tblptru	equ	0xFF8
  6948                           tblptrh	equ	0xFF7
  6949                           tblptrl	equ	0xFF6
  6950                           tablat	equ	0xFF5
  6951                           prodh	equ	0xFF4
  6952                           prodl	equ	0xFF3
  6953                           intcon	equ	0xFF2
  6954                           intcon2	equ	0xFF1
  6955                           postinc0	equ	0xFEE
  6956                           wreg	equ	0xFE8
  6957                           indf1	equ	0xFE7
  6958                           postinc1	equ	0xFE6
  6959                           postdec1	equ	0xFE5
  6960                           fsr1h	equ	0xFE2
  6961                           fsr1l	equ	0xFE1
  6962                           indf2	equ	0xFDF
  6963                           postinc2	equ	0xFDE
  6964                           postdec2	equ	0xFDD
  6965                           fsr2h	equ	0xFDA
  6966                           fsr2l	equ	0xFD9
  6967                           status	equ	0xFD8
  6968                           
  6969 ;; *************** function _x_to_d *****************
  6970 ;; Defined at:
  6971 ;;		line 81 in file "../My_header\My_RTCC.h"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  hex             1    wreg     unsigned char 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  hex             1    1[BANK0 ] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      unsigned char 
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0, prodl, prodh
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6988 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6989 ;;Total ram usage:        2 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; Hardware stack levels required when called:    5
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_RTCC_to_caltime
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text32
  7000  003662                     __ptext32:
  7001                           	opt stack 0
  7002  003662                     _x_to_d:
  7003                           	opt stack 22
  7004                           
  7005                           ;incstack = 0
  7006                           ;x_to_d@hex stored from wreg
  7007  003662  0100               	movlb	0	; () banked
  7008  003664  6F61               	movwf	x_to_d@hex& (0+255),b
  7009                           
  7010                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  7011  003666  C061  F060         	movff	x_to_d@hex,??_x_to_d
  7012  00366A  0E0F               	movlw	15
  7013  00366C  0100               	movlb	0	; () banked
  7014  00366E  1760               	andwf	??_x_to_d& (0+255),f,b
  7015  003670  0100               	movlb	0	; () banked
  7016  003672  3961               	swapf	x_to_d@hex& (0+255),w,b
  7017  003674  0B0F               	andlw	15
  7018  003676  0B0F               	andlw	15
  7019  003678  0D0A               	mullw	10
  7020  00367A  50F3               	movf	prodl,w,c
  7021  00367C  0100               	movlb	0	; () banked
  7022  00367E  2560               	addwf	??_x_to_d& (0+255),w,b
  7023  003680  0012               	return	
  7024  003682                     __end_of_x_to_d:
  7025                           	opt stack 0
  7026                           tblptru	equ	0xFF8
  7027                           tblptrh	equ	0xFF7
  7028                           tblptrl	equ	0xFF6
  7029                           tablat	equ	0xFF5
  7030                           prodh	equ	0xFF4
  7031                           prodl	equ	0xFF3
  7032                           intcon	equ	0xFF2
  7033                           intcon2	equ	0xFF1
  7034                           postinc0	equ	0xFEE
  7035                           wreg	equ	0xFE8
  7036                           indf1	equ	0xFE7
  7037                           postinc1	equ	0xFE6
  7038                           postdec1	equ	0xFE5
  7039                           fsr1h	equ	0xFE2
  7040                           fsr1l	equ	0xFE1
  7041                           indf2	equ	0xFDF
  7042                           postinc2	equ	0xFDE
  7043                           postdec2	equ	0xFDD
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function _RTCC_from_epoch *****************
  7049 ;; Defined at:
  7050 ;;		line 242 in file "../My_header\My_RTCC.h"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  ct              2   61[BANK0 ] PTR struct .
  7053 ;;		 -> caltime_now(7), 
  7054 ;;  ep              2   63[BANK0 ] PTR unsigned long 
  7055 ;;		 -> epoch_now(4), 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;		None
  7058 ;; Return value:  Size  Location     Type
  7059 ;;		None               void
  7060 ;; Registers used:
  7061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7067 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7070 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7071 ;;Total ram usage:        4 bytes
  7072 ;; Hardware stack levels used:    1
  7073 ;; Hardware stack levels required when called:    8
  7074 ;; This function calls:
  7075 ;;		_caltime_to_RTCC
  7076 ;;		_epoch_to_caltime
  7077 ;; This function is called by:
  7078 ;;		_main
  7079 ;;		_RTCC_adjust_time_inc
  7080 ;;		_RTCC_adjust_time_dec
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text33
  7085  0035DE                     __ptext33:
  7086                           	opt stack 0
  7087  0035DE                     _RTCC_from_epoch:
  7088                           	opt stack 22
  7089                           
  7090                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;incstack = 0
  7094  0035DE  C09D  F08D         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  7095  0035E2  C09E  F08E         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  7096  0035E6  C09F  F08F         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  7097  0035EA  C0A0  F090         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  7098  0035EE  EC3B  F00E         	call	_epoch_to_caltime	;wreg free
  7099                           
  7100                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  7101  0035F2  C09D  F069         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  7102  0035F6  C09E  F06A         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  7103  0035FA  EC51  F012         	call	_caltime_to_RTCC	;wreg free
  7104  0035FE  0012               	return		;funcret
  7105  003600                     __end_of_RTCC_from_epoch:
  7106                           	opt stack 0
  7107                           tblptru	equ	0xFF8
  7108                           tblptrh	equ	0xFF7
  7109                           tblptrl	equ	0xFF6
  7110                           tablat	equ	0xFF5
  7111                           prodh	equ	0xFF4
  7112                           prodl	equ	0xFF3
  7113                           intcon	equ	0xFF2
  7114                           intcon2	equ	0xFF1
  7115                           postinc0	equ	0xFEE
  7116                           wreg	equ	0xFE8
  7117                           indf1	equ	0xFE7
  7118                           postinc1	equ	0xFE6
  7119                           postdec1	equ	0xFE5
  7120                           fsr1h	equ	0xFE2
  7121                           fsr1l	equ	0xFE1
  7122                           indf2	equ	0xFDF
  7123                           postinc2	equ	0xFDE
  7124                           postdec2	equ	0xFDD
  7125                           fsr2h	equ	0xFDA
  7126                           fsr2l	equ	0xFD9
  7127                           status	equ	0xFD8
  7128                           
  7129 ;; *************** function _epoch_to_caltime *****************
  7130 ;; Defined at:
  7131 ;;		line 157 in file "../My_header\My_RTCC.h"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  ct              2   45[BANK0 ] PTR struct .
  7134 ;;		 -> caltime_now(7), 
  7135 ;;  ep              2   47[BANK0 ] PTR unsigned long 
  7136 ;;		 -> epoch_now(4), 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  num             4   57[BANK0 ] unsigned long 
  7139 ;;  day             2   53[BANK0 ] unsigned int 
  7140 ;;  day_since_ep    2   51[BANK0 ] unsigned int 
  7141 ;;  month           1   56[BANK0 ] unsigned char 
  7142 ;;  year            1   55[BANK0 ] unsigned char 
  7143 ;; Return value:  Size  Location     Type
  7144 ;;		None               void
  7145 ;; Registers used:
  7146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7153 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7154 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7155 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;Total ram usage:       16 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    7
  7159 ;; This function calls:
  7160 ;;		_get_quot_rem
  7161 ;;		_month_length
  7162 ;; This function is called by:
  7163 ;;		_RTCC_from_caltime
  7164 ;;		_RTCC_from_epoch
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           	psect	text34
  7169  001C76                     __ptext34:
  7170                           	opt stack 0
  7171  001C76                     _epoch_to_caltime:
  7172                           	opt stack 21
  7173                           
  7174                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  7175                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  7176                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  7177                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  7178                           ;My_header\My_RTCC.h: 164: uint16_t day;
  7179                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  7180                           
  7181                           ;incstack = 0
  7182  001C76  0E00               	movlw	0
  7183  001C78  0100               	movlb	0	; () banked
  7184  001C7A  6F97               	movwf	epoch_to_caltime@year& (0+255),b
  7185                           
  7186                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  7187  001C7C  0E01               	movlw	1
  7188  001C7E  0100               	movlb	0	; () banked
  7189  001C80  6F98               	movwf	epoch_to_caltime@month& (0+255),b
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;My_header\My_RTCC.h: 167: epoch_t num;
  7193                           ;My_header\My_RTCC.h: 169: num = *ep;
  7194  001C82  C08F  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7195  001C86  C090  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7196  001C8A  CFDE F099          	movff	postinc2,epoch_to_caltime@num
  7197  001C8E  CFDE F09A          	movff	postinc2,epoch_to_caltime@num+1
  7198  001C92  CFDE F09B          	movff	postinc2,epoch_to_caltime@num+2
  7199  001C96  CFDE F09C          	movff	postinc2,epoch_to_caltime@num+3
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  7203  001C9A  0E99               	movlw	low epoch_to_caltime@num
  7204  001C9C  0100               	movlb	0	; () banked
  7205  001C9E  6F85               	movwf	get_quot_rem@quot& (0+255),b
  7206  001CA0  0E00               	movlw	high epoch_to_caltime@num
  7207  001CA2  0100               	movlb	0	; () banked
  7208  001CA4  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7209  001CA6  0E3C               	movlw	60
  7210  001CA8  0100               	movlb	0	; () banked
  7211  001CAA  6F87               	movwf	get_quot_rem@div& (0+255),b
  7212  001CAC  ECE7  F011         	call	_get_quot_rem	;wreg free
  7213  001CB0  0100               	movlb	0	; () banked
  7214  001CB2  5185               	movf	?_get_quot_rem& (0+255),w,b
  7215  001CB4  C08D  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  7216  001CB8  C08E  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  7217  001CBC  6EDF               	movwf	indf2,c
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  7221  001CBE  0E99               	movlw	low epoch_to_caltime@num
  7222  001CC0  0100               	movlb	0	; () banked
  7223  001CC2  6F85               	movwf	get_quot_rem@quot& (0+255),b
  7224  001CC4  0E00               	movlw	high epoch_to_caltime@num
  7225  001CC6  0100               	movlb	0	; () banked
  7226  001CC8  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7227  001CCA  0E3C               	movlw	60
  7228  001CCC  0100               	movlb	0	; () banked
  7229  001CCE  6F87               	movwf	get_quot_rem@div& (0+255),b
  7230  001CD0  ECE7  F011         	call	_get_quot_rem	;wreg free
  7231  001CD4  0100               	movlb	0	; () banked
  7232  001CD6  EE20 F001          	lfsr	2,1
  7233  001CDA  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7234  001CDC  26D9               	addwf	fsr2l,f,c
  7235  001CDE  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7236  001CE0  22DA               	addwfc	fsr2h,f,c
  7237  001CE2  0100               	movlb	0	; () banked
  7238  001CE4  C085  FFDF         	movff	?_get_quot_rem,indf2
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  7242  001CE8  0E99               	movlw	low epoch_to_caltime@num
  7243  001CEA  0100               	movlb	0	; () banked
  7244  001CEC  6F85               	movwf	get_quot_rem@quot& (0+255),b
  7245  001CEE  0E00               	movlw	high epoch_to_caltime@num
  7246  001CF0  0100               	movlb	0	; () banked
  7247  001CF2  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7248  001CF4  0E18               	movlw	24
  7249  001CF6  0100               	movlb	0	; () banked
  7250  001CF8  6F87               	movwf	get_quot_rem@div& (0+255),b
  7251  001CFA  ECE7  F011         	call	_get_quot_rem	;wreg free
  7252  001CFE  0100               	movlb	0	; () banked
  7253  001D00  EE20 F002          	lfsr	2,2
  7254  001D04  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7255  001D06  26D9               	addwf	fsr2l,f,c
  7256  001D08  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7257  001D0A  22DA               	addwfc	fsr2h,f,c
  7258  001D0C  0100               	movlb	0	; () banked
  7259  001D0E  C085  FFDF         	movff	?_get_quot_rem,indf2
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;My_header\My_RTCC.h: 173: day = num;
  7263  001D12  C099  F095         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7264  001D16  C09A  F096         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  7268  001D1A  C095  F093         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7269  001D1E  C096  F094         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;My_header\My_RTCC.h: 176: num += 6;
  7273  001D22  0E06               	movlw	6
  7274  001D24  0100               	movlb	0	; () banked
  7275  001D26  2799               	addwf	epoch_to_caltime@num& (0+255),f,b
  7276  001D28  0E00               	movlw	0
  7277  001D2A  239A               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7278  001D2C  239B               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7279  001D2E  239C               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  7283  001D30  0E99               	movlw	low epoch_to_caltime@num
  7284  001D32  0100               	movlb	0	; () banked
  7285  001D34  6F85               	movwf	get_quot_rem@quot& (0+255),b
  7286  001D36  0E00               	movlw	high epoch_to_caltime@num
  7287  001D38  0100               	movlb	0	; () banked
  7288  001D3A  6F86               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7289  001D3C  0E07               	movlw	7
  7290  001D3E  0100               	movlb	0	; () banked
  7291  001D40  6F87               	movwf	get_quot_rem@div& (0+255),b
  7292  001D42  ECE7  F011         	call	_get_quot_rem	;wreg free
  7293  001D46  0100               	movlb	0	; () banked
  7294  001D48  EE20 F003          	lfsr	2,3
  7295  001D4C  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7296  001D4E  26D9               	addwf	fsr2l,f,c
  7297  001D50  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7298  001D52  22DA               	addwfc	fsr2h,f,c
  7299  001D54  0100               	movlb	0	; () banked
  7300  001D56  C085  FFDF         	movff	?_get_quot_rem,indf2
  7301                           
  7302                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  7303  001D5A  D03F               	goto	l4479
  7304  001D5C                     l371:
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  7308  001D5C  848A               	bsf	3978,2,c	;volatile
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  7312  001D5E  C098  F066         	movff	epoch_to_caltime@month,month_length@month
  7313  001D62  0100               	movlb	0	; () banked
  7314  001D64  5197               	movf	epoch_to_caltime@year& (0+255),w,b
  7315  001D66  EC0E  F011         	call	_month_length
  7316  001D6A  0100               	movlb	0	; () banked
  7317  001D6C  6F91               	movwf	??_epoch_to_caltime& (0+255),b
  7318  001D6E  6B92               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7319  001D70  0100               	movlb	0	; () banked
  7320  001D72  1F91               	comf	??_epoch_to_caltime& (0+255),f,b
  7321  001D74  1F92               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7322  001D76  4B91               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7323  001D78  2B92               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7324  001D7A  0100               	movlb	0	; () banked
  7325  001D7C  5195               	movf	epoch_to_caltime@day& (0+255),w,b
  7326  001D7E  0100               	movlb	0	; () banked
  7327  001D80  2591               	addwf	??_epoch_to_caltime& (0+255),w,b
  7328  001D82  0100               	movlb	0	; () banked
  7329  001D84  6F95               	movwf	epoch_to_caltime@day& (0+255),b
  7330  001D86  0100               	movlb	0	; () banked
  7331  001D88  5196               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7332  001D8A  0100               	movlb	0	; () banked
  7333  001D8C  2192               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7334  001D8E  0100               	movlb	0	; () banked
  7335  001D90  6F96               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  7339  001D92  0E0C               	movlw	12
  7340  001D94  0100               	movlb	0	; () banked
  7341  001D96  1998               	xorwf	epoch_to_caltime@month& (0+255),w,b
  7342  001D98  A4D8               	btfss	status,2,c
  7343  001D9A  D019               	goto	l4473
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;My_header\My_RTCC.h: 190: month = 1;
  7347  001D9C  0E01               	movlw	1
  7348  001D9E  0100               	movlb	0	; () banked
  7349  001DA0  6F98               	movwf	epoch_to_caltime@month& (0+255),b
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;My_header\My_RTCC.h: 191: year++;
  7353  001DA2  0100               	movlb	0	; () banked
  7354  001DA4  2B97               	incf	epoch_to_caltime@year& (0+255),f,b
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  7358  001DA6  0E63               	movlw	99
  7359  001DA8  0100               	movlb	0	; () banked
  7360  001DAA  6597               	cpfsgt	epoch_to_caltime@year& (0+255),b
  7361  001DAC  D012               	goto	l4475
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  7365  001DAE  C08F  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7366  001DB2  C090  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7367  001DB6  0E80               	movlw	128
  7368  001DB8  5EDE               	subwf	postinc2,f,c
  7369  001DBA  0E13               	movlw	19
  7370  001DBC  5ADE               	subwfb	postinc2,f,c
  7371  001DBE  0E19               	movlw	25
  7372  001DC0  5ADE               	subwfb	postinc2,f,c
  7373  001DC2  0EBC               	movlw	188
  7374  001DC4  5ADE               	subwfb	postinc2,f,c
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;My_header\My_RTCC.h: 195: year = 0;
  7378  001DC6  0E00               	movlw	0
  7379  001DC8  0100               	movlb	0	; () banked
  7380  001DCA  6F97               	movwf	epoch_to_caltime@year& (0+255),b
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;My_header\My_RTCC.h: 196: }
  7384                           ;My_header\My_RTCC.h: 197: } else {
  7385  001DCC  D002               	goto	l4475
  7386  001DCE                     l4473:
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;My_header\My_RTCC.h: 198: month++;
  7390  001DCE  0100               	movlb	0	; () banked
  7391  001DD0  2B98               	incf	epoch_to_caltime@month& (0+255),f,b
  7392  001DD2                     l4475:
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;My_header\My_RTCC.h: 199: }
  7396                           ;My_header\My_RTCC.h: 200: month_cache = month;
  7397  001DD2  C098  F0D3         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;My_header\My_RTCC.h: 201: year_cache = year;
  7401  001DD6  C097  F0C1         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  7402  001DDA                     l4479:
  7403                           
  7404                           ; BSR set to: 0
  7405  001DDA  C098  F066         	movff	epoch_to_caltime@month,month_length@month
  7406  001DDE  0100               	movlb	0	; () banked
  7407  001DE0  5197               	movf	epoch_to_caltime@year& (0+255),w,b
  7408  001DE2  EC0E  F011         	call	_month_length
  7409  001DE6  0100               	movlb	0	; () banked
  7410  001DE8  6F91               	movwf	??_epoch_to_caltime& (0+255),b
  7411  001DEA  0100               	movlb	0	; () banked
  7412  001DEC  5191               	movf	??_epoch_to_caltime& (0+255),w,b
  7413  001DEE  0100               	movlb	0	; () banked
  7414  001DF0  5D95               	subwf	epoch_to_caltime@day& (0+255),w,b
  7415  001DF2  0E00               	movlw	0
  7416  001DF4  5996               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  7417  001DF6  B0D8               	btfsc	status,0,c
  7418  001DF8  D7B1               	goto	l371
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;My_header\My_RTCC.h: 202: }
  7422                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  7423                           
  7424                           ; BSR set to: 0
  7425  001DFA  C095  F091         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  7426  001DFE  C096  F092         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  7427  001E02  0100               	movlb	0	; () banked
  7428  001E04  1F91               	comf	??_epoch_to_caltime& (0+255),f,b
  7429  001E06  1F92               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7430  001E08  4B91               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7431  001E0A  2B92               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7432  001E0C  0100               	movlb	0	; () banked
  7433  001E0E  5193               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  7434  001E10  0100               	movlb	0	; () banked
  7435  001E12  2591               	addwf	??_epoch_to_caltime& (0+255),w,b
  7436  001E14  0100               	movlb	0	; () banked
  7437  001E16  6FBB               	movwf	epoch_to_caltime@day_cache& (0+255),b
  7438  001E18  0100               	movlb	0	; () banked
  7439  001E1A  5194               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  7440  001E1C  0100               	movlb	0	; () banked
  7441  001E1E  2192               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7442  001E20  0100               	movlb	0	; () banked
  7443  001E22  6FBC               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;My_header\My_RTCC.h: 204: day++;
  7447  001E24  0100               	movlb	0	; () banked
  7448  001E26  4B95               	infsnz	epoch_to_caltime@day& (0+255),f,b
  7449  001E28  2B96               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  7453  001E2A  0100               	movlb	0	; () banked
  7454  001E2C  EE20 F006          	lfsr	2,6
  7455  001E30  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7456  001E32  26D9               	addwf	fsr2l,f,c
  7457  001E34  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7458  001E36  22DA               	addwfc	fsr2h,f,c
  7459  001E38  C097  FFDF         	movff	epoch_to_caltime@year,indf2
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  7463  001E3C  0100               	movlb	0	; () banked
  7464  001E3E  EE20 F005          	lfsr	2,5
  7465  001E42  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7466  001E44  26D9               	addwf	fsr2l,f,c
  7467  001E46  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7468  001E48  22DA               	addwfc	fsr2h,f,c
  7469  001E4A  C098  FFDF         	movff	epoch_to_caltime@month,indf2
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  7473  001E4E  0100               	movlb	0	; () banked
  7474  001E50  EE20 F004          	lfsr	2,4
  7475  001E54  518D               	movf	epoch_to_caltime@ct& (0+255),w,b
  7476  001E56  26D9               	addwf	fsr2l,f,c
  7477  001E58  518E               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7478  001E5A  22DA               	addwfc	fsr2h,f,c
  7479  001E5C  C095  FFDF         	movff	epoch_to_caltime@day,indf2
  7480                           
  7481                           ; BSR set to: 0
  7482  001E60  0012               	return		;funcret
  7483  001E62                     __end_of_epoch_to_caltime:
  7484                           	opt stack 0
  7485                           tblptru	equ	0xFF8
  7486                           tblptrh	equ	0xFF7
  7487                           tblptrl	equ	0xFF6
  7488                           tablat	equ	0xFF5
  7489                           prodh	equ	0xFF4
  7490                           prodl	equ	0xFF3
  7491                           intcon	equ	0xFF2
  7492                           intcon2	equ	0xFF1
  7493                           postinc0	equ	0xFEE
  7494                           wreg	equ	0xFE8
  7495                           indf1	equ	0xFE7
  7496                           postinc1	equ	0xFE6
  7497                           postdec1	equ	0xFE5
  7498                           fsr1h	equ	0xFE2
  7499                           fsr1l	equ	0xFE1
  7500                           indf2	equ	0xFDF
  7501                           postinc2	equ	0xFDE
  7502                           postdec2	equ	0xFDD
  7503                           fsr2h	equ	0xFDA
  7504                           fsr2l	equ	0xFD9
  7505                           status	equ	0xFD8
  7506                           
  7507 ;; *************** function _month_length *****************
  7508 ;; Defined at:
  7509 ;;		line 87 in file "../My_header\My_RTCC.h"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  year            1    wreg     unsigned char 
  7512 ;;  month           1    6[BANK0 ] unsigned char 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  year            1   11[BANK0 ] unsigned char 
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      unsigned char 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0, cstack
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7524 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7526 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7527 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7528 ;;Total ram usage:        6 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    6
  7531 ;; This function calls:
  7532 ;;		___awmod
  7533 ;; This function is called by:
  7534 ;;		_epoch_to_caltime
  7535 ;;		_caltime_to_epoch
  7536 ;;		_RTCC_adjust_time_inc
  7537 ;;		_RTCC_adjust_time_dec
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text35
  7542  00221C                     __ptext35:
  7543                           	opt stack 0
  7544  00221C                     _month_length:
  7545                           	opt stack 21
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;incstack = 0
  7549                           ;month_length@year stored from wreg
  7550  00221C  0100               	movlb	0	; () banked
  7551  00221E  6F6B               	movwf	month_length@year& (0+255),b
  7552                           
  7553                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  7554  002220  0E02               	movlw	2
  7555  002222  0100               	movlb	0	; () banked
  7556  002224  1966               	xorwf	month_length@month& (0+255),w,b
  7557  002226  A4D8               	btfss	status,2,c
  7558  002228  D03E               	goto	l4375
  7559                           
  7560                           ; BSR set to: 0
  7561  00222A  C06B  F060         	movff	month_length@year,___awmod@dividend
  7562  00222E  0100               	movlb	0	; () banked
  7563  002230  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7564  002232  0E00               	movlw	0
  7565  002234  0100               	movlb	0	; () banked
  7566  002236  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7567  002238  0E64               	movlw	100
  7568  00223A  6F62               	movwf	___awmod@divisor& (0+255),b
  7569  00223C  EC5C  F016         	call	___awmod	;wreg free
  7570  002240  0100               	movlb	0	; () banked
  7571  002242  5160               	movf	?___awmod& (0+255),w,b
  7572  002244  0100               	movlb	0	; () banked
  7573  002246  1161               	iorwf	(?___awmod+1)& (0+255),w,b
  7574  002248  A4D8               	btfss	status,2,c
  7575  00224A  D002               	goto	u4490
  7576  00224C  0E01               	movlw	1
  7577  00224E  D001               	goto	u4500
  7578  002250                     u4490:
  7579  002250  0E00               	movlw	0
  7580  002252                     u4500:
  7581  002252  0800               	sublw	0
  7582  002254  0100               	movlb	0	; () banked
  7583  002256  6F67               	movwf	??_month_length& (0+255),b
  7584  002258  C06B  F060         	movff	month_length@year,___awmod@dividend
  7585  00225C  0100               	movlb	0	; () banked
  7586  00225E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7587  002260  0E01               	movlw	1
  7588  002262  0100               	movlb	0	; () banked
  7589  002264  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7590  002266  0E90               	movlw	144
  7591  002268  6F62               	movwf	___awmod@divisor& (0+255),b
  7592  00226A  EC5C  F016         	call	___awmod	;wreg free
  7593  00226E  0100               	movlb	0	; () banked
  7594  002270  5160               	movf	?___awmod& (0+255),w,b
  7595  002272  0100               	movlb	0	; () banked
  7596  002274  1161               	iorwf	(?___awmod+1)& (0+255),w,b
  7597  002276  A4D8               	btfss	status,2,c
  7598  002278  D004               	goto	u4510
  7599  00227A  0100               	movlb	0	; () banked
  7600  00227C  6B68               	clrf	(??_month_length+1)& (0+255),b
  7601  00227E  2B68               	incf	(??_month_length+1)& (0+255),f,b
  7602  002280  D002               	goto	u4528
  7603  002282                     u4510:
  7604  002282  0100               	movlb	0	; () banked
  7605  002284  6B68               	clrf	(??_month_length+1)& (0+255),b
  7606  002286                     u4528:
  7607  002286  C06B  F069         	movff	month_length@year,??_month_length+2
  7608  00228A  0E03               	movlw	3
  7609  00228C  0100               	movlb	0	; () banked
  7610  00228E  1769               	andwf	(??_month_length+2)& (0+255),f,b
  7611  002290  A4D8               	btfss	status,2,c
  7612  002292  D002               	goto	u4530
  7613  002294  0E01               	movlw	1
  7614  002296  D001               	goto	u4540
  7615  002298                     u4530:
  7616  002298  0E00               	movlw	0
  7617  00229A                     u4540:
  7618  00229A  0100               	movlb	0	; () banked
  7619  00229C  2568               	addwf	(??_month_length+1)& (0+255),w,b
  7620  00229E  0100               	movlb	0	; () banked
  7621  0022A0  2567               	addwf	??_month_length& (0+255),w,b
  7622  0022A2  0F1C               	addlw	28
  7623                           
  7624                           ; BSR set to: 0
  7625                           
  7626                           ; BSR set to: 0
  7627  0022A4  0012               	return	
  7628  0022A6                     l4375:
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
  7632  0022A6  0100               	movlb	0	; () banked
  7633  0022A8  5166               	movf	month_length@month& (0+255),w,b
  7634  0022AA  0B01               	andlw	1
  7635  0022AC  0100               	movlb	0	; () banked
  7636  0022AE  6F67               	movwf	??_month_length& (0+255),b
  7637  0022B0  6B68               	clrf	(??_month_length+1)& (0+255),b
  7638  0022B2  0100               	movlb	0	; () banked
  7639  0022B4  1F67               	comf	??_month_length& (0+255),f,b
  7640  0022B6  1F68               	comf	(??_month_length+1)& (0+255),f,b
  7641  0022B8  4B67               	infsnz	??_month_length& (0+255),f,b
  7642  0022BA  2B68               	incf	(??_month_length+1)& (0+255),f,b
  7643  0022BC  0100               	movlb	0	; () banked
  7644  0022BE  5166               	movf	month_length@month& (0+255),w,b
  7645  0022C0  0100               	movlb	0	; () banked
  7646  0022C2  6F69               	movwf	(??_month_length+2)& (0+255),b
  7647  0022C4  6B6A               	clrf	(??_month_length+3)& (0+255),b
  7648  0022C6  0100               	movlb	0	; () banked
  7649  0022C8  5167               	movf	??_month_length& (0+255),w,b
  7650  0022CA  0100               	movlb	0	; () banked
  7651  0022CC  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
  7652  0022CE  0100               	movlb	0	; () banked
  7653  0022D0  5168               	movf	(??_month_length+1)& (0+255),w,b
  7654  0022D2  0100               	movlb	0	; () banked
  7655  0022D4  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
  7656  0022D6  0E0D               	movlw	13
  7657  0022D8  0100               	movlb	0	; () banked
  7658  0022DA  1769               	andwf	(??_month_length+2)& (0+255),f,b
  7659  0022DC  0E00               	movlw	0
  7660  0022DE  176A               	andwf	(??_month_length+3)& (0+255),f,b
  7661  0022E0  0E04               	movlw	4
  7662  0022E2  0100               	movlb	0	; () banked
  7663  0022E4  1969               	xorwf	(??_month_length+2)& (0+255),w,b
  7664  0022E6  0100               	movlb	0	; () banked
  7665  0022E8  116A               	iorwf	(??_month_length+3)& (0+255),w,b
  7666  0022EA  A4D8               	btfss	status,2,c
  7667  0022EC  D002               	goto	u4550
  7668  0022EE  0E01               	movlw	1
  7669  0022F0  D001               	goto	u4560
  7670  0022F2                     u4550:
  7671  0022F2  0E00               	movlw	0
  7672  0022F4                     u4560:
  7673  0022F4  0800               	sublw	0
  7674  0022F6  0F1F               	addlw	31
  7675                           
  7676                           ; BSR set to: 0
  7677  0022F8  0012               	return	
  7678  0022FA                     __end_of_month_length:
  7679                           	opt stack 0
  7680                           tblptru	equ	0xFF8
  7681                           tblptrh	equ	0xFF7
  7682                           tblptrl	equ	0xFF6
  7683                           tablat	equ	0xFF5
  7684                           prodh	equ	0xFF4
  7685                           prodl	equ	0xFF3
  7686                           intcon	equ	0xFF2
  7687                           intcon2	equ	0xFF1
  7688                           postinc0	equ	0xFEE
  7689                           wreg	equ	0xFE8
  7690                           indf1	equ	0xFE7
  7691                           postinc1	equ	0xFE6
  7692                           postdec1	equ	0xFE5
  7693                           fsr1h	equ	0xFE2
  7694                           fsr1l	equ	0xFE1
  7695                           indf2	equ	0xFDF
  7696                           postinc2	equ	0xFDE
  7697                           postdec2	equ	0xFDD
  7698                           fsr2h	equ	0xFDA
  7699                           fsr2l	equ	0xFD9
  7700                           status	equ	0xFD8
  7701                           
  7702 ;; *************** function ___awmod *****************
  7703 ;; Defined at:
  7704 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;  dividend        2    0[BANK0 ] int 
  7707 ;;  divisor         2    2[BANK0 ] int 
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;  sign            1    5[BANK0 ] unsigned char 
  7710 ;;  counter         1    4[BANK0 ] unsigned char 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  2    0[BANK0 ] int 
  7713 ;; Registers used:
  7714 ;;		wreg, status,2, status,0
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7720 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7721 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7723 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7724 ;;Total ram usage:        6 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    5
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_month_length
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text36
  7735  002CB8                     __ptext36:
  7736                           	opt stack 0
  7737  002CB8                     ___awmod:
  7738                           	opt stack 21
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;incstack = 0
  7742  002CB8  0E00               	movlw	0
  7743  002CBA  0100               	movlb	0	; () banked
  7744  002CBC  6F65               	movwf	___awmod@sign& (0+255),b
  7745                           
  7746                           ; BSR set to: 0
  7747  002CBE  0100               	movlb	0	; () banked
  7748  002CC0  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7749  002CC2  D008               	goto	l4263
  7750                           
  7751                           ; BSR set to: 0
  7752  002CC4  0100               	movlb	0	; () banked
  7753  002CC6  6D60               	negf	___awmod@dividend& (0+255),b
  7754  002CC8  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7755  002CCA  B0D8               	btfsc	status,0,c
  7756  002CCC  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7757                           
  7758                           ; BSR set to: 0
  7759  002CCE  0E01               	movlw	1
  7760  002CD0  0100               	movlb	0	; () banked
  7761  002CD2  6F65               	movwf	___awmod@sign& (0+255),b
  7762  002CD4                     l4263:
  7763                           
  7764                           ; BSR set to: 0
  7765  002CD4  0100               	movlb	0	; () banked
  7766  002CD6  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7767  002CD8  D005               	goto	l4267
  7768                           
  7769                           ; BSR set to: 0
  7770  002CDA  0100               	movlb	0	; () banked
  7771  002CDC  6D62               	negf	___awmod@divisor& (0+255),b
  7772  002CDE  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7773  002CE0  B0D8               	btfsc	status,0,c
  7774  002CE2  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7775  002CE4                     l4267:
  7776                           
  7777                           ; BSR set to: 0
  7778  002CE4  0100               	movlb	0	; () banked
  7779  002CE6  5162               	movf	___awmod@divisor& (0+255),w,b
  7780  002CE8  0100               	movlb	0	; () banked
  7781  002CEA  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7782  002CEC  B4D8               	btfsc	status,2,c
  7783  002CEE  D026               	goto	l4283
  7784                           
  7785                           ; BSR set to: 0
  7786  002CF0  0E01               	movlw	1
  7787  002CF2  0100               	movlb	0	; () banked
  7788  002CF4  6F64               	movwf	___awmod@counter& (0+255),b
  7789  002CF6  D006               	goto	l4273
  7790  002CF8                     l4271:
  7791                           
  7792                           ; BSR set to: 0
  7793  002CF8  0100               	movlb	0	; () banked
  7794  002CFA  90D8               	bcf	status,0,c
  7795  002CFC  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7796  002CFE  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7797  002D00  0100               	movlb	0	; () banked
  7798  002D02  2B64               	incf	___awmod@counter& (0+255),f,b
  7799  002D04                     l4273:
  7800                           
  7801                           ; BSR set to: 0
  7802  002D04  0100               	movlb	0	; () banked
  7803  002D06  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7804  002D08  D7F7               	goto	l4271
  7805  002D0A                     l4275:
  7806                           
  7807                           ; BSR set to: 0
  7808  002D0A  0100               	movlb	0	; () banked
  7809  002D0C  5162               	movf	___awmod@divisor& (0+255),w,b
  7810  002D0E  0100               	movlb	0	; () banked
  7811  002D10  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7812  002D12  0100               	movlb	0	; () banked
  7813  002D14  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7814  002D16  0100               	movlb	0	; () banked
  7815  002D18  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7816  002D1A  A0D8               	btfss	status,0,c
  7817  002D1C  D008               	goto	l4279
  7818                           
  7819                           ; BSR set to: 0
  7820  002D1E  0100               	movlb	0	; () banked
  7821  002D20  5162               	movf	___awmod@divisor& (0+255),w,b
  7822  002D22  0100               	movlb	0	; () banked
  7823  002D24  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7824  002D26  0100               	movlb	0	; () banked
  7825  002D28  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7826  002D2A  0100               	movlb	0	; () banked
  7827  002D2C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7828  002D2E                     l4279:
  7829                           
  7830                           ; BSR set to: 0
  7831  002D2E  0100               	movlb	0	; () banked
  7832  002D30  90D8               	bcf	status,0,c
  7833  002D32  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7834  002D34  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7835                           
  7836                           ; BSR set to: 0
  7837  002D36  0100               	movlb	0	; () banked
  7838  002D38  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7839  002D3A  D7E7               	goto	l4275
  7840  002D3C                     l4283:
  7841                           
  7842                           ; BSR set to: 0
  7843  002D3C  0100               	movlb	0	; () banked
  7844  002D3E  5165               	movf	___awmod@sign& (0+255),w,b
  7845  002D40  0100               	movlb	0	; () banked
  7846  002D42  B4D8               	btfsc	status,2,c
  7847  002D44  D005               	goto	l4287
  7848                           
  7849                           ; BSR set to: 0
  7850  002D46  0100               	movlb	0	; () banked
  7851  002D48  6D60               	negf	___awmod@dividend& (0+255),b
  7852  002D4A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7853  002D4C  B0D8               	btfsc	status,0,c
  7854  002D4E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7855  002D50                     l4287:
  7856                           
  7857                           ; BSR set to: 0
  7858  002D50  C060  F060         	movff	___awmod@dividend,?___awmod
  7859  002D54  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  7860  002D58  0012               	return	
  7861  002D5A                     __end_of___awmod:
  7862                           	opt stack 0
  7863                           tblptru	equ	0xFF8
  7864                           tblptrh	equ	0xFF7
  7865                           tblptrl	equ	0xFF6
  7866                           tablat	equ	0xFF5
  7867                           prodh	equ	0xFF4
  7868                           prodl	equ	0xFF3
  7869                           intcon	equ	0xFF2
  7870                           intcon2	equ	0xFF1
  7871                           postinc0	equ	0xFEE
  7872                           wreg	equ	0xFE8
  7873                           indf1	equ	0xFE7
  7874                           postinc1	equ	0xFE6
  7875                           postdec1	equ	0xFE5
  7876                           fsr1h	equ	0xFE2
  7877                           fsr1l	equ	0xFE1
  7878                           indf2	equ	0xFDF
  7879                           postinc2	equ	0xFDE
  7880                           postdec2	equ	0xFDD
  7881                           fsr2h	equ	0xFDA
  7882                           fsr2l	equ	0xFD9
  7883                           status	equ	0xFD8
  7884                           
  7885 ;; *************** function _get_quot_rem *****************
  7886 ;; Defined at:
  7887 ;;		line 112 in file "../My_header\My_RTCC.h"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;  quot            2   37[BANK0 ] PTR unsigned long 
  7890 ;;		 -> epoch_to_caltime@num(4), 
  7891 ;;  div             1   39[BANK0 ] unsigned char 
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;  num             4   41[BANK0 ] unsigned long 
  7894 ;; Return value:  Size  Location     Type
  7895 ;;                  4   37[BANK0 ] unsigned long 
  7896 ;; Registers used:
  7897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7898 ;; Tracked objects:
  7899 ;;		On entry : 0/0
  7900 ;;		On exit  : 0/0
  7901 ;;		Unchanged: 0/0
  7902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7904 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7906 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7907 ;;Total ram usage:        8 bytes
  7908 ;; Hardware stack levels used:    1
  7909 ;; Hardware stack levels required when called:    6
  7910 ;; This function calls:
  7911 ;;		___lldiv
  7912 ;;		___lmul
  7913 ;; This function is called by:
  7914 ;;		_epoch_to_caltime
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           	psect	text37
  7919  0023CE                     __ptext37:
  7920                           	opt stack 0
  7921  0023CE                     _get_quot_rem:
  7922                           	opt stack 21
  7923                           
  7924                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;incstack = 0
  7928  0023CE  C085  FFD9         	movff	get_quot_rem@quot,fsr2l
  7929  0023D2  C086  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7930  0023D6  CFDE F089          	movff	postinc2,get_quot_rem@num
  7931  0023DA  CFDE F08A          	movff	postinc2,get_quot_rem@num+1
  7932  0023DE  CFDE F08B          	movff	postinc2,get_quot_rem@num+2
  7933  0023E2  CFDE F08C          	movff	postinc2,get_quot_rem@num+3
  7934                           
  7935                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
  7936  0023E6  0100               	movlb	0	; () banked
  7937  0023E8  5187               	movf	get_quot_rem@div& (0+255),w,b
  7938  0023EA  0100               	movlb	0	; () banked
  7939  0023EC  6F7C               	movwf	___lldiv@divisor& (0+255),b
  7940  0023EE  6B7D               	clrf	(___lldiv@divisor+1)& (0+255),b
  7941  0023F0  6B7E               	clrf	(___lldiv@divisor+2)& (0+255),b
  7942  0023F2  6B7F               	clrf	(___lldiv@divisor+3)& (0+255),b
  7943  0023F4  C089  F078         	movff	get_quot_rem@num,___lldiv@dividend
  7944  0023F8  C08A  F079         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  7945  0023FC  C08B  F07A         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  7946  002400  C08C  F07B         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  7947  002404  EC42  F014         	call	___lldiv	;wreg free
  7948  002408  C085  FFD9         	movff	get_quot_rem@quot,fsr2l
  7949  00240C  C086  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7950  002410  0100               	movlb	0	; () banked
  7951  002412  C078  FFDE         	movff	?___lldiv,postinc2
  7952  002416  0100               	movlb	0	; () banked
  7953  002418  C079  FFDE         	movff	?___lldiv+1,postinc2
  7954  00241C  0100               	movlb	0	; () banked
  7955  00241E  C07A  FFDE         	movff	?___lldiv+2,postinc2
  7956  002422  0100               	movlb	0	; () banked
  7957  002424  C07B  FFDD         	movff	?___lldiv+3,postdec2
  7958  002428  52DD               	movf	postdec2,f,c
  7959  00242A  52DD               	movf	postdec2,f,c
  7960  00242C  CFDE F06C          	movff	postinc2,___lmul@multiplier
  7961  002430  CFDE F06D          	movff	postinc2,___lmul@multiplier+1
  7962  002434  CFDE F06E          	movff	postinc2,___lmul@multiplier+2
  7963  002438  CFDE F06F          	movff	postinc2,___lmul@multiplier+3
  7964  00243C  0100               	movlb	0	; () banked
  7965  00243E  5187               	movf	get_quot_rem@div& (0+255),w,b
  7966  002440  0100               	movlb	0	; () banked
  7967  002442  6F70               	movwf	___lmul@multiplicand& (0+255),b
  7968  002444  6B71               	clrf	(___lmul@multiplicand+1)& (0+255),b
  7969  002446  6B72               	clrf	(___lmul@multiplicand+2)& (0+255),b
  7970  002448  6B73               	clrf	(___lmul@multiplicand+3)& (0+255),b
  7971  00244A  EC50  F018         	call	___lmul	;wreg free
  7972  00244E  0100               	movlb	0	; () banked
  7973  002450  1F6C               	comf	?___lmul& (0+255),f,b
  7974  002452  0100               	movlb	0	; () banked
  7975  002454  1F6D               	comf	(?___lmul+1)& (0+255),f,b
  7976  002456  0100               	movlb	0	; () banked
  7977  002458  1F6E               	comf	(?___lmul+2)& (0+255),f,b
  7978  00245A  0100               	movlb	0	; () banked
  7979  00245C  1F6F               	comf	(?___lmul+3)& (0+255),f,b
  7980  00245E  0100               	movlb	0	; () banked
  7981  002460  2B6C               	incf	?___lmul& (0+255),f,b
  7982  002462  0E00               	movlw	0
  7983  002464  0100               	movlb	0	; () banked
  7984  002466  236D               	addwfc	(?___lmul+1)& (0+255),f,b
  7985  002468  0100               	movlb	0	; () banked
  7986  00246A  236E               	addwfc	(?___lmul+2)& (0+255),f,b
  7987  00246C  0100               	movlb	0	; () banked
  7988  00246E  236F               	addwfc	(?___lmul+3)& (0+255),f,b
  7989  002470  0100               	movlb	0	; () banked
  7990  002472  5189               	movf	get_quot_rem@num& (0+255),w,b
  7991  002474  0100               	movlb	0	; () banked
  7992  002476  256C               	addwf	?___lmul& (0+255),w,b
  7993  002478  0100               	movlb	0	; () banked
  7994  00247A  6F85               	movwf	?_get_quot_rem& (0+255),b
  7995  00247C  0100               	movlb	0	; () banked
  7996  00247E  518A               	movf	(get_quot_rem@num+1)& (0+255),w,b
  7997  002480  0100               	movlb	0	; () banked
  7998  002482  216D               	addwfc	(?___lmul+1)& (0+255),w,b
  7999  002484  0100               	movlb	0	; () banked
  8000  002486  6F86               	movwf	(?_get_quot_rem+1)& (0+255),b
  8001  002488  0100               	movlb	0	; () banked
  8002  00248A  518B               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8003  00248C  0100               	movlb	0	; () banked
  8004  00248E  216E               	addwfc	(?___lmul+2)& (0+255),w,b
  8005  002490  0100               	movlb	0	; () banked
  8006  002492  6F87               	movwf	(?_get_quot_rem+2)& (0+255),b
  8007  002494  0100               	movlb	0	; () banked
  8008  002496  518C               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8009  002498  0100               	movlb	0	; () banked
  8010  00249A  216F               	addwfc	(?___lmul+3)& (0+255),w,b
  8011  00249C  0100               	movlb	0	; () banked
  8012  00249E  6F88               	movwf	(?_get_quot_rem+3)& (0+255),b
  8013  0024A0  0012               	return	
  8014  0024A2                     __end_of_get_quot_rem:
  8015                           	opt stack 0
  8016                           tblptru	equ	0xFF8
  8017                           tblptrh	equ	0xFF7
  8018                           tblptrl	equ	0xFF6
  8019                           tablat	equ	0xFF5
  8020                           prodh	equ	0xFF4
  8021                           prodl	equ	0xFF3
  8022                           intcon	equ	0xFF2
  8023                           intcon2	equ	0xFF1
  8024                           postinc0	equ	0xFEE
  8025                           wreg	equ	0xFE8
  8026                           indf1	equ	0xFE7
  8027                           postinc1	equ	0xFE6
  8028                           postdec1	equ	0xFE5
  8029                           fsr1h	equ	0xFE2
  8030                           fsr1l	equ	0xFE1
  8031                           indf2	equ	0xFDF
  8032                           postinc2	equ	0xFDE
  8033                           postdec2	equ	0xFDD
  8034                           fsr2h	equ	0xFDA
  8035                           fsr2l	equ	0xFD9
  8036                           status	equ	0xFD8
  8037                           
  8038 ;; *************** function ___lmul *****************
  8039 ;; Defined at:
  8040 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  multiplier      4   12[BANK0 ] unsigned long 
  8043 ;;  multiplicand    4   16[BANK0 ] unsigned long 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  product         4   20[BANK0 ] unsigned long 
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  4   12[BANK0 ] unsigned long 
  8048 ;; Registers used:
  8049 ;;		wreg, status,2, status,0
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8055 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8056 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8058 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8059 ;;Total ram usage:       12 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    5
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_get_quot_rem
  8066 ;;		_caltime_to_epoch
  8067 ;;		_main
  8068 ;;		_RTCC_adjust_time_inc
  8069 ;;		_RTCC_adjust_time_dec
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text38
  8074  0030A0                     __ptext38:
  8075                           	opt stack 0
  8076  0030A0                     ___lmul:
  8077                           	opt stack 21
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;incstack = 0
  8081  0030A0  0E00               	movlw	0
  8082  0030A2  0100               	movlb	0	; () banked
  8083  0030A4  6F74               	movwf	___lmul@product& (0+255),b
  8084  0030A6  0E00               	movlw	0
  8085  0030A8  6F75               	movwf	(___lmul@product+1)& (0+255),b
  8086  0030AA  0E00               	movlw	0
  8087  0030AC  6F76               	movwf	(___lmul@product+2)& (0+255),b
  8088  0030AE  0E00               	movlw	0
  8089  0030B0  6F77               	movwf	(___lmul@product+3)& (0+255),b
  8090  0030B2                     l4203:
  8091                           
  8092                           ; BSR set to: 0
  8093  0030B2  0100               	movlb	0	; () banked
  8094  0030B4  A16C               	btfss	___lmul@multiplier& (0+255),0,b
  8095  0030B6  D010               	goto	l4207
  8096                           
  8097                           ; BSR set to: 0
  8098  0030B8  0100               	movlb	0	; () banked
  8099  0030BA  5170               	movf	___lmul@multiplicand& (0+255),w,b
  8100  0030BC  0100               	movlb	0	; () banked
  8101  0030BE  2774               	addwf	___lmul@product& (0+255),f,b
  8102  0030C0  0100               	movlb	0	; () banked
  8103  0030C2  5171               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  8104  0030C4  0100               	movlb	0	; () banked
  8105  0030C6  2375               	addwfc	(___lmul@product+1)& (0+255),f,b
  8106  0030C8  0100               	movlb	0	; () banked
  8107  0030CA  5172               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  8108  0030CC  0100               	movlb	0	; () banked
  8109  0030CE  2376               	addwfc	(___lmul@product+2)& (0+255),f,b
  8110  0030D0  0100               	movlb	0	; () banked
  8111  0030D2  5173               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  8112  0030D4  0100               	movlb	0	; () banked
  8113  0030D6  2377               	addwfc	(___lmul@product+3)& (0+255),f,b
  8114  0030D8                     l4207:
  8115                           
  8116                           ; BSR set to: 0
  8117  0030D8  0100               	movlb	0	; () banked
  8118  0030DA  90D8               	bcf	status,0,c
  8119  0030DC  3770               	rlcf	___lmul@multiplicand& (0+255),f,b
  8120  0030DE  3771               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  8121  0030E0  3772               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  8122  0030E2  3773               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  8123                           
  8124                           ; BSR set to: 0
  8125  0030E4  0100               	movlb	0	; () banked
  8126  0030E6  90D8               	bcf	status,0,c
  8127  0030E8  336F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  8128  0030EA  336E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  8129  0030EC  336D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  8130  0030EE  336C               	rrcf	___lmul@multiplier& (0+255),f,b
  8131  0030F0  0100               	movlb	0	; () banked
  8132  0030F2  516C               	movf	___lmul@multiplier& (0+255),w,b
  8133  0030F4  0100               	movlb	0	; () banked
  8134  0030F6  116D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  8135  0030F8  0100               	movlb	0	; () banked
  8136  0030FA  116E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  8137  0030FC  0100               	movlb	0	; () banked
  8138  0030FE  116F               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  8139  003100  A4D8               	btfss	status,2,c
  8140  003102  D7D7               	goto	l4203
  8141                           
  8142                           ; BSR set to: 0
  8143  003104  C074  F06C         	movff	___lmul@product,?___lmul
  8144  003108  C075  F06D         	movff	___lmul@product+1,?___lmul+1
  8145  00310C  C076  F06E         	movff	___lmul@product+2,?___lmul+2
  8146  003110  C077  F06F         	movff	___lmul@product+3,?___lmul+3
  8147                           
  8148                           ; BSR set to: 0
  8149  003114  0012               	return		;funcret
  8150  003116                     __end_of___lmul:
  8151                           	opt stack 0
  8152                           tblptru	equ	0xFF8
  8153                           tblptrh	equ	0xFF7
  8154                           tblptrl	equ	0xFF6
  8155                           tablat	equ	0xFF5
  8156                           prodh	equ	0xFF4
  8157                           prodl	equ	0xFF3
  8158                           intcon	equ	0xFF2
  8159                           intcon2	equ	0xFF1
  8160                           postinc0	equ	0xFEE
  8161                           wreg	equ	0xFE8
  8162                           indf1	equ	0xFE7
  8163                           postinc1	equ	0xFE6
  8164                           postdec1	equ	0xFE5
  8165                           fsr1h	equ	0xFE2
  8166                           fsr1l	equ	0xFE1
  8167                           indf2	equ	0xFDF
  8168                           postinc2	equ	0xFDE
  8169                           postdec2	equ	0xFDD
  8170                           fsr2h	equ	0xFDA
  8171                           fsr2l	equ	0xFD9
  8172                           status	equ	0xFD8
  8173                           
  8174 ;; *************** function ___lldiv *****************
  8175 ;; Defined at:
  8176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  dividend        4   24[BANK0 ] unsigned long 
  8179 ;;  divisor         4   28[BANK0 ] unsigned long 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  quotient        4   32[BANK0 ] unsigned long 
  8182 ;;  counter         1   36[BANK0 ] unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  4   24[BANK0 ] unsigned long 
  8185 ;; Registers used:
  8186 ;;		wreg, status,2, status,0
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8192 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8193 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8195 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8196 ;;Total ram usage:       13 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:    5
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		_get_quot_rem
  8203 ;;		_main
  8204 ;;		_CTMU_read
  8205 ;;		_my_utoa32
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           	psect	text39
  8210  002884                     __ptext39:
  8211                           	opt stack 0
  8212  002884                     ___lldiv:
  8213                           	opt stack 21
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;incstack = 0
  8217  002884  0E00               	movlw	0
  8218  002886  0100               	movlb	0	; () banked
  8219  002888  6F80               	movwf	___lldiv@quotient& (0+255),b
  8220  00288A  0E00               	movlw	0
  8221  00288C  6F81               	movwf	(___lldiv@quotient+1)& (0+255),b
  8222  00288E  0E00               	movlw	0
  8223  002890  6F82               	movwf	(___lldiv@quotient+2)& (0+255),b
  8224  002892  0E00               	movlw	0
  8225  002894  6F83               	movwf	(___lldiv@quotient+3)& (0+255),b
  8226                           
  8227                           ; BSR set to: 0
  8228  002896  0100               	movlb	0	; () banked
  8229  002898  517C               	movf	___lldiv@divisor& (0+255),w,b
  8230  00289A  0100               	movlb	0	; () banked
  8231  00289C  117D               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8232  00289E  0100               	movlb	0	; () banked
  8233  0028A0  117E               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8234  0028A2  0100               	movlb	0	; () banked
  8235  0028A4  117F               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8236  0028A6  B4D8               	btfsc	status,2,c
  8237  0028A8  D042               	goto	l1009
  8238                           
  8239                           ; BSR set to: 0
  8240  0028AA  0E01               	movlw	1
  8241  0028AC  0100               	movlb	0	; () banked
  8242  0028AE  6F84               	movwf	___lldiv@counter& (0+255),b
  8243  0028B0  D008               	goto	l4299
  8244  0028B2                     l4297:
  8245                           
  8246                           ; BSR set to: 0
  8247  0028B2  0100               	movlb	0	; () banked
  8248  0028B4  90D8               	bcf	status,0,c
  8249  0028B6  377C               	rlcf	___lldiv@divisor& (0+255),f,b
  8250  0028B8  377D               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8251  0028BA  377E               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8252  0028BC  377F               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8253  0028BE  0100               	movlb	0	; () banked
  8254  0028C0  2B84               	incf	___lldiv@counter& (0+255),f,b
  8255  0028C2                     l4299:
  8256                           
  8257                           ; BSR set to: 0
  8258  0028C2  0100               	movlb	0	; () banked
  8259  0028C4  AF7F               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8260  0028C6  D7F5               	goto	l4297
  8261  0028C8                     l4301:
  8262                           
  8263                           ; BSR set to: 0
  8264  0028C8  0100               	movlb	0	; () banked
  8265  0028CA  90D8               	bcf	status,0,c
  8266  0028CC  3780               	rlcf	___lldiv@quotient& (0+255),f,b
  8267  0028CE  3781               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8268  0028D0  3782               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8269  0028D2  3783               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8270                           
  8271                           ; BSR set to: 0
  8272  0028D4  0100               	movlb	0	; () banked
  8273  0028D6  517C               	movf	___lldiv@divisor& (0+255),w,b
  8274  0028D8  0100               	movlb	0	; () banked
  8275  0028DA  5D78               	subwf	___lldiv@dividend& (0+255),w,b
  8276  0028DC  0100               	movlb	0	; () banked
  8277  0028DE  517D               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8278  0028E0  0100               	movlb	0	; () banked
  8279  0028E2  5979               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8280  0028E4  0100               	movlb	0	; () banked
  8281  0028E6  517E               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8282  0028E8  0100               	movlb	0	; () banked
  8283  0028EA  597A               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8284  0028EC  0100               	movlb	0	; () banked
  8285  0028EE  517F               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8286  0028F0  0100               	movlb	0	; () banked
  8287  0028F2  597B               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8288  0028F4  A0D8               	btfss	status,0,c
  8289  0028F6  D012               	goto	l4309
  8290                           
  8291                           ; BSR set to: 0
  8292  0028F8  0100               	movlb	0	; () banked
  8293  0028FA  517C               	movf	___lldiv@divisor& (0+255),w,b
  8294  0028FC  0100               	movlb	0	; () banked
  8295  0028FE  5F78               	subwf	___lldiv@dividend& (0+255),f,b
  8296  002900  0100               	movlb	0	; () banked
  8297  002902  517D               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8298  002904  0100               	movlb	0	; () banked
  8299  002906  5B79               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8300  002908  0100               	movlb	0	; () banked
  8301  00290A  517E               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8302  00290C  0100               	movlb	0	; () banked
  8303  00290E  5B7A               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8304  002910  0100               	movlb	0	; () banked
  8305  002912  517F               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8306  002914  0100               	movlb	0	; () banked
  8307  002916  5B7B               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8308                           
  8309                           ; BSR set to: 0
  8310  002918  0100               	movlb	0	; () banked
  8311  00291A  8180               	bsf	___lldiv@quotient& (0+255),0,b
  8312  00291C                     l4309:
  8313                           
  8314                           ; BSR set to: 0
  8315  00291C  0100               	movlb	0	; () banked
  8316  00291E  90D8               	bcf	status,0,c
  8317  002920  337F               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8318  002922  337E               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8319  002924  337D               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8320  002926  337C               	rrcf	___lldiv@divisor& (0+255),f,b
  8321                           
  8322                           ; BSR set to: 0
  8323  002928  0100               	movlb	0	; () banked
  8324  00292A  2F84               	decfsz	___lldiv@counter& (0+255),f,b
  8325  00292C  D7CD               	goto	l4301
  8326  00292E                     l1009:
  8327                           
  8328                           ; BSR set to: 0
  8329  00292E  C080  F078         	movff	___lldiv@quotient,?___lldiv
  8330  002932  C081  F079         	movff	___lldiv@quotient+1,?___lldiv+1
  8331  002936  C082  F07A         	movff	___lldiv@quotient+2,?___lldiv+2
  8332  00293A  C083  F07B         	movff	___lldiv@quotient+3,?___lldiv+3
  8333                           
  8334                           ; BSR set to: 0
  8335  00293E  0012               	return		;funcret
  8336  002940                     __end_of___lldiv:
  8337                           	opt stack 0
  8338                           tblptru	equ	0xFF8
  8339                           tblptrh	equ	0xFF7
  8340                           tblptrl	equ	0xFF6
  8341                           tablat	equ	0xFF5
  8342                           prodh	equ	0xFF4
  8343                           prodl	equ	0xFF3
  8344                           intcon	equ	0xFF2
  8345                           intcon2	equ	0xFF1
  8346                           postinc0	equ	0xFEE
  8347                           wreg	equ	0xFE8
  8348                           indf1	equ	0xFE7
  8349                           postinc1	equ	0xFE6
  8350                           postdec1	equ	0xFE5
  8351                           fsr1h	equ	0xFE2
  8352                           fsr1l	equ	0xFE1
  8353                           indf2	equ	0xFDF
  8354                           postinc2	equ	0xFDE
  8355                           postdec2	equ	0xFDD
  8356                           fsr2h	equ	0xFDA
  8357                           fsr2l	equ	0xFD9
  8358                           status	equ	0xFD8
  8359                           
  8360 ;; *************** function _caltime_to_RTCC *****************
  8361 ;; Defined at:
  8362 ;;		line 137 in file "../My_header\My_RTCC.h"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;  ct              2    9[BANK0 ] PTR struct .
  8365 ;;		 -> caltime_now(7), 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;		None
  8368 ;; Return value:  Size  Location     Type
  8369 ;;		None               void
  8370 ;; Registers used:
  8371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;Total ram usage:        2 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    7
  8384 ;; This function calls:
  8385 ;;		_d_to_x
  8386 ;; This function is called by:
  8387 ;;		_RTCC_from_caltime
  8388 ;;		_RTCC_from_epoch
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text40
  8393  0024A2                     __ptext40:
  8394                           	opt stack 0
  8395  0024A2                     _caltime_to_RTCC:
  8396                           	opt stack 21
  8397  0024A2                     l358:
  8398  0024A2  010F               	movlb	15	; () banked
  8399  0024A4  B93F               	btfsc	63,4,b	;volatile
  8400  0024A6  D7FD               	goto	l358
  8401                           
  8402                           ; BSR set to: 15
  8403                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
  8404  0024A8  010F               	movlb	15	; () banked
  8405  0024AA  813F               	bsf	63,0,b	;volatile
  8406                           
  8407                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
  8408  0024AC  010F               	movlb	15	; () banked
  8409  0024AE  833F               	bsf	63,1,b	;volatile
  8410                           
  8411                           ; BSR set to: 15
  8412                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
  8413  0024B0  0100               	movlb	0	; () banked
  8414  0024B2  EE20 F006          	lfsr	2,6
  8415  0024B6  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8416  0024B8  26D9               	addwf	fsr2l,f,c
  8417  0024BA  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8418  0024BC  22DA               	addwfc	fsr2h,f,c
  8419  0024BE  50DF               	movf	indf2,w,c
  8420  0024C0  ECCA  F01A         	call	_d_to_x
  8421  0024C4  010F               	movlb	15	; () banked
  8422  0024C6  6F3A               	movwf	58,b	;volatile
  8423                           
  8424                           ; BSR set to: 15
  8425                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
  8426  0024C8  0E00               	movlw	0
  8427  0024CA  010F               	movlb	15	; () banked
  8428  0024CC  6F3B               	movwf	59,b	;volatile
  8429                           
  8430                           ; BSR set to: 15
  8431                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
  8432  0024CE  010F               	movlb	15	; () banked
  8433  0024D0  913F               	bcf	63,0,b	;volatile
  8434                           
  8435                           ; BSR set to: 15
  8436                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
  8437  0024D2  010F               	movlb	15	; () banked
  8438  0024D4  833F               	bsf	63,1,b	;volatile
  8439                           
  8440                           ; BSR set to: 15
  8441                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
  8442  0024D6  0100               	movlb	0	; () banked
  8443  0024D8  EE20 F004          	lfsr	2,4
  8444  0024DC  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8445  0024DE  26D9               	addwf	fsr2l,f,c
  8446  0024E0  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8447  0024E2  22DA               	addwfc	fsr2h,f,c
  8448  0024E4  50DF               	movf	indf2,w,c
  8449  0024E6  ECCA  F01A         	call	_d_to_x
  8450  0024EA  010F               	movlb	15	; () banked
  8451  0024EC  6F3A               	movwf	58,b	;volatile
  8452                           
  8453                           ; BSR set to: 15
  8454                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
  8455  0024EE  0100               	movlb	0	; () banked
  8456  0024F0  EE20 F005          	lfsr	2,5
  8457  0024F4  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8458  0024F6  26D9               	addwf	fsr2l,f,c
  8459  0024F8  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8460  0024FA  22DA               	addwfc	fsr2h,f,c
  8461  0024FC  50DF               	movf	indf2,w,c
  8462  0024FE  ECCA  F01A         	call	_d_to_x
  8463  002502  010F               	movlb	15	; () banked
  8464  002504  6F3B               	movwf	59,b	;volatile
  8465                           
  8466                           ; BSR set to: 15
  8467                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
  8468  002506  010F               	movlb	15	; () banked
  8469  002508  813F               	bsf	63,0,b	;volatile
  8470                           
  8471                           ; BSR set to: 15
  8472                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
  8473  00250A  010F               	movlb	15	; () banked
  8474  00250C  933F               	bcf	63,1,b	;volatile
  8475                           
  8476                           ; BSR set to: 15
  8477                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
  8478  00250E  0100               	movlb	0	; () banked
  8479  002510  EE20 F002          	lfsr	2,2
  8480  002514  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8481  002516  26D9               	addwf	fsr2l,f,c
  8482  002518  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8483  00251A  22DA               	addwfc	fsr2h,f,c
  8484  00251C  50DF               	movf	indf2,w,c
  8485  00251E  ECCA  F01A         	call	_d_to_x
  8486  002522  010F               	movlb	15	; () banked
  8487  002524  6F3A               	movwf	58,b	;volatile
  8488                           
  8489                           ; BSR set to: 15
  8490                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
  8491  002526  0100               	movlb	0	; () banked
  8492  002528  EE20 F003          	lfsr	2,3
  8493  00252C  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8494  00252E  26D9               	addwf	fsr2l,f,c
  8495  002530  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8496  002532  22DA               	addwfc	fsr2h,f,c
  8497  002534  50DF               	movf	indf2,w,c
  8498  002536  ECCA  F01A         	call	_d_to_x
  8499  00253A  010F               	movlb	15	; () banked
  8500  00253C  6F3B               	movwf	59,b	;volatile
  8501                           
  8502                           ; BSR set to: 15
  8503                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
  8504  00253E  010F               	movlb	15	; () banked
  8505  002540  913F               	bcf	63,0,b	;volatile
  8506                           
  8507                           ; BSR set to: 15
  8508                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
  8509  002542  010F               	movlb	15	; () banked
  8510  002544  933F               	bcf	63,1,b	;volatile
  8511                           
  8512                           ; BSR set to: 15
  8513                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
  8514  002546  C069  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
  8515  00254A  C06A  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
  8516  00254E  50DF               	movf	indf2,w,c
  8517  002550  ECCA  F01A         	call	_d_to_x
  8518  002554  010F               	movlb	15	; () banked
  8519  002556  6F3A               	movwf	58,b	;volatile
  8520                           
  8521                           ; BSR set to: 15
  8522                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
  8523  002558  0100               	movlb	0	; () banked
  8524  00255A  EE20 F001          	lfsr	2,1
  8525  00255E  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8526  002560  26D9               	addwf	fsr2l,f,c
  8527  002562  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8528  002564  22DA               	addwfc	fsr2h,f,c
  8529  002566  50DF               	movf	indf2,w,c
  8530  002568  ECCA  F01A         	call	_d_to_x
  8531  00256C  010F               	movlb	15	; () banked
  8532  00256E  6F3B               	movwf	59,b	;volatile
  8533                           
  8534                           ; BSR set to: 15
  8535  002570  0012               	return		;funcret
  8536  002572                     __end_of_caltime_to_RTCC:
  8537                           	opt stack 0
  8538                           tblptru	equ	0xFF8
  8539                           tblptrh	equ	0xFF7
  8540                           tblptrl	equ	0xFF6
  8541                           tablat	equ	0xFF5
  8542                           prodh	equ	0xFF4
  8543                           prodl	equ	0xFF3
  8544                           intcon	equ	0xFF2
  8545                           intcon2	equ	0xFF1
  8546                           postinc0	equ	0xFEE
  8547                           wreg	equ	0xFE8
  8548                           indf1	equ	0xFE7
  8549                           postinc1	equ	0xFE6
  8550                           postdec1	equ	0xFE5
  8551                           fsr1h	equ	0xFE2
  8552                           fsr1l	equ	0xFE1
  8553                           indf2	equ	0xFDF
  8554                           postinc2	equ	0xFDE
  8555                           postdec2	equ	0xFDD
  8556                           fsr2h	equ	0xFDA
  8557                           fsr2l	equ	0xFD9
  8558                           status	equ	0xFD8
  8559                           
  8560 ;; *************** function _d_to_x *****************
  8561 ;; Defined at:
  8562 ;;		line 73 in file "../My_header\My_RTCC.h"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  dec             1    wreg     unsigned char 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  dec             1    8[BANK0 ] unsigned char 
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      unsigned char 
  8569 ;; Registers used:
  8570 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : 0/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8577 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8580 ;;Total ram usage:        1 bytes
  8581 ;; Hardware stack levels used:    1
  8582 ;; Hardware stack levels required when called:    6
  8583 ;; This function calls:
  8584 ;;		___awdiv
  8585 ;; This function is called by:
  8586 ;;		_caltime_to_RTCC
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text41
  8591  003594                     __ptext41:
  8592                           	opt stack 0
  8593  003594                     _d_to_x:
  8594                           	opt stack 21
  8595                           
  8596                           ; BSR set to: 15
  8597                           ;incstack = 0
  8598                           ;d_to_x@dec stored from wreg
  8599  003594  0100               	movlb	0	; () banked
  8600  003596  6F68               	movwf	d_to_x@dec& (0+255),b
  8601                           
  8602                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
  8603  003598  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  8604  00359C  0100               	movlb	0	; () banked
  8605  00359E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  8606  0035A0  0E00               	movlw	0
  8607  0035A2  0100               	movlb	0	; () banked
  8608  0035A4  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8609  0035A6  0E0A               	movlw	10
  8610  0035A8  6F62               	movwf	___awdiv@divisor& (0+255),b
  8611  0035AA  EC85  F013         	call	___awdiv	;wreg free
  8612  0035AE  0100               	movlb	0	; () banked
  8613  0035B0  5160               	movf	?___awdiv& (0+255),w,b
  8614  0035B2  0D06               	mullw	6
  8615  0035B4  50F3               	movf	prodl,w,c
  8616  0035B6  0100               	movlb	0	; () banked
  8617  0035B8  2568               	addwf	d_to_x@dec& (0+255),w,b
  8618  0035BA  0012               	return	
  8619  0035BC                     __end_of_d_to_x:
  8620                           	opt stack 0
  8621                           tblptru	equ	0xFF8
  8622                           tblptrh	equ	0xFF7
  8623                           tblptrl	equ	0xFF6
  8624                           tablat	equ	0xFF5
  8625                           prodh	equ	0xFF4
  8626                           prodl	equ	0xFF3
  8627                           intcon	equ	0xFF2
  8628                           intcon2	equ	0xFF1
  8629                           postinc0	equ	0xFEE
  8630                           wreg	equ	0xFE8
  8631                           indf1	equ	0xFE7
  8632                           postinc1	equ	0xFE6
  8633                           postdec1	equ	0xFE5
  8634                           fsr1h	equ	0xFE2
  8635                           fsr1l	equ	0xFE1
  8636                           indf2	equ	0xFDF
  8637                           postinc2	equ	0xFDE
  8638                           postdec2	equ	0xFDD
  8639                           fsr2h	equ	0xFDA
  8640                           fsr2l	equ	0xFD9
  8641                           status	equ	0xFD8
  8642                           
  8643 ;; *************** function ___awdiv *****************
  8644 ;; Defined at:
  8645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  dividend        2    0[BANK0 ] int 
  8648 ;;  divisor         2    2[BANK0 ] int 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  quotient        2    6[BANK0 ] int 
  8651 ;;  sign            1    5[BANK0 ] unsigned char 
  8652 ;;  counter         1    4[BANK0 ] unsigned char 
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  2    0[BANK0 ] int 
  8655 ;; Registers used:
  8656 ;;		wreg, status,2, status,0
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8662 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8663 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8665 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8666 ;;Total ram usage:        8 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; Hardware stack levels required when called:    5
  8669 ;; This function calls:
  8670 ;;		Nothing
  8671 ;; This function is called by:
  8672 ;;		_d_to_x
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text42
  8677  00270A                     __ptext42:
  8678                           	opt stack 0
  8679  00270A                     ___awdiv:
  8680                           	opt stack 21
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;incstack = 0
  8684  00270A  0E00               	movlw	0
  8685  00270C  0100               	movlb	0	; () banked
  8686  00270E  6F65               	movwf	___awdiv@sign& (0+255),b
  8687                           
  8688                           ; BSR set to: 0
  8689  002710  0100               	movlb	0	; () banked
  8690  002712  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8691  002714  D008               	goto	l4219
  8692                           
  8693                           ; BSR set to: 0
  8694  002716  0100               	movlb	0	; () banked
  8695  002718  6D62               	negf	___awdiv@divisor& (0+255),b
  8696  00271A  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8697  00271C  B0D8               	btfsc	status,0,c
  8698  00271E  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8699                           
  8700                           ; BSR set to: 0
  8701  002720  0E01               	movlw	1
  8702  002722  0100               	movlb	0	; () banked
  8703  002724  6F65               	movwf	___awdiv@sign& (0+255),b
  8704  002726                     l4219:
  8705                           
  8706                           ; BSR set to: 0
  8707  002726  0100               	movlb	0	; () banked
  8708  002728  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8709  00272A  D008               	goto	l4225
  8710                           
  8711                           ; BSR set to: 0
  8712  00272C  0100               	movlb	0	; () banked
  8713  00272E  6D60               	negf	___awdiv@dividend& (0+255),b
  8714  002730  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8715  002732  B0D8               	btfsc	status,0,c
  8716  002734  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8717                           
  8718                           ; BSR set to: 0
  8719  002736  0E01               	movlw	1
  8720  002738  0100               	movlb	0	; () banked
  8721  00273A  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8722  00273C                     l4225:
  8723                           
  8724                           ; BSR set to: 0
  8725  00273C  0E00               	movlw	0
  8726  00273E  0100               	movlb	0	; () banked
  8727  002740  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8728  002742  0E00               	movlw	0
  8729  002744  6F66               	movwf	___awdiv@quotient& (0+255),b
  8730                           
  8731                           ; BSR set to: 0
  8732  002746  0100               	movlb	0	; () banked
  8733  002748  5162               	movf	___awdiv@divisor& (0+255),w,b
  8734  00274A  0100               	movlb	0	; () banked
  8735  00274C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8736  00274E  B4D8               	btfsc	status,2,c
  8737  002750  D02C               	goto	l4247
  8738                           
  8739                           ; BSR set to: 0
  8740  002752  0E01               	movlw	1
  8741  002754  0100               	movlb	0	; () banked
  8742  002756  6F64               	movwf	___awdiv@counter& (0+255),b
  8743  002758  D006               	goto	l4233
  8744  00275A                     l4231:
  8745                           
  8746                           ; BSR set to: 0
  8747  00275A  0100               	movlb	0	; () banked
  8748  00275C  90D8               	bcf	status,0,c
  8749  00275E  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8750  002760  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8751  002762  0100               	movlb	0	; () banked
  8752  002764  2B64               	incf	___awdiv@counter& (0+255),f,b
  8753  002766                     l4233:
  8754                           
  8755                           ; BSR set to: 0
  8756  002766  0100               	movlb	0	; () banked
  8757  002768  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8758  00276A  D7F7               	goto	l4231
  8759  00276C                     l4235:
  8760                           
  8761                           ; BSR set to: 0
  8762  00276C  0100               	movlb	0	; () banked
  8763  00276E  90D8               	bcf	status,0,c
  8764  002770  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  8765  002772  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8766                           
  8767                           ; BSR set to: 0
  8768  002774  0100               	movlb	0	; () banked
  8769  002776  5162               	movf	___awdiv@divisor& (0+255),w,b
  8770  002778  0100               	movlb	0	; () banked
  8771  00277A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8772  00277C  0100               	movlb	0	; () banked
  8773  00277E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8774  002780  0100               	movlb	0	; () banked
  8775  002782  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8776  002784  A0D8               	btfss	status,0,c
  8777  002786  D00A               	goto	l4243
  8778                           
  8779                           ; BSR set to: 0
  8780  002788  0100               	movlb	0	; () banked
  8781  00278A  5162               	movf	___awdiv@divisor& (0+255),w,b
  8782  00278C  0100               	movlb	0	; () banked
  8783  00278E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  8784  002790  0100               	movlb	0	; () banked
  8785  002792  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8786  002794  0100               	movlb	0	; () banked
  8787  002796  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8788                           
  8789                           ; BSR set to: 0
  8790  002798  0100               	movlb	0	; () banked
  8791  00279A  8166               	bsf	___awdiv@quotient& (0+255),0,b
  8792  00279C                     l4243:
  8793                           
  8794                           ; BSR set to: 0
  8795  00279C  0100               	movlb	0	; () banked
  8796  00279E  90D8               	bcf	status,0,c
  8797  0027A0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8798  0027A2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  8799                           
  8800                           ; BSR set to: 0
  8801  0027A4  0100               	movlb	0	; () banked
  8802  0027A6  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  8803  0027A8  D7E1               	goto	l4235
  8804  0027AA                     l4247:
  8805                           
  8806                           ; BSR set to: 0
  8807  0027AA  0100               	movlb	0	; () banked
  8808  0027AC  5165               	movf	___awdiv@sign& (0+255),w,b
  8809  0027AE  0100               	movlb	0	; () banked
  8810  0027B0  B4D8               	btfsc	status,2,c
  8811  0027B2  D005               	goto	l4251
  8812                           
  8813                           ; BSR set to: 0
  8814  0027B4  0100               	movlb	0	; () banked
  8815  0027B6  6D66               	negf	___awdiv@quotient& (0+255),b
  8816  0027B8  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8817  0027BA  B0D8               	btfsc	status,0,c
  8818  0027BC  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8819  0027BE                     l4251:
  8820                           
  8821                           ; BSR set to: 0
  8822  0027BE  C066  F060         	movff	___awdiv@quotient,?___awdiv
  8823  0027C2  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  8824  0027C6  0012               	return	
  8825  0027C8                     __end_of___awdiv:
  8826                           	opt stack 0
  8827                           tblptru	equ	0xFF8
  8828                           tblptrh	equ	0xFF7
  8829                           tblptrl	equ	0xFF6
  8830                           tablat	equ	0xFF5
  8831                           prodh	equ	0xFF4
  8832                           prodl	equ	0xFF3
  8833                           intcon	equ	0xFF2
  8834                           intcon2	equ	0xFF1
  8835                           postinc0	equ	0xFEE
  8836                           wreg	equ	0xFE8
  8837                           indf1	equ	0xFE7
  8838                           postinc1	equ	0xFE6
  8839                           postdec1	equ	0xFE5
  8840                           fsr1h	equ	0xFE2
  8841                           fsr1l	equ	0xFE1
  8842                           indf2	equ	0xFDF
  8843                           postinc2	equ	0xFDE
  8844                           postdec2	equ	0xFDD
  8845                           fsr2h	equ	0xFDA
  8846                           fsr2l	equ	0xFD9
  8847                           status	equ	0xFD8
  8848                           
  8849 ;; *************** function _ADC *****************
  8850 ;; Defined at:
  8851 ;;		line 172 in file "../My_header\My_header.h"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;  ch              1    wreg     unsigned char 
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;  ch              1    3[BANK0 ] unsigned char 
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  2    0[BANK0 ] unsigned int 
  8858 ;; Registers used:
  8859 ;;		wreg, status,2, status,0
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8868 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8869 ;;Total ram usage:        4 bytes
  8870 ;; Hardware stack levels used:    1
  8871 ;; Hardware stack levels required when called:    5
  8872 ;; This function calls:
  8873 ;;		Nothing
  8874 ;; This function is called by:
  8875 ;;		_main
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text43
  8880  00353A                     __ptext43:
  8881                           	opt stack 0
  8882  00353A                     _ADC:
  8883                           	opt stack 25
  8884                           
  8885                           ; BSR set to: 0
  8886                           ;incstack = 0
  8887                           ;ADC@ch stored from wreg
  8888  00353A  0100               	movlb	0	; () banked
  8889  00353C  6F63               	movwf	ADC@ch& (0+255),b
  8890                           
  8891                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
  8892  00353E  C063  F062         	movff	ADC@ch,??_ADC
  8893  003542  0100               	movlb	0	; () banked
  8894  003544  4762               	rlncf	??_ADC& (0+255),f,b
  8895  003546  4762               	rlncf	??_ADC& (0+255),f,b
  8896  003548  50C2               	movf	4034,w,c	;volatile
  8897  00354A  0100               	movlb	0	; () banked
  8898  00354C  1962               	xorwf	??_ADC& (0+255),w,b
  8899  00354E  0BC3               	andlw	-61
  8900  003550  1962               	xorwf	??_ADC& (0+255),w,b
  8901  003552  6EC2               	movwf	4034,c	;volatile
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
  8905  003554  80C2               	bsf	4034,0,c	;volatile
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
  8909  003556  9C9E               	bcf	3998,6,c	;volatile
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
  8913  003558  82C2               	bsf	4034,1,c	;volatile
  8914  00355A                     l169:
  8915  00355A  AC9E               	btfss	3998,6,c	;volatile
  8916  00355C  D7FE               	goto	l169
  8917                           
  8918                           ;My_header\My_header.h: 179: return ADRES;
  8919  00355E  CFC3 F060          	movff	4035,?_ADC	;volatile
  8920  003562  CFC4 F061          	movff	4036,?_ADC+1	;volatile
  8921  003566  0012               	return		;funcret
  8922  003568                     __end_of_ADC:
  8923                           	opt stack 0
  8924                           tblptru	equ	0xFF8
  8925                           tblptrh	equ	0xFF7
  8926                           tblptrl	equ	0xFF6
  8927                           tablat	equ	0xFF5
  8928                           prodh	equ	0xFF4
  8929                           prodl	equ	0xFF3
  8930                           intcon	equ	0xFF2
  8931                           intcon2	equ	0xFF1
  8932                           postinc0	equ	0xFEE
  8933                           wreg	equ	0xFE8
  8934                           indf1	equ	0xFE7
  8935                           postinc1	equ	0xFE6
  8936                           postdec1	equ	0xFE5
  8937                           fsr1h	equ	0xFE2
  8938                           fsr1l	equ	0xFE1
  8939                           indf2	equ	0xFDF
  8940                           postinc2	equ	0xFDE
  8941                           postdec2	equ	0xFDD
  8942                           fsr2h	equ	0xFDA
  8943                           fsr2l	equ	0xFD9
  8944                           status	equ	0xFD8
  8945                           
  8946 ;; *************** function _ISR *****************
  8947 ;; Defined at:
  8948 ;;		line 104 in file "PIC18F27J53-killifish_light01.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;		None
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;  ascii           1   35[COMRAM] unsigned char 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;		None               void
  8955 ;; Registers used:
  8956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8964 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8965 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8966 ;;Total ram usage:       15 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; Hardware stack levels required when called:    4
  8969 ;; This function calls:
  8970 ;;		_UART_ISR
  8971 ;;		_button_timer_interrupt
  8972 ;;		_judgement
  8973 ;; This function is called by:
  8974 ;;		Interrupt level 2
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           	psect	intcode
  8979  000008                     __pintcode:
  8980                           	opt stack 0
  8981  000008                     _ISR:
  8982                           	opt stack 20
  8983                           
  8984                           ;incstack = 0
  8985  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8986  00000A  CFFA F016          	movff	pclath,??_ISR
  8987  00000E  CFFB F017          	movff	pclatu,??_ISR+1
  8988  000012  CFE9 F018          	movff	fsr0l,??_ISR+2
  8989  000016  CFEA F019          	movff	fsr0h,??_ISR+3
  8990  00001A  CFE1 F01A          	movff	fsr1l,??_ISR+4
  8991  00001E  CFE2 F01B          	movff	fsr1h,??_ISR+5
  8992  000022  CFD9 F01C          	movff	fsr2l,??_ISR+6
  8993  000026  CFDA F01D          	movff	fsr2h,??_ISR+7
  8994  00002A  CFF3 F01E          	movff	prodl,??_ISR+8
  8995  00002E  CFF4 F01F          	movff	prodh,??_ISR+9
  8996  000032  CFF6 F020          	movff	tblptrl,??_ISR+10
  8997  000036  CFF7 F021          	movff	tblptrh,??_ISR+11
  8998  00003A  CFF8 F022          	movff	tblptru,??_ISR+12
  8999  00003E  CFF5 F023          	movff	tablat,??_ISR+13
  9000                           
  9001                           ;PIC18F27J53-killifish_light01.c: 105: UART_ISR();
  9002  000042  EC07  F01A         	call	_UART_ISR	;wreg free
  9003                           
  9004                           ;PIC18F27J53-killifish_light01.c: 106: if (PIR1bits.RC1IF) {
  9005  000046  AA9E               	btfss	3998,5,c	;volatile
  9006  000048  D006               	goto	i2l4035
  9007                           
  9008                           ;PIC18F27J53-killifish_light01.c: 107: PIR1bits.RC1IF = 0;
  9009  00004A  9A9E               	bcf	3998,5,c	;volatile
  9010                           
  9011                           ;PIC18F27J53-killifish_light01.c: 108: uint8_t ascii = RCREG1;
  9012  00004C  CFAF F024          	movff	4015,ISR@ascii	;volatile
  9013                           
  9014                           ;PIC18F27J53-killifish_light01.c: 109: judgement(ascii);
  9015  000050  5024               	movf	ISR@ascii,w,c
  9016  000052  EC31  F00F         	call	_judgement
  9017  000056                     i2l4035:
  9018                           
  9019                           ;PIC18F27J53-killifish_light01.c: 110: }
  9020                           ;PIC18F27J53-killifish_light01.c: 111: if (INTCONbits.T0IF) {
  9021  000056  B4F2               	btfsc	intcon,2,c	;volatile
  9022                           
  9023                           ;PIC18F27J53-killifish_light01.c: 112: INTCONbits.T0IF = 0;
  9024  000058  94F2               	bcf	intcon,2,c	;volatile
  9025                           
  9026                           ;PIC18F27J53-killifish_light01.c: 113: }
  9027                           ;PIC18F27J53-killifish_light01.c: 114: if (PIR1bits.TMR1IF) {
  9028  00005A  A09E               	btfss	3998,0,c	;volatile
  9029  00005C  D003               	goto	i2l4043
  9030                           
  9031                           ;PIC18F27J53-killifish_light01.c: 115: PIR1bits.TMR1IF = 0;
  9032  00005E  909E               	bcf	3998,0,c	;volatile
  9033                           
  9034                           ;PIC18F27J53-killifish_light01.c: 116: TMR1H = 0x80;
  9035  000060  0E80               	movlw	128
  9036  000062  6ECF               	movwf	4047,c	;volatile
  9037  000064                     i2l4043:
  9038                           
  9039                           ;PIC18F27J53-killifish_light01.c: 117: }
  9040                           ;PIC18F27J53-killifish_light01.c: 118: if (PIR2bits.TMR3IF) {
  9041  000064  A2A1               	btfss	4001,1,c	;volatile
  9042  000066  D025               	goto	i2l545
  9043                           
  9044                           ;PIC18F27J53-killifish_light01.c: 119: PIR2bits.TMR3IF = 0;
  9045  000068  92A1               	bcf	4001,1,c	;volatile
  9046                           
  9047                           ;PIC18F27J53-killifish_light01.c: 120: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
  9048  00006A  0E44               	movlw	low _sw_R
  9049  00006C  6E01               	movwf	button_timer_interrupt@bt,c
  9050  00006E  0E00               	movlw	high _sw_R
  9051  000070  6E02               	movwf	button_timer_interrupt@bt+1,c
  9052  000072  BA80               	btfsc	3968,5,c	;volatile
  9053  000074  D002               	goto	i2u391_40
  9054  000076  0E01               	movlw	1
  9055  000078  D001               	goto	i2u392_40
  9056  00007A                     i2u391_40:
  9057  00007A  0E00               	movlw	0
  9058  00007C                     i2u392_40:
  9059  00007C  6E03               	movwf	button_timer_interrupt@sw_value,c
  9060  00007E  ECFA  F00C         	call	_button_timer_interrupt	;wreg free
  9061                           
  9062                           ;PIC18F27J53-killifish_light01.c: 121: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
  9063  000082  0E40               	movlw	low _sw_G
  9064  000084  6E01               	movwf	button_timer_interrupt@bt,c
  9065  000086  0E00               	movlw	high _sw_G
  9066  000088  6E02               	movwf	button_timer_interrupt@bt+1,c
  9067  00008A  BC80               	btfsc	3968,6,c	;volatile
  9068  00008C  D002               	goto	i2u393_40
  9069  00008E  0E01               	movlw	1
  9070  000090  D001               	goto	i2u394_40
  9071  000092                     i2u393_40:
  9072  000092  0E00               	movlw	0
  9073  000094                     i2u394_40:
  9074  000094  6E03               	movwf	button_timer_interrupt@sw_value,c
  9075  000096  ECFA  F00C         	call	_button_timer_interrupt	;wreg free
  9076                           
  9077                           ;PIC18F27J53-killifish_light01.c: 122: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
  9078  00009A  0E3C               	movlw	low _sw_B
  9079  00009C  6E01               	movwf	button_timer_interrupt@bt,c
  9080  00009E  0E00               	movlw	high _sw_B
  9081  0000A0  6E02               	movwf	button_timer_interrupt@bt+1,c
  9082  0000A2  BE80               	btfsc	3968,7,c	;volatile
  9083  0000A4  D002               	goto	i2u395_40
  9084  0000A6  0E01               	movlw	1
  9085  0000A8  D001               	goto	i2u396_40
  9086  0000AA                     i2u395_40:
  9087  0000AA  0E00               	movlw	0
  9088  0000AC                     i2u396_40:
  9089  0000AC  6E03               	movwf	button_timer_interrupt@sw_value,c
  9090  0000AE  ECFA  F00C         	call	_button_timer_interrupt	;wreg free
  9091  0000B2                     i2l545:
  9092  0000B2  C023  FFF5         	movff	??_ISR+13,tablat
  9093  0000B6  C022  FFF8         	movff	??_ISR+12,tblptru
  9094  0000BA  C021  FFF7         	movff	??_ISR+11,tblptrh
  9095  0000BE  C020  FFF6         	movff	??_ISR+10,tblptrl
  9096  0000C2  C01F  FFF4         	movff	??_ISR+9,prodh
  9097  0000C6  C01E  FFF3         	movff	??_ISR+8,prodl
  9098  0000CA  C01D  FFDA         	movff	??_ISR+7,fsr2h
  9099  0000CE  C01C  FFD9         	movff	??_ISR+6,fsr2l
  9100  0000D2  C01B  FFE2         	movff	??_ISR+5,fsr1h
  9101  0000D6  C01A  FFE1         	movff	??_ISR+4,fsr1l
  9102  0000DA  C019  FFEA         	movff	??_ISR+3,fsr0h
  9103  0000DE  C018  FFE9         	movff	??_ISR+2,fsr0l
  9104  0000E2  C017  FFFB         	movff	??_ISR+1,pclatu
  9105  0000E6  C016  FFFA         	movff	??_ISR,pclath
  9106  0000EA  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9107  0000EC  0011               	retfie		f
  9108  0000EE                     __end_of_ISR:
  9109                           	opt stack 0
  9110                           pclatu	equ	0xFFB
  9111                           pclath	equ	0xFFA
  9112                           tblptru	equ	0xFF8
  9113                           tblptrh	equ	0xFF7
  9114                           tblptrl	equ	0xFF6
  9115                           tablat	equ	0xFF5
  9116                           prodh	equ	0xFF4
  9117                           prodl	equ	0xFF3
  9118                           intcon	equ	0xFF2
  9119                           intcon2	equ	0xFF1
  9120                           postinc0	equ	0xFEE
  9121                           fsr0h	equ	0xFEA
  9122                           fsr0l	equ	0xFE9
  9123                           wreg	equ	0xFE8
  9124                           indf1	equ	0xFE7
  9125                           postinc1	equ	0xFE6
  9126                           postdec1	equ	0xFE5
  9127                           fsr1h	equ	0xFE2
  9128                           fsr1l	equ	0xFE1
  9129                           indf2	equ	0xFDF
  9130                           postinc2	equ	0xFDE
  9131                           postdec2	equ	0xFDD
  9132                           fsr2h	equ	0xFDA
  9133                           fsr2l	equ	0xFD9
  9134                           status	equ	0xFD8
  9135                           
  9136 ;; *************** function _judgement *****************
  9137 ;; Defined at:
  9138 ;;		line 64 in file "PIC18F27J53-killifish_light01.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;  ascii           1    wreg     unsigned char 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  ascii           1   19[COMRAM] unsigned char 
  9143 ;;  i               1   20[COMRAM] unsigned char 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;		None               void
  9146 ;; Registers used:
  9147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9157 ;;Total ram usage:        4 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; Hardware stack levels required when called:    3
  9160 ;; This function calls:
  9161 ;;		_ringbuf_backspace
  9162 ;;		_ringbuf_delete
  9163 ;;		i2_ringbuf_num
  9164 ;;		i2_ringbuf_put
  9165 ;;		i2_tx_send
  9166 ;;		i2_tx_sends
  9167 ;; This function is called by:
  9168 ;;		_ISR
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           	psect	text45
  9173  001E62                     __ptext45:
  9174                           	opt stack 0
  9175  001E62                     _judgement:
  9176                           	opt stack 20
  9177                           
  9178                           ;incstack = 0
  9179                           ;judgement@ascii stored from wreg
  9180  001E62  6E14               	movwf	judgement@ascii,c
  9181                           
  9182                           ;PIC18F27J53-killifish_light01.c: 65: uint8_t i;
  9183                           ;PIC18F27J53-killifish_light01.c: 66: tx_sends(cursor_down);
  9184  001E64  0ED4               	movlw	low _cursor_down
  9185  001E66  6E10               	movwf	i2tx_sends@asciicode,c
  9186  001E68  0E00               	movlw	high _cursor_down
  9187  001E6A  6E11               	movwf	i2tx_sends@asciicode+1,c
  9188  001E6C  EC2C  F019         	call	i2_tx_sends	;wreg free
  9189                           
  9190                           ;PIC18F27J53-killifish_light01.c: 67: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send
      +                          s(cursor_right);
  9191  001E70  0E00               	movlw	0
  9192  001E72  6E15               	movwf	judgement@i,c
  9193  001E74  D007               	goto	i2l3655
  9194  001E76                     i2l3651:
  9195  001E76  0ED8               	movlw	low _cursor_right
  9196  001E78  6E10               	movwf	i2tx_sends@asciicode,c
  9197  001E7A  0E00               	movlw	high _cursor_right
  9198  001E7C  6E11               	movwf	i2tx_sends@asciicode+1,c
  9199  001E7E  EC2C  F019         	call	i2_tx_sends	;wreg free
  9200  001E82  2A15               	incf	judgement@i,f,c
  9201  001E84                     i2l3655:
  9202  001E84  0E2C               	movlw	low _rx_buf
  9203  001E86  6E01               	movwf	i2ringbuf_num@rb,c
  9204  001E88  0E00               	movlw	high _rx_buf
  9205  001E8A  6E02               	movwf	i2ringbuf_num@rb+1,c
  9206  001E8C  ECA0  F014         	call	i2_ringbuf_num	;wreg free
  9207  001E90  5015               	movf	judgement@i,w,c
  9208  001E92  6E12               	movwf	??_judgement& (0+255),c
  9209  001E94  6A13               	clrf	(??_judgement+1)& (0+255),c
  9210  001E96  5001               	movf	?i2_ringbuf_num,w,c
  9211  001E98  5C12               	subwf	??_judgement,w,c
  9212  001E9A  5002               	movf	?i2_ringbuf_num+1,w,c
  9213  001E9C  5813               	subwfb	??_judgement+1,w,c
  9214  001E9E  B0D8               	btfsc	status,0,c
  9215  001EA0  D066               	goto	i2l3691
  9216  001EA2  D7E9               	goto	i2l3651
  9217  001EA4                     i2l3657:
  9218                           
  9219                           ;PIC18F27J53-killifish_light01.c: 71: rx_flag = 1;
  9220  001EA4  0E01               	movlw	1
  9221  001EA6  6E2A               	movwf	_rx_flag,c
  9222                           
  9223                           ;PIC18F27J53-killifish_light01.c: 72: ringbuf_put(&rx_buf, '\0');
  9224  001EA8  0E2C               	movlw	low _rx_buf
  9225  001EAA  6E09               	movwf	i2ringbuf_put@rb,c
  9226  001EAC  0E00               	movlw	high _rx_buf
  9227  001EAE  6E0A               	movwf	i2ringbuf_put@rb+1,c
  9228  001EB0  0E00               	movlw	0
  9229  001EB2  6E0B               	movwf	i2ringbuf_put@asciicode,c
  9230  001EB4  EC59  F015         	call	i2_ringbuf_put	;wreg free
  9231                           
  9232                           ;PIC18F27J53-killifish_light01.c: 73: tx_send(' ');
  9233  001EB8  0E20               	movlw	32
  9234  001EBA  EC4F  F01B         	call	i2_tx_send
  9235                           
  9236                           ;PIC18F27J53-killifish_light01.c: 74: break;
  9237  001EBE  D065               	goto	i2l3693
  9238  001EC0                     i2l3663:
  9239                           
  9240                           ;PIC18F27J53-killifish_light01.c: 76: ringbuf_put(&rx_buf, '\0');
  9241  001EC0  0E2C               	movlw	low _rx_buf
  9242  001EC2  6E09               	movwf	i2ringbuf_put@rb,c
  9243  001EC4  0E00               	movlw	high _rx_buf
  9244  001EC6  6E0A               	movwf	i2ringbuf_put@rb+1,c
  9245  001EC8  0E00               	movlw	0
  9246  001ECA  6E0B               	movwf	i2ringbuf_put@asciicode,c
  9247  001ECC  EC59  F015         	call	i2_ringbuf_put	;wreg free
  9248                           
  9249                           ;PIC18F27J53-killifish_light01.c: 77: tx_send(' ');
  9250  001ED0  0E20               	movlw	32
  9251  001ED2  EC4F  F01B         	call	i2_tx_send
  9252                           
  9253                           ;PIC18F27J53-killifish_light01.c: 78: tx_sends("_\b");
  9254  001ED6  0E34               	movlw	low STR_1
  9255  001ED8  6E10               	movwf	i2tx_sends@asciicode,c
  9256  001EDA  0E0F               	movlw	high STR_1
  9257  001EDC  6E11               	movwf	i2tx_sends@asciicode+1,c
  9258  001EDE  EC2C  F019         	call	i2_tx_sends	;wreg free
  9259                           
  9260                           ;PIC18F27J53-killifish_light01.c: 79: break;
  9261  001EE2  D053               	goto	i2l3693
  9262  001EE4                     i2l3667:
  9263                           
  9264                           ;PIC18F27J53-killifish_light01.c: 81: ringbuf_backspace(&rx_buf);
  9265  001EE4  0E2C               	movlw	low _rx_buf
  9266  001EE6  6E09               	movwf	ringbuf_backspace@rb,c
  9267  001EE8  0E00               	movlw	high _rx_buf
  9268  001EEA  6E0A               	movwf	ringbuf_backspace@rb+1,c
  9269  001EEC  EC8B  F018         	call	_ringbuf_backspace	;wreg free
  9270                           
  9271                           ;PIC18F27J53-killifish_light01.c: 82: tx_sends("\b_ \b\b");
  9272  001EF0  0E1D               	movlw	low STR_2
  9273  001EF2  6E10               	movwf	i2tx_sends@asciicode,c
  9274  001EF4  0E0F               	movlw	high STR_2
  9275  001EF6  6E11               	movwf	i2tx_sends@asciicode+1,c
  9276  001EF8  EC2C  F019         	call	i2_tx_sends	;wreg free
  9277                           
  9278                           ;PIC18F27J53-killifish_light01.c: 83: break;
  9279  001EFC  D046               	goto	i2l3693
  9280  001EFE                     i2l3671:
  9281                           
  9282                           ;PIC18F27J53-killifish_light01.c: 85: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send
      +                          s("\b_ \b\b");
  9283  001EFE  0E00               	movlw	0
  9284  001F00  6E15               	movwf	judgement@i,c
  9285  001F02  D007               	goto	i2l3677
  9286  001F04                     i2l3673:
  9287  001F04  0E1D               	movlw	low STR_2
  9288  001F06  6E10               	movwf	i2tx_sends@asciicode,c
  9289  001F08  0E0F               	movlw	high STR_2
  9290  001F0A  6E11               	movwf	i2tx_sends@asciicode+1,c
  9291  001F0C  EC2C  F019         	call	i2_tx_sends	;wreg free
  9292  001F10  2A15               	incf	judgement@i,f,c
  9293  001F12                     i2l3677:
  9294  001F12  0E2C               	movlw	low _rx_buf
  9295  001F14  6E01               	movwf	i2ringbuf_num@rb,c
  9296  001F16  0E00               	movlw	high _rx_buf
  9297  001F18  6E02               	movwf	i2ringbuf_num@rb+1,c
  9298  001F1A  ECA0  F014         	call	i2_ringbuf_num	;wreg free
  9299  001F1E  5015               	movf	judgement@i,w,c
  9300  001F20  6E12               	movwf	??_judgement& (0+255),c
  9301  001F22  6A13               	clrf	(??_judgement+1)& (0+255),c
  9302  001F24  5001               	movf	?i2_ringbuf_num,w,c
  9303  001F26  5C12               	subwf	??_judgement,w,c
  9304  001F28  5002               	movf	?i2_ringbuf_num+1,w,c
  9305  001F2A  5813               	subwfb	??_judgement+1,w,c
  9306  001F2C  A0D8               	btfss	status,0,c
  9307  001F2E  D7EA               	goto	i2l3673
  9308                           
  9309                           ;PIC18F27J53-killifish_light01.c: 86: ringbuf_delete(&rx_buf);
  9310  001F30  0E2C               	movlw	low _rx_buf
  9311  001F32  6E01               	movwf	ringbuf_delete@rb,c
  9312  001F34  0E00               	movlw	high _rx_buf
  9313  001F36  6E02               	movwf	ringbuf_delete@rb+1,c
  9314  001F38  EC00  F01B         	call	_ringbuf_delete	;wreg free
  9315                           
  9316                           ;PIC18F27J53-killifish_light01.c: 87: break;
  9317  001F3C  D026               	goto	i2l3693
  9318  001F3E                     i2l3681:
  9319                           
  9320                           ;PIC18F27J53-killifish_light01.c: 89: if (ascii >= ' ' && ascii <= '~') {
  9321  001F3E  0E1F               	movlw	31
  9322  001F40  6414               	cpfsgt	judgement@ascii,c
  9323  001F42  D023               	goto	i2l3693
  9324  001F44  0E7F               	movlw	127
  9325  001F46  6014               	cpfslt	judgement@ascii,c
  9326  001F48  D020               	goto	i2l3693
  9327                           
  9328                           ;PIC18F27J53-killifish_light01.c: 90: ringbuf_put(&rx_buf, ascii);
  9329  001F4A  0E2C               	movlw	low _rx_buf
  9330  001F4C  6E09               	movwf	i2ringbuf_put@rb,c
  9331  001F4E  0E00               	movlw	high _rx_buf
  9332  001F50  6E0A               	movwf	i2ringbuf_put@rb+1,c
  9333  001F52  C014  F00B         	movff	judgement@ascii,i2ringbuf_put@asciicode
  9334  001F56  EC59  F015         	call	i2_ringbuf_put	;wreg free
  9335                           
  9336                           ;PIC18F27J53-killifish_light01.c: 91: tx_send(ascii);
  9337  001F5A  5014               	movf	judgement@ascii,w,c
  9338  001F5C  EC4F  F01B         	call	i2_tx_send
  9339                           
  9340                           ;PIC18F27J53-killifish_light01.c: 92: tx_sends("_\b");
  9341  001F60  0E34               	movlw	low STR_1
  9342  001F62  6E10               	movwf	i2tx_sends@asciicode,c
  9343  001F64  0E0F               	movlw	high STR_1
  9344  001F66  6E11               	movwf	i2tx_sends@asciicode+1,c
  9345  001F68  EC2C  F019         	call	i2_tx_sends	;wreg free
  9346                           
  9347                           ;PIC18F27J53-killifish_light01.c: 95: }
  9348                           
  9349                           ;PIC18F27J53-killifish_light01.c: 93: }
  9350                           ;PIC18F27J53-killifish_light01.c: 94: break;
  9351  001F6C  D00E               	goto	i2l3693
  9352  001F6E                     i2l3691:
  9353  001F6E  5014               	movf	judgement@ascii,w,c
  9354                           
  9355                           ; Switch size 1, requested type "space"
  9356                           ; Number of cases is 4, Range of values is 8 to 127
  9357                           ; switch strategies available:
  9358                           ; Name         Instructions Cycles
  9359                           ; simple_byte           13     7 (average)
  9360                           ;	Chosen strategy is simple_byte
  9361  001F70  0A08               	xorlw	8	; case 8
  9362  001F72  B4D8               	btfsc	status,2,c
  9363  001F74  D7B7               	goto	i2l3667
  9364  001F76  0A05               	xorlw	5	; case 13
  9365  001F78  B4D8               	btfsc	status,2,c
  9366  001F7A  D794               	goto	i2l3657
  9367  001F7C  0A2D               	xorlw	45	; case 32
  9368  001F7E  B4D8               	btfsc	status,2,c
  9369  001F80  D79F               	goto	i2l3663
  9370  001F82  0A5F               	xorlw	95	; case 127
  9371  001F84  B4D8               	btfsc	status,2,c
  9372  001F86  D7BB               	goto	i2l3671
  9373  001F88  D7DA               	goto	i2l3681
  9374  001F8A                     i2l3693:
  9375                           
  9376                           ;PIC18F27J53-killifish_light01.c: 96: if (rx_flag) {
  9377  001F8A  502A               	movf	_rx_flag,w,c
  9378  001F8C  B4D8               	btfsc	status,2,c
  9379  001F8E  D02C               	goto	i2l3711
  9380                           
  9381                           ;PIC18F27J53-killifish_light01.c: 97: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send
      +                          ('\b');
  9382  001F90  0E00               	movlw	0
  9383  001F92  6E15               	movwf	judgement@i,c
  9384  001F94  D004               	goto	i2l3701
  9385  001F96                     i2l3697:
  9386  001F96  0E08               	movlw	8
  9387  001F98  EC4F  F01B         	call	i2_tx_send
  9388  001F9C  2A15               	incf	judgement@i,f,c
  9389  001F9E                     i2l3701:
  9390  001F9E  0E2C               	movlw	low _rx_buf
  9391  001FA0  6E01               	movwf	i2ringbuf_num@rb,c
  9392  001FA2  0E00               	movlw	high _rx_buf
  9393  001FA4  6E02               	movwf	i2ringbuf_num@rb+1,c
  9394  001FA6  ECA0  F014         	call	i2_ringbuf_num	;wreg free
  9395  001FAA  5015               	movf	judgement@i,w,c
  9396  001FAC  6E12               	movwf	??_judgement& (0+255),c
  9397  001FAE  6A13               	clrf	(??_judgement+1)& (0+255),c
  9398  001FB0  5001               	movf	?i2_ringbuf_num,w,c
  9399  001FB2  5C12               	subwf	??_judgement,w,c
  9400  001FB4  5002               	movf	?i2_ringbuf_num+1,w,c
  9401  001FB6  5813               	subwfb	??_judgement+1,w,c
  9402  001FB8  A0D8               	btfss	status,0,c
  9403  001FBA  D7ED               	goto	i2l3697
  9404                           
  9405                           ;PIC18F27J53-killifish_light01.c: 98: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send
      +                          (' ');
  9406  001FBC  0E00               	movlw	0
  9407  001FBE  6E15               	movwf	judgement@i,c
  9408  001FC0  D004               	goto	i2l3709
  9409  001FC2                     i2l3705:
  9410  001FC2  0E20               	movlw	32
  9411  001FC4  EC4F  F01B         	call	i2_tx_send
  9412  001FC8  2A15               	incf	judgement@i,f,c
  9413  001FCA                     i2l3709:
  9414  001FCA  0E2C               	movlw	low _rx_buf
  9415  001FCC  6E01               	movwf	i2ringbuf_num@rb,c
  9416  001FCE  0E00               	movlw	high _rx_buf
  9417  001FD0  6E02               	movwf	i2ringbuf_num@rb+1,c
  9418  001FD2  ECA0  F014         	call	i2_ringbuf_num	;wreg free
  9419  001FD6  5015               	movf	judgement@i,w,c
  9420  001FD8  6E12               	movwf	??_judgement& (0+255),c
  9421  001FDA  6A13               	clrf	(??_judgement+1)& (0+255),c
  9422  001FDC  5001               	movf	?i2_ringbuf_num,w,c
  9423  001FDE  5C12               	subwf	??_judgement,w,c
  9424  001FE0  5002               	movf	?i2_ringbuf_num+1,w,c
  9425  001FE2  5813               	subwfb	??_judgement+1,w,c
  9426  001FE4  A0D8               	btfss	status,0,c
  9427  001FE6  D7ED               	goto	i2l3705
  9428  001FE8                     i2l3711:
  9429                           
  9430                           ;PIC18F27J53-killifish_light01.c: 99: }
  9431                           ;PIC18F27J53-killifish_light01.c: 100: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_sen
      +                          d('\b');
  9432  001FE8  0E00               	movlw	0
  9433  001FEA  6E15               	movwf	judgement@i,c
  9434  001FEC  D004               	goto	i2l3717
  9435  001FEE                     i2l3713:
  9436  001FEE  0E08               	movlw	8
  9437  001FF0  EC4F  F01B         	call	i2_tx_send
  9438  001FF4  2A15               	incf	judgement@i,f,c
  9439  001FF6                     i2l3717:
  9440  001FF6  0E2C               	movlw	low _rx_buf
  9441  001FF8  6E01               	movwf	i2ringbuf_num@rb,c
  9442  001FFA  0E00               	movlw	high _rx_buf
  9443  001FFC  6E02               	movwf	i2ringbuf_num@rb+1,c
  9444  001FFE  ECA0  F014         	call	i2_ringbuf_num	;wreg free
  9445  002002  5015               	movf	judgement@i,w,c
  9446  002004  6E12               	movwf	??_judgement& (0+255),c
  9447  002006  6A13               	clrf	(??_judgement+1)& (0+255),c
  9448  002008  5001               	movf	?i2_ringbuf_num,w,c
  9449  00200A  5C12               	subwf	??_judgement,w,c
  9450  00200C  5002               	movf	?i2_ringbuf_num+1,w,c
  9451  00200E  5813               	subwfb	??_judgement+1,w,c
  9452  002010  A0D8               	btfss	status,0,c
  9453  002012  D7ED               	goto	i2l3713
  9454                           
  9455                           ;PIC18F27J53-killifish_light01.c: 101: tx_sends(cursor_up);
  9456  002014  0EDC               	movlw	low _cursor_up
  9457  002016  6E10               	movwf	i2tx_sends@asciicode,c
  9458  002018  0E00               	movlw	high _cursor_up
  9459  00201A  6E11               	movwf	i2tx_sends@asciicode+1,c
  9460  00201C  EC2C  F019         	call	i2_tx_sends	;wreg free
  9461  002020  0012               	return		;funcret
  9462  002022                     __end_of_judgement:
  9463                           	opt stack 0
  9464                           pclatu	equ	0xFFB
  9465                           pclath	equ	0xFFA
  9466                           tblptru	equ	0xFF8
  9467                           tblptrh	equ	0xFF7
  9468                           tblptrl	equ	0xFF6
  9469                           tablat	equ	0xFF5
  9470                           prodh	equ	0xFF4
  9471                           prodl	equ	0xFF3
  9472                           intcon	equ	0xFF2
  9473                           intcon2	equ	0xFF1
  9474                           postinc0	equ	0xFEE
  9475                           fsr0h	equ	0xFEA
  9476                           fsr0l	equ	0xFE9
  9477                           wreg	equ	0xFE8
  9478                           indf1	equ	0xFE7
  9479                           postinc1	equ	0xFE6
  9480                           postdec1	equ	0xFE5
  9481                           fsr1h	equ	0xFE2
  9482                           fsr1l	equ	0xFE1
  9483                           indf2	equ	0xFDF
  9484                           postinc2	equ	0xFDE
  9485                           postdec2	equ	0xFDD
  9486                           fsr2h	equ	0xFDA
  9487                           fsr2l	equ	0xFD9
  9488                           status	equ	0xFD8
  9489                           
  9490 ;; *************** function i2_tx_sends *****************
  9491 ;; Defined at:
  9492 ;;		line 227 in file "../My_header\My_header.h"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  asciicode       2   15[COMRAM] PTR const unsigned char 
  9495 ;;		 -> STR_26(4), STR_11(2), STR_10(2), STR_9(3), 
  9496 ;;		 -> weekday_3char(28), STR_8(3), STR_7(2), STR_6(2), 
  9497 ;;		 -> STR_5(3), tx_send_dec@str(10), cursor_up(4), STR_4(3), 
  9498 ;;		 -> STR_3(6), STR_2(6), STR_1(3), cursor_right(4), 
  9499 ;;		 -> cursor_down(4), 
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;		None
  9502 ;; Return value:  Size  Location     Type
  9503 ;;		None               void
  9504 ;; Registers used:
  9505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;Total ram usage:        2 bytes
  9516 ;; Hardware stack levels used:    1
  9517 ;; Hardware stack levels required when called:    2
  9518 ;; This function calls:
  9519 ;;		i2_ringbuf_put
  9520 ;; This function is called by:
  9521 ;;		_judgement
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text46
  9526  003258                     __ptext46:
  9527                           	opt stack 0
  9528  003258                     i2_tx_sends:
  9529                           	opt stack 20
  9530                           
  9531                           ;My_header\My_header.h: 228: while (*asciicode) {
  9532                           
  9533                           ;incstack = 0
  9534  003258  D01A               	goto	i2l3425
  9535  00325A                     i2l3421:
  9536                           
  9537                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  9538  00325A  0E34               	movlw	low _tx_buf
  9539  00325C  6E09               	movwf	i2ringbuf_put@rb,c
  9540  00325E  0E00               	movlw	high _tx_buf
  9541  003260  6E0A               	movwf	i2ringbuf_put@rb+1,c
  9542  003262  C010  FFF6         	movff	i2tx_sends@asciicode,tblptrl
  9543  003266  C011  FFF7         	movff	i2tx_sends@asciicode+1,tblptrh
  9544  00326A  0E00               	movlw	low (__smallconst shr (0+16))
  9545  00326C  6EF8               	movwf	tblptru,c
  9546  00326E  0E0E               	movlw	(high __ramtop+-1)
  9547  003270  64F7               	cpfsgt	tblptrh,c
  9548  003272  D003               	bra	i2u282_47
  9549  003274  0008               	tblrd		*
  9550  003276  50F5               	movf	tablat,w,c
  9551  003278  D005               	bra	i2u282_40
  9552  00327A                     i2u282_47:
  9553  00327A  CFF6 FFE1          	movff	tblptrl,fsr1l
  9554  00327E  CFF7 FFE2          	movff	tblptrh,fsr1h
  9555  003282  50E7               	movf	indf1,w,c
  9556  003284                     i2u282_40:
  9557  003284  6E0B               	movwf	i2ringbuf_put@asciicode,c
  9558  003286  EC59  F015         	call	i2_ringbuf_put	;wreg free
  9559  00328A  4A10               	infsnz	i2tx_sends@asciicode,f,c
  9560  00328C  2A11               	incf	i2tx_sends@asciicode+1,f,c
  9561  00328E                     i2l3425:
  9562  00328E  C010  FFF6         	movff	i2tx_sends@asciicode,tblptrl
  9563  003292  C011  FFF7         	movff	i2tx_sends@asciicode+1,tblptrh
  9564  003296  0E00               	movlw	low (__smallconst shr (0+16))
  9565  003298  6EF8               	movwf	tblptru,c
  9566  00329A  0E0E               	movlw	(high __ramtop+-1)
  9567  00329C  64F7               	cpfsgt	tblptrh,c
  9568  00329E  D003               	bra	i2u283_47
  9569  0032A0  0008               	tblrd		*
  9570  0032A2  50F5               	movf	tablat,w,c
  9571  0032A4  D005               	bra	i2u283_40
  9572  0032A6                     i2u283_47:
  9573  0032A6  CFF6 FFE1          	movff	tblptrl,fsr1l
  9574  0032AA  CFF7 FFE2          	movff	tblptrh,fsr1h
  9575  0032AE  50E7               	movf	indf1,w,c
  9576  0032B0                     i2u283_40:
  9577  0032B0  0900               	iorlw	0
  9578  0032B2  A4D8               	btfss	status,2,c
  9579  0032B4  D7D2               	goto	i2l3421
  9580                           
  9581                           ;My_header\My_header.h: 230: }
  9582                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  9583  0032B6  889D               	bsf	3997,4,c	;volatile
  9584  0032B8  0012               	return		;funcret
  9585  0032BA                     __end_ofi2_tx_sends:
  9586                           	opt stack 0
  9587                           pclatu	equ	0xFFB
  9588                           pclath	equ	0xFFA
  9589                           tblptru	equ	0xFF8
  9590                           tblptrh	equ	0xFF7
  9591                           tblptrl	equ	0xFF6
  9592                           tablat	equ	0xFF5
  9593                           prodh	equ	0xFF4
  9594                           prodl	equ	0xFF3
  9595                           intcon	equ	0xFF2
  9596                           intcon2	equ	0xFF1
  9597                           postinc0	equ	0xFEE
  9598                           fsr0h	equ	0xFEA
  9599                           fsr0l	equ	0xFE9
  9600                           wreg	equ	0xFE8
  9601                           indf1	equ	0xFE7
  9602                           postinc1	equ	0xFE6
  9603                           postdec1	equ	0xFE5
  9604                           fsr1h	equ	0xFE2
  9605                           fsr1l	equ	0xFE1
  9606                           indf2	equ	0xFDF
  9607                           postinc2	equ	0xFDE
  9608                           postdec2	equ	0xFDD
  9609                           fsr2h	equ	0xFDA
  9610                           fsr2l	equ	0xFD9
  9611                           status	equ	0xFD8
  9612                           
  9613 ;; *************** function i2_tx_send *****************
  9614 ;; Defined at:
  9615 ;;		line 222 in file "../My_header\My_header.h"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  asciicode       1    wreg     const unsigned char 
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;  asciicode       1   15[COMRAM] const unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;		None               void
  9622 ;; Registers used:
  9623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9633 ;;Total ram usage:        1 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; Hardware stack levels required when called:    2
  9636 ;; This function calls:
  9637 ;;		i2_ringbuf_put
  9638 ;; This function is called by:
  9639 ;;		_judgement
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text47
  9644  00369E                     __ptext47:
  9645                           	opt stack 0
  9646  00369E                     i2_tx_send:
  9647                           	opt stack 20
  9648                           
  9649                           ;incstack = 0
  9650                           ;i2tx_send@asciicode stored from wreg
  9651  00369E  6E10               	movwf	i2tx_send@asciicode,c
  9652                           
  9653                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  9654  0036A0  0E34               	movlw	low _tx_buf
  9655  0036A2  6E09               	movwf	i2ringbuf_put@rb,c
  9656  0036A4  0E00               	movlw	high _tx_buf
  9657  0036A6  6E0A               	movwf	i2ringbuf_put@rb+1,c
  9658  0036A8  C010  F00B         	movff	i2tx_send@asciicode,i2ringbuf_put@asciicode
  9659  0036AC  EC59  F015         	call	i2_ringbuf_put	;wreg free
  9660                           
  9661                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  9662  0036B0  889D               	bsf	3997,4,c	;volatile
  9663  0036B2  0012               	return		;funcret
  9664  0036B4                     __end_ofi2_tx_send:
  9665                           	opt stack 0
  9666                           pclatu	equ	0xFFB
  9667                           pclath	equ	0xFFA
  9668                           tblptru	equ	0xFF8
  9669                           tblptrh	equ	0xFF7
  9670                           tblptrl	equ	0xFF6
  9671                           tablat	equ	0xFF5
  9672                           prodh	equ	0xFF4
  9673                           prodl	equ	0xFF3
  9674                           intcon	equ	0xFF2
  9675                           intcon2	equ	0xFF1
  9676                           postinc0	equ	0xFEE
  9677                           fsr0h	equ	0xFEA
  9678                           fsr0l	equ	0xFE9
  9679                           wreg	equ	0xFE8
  9680                           indf1	equ	0xFE7
  9681                           postinc1	equ	0xFE6
  9682                           postdec1	equ	0xFE5
  9683                           fsr1h	equ	0xFE2
  9684                           fsr1l	equ	0xFE1
  9685                           indf2	equ	0xFDF
  9686                           postinc2	equ	0xFDE
  9687                           postdec2	equ	0xFDD
  9688                           fsr2h	equ	0xFDA
  9689                           fsr2l	equ	0xFD9
  9690                           status	equ	0xFD8
  9691                           
  9692 ;; *************** function _ringbuf_delete *****************
  9693 ;; Defined at:
  9694 ;;		line 85 in file "../My_header\My_ringbuf.h"
  9695 ;; Parameters:    Size  Location     Type
  9696 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  9697 ;;		 -> rx_buf(8), 
  9698 ;; Auto vars:     Size  Location     Type
  9699 ;;		None
  9700 ;; Return value:  Size  Location     Type
  9701 ;;		None               void
  9702 ;; Registers used:
  9703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9704 ;; Tracked objects:
  9705 ;;		On entry : 0/0
  9706 ;;		On exit  : 0/0
  9707 ;;		Unchanged: 0/0
  9708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9713 ;;Total ram usage:        2 bytes
  9714 ;; Hardware stack levels used:    1
  9715 ;; This function calls:
  9716 ;;		Nothing
  9717 ;; This function is called by:
  9718 ;;		_judgement
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text48
  9723  003600                     __ptext48:
  9724                           	opt stack 0
  9725  003600                     _ringbuf_delete:
  9726                           	opt stack 22
  9727                           
  9728                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  9729                           
  9730                           ;incstack = 0
  9731  003600  EE20 F006          	lfsr	2,6
  9732  003604  5001               	movf	ringbuf_delete@rb,w,c
  9733  003606  26D9               	addwf	fsr2l,f,c
  9734  003608  5002               	movf	ringbuf_delete@rb+1,w,c
  9735  00360A  22DA               	addwfc	fsr2h,f,c
  9736  00360C  EE10 F004          	lfsr	1,4
  9737  003610  5001               	movf	ringbuf_delete@rb,w,c
  9738  003612  26E1               	addwf	fsr1l,f,c
  9739  003614  5002               	movf	ringbuf_delete@rb+1,w,c
  9740  003616  22E2               	addwfc	fsr1h,f,c
  9741  003618  CFDE FFE6          	movff	postinc2,postinc1
  9742  00361C  CFDD FFE5          	movff	postdec2,postdec1
  9743  003620  0012               	return		;funcret
  9744  003622                     __end_of_ringbuf_delete:
  9745                           	opt stack 0
  9746                           pclatu	equ	0xFFB
  9747                           pclath	equ	0xFFA
  9748                           tblptru	equ	0xFF8
  9749                           tblptrh	equ	0xFF7
  9750                           tblptrl	equ	0xFF6
  9751                           tablat	equ	0xFF5
  9752                           prodh	equ	0xFF4
  9753                           prodl	equ	0xFF3
  9754                           intcon	equ	0xFF2
  9755                           intcon2	equ	0xFF1
  9756                           postinc0	equ	0xFEE
  9757                           fsr0h	equ	0xFEA
  9758                           fsr0l	equ	0xFE9
  9759                           wreg	equ	0xFE8
  9760                           indf1	equ	0xFE7
  9761                           postinc1	equ	0xFE6
  9762                           postdec1	equ	0xFE5
  9763                           fsr1h	equ	0xFE2
  9764                           fsr1l	equ	0xFE1
  9765                           indf2	equ	0xFDF
  9766                           postinc2	equ	0xFDE
  9767                           postdec2	equ	0xFDD
  9768                           fsr2h	equ	0xFDA
  9769                           fsr2l	equ	0xFD9
  9770                           status	equ	0xFD8
  9771                           
  9772 ;; *************** function _ringbuf_backspace *****************
  9773 ;; Defined at:
  9774 ;;		line 78 in file "../My_header\My_ringbuf.h"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  9777 ;;		 -> rx_buf(8), 
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;		None
  9780 ;; Return value:  Size  Location     Type
  9781 ;;		None               void
  9782 ;; Registers used:
  9783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9791 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9792 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9793 ;;Total ram usage:        6 bytes
  9794 ;; Hardware stack levels used:    1
  9795 ;; Hardware stack levels required when called:    1
  9796 ;; This function calls:
  9797 ;;		i2_ringbuf_num
  9798 ;; This function is called by:
  9799 ;;		_judgement
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           	psect	text49
  9804  003116                     __ptext49:
  9805                           	opt stack 0
  9806  003116                     _ringbuf_backspace:
  9807                           	opt stack 21
  9808                           
  9809                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  9810                           
  9811                           ;incstack = 0
  9812  003116  C009  F001         	movff	ringbuf_backspace@rb,i2ringbuf_num@rb
  9813  00311A  C00A  F002         	movff	ringbuf_backspace@rb+1,i2ringbuf_num@rb+1
  9814  00311E  ECA0  F014         	call	i2_ringbuf_num	;wreg free
  9815  003122  5001               	movf	?i2_ringbuf_num,w,c
  9816  003124  1002               	iorwf	?i2_ringbuf_num+1,w,c
  9817  003126  B4D8               	btfsc	status,2,c
  9818  003128  0012               	return	
  9819                           
  9820                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  9821  00312A  EE20 F004          	lfsr	2,4
  9822  00312E  5009               	movf	ringbuf_backspace@rb,w,c
  9823  003130  26D9               	addwf	fsr2l,f,c
  9824  003132  500A               	movf	ringbuf_backspace@rb+1,w,c
  9825  003134  22DA               	addwfc	fsr2h,f,c
  9826  003136  50DE               	movf	postinc2,w,c
  9827  003138  10DE               	iorwf	postinc2,w,c
  9828  00313A  B4D8               	btfsc	status,2,c
  9829  00313C  D00A               	goto	i2l3231
  9830  00313E  EE20 F004          	lfsr	2,4
  9831  003142  5009               	movf	ringbuf_backspace@rb,w,c
  9832  003144  26D9               	addwf	fsr2l,f,c
  9833  003146  500A               	movf	ringbuf_backspace@rb+1,w,c
  9834  003148  22DA               	addwfc	fsr2h,f,c
  9835  00314A  06DE               	decf	postinc2,f,c
  9836  00314C  0E00               	movlw	0
  9837  00314E  5ADD               	subwfb	postdec2,f,c
  9838  003150  0012               	return	
  9839  003152                     i2l3231:
  9840                           
  9841                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  9842  003152  0EFF               	movlw	255
  9843  003154  6E0B               	movwf	??_ringbuf_backspace& (0+255),c
  9844  003156  0EFF               	movlw	255
  9845  003158  6E0C               	movwf	(??_ringbuf_backspace+1)& (0+255),c
  9846  00315A  EE20 F002          	lfsr	2,2
  9847  00315E  5009               	movf	ringbuf_backspace@rb,w,c
  9848  003160  26D9               	addwf	fsr2l,f,c
  9849  003162  500A               	movf	ringbuf_backspace@rb+1,w,c
  9850  003164  22DA               	addwfc	fsr2h,f,c
  9851  003166  CFDE F00D          	movff	postinc2,??_ringbuf_backspace+2
  9852  00316A  CFDD F00E          	movff	postdec2,??_ringbuf_backspace+3
  9853  00316E  500B               	movf	??_ringbuf_backspace,w,c
  9854  003170  260D               	addwf	??_ringbuf_backspace+2,f,c
  9855  003172  500C               	movf	??_ringbuf_backspace+1,w,c
  9856  003174  220E               	addwfc	??_ringbuf_backspace+3,f,c
  9857  003176  EE20 F004          	lfsr	2,4
  9858  00317A  5009               	movf	ringbuf_backspace@rb,w,c
  9859  00317C  26D9               	addwf	fsr2l,f,c
  9860  00317E  500A               	movf	ringbuf_backspace@rb+1,w,c
  9861  003180  22DA               	addwfc	fsr2h,f,c
  9862  003182  C00D  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  9863  003186  C00E  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  9864  00318A  0012               	return	
  9865  00318C                     __end_of_ringbuf_backspace:
  9866                           	opt stack 0
  9867                           pclatu	equ	0xFFB
  9868                           pclath	equ	0xFFA
  9869                           tblptru	equ	0xFF8
  9870                           tblptrh	equ	0xFF7
  9871                           tblptrl	equ	0xFF6
  9872                           tablat	equ	0xFF5
  9873                           prodh	equ	0xFF4
  9874                           prodl	equ	0xFF3
  9875                           intcon	equ	0xFF2
  9876                           intcon2	equ	0xFF1
  9877                           postinc0	equ	0xFEE
  9878                           fsr0h	equ	0xFEA
  9879                           fsr0l	equ	0xFE9
  9880                           wreg	equ	0xFE8
  9881                           indf1	equ	0xFE7
  9882                           postinc1	equ	0xFE6
  9883                           postdec1	equ	0xFE5
  9884                           fsr1h	equ	0xFE2
  9885                           fsr1l	equ	0xFE1
  9886                           indf2	equ	0xFDF
  9887                           postinc2	equ	0xFDE
  9888                           postdec2	equ	0xFDD
  9889                           fsr2h	equ	0xFDA
  9890                           fsr2l	equ	0xFD9
  9891                           status	equ	0xFD8
  9892                           
  9893 ;; *************** function _button_timer_interrupt *****************
  9894 ;; Defined at:
  9895 ;;		line 51 in file "../My_header\My_button.h"
  9896 ;; Parameters:    Size  Location     Type
  9897 ;;  bt              2    0[COMRAM] PTR struct button
  9898 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
  9899 ;;  sw_value        1    2[COMRAM] unsigned char 
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;		None
  9902 ;; Return value:  Size  Location     Type
  9903 ;;		None               void
  9904 ;; Registers used:
  9905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 0/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9911 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9914 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9915 ;;Total ram usage:        5 bytes
  9916 ;; Hardware stack levels used:    1
  9917 ;; This function calls:
  9918 ;;		Nothing
  9919 ;; This function is called by:
  9920 ;;		_ISR
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           	psect	text50
  9925  0019F4                     __ptext50:
  9926                           	opt stack 0
  9927  0019F4                     _button_timer_interrupt:
  9928                           	opt stack 23
  9929                           
  9930                           ;My_header\My_button.h: 52: if (sw_value) {
  9931                           
  9932                           ;incstack = 0
  9933  0019F4  5003               	movf	button_timer_interrupt@sw_value,w,c
  9934  0019F6  B4D8               	btfsc	status,2,c
  9935  0019F8  D098               	goto	i2l3471
  9936                           
  9937                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
  9938  0019FA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  9939  0019FE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  9940  001A02  0E84               	movlw	132
  9941  001A04  18DE               	xorwf	postinc2,w,c
  9942  001A06  E10B               	bnz	i2l292
  9943  001A08  0E03               	movlw	3
  9944  001A0A  18DE               	xorwf	postinc2,w,c
  9945  001A0C  A4D8               	btfss	status,2,c
  9946  001A0E  D007               	goto	i2l292
  9947  001A10  EE20 F003          	lfsr	2,3
  9948  001A14  5001               	movf	button_timer_interrupt@bt,w,c
  9949  001A16  26D9               	addwf	fsr2l,f,c
  9950  001A18  5002               	movf	button_timer_interrupt@bt+1,w,c
  9951  001A1A  22DA               	addwfc	fsr2h,f,c
  9952  001A1C  8EDF               	bsf	indf2,7,c
  9953  001A1E                     i2l292:
  9954                           
  9955                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
  9956  001A1E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  9957  001A22  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  9958  001A26  0EBC               	movlw	188
  9959  001A28  18DE               	xorwf	postinc2,w,c
  9960  001A2A  E10B               	bnz	i2l293
  9961  001A2C  0E02               	movlw	2
  9962  001A2E  18DE               	xorwf	postinc2,w,c
  9963  001A30  A4D8               	btfss	status,2,c
  9964  001A32  D007               	goto	i2l293
  9965  001A34  EE20 F003          	lfsr	2,3
  9966  001A38  5001               	movf	button_timer_interrupt@bt,w,c
  9967  001A3A  26D9               	addwf	fsr2l,f,c
  9968  001A3C  5002               	movf	button_timer_interrupt@bt+1,w,c
  9969  001A3E  22DA               	addwfc	fsr2h,f,c
  9970  001A40  8CDF               	bsf	indf2,6,c
  9971  001A42                     i2l293:
  9972                           
  9973                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
  9974  001A42  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  9975  001A46  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  9976  001A4A  0EF4               	movlw	244
  9977  001A4C  18DE               	xorwf	postinc2,w,c
  9978  001A4E  E10A               	bnz	i2l294
  9979  001A50  04DE               	decf	postinc2,w,c
  9980  001A52  A4D8               	btfss	status,2,c
  9981  001A54  D007               	goto	i2l294
  9982  001A56  EE20 F003          	lfsr	2,3
  9983  001A5A  5001               	movf	button_timer_interrupt@bt,w,c
  9984  001A5C  26D9               	addwf	fsr2l,f,c
  9985  001A5E  5002               	movf	button_timer_interrupt@bt+1,w,c
  9986  001A60  22DA               	addwfc	fsr2h,f,c
  9987  001A62  8ADF               	bsf	indf2,5,c
  9988  001A64                     i2l294:
  9989                           
  9990                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
  9991  001A64  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  9992  001A68  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  9993  001A6C  0E2C               	movlw	44
  9994  001A6E  18DE               	xorwf	postinc2,w,c
  9995  001A70  E10A               	bnz	i2l295
  9996  001A72  04DE               	decf	postinc2,w,c
  9997  001A74  A4D8               	btfss	status,2,c
  9998  001A76  D007               	goto	i2l295
  9999  001A78  EE20 F003          	lfsr	2,3
 10000  001A7C  5001               	movf	button_timer_interrupt@bt,w,c
 10001  001A7E  26D9               	addwf	fsr2l,f,c
 10002  001A80  5002               	movf	button_timer_interrupt@bt+1,w,c
 10003  001A82  22DA               	addwfc	fsr2h,f,c
 10004  001A84  88DF               	bsf	indf2,4,c
 10005  001A86                     i2l295:
 10006                           
 10007                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 10008  001A86  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10009  001A8A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10010  001A8E  0E96               	movlw	150
 10011  001A90  18DE               	xorwf	postinc2,w,c
 10012  001A92  10DE               	iorwf	postinc2,w,c
 10013  001A94  A4D8               	btfss	status,2,c
 10014  001A96  D007               	goto	i2l296
 10015  001A98  EE20 F003          	lfsr	2,3
 10016  001A9C  5001               	movf	button_timer_interrupt@bt,w,c
 10017  001A9E  26D9               	addwf	fsr2l,f,c
 10018  001AA0  5002               	movf	button_timer_interrupt@bt+1,w,c
 10019  001AA2  22DA               	addwfc	fsr2h,f,c
 10020  001AA4  86DF               	bsf	indf2,3,c
 10021  001AA6                     i2l296:
 10022                           
 10023                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 10024  001AA6  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10025  001AAA  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10026  001AAE  0E3C               	movlw	60
 10027  001AB0  18DE               	xorwf	postinc2,w,c
 10028  001AB2  10DE               	iorwf	postinc2,w,c
 10029  001AB4  A4D8               	btfss	status,2,c
 10030  001AB6  D007               	goto	i2l297
 10031  001AB8  EE20 F003          	lfsr	2,3
 10032  001ABC  5001               	movf	button_timer_interrupt@bt,w,c
 10033  001ABE  26D9               	addwf	fsr2l,f,c
 10034  001AC0  5002               	movf	button_timer_interrupt@bt+1,w,c
 10035  001AC2  22DA               	addwfc	fsr2h,f,c
 10036  001AC4  84DF               	bsf	indf2,2,c
 10037  001AC6                     i2l297:
 10038                           
 10039                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 10040  001AC6  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10041  001ACA  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10042  001ACE  0E10               	movlw	16
 10043  001AD0  18DE               	xorwf	postinc2,w,c
 10044  001AD2  10DE               	iorwf	postinc2,w,c
 10045  001AD4  A4D8               	btfss	status,2,c
 10046  001AD6  D007               	goto	i2l298
 10047  001AD8  EE20 F003          	lfsr	2,3
 10048  001ADC  5001               	movf	button_timer_interrupt@bt,w,c
 10049  001ADE  26D9               	addwf	fsr2l,f,c
 10050  001AE0  5002               	movf	button_timer_interrupt@bt+1,w,c
 10051  001AE2  22DA               	addwfc	fsr2h,f,c
 10052  001AE4  82DF               	bsf	indf2,1,c
 10053  001AE6                     i2l298:
 10054                           
 10055                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 10056  001AE6  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10057  001AEA  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10058  001AEE  0E02               	movlw	2
 10059  001AF0  18DE               	xorwf	postinc2,w,c
 10060  001AF2  10DE               	iorwf	postinc2,w,c
 10061  001AF4  A4D8               	btfss	status,2,c
 10062  001AF6  D007               	goto	i2l299
 10063  001AF8  EE20 F003          	lfsr	2,3
 10064  001AFC  5001               	movf	button_timer_interrupt@bt,w,c
 10065  001AFE  26D9               	addwf	fsr2l,f,c
 10066  001B00  5002               	movf	button_timer_interrupt@bt+1,w,c
 10067  001B02  22DA               	addwfc	fsr2h,f,c
 10068  001B04  80DF               	bsf	indf2,0,c
 10069  001B06                     i2l299:
 10070                           
 10071                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 10072  001B06  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10073  001B0A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10074  001B0E  0E85               	movlw	133
 10075  001B10  5CDE               	subwf	postinc2,w,c
 10076  001B12  0E03               	movlw	3
 10077  001B14  58DE               	subwfb	postinc2,w,c
 10078  001B16  B0D8               	btfsc	status,0,c
 10079  001B18  0012               	return	
 10080  001B1A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10081  001B1E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10082  001B22  2ADE               	incf	postinc2,f,c
 10083  001B24  0E00               	movlw	0
 10084  001B26  22DD               	addwfc	postdec2,f,c
 10085                           
 10086                           ;My_header\My_button.h: 62: } else {
 10087  001B28  0012               	return	
 10088  001B2A                     i2l3471:
 10089                           
 10090                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 10091  001B2A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10092  001B2E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10093  001B32  0E84               	movlw	132
 10094  001B34  5CDE               	subwf	postinc2,w,c
 10095  001B36  0E03               	movlw	3
 10096  001B38  58DE               	subwfb	postinc2,w,c
 10097  001B3A  A0D8               	btfss	status,0,c
 10098  001B3C  D008               	goto	i2l3475
 10099  001B3E  EE20 F002          	lfsr	2,2
 10100  001B42  5001               	movf	button_timer_interrupt@bt,w,c
 10101  001B44  26D9               	addwf	fsr2l,f,c
 10102  001B46  5002               	movf	button_timer_interrupt@bt+1,w,c
 10103  001B48  22DA               	addwfc	fsr2h,f,c
 10104  001B4A  8EDF               	bsf	indf2,7,c
 10105  001B4C  D081               	goto	i2l3503
 10106  001B4E                     i2l3475:
 10107                           
 10108                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 10109  001B4E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10110  001B52  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10111  001B56  0EBC               	movlw	188
 10112  001B58  5CDE               	subwf	postinc2,w,c
 10113  001B5A  0E02               	movlw	2
 10114  001B5C  58DE               	subwfb	postinc2,w,c
 10115  001B5E  A0D8               	btfss	status,0,c
 10116  001B60  D008               	goto	i2l3479
 10117  001B62  EE20 F002          	lfsr	2,2
 10118  001B66  5001               	movf	button_timer_interrupt@bt,w,c
 10119  001B68  26D9               	addwf	fsr2l,f,c
 10120  001B6A  5002               	movf	button_timer_interrupt@bt+1,w,c
 10121  001B6C  22DA               	addwfc	fsr2h,f,c
 10122  001B6E  8CDF               	bsf	indf2,6,c
 10123  001B70  D06F               	goto	i2l3503
 10124  001B72                     i2l3479:
 10125                           
 10126                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 10127  001B72  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10128  001B76  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10129  001B7A  0EF4               	movlw	244
 10130  001B7C  5CDE               	subwf	postinc2,w,c
 10131  001B7E  0E01               	movlw	1
 10132  001B80  58DE               	subwfb	postinc2,w,c
 10133  001B82  A0D8               	btfss	status,0,c
 10134  001B84  D008               	goto	i2l3483
 10135  001B86  EE20 F002          	lfsr	2,2
 10136  001B8A  5001               	movf	button_timer_interrupt@bt,w,c
 10137  001B8C  26D9               	addwf	fsr2l,f,c
 10138  001B8E  5002               	movf	button_timer_interrupt@bt+1,w,c
 10139  001B90  22DA               	addwfc	fsr2h,f,c
 10140  001B92  8ADF               	bsf	indf2,5,c
 10141  001B94  D05D               	goto	i2l3503
 10142  001B96                     i2l3483:
 10143                           
 10144                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 10145  001B96  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10146  001B9A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10147  001B9E  0E2C               	movlw	44
 10148  001BA0  5CDE               	subwf	postinc2,w,c
 10149  001BA2  0E01               	movlw	1
 10150  001BA4  58DE               	subwfb	postinc2,w,c
 10151  001BA6  A0D8               	btfss	status,0,c
 10152  001BA8  D008               	goto	i2l3487
 10153  001BAA  EE20 F002          	lfsr	2,2
 10154  001BAE  5001               	movf	button_timer_interrupt@bt,w,c
 10155  001BB0  26D9               	addwf	fsr2l,f,c
 10156  001BB2  5002               	movf	button_timer_interrupt@bt+1,w,c
 10157  001BB4  22DA               	addwfc	fsr2h,f,c
 10158  001BB6  88DF               	bsf	indf2,4,c
 10159  001BB8  D04B               	goto	i2l3503
 10160  001BBA                     i2l3487:
 10161                           
 10162                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 10163  001BBA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10164  001BBE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10165  001BC2  0E01               	movlw	1
 10166  001BC4  50DB               	movf	plusw2,w,c
 10167  001BC6  E104               	bnz	i2u305_40
 10168  001BC8  0E96               	movlw	150
 10169  001BCA  5CDE               	subwf	postinc2,w,c
 10170  001BCC  A0D8               	btfss	status,0,c
 10171  001BCE  D008               	goto	i2l3491
 10172  001BD0                     i2u305_40:
 10173  001BD0  EE20 F002          	lfsr	2,2
 10174  001BD4  5001               	movf	button_timer_interrupt@bt,w,c
 10175  001BD6  26D9               	addwf	fsr2l,f,c
 10176  001BD8  5002               	movf	button_timer_interrupt@bt+1,w,c
 10177  001BDA  22DA               	addwfc	fsr2h,f,c
 10178  001BDC  86DF               	bsf	indf2,3,c
 10179  001BDE  D038               	goto	i2l3503
 10180  001BE0                     i2l3491:
 10181                           
 10182                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 10183  001BE0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10184  001BE4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10185  001BE8  0E01               	movlw	1
 10186  001BEA  50DB               	movf	plusw2,w,c
 10187  001BEC  E104               	bnz	i2u306_40
 10188  001BEE  0E3C               	movlw	60
 10189  001BF0  5CDE               	subwf	postinc2,w,c
 10190  001BF2  A0D8               	btfss	status,0,c
 10191  001BF4  D008               	goto	i2l3495
 10192  001BF6                     i2u306_40:
 10193  001BF6  EE20 F002          	lfsr	2,2
 10194  001BFA  5001               	movf	button_timer_interrupt@bt,w,c
 10195  001BFC  26D9               	addwf	fsr2l,f,c
 10196  001BFE  5002               	movf	button_timer_interrupt@bt+1,w,c
 10197  001C00  22DA               	addwfc	fsr2h,f,c
 10198  001C02  84DF               	bsf	indf2,2,c
 10199  001C04  D025               	goto	i2l3503
 10200  001C06                     i2l3495:
 10201                           
 10202                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 10203  001C06  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10204  001C0A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10205  001C0E  0E01               	movlw	1
 10206  001C10  50DB               	movf	plusw2,w,c
 10207  001C12  E104               	bnz	i2u307_40
 10208  001C14  0E10               	movlw	16
 10209  001C16  5CDE               	subwf	postinc2,w,c
 10210  001C18  A0D8               	btfss	status,0,c
 10211  001C1A  D008               	goto	i2l3499
 10212  001C1C                     i2u307_40:
 10213  001C1C  EE20 F002          	lfsr	2,2
 10214  001C20  5001               	movf	button_timer_interrupt@bt,w,c
 10215  001C22  26D9               	addwf	fsr2l,f,c
 10216  001C24  5002               	movf	button_timer_interrupt@bt+1,w,c
 10217  001C26  22DA               	addwfc	fsr2h,f,c
 10218  001C28  82DF               	bsf	indf2,1,c
 10219  001C2A  D012               	goto	i2l3503
 10220  001C2C                     i2l3499:
 10221                           
 10222                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 10223  001C2C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10224  001C30  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10225  001C34  0E01               	movlw	1
 10226  001C36  50DB               	movf	plusw2,w,c
 10227  001C38  E104               	bnz	i2u308_40
 10228  001C3A  0E02               	movlw	2
 10229  001C3C  5CDE               	subwf	postinc2,w,c
 10230  001C3E  A0D8               	btfss	status,0,c
 10231  001C40  D007               	goto	i2l3503
 10232  001C42                     i2u308_40:
 10233  001C42  EE20 F002          	lfsr	2,2
 10234  001C46  5001               	movf	button_timer_interrupt@bt,w,c
 10235  001C48  26D9               	addwf	fsr2l,f,c
 10236  001C4A  5002               	movf	button_timer_interrupt@bt+1,w,c
 10237  001C4C  22DA               	addwfc	fsr2h,f,c
 10238  001C4E  80DF               	bsf	indf2,0,c
 10239  001C50                     i2l3503:
 10240                           
 10241                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 10242  001C50  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 10243  001C54  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 10244  001C58  0E00               	movlw	0
 10245  001C5A  6EDE               	movwf	postinc2,c
 10246  001C5C  0E00               	movlw	0
 10247  001C5E  6EDD               	movwf	postdec2,c
 10248                           
 10249                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 10250  001C60  EE20 F002          	lfsr	2,2
 10251  001C64  5001               	movf	button_timer_interrupt@bt,w,c
 10252  001C66  26D9               	addwf	fsr2l,f,c
 10253  001C68  5002               	movf	button_timer_interrupt@bt+1,w,c
 10254  001C6A  22DA               	addwfc	fsr2h,f,c
 10255  001C6C  0EFF               	movlw	255
 10256  001C6E  16DE               	andwf	postinc2,f,c
 10257  001C70  0E00               	movlw	0
 10258  001C72  16DD               	andwf	postdec2,f,c
 10259  001C74  0012               	return	
 10260  001C76                     __end_of_button_timer_interrupt:
 10261                           	opt stack 0
 10262                           pclatu	equ	0xFFB
 10263                           pclath	equ	0xFFA
 10264                           tblptru	equ	0xFF8
 10265                           tblptrh	equ	0xFF7
 10266                           tblptrl	equ	0xFF6
 10267                           tablat	equ	0xFF5
 10268                           prodh	equ	0xFF4
 10269                           prodl	equ	0xFF3
 10270                           intcon	equ	0xFF2
 10271                           intcon2	equ	0xFF1
 10272                           postinc0	equ	0xFEE
 10273                           fsr0h	equ	0xFEA
 10274                           fsr0l	equ	0xFE9
 10275                           wreg	equ	0xFE8
 10276                           indf1	equ	0xFE7
 10277                           postinc1	equ	0xFE6
 10278                           postdec1	equ	0xFE5
 10279                           fsr1h	equ	0xFE2
 10280                           fsr1l	equ	0xFE1
 10281                           indf2	equ	0xFDF
 10282                           postinc2	equ	0xFDE
 10283                           postdec2	equ	0xFDD
 10284                           plusw2	equ	0xFDB
 10285                           fsr2h	equ	0xFDA
 10286                           fsr2l	equ	0xFD9
 10287                           status	equ	0xFD8
 10288                           
 10289 ;; *************** function _UART_ISR *****************
 10290 ;; Defined at:
 10291 ;;		line 208 in file "../My_header\My_header.h"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;		None
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;  ascii           1   15[COMRAM] unsigned char 
 10296 ;; Return value:  Size  Location     Type
 10297 ;;		None               void
 10298 ;; Registers used:
 10299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10309 ;;Total ram usage:        1 bytes
 10310 ;; Hardware stack levels used:    1
 10311 ;; Hardware stack levels required when called:    2
 10312 ;; This function calls:
 10313 ;;		i2_ringbuf_num
 10314 ;;		i2_ringbuf_pop
 10315 ;;		i2_ringbuf_put
 10316 ;; This function is called by:
 10317 ;;		_ISR
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           	psect	text51
 10322  00340E                     __ptext51:
 10323                           	opt stack 0
 10324  00340E                     _UART_ISR:
 10325                           	opt stack 21
 10326                           
 10327                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 10328                           
 10329                           ;incstack = 0
 10330  00340E  B89D               	btfsc	3997,4,c	;volatile
 10331  003410  A89E               	btfss	3998,4,c	;volatile
 10332  003412  D013               	goto	i2l227
 10333                           
 10334                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
 10335  003414  0E34               	movlw	low _tx_buf
 10336  003416  6E01               	movwf	i2ringbuf_num@rb,c
 10337  003418  0E00               	movlw	high _tx_buf
 10338  00341A  6E02               	movwf	i2ringbuf_num@rb+1,c
 10339  00341C  ECA0  F014         	call	i2_ringbuf_num	;wreg free
 10340  003420  5001               	movf	?i2_ringbuf_num,w,c
 10341  003422  1002               	iorwf	?i2_ringbuf_num+1,w,c
 10342  003424  B4D8               	btfsc	status,2,c
 10343  003426  D008               	goto	i2l228
 10344                           
 10345                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
 10346  003428  0E34               	movlw	low _tx_buf
 10347  00342A  6E09               	movwf	i2ringbuf_pop@rb,c
 10348  00342C  0E00               	movlw	high _tx_buf
 10349  00342E  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 10350  003430  ECB4  F015         	call	i2_ringbuf_pop	;wreg free
 10351  003434  6EAE               	movwf	4014,c	;volatile
 10352                           
 10353                           ;My_header\My_header.h: 212: } else {
 10354  003436  D001               	goto	i2l227
 10355  003438                     i2l228:
 10356                           
 10357                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
 10358  003438  989D               	bcf	3997,4,c	;volatile
 10359  00343A                     i2l227:
 10360                           
 10361                           ;My_header\My_header.h: 214: }
 10362                           ;My_header\My_header.h: 215: }
 10363                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
 10364  00343A  AA9E               	btfss	3998,5,c	;volatile
 10365  00343C  0012               	return	
 10366  00343E  AA9D               	btfss	3997,5,c	;volatile
 10367  003440  0012               	return	
 10368                           
 10369                           ;My_header\My_header.h: 217: char ascii = RCREG1;
 10370  003442  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 10371                           
 10372                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
 10373  003446  0E2C               	movlw	low _rx_buf
 10374  003448  6E09               	movwf	i2ringbuf_put@rb,c
 10375  00344A  0E00               	movlw	high _rx_buf
 10376  00344C  6E0A               	movwf	i2ringbuf_put@rb+1,c
 10377  00344E  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 10378  003452  EC59  F015         	call	i2_ringbuf_put	;wreg free
 10379  003456  0012               	return	
 10380  003458                     __end_of_UART_ISR:
 10381                           	opt stack 0
 10382                           pclatu	equ	0xFFB
 10383                           pclath	equ	0xFFA
 10384                           tblptru	equ	0xFF8
 10385                           tblptrh	equ	0xFF7
 10386                           tblptrl	equ	0xFF6
 10387                           tablat	equ	0xFF5
 10388                           prodh	equ	0xFF4
 10389                           prodl	equ	0xFF3
 10390                           intcon	equ	0xFF2
 10391                           intcon2	equ	0xFF1
 10392                           postinc0	equ	0xFEE
 10393                           fsr0h	equ	0xFEA
 10394                           fsr0l	equ	0xFE9
 10395                           wreg	equ	0xFE8
 10396                           indf1	equ	0xFE7
 10397                           postinc1	equ	0xFE6
 10398                           postdec1	equ	0xFE5
 10399                           fsr1h	equ	0xFE2
 10400                           fsr1l	equ	0xFE1
 10401                           indf2	equ	0xFDF
 10402                           postinc2	equ	0xFDE
 10403                           postdec2	equ	0xFDD
 10404                           plusw2	equ	0xFDB
 10405                           fsr2h	equ	0xFDA
 10406                           fsr2l	equ	0xFD9
 10407                           status	equ	0xFD8
 10408                           
 10409 ;; *************** function i2_ringbuf_put *****************
 10410 ;; Defined at:
 10411 ;;		line 39 in file "../My_header\My_ringbuf.h"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 10414 ;;		 -> rx_buf(8), tx_buf(8), 
 10415 ;;  asciicode       1   10[COMRAM] unsigned char 
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;		None
 10418 ;; Return value:  Size  Location     Type
 10419 ;;		None               void
 10420 ;; Registers used:
 10421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10422 ;; Tracked objects:
 10423 ;;		On entry : 0/0
 10424 ;;		On exit  : 0/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10427 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10429 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10430 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10431 ;;Total ram usage:        7 bytes
 10432 ;; Hardware stack levels used:    1
 10433 ;; Hardware stack levels required when called:    1
 10434 ;; This function calls:
 10435 ;;		i2_ringbuf_num
 10436 ;; This function is called by:
 10437 ;;		_UART_ISR
 10438 ;;		_judgement
 10439 ;;		i2_tx_send
 10440 ;;		i2_tx_sends
 10441 ;; This function uses a non-reentrant model
 10442 ;;
 10443                           
 10444                           	psect	text52
 10445  002AB2                     __ptext52:
 10446                           	opt stack 0
 10447  002AB2                     i2_ringbuf_put:
 10448                           	opt stack 20
 10449                           
 10450                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 10451                           
 10452                           ;incstack = 0
 10453  002AB2  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 10454  002AB6  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 10455  002ABA  ECA0  F014         	call	i2_ringbuf_num	;wreg free
 10456  002ABE  EE20 F002          	lfsr	2,2
 10457  002AC2  5009               	movf	i2ringbuf_put@rb,w,c
 10458  002AC4  26D9               	addwf	fsr2l,f,c
 10459  002AC6  500A               	movf	i2ringbuf_put@rb+1,w,c
 10460  002AC8  22DA               	addwfc	fsr2h,f,c
 10461  002ACA  50DE               	movf	postinc2,w,c
 10462  002ACC  5C01               	subwf	?i2_ringbuf_num,w,c
 10463  002ACE  50DE               	movf	postinc2,w,c
 10464  002AD0  5802               	subwfb	?i2_ringbuf_num+1,w,c
 10465  002AD2  B0D8               	btfsc	status,0,c
 10466  002AD4  0012               	return	
 10467                           
 10468                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 10469  002AD6  EE20 F004          	lfsr	2,4
 10470  002ADA  5009               	movf	i2ringbuf_put@rb,w,c
 10471  002ADC  26D9               	addwf	fsr2l,f,c
 10472  002ADE  500A               	movf	i2ringbuf_put@rb+1,w,c
 10473  002AE0  22DA               	addwfc	fsr2h,f,c
 10474  002AE2  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 10475  002AE6  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 10476  002AEA  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 10477  002AEE  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 10478  002AF2  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 10479  002AF6  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 10480  002AFA  500C               	movf	??i2_ringbuf_put,w,c
 10481  002AFC  240E               	addwf	??i2_ringbuf_put+2,w,c
 10482  002AFE  6ED9               	movwf	fsr2l,c
 10483  002B00  500D               	movf	??i2_ringbuf_put+1,w,c
 10484  002B02  200F               	addwfc	??i2_ringbuf_put+3,w,c
 10485  002B04  6EDA               	movwf	fsr2h,c
 10486  002B06  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 10487                           
 10488                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 10489  002B0A  EE20 F002          	lfsr	2,2
 10490  002B0E  5009               	movf	i2ringbuf_put@rb,w,c
 10491  002B10  26D9               	addwf	fsr2l,f,c
 10492  002B12  500A               	movf	i2ringbuf_put@rb+1,w,c
 10493  002B14  22DA               	addwfc	fsr2h,f,c
 10494  002B16  EE10 F004          	lfsr	1,4
 10495  002B1A  5009               	movf	i2ringbuf_put@rb,w,c
 10496  002B1C  26E1               	addwf	fsr1l,f,c
 10497  002B1E  500A               	movf	i2ringbuf_put@rb+1,w,c
 10498  002B20  22E2               	addwfc	fsr1h,f,c
 10499  002B22  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 10500  002B26  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 10501  002B2A  0E01               	movlw	1
 10502  002B2C  260E               	addwf	??i2_ringbuf_put+2,f,c
 10503  002B2E  0E00               	movlw	0
 10504  002B30  220F               	addwfc	??i2_ringbuf_put+3,f,c
 10505  002B32  50DE               	movf	postinc2,w,c
 10506  002B34  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 10507  002B36  50DE               	movf	postinc2,w,c
 10508  002B38  580F               	subwfb	??i2_ringbuf_put+3,w,c
 10509  002B3A  B0D8               	btfsc	status,0,c
 10510  002B3C  D00A               	goto	i2l3143
 10511  002B3E  EE20 F004          	lfsr	2,4
 10512  002B42  5009               	movf	i2ringbuf_put@rb,w,c
 10513  002B44  26D9               	addwf	fsr2l,f,c
 10514  002B46  500A               	movf	i2ringbuf_put@rb+1,w,c
 10515  002B48  22DA               	addwfc	fsr2h,f,c
 10516  002B4A  2ADE               	incf	postinc2,f,c
 10517  002B4C  0E00               	movlw	0
 10518  002B4E  22DD               	addwfc	postdec2,f,c
 10519  002B50  0012               	return	
 10520  002B52                     i2l3143:
 10521                           
 10522                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 10523  002B52  EE20 F004          	lfsr	2,4
 10524  002B56  5009               	movf	i2ringbuf_put@rb,w,c
 10525  002B58  26D9               	addwf	fsr2l,f,c
 10526  002B5A  500A               	movf	i2ringbuf_put@rb+1,w,c
 10527  002B5C  22DA               	addwfc	fsr2h,f,c
 10528  002B5E  0E00               	movlw	0
 10529  002B60  6EDE               	movwf	postinc2,c
 10530  002B62  0E00               	movlw	0
 10531  002B64  6EDD               	movwf	postdec2,c
 10532  002B66  0012               	return	
 10533  002B68                     __end_ofi2_ringbuf_put:
 10534                           	opt stack 0
 10535                           pclatu	equ	0xFFB
 10536                           pclath	equ	0xFFA
 10537                           tblptru	equ	0xFF8
 10538                           tblptrh	equ	0xFF7
 10539                           tblptrl	equ	0xFF6
 10540                           tablat	equ	0xFF5
 10541                           prodh	equ	0xFF4
 10542                           prodl	equ	0xFF3
 10543                           intcon	equ	0xFF2
 10544                           intcon2	equ	0xFF1
 10545                           postinc0	equ	0xFEE
 10546                           fsr0h	equ	0xFEA
 10547                           fsr0l	equ	0xFE9
 10548                           wreg	equ	0xFE8
 10549                           indf1	equ	0xFE7
 10550                           postinc1	equ	0xFE6
 10551                           postdec1	equ	0xFE5
 10552                           fsr1h	equ	0xFE2
 10553                           fsr1l	equ	0xFE1
 10554                           indf2	equ	0xFDF
 10555                           postinc2	equ	0xFDE
 10556                           postdec2	equ	0xFDD
 10557                           plusw2	equ	0xFDB
 10558                           fsr2h	equ	0xFDA
 10559                           fsr2l	equ	0xFD9
 10560                           status	equ	0xFD8
 10561                           
 10562 ;; *************** function i2_ringbuf_pop *****************
 10563 ;; Defined at:
 10564 ;;		line 64 in file "../My_header\My_ringbuf.h"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 10567 ;;		 -> rx_buf(8), tx_buf(8), 
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 10570 ;; Return value:  Size  Location     Type
 10571 ;;                  1    wreg      unsigned char 
 10572 ;; Registers used:
 10573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10574 ;; Tracked objects:
 10575 ;;		On entry : 0/0
 10576 ;;		On exit  : 0/0
 10577 ;;		Unchanged: 0/0
 10578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10581 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10583 ;;Total ram usage:        7 bytes
 10584 ;; Hardware stack levels used:    1
 10585 ;; Hardware stack levels required when called:    1
 10586 ;; This function calls:
 10587 ;;		i2_ringbuf_num
 10588 ;; This function is called by:
 10589 ;;		_UART_ISR
 10590 ;; This function uses a non-reentrant model
 10591 ;;
 10592                           
 10593                           	psect	text53
 10594  002B68                     __ptext53:
 10595                           	opt stack 0
 10596  002B68                     i2_ringbuf_pop:
 10597                           	opt stack 21
 10598                           
 10599                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 10600                           
 10601                           ;incstack = 0
 10602  002B68  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 10603  002B6C  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 10604  002B70  ECA0  F014         	call	i2_ringbuf_num	;wreg free
 10605  002B74  5001               	movf	?i2_ringbuf_num,w,c
 10606  002B76  1002               	iorwf	?i2_ringbuf_num+1,w,c
 10607  002B78  B4D8               	btfsc	status,2,c
 10608  002B7A  D04A               	goto	i2l3411
 10609                           
 10610                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 10611  002B7C  EE20 F006          	lfsr	2,6
 10612  002B80  5009               	movf	i2ringbuf_pop@rb,w,c
 10613  002B82  26D9               	addwf	fsr2l,f,c
 10614  002B84  500A               	movf	i2ringbuf_pop@rb+1,w,c
 10615  002B86  22DA               	addwfc	fsr2h,f,c
 10616  002B88  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 10617  002B8C  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 10618  002B90  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 10619  002B94  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 10620  002B98  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 10621  002B9C  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 10622  002BA0  500B               	movf	??i2_ringbuf_pop,w,c
 10623  002BA2  240D               	addwf	??i2_ringbuf_pop+2,w,c
 10624  002BA4  6ED9               	movwf	fsr2l,c
 10625  002BA6  500C               	movf	??i2_ringbuf_pop+1,w,c
 10626  002BA8  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 10627  002BAA  6EDA               	movwf	fsr2h,c
 10628  002BAC  50DF               	movf	indf2,w,c
 10629  002BAE  6E0F               	movwf	i2ringbuf_pop@ret,c
 10630                           
 10631                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 10632  002BB0  EE20 F002          	lfsr	2,2
 10633  002BB4  5009               	movf	i2ringbuf_pop@rb,w,c
 10634  002BB6  26D9               	addwf	fsr2l,f,c
 10635  002BB8  500A               	movf	i2ringbuf_pop@rb+1,w,c
 10636  002BBA  22DA               	addwfc	fsr2h,f,c
 10637  002BBC  EE10 F006          	lfsr	1,6
 10638  002BC0  5009               	movf	i2ringbuf_pop@rb,w,c
 10639  002BC2  26E1               	addwf	fsr1l,f,c
 10640  002BC4  500A               	movf	i2ringbuf_pop@rb+1,w,c
 10641  002BC6  22E2               	addwfc	fsr1h,f,c
 10642  002BC8  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 10643  002BCC  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 10644  002BD0  0E01               	movlw	1
 10645  002BD2  260D               	addwf	??i2_ringbuf_pop+2,f,c
 10646  002BD4  0E00               	movlw	0
 10647  002BD6  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 10648  002BD8  50DE               	movf	postinc2,w,c
 10649  002BDA  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 10650  002BDC  50DE               	movf	postinc2,w,c
 10651  002BDE  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 10652  002BE0  B0D8               	btfsc	status,0,c
 10653  002BE2  D00A               	goto	i2l3403
 10654                           
 10655                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 10656  002BE4  EE20 F006          	lfsr	2,6
 10657  002BE8  5009               	movf	i2ringbuf_pop@rb,w,c
 10658  002BEA  26D9               	addwf	fsr2l,f,c
 10659  002BEC  500A               	movf	i2ringbuf_pop@rb+1,w,c
 10660  002BEE  22DA               	addwfc	fsr2h,f,c
 10661  002BF0  2ADE               	incf	postinc2,f,c
 10662  002BF2  0E00               	movlw	0
 10663  002BF4  22DD               	addwfc	postdec2,f,c
 10664                           
 10665                           ;My_header\My_ringbuf.h: 69: } else {
 10666  002BF6  D00A               	goto	i2l3405
 10667  002BF8                     i2l3403:
 10668                           
 10669                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 10670  002BF8  EE20 F006          	lfsr	2,6
 10671  002BFC  5009               	movf	i2ringbuf_pop@rb,w,c
 10672  002BFE  26D9               	addwf	fsr2l,f,c
 10673  002C00  500A               	movf	i2ringbuf_pop@rb+1,w,c
 10674  002C02  22DA               	addwfc	fsr2h,f,c
 10675  002C04  0E00               	movlw	0
 10676  002C06  6EDE               	movwf	postinc2,c
 10677  002C08  0E00               	movlw	0
 10678  002C0A  6EDD               	movwf	postdec2,c
 10679  002C0C                     i2l3405:
 10680                           
 10681                           ;My_header\My_ringbuf.h: 71: }
 10682                           ;My_header\My_ringbuf.h: 72: return ret;
 10683  002C0C  500F               	movf	i2ringbuf_pop@ret,w,c
 10684                           
 10685                           ;My_header\My_ringbuf.h: 73: } else {
 10686  002C0E  0012               	return	
 10687  002C10                     i2l3411:
 10688                           
 10689                           ;My_header\My_ringbuf.h: 74: return 0;
 10690  002C10  0E00               	movlw	0
 10691  002C12  0012               	return	
 10692  002C14                     __end_ofi2_ringbuf_pop:
 10693                           	opt stack 0
 10694                           pclatu	equ	0xFFB
 10695                           pclath	equ	0xFFA
 10696                           tblptru	equ	0xFF8
 10697                           tblptrh	equ	0xFF7
 10698                           tblptrl	equ	0xFF6
 10699                           tablat	equ	0xFF5
 10700                           prodh	equ	0xFF4
 10701                           prodl	equ	0xFF3
 10702                           intcon	equ	0xFF2
 10703                           intcon2	equ	0xFF1
 10704                           postinc0	equ	0xFEE
 10705                           fsr0h	equ	0xFEA
 10706                           fsr0l	equ	0xFE9
 10707                           wreg	equ	0xFE8
 10708                           indf1	equ	0xFE7
 10709                           postinc1	equ	0xFE6
 10710                           postdec1	equ	0xFE5
 10711                           fsr1h	equ	0xFE2
 10712                           fsr1l	equ	0xFE1
 10713                           indf2	equ	0xFDF
 10714                           postinc2	equ	0xFDE
 10715                           postdec2	equ	0xFDD
 10716                           plusw2	equ	0xFDB
 10717                           fsr2h	equ	0xFDA
 10718                           fsr2l	equ	0xFD9
 10719                           status	equ	0xFD8
 10720                           
 10721 ;; *************** function i2_ringbuf_num *****************
 10722 ;; Defined at:
 10723 ;;		line 31 in file "../My_header\My_ringbuf.h"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 10726 ;;		 -> rx_buf(8), tx_buf(8), 
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;		None
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  2    0[COMRAM] unsigned int 
 10731 ;; Registers used:
 10732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10740 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10741 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10742 ;;Total ram usage:        8 bytes
 10743 ;; Hardware stack levels used:    1
 10744 ;; This function calls:
 10745 ;;		Nothing
 10746 ;; This function is called by:
 10747 ;;		_ringbuf_backspace
 10748 ;;		_UART_ISR
 10749 ;;		_judgement
 10750 ;;		i2_ringbuf_put
 10751 ;;		i2_ringbuf_pop
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text54
 10756  002940                     __ptext54:
 10757                           	opt stack 0
 10758  002940                     i2_ringbuf_num:
 10759                           	opt stack 20
 10760                           
 10761                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 10762                           
 10763                           ;incstack = 0
 10764  002940  EE20 F006          	lfsr	2,6
 10765  002944  5001               	movf	i2ringbuf_num@rb,w,c
 10766  002946  26D9               	addwf	fsr2l,f,c
 10767  002948  5002               	movf	i2ringbuf_num@rb+1,w,c
 10768  00294A  22DA               	addwfc	fsr2h,f,c
 10769  00294C  EE10 F004          	lfsr	1,4
 10770  002950  5001               	movf	i2ringbuf_num@rb,w,c
 10771  002952  26E1               	addwf	fsr1l,f,c
 10772  002954  5002               	movf	i2ringbuf_num@rb+1,w,c
 10773  002956  22E2               	addwfc	fsr1h,f,c
 10774  002958  50DE               	movf	postinc2,w,c
 10775  00295A  5CE6               	subwf	postinc1,w,c
 10776  00295C  50DE               	movf	postinc2,w,c
 10777  00295E  58E6               	subwfb	postinc1,w,c
 10778  002960  A0D8               	btfss	status,0,c
 10779  002962  D01F               	goto	i2l2993
 10780                           
 10781                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 10782  002964  EE20 F004          	lfsr	2,4
 10783  002968  5001               	movf	i2ringbuf_num@rb,w,c
 10784  00296A  26D9               	addwf	fsr2l,f,c
 10785  00296C  5002               	movf	i2ringbuf_num@rb+1,w,c
 10786  00296E  22DA               	addwfc	fsr2h,f,c
 10787  002970  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 10788  002974  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 10789  002978  EE20 F006          	lfsr	2,6
 10790  00297C  5001               	movf	i2ringbuf_num@rb,w,c
 10791  00297E  26D9               	addwf	fsr2l,f,c
 10792  002980  5002               	movf	i2ringbuf_num@rb+1,w,c
 10793  002982  22DA               	addwfc	fsr2h,f,c
 10794  002984  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 10795  002988  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 10796  00298C  1E05               	comf	??i2_ringbuf_num+2,f,c
 10797  00298E  1E06               	comf	??i2_ringbuf_num+3,f,c
 10798  002990  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 10799  002992  2A06               	incf	??i2_ringbuf_num+3,f,c
 10800  002994  5003               	movf	??i2_ringbuf_num,w,c
 10801  002996  2405               	addwf	??i2_ringbuf_num+2,w,c
 10802  002998  6E01               	movwf	?i2_ringbuf_num,c
 10803  00299A  5004               	movf	??i2_ringbuf_num+1,w,c
 10804  00299C  2006               	addwfc	??i2_ringbuf_num+3,w,c
 10805  00299E  6E02               	movwf	?i2_ringbuf_num+1,c
 10806                           
 10807                           ;My_header\My_ringbuf.h: 34: } else {
 10808  0029A0  0012               	return	
 10809  0029A2                     i2l2993:
 10810                           
 10811                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 10812  0029A2  EE20 F004          	lfsr	2,4
 10813  0029A6  5001               	movf	i2ringbuf_num@rb,w,c
 10814  0029A8  26D9               	addwf	fsr2l,f,c
 10815  0029AA  5002               	movf	i2ringbuf_num@rb+1,w,c
 10816  0029AC  22DA               	addwfc	fsr2h,f,c
 10817  0029AE  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 10818  0029B2  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 10819  0029B6  EE20 F002          	lfsr	2,2
 10820  0029BA  5001               	movf	i2ringbuf_num@rb,w,c
 10821  0029BC  26D9               	addwf	fsr2l,f,c
 10822  0029BE  5002               	movf	i2ringbuf_num@rb+1,w,c
 10823  0029C0  22DA               	addwfc	fsr2h,f,c
 10824  0029C2  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 10825  0029C6  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 10826  0029CA  EE20 F006          	lfsr	2,6
 10827  0029CE  5001               	movf	i2ringbuf_num@rb,w,c
 10828  0029D0  26D9               	addwf	fsr2l,f,c
 10829  0029D2  5002               	movf	i2ringbuf_num@rb+1,w,c
 10830  0029D4  22DA               	addwfc	fsr2h,f,c
 10831  0029D6  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 10832  0029DA  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 10833  0029DE  1E07               	comf	??i2_ringbuf_num+4,f,c
 10834  0029E0  1E08               	comf	??i2_ringbuf_num+5,f,c
 10835  0029E2  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 10836  0029E4  2A08               	incf	??i2_ringbuf_num+5,f,c
 10837  0029E6  5005               	movf	??i2_ringbuf_num+2,w,c
 10838  0029E8  2607               	addwf	??i2_ringbuf_num+4,f,c
 10839  0029EA  5006               	movf	??i2_ringbuf_num+3,w,c
 10840  0029EC  2208               	addwfc	??i2_ringbuf_num+5,f,c
 10841  0029EE  5003               	movf	??i2_ringbuf_num,w,c
 10842  0029F0  2407               	addwf	??i2_ringbuf_num+4,w,c
 10843  0029F2  6E01               	movwf	?i2_ringbuf_num,c
 10844  0029F4  5004               	movf	??i2_ringbuf_num+1,w,c
 10845  0029F6  2008               	addwfc	??i2_ringbuf_num+5,w,c
 10846  0029F8  6E02               	movwf	?i2_ringbuf_num+1,c
 10847  0029FA  0012               	return	
 10848  0029FC                     __end_ofi2_ringbuf_num:
 10849                           	opt stack 0
 10850                           pclatu	equ	0xFFB
 10851                           pclath	equ	0xFFA
 10852                           tblptru	equ	0xFF8
 10853                           tblptrh	equ	0xFF7
 10854                           tblptrl	equ	0xFF6
 10855                           tablat	equ	0xFF5
 10856                           prodh	equ	0xFF4
 10857                           prodl	equ	0xFF3
 10858                           intcon	equ	0xFF2
 10859                           intcon2	equ	0xFF1
 10860                           postinc0	equ	0xFEE
 10861                           fsr0h	equ	0xFEA
 10862                           fsr0l	equ	0xFE9
 10863                           wreg	equ	0xFE8
 10864                           indf1	equ	0xFE7
 10865                           postinc1	equ	0xFE6
 10866                           postdec1	equ	0xFE5
 10867                           fsr1h	equ	0xFE2
 10868                           fsr1l	equ	0xFE1
 10869                           indf2	equ	0xFDF
 10870                           postinc2	equ	0xFDE
 10871                           postdec2	equ	0xFDD
 10872                           plusw2	equ	0xFDB
 10873                           fsr2h	equ	0xFDA
 10874                           fsr2l	equ	0xFD9
 10875                           status	equ	0xFD8
 10876                           pclatu	equ	0xFFB
 10877                           pclath	equ	0xFFA
 10878                           tblptru	equ	0xFF8
 10879                           tblptrh	equ	0xFF7
 10880                           tblptrl	equ	0xFF6
 10881                           tablat	equ	0xFF5
 10882                           prodh	equ	0xFF4
 10883                           prodl	equ	0xFF3
 10884                           intcon	equ	0xFF2
 10885                           intcon2	equ	0xFF1
 10886                           postinc0	equ	0xFEE
 10887                           fsr0h	equ	0xFEA
 10888                           fsr0l	equ	0xFE9
 10889                           wreg	equ	0xFE8
 10890                           indf1	equ	0xFE7
 10891                           postinc1	equ	0xFE6
 10892                           postdec1	equ	0xFE5
 10893                           fsr1h	equ	0xFE2
 10894                           fsr1l	equ	0xFE1
 10895                           indf2	equ	0xFDF
 10896                           postinc2	equ	0xFDE
 10897                           postdec2	equ	0xFDD
 10898                           plusw2	equ	0xFDB
 10899                           fsr2h	equ	0xFDA
 10900                           fsr2l	equ	0xFD9
 10901                           status	equ	0xFD8
 10902                           
 10903                           	psect	rparam
 10904  0000                     pclatu	equ	0xFFB
 10905                           pclath	equ	0xFFA
 10906                           tblptru	equ	0xFF8
 10907                           tblptrh	equ	0xFF7
 10908                           tblptrl	equ	0xFF6
 10909                           tablat	equ	0xFF5
 10910                           prodh	equ	0xFF4
 10911                           prodl	equ	0xFF3
 10912                           intcon	equ	0xFF2
 10913                           intcon2	equ	0xFF1
 10914                           postinc0	equ	0xFEE
 10915                           fsr0h	equ	0xFEA
 10916                           fsr0l	equ	0xFE9
 10917                           wreg	equ	0xFE8
 10918                           indf1	equ	0xFE7
 10919                           postinc1	equ	0xFE6
 10920                           postdec1	equ	0xFE5
 10921                           fsr1h	equ	0xFE2
 10922                           fsr1l	equ	0xFE1
 10923                           indf2	equ	0xFDF
 10924                           postinc2	equ	0xFDE
 10925                           postdec2	equ	0xFDD
 10926                           plusw2	equ	0xFDB
 10927                           fsr2h	equ	0xFDA
 10928                           fsr2l	equ	0xFD9
 10929                           status	equ	0xFD8
 10930                           
 10931                           	psect	temp
 10932  000048                     btemp:
 10933                           	opt stack 0
 10934  000048                     	ds	1
 10935  0000                     int$flags	set	btemp
 10936                           pclatu	equ	0xFFB
 10937                           pclath	equ	0xFFA
 10938                           tblptru	equ	0xFF8
 10939                           tblptrh	equ	0xFF7
 10940                           tblptrl	equ	0xFF6
 10941                           tablat	equ	0xFF5
 10942                           prodh	equ	0xFF4
 10943                           prodl	equ	0xFF3
 10944                           intcon	equ	0xFF2
 10945                           intcon2	equ	0xFF1
 10946                           postinc0	equ	0xFEE
 10947                           fsr0h	equ	0xFEA
 10948                           fsr0l	equ	0xFE9
 10949                           wreg	equ	0xFE8
 10950                           indf1	equ	0xFE7
 10951                           postinc1	equ	0xFE6
 10952                           postdec1	equ	0xFE5
 10953                           fsr1h	equ	0xFE2
 10954                           fsr1l	equ	0xFE1
 10955                           indf2	equ	0xFDF
 10956                           postinc2	equ	0xFDE
 10957                           postdec2	equ	0xFDD
 10958                           plusw2	equ	0xFDB
 10959                           fsr2h	equ	0xFDA
 10960                           fsr2l	equ	0xFD9
 10961                           status	equ	0xFD8


Data Sizes:
    Strings     60
    Constant    28
    Data        17
    BSS         565
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      71
    BANK0           160     81     128
    BANK1           256    250     250
    BANK2           256    250     250
    BANK3           256    250     250
    BANK4           256    250     250
    BANK5           256      0     250
    BANK6           256      0     250
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), 
		 -> STR_21(CODE[4]), STR_20(CODE[5]), STR_19(CODE[4]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[3]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 250
		 -> rx_operation@opland1(BANK4[250]), rx_operation@opcode(BANK2[250]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 250
		 -> rx_operation@opland2(BANK3[250]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> tx_send_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(COMRAM[4]), sw_G(COMRAM[4]), sw_R(COMRAM[4]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_26(CODE[4]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[3]), 
		 -> weekday_3char(CODE[28]), STR_8(CODE[3]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[3]), tx_send_dec@str(BANK0[10]), cursor_up(BANK0[4]), STR_4(CODE[3]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[3]), cursor_right(BANK0[4]), 
		 -> cursor_down(BANK0[4]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(COMRAM[8]), tx_buf(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_judgement
    _judgement->i2_tx_sends
    i2_tx_sends->i2_ringbuf_put
    i2_tx_send->i2_ringbuf_put
    _ringbuf_backspace->i2_ringbuf_num
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_rx_operation
    _rx_operation->_RTCC_from_caltime
    _ringbuf_pop->_ringbuf_num
    _my_atoi->___wmul
    _RTCC_from_caltime->_epoch_to_caltime
    _PWM_set->_my_atoi
    _tx_send_time->_tx_send_dec
    _tx_send_dec->_my_utoa
    _tx_sends->_ringbuf_put
    _my_utoa->___lwdiv
    ___lwdiv->___wmul
    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _main_init->_ringbuf_init
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _RTCC_to_caltime->_x_to_d
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _month_length->___awmod
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rx_operation

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_rx_operation

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_rx_operation

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_rx_operation

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   85376
                                             68 BANK0     13    13      0
                                _ADC
                            _PWM_set
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                            ___lldiv
                            ___llmod
                             ___lmul
                          _main_init
                         _print_time
                       _rx_operation
                           _tx_sends
 ---------------------------------------------------------------------------------
 (1) _rx_operation                                      1003  1003      0   26241
                                             65 BANK0      3     3      0
                                              0 BANK1    250   250      0
                                              0 BANK2    250   250      0
                                              0 BANK3    250   250      0
                                              0 BANK4    250   250      0
                            _PWM_set
                  _RTCC_from_caltime
                            _my_atoi
                          _my_strcmp
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1540
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _my_strcmp                                            5     1      4    3166
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _my_atoi                                              8     6      2    2094
                                              6 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_caltime                                    4     0      4   14425
                                             61 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (2) _PWM_set                                              3     1      2    3189
                                             14 BANK0      3     1      2
                            ___lwdiv
                             ___wmul
                            _my_atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     856
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _print_time                                           2     2      0   23064
                                             33 BANK0      2     2      0
                            _tx_send
                       _tx_send_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_send_time                                         0     0      0   15579
                            _tx_send
                        _tx_send_dec
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _tx_send_dec                                         12    11      1    8298
                                             21 BANK0     12    11      1
                            _my_utoa
                           _tx_sends
 ---------------------------------------------------------------------------------
 (1) _tx_sends                                             2     0      2    4679
                                             15 BANK0      2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _my_utoa                                              8     3      5    2743
                                             13 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     856
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1281
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              1     1      0    2602
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put                                          7     4      3    2571
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _ringbuf_num                                          8     6      2     908
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    1100
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6     810
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     648
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    6505
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_RTCC                                       4     0      4    6505
                                             39 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (3) _caltime_to_epoch                                    15    11      4    5194
                                             24 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_to_caltime                                      3     1      2     386
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (4) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9585
                                             61 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (3) _epoch_to_caltime                                    16    12      4    7728
                                             45 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _month_length                                         6     5      1    2075
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _get_quot_rem                                         8     4      4    4262
                                             37 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    2168
                                             12 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1073
                                             24 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _caltime_to_RTCC                                      2     0      2    1140
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (4) _d_to_x                                               1     1      0     715
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0    7552
                                             21 COMRAM    15    15      0
                           _UART_ISR
             _button_timer_interrupt
                          _judgement
 ---------------------------------------------------------------------------------
 (8) _judgement                                            4     4      0    4281
                                             17 COMRAM     4     4      0
                  _ringbuf_backspace
                     _ringbuf_delete
                      i2_ringbuf_num
                      i2_ringbuf_put
                          i2_tx_send
                         i2_tx_sends
 ---------------------------------------------------------------------------------
 (9) i2_tx_sends                                           2     0      2    1125
                                             15 COMRAM     2     0      2
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (9) i2_tx_send                                            1     1      0     920
                                             15 COMRAM     1     1      0
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (9) _ringbuf_delete                                       2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _ringbuf_backspace                                    6     4      2     587
                                              8 COMRAM     6     4      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               5     2      3    1348
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (8) _UART_ISR                                             1     1      0    1900
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_put                                       7     4      3     898
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        7     5      2     591
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (11) i2_ringbuf_num                                       8     6      2     388
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _PWM_set
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _my_atoi (ARG)
       ___wmul
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   ___lldiv
     ___lmul (ARG)
       _month_length (ARG)
         ___awmod
   ___llmod
   ___lmul
     _month_length (ARG)
       ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer1_init
     _timer3_init
   _print_time
     _tx_send
       _ringbuf_put
         _ringbuf_num
     _tx_send_time
       _tx_send
         _ringbuf_put
           _ringbuf_num
       _tx_send_dec
         _my_utoa
           ___lwdiv
             ___wmul (ARG)
           ___lwmod
         _tx_sends
           _ringbuf_put
             _ringbuf_num
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _tx_sends
       _ringbuf_put
         _ringbuf_num
   _rx_operation
     _PWM_set
       ___lwdiv
         ___wmul (ARG)
       ___wmul
       _my_atoi (ARG)
         ___wmul
     _RTCC_from_caltime
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
             ___lmul (ARG)
               _month_length (ARG)
                 ___awmod
           ___lmul
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
     _my_atoi
       ___wmul
     _my_strcmp
     _ringbuf_pop
       _ringbuf_num
   _tx_sends
     _ringbuf_put
       _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt
   _judgement
     _ringbuf_backspace
       i2_ringbuf_num
     _ringbuf_delete
     i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
     i2_tx_send
       i2_ringbuf_put
         i2_ringbuf_num
     i2_tx_sends
       i2_ringbuf_put
         i2_ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      FA      18       97.7%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      FA      16       97.7%
BITBANK4           100      0       0      13        0.0%
BANK4              100     FA      FA      14       97.7%
BITBANK3           100      0       0      11        0.0%
BANK3              100     FA      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100     FA      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     FA      FA       8       97.7%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      47       1       75.5%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6A3       6        0.0%
DATA                 0      0     6A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 19:16:49 2015

          __size_of_rx_operation 0500                    my_strcmp@str1 0060  
                  my_strcmp@str2 0062                               _d1 00B5  
                   ___awdiv@sign 0065                               _ms 00B1  
            ___wmul@multiplicand 0062                ??_RTCC_from_epoch 00A1  
                   __CFG_CP0$OFF 000000                              l152 33E8  
                            _ADC 353A                              l352 29FC  
                            l169 355A                              l610 12AC  
                            l371 1D5C                              l358 24A2  
                            l633 1662                              l459 3458  
                            l467 2F28                              l548 27E2  
                            l629 14C2                              _GIE 007F97  
                            _PR2 000FCB                              _ISR 0008  
                  ?_get_quot_rem 0085               caltime_to_epoch@ep 007A  
             caltime_to_epoch@ct 0078                _RTCC_from_caltime 34A0  
                   ___awmod@sign 0065                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
             ?_RTCC_from_caltime 009D                             ?_ADC 0060  
                           ?_ISR 0001                             l1009 292E  
                           l1019 2E82                             l1062 3096  
                           l1072 324E                             l4203 30B2  
                           l5003 1272                             l4301 28C8  
                           l4231 275A                             l4207 30D8  
                           l5031 13CC                             l5015 1318  
                           l4233 2766                             l4225 273C  
                           l4321 3052                             l5025 1386  
                           l5009 12CE                             l4251 27BE  
                           l4243 279C                             l4235 276C  
                           l4219 2726                             l4331 3088  
                           l4323 3058                             l5019 1340  
                           l4309 291C                             l4341 3216  
                           l5037 1412                             l5301 16A0  
                           l4247 27AA                             l4271 2CF8  
                           l4263 2CD4                             l4511 1814  
                           l4319 3046                             l4343 321C  
                           l5311 16C4                             l4273 2D04  
                           l4505 17F0                             l5081 2E2C  
                           l4353 318E                             l5241 14B2  
                           l4275 2D0A                             l4283 2D3C  
                           l4267 2CE4                             l4515 1878  
                           l4507 17F4                             l4187 21A6  
                           l4347 3240                             l4339 320A  
                           l4531 3358                             l5331 175C  
                           l5323 16FA                             l5307 16B8  
                           l5315 16D4                             l5085 2E70  
                           l5077 2E16                             l4357 31CA  
                           l5261 1584                             l4287 2D50  
                           l4279 2D2E                             l4375 22A6  
                           l5079 2E26                             l4543 33EA  
                           l4199 23B6                             l4607 261E  
                           l4615 263A                             l4297 28B2  
                           l4473 1DCE                             l4609 2634  
                           l5273 1622                             l5265 1600  
                           l4299 28C2                             l4475 1DD2  
                           l4635 3522                             l4387 2F36  
                           l5275 1626                             l4493 1786  
                           l4389 2F54                             l4397 2F94  
                           l4741 26A0                             l4661 2DDC  
                           l4653 2D66                             l4479 1DDA  
                           l4495 178C                             l4911 2FBC  
                           l4663 2DE2                             l5295 1684  
                           l5279 163A                             l4921 2FE6  
                           l4745 26AA                             l4737 2674  
                           l4673 2C62                             l5297 1688  
                           l4499 1796                             l4771 20E8  
                           l4931 2FFC                             l4915 2FD0  
                           l4755 26EC                             l4667 2C16  
                           l4675 2C6E                             l4933 3004  
                           l4925 2FF0                             l4749 26E0  
                           l4679 2C92                             l4943 0F72  
             __CFG_WPFP$PAGE_127 000000                             l4769 20E2  
                           l4937 3018                             l4971 10A2  
                           l4963 103A                             l4957 100A  
                           l4949 0FA2                             l4991 11C4  
                           l4977 10D2                             l4995 11FE  
                           l4987 118A                             l4999 1238  
                           STR_1 0F34                             STR_2 0F1D  
                           STR_3 0F1D                             STR_4 0F34  
                           STR_5 0F37                             STR_6 0F45  
                           STR_7 0F45                             STR_8 0F3D  
                           STR_9 0F3A                             u4500 2252  
                           u4510 2282                             u4530 2298  
                           u4450 31BC                             u4540 229A  
                           u4460 31EC                             u4550 22F2  
                           u4560 22F4                             u4528 2286  
                           u5520 1538                             u4457 31B2  
                           u4490 2250                             u4715 3652  
                           u4467 31E2                             u4716 3654  
                           u5640 16F8                             u5670 176A  
                           u5655 1708              ??_RTCC_from_caltime 00A1  
                           _main 145A         button_timer_interrupt@bt 0001  
                           _sw_B 003C                             _sw_G 0040  
                           _sw_R 0044                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 0048  
         __CFG_DSWDTOSC$T1OSCREF 000000                     _rx_operation 0F5A  
                           pclat 000FFA                      _tx_send_dec 3314  
                           prodh 000FF4                             prodl 000FF3  
                __end_of_PWM_set 270A                             start 00EE  
               __end_of_ADC_init 3662                    __CFG_IESO$OFF 000000  
                   ___param_bank 000010            __size_of_tx_send_time 010C  
          __end_ofi2_ringbuf_pop 2C14            __end_ofi2_ringbuf_num 29FC  
                          ??_ADC 0062            __end_ofi2_ringbuf_put 2B68  
                          ADC@ch 0063                    ADC_init@p_ref 0060  
                          ??_ISR 0016                ??_RTCC_to_caltime 0064  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                     i2_tx_sends 3258        __end_of_RTCC_from_caltime 34D6  
                          ?_main 0001                   ??_get_quot_rem 0089  
                __end_of___awdiv 27C8                            _ADRES 000FC3  
                          STR_10 0F43                            STR_11 0F38  
                          STR_12 0F40                            STR_20 0F23  
                          STR_13 0F57                            STR_21 0F2C  
                          STR_22 0F53                            STR_14 0F47  
                          STR_23 0F4D                            STR_15 0F4B  
                          STR_16 0F4F                            STR_24 0F49  
                          STR_25 0F55                            STR_17 0F51  
                          STR_18 0F41                            STR_26 0F28  
                          STR_19 0F30                  __end_of___awmod 2D5A  
                __end_of___lldiv 2940                  ___awdiv@divisor 0062  
                __end_of___llmod 2E94                            _LATB2 007C52  
                __end_of___lwdiv 30A0                  __end_of___lwmod 3258  
                          i2l227 343A                            i2l228 3438  
                  __CFG_WDTEN$ON 000000                            i2l292 1A1E  
                          i2l293 1A42                            i2l294 1A64  
                          i2l295 1A86                            i2l296 1AA6  
                          i2l297 1AC6                            i2l545 00B2  
                          i2l298 1AE6                            i2l299 1B06  
                ___awdiv@counter 0064                            _TMR1H 000FCF  
                          _RPOR3 000EC3                            _RPOR4 000EC4  
                          _RPOR5 000EC5                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
            ___lmul@multiplicand 0070                   __CFG_FCMEN$OFF 000000  
               __end_of_UART_ISR 3458             caltime_to_epoch@year 0080  
             __size_of_UART_init 0020                            _colon 0027  
               __end_of_OSC_init 36D4               __size_of_RTCC_init 002E  
             __size_of_RTCC_loop 0048                 ringbuf_delete@rb 0001  
                          main@i 00AF                            main@n 00CE  
                __end_of_my_atoi 2DFA                            tablat 000FF5  
                __end_of_my_utoa 2FAE                            plusw2 000FDB  
               __end_of_PWM_init 2884       __size_of_ringbuf_backspace 0076  
                   _tx_send_time 2022                            status 000FD8  
                __end_of_tx_send 369E                month_length@month 0066  
                __initialization 32BA                     __end_of_main 176C  
            ringbuf_init@bufsize 0064                 RTCC_from_RTCC@ep 0089  
               RTCC_from_RTCC@ct 0087                    print_time@row 0081  
                         ??_main 00A4                    __activetblptr 000003  
             __size_ofi2_tx_send 0016                 ___llmod@dividend 0060  
                         _CCPR1L 000FBB                           _CCPR2L 000FB5  
                         _CCPR3L 000F16                           _CCPR4L 000F13  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 0060  
                      ??_PWM_set 0070                           i2l3143 2B52  
                         i2l3231 3152                           i2l3403 2BF8  
                         i2l3411 2C10                           i2l4043 0064  
                         i2l4035 0056                           i2l3405 2C0C  
                         i2l3421 325A                           i2l3503 1C50  
                         i2l3425 328E                           i2l3701 1F9E  
                         i2l3471 1B2A                           i2l3711 1FE8  
                         i2l3713 1FEE                           i2l3705 1FC2  
                         i2l3491 1BE0                           i2l3483 1B96  
                         i2l3475 1B4E                           i2l3651 1E76  
                         i2l3717 1FF6                           i2l3709 1FCA  
                         i2l3495 1C06                           i2l3487 1BBA  
                         i2l3479 1B72                           i2l3671 1EFE  
                         i2l3663 1EC0                           i2l3655 1E84  
                         i2l3681 1F3E                           i2l3673 1F04  
                         i2l3657 1EA4                           i2l3499 1C2C  
                         i2l3667 1EE4                           i2l3691 1F6E  
                         i2l3677 1F12                           i2l3693 1F8A  
                         i2l2993 29A2                           i2l3697 1F96  
                         _RCREG1 000FAF                           _RTCCAL 000F3E  
                         _SPBRG1 000FB0                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE                  i2ringbuf_pop@rb 0009  
                i2ringbuf_num@rb 0001                  i2ringbuf_put@rb 0009  
                 __CFG_WPDIS$OFF 000000               epoch_to_caltime@ep 008F  
             epoch_to_caltime@ct 008D                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 008D                     _CCPTMRS0bits 000F52  
                   _CCPTMRS1bits 000F51            caltime_to_epoch@epoch 0082  
                   ?_ringbuf_pop 0068                     ?_ringbuf_num 0060  
                   ?_ringbuf_put 0068            caltime_to_epoch@month 0086  
                         ___lmul 30A0                  _caltime_to_RTCC 24A2  
                         ___wmul 34D6               ??_epoch_to_caltime 0091  
              __end_of_UART_init 3642                        ??___awdiv 0064  
                      ??___awmod 0064                           _d_to_x 3594  
                      ??___lldiv 0080                        ??___llmod 0068  
              __end_of_RTCC_init 353A                     ?_timer1_init 0060  
                      ??___lwdiv 006A                __end_of_RTCC_loop 34A0  
                      ??___lwmod 0064                     ?_timer3_init 0001  
                         clear_0 32C0                           clear_1 32CC  
                         clear_2 32D8                           clear_3 32E4  
                __CFG_CLKOEC$OFF 000000                 ___awdiv@quotient 0066  
                ___awmod@divisor 0062                      ?i2_tx_sends 0010  
                ___awmod@counter 0064                           _x_to_d 3662  
                         _rx_buf 002C       __size_of_RTCC_from_caltime 0036  
                         _tx_buf 0034        __size_of_caltime_to_epoch 0288  
                  main@prev_scan 00B8                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                      ??_my_atoi 0068                           tblptru 000FF8  
                      ?_ADC_init 0001                        ??_my_utoa 0072  
                      ??_tx_send 006F                 __end_of_tx_sends 31F6  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 330A             __end_of_get_quot_rem 24A2  
                  ___rparam_used 000001                  _RTCC_from_epoch 35DE  
           rx_operation@cnt_char 00A2                __end_ofi2_tx_send 36B4  
           __CFG_WPEND$PAGE_WPFP 000000                   __pcstackCOMRAM 0001  
                   __pidataBANK0 36B4                        ?_UART_ISR 0001  
                      ?_OSC_init 0001                  __CFG_DSWDTPS$G2 000000  
                      ?_PWM_init 0001          __size_of_ringbuf_delete 0022  
                     ??_ADC_init 0060       caltime_to_epoch@month_2069 0081  
             __size_of_main_init 0092                       __pbssBANK0 00B1  
                     __pbssBANK5 0500                       __pbssBANK6 0600  
                 judgement@ascii 0014              __size_ofi2_tx_sends 0062  
        __end_of_caltime_to_RTCC 2572                  _RTCC_to_caltime 29FC  
                   ?_tx_send_dec 0075            __end_of_weekday_3char 0F1D  
             __size_of_judgement 01C0                          ?___lmul 006C  
                     ??_UART_ISR 0010                          ?___wmul 0060  
                        ?_d_to_x 0001                       ??_OSC_init 0060  
                 ___lmul@product 0074                          ?_x_to_d 0001  
                     ??_PWM_init 0060               __CFG_OSC$INTOSCPLL 000000  
             __size_of_my_strcmp 00A4                  __CFG_WDTPS$1024 000000  
                        _SPBRGH1 000F7F                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A          __end_of_RTCC_from_epoch 3600  
           timer1_init@prescaler 0062                          _PWM_set 263E  
               i2ringbuf_pop@ret 000F                     PWM_set@color 0070  
               __CFG_CFGPLLEN$ON 000000         ??_button_timer_interrupt 0004  
                   PWM_set@value 006E                    ?_month_length 0066  
            epoch_to_caltime@day 0095                RTCC_from_epoch@ep 009F  
              RTCC_from_epoch@ct 009D              epoch_to_caltime@num 0099  
                        __Hparam 0000                          __Lparam 0000  
                  ?_ringbuf_init 0060                          ___awdiv 270A  
                __size_of___lmul 0076                          ___awmod 2CB8  
                        ___lldiv 2884                  __size_of___wmul 0036  
                        ___llmod 2DFA                       _light_mode 00BF  
                        ___lwdiv 3028                          ___lwmod 31F6  
                __size_of_d_to_x 0028                     __psmallconst 0F00  
           __size_of_ringbuf_pop 00CC             __size_of_ringbuf_num 00EE  
           __size_of_ringbuf_put 00D4                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 2F26      epoch_to_caltime@month_cache 00D3  
                        __pcinit 32BA                        ?_tx_sends 006F  
                        __ramtop 0F00                          _halfsec 00BE  
           __size_of_timer1_init 0050                          __ptext0 145A  
                        __ptext1 0F5A                          __ptext2 2572  
                        __ptext3 2C14                          __ptext4 2D5A  
                        __ptext5 34A0                          __ptext6 263E  
                        __ptext7 34D6                          __ptext8 2FAE  
                        __ptext9 2022             __size_of_timer3_init 002C  
                __size_of_x_to_d 0020                        _T0CONbits 000FD5  
                   __size_of_ADC 002E                 _time_change_flag 00C0  
               _caltime_to_epoch 176C                     __size_of_ISR 00E6  
                      _T1CONbits 000FCD          __size_of_RTCC_from_RTCC 0022  
                      _T2CONbits 000FCA                        _T3CONbits 000F79  
               ___awmod@dividend 0060                   main@value_2483 00A9  
                      _T5CONbits 000F22                          _my_atoi 2D5A  
                        _my_utoa 2F26                __end_of_judgement 2022  
                        _rx_flag 002A          __end_of_RTCC_to_caltime 2AB2  
                        _tx_send 3682            __size_of_get_quot_rem 00D4  
           end_of_initialization 330A           __size_ofi2_ringbuf_pop 00AC  
         __size_ofi2_ringbuf_num 00BC           __size_ofi2_ringbuf_put 00B6  
                   _CTMUCONHbits 000FB3                     _CTMUCONLbits 000FB2  
                 ??_month_length 0067                 ?_caltime_to_RTCC 0069  
                ___lldiv@divisor 007C             timer3_init@prescaler 0061  
              __end_of_my_strcmp 2CB8                  ___lldiv@counter 0084  
                 tx_send_dec@dec 0080                   tx_send_dec@str 0076  
                 ??_ringbuf_init 0066                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                   ??i2_tx_sends 0012                       ??_tx_sends 0071  
                      _PORTAbits 000F80                        _UART_init 3622  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 350C  
                      _RTCC_loop 3458                     _display_flag 0028  
      epoch_to_caltime@day_cache 00BB           i2ringbuf_put@asciicode 000B  
                   _get_quot_rem 23CE                       _print_time 2FAE  
                 _ringbuf_delete 3600                    rx_operation@i 00A3  
      __size_of_epoch_to_caltime 01EC                 __CFG_CPUDIV$OSC1 000000  
            RTCC_from_caltime@ep 009F              RTCC_from_caltime@ct 009D  
              __size_of_ADC_init 0020                 ?_RTCC_from_epoch 009D  
__size_of_button_timer_interrupt 0282          timer1_init@clock_select 0060  
            i2tx_sends@asciicode 0010                      _CCP1CONbits 000FBA  
                    _CCP2CONbits 000FB4                 __CFG_IOL1WAY$OFF 000000  
             __end_ofi2_tx_sends 32BA                      _CCP3CONbits 000F15  
                    _CCP4CONbits 000F12             __size_of_tx_send_dec 0056  
            __CFG_MSSP7B_EN$MSK7 000000                   ringbuf_init@rb 0060  
                    print_time@i 0082                        i2_tx_send 369E  
                 ringbuf_pop@ret 006E                    i2_ringbuf_pop 2B68  
                  i2_ringbuf_num 2940                    i2_ringbuf_put 2AB2  
                 __end_of___lmul 3116                   __end_of___wmul 350C  
                 __end_of_d_to_x 35BC                __size_of_UART_ISR 004A  
         __end_of_ringbuf_delete 3622                       ?_UART_init 0001  
                     ?_RTCC_init 0001                __size_of_OSC_init 000E  
                     ?_RTCC_loop 0001                 __CFG_DSWDTEN$OFF 000000  
                 __end_of_x_to_d 3682            epoch_to_caltime@month 0098  
            start_initialization 32BA                 month_length@year 006B  
                    __end_of_ADC 3568                      __end_of_ISR 00EE  
              __size_of_PWM_init 00BC                    UART_ISR@ascii 0010  
               ?_RTCC_to_caltime 0062                    ?_rx_operation 0001  
                ___llmod@divisor 0064                  ___llmod@counter 0068  
                       ??___lmul 0074                   ?i2_ringbuf_pop 0009  
                 ?i2_ringbuf_num 0001                   ?i2_ringbuf_put 0009  
                       ??___wmul 0064                       ?i2_tx_send 0001  
                       ??_d_to_x 0068                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK0 00CF           _button_timer_interrupt 19F4  
                       ??_x_to_d 0060                  ?_ringbuf_delete 0001  
           __end_of_month_length 22FA                   _RTCC_from_RTCC 35BC  
                    ?_print_time 0001                      __pbssCOMRAM 0025  
            RTCC_to_caltime@dumy 0064                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                    __pcstackBANK2 0200  
                  __pcstackBANK3 0300                    __pcstackBANK4 0400  
                    _caltime_now 00C2             __end_of_ringbuf_init 33BE  
               tx_send@asciicode 006F              rx_operation@opland1 0400  
            rx_operation@opland2 0300                       judgement@i 0015  
                       ?_PWM_set 006E                    ?_tx_send_time 0001  
                 ??_rx_operation 00A1         __end_of_caltime_to_epoch 19F4  
                       ISR@ascii 0024                  millis_timer@cnt 0025  
               ___lwdiv@dividend 0066                        _edit_flag 0029  
                      __pintcode 0008                         ?___awdiv 0060  
                       ?___awmod 0060                         ?___lldiv 0078  
                       ?___llmod 0060                         ?___lwdiv 0066  
                       ?___lwmod 0060                     _cursor_right 00D8  
         __end_of_RTCC_from_RTCC 35DE                      ??_UART_init 0060  
                    ??_RTCC_init 0060                      ??_RTCC_loop 008B  
                    __smallconst 0F00                __size_of_tx_sends 006A  
                      _epoch_now 00C9                        _main_init 2E94  
               _epoch_to_caltime 1C76             __CFG_RTCOSC$T1OSCREF 000000  
                       ?_my_atoi 0066                         _ADC_init 3642  
                    _PADCFG1bits 000F3C                         ?_my_utoa 006D  
            ringbuf_backspace@rb 0009                 ___lwdiv@quotient 006B  
                       ?_tx_send 0001                       my_atoi@ret 006C  
                     my_atoi@str 0066                        _cursor_up 00DC  
                 ??_tx_send_time 0081                        d_to_x@dec 0068  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                      _judgement 1E62                         _CTMUICON 000FB1  
       ringbuf_init@internal_buf 0062                   ___wmul@product 0064  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
            __size_of_print_time 007A                         i2u305_40 1BD0  
                       i2u306_40 1BF6                         i2u307_40 1C1C  
                       i2u308_40 1C42                  ??i2_ringbuf_pop 000B  
                ??i2_ringbuf_num 0003                  ??i2_ringbuf_put 000C  
                       _PIR1bits 000F9E                         i2u282_40 3284  
                       i2u282_47 327A                         i2u283_40 32B0  
                       _PIR2bits 000FA1                         i2u283_47 32A6  
                       i2u391_40 007A                         i2u392_40 007C  
                       i2u393_40 0092                         _PIR5bits 000F98  
                       i2u394_40 0094       epoch_to_caltime@year_cache 00C1  
                       i2u395_40 00AA                         i2u396_40 00AC  
                  ??_ringbuf_pop 006A                    ??_ringbuf_num 0062  
                  ??_ringbuf_put 006B                         _UART_ISR 340E  
                  ??_timer1_init 0061                      ??i2_tx_send 0010  
                      _time_sync 002B                    ??_timer3_init 0060  
                      _my_strcmp 2C14                        main@_2482 00CD  
                       _OSC_init 36C6                  ?_RTCC_from_RTCC 0087  
                     my_utoa@str 006D                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                ___wmul@multiplier 0060  
               __CFG_SOSCSEL$LOW 000000                         _PWM_init 27C8  
 button_timer_interrupt@sw_value 0003                       ?_main_init 0001  
                      main@value 00A8                    ringbuf_pop@rb 0068  
                  ringbuf_num@rb 0060                    ringbuf_put@rb 0068  
              ___lmul@multiplier 006C                      _INTCON2bits 000FF1  
                      copy_data0 32FE             epoch_to_caltime@year 0097  
                     ?_judgement 0001                 __size_of_PWM_set 00CC  
                     _CCPR1Lbits 000FBB                       _CCPR2Lbits 000FB5  
                     _CCPR3Lbits 000F16                       _CCPR4Lbits 000F13  
                       __Hrparam 0000                         __Lrparam 0000  
                  _weekday_3char 0F01            __size_of_month_length 00DE  
                     ?_my_strcmp 0060         __size_of_caltime_to_RTCC 00D0  
               __size_of___awdiv 00BE                 __size_of___awmod 00A2  
               __size_of___lldiv 00BC                 __size_of___llmod 009A  
               __size_of___lwdiv 0078                 __size_of___lwmod 0062  
              tx_sends@asciicode 006F              __end_of_ringbuf_pop 263E  
            __end_of_ringbuf_num 221C              __end_of_ringbuf_put 23CE  
           __end_of_rx_operation 145A               rx_operation@opcode 0200  
          __size_of_ringbuf_init 0054              __end_of_timer1_init 340E  
            __end_of_timer3_init 3594                  ___lwdiv@divisor 0068  
                ___lwdiv@counter 006A                         __ptext10 3314  
                       __ptext11 318C                         __ptext20 33BE  
                       __ptext12 2F26                         __ptext21 336A  
                       __ptext13 31F6                         __ptext30 176C  
                       __ptext22 3622                         __ptext14 3028  
                       __ptext31 29FC                         __ptext23 350C  
                       __ptext15 3682                         __ptext40 24A2  
                       __ptext32 3662                         __ptext24 27C8  
                       __ptext16 22FA                         __ptext41 3594  
                       __ptext33 35DE                         __ptext25 36C6  
                       __ptext17 212E                         __ptext50 19F4  
                       __ptext42 270A                         __ptext34 1C76  
                       __ptext26 3642                         __ptext18 2E94  
                       __ptext51 340E                         __ptext43 353A  
                       __ptext35 221C                         __ptext27 2DFA  
                       __ptext19 3568                         __ptext52 2AB2  
                       __ptext36 2CB8                         __ptext28 3458  
                       __ptext53 2B68                         __ptext45 1E62  
                       __ptext37 23CE                         __ptext29 35BC  
                       __ptext54 2940                         __ptext46 3258  
                       __ptext38 30A0                         __ptext47 369E  
                       __ptext39 2884                         __ptext48 3600  
                       __ptext49 3116                 __size_of_my_atoi 00A0  
                    _cursor_left 00CF                      _cursor_down 00D4  
                     PWM_init@PR 0060                 __size_of_my_utoa 0088  
          RTCC_loop@prev_halfsec 00BD                 __size_of_tx_send 001C  
                  __size_of_main 0312                    ??_tx_send_dec 0076  
                   _month_length 221C         __size_of_RTCC_from_epoch 0022  
               ??_ringbuf_delete 0003          ?_button_timer_interrupt 0001  
                       int$flags 0048                     _ringbuf_init 336A  
                      x_to_d@hex 0061                         main@scan 00AA  
                       main@temp 00AB                         _tx_sends 318C  
           __end_of_tx_send_time 212E                     ??_print_time 0081  
                 main_init@rxbuf 0600                   main_init@txbuf 0500  
                    ??_main_init 0066                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 006A  
               get_quot_rem@quot 0085                RTCC_to_caltime@ct 0062  
                       intlevel2 0000                      ??_judgement 0012  
               ___lwmod@dividend 0060                 ___lldiv@dividend 0078  
                     _RCSTA1bits 000FAC                ?_caltime_to_epoch 0078  
              _ringbuf_backspace 3116         __end_of_epoch_to_caltime 1E62  
       __size_of_RTCC_to_caltime 00B6                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 1C76                  tx_send_dec@edit 0075  
             __end_of_print_time 3028               ??_caltime_to_epoch 007C  
             ?_ringbuf_backspace 0009                         my_utoa@d 0072  
                       my_utoa@v 0073                      _ringbuf_pop 2572  
                    _ringbuf_num 212E                      _ringbuf_put 22FA  
            __end_of_tx_send_dec 336A                      ??_my_strcmp 0064  
                    _timer1_init 33BE                      _timer3_init 3568  
            ??_ringbuf_backspace 000B                  get_quot_rem@div 0087  
                get_quot_rem@num 0089                       _RTCCFGbits 000F3F  
                     _PPSCONbits 000EBF                 ___lldiv@quotient 0080  
              caltime_to_RTCC@ct 0069                  ___lwmod@divisor 0062  
              ??_caltime_to_RTCC 006B                  ___lwmod@counter 0064  
epoch_to_caltime@day_since_epoch 0093                  rx_operation@cmd 0100  
                  my_utoa@digits 0071        __end_of_ringbuf_backspace 318C  
             i2tx_send@asciicode 0010                     my_utoa@value 006F  
               ??_RTCC_from_RTCC 008B  
