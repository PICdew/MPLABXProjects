

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 18:38:14 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	swtext1,local,class=CONST,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0113                     	;# 
   114  0114                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011D                     	;# 
   123  011E                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  020C                     	;# 
   147  020D                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  0219                     	;# 
   164  021A                     	;# 
   165  021B                     	;# 
   166  021C                     	;# 
   167  021D                     	;# 
   168  021E                     	;# 
   169  021F                     	;# 
   170  0291                     	;# 
   171  0291                     	;# 
   172  0292                     	;# 
   173  0293                     	;# 
   174  0294                     	;# 
   175  0295                     	;# 
   176  0295                     	;# 
   177  0296                     	;# 
   178  0298                     	;# 
   179  0298                     	;# 
   180  0299                     	;# 
   181  029A                     	;# 
   182  029B                     	;# 
   183  029C                     	;# 
   184  029C                     	;# 
   185  029D                     	;# 
   186  029E                     	;# 
   187  029E                     	;# 
   188  0311                     	;# 
   189  0311                     	;# 
   190  0312                     	;# 
   191  0313                     	;# 
   192  0318                     	;# 
   193  0318                     	;# 
   194  0319                     	;# 
   195  031A                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  039A                     	;# 
   200  039C                     	;# 
   201  039D                     	;# 
   202  039E                     	;# 
   203  039F                     	;# 
   204  0415                     	;# 
   205  0416                     	;# 
   206  0417                     	;# 
   207  041C                     	;# 
   208  041D                     	;# 
   209  041E                     	;# 
   210  0FE4                     	;# 
   211  0FE5                     	;# 
   212  0FE6                     	;# 
   213  0FE7                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221                           
   222                           	psect	idataBANK1
   223  0002                     __pidataBANK1:	
   224                           
   225                           ;initializer for I2C_LCD_SetCursor@F2900
   226  0002  3400               	retlw	0
   227  0003  3440               	retlw	64
   228  000B                     _INTCONbits	set	11
   229  0011                     _PIR1bits	set	17
   230  0018                     _T1CONbits	set	24
   231  0017                     _TMR1H	set	23
   232  0016                     _TMR1L	set	22
   233  0093                     _BCL1IF	set	147
   234  005F                     _GIE	set	95
   235  0064                     _RA4	set	100
   236  0065                     _RA5	set	101
   237  0068                     _RB0	set	104
   238  006B                     _RB3	set	107
   239  006E                     _RB6	set	110
   240  008B                     _SSP1IF	set	139
   241  009B                     _ADRES	set	155
   242  009D                     _ADCON0bits	set	157
   243  009E                     _ADCON1bits	set	158
   244  0095                     _OPTION_REGbits	set	149
   245  0099                     _OSCCON	set	153
   246  0091                     _PIE1bits	set	145
   247  008C                     _TRISA	set	140
   248  008D                     _TRISB	set	141
   249  0117                     _FVRCON	set	279
   250  0863                     _LATA3	set	2147
   251  0866                     _LATA6	set	2150
   252  0867                     _LATA7	set	2151
   253  086A                     _LATB2	set	2154
   254  086D                     _LATB5	set	2157
   255  086F                     _LATB7	set	2159
   256  018C                     _ANSELA	set	396
   257  018D                     _ANSELB	set	397
   258  019D                     _RCSTA	set	413
   259  019C                     _SPBRGH	set	412
   260  019B                     _SPBRGL	set	411
   261  019A                     _TXREG	set	410
   262  019E                     _TXSTA	set	414
   263  0CFB                     _BRG16	set	3323
   264  0CEF                     _SPEN	set	3311
   265  0212                     _SSP1ADD	set	530
   266  0211                     _SSP1BUF	set	529
   267  0215                     _SSP1CON1	set	533
   268  0216                     _SSP1CON2	set	534
   269  0216                     _SSP1CON2bits	set	534
   270  0214                     _SSP1STAT	set	532
   271  020C                     _WPUA	set	524
   272  020D                     _WPUB	set	525
   273                           
   274                           	psect	stringtext
   275  07B5                     __pstringtext:	
   276  07B5                     STR_1:	
   277  07B5  3443               	retlw	67	;'C'
   278  07B6  3468               	retlw	104	;'h'
   279  07B7  3461               	retlw	97	;'a'
   280  07B8  3472               	retlw	114	;'r'
   281  07B9  3467               	retlw	103	;'g'
   282  07BA  3465               	retlw	101	;'e'
   283  07BB  3420               	retlw	32	;' '
   284  07BC  3453               	retlw	83	;'S'
   285  07BD  3474               	retlw	116	;'t'
   286  07BE  3461               	retlw	97	;'a'
   287  07BF  3474               	retlw	116	;'t'
   288  07C0  3469               	retlw	105	;'i'
   289  07C1  346F               	retlw	111	;'o'
   290  07C2  346E               	retlw	110	;'n'
   291  07C3  3420               	retlw	32	;' '
   292  07C4  3435               	retlw	53	;'5'
   293  07C5  3400               	retlw	0
   294  07C6                     STR_11:	
   295  07C6  3441               	retlw	65	;'A'
   296  07C7  346C               	retlw	108	;'l'
   297  07C8  3477               	retlw	119	;'w'
   298  07C9  3461               	retlw	97	;'a'
   299  07CA  3479               	retlw	121	;'y'
   300  07CB  3473               	retlw	115	;'s'
   301  07CC  3420               	retlw	32	;' '
   302  07CD  344F               	retlw	79	;'O'
   303  07CE  344E               	retlw	78	;'N'
   304  07CF  3400               	retlw	0
   305  07D0                     STR_12:	
   306  07D0  3441               	retlw	65	;'A'
   307  07D1  3475               	retlw	117	;'u'
   308  07D2  3474               	retlw	116	;'t'
   309  07D3  346F               	retlw	111	;'o'
   310  07D4  3420               	retlw	32	;' '
   311  07D5  3453               	retlw	83	;'S'
   312  07D6  3474               	retlw	116	;'t'
   313  07D7  346F               	retlw	111	;'o'
   314  07D8  3470               	retlw	112	;'p'
   315  07D9  3400               	retlw	0
   316  07DA                     STR_10:	
   317  07DA  3452               	retlw	82	;'R'
   318  07DB  3465               	retlw	101	;'e'
   319  07DC  3473               	retlw	115	;'s'
   320  07DD  3465               	retlw	101	;'e'
   321  07DE  3474               	retlw	116	;'t'
   322  07DF  3465               	retlw	101	;'e'
   323  07E0  3464               	retlw	100	;'d'
   324  07E1  3400               	retlw	0
   325  07E2                     STR_9:	
   326  07E2  3452               	retlw	82	;'R'
   327  07E3  3465               	retlw	101	;'e'
   328  07E4  3473               	retlw	115	;'s'
   329  07E5  3465               	retlw	101	;'e'
   330  07E6  3474               	retlw	116	;'t'
   331  07E7  343F               	retlw	63	;'?'
   332  07E8  3400               	retlw	0
   333  07E9                     STR_6:	
   334  07E9  3443               	retlw	67	;'C'
   335  07EA  3445               	retlw	69	;'E'
   336  07EB  344E               	retlw	78	;'N'
   337  07EC  3454               	retlw	84	;'T'
   338  07ED  3445               	retlw	69	;'E'
   339  07EE  3452               	retlw	82	;'R'
   340  07EF  3400               	retlw	0
   341  07F0                     STR_3:	
   342  07F0  3443               	retlw	67	;'C'
   343  07F1  3465               	retlw	101	;'e'
   344  07F2  346E               	retlw	110	;'n'
   345  07F3  3474               	retlw	116	;'t'
   346  07F4  3465               	retlw	101	;'e'
   347  07F5  3472               	retlw	114	;'r'
   348  07F6  3400               	retlw	0
   349  07F7                     STR_5:	
   350  07F7  3452               	retlw	82	;'R'
   351  07F8  3449               	retlw	73	;'I'
   352  07F9  3447               	retlw	71	;'G'
   353  07FA  3448               	retlw	72	;'H'
   354  07FB  3454               	retlw	84	;'T'
   355  07FC  3400               	retlw	0
   356  07FD                     STR_2:	
   357  07FD  3452               	retlw	82	;'R'
   358  07FE  3469               	retlw	105	;'i'
   359  07FF  3467               	retlw	103	;'g'
   360  0800  3468               	retlw	104	;'h'
   361  0801  3474               	retlw	116	;'t'
   362  0802  3400               	retlw	0
   363  0803                     STR_7:	
   364  0803  344C               	retlw	76	;'L'
   365  0804  3445               	retlw	69	;'E'
   366  0805  3446               	retlw	70	;'F'
   367  0806  3454               	retlw	84	;'T'
   368  0807  3400               	retlw	0
   369  0808                     STR_4:	
   370  0808  344C               	retlw	76	;'L'
   371  0809  3465               	retlw	101	;'e'
   372  080A  3466               	retlw	102	;'f'
   373  080B  3474               	retlw	116	;'t'
   374  080C  3400               	retlw	0
   375  080D                     STR_8:	
   376  080D  346D               	retlw	109	;'m'
   377  080E  3441               	retlw	65	;'A'
   378  080F  3468               	retlw	104	;'h'
   379  0810  3400               	retlw	0
   380                           
   381                           ; #config settings
   382  0000                     
   383                           	psect	cinit
   384  0184                     start_initialization:	
   385  0184                     __initialization:	
   386                           
   387                           ; Clear objects allocated to BANK0
   388  0184  3020               	movlw	low __pbssBANK0
   389  0185  0084               	movwf	4
   390  0186  3000               	movlw	high __pbssBANK0
   391  0187  0085               	movwf	5
   392  0188  301B               	movlw	27
   393  0189  318A  2256  3181   	fcall	clear_ram0
   394                           
   395                           ; Clear objects allocated to BANK1
   396  018C  30A0               	movlw	low __pbssBANK1
   397  018D  0084               	movwf	4
   398  018E  3000               	movlw	high __pbssBANK1
   399  018F  0085               	movwf	5
   400  0190  304B               	movlw	75
   401  0191  318A  2256  3181   	fcall	clear_ram0
   402                           
   403                           ; Initialize objects allocated to BANK1
   404  0194  0021               	movlb	1	; select bank1
   405  0195  3180  2002  3181   	fcall	__pidataBANK1	;fetch initializer
   406  0198  00EE               	movwf	__pdataBANK1& (0+127)
   407  0199  3180  2003         	fcall	__pidataBANK1+1	;fetch initializer
   408  019B  00EF               	movwf	(__pdataBANK1+1)& (0+127)
   409  019C                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  019C                     __end_of__initialization:	
   413  019C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   414  019D  0020               	movlb	0
   415  019E  3183  2BB7         	ljmp	_main	;jump to C main() function
   416                           
   417                           	psect	bssBANK0
   418  0020                     __pbssBANK0:	
   419  0020                     _s:	
   420  0020                     	ds	6
   421  0026                     _v:	
   422  0026                     	ds	6
   423  002C                     _auto_cut_ON:	
   424  002C                     	ds	3
   425  002F                     _cnt0:	
   426  002F                     	ds	2
   427  0031                     _cnt1s:	
   428  0031                     	ds	2
   429  0033                     millis_timer@cnt:	
   430  0033                     	ds	2
   431  0035                     _print_content:	
   432  0035                     	ds	1
   433  0036                     _print_port:	
   434  0036                     	ds	1
   435  0037                     _sw_1:	
   436  0037                     	ds	4
   437                           
   438                           	psect	bssBANK1
   439  00A0                     __pbssBANK1:	
   440  00A0                     _ss:	
   441  00A0                     	ds	12
   442  00AC                     _rx_buf:	
   443  00AC                     	ds	8
   444  00B4                     _cut:	
   445  00B4                     	ds	6
   446  00BA                     _sp:	
   447  00BA                     	ds	6
   448  00C0                     _ms:	
   449  00C0                     	ds	4
   450  00C4                     _change_flag:	
   451  00C4                     	ds	3
   452  00C7                     _cnt:	
   453  00C7                     	ds	3
   454  00CA                     _cntf:	
   455  00CA                     	ds	3
   456  00CD                     _cut_flag:	
   457  00CD                     	ds	3
   458  00D0                     _d1:	
   459  00D0                     	ds	3
   460  00D3                     _tx_buf:	
   461  00D3                     	ds	8
   462  00DB                     _sh_0:	
   463  00DB                     	ds	4
   464  00DF                     _sh_1:	
   465  00DF                     	ds	4
   466  00E3                     _sh_2:	
   467  00E3                     	ds	4
   468  00E7                     _sw_0:	
   469  00E7                     	ds	4
   470                           
   471                           	psect	dataBANK1
   472  00EE                     __pdataBANK1:	
   473  00EE                     I2C_LCD_SetCursor@F2900:	
   474  00EE                     	ds	2
   475                           
   476                           	psect	clrtext
   477  0A56                     clear_ram0:	
   478                           ;	Called with FSR0 containing the base address, and
   479                           ;	WREG with the size to clear
   480                           
   481  0A56  0064               	clrwdt	;clear the watchdog before getting into this loop
   482  0A57                     clrloop0:	
   483  0A57  0180               	clrf	0	;clear RAM location pointed to by FSR
   484  0A58  3101               	addfsr 0,1
   485  0A59  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   486  0A5A  2A57               	goto	clrloop0	;have we reached the end yet?
   487  0A5B  3400               	retlw	0	;all done for this memory range, return
   488                           
   489                           	psect	cstackBANK2
   490  0120                     __pcstackBANK2:	
   491  0120                     ??_Delay_ms:	
   492  0120                     ?_I2C_rStart:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0120                     ?___lmul:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0120                     I2C_Start@adrs:	
   499                           ; 4 bytes @ 0x0
   500                           
   501  0120                     I2C_Receive@ack:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0120                     sh_flag_clear@port:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0120                     I2C_rStart@adrs:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0120                     ___lmul@multiplier:	
   511                           ; 2 bytes @ 0x0
   512                           
   513                           
   514                           ; 4 bytes @ 0x0
   515  0120                     	ds	1
   516  0121                     ??_I2C_LCD_Command:	
   517  0121                     ?_EEP_write16:	
   518                           ; 0 bytes @ 0x1
   519                           
   520  0121                     I2C_Receive@data:	
   521                           ; 0 bytes @ 0x1
   522                           
   523  0121                     EEP_write16@Reg_l:	
   524                           ; 1 bytes @ 0x1
   525                           
   526                           
   527                           ; 1 bytes @ 0x1
   528  0121                     	ds	1
   529  0122                     I2C_LCD_Command@c:	
   530  0122                     I2C_rStart@rw:	
   531                           ; 1 bytes @ 0x2
   532                           
   533  0122                     EEP_write16@data:	
   534                           ; 2 bytes @ 0x2
   535                           
   536                           
   537                           ; 2 bytes @ 0x2
   538  0122                     	ds	1
   539  0123                     I2C_LCD_Command@ans:	
   540                           
   541                           ; 1 bytes @ 0x3
   542  0123                     	ds	1
   543  0124                     ??_I2C_LCD_Clear:	
   544  0124                     ??_EEP_write16:	
   545                           ; 0 bytes @ 0x4
   546                           
   547  0124                     ?_EEP_read:	
   548                           ; 0 bytes @ 0x4
   549                           
   550  0124                     EEP_read@Reg_l:	
   551                           ; 1 bytes @ 0x4
   552                           
   553  0124                     ___lmul@multiplicand:	
   554                           ; 1 bytes @ 0x4
   555                           
   556                           
   557                           ; 4 bytes @ 0x4
   558  0124                     	ds	1
   559  0125                     ??_EEP_read:	
   560  0125                     EEP_write16@Reg_h:	
   561                           ; 0 bytes @ 0x5
   562                           
   563                           
   564                           ; 1 bytes @ 0x5
   565  0125                     	ds	1
   566  0126                     EEP_read@Reg_h:	
   567  0126                     EEP_write16@ans:	
   568                           ; 1 bytes @ 0x6
   569                           
   570                           
   571                           ; 1 bytes @ 0x6
   572  0126                     	ds	1
   573  0127                     EEP_read@data:	
   574                           
   575                           ; 1 bytes @ 0x7
   576  0127                     	ds	1
   577  0128                     EEP_read@ans:	
   578  0128                     ___lmul@product:	
   579                           ; 1 bytes @ 0x8
   580                           
   581                           
   582                           ; 4 bytes @ 0x8
   583  0128                     	ds	4
   584  012C                     ??_main:	
   585                           
   586                           ; 0 bytes @ 0xC
   587  012C                     	ds	12
   588  0138                     main@i:	
   589                           
   590                           ; 1 bytes @ 0x18
   591  0138                     	ds	1
   592                           
   593                           	psect	cstackBANK1
   594  00EB                     __pcstackBANK1:	
   595  00EB                     ?_LED:	
   596  00EB                     ??_timer0_init:	
   597                           ; 0 bytes @ 0x0
   598                           
   599  00EB                     ??_timer1_init:	
   600                           ; 0 bytes @ 0x0
   601                           
   602  00EB                     ??_ADC_init:	
   603                           ; 0 bytes @ 0x0
   604                           
   605  00EB                     ?_Delay_ms:	
   606                           ; 0 bytes @ 0x0
   607                           
   608  00EB                     ??_I2C_IdleCheck:	
   609                           ; 0 bytes @ 0x0
   610                           
   611  00EB                     ??_I2C_init:	
   612                           ; 0 bytes @ 0x0
   613                           
   614  00EB                     ?_OUT:	
   615                           ; 0 bytes @ 0x0
   616                           
   617  00EB                     ?_sh_flag_clear:	
   618                           ; 0 bytes @ 0x0
   619                           
   620  00EB                     ??___lmul:	
   621                           ; 0 bytes @ 0x0
   622                           
   623  00EB                     ?_sh_flag_read:	
   624                           ; 0 bytes @ 0x0
   625                           
   626  00EB                     ADC_init@p_ref:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  00EB                     OUT@value:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  00EB                     LED@value:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  00EB                     sh_flag_read@bit_and:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  00EB                     sh_flag_clear@bit_and:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  00EB                     Delay_ms@ms:	
   642                           ; 1 bytes @ 0x0
   643                           
   644                           
   645                           ; 2 bytes @ 0x0
   646  00EB                     	ds	1
   647  00EC                     ??_LED:	
   648  00EC                     ??_OUT:	
   649                           ; 0 bytes @ 0x1
   650                           
   651  00EC                     ??_sh_flag_read:	
   652                           ; 0 bytes @ 0x1
   653                           
   654  00EC                     ??_sh_flag_clear:	
   655                           ; 0 bytes @ 0x1
   656                           
   657  00EC                     timer0_init@prescaler:	
   658                           ; 0 bytes @ 0x1
   659                           
   660  00EC                     timer1_init@prescaler:	
   661                           ; 1 bytes @ 0x1
   662                           
   663  00EC                     I2C_IdleCheck@mask:	
   664                           ; 1 bytes @ 0x1
   665                           
   666  00EC                     OUT@b:	
   667                           ; 1 bytes @ 0x1
   668                           
   669  00EC                     LED@b:	
   670                           ; 1 bytes @ 0x1
   671                           
   672  00EC                     sh_flag_read@port:	
   673                           ; 1 bytes @ 0x1
   674                           
   675                           
   676                           ; 1 bytes @ 0x1
   677  00EC                     	ds	1
   678  00ED                     ??_I2C_rStart:	
   679  00ED                     ??_I2C_Stop:	
   680                           ; 0 bytes @ 0x2
   681                           
   682  00ED                     ??_I2C_Send:	
   683                           ; 0 bytes @ 0x2
   684                           
   685  00ED                     ??_I2C_Receive:	
   686                           ; 0 bytes @ 0x2
   687                           
   688  00ED                     ?_I2C_Start:	
   689                           ; 0 bytes @ 0x2
   690                           
   691  00ED                     I2C_Start@rw:	
   692                           ; 1 bytes @ 0x2
   693                           
   694  00ED                     I2C_Send@data:	
   695                           ; 1 bytes @ 0x2
   696                           
   697                           
   698                           ; 1 bytes @ 0x2
   699  00ED                     	ds	1
   700  00EE                     ??_I2C_Start:	
   701  00EE                     ??_I2C_LCD_init:	
   702                           ; 0 bytes @ 0x3
   703                           
   704  00EE                     ??_main_init:	
   705                           ; 0 bytes @ 0x3
   706                           
   707                           
   708                           	psect	cstackCOMMON
   709  0070                     __pcstackCOMMON:	
   710                           ; 0 bytes @ 0x3
   711                           
   712  0070                     ?_lchika:	
   713  0070                     ?_timer0_init:	
   714                           ; 0 bytes @ 0x0
   715                           
   716  0070                     ?_timer1_init:	
   717                           ; 0 bytes @ 0x0
   718                           
   719  0070                     ?_ADC_init:	
   720                           ; 0 bytes @ 0x0
   721                           
   722  0070                     ?_I2C_IdleCheck:	
   723                           ; 0 bytes @ 0x0
   724                           
   725  0070                     ?_I2C_init:	
   726                           ; 0 bytes @ 0x0
   727                           
   728  0070                     ?_I2C_Stop:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0070                     ?_I2C_LCD_Command:	
   732                           ; 0 bytes @ 0x0
   733                           
   734  0070                     ?_I2C_LCD_Clear:	
   735                           ; 0 bytes @ 0x0
   736                           
   737  0070                     ?_I2C_LCD_Putc:	
   738                           ; 0 bytes @ 0x0
   739                           
   740  0070                     ?_I2C_LCD_init:	
   741                           ; 0 bytes @ 0x0
   742                           
   743  0070                     ?_button_timer_interrupt:	
   744                           ; 0 bytes @ 0x0
   745                           
   746  0070                     ?_isr:	
   747                           ; 0 bytes @ 0x0
   748                           
   749  0070                     ?_main_init:	
   750                           ; 0 bytes @ 0x0
   751                           
   752  0070                     ?i1_I2C_IdleCheck:	
   753                           ; 0 bytes @ 0x0
   754                           
   755  0070                     ??i1_I2C_IdleCheck:	
   756                           ; 0 bytes @ 0x0
   757                           
   758  0070                     ?i1_I2C_Stop:	
   759                           ; 0 bytes @ 0x0
   760                           
   761  0070                     ?i1_I2C_LCD_Command:	
   762                           ; 0 bytes @ 0x0
   763                           
   764  0070                     ?i1_I2C_LCD_Clear:	
   765                           ; 0 bytes @ 0x0
   766                           
   767  0070                     ?i1_LED:	
   768                           ; 0 bytes @ 0x0
   769                           
   770  0070                     ?_ringbuf_pop:	
   771                           ; 0 bytes @ 0x0
   772                           
   773  0070                     ?_I2C_Send:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_I2C_Receive:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?i1_I2C_Send:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_ADC:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_ringbuf_num:	
   786                           ; 2 bytes @ 0x0
   787                           
   788  0070                     ?_main:	
   789                           ; 2 bytes @ 0x0
   790                           
   791  0070                     ?___awdiv:	
   792                           ; 2 bytes @ 0x0
   793                           
   794  0070                     ?___lwmod:	
   795                           ; 2 bytes @ 0x0
   796                           
   797  0070                     ?___almod:	
   798                           ; 2 bytes @ 0x0
   799                           
   800  0070                     ?___lldiv:	
   801                           ; 4 bytes @ 0x0
   802                           
   803  0070                     button_timer_interrupt@sw_value:	
   804                           ; 4 bytes @ 0x0
   805                           
   806  0070                     i1LED@value:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ___awdiv@divisor:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ___lwmod@divisor:	
   813                           ; 2 bytes @ 0x0
   814                           
   815  0070                     ___almod@divisor:	
   816                           ; 2 bytes @ 0x0
   817                           
   818  0070                     ___lldiv@divisor:	
   819                           ; 4 bytes @ 0x0
   820                           
   821                           
   822                           ; 4 bytes @ 0x0
   823  0070                     	ds	1
   824  0071                     ??_button_timer_interrupt:	
   825  0071                     ??i1_LED:	
   826                           ; 0 bytes @ 0x1
   827                           
   828  0071                     i1I2C_IdleCheck@mask:	
   829                           ; 0 bytes @ 0x1
   830                           
   831  0071                     i1LED@b:	
   832                           ; 1 bytes @ 0x1
   833                           
   834                           
   835                           ; 1 bytes @ 0x1
   836  0071                     	ds	1
   837  0072                     ??_ADC:	
   838  0072                     ??_ringbuf_num:	
   839                           ; 0 bytes @ 0x2
   840                           
   841  0072                     ??i1_I2C_Stop:	
   842                           ; 0 bytes @ 0x2
   843                           
   844  0072                     ??i1_I2C_Send:	
   845                           ; 0 bytes @ 0x2
   846                           
   847  0072                     ?i1_I2C_Start:	
   848                           ; 0 bytes @ 0x2
   849                           
   850  0072                     i1I2C_Start@rw:	
   851                           ; 1 bytes @ 0x2
   852                           
   853  0072                     i1I2C_Send@data:	
   854                           ; 1 bytes @ 0x2
   855                           
   856  0072                     ___awdiv@dividend:	
   857                           ; 1 bytes @ 0x2
   858                           
   859  0072                     ___lwmod@dividend:	
   860                           ; 2 bytes @ 0x2
   861                           
   862                           
   863                           ; 2 bytes @ 0x2
   864  0072                     	ds	1
   865  0073                     ??i1_I2C_Start:	
   866  0073                     ADC@ch:	
   867                           ; 0 bytes @ 0x3
   868                           
   869  0073                     button_timer_interrupt@bt:	
   870                           ; 1 bytes @ 0x3
   871                           
   872  0073                     i1I2C_Start@adrs:	
   873                           ; 1 bytes @ 0x3
   874                           
   875                           
   876                           ; 1 bytes @ 0x3
   877  0073                     	ds	1
   878  0074                     ??_I2C_LCD_Putc:	
   879  0074                     ?_I2C_LCD_Puts:	
   880                           ; 0 bytes @ 0x4
   881                           
   882  0074                     ??___awdiv:	
   883                           ; 0 bytes @ 0x4
   884                           
   885  0074                     ??___lwmod:	
   886                           ; 0 bytes @ 0x4
   887                           
   888  0074                     ??i1_I2C_LCD_Command:	
   889                           ; 0 bytes @ 0x4
   890                           
   891  0074                     I2C_LCD_Puts@s:	
   892                           ; 0 bytes @ 0x4
   893                           
   894  0074                     ___almod@dividend:	
   895                           ; 2 bytes @ 0x4
   896                           
   897  0074                     ___lldiv@dividend:	
   898                           ; 4 bytes @ 0x4
   899                           
   900                           
   901                           ; 4 bytes @ 0x4
   902  0074                     	ds	1
   903  0075                     I2C_LCD_Putc@c:	
   904  0075                     ___awdiv@counter:	
   905                           ; 1 bytes @ 0x5
   906                           
   907  0075                     ___lwmod@counter:	
   908                           ; 1 bytes @ 0x5
   909                           
   910  0075                     i1I2C_LCD_Command@c:	
   911                           ; 1 bytes @ 0x5
   912                           
   913                           
   914                           ; 1 bytes @ 0x5
   915  0075                     	ds	1
   916  0076                     ??_I2C_LCD_Puts:	
   917  0076                     ?___lwdiv:	
   918                           ; 0 bytes @ 0x6
   919                           
   920  0076                     ringbuf_num@rb:	
   921                           ; 2 bytes @ 0x6
   922                           
   923  0076                     I2C_LCD_Putc@ans:	
   924                           ; 1 bytes @ 0x6
   925                           
   926  0076                     ___awdiv@sign:	
   927                           ; 1 bytes @ 0x6
   928                           
   929  0076                     i1I2C_LCD_Command@ans:	
   930                           ; 1 bytes @ 0x6
   931                           
   932  0076                     ___lwdiv@divisor:	
   933                           ; 1 bytes @ 0x6
   934                           
   935                           
   936                           ; 2 bytes @ 0x6
   937  0076                     	ds	1
   938  0077                     ??_ringbuf_pop:	
   939  0077                     ?_I2C_LCD_SetCursor:	
   940                           ; 0 bytes @ 0x7
   941                           
   942  0077                     ??i1_I2C_LCD_Clear:	
   943                           ; 0 bytes @ 0x7
   944                           
   945  0077                     I2C_LCD_SetCursor@row:	
   946                           ; 0 bytes @ 0x7
   947                           
   948  0077                     ___awdiv@quotient:	
   949                           ; 1 bytes @ 0x7
   950                           
   951                           
   952                           ; 2 bytes @ 0x7
   953  0077                     	ds	1
   954  0078                     ??_I2C_LCD_SetCursor:	
   955  0078                     ??___almod:	
   956                           ; 0 bytes @ 0x8
   957                           
   958  0078                     ??___lldiv:	
   959                           ; 0 bytes @ 0x8
   960                           
   961  0078                     I2C_LCD_SetCursor@row_offsets:	
   962                           ; 0 bytes @ 0x8
   963                           
   964  0078                     I2C_LCD_Puts@ans:	
   965                           ; 2 bytes @ 0x8
   966                           
   967  0078                     ___lwdiv@dividend:	
   968                           ; 2 bytes @ 0x8
   969                           
   970                           
   971                           ; 2 bytes @ 0x8
   972  0078                     	ds	1
   973  0079                     ___almod@counter:	
   974  0079                     ___lldiv@quotient:	
   975                           ; 1 bytes @ 0x9
   976                           
   977                           
   978                           ; 4 bytes @ 0x9
   979  0079                     	ds	1
   980  007A                     ??___lwdiv:	
   981  007A                     I2C_LCD_SetCursor@col:	
   982                           ; 0 bytes @ 0xA
   983                           
   984  007A                     ___almod@sign:	
   985                           ; 1 bytes @ 0xA
   986                           
   987                           
   988                           ; 1 bytes @ 0xA
   989  007A                     	ds	1
   990  007B                     ??___aldiv:	
   991  007B                     ___lwdiv@quotient:	
   992                           ; 0 bytes @ 0xB
   993                           
   994                           
   995                           ; 2 bytes @ 0xB
   996  007B                     	ds	2
   997  007D                     ___lldiv@counter:	
   998  007D                     ___lwdiv@counter:	
   999                           ; 1 bytes @ 0xD
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0xD
  1003  007D                     	ds	1
  1004                           
  1005                           	psect	cstackBANK0
  1006  003B                     __pcstackBANK0:	
  1007  003B                     ??_lchika:	
  1008  003B                     ?___aldiv:	
  1009                           ; 0 bytes @ 0x0
  1010                           
  1011  003B                     ringbuf_pop@ret:	
  1012                           ; 4 bytes @ 0x0
  1013                           
  1014  003B                     ___aldiv@divisor:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x0
  1019  003B                     	ds	1
  1020  003C                     ringbuf_pop@rb:	
  1021                           
  1022                           ; 1 bytes @ 0x1
  1023  003C                     	ds	3
  1024  003F                     lchika@i:	
  1025  003F                     ___aldiv@dividend:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028                           
  1029                           ; 4 bytes @ 0x4
  1030  003F                     	ds	4
  1031  0043                     ___aldiv@counter:	
  1032                           
  1033                           ; 1 bytes @ 0x8
  1034  0043                     	ds	1
  1035  0044                     ___aldiv@sign:	
  1036                           
  1037                           ; 1 bytes @ 0x9
  1038  0044                     	ds	1
  1039  0045                     ___aldiv@quotient:	
  1040                           
  1041                           ; 4 bytes @ 0xA
  1042  0045                     	ds	4
  1043  0049                     ?_display:	
  1044  0049                     display@co:	
  1045                           ; 0 bytes @ 0xE
  1046                           
  1047                           
  1048                           ; 1 bytes @ 0xE
  1049  0049                     	ds	1
  1050  004A                     ??_display:	
  1051                           
  1052                           ; 0 bytes @ 0xF
  1053  004A                     	ds	2
  1054  004C                     display@i:	
  1055                           
  1056                           ; 1 bytes @ 0x11
  1057  004C                     	ds	1
  1058  004D                     ??_isr:	
  1059                           
  1060                           ; 0 bytes @ 0x12
  1061  004D                     	ds	8
  1062  0055                     isr@i:	
  1063                           
  1064                           ; 1 bytes @ 0x1A
  1065  0055                     	ds	1
  1066                           
  1067                           	psect	maintext
  1068  03B7                     __pmaintext:	
  1069 ;;
  1070 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1071 ;;
  1072 ;; *************** function _main *****************
  1073 ;; Defined at:
  1074 ;;		line 325 in file "PIC16F1827-ChargeStation5-02.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  i               1   24[BANK2 ] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  2  478[None  ] int 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : B1F/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1088 ;;      Params:         0       0       0       0       0       0
  1089 ;;      Locals:         0       0       0       1       0       0
  1090 ;;      Temps:          0       0       0      12       0       0
  1091 ;;      Totals:         0       0       0      13       0       0
  1092 ;;Total ram usage:       13 bytes
  1093 ;; Hardware stack levels required when called:   12
  1094 ;; This function calls:
  1095 ;;		_EEP_read
  1096 ;;		_EEP_write16
  1097 ;;		_LED
  1098 ;;		_OUT
  1099 ;;		___lmul
  1100 ;;		_main_init
  1101 ;;		_sh_flag_clear
  1102 ;;		_sh_flag_read
  1103 ;; This function is called by:
  1104 ;;		Startup code after reset
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _main
  1110  03B7                     _main:	
  1111                           
  1112                           ;PIC16F1827-ChargeStation5-02.c: 326: main_init();
  1113                           
  1114                           ;incstack = 0
  1115                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1116  03B7  318C  2425  3183   	fcall	_main_init
  1117                           
  1118                           ;PIC16F1827-ChargeStation5-02.c: 328: OUT(0, 1);
  1119  03BA  0021               	movlb	1	; select bank1
  1120  03BB  01EB               	clrf	OUT@value^(0+128)
  1121  03BC  0AEB               	incf	OUT@value^(0+128),f
  1122  03BD  3000               	movlw	0
  1123  03BE  318D  251A  3183   	fcall	_OUT
  1124                           
  1125                           ;PIC16F1827-ChargeStation5-02.c: 329: OUT(1, 1);
  1126  03C1  0021               	movlb	1	; select bank1
  1127  03C2  01EB               	clrf	OUT@value^(0+128)
  1128  03C3  0AEB               	incf	OUT@value^(0+128),f
  1129  03C4  3001               	movlw	1
  1130  03C5  318D  251A  3183   	fcall	_OUT
  1131                           
  1132                           ;PIC16F1827-ChargeStation5-02.c: 330: OUT(2, 1);
  1133  03C8  0021               	movlb	1	; select bank1
  1134  03C9  01EB               	clrf	OUT@value^(0+128)
  1135  03CA  0AEB               	incf	OUT@value^(0+128),f
  1136  03CB  3002               	movlw	2
  1137  03CC  318D  251A  3183   	fcall	_OUT
  1138                           
  1139                           ;PIC16F1827-ChargeStation5-02.c: 331: LED(0, 1);
  1140  03CF  0021               	movlb	1	; select bank1
  1141  03D0  01EB               	clrf	LED@value^(0+128)
  1142  03D1  0AEB               	incf	LED@value^(0+128),f
  1143  03D2  3000               	movlw	0
  1144  03D3  318C  2470  3183   	fcall	_LED
  1145                           
  1146                           ;PIC16F1827-ChargeStation5-02.c: 332: LED(1, 1);
  1147  03D6  0021               	movlb	1	; select bank1
  1148  03D7  01EB               	clrf	LED@value^(0+128)
  1149  03D8  0AEB               	incf	LED@value^(0+128),f
  1150  03D9  3001               	movlw	1
  1151  03DA  318C  2470  3183   	fcall	_LED
  1152                           
  1153                           ;PIC16F1827-ChargeStation5-02.c: 333: LED(2, 1);
  1154  03DD  0021               	movlb	1	; select bank1
  1155  03DE  01EB               	clrf	LED@value^(0+128)
  1156  03DF  0AEB               	incf	LED@value^(0+128),f
  1157  03E0  3002               	movlw	2
  1158  03E1  318C  2470  3183   	fcall	_LED
  1159                           
  1160                           ;PIC16F1827-ChargeStation5-02.c: 335: GIE = 0;
  1161  03E4  138B               	bcf	11,7	;volatile
  1162                           
  1163                           ;PIC16F1827-ChargeStation5-02.c: 336: uint8_t i;
  1164                           ;PIC16F1827-ChargeStation5-02.c: 337: for (i = 0; i < 3; i++) {
  1165  03E5  0022               	movlb	2	; select bank2
  1166  03E6  01B8               	clrf	main@i^(0+256)
  1167  03E7  3003               	movlw	3
  1168  03E8  0238               	subwf	main@i^(0+256),w
  1169  03E9  1803               	btfsc	3,0
  1170  03EA  2C62               	goto	l480
  1171  03EB                     l3507:	
  1172                           
  1173                           ;PIC16F1827-ChargeStation5-02.c: 338: ss[i] = (0xFF & EEP_read(i, 1))+(0xFF00 & (EEP_rea
      +                          d(i, 0) << 8));
  1174  03EB  01A4               	clrf	EEP_read@Reg_l^(0+256)
  1175  03EC  0838               	movf	main@i^(0+256),w
  1176  03ED  318E  2610  3183   	fcall	_EEP_read
  1177  03F0  0022               	movlb	2	; select bank2
  1178  03F1  00AC               	movwf	??_main^(0+256)
  1179  03F2  01AD               	clrf	(??_main^(0+256)+1)
  1180  03F3  082C               	movf	??_main^(0+256),w
  1181  03F4  00AD               	movwf	(??_main^(0+256)+1)
  1182  03F5  01AC               	clrf	??_main^(0+256)
  1183  03F6  3000               	movlw	0
  1184  03F7  052C               	andwf	??_main^(0+256),w
  1185  03F8  00AF               	movwf	(??_main+3)^(0+256)
  1186  03F9  30FF               	movlw	255
  1187  03FA  052D               	andwf	(??_main+1)^(0+256),w
  1188  03FB  00B0               	movwf	(??_main+4)^(0+256)
  1189  03FC  01A4               	clrf	EEP_read@Reg_l^(0+256)
  1190  03FD  0AA4               	incf	EEP_read@Reg_l^(0+256),f
  1191  03FE  0838               	movf	main@i^(0+256),w
  1192  03FF  318E  2610  3183   	fcall	_EEP_read
  1193  0402  0022               	movlb	2	; select bank2
  1194  0403  072F               	addwf	(??_main+3)^(0+256),w
  1195  0404  00B1               	movwf	(??_main+5)^(0+256)
  1196  0405  0830               	movf	(??_main+4)^(0+256),w
  1197  0406  1803               	skipnc
  1198  0407  0A30               	incf	(??_main+4)^(0+256),w
  1199  0408  00B2               	movwf	((??_main+5)^(0+256)+1)
  1200  0409  0831               	movf	(??_main+5)^(0+256),w
  1201  040A  00B3               	movwf	(??_main+7)^(0+256)
  1202  040B  0832               	movf	(??_main+6)^(0+256),w
  1203  040C  00B4               	movwf	((??_main+7)^(0+256)+1)
  1204  040D  01B5               	clrf	((??_main+7)^(0+256)+2)
  1205  040E  01B6               	clrf	((??_main+7)^(0+256)+3)
  1206  040F  0838               	movf	main@i^(0+256),w
  1207  0410  00B7               	movwf	(??_main+11)^(0+256)
  1208  0411  3001               	movlw	1
  1209  0412                     u3995:	
  1210  0412  35B7               	lslf	(??_main+11)^(0+256),f
  1211  0413  3EFF               	addlw	-1
  1212  0414  1D03               	skipz
  1213  0415  2C12               	goto	u3995
  1214  0416  3537               	lslf	(??_main+11)^(0+256),w
  1215  0417  3EA0               	addlw	(low (_ss| 0))& (0+255)
  1216  0418  0086               	movwf	6
  1217  0419  0187               	clrf	7
  1218  041A  0833               	movf	(??_main+7)^(0+256),w
  1219  041B  3FC0               	movwi [0]fsr1
  1220  041C  0834               	movf	(??_main+8)^(0+256),w
  1221  041D  3FC1               	movwi [1]fsr1
  1222  041E  0835               	movf	(??_main+9)^(0+256),w
  1223  041F  3FC2               	movwi [2]fsr1
  1224  0420  0836               	movf	(??_main+10)^(0+256),w
  1225  0421  3FC3               	movwi [3]fsr1
  1226                           
  1227                           ;PIC16F1827-ChargeStation5-02.c: 339: ss[i] *= 3600;
  1228  0422  3000               	movlw	0
  1229  0423  00A3               	movwf	(___lmul@multiplier+3)^(0+256)
  1230  0424  3000               	movlw	0
  1231  0425  00A2               	movwf	(___lmul@multiplier+2)^(0+256)
  1232  0426  300E               	movlw	14
  1233  0427  00A1               	movwf	(___lmul@multiplier+1)^(0+256)
  1234  0428  3010               	movlw	16
  1235  0429  00A0               	movwf	___lmul@multiplier^(0+256)
  1236  042A  0838               	movf	main@i^(0+256),w
  1237  042B  00AC               	movwf	??_main^(0+256)
  1238  042C  3001               	movlw	1
  1239  042D                     u4005:	
  1240  042D  35AC               	lslf	??_main^(0+256),f
  1241  042E  3EFF               	addlw	-1
  1242  042F  1D03               	skipz
  1243  0430  2C2D               	goto	u4005
  1244  0431  352C               	lslf	??_main^(0+256),w
  1245  0432  3EA0               	addlw	(low (_ss| 0))& (0+255)
  1246  0433  0086               	movwf	6
  1247  0434  0187               	clrf	7
  1248  0435  3F40               	moviw [0]fsr1
  1249  0436  00A4               	movwf	___lmul@multiplicand^(0+256)
  1250  0437  3F41               	moviw [1]fsr1
  1251  0438  00A5               	movwf	(___lmul@multiplicand+1)^(0+256)
  1252  0439  3F42               	moviw [2]fsr1
  1253  043A  00A6               	movwf	(___lmul@multiplicand+2)^(0+256)
  1254  043B  3F43               	moviw [3]fsr1
  1255  043C  00A7               	movwf	(___lmul@multiplicand+3)^(0+256)
  1256  043D  318D  2575  3183   	fcall	___lmul
  1257  0440  0022               	movlb	2	; select bank2
  1258  0441  0838               	movf	main@i^(0+256),w
  1259  0442  00AD               	movwf	(??_main+1)^(0+256)
  1260  0443  3001               	movlw	1
  1261  0444                     u4015:	
  1262  0444  35AD               	lslf	(??_main+1)^(0+256),f
  1263  0445  3EFF               	addlw	-1
  1264  0446  1D03               	skipz
  1265  0447  2C44               	goto	u4015
  1266  0448  352D               	lslf	(??_main+1)^(0+256),w
  1267  0449  3EA0               	addlw	(low (_ss| 0))& (0+255)
  1268  044A  0086               	movwf	6
  1269  044B  0187               	clrf	7
  1270  044C  0820               	movf	?___lmul^(0+256),w
  1271  044D  3FC0               	movwi [0]fsr1
  1272  044E  0821               	movf	(?___lmul+1)^(0+256),w
  1273  044F  3FC1               	movwi [1]fsr1
  1274  0450  0822               	movf	(?___lmul+2)^(0+256),w
  1275  0451  3FC2               	movwi [2]fsr1
  1276  0452  0823               	movf	(?___lmul+3)^(0+256),w
  1277  0453  3FC3               	movwi [3]fsr1
  1278                           
  1279                           ;PIC16F1827-ChargeStation5-02.c: 340: auto_cut_ON[i] = 1;
  1280  0454  0838               	movf	main@i^(0+256),w
  1281  0455  3E2C               	addlw	(low (_auto_cut_ON| 0))& (0+255)
  1282  0456  0086               	movwf	6
  1283  0457  0187               	clrf	7
  1284  0458  0181               	clrf	1
  1285  0459  0A81               	incf	1,f
  1286  045A  3001               	movlw	1
  1287  045B  00AC               	movwf	??_main^(0+256)
  1288  045C  082C               	movf	??_main^(0+256),w
  1289  045D  07B8               	addwf	main@i^(0+256),f
  1290  045E  3003               	movlw	3
  1291  045F  0238               	subwf	main@i^(0+256),w
  1292  0460  1C03               	skipc
  1293  0461  2BEB               	goto	l3507
  1294  0462                     l480:	
  1295                           
  1296                           ;PIC16F1827-ChargeStation5-02.c: 341: }
  1297                           ;PIC16F1827-ChargeStation5-02.c: 342: INTCONbits.GIE = 1;
  1298  0462  178B               	bsf	11,7	;volatile
  1299  0463                     l3515:	
  1300                           ;PIC16F1827-ChargeStation5-02.c: 344: while (1) {
  1301                           
  1302                           
  1303                           ;PIC16F1827-ChargeStation5-02.c: 345: for (i = 0; i < 3; i++) {
  1304  0463  0022               	movlb	2	; select bank2
  1305  0464  01B8               	clrf	main@i^(0+256)
  1306  0465  3003               	movlw	3
  1307  0466  0238               	subwf	main@i^(0+256),w
  1308  0467  1803               	btfsc	3,0
  1309  0468  2CCC               	goto	l483
  1310  0469                     l3521:	
  1311                           
  1312                           ;PIC16F1827-ChargeStation5-02.c: 346: if (sh_flag_read(i, 0x10)) {
  1313  0469  3010               	movlw	16
  1314  046A  00AC               	movwf	??_main^(0+256)
  1315  046B  082C               	movf	??_main^(0+256),w
  1316  046C  0021               	movlb	1	; select bank1
  1317  046D  00EB               	movwf	sh_flag_read@bit_and^(0+128)
  1318  046E  0022               	movlb	2	; select bank2
  1319  046F  0838               	movf	main@i^(0+256),w
  1320  0470  318B  2374  3183   	fcall	_sh_flag_read
  1321  0473  3A00               	xorlw	0
  1322  0474  1903               	skipnz
  1323  0475  2C95               	goto	l3527
  1324                           
  1325                           ;PIC16F1827-ChargeStation5-02.c: 347: sh_flag_clear(i, 0x00);
  1326  0476  0021               	movlb	1	; select bank1
  1327  0477  01EB               	clrf	sh_flag_clear@bit_and^(0+128)
  1328  0478  0022               	movlb	2	; select bank2
  1329  0479  0838               	movf	main@i^(0+256),w
  1330  047A  318C  24C3  3183   	fcall	_sh_flag_clear
  1331                           
  1332                           ;PIC16F1827-ChargeStation5-02.c: 348: OUT(i, 1);
  1333  047D  0021               	movlb	1	; select bank1
  1334  047E  01EB               	clrf	OUT@value^(0+128)
  1335  047F  0AEB               	incf	OUT@value^(0+128),f
  1336  0480  0022               	movlb	2	; select bank2
  1337  0481  0838               	movf	main@i^(0+256),w
  1338  0482  318D  251A  3183   	fcall	_OUT
  1339                           
  1340                           ;PIC16F1827-ChargeStation5-02.c: 349: LED(i, 1);
  1341  0485  0021               	movlb	1	; select bank1
  1342  0486  01EB               	clrf	LED@value^(0+128)
  1343  0487  0AEB               	incf	LED@value^(0+128),f
  1344  0488  0022               	movlb	2	; select bank2
  1345  0489  0838               	movf	main@i^(0+256),w
  1346  048A  318C  2470  3183   	fcall	_LED
  1347                           
  1348                           ;PIC16F1827-ChargeStation5-02.c: 350: cut[i] = 0;
  1349  048D  0022               	movlb	2	; select bank2
  1350  048E  3538               	lslf	main@i^(0+256),w
  1351  048F  3EB4               	addlw	(low (_cut| 0))& (0+255)
  1352  0490  0086               	movwf	6
  1353  0491  0187               	clrf	7
  1354  0492  3000               	movlw	0
  1355  0493  3FC0               	movwi [0]fsr1
  1356  0494  3FC1               	movwi [1]fsr1
  1357  0495                     l3527:	
  1358                           
  1359                           ;PIC16F1827-ChargeStation5-02.c: 351: }
  1360                           ;PIC16F1827-ChargeStation5-02.c: 352: if (cut_flag[i]) {
  1361  0495  0022               	movlb	2	; select bank2
  1362  0496  0838               	movf	main@i^(0+256),w
  1363  0497  3ECD               	addlw	(low (_cut_flag| 0))& (0+255)
  1364  0498  0086               	movwf	6
  1365  0499  0187               	clrf	7
  1366  049A  0801               	movf	1,w
  1367  049B  1903               	btfsc	3,2
  1368  049C  2CA9               	goto	l3533
  1369                           
  1370                           ;PIC16F1827-ChargeStation5-02.c: 353: cut_flag[i] = 0;
  1371  049D  0838               	movf	main@i^(0+256),w
  1372  049E  3ECD               	addlw	(low (_cut_flag| 0))& (0+255)
  1373  049F  0086               	movwf	6
  1374  04A0  0187               	clrf	7
  1375  04A1  0181               	clrf	1
  1376                           
  1377                           ;PIC16F1827-ChargeStation5-02.c: 354: OUT(i, 0);
  1378  04A2  0021               	movlb	1	; select bank1
  1379  04A3  01EB               	clrf	OUT@value^(0+128)
  1380  04A4  0022               	movlb	2	; select bank2
  1381  04A5  0838               	movf	main@i^(0+256),w
  1382  04A6  318D  251A  3183   	fcall	_OUT
  1383  04A9                     l3533:	
  1384                           
  1385                           ;PIC16F1827-ChargeStation5-02.c: 355: }
  1386                           ;PIC16F1827-ChargeStation5-02.c: 356: if (change_flag[i]) {
  1387  04A9  0022               	movlb	2	; select bank2
  1388  04AA  0838               	movf	main@i^(0+256),w
  1389  04AB  3EC4               	addlw	(low (_change_flag| 0))& (0+255)
  1390  04AC  0086               	movwf	6
  1391  04AD  0187               	clrf	7
  1392  04AE  0801               	movf	1,w
  1393  04AF  1903               	btfsc	3,2
  1394  04B0  2CC3               	goto	l3539
  1395                           
  1396                           ;PIC16F1827-ChargeStation5-02.c: 357: change_flag[i] = 0;
  1397  04B1  0838               	movf	main@i^(0+256),w
  1398  04B2  3EC4               	addlw	(low (_change_flag| 0))& (0+255)
  1399  04B3  0086               	movwf	6
  1400  04B4  0187               	clrf	7
  1401  04B5  0181               	clrf	1
  1402                           
  1403                           ;PIC16F1827-ChargeStation5-02.c: 358: EEP_write16(i, 0, s[i]);
  1404  04B6  01A1               	clrf	EEP_write16@Reg_l^(0+256)
  1405  04B7  3538               	lslf	main@i^(0+256),w
  1406  04B8  3E20               	addlw	(low (_s| 0))& (0+255)
  1407  04B9  0086               	movwf	6
  1408  04BA  0187               	clrf	7
  1409  04BB  3F40               	moviw [0]fsr1
  1410  04BC  00A2               	movwf	EEP_write16@data^(0+256)
  1411  04BD  3F41               	moviw [1]fsr1
  1412  04BE  00A3               	movwf	(EEP_write16@data+1)^(0+256)
  1413  04BF  0838               	movf	main@i^(0+256),w
  1414  04C0  318C  2498  3183   	fcall	_EEP_write16
  1415  04C3                     l3539:	
  1416  04C3  3001               	movlw	1
  1417  04C4  0022               	movlb	2	; select bank2
  1418  04C5  00AC               	movwf	??_main^(0+256)
  1419  04C6  082C               	movf	??_main^(0+256),w
  1420  04C7  07B8               	addwf	main@i^(0+256),f
  1421  04C8  3003               	movlw	3
  1422  04C9  0238               	subwf	main@i^(0+256),w
  1423  04CA  1C03               	skipc
  1424  04CB  2C69               	goto	l3521
  1425  04CC                     l483:	
  1426                           
  1427                           ;PIC16F1827-ChargeStation5-02.c: 359: }
  1428                           ;PIC16F1827-ChargeStation5-02.c: 360: }
  1429                           ;PIC16F1827-ChargeStation5-02.c: 361: if (sw_0.flag.press) {
  1430  04CC  0021               	movlb	1	; select bank1
  1431  04CD  1C69               	btfss	(_sw_0^(0+128)+2),0
  1432  04CE  2CFB               	goto	l3565
  1433                           
  1434                           ;PIC16F1827-ChargeStation5-02.c: 362: sw_0.flag.press = 0;
  1435  04CF  1069               	bcf	(_sw_0^(0+128)+2),0
  1436                           
  1437                           ;PIC16F1827-ChargeStation5-02.c: 363: for (i = 0; i < 3; i++) {
  1438  04D0  0022               	movlb	2	; select bank2
  1439  04D1  01B8               	clrf	main@i^(0+256)
  1440  04D2  3003               	movlw	3
  1441  04D3  0238               	subwf	main@i^(0+256),w
  1442  04D4  1803               	btfsc	3,0
  1443  04D5  2CEE               	goto	l3559
  1444  04D6                     l3551:	
  1445                           
  1446                           ;PIC16F1827-ChargeStation5-02.c: 364: OUT(i, 1);
  1447  04D6  0021               	movlb	1	; select bank1
  1448  04D7  01EB               	clrf	OUT@value^(0+128)
  1449  04D8  0AEB               	incf	OUT@value^(0+128),f
  1450  04D9  0022               	movlb	2	; select bank2
  1451  04DA  0838               	movf	main@i^(0+256),w
  1452  04DB  318D  251A  3183   	fcall	_OUT
  1453                           
  1454                           ;PIC16F1827-ChargeStation5-02.c: 365: cut[i] = 0;
  1455  04DE  0022               	movlb	2	; select bank2
  1456  04DF  3538               	lslf	main@i^(0+256),w
  1457  04E0  3EB4               	addlw	(low (_cut| 0))& (0+255)
  1458  04E1  0086               	movwf	6
  1459  04E2  0187               	clrf	7
  1460  04E3  3000               	movlw	0
  1461  04E4  3FC0               	movwi [0]fsr1
  1462  04E5  3FC1               	movwi [1]fsr1
  1463  04E6  3001               	movlw	1
  1464  04E7  00AC               	movwf	??_main^(0+256)
  1465  04E8  082C               	movf	??_main^(0+256),w
  1466  04E9  07B8               	addwf	main@i^(0+256),f
  1467  04EA  3003               	movlw	3
  1468  04EB  0238               	subwf	main@i^(0+256),w
  1469  04EC  1C03               	skipc
  1470  04ED  2CD6               	goto	l3551
  1471  04EE                     l3559:	
  1472                           
  1473                           ;PIC16F1827-ChargeStation5-02.c: 366: }
  1474                           ;PIC16F1827-ChargeStation5-02.c: 367: if (print_port >= 2)print_port = 0;
  1475  04EE  3002               	movlw	2
  1476  04EF  0020               	movlb	0	; select bank0
  1477  04F0  0236               	subwf	_print_port,w
  1478  04F1  1C03               	skipc
  1479  04F2  2CF5               	goto	l3563
  1480  04F3  01B6               	clrf	_print_port
  1481  04F4  2CFB               	goto	l3565
  1482  04F5                     l3563:	
  1483                           
  1484                           ;PIC16F1827-ChargeStation5-02.c: 368: else print_port++;
  1485  04F5  3001               	movlw	1
  1486  04F6  0022               	movlb	2	; select bank2
  1487  04F7  00AC               	movwf	??_main^(0+256)
  1488  04F8  082C               	movf	??_main^(0+256),w
  1489  04F9  0020               	movlb	0	; select bank0
  1490  04FA  07B6               	addwf	_print_port,f
  1491  04FB                     l3565:	
  1492                           
  1493                           ;PIC16F1827-ChargeStation5-02.c: 369: }
  1494                           ;PIC16F1827-ChargeStation5-02.c: 370: if (sw_1.flag.press) {
  1495  04FB  0020               	movlb	0	; select bank0
  1496  04FC  1C39               	btfss	_sw_1+2,0
  1497  04FD  2D29               	goto	l3589
  1498                           
  1499                           ;PIC16F1827-ChargeStation5-02.c: 371: sw_1.flag.press = 0;
  1500  04FE  1039               	bcf	_sw_1+2,0
  1501                           
  1502                           ;PIC16F1827-ChargeStation5-02.c: 372: for (i = 0; i < 3; i++) {
  1503  04FF  0022               	movlb	2	; select bank2
  1504  0500  01B8               	clrf	main@i^(0+256)
  1505  0501  3003               	movlw	3
  1506  0502  0238               	subwf	main@i^(0+256),w
  1507  0503  1803               	btfsc	3,0
  1508  0504  2D1D               	goto	l3583
  1509  0505                     l3575:	
  1510                           
  1511                           ;PIC16F1827-ChargeStation5-02.c: 373: OUT(i, 1);
  1512  0505  0021               	movlb	1	; select bank1
  1513  0506  01EB               	clrf	OUT@value^(0+128)
  1514  0507  0AEB               	incf	OUT@value^(0+128),f
  1515  0508  0022               	movlb	2	; select bank2
  1516  0509  0838               	movf	main@i^(0+256),w
  1517  050A  318D  251A  3183   	fcall	_OUT
  1518                           
  1519                           ;PIC16F1827-ChargeStation5-02.c: 374: cut[i] = 0;
  1520  050D  0022               	movlb	2	; select bank2
  1521  050E  3538               	lslf	main@i^(0+256),w
  1522  050F  3EB4               	addlw	(low (_cut| 0))& (0+255)
  1523  0510  0086               	movwf	6
  1524  0511  0187               	clrf	7
  1525  0512  3000               	movlw	0
  1526  0513  3FC0               	movwi [0]fsr1
  1527  0514  3FC1               	movwi [1]fsr1
  1528  0515  3001               	movlw	1
  1529  0516  00AC               	movwf	??_main^(0+256)
  1530  0517  082C               	movf	??_main^(0+256),w
  1531  0518  07B8               	addwf	main@i^(0+256),f
  1532  0519  3003               	movlw	3
  1533  051A  0238               	subwf	main@i^(0+256),w
  1534  051B  1C03               	skipc
  1535  051C  2D05               	goto	l3575
  1536  051D                     l3583:	
  1537                           
  1538                           ;PIC16F1827-ChargeStation5-02.c: 375: }
  1539                           ;PIC16F1827-ChargeStation5-02.c: 376: if (print_content >= 1)print_content = 0;
  1540  051D  0020               	movlb	0	; select bank0
  1541  051E  0835               	movf	_print_content,w
  1542  051F  1903               	btfsc	3,2
  1543  0520  2D23               	goto	l3587
  1544  0521  01B5               	clrf	_print_content
  1545  0522  2D29               	goto	l3589
  1546  0523                     l3587:	
  1547                           
  1548                           ;PIC16F1827-ChargeStation5-02.c: 377: else print_content++;
  1549  0523  3001               	movlw	1
  1550  0524  0022               	movlb	2	; select bank2
  1551  0525  00AC               	movwf	??_main^(0+256)
  1552  0526  082C               	movf	??_main^(0+256),w
  1553  0527  0020               	movlb	0	; select bank0
  1554  0528  07B5               	addwf	_print_content,f
  1555  0529                     l3589:	
  1556                           
  1557                           ;PIC16F1827-ChargeStation5-02.c: 378: }
  1558                           ;PIC16F1827-ChargeStation5-02.c: 379: if (sw_1.flag.long_holding_2) {
  1559  0529  1D3A               	btfss	_sw_1+3,2
  1560  052A  2D32               	goto	l3595
  1561                           
  1562                           ;PIC16F1827-ChargeStation5-02.c: 380: sw_1.flag.long_holding_2 = 0;
  1563  052B  113A               	bcf	_sw_1+3,2
  1564                           
  1565                           ;PIC16F1827-ChargeStation5-02.c: 381: print_content = 2;
  1566  052C  3002               	movlw	2
  1567  052D  0022               	movlb	2	; select bank2
  1568  052E  00AC               	movwf	??_main^(0+256)
  1569  052F  082C               	movf	??_main^(0+256),w
  1570  0530  0020               	movlb	0	; select bank0
  1571  0531  00B5               	movwf	_print_content
  1572  0532                     l3595:	
  1573                           
  1574                           ;PIC16F1827-ChargeStation5-02.c: 382: }
  1575                           ;PIC16F1827-ChargeStation5-02.c: 383: if (sw_1.flag.long_hold_2) {
  1576  0532  1D39               	btfss	_sw_1+2,2
  1577  0533  2D4D               	goto	l3603
  1578                           
  1579                           ;PIC16F1827-ChargeStation5-02.c: 384: sw_1.flag.long_hold_2 = 0;
  1580  0534  1139               	bcf	_sw_1+2,2
  1581                           
  1582                           ;PIC16F1827-ChargeStation5-02.c: 385: print_content = 3;
  1583  0535  3003               	movlw	3
  1584  0536  0022               	movlb	2	; select bank2
  1585  0537  00AC               	movwf	??_main^(0+256)
  1586  0538  082C               	movf	??_main^(0+256),w
  1587  0539  0020               	movlb	0	; select bank0
  1588  053A  00B5               	movwf	_print_content
  1589                           
  1590                           ;PIC16F1827-ChargeStation5-02.c: 386: ss[print_port] = 0;
  1591  053B  0836               	movf	_print_port,w
  1592  053C  0022               	movlb	2	; select bank2
  1593  053D  00AC               	movwf	??_main^(0+256)
  1594  053E  3001               	movlw	1
  1595  053F                     u4185:	
  1596  053F  35AC               	lslf	??_main^(0+256),f
  1597  0540  3EFF               	addlw	-1
  1598  0541  1D03               	skipz
  1599  0542  2D3F               	goto	u4185
  1600  0543  352C               	lslf	??_main^(0+256),w
  1601  0544  3EA0               	addlw	(low (_ss| 0))& (0+255)
  1602  0545  0086               	movwf	6
  1603  0546  0187               	clrf	7
  1604  0547  3000               	movlw	0
  1605  0548  3FC0               	movwi [0]fsr1
  1606  0549  3000               	movlw	0
  1607  054A  3FC1               	movwi [1]fsr1
  1608  054B  3FC2               	movwi [2]fsr1
  1609  054C  3FC3               	movwi [3]fsr1
  1610  054D                     l3603:	
  1611                           
  1612                           ;PIC16F1827-ChargeStation5-02.c: 387: }
  1613                           ;PIC16F1827-ChargeStation5-02.c: 388: if (sw_1.flag.long_holding_3) {
  1614  054D  0020               	movlb	0	; select bank0
  1615  054E  1DBA               	btfss	_sw_1+3,3
  1616  054F  2D73               	goto	l3619
  1617                           
  1618                           ;PIC16F1827-ChargeStation5-02.c: 389: sw_1.flag.long_holding_3 = 0;
  1619  0550  11BA               	bcf	_sw_1+3,3
  1620                           
  1621                           ;PIC16F1827-ChargeStation5-02.c: 390: if (auto_cut_ON[print_port]) {
  1622  0551  0836               	movf	_print_port,w
  1623  0552  3E2C               	addlw	(low (_auto_cut_ON| 0))& (0+255)
  1624  0553  0086               	movwf	6
  1625  0554  0187               	clrf	7
  1626  0555  0801               	movf	1,w
  1627  0556  1903               	btfsc	3,2
  1628  0557  2D67               	goto	l3615
  1629                           
  1630                           ;PIC16F1827-ChargeStation5-02.c: 391: auto_cut_ON[print_port] = 0;
  1631  0558  0836               	movf	_print_port,w
  1632  0559  3E2C               	addlw	(low (_auto_cut_ON| 0))& (0+255)
  1633  055A  0086               	movwf	6
  1634  055B  0187               	clrf	7
  1635  055C  0181               	clrf	1
  1636                           
  1637                           ;PIC16F1827-ChargeStation5-02.c: 392: OUT(print_port, 1);
  1638  055D  0021               	movlb	1	; select bank1
  1639  055E  01EB               	clrf	OUT@value^(0+128)
  1640  055F  0AEB               	incf	OUT@value^(0+128),f
  1641  0560  0020               	movlb	0	; select bank0
  1642  0561  0836               	movf	_print_port,w
  1643  0562  318D  251A  3183   	fcall	_OUT
  1644                           
  1645                           ;PIC16F1827-ChargeStation5-02.c: 393: print_content = 4;
  1646  0565  3004               	movlw	4
  1647  0566  2D6E               	goto	L1
  1648  0567                     l3615:	
  1649                           ;PIC16F1827-ChargeStation5-02.c: 394: } else {
  1650                           
  1651                           
  1652                           ;PIC16F1827-ChargeStation5-02.c: 395: auto_cut_ON[print_port] = 1;
  1653  0567  0836               	movf	_print_port,w
  1654  0568  3E2C               	addlw	(low (_auto_cut_ON| 0))& (0+255)
  1655  0569  0086               	movwf	6
  1656  056A  0187               	clrf	7
  1657  056B  0181               	clrf	1
  1658  056C  0A81               	incf	1,f
  1659                           
  1660                           ;PIC16F1827-ChargeStation5-02.c: 396: print_content = 5;
  1661  056D  3005               	movlw	5
  1662  056E                     L1:	
  1663  056E  0022               	movlb	2	; select bank2
  1664  056F  00AC               	movwf	??_main^(0+256)
  1665  0570  082C               	movf	??_main^(0+256),w
  1666  0571  0020               	movlb	0	; select bank0
  1667  0572  00B5               	movwf	_print_content
  1668  0573                     l3619:	
  1669                           
  1670                           ;PIC16F1827-ChargeStation5-02.c: 397: }
  1671                           ;PIC16F1827-ChargeStation5-02.c: 398: }
  1672                           ;PIC16F1827-ChargeStation5-02.c: 399: if (sw_1.flag.long_hold_3) {
  1673  0573  1DB9               	btfss	_sw_1+2,3
  1674  0574  2C63               	goto	l3515
  1675                           
  1676                           ;PIC16F1827-ChargeStation5-02.c: 400: sw_1.flag.long_hold_3 = 0;
  1677  0575  11B9               	bcf	_sw_1+2,3
  1678                           
  1679                           ;PIC16F1827-ChargeStation5-02.c: 401: print_content = 0;
  1680  0576  01B5               	clrf	_print_content
  1681  0577  2C63               	goto	l3515
  1682  0578                     __end_of_main:	
  1683                           ;PIC16F1827-ChargeStation5-02.c: 402: }
  1684                           ;PIC16F1827-ChargeStation5-02.c: 403: }
  1685                           ;PIC16F1827-ChargeStation5-02.c: 404: return 0;
  1686                           ;	Return value of _main is never used
  1687                           
  1688                           
  1689                           	psect	text1
  1690  0B74                     __ptext1:	
  1691 ;; *************** function _sh_flag_read *****************
  1692 ;; Defined at:
  1693 ;;		line 275 in file "PIC16F1827-ChargeStation5-02.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  port            1    wreg     unsigned char 
  1696 ;;  bit_and         1    0[BANK1 ] unsigned char 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  port            1    1[BANK1 ] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      unsigned char 
  1701 ;; Registers used:
  1702 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1708 ;;      Params:         0       0       1       0       0       0
  1709 ;;      Locals:         0       0       1       0       0       0
  1710 ;;      Temps:          0       0       0       0       0       0
  1711 ;;      Totals:         0       0       2       0       0       0
  1712 ;;Total ram usage:        2 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    6
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _sh_flag_read
  1724  0B74                     _sh_flag_read:	
  1725                           
  1726                           ;incstack = 0
  1727                           ; Regs used in _sh_flag_read: [wreg-fsr0h+status,2+status,0]
  1728                           ;sh_flag_read@port stored from wreg
  1729  0B74  0021               	movlb	1	; select bank1
  1730  0B75  00EC               	movwf	sh_flag_read@port^(0+128)
  1731                           
  1732                           ;PIC16F1827-ChargeStation5-02.c: 276: switch (port) {
  1733  0B76  2B82               	goto	l3361
  1734  0B77                     l3343:	
  1735                           ;PIC16F1827-ChargeStation5-02.c: 277: case 0:
  1736                           
  1737                           
  1738                           ;PIC16F1827-ChargeStation5-02.c: 278: return (sh_0.flags) & bit_and;
  1739  0B77  085D               	movf	(_sh_0^(0+128)+2),w
  1740  0B78  056B               	andwf	sh_flag_read@bit_and^(0+128),w
  1741  0B79  0008               	return
  1742  0B7A                     l3347:	
  1743                           ;PIC16F1827-ChargeStation5-02.c: 279: case 1:
  1744                           
  1745                           
  1746                           ;PIC16F1827-ChargeStation5-02.c: 280: return (sh_1.flags) & bit_and;
  1747  0B7A  0861               	movf	(_sh_1^(0+128)+2),w
  1748  0B7B  056B               	andwf	sh_flag_read@bit_and^(0+128),w
  1749  0B7C  0008               	return
  1750  0B7D                     l3351:	
  1751                           ;PIC16F1827-ChargeStation5-02.c: 281: case 2:
  1752                           
  1753                           
  1754                           ;PIC16F1827-ChargeStation5-02.c: 282: return (sh_2.flags) & bit_and;
  1755  0B7D  0865               	movf	(_sh_2^(0+128)+2),w
  1756  0B7E  056B               	andwf	sh_flag_read@bit_and^(0+128),w
  1757  0B7F  0008               	return
  1758  0B80                     l3355:	
  1759                           ;PIC16F1827-ChargeStation5-02.c: 283: default:
  1760                           
  1761                           
  1762                           ;PIC16F1827-ChargeStation5-02.c: 284: return 0;
  1763  0B80  3000               	movlw	0
  1764                           
  1765                           ;PIC16F1827-ChargeStation5-02.c: 285: }
  1766  0B81  0008               	return
  1767  0B82                     l3361:	
  1768  0B82  086C               	movf	sh_flag_read@port^(0+128),w
  1769                           
  1770                           ; Switch size 1, requested type "space"
  1771                           ; Number of cases is 3, Range of values is 0 to 2
  1772                           ; switch strategies available:
  1773                           ; Name         Instructions Cycles
  1774                           ; simple_byte           10     6 (average)
  1775                           ; direct_byte           12     6 (fixed)
  1776                           ; jumptable            260     6 (fixed)
  1777                           ;	Chosen strategy is simple_byte
  1778  0B83  3A00               	xorlw	0	; case 0
  1779  0B84  1903               	skipnz
  1780  0B85  2B77               	goto	l3343
  1781  0B86  3A01               	xorlw	1	; case 1
  1782  0B87  1903               	skipnz
  1783  0B88  2B7A               	goto	l3347
  1784  0B89  3A03               	xorlw	3	; case 2
  1785  0B8A  1903               	skipnz
  1786  0B8B  2B7D               	goto	l3351
  1787  0B8C  2B80               	goto	l3355
  1788  0B8D  0008               	return
  1789  0B8E                     __end_of_sh_flag_read:	
  1790                           
  1791                           	psect	text2
  1792  0CC3                     __ptext2:	
  1793 ;; *************** function _sh_flag_clear *****************
  1794 ;; Defined at:
  1795 ;;		line 288 in file "PIC16F1827-ChargeStation5-02.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  port            1    wreg     unsigned char 
  1798 ;;  bit_and         1    0[BANK1 ] unsigned char 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  port            1    0[BANK2 ] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;		None               void
  1803 ;; Registers used:
  1804 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1810 ;;      Params:         0       0       1       0       0       0
  1811 ;;      Locals:         0       0       0       1       0       0
  1812 ;;      Temps:          0       0       2       0       0       0
  1813 ;;      Totals:         0       0       3       1       0       0
  1814 ;;Total ram usage:        4 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    6
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _sh_flag_clear
  1826  0CC3                     _sh_flag_clear:	
  1827                           
  1828                           ;incstack = 0
  1829                           ; Regs used in _sh_flag_clear: [wreg-fsr0h+status,2+status,0]
  1830                           ;sh_flag_clear@port stored from wreg
  1831  0CC3  0022               	movlb	2	; select bank2
  1832  0CC4  00A0               	movwf	sh_flag_clear@port^(0+256)
  1833                           
  1834                           ;PIC16F1827-ChargeStation5-02.c: 289: switch (port) {
  1835  0CC5  2CE1               	goto	l3373
  1836  0CC6                     l3365:	
  1837                           ;PIC16F1827-ChargeStation5-02.c: 290: case 0:
  1838                           
  1839                           
  1840                           ;PIC16F1827-ChargeStation5-02.c: 291: sh_0.flags &= bit_and;
  1841  0CC6  0021               	movlb	1	; select bank1
  1842  0CC7  086B               	movf	sh_flag_clear@bit_and^(0+128),w
  1843  0CC8  00EC               	movwf	??_sh_flag_clear^(0+128)
  1844  0CC9  01ED               	clrf	(??_sh_flag_clear^(0+128)+1)
  1845  0CCA  086C               	movf	??_sh_flag_clear^(0+128),w
  1846  0CCB  05DD               	andwf	(_sh_0^(0+128)+2),f
  1847  0CCC  086D               	movf	(??_sh_flag_clear+1)^(0+128),w
  1848  0CCD  05DE               	andwf	((_sh_0+1)^(0+128)+2),f
  1849                           
  1850                           ;PIC16F1827-ChargeStation5-02.c: 292: break;
  1851  0CCE  0008               	return
  1852  0CCF                     l3367:	
  1853                           ;PIC16F1827-ChargeStation5-02.c: 293: case 1:
  1854                           
  1855                           
  1856                           ;PIC16F1827-ChargeStation5-02.c: 294: sh_1.flags &= bit_and;
  1857  0CCF  0021               	movlb	1	; select bank1
  1858  0CD0  086B               	movf	sh_flag_clear@bit_and^(0+128),w
  1859  0CD1  00EC               	movwf	??_sh_flag_clear^(0+128)
  1860  0CD2  01ED               	clrf	(??_sh_flag_clear^(0+128)+1)
  1861  0CD3  086C               	movf	??_sh_flag_clear^(0+128),w
  1862  0CD4  05E1               	andwf	(_sh_1^(0+128)+2),f
  1863  0CD5  086D               	movf	(??_sh_flag_clear+1)^(0+128),w
  1864  0CD6  05E2               	andwf	((_sh_1+1)^(0+128)+2),f
  1865                           
  1866                           ;PIC16F1827-ChargeStation5-02.c: 295: break;
  1867  0CD7  0008               	return
  1868  0CD8                     l3369:	
  1869                           ;PIC16F1827-ChargeStation5-02.c: 296: case 2:
  1870                           
  1871                           
  1872                           ;PIC16F1827-ChargeStation5-02.c: 297: sh_2.flags &= bit_and;
  1873  0CD8  0021               	movlb	1	; select bank1
  1874  0CD9  086B               	movf	sh_flag_clear@bit_and^(0+128),w
  1875  0CDA  00EC               	movwf	??_sh_flag_clear^(0+128)
  1876  0CDB  01ED               	clrf	(??_sh_flag_clear^(0+128)+1)
  1877  0CDC  086C               	movf	??_sh_flag_clear^(0+128),w
  1878  0CDD  05E5               	andwf	(_sh_2^(0+128)+2),f
  1879  0CDE  086D               	movf	(??_sh_flag_clear+1)^(0+128),w
  1880  0CDF  05E6               	andwf	((_sh_2+1)^(0+128)+2),f
  1881                           
  1882                           ;PIC16F1827-ChargeStation5-02.c: 301: }
  1883                           
  1884                           ;PIC16F1827-ChargeStation5-02.c: 300: break;
  1885                           
  1886                           ;PIC16F1827-ChargeStation5-02.c: 299: default:
  1887                           
  1888                           ;PIC16F1827-ChargeStation5-02.c: 298: break;
  1889  0CE0  0008               	return
  1890  0CE1                     l3373:	
  1891  0CE1  0022               	movlb	2	; select bank2
  1892  0CE2  0820               	movf	sh_flag_clear@port^(0+256),w
  1893                           
  1894                           ; Switch size 1, requested type "space"
  1895                           ; Number of cases is 3, Range of values is 0 to 2
  1896                           ; switch strategies available:
  1897                           ; Name         Instructions Cycles
  1898                           ; simple_byte           10     6 (average)
  1899                           ; direct_byte           12     6 (fixed)
  1900                           ; jumptable            260     6 (fixed)
  1901                           ;	Chosen strategy is simple_byte
  1902  0CE3  3A00               	xorlw	0	; case 0
  1903  0CE4  1903               	skipnz
  1904  0CE5  2CC6               	goto	l3365
  1905  0CE6  3A01               	xorlw	1	; case 1
  1906  0CE7  1903               	skipnz
  1907  0CE8  2CCF               	goto	l3367
  1908  0CE9  3A03               	xorlw	3	; case 2
  1909  0CEA  1903               	skipnz
  1910  0CEB  2CD8               	goto	l3369
  1911  0CEC  2CED               	goto	l473
  1912  0CED                     l473:	
  1913  0CED  0008               	return
  1914  0CEE                     __end_of_sh_flag_clear:	
  1915                           
  1916                           	psect	text3
  1917  0C25                     __ptext3:	
  1918 ;; *************** function _main_init *****************
  1919 ;; Defined at:
  1920 ;;		line 304 in file "PIC16F1827-ChargeStation5-02.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;		None               void
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1934 ;;      Params:         0       0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0
  1937 ;;      Totals:         0       0       0       0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:   11
  1941 ;; This function calls:
  1942 ;;		_ADC_init
  1943 ;;		_I2C_LCD_init
  1944 ;;		_I2C_init
  1945 ;;		_timer0_init
  1946 ;;		_timer1_init
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           
  1953                           ;psect for function _main_init
  1954  0C25                     _main_init:	
  1955                           
  1956                           ;PIC16F1827-ChargeStation5-02.c: 305: OSCCON = 0x70;
  1957                           
  1958                           ;incstack = 0
  1959                           ; Regs used in _main_init: [wreg+status,2+status,0+pclath+cstack]
  1960  0C25  3070               	movlw	112
  1961  0C26  0021               	movlb	1	; select bank1
  1962  0C27  0099               	movwf	25	;volatile
  1963                           
  1964                           ;PIC16F1827-ChargeStation5-02.c: 307: TRISA = 0x37;
  1965  0C28  3037               	movlw	55
  1966  0C29  008C               	movwf	12	;volatile
  1967                           
  1968                           ;PIC16F1827-ChargeStation5-02.c: 308: TRISB = 0x5B;
  1969  0C2A  305B               	movlw	91
  1970  0C2B  008D               	movwf	13	;volatile
  1971                           
  1972                           ;PIC16F1827-ChargeStation5-02.c: 309: ANSELA = 0x07;
  1973  0C2C  3007               	movlw	7
  1974  0C2D  0023               	movlb	3	; select bank3
  1975  0C2E  008C               	movwf	12	;volatile
  1976                           
  1977                           ;PIC16F1827-ChargeStation5-02.c: 310: ANSELB = 0x00;
  1978  0C2F  018D               	clrf	13	;volatile
  1979                           
  1980                           ;PIC16F1827-ChargeStation5-02.c: 311: WPUA = 0x30;
  1981  0C30  3030               	movlw	48
  1982  0C31  0024               	movlb	4	; select bank4
  1983  0C32  008C               	movwf	12	;volatile
  1984                           
  1985                           ;PIC16F1827-ChargeStation5-02.c: 312: WPUB = 0x5B;
  1986  0C33  305B               	movlw	91
  1987  0C34  008D               	movwf	13	;volatile
  1988                           
  1989                           ;PIC16F1827-ChargeStation5-02.c: 313: OPTION_REGbits.nWPUEN = 0;
  1990  0C35  0021               	movlb	1	; select bank1
  1991  0C36  1395               	bcf	21,7	;volatile
  1992                           
  1993                           ;PIC16F1827-ChargeStation5-02.c: 315: ADC_init(3);
  1994  0C37  3003               	movlw	3
  1995  0C38  318A  22D0  318C   	fcall	_ADC_init
  1996                           
  1997                           ;PIC16F1827-ChargeStation5-02.c: 316: timer0_init(4);
  1998  0C3B  3004               	movlw	4
  1999  0C3C  318A  22FA  318C   	fcall	_timer0_init
  2000                           
  2001                           ;PIC16F1827-ChargeStation5-02.c: 317: timer1_init(2);
  2002  0C3F  3002               	movlw	2
  2003  0C40  318B  230F  318C   	fcall	_timer1_init
  2004                           
  2005                           ;PIC16F1827-ChargeStation5-02.c: 319: I2C_init();
  2006  0C43  318A  2267  318C   	fcall	_I2C_init
  2007                           
  2008                           ;PIC16F1827-ChargeStation5-02.c: 320: I2C_LCD_init();
  2009  0C46  318D  25D9         	fcall	_I2C_LCD_init
  2010                           
  2011                           ;PIC16F1827-ChargeStation5-02.c: 322: INTCONbits.PEIE = 1;
  2012  0C48  170B               	bsf	11,6	;volatile
  2013  0C49  0008               	return
  2014  0C4A                     __end_of_main_init:	
  2015                           
  2016                           	psect	text4
  2017  0B0F                     __ptext4:	
  2018 ;; *************** function _timer1_init *****************
  2019 ;; Defined at:
  2020 ;;		line 71 in file "../My_header\My_header.h"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  prescaler       1    wreg     unsigned char 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  prescaler       1    1[BANK1 ] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;		None               void
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2034 ;;      Params:         0       0       0       0       0       0
  2035 ;;      Locals:         0       0       1       0       0       0
  2036 ;;      Temps:          0       0       1       0       0       0
  2037 ;;      Totals:         0       0       2       0       0       0
  2038 ;;Total ram usage:        2 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    6
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_main_init
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function _timer1_init
  2050  0B0F                     _timer1_init:	
  2051                           
  2052                           ;incstack = 0
  2053                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  2054                           ;timer1_init@prescaler stored from wreg
  2055  0B0F  0021               	movlb	1	; select bank1
  2056  0B10  00EC               	movwf	timer1_init@prescaler^(0+128)
  2057                           
  2058                           ;My_header\My_header.h: 72: T1CONbits.TMR1ON = 1;
  2059  0B11  0020               	movlb	0	; select bank0
  2060  0B12  1418               	bsf	24,0	;volatile
  2061                           
  2062                           ;My_header\My_header.h: 73: T1CONbits.TMR1CS = 0;
  2063  0B13  303F               	movlw	-193
  2064  0B14  0598               	andwf	24,f	;volatile
  2065                           
  2066                           ;My_header\My_header.h: 74: T1CONbits.T1CKPS = prescaler;
  2067  0B15  0021               	movlb	1	; select bank1
  2068  0B16  086C               	movf	timer1_init@prescaler^(0+128),w
  2069  0B17  00EB               	movwf	??_timer1_init^(0+128)
  2070  0B18  0EEB               	swapf	??_timer1_init^(0+128),f
  2071  0B19  0020               	movlb	0	; select bank0
  2072  0B1A  0818               	movf	24,w	;volatile
  2073  0B1B  0021               	movlb	1	; select bank1
  2074  0B1C  066B               	xorwf	??_timer1_init^(0+128),w
  2075  0B1D  39CF               	andlw	-49
  2076  0B1E  066B               	xorwf	??_timer1_init^(0+128),w
  2077  0B1F  0020               	movlb	0	; select bank0
  2078  0B20  0098               	movwf	24	;volatile
  2079                           
  2080                           ;My_header\My_header.h: 75: TMR1H = 0x00;
  2081  0B21  0197               	clrf	23	;volatile
  2082                           
  2083                           ;My_header\My_header.h: 76: TMR1L = 0x00;
  2084  0B22  0196               	clrf	22	;volatile
  2085                           
  2086                           ;My_header\My_header.h: 77: PIE1bits.TMR1IE = 1;
  2087  0B23  0021               	movlb	1	; select bank1
  2088  0B24  1411               	bsf	17,0	;volatile
  2089                           
  2090                           ;My_header\My_header.h: 78: INTCONbits.PEIE = 1;
  2091  0B25  170B               	bsf	11,6	;volatile
  2092  0B26  0008               	return
  2093  0B27                     __end_of_timer1_init:	
  2094                           
  2095                           	psect	text5
  2096  0AFA                     __ptext5:	
  2097 ;; *************** function _timer0_init *****************
  2098 ;; Defined at:
  2099 ;;		line 33 in file "../My_header\My_header.h"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  prescaler       1    wreg     unsigned char 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  prescaler       1    1[BANK1 ] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;		None               void
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2113 ;;      Params:         0       0       0       0       0       0
  2114 ;;      Locals:         0       0       1       0       0       0
  2115 ;;      Temps:          0       0       1       0       0       0
  2116 ;;      Totals:         0       0       2       0       0       0
  2117 ;;Total ram usage:        2 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    6
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_main_init
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function _timer0_init
  2129  0AFA                     _timer0_init:	
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  2133                           ;timer0_init@prescaler stored from wreg
  2134  0AFA  0021               	movlb	1	; select bank1
  2135  0AFB  00EC               	movwf	timer0_init@prescaler^(0+128)
  2136                           
  2137                           ;My_header\My_header.h: 34: if (prescaler == 0) {
  2138  0AFC  086C               	movf	timer0_init@prescaler^(0+128),w
  2139  0AFD  1D03               	btfss	3,2
  2140  0AFE  2B01               	goto	l101
  2141                           
  2142                           ;My_header\My_header.h: 35: OPTION_REGbits.PSA = 1;
  2143  0AFF  1595               	bsf	21,3	;volatile
  2144                           
  2145                           ;My_header\My_header.h: 36: } else {
  2146  0B00  2B0A               	goto	l3233
  2147  0B01                     l101:	
  2148                           
  2149                           ;My_header\My_header.h: 37: OPTION_REGbits.PSA = 0;
  2150  0B01  1195               	bcf	21,3	;volatile
  2151                           
  2152                           ;My_header\My_header.h: 38: OPTION_REGbits.PS = prescaler - 1;
  2153  0B02  30FF               	movlw	255
  2154  0B03  076C               	addwf	timer0_init@prescaler^(0+128),w
  2155  0B04  00EB               	movwf	??_timer0_init^(0+128)
  2156  0B05  0815               	movf	21,w	;volatile
  2157  0B06  066B               	xorwf	??_timer0_init^(0+128),w
  2158  0B07  39F8               	andlw	-8
  2159  0B08  066B               	xorwf	??_timer0_init^(0+128),w
  2160  0B09  0095               	movwf	21	;volatile
  2161  0B0A                     l3233:	
  2162                           
  2163                           ;My_header\My_header.h: 39: }
  2164                           ;My_header\My_header.h: 40: OPTION_REGbits.TMR0CS = 0;
  2165  0B0A  1295               	bcf	21,5	;volatile
  2166                           
  2167                           ;My_header\My_header.h: 41: OPTION_REGbits.TMR0SE = 0;
  2168  0B0B  1215               	bcf	21,4	;volatile
  2169                           
  2170                           ;My_header\My_header.h: 42: INTCONbits.TMR0IE = 1;
  2171  0B0C  168B               	bsf	11,5	;volatile
  2172                           
  2173                           ;My_header\My_header.h: 43: INTCONbits.PEIE = 1;
  2174  0B0D  170B               	bsf	11,6	;volatile
  2175  0B0E  0008               	return
  2176  0B0F                     __end_of_timer0_init:	
  2177                           
  2178                           	psect	text6
  2179  0A67                     __ptext6:	
  2180 ;; *************** function _I2C_init *****************
  2181 ;; Defined at:
  2182 ;;		line 25 in file "../My_header\My_I2C.h"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;		None               void
  2189 ;; Registers used:
  2190 ;;		wreg
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2196 ;;      Params:         0       0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0
  2199 ;;      Totals:         0       0       0       0       0       0
  2200 ;;Total ram usage:        0 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    6
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_main_init
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           
  2211                           ;psect for function _I2C_init
  2212  0A67                     _I2C_init:	
  2213                           
  2214                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in _I2C_init: [wreg]
  2218  0A67  3080               	movlw	128
  2219  0A68  0024               	movlb	4	; select bank4
  2220  0A69  0094               	movwf	20	;volatile
  2221                           
  2222                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
  2223  0A6A  3028               	movlw	40
  2224  0A6B  0095               	movwf	21	;volatile
  2225                           
  2226                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
  2227  0A6C  3013               	movlw	19
  2228  0A6D  0092               	movwf	18	;volatile
  2229                           
  2230                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
  2231  0A6E  0020               	movlb	0	; select bank0
  2232  0A6F  1191               	bcf	17,3	;volatile
  2233                           
  2234                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
  2235  0A70  1192               	bcf	18,3	;volatile
  2236  0A71  0008               	return
  2237  0A72                     __end_of_I2C_init:	
  2238                           
  2239                           	psect	text7
  2240  0DD9                     __ptext7:	
  2241 ;; *************** function _I2C_LCD_init *****************
  2242 ;; Defined at:
  2243 ;;		line 164 in file "../My_header\My_I2C.h"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;		None               void
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, pclath, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2257 ;;      Params:         0       0       0       0       0       0
  2258 ;;      Locals:         0       0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0
  2260 ;;      Totals:         0       0       0       0       0       0
  2261 ;;Total ram usage:        0 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:   10
  2264 ;; This function calls:
  2265 ;;		_Delay_ms
  2266 ;;		_I2C_LCD_Clear
  2267 ;;		_I2C_LCD_Command
  2268 ;; This function is called by:
  2269 ;;		_main_init
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _I2C_LCD_init
  2275  0DD9                     _I2C_LCD_init:	
  2276                           
  2277                           ;My_header\My_I2C.h: 165: Delay_ms(40);
  2278                           
  2279                           ;incstack = 0
  2280                           ; Regs used in _I2C_LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2281  0DD9  3028               	movlw	40
  2282  0DDA  0021               	movlb	1	; select bank1
  2283  0DDB  00EB               	movwf	Delay_ms@ms^(0+128)
  2284  0DDC  3000               	movlw	0
  2285  0DDD  00EC               	movwf	(Delay_ms@ms^(0+128)+1)
  2286  0DDE  318A  22E5  318D   	fcall	_Delay_ms
  2287                           
  2288                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
  2289  0DE1  3038               	movlw	56
  2290  0DE2  318C  2404  318D   	fcall	_I2C_LCD_Command
  2291                           
  2292                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
  2293  0DE5  3039               	movlw	57
  2294  0DE6  318C  2404  318D   	fcall	_I2C_LCD_Command
  2295                           
  2296                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
  2297  0DE9  3014               	movlw	20
  2298  0DEA  318C  2404  318D   	fcall	_I2C_LCD_Command
  2299                           
  2300                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
  2301  0DED  3070               	movlw	112
  2302  0DEE  318C  2404  318D   	fcall	_I2C_LCD_Command
  2303                           
  2304                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
  2305  0DF1  3056               	movlw	86
  2306  0DF2  318C  2404  318D   	fcall	_I2C_LCD_Command
  2307                           
  2308                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
  2309  0DF5  306C               	movlw	108
  2310  0DF6  318C  2404  318D   	fcall	_I2C_LCD_Command
  2311                           
  2312                           ;My_header\My_I2C.h: 172: Delay_ms(200);
  2313  0DF9  30C8               	movlw	200
  2314  0DFA  0021               	movlb	1	; select bank1
  2315  0DFB  00EB               	movwf	Delay_ms@ms^(0+128)
  2316  0DFC  3000               	movlw	0
  2317  0DFD  00EC               	movwf	(Delay_ms@ms^(0+128)+1)
  2318  0DFE  318A  22E5  318D   	fcall	_Delay_ms
  2319                           
  2320                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
  2321  0E01  3038               	movlw	56
  2322  0E02  318C  2404  318D   	fcall	_I2C_LCD_Command
  2323                           
  2324                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
  2325  0E05  300C               	movlw	12
  2326  0E06  318C  2404  318D   	fcall	_I2C_LCD_Command
  2327                           
  2328                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
  2329  0E09  3006               	movlw	6
  2330  0E0A  318C  2404  318D   	fcall	_I2C_LCD_Command
  2331                           
  2332                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
  2333  0E0D  318A  228F         	fcall	_I2C_LCD_Clear
  2334  0E0F  0008               	return
  2335  0E10                     __end_of_I2C_LCD_init:	
  2336                           
  2337                           	psect	text8
  2338  0A8F                     __ptext8:	
  2339 ;; *************** function _I2C_LCD_Clear *****************
  2340 ;; Defined at:
  2341 ;;		line 107 in file "../My_header\My_I2C.h"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, pclath, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2355 ;;      Params:         0       0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       2       0       0
  2358 ;;      Totals:         0       0       0       2       0       0
  2359 ;;Total ram usage:        2 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    9
  2362 ;; This function calls:
  2363 ;;		_I2C_LCD_Command
  2364 ;; This function is called by:
  2365 ;;		_I2C_LCD_init
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           
  2370                           ;psect for function _I2C_LCD_Clear
  2371  0A8F                     _I2C_LCD_Clear:	
  2372                           
  2373                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _I2C_LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2377  0A8F  3001               	movlw	1
  2378  0A90  318C  2404  318A   	fcall	_I2C_LCD_Command
  2379                           
  2380                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  2381  0A93  300C               	movlw	12
  2382  0A94  0022               	movlb	2	; select bank2
  2383  0A95  00A5               	movwf	(??_I2C_LCD_Clear^(0+256)+1)
  2384  0A96  306C               	movlw	108
  2385  0A97  00A4               	movwf	??_I2C_LCD_Clear^(0+256)
  2386  0A98                     u4227:	
  2387  0A98  0BA4               	decfsz	??_I2C_LCD_Clear^(0+256),f
  2388  0A99  2A98               	goto	u4227
  2389  0A9A  0BA5               	decfsz	(??_I2C_LCD_Clear^(0+256)+1),f
  2390  0A9B  2A98               	goto	u4227
  2391  0A9C  0000               	nop
  2392  0A9D  0008               	return
  2393  0A9E                     __end_of_I2C_LCD_Clear:	
  2394                           
  2395                           	psect	text9
  2396  0C04                     __ptext9:	
  2397 ;; *************** function _I2C_LCD_Command *****************
  2398 ;; Defined at:
  2399 ;;		line 94 in file "../My_header\My_I2C.h"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  c               1    wreg     unsigned char 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  c               1    2[BANK2 ] unsigned char 
  2404 ;;  ans             1    3[BANK2 ] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;		None               void
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0, pclath, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2414 ;;      Params:         0       0       0       0       0       0
  2415 ;;      Locals:         0       0       0       2       0       0
  2416 ;;      Temps:          0       0       0       1       0       0
  2417 ;;      Totals:         0       0       0       3       0       0
  2418 ;;Total ram usage:        3 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    8
  2421 ;; This function calls:
  2422 ;;		_I2C_Send
  2423 ;;		_I2C_Start
  2424 ;;		_I2C_Stop
  2425 ;; This function is called by:
  2426 ;;		_I2C_LCD_Clear
  2427 ;;		_I2C_LCD_init
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           
  2432                           ;psect for function _I2C_LCD_Command
  2433  0C04                     _I2C_LCD_Command:	
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _I2C_LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2437                           ;I2C_LCD_Command@c stored from wreg
  2438  0C04  0022               	movlb	2	; select bank2
  2439  0C05  00A2               	movwf	I2C_LCD_Command@c^(0+256)
  2440                           
  2441                           ;My_header\My_I2C.h: 95: uint8_t ans;
  2442                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
  2443  0C06  0021               	movlb	1	; select bank1
  2444  0C07  01ED               	clrf	I2C_Start@rw^(0+128)
  2445  0C08  303E               	movlw	62
  2446  0C09  318B  23C6  318C   	fcall	_I2C_Start
  2447  0C0C  0022               	movlb	2	; select bank2
  2448  0C0D  00A1               	movwf	??_I2C_LCD_Command^(0+256)
  2449  0C0E  0821               	movf	??_I2C_LCD_Command^(0+256),w
  2450  0C0F  00A3               	movwf	I2C_LCD_Command@ans^(0+256)
  2451                           
  2452                           ;My_header\My_I2C.h: 98: if (ans == 0) {
  2453  0C10  0823               	movf	I2C_LCD_Command@ans^(0+256),w
  2454  0C11  1D03               	btfss	3,2
  2455  0C12  2C1C               	goto	l256
  2456                           
  2457                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
  2458  0C13  3080               	movlw	128
  2459  0C14  318A  22BE  318C   	fcall	_I2C_Send
  2460                           
  2461                           ;My_header\My_I2C.h: 101: I2C_Send(c);
  2462  0C17  0022               	movlb	2	; select bank2
  2463  0C18  0822               	movf	I2C_LCD_Command@c^(0+256),w
  2464  0C19  318A  22BE  318C   	fcall	_I2C_Send
  2465  0C1C                     l256:	
  2466                           
  2467                           ;My_header\My_I2C.h: 102: }
  2468                           ;My_header\My_I2C.h: 103: I2C_Stop();
  2469  0C1C  318A  2250  318C   	fcall	_I2C_Stop
  2470                           
  2471                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(32000000/4000000.0)));
  2472  0C1F  3045               	movlw	69
  2473  0C20  0022               	movlb	2	; select bank2
  2474  0C21  00A1               	movwf	??_I2C_LCD_Command^(0+256)
  2475  0C22                     u4237:	
  2476  0C22  0BA1               	decfsz	??_I2C_LCD_Command^(0+256),f
  2477  0C23  2C22               	goto	u4237
  2478  0C24  0008               	return
  2479  0C25                     __end_of_I2C_LCD_Command:	
  2480                           
  2481                           	psect	text10
  2482  0AE5                     __ptext10:	
  2483 ;; *************** function _Delay_ms *****************
  2484 ;; Defined at:
  2485 ;;		line 333 in file "../My_header\My_header.h"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  ms              2    0[BANK1 ] unsigned int 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;		None               void
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2499 ;;      Params:         0       0       2       0       0       0
  2500 ;;      Locals:         0       0       0       0       0       0
  2501 ;;      Temps:          0       0       0       2       0       0
  2502 ;;      Totals:         0       0       2       2       0       0
  2503 ;;Total ram usage:        4 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    6
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_I2C_LCD_init
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           
  2514                           ;psect for function _Delay_ms
  2515  0AE5                     _Delay_ms:	
  2516  0AE5                     l3221:	
  2517                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(32000000/4000.0)));
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in _Delay_ms: [wreg+status,2+status,0]
  2521                           
  2522  0AE5  3001               	movlw	1
  2523  0AE6  0021               	movlb	1	; select bank1
  2524  0AE7  02EB               	subwf	Delay_ms@ms^(0+128),f
  2525  0AE8  3000               	movlw	0
  2526  0AE9  3BEC               	subwfb	(Delay_ms@ms+1)^(0+128),f
  2527  0AEA  0A6B               	incf	Delay_ms@ms^(0+128),w
  2528  0AEB  1903               	btfsc	3,2
  2529  0AEC  0A6C               	incf	(Delay_ms@ms+1)^(0+128),w
  2530  0AED  1903               	btfsc	3,2
  2531  0AEE  0008               	return
  2532  0AEF  300B               	movlw	11
  2533  0AF0  0022               	movlb	2	; select bank2
  2534  0AF1  00A1               	movwf	(??_Delay_ms^(0+256)+1)
  2535  0AF2  3062               	movlw	98
  2536  0AF3  00A0               	movwf	??_Delay_ms^(0+256)
  2537  0AF4                     u4247:	
  2538  0AF4  0BA0               	decfsz	??_Delay_ms^(0+256),f
  2539  0AF5  2AF4               	goto	u4247
  2540  0AF6  0BA1               	decfsz	(??_Delay_ms^(0+256)+1),f
  2541  0AF7  2AF4               	goto	u4247
  2542  0AF8  0000               	nop
  2543  0AF9  2AE5               	goto	l3221
  2544  0AFA                     __end_of_Delay_ms:	
  2545                           
  2546                           	psect	text11
  2547  0AD0                     __ptext11:	
  2548 ;; *************** function _ADC_init *****************
  2549 ;; Defined at:
  2550 ;;		line 161 in file "../My_header\My_header.h"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  p_ref           1    wreg     unsigned char 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  p_ref           1    0[BANK1 ] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;		None               void
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2564 ;;      Params:         0       0       0       0       0       0
  2565 ;;      Locals:         0       0       1       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0
  2567 ;;      Totals:         0       0       1       0       0       0
  2568 ;;Total ram usage:        1 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    6
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_main_init
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function _ADC_init
  2580  0AD0                     _ADC_init:	
  2581                           
  2582                           ;incstack = 0
  2583                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
  2584                           ;ADC_init@p_ref stored from wreg
  2585  0AD0  0021               	movlb	1	; select bank1
  2586  0AD1  00EB               	movwf	ADC_init@p_ref^(0+128)
  2587                           
  2588                           ;My_header\My_header.h: 162: ADCON1bits.ADFM = 0;
  2589  0AD2  139E               	bcf	30,7	;volatile
  2590                           
  2591                           ;My_header\My_header.h: 163: ADCON1bits.ADCS = 6;
  2592  0AD3  081E               	movf	30,w	;volatile
  2593  0AD4  398F               	andlw	-113
  2594  0AD5  3860               	iorlw	96
  2595  0AD6  009E               	movwf	30	;volatile
  2596                           
  2597                           ;My_header\My_header.h: 164: ADCON1bits.ADNREF = 0;
  2598  0AD7  111E               	bcf	30,2	;volatile
  2599                           
  2600                           ;My_header\My_header.h: 165: ADCON1bits.ADPREF = p_ref;
  2601  0AD8  081E               	movf	30,w	;volatile
  2602  0AD9  066B               	xorwf	ADC_init@p_ref^(0+128),w
  2603  0ADA  39FC               	andlw	-4
  2604  0ADB  066B               	xorwf	ADC_init@p_ref^(0+128),w
  2605  0ADC  009E               	movwf	30	;volatile
  2606                           
  2607                           ;My_header\My_header.h: 166: if (p_ref == 3) FVRCON = 0x83;
  2608  0ADD  3003               	movlw	3
  2609  0ADE  066B               	xorwf	ADC_init@p_ref^(0+128),w
  2610  0ADF  1D03               	btfss	3,2
  2611  0AE0  0008               	return
  2612  0AE1  3083               	movlw	131
  2613  0AE2  0022               	movlb	2	; select bank2
  2614  0AE3  0097               	movwf	23	;volatile
  2615  0AE4  0008               	return
  2616  0AE5                     __end_of_ADC_init:	
  2617                           
  2618                           	psect	text12
  2619  0D75                     __ptext12:	
  2620 ;; *************** function ___lmul *****************
  2621 ;; Defined at:
  2622 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  multiplier      4    0[BANK2 ] unsigned long 
  2625 ;;  multiplicand    4    4[BANK2 ] unsigned long 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  product         4    8[BANK2 ] unsigned long 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  4    0[BANK2 ] unsigned long 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2637 ;;      Params:         0       0       0       8       0       0
  2638 ;;      Locals:         0       0       0       4       0       0
  2639 ;;      Temps:          0       0       0       0       0       0
  2640 ;;      Totals:         0       0       0      12       0       0
  2641 ;;Total ram usage:       12 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    6
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           
  2652                           ;psect for function ___lmul
  2653  0D75                     ___lmul:	
  2654                           
  2655                           ;incstack = 0
  2656                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2657  0D75  3000               	movlw	0
  2658  0D76  0022               	movlb	2	; select bank2
  2659  0D77  00AB               	movwf	(___lmul@product+3)^(0+256)
  2660  0D78  3000               	movlw	0
  2661  0D79  00AA               	movwf	(___lmul@product+2)^(0+256)
  2662  0D7A  3000               	movlw	0
  2663  0D7B  00A9               	movwf	(___lmul@product+1)^(0+256)
  2664  0D7C  3000               	movlw	0
  2665  0D7D  00A8               	movwf	___lmul@product^(0+256)
  2666  0D7E                     l3399:	
  2667  0D7E  1C20               	btfss	___lmul@multiplier^(0+256),0
  2668  0D7F  2D88               	goto	l3403
  2669  0D80  0824               	movf	___lmul@multiplicand^(0+256),w
  2670  0D81  07A8               	addwf	___lmul@product^(0+256),f
  2671  0D82  0825               	movf	(___lmul@multiplicand+1)^(0+256),w
  2672  0D83  3DA9               	addwfc	(___lmul@product+1)^(0+256),f
  2673  0D84  0826               	movf	(___lmul@multiplicand+2)^(0+256),w
  2674  0D85  3DAA               	addwfc	(___lmul@product+2)^(0+256),f
  2675  0D86  0827               	movf	(___lmul@multiplicand+3)^(0+256),w
  2676  0D87  3DAB               	addwfc	(___lmul@product+3)^(0+256),f
  2677  0D88                     l3403:	
  2678  0D88  3001               	movlw	1
  2679  0D89                     u3825:	
  2680  0D89  35A4               	lslf	___lmul@multiplicand^(0+256),f
  2681  0D8A  0DA5               	rlf	(___lmul@multiplicand+1)^(0+256),f
  2682  0D8B  0DA6               	rlf	(___lmul@multiplicand+2)^(0+256),f
  2683  0D8C  0DA7               	rlf	(___lmul@multiplicand+3)^(0+256),f
  2684  0D8D  0B89               	decfsz	9,f
  2685  0D8E  2D89               	goto	u3825
  2686  0D8F  3001               	movlw	1
  2687  0D90                     u3835:	
  2688  0D90  36A3               	lsrf	(___lmul@multiplier+3)^(0+256),f
  2689  0D91  0CA2               	rrf	(___lmul@multiplier+2)^(0+256),f
  2690  0D92  0CA1               	rrf	(___lmul@multiplier+1)^(0+256),f
  2691  0D93  0CA0               	rrf	___lmul@multiplier^(0+256),f
  2692  0D94  0B89               	decfsz	9,f
  2693  0D95  2D90               	goto	u3835
  2694  0D96  0823               	movf	(___lmul@multiplier+3)^(0+256),w
  2695  0D97  0422               	iorwf	(___lmul@multiplier+2)^(0+256),w
  2696  0D98  0421               	iorwf	(___lmul@multiplier+1)^(0+256),w
  2697  0D99  0420               	iorwf	___lmul@multiplier^(0+256),w
  2698  0D9A  1D03               	skipz
  2699  0D9B  2D7E               	goto	l3399
  2700  0D9C  082B               	movf	(___lmul@product+3)^(0+256),w
  2701  0D9D  00A3               	movwf	(?___lmul+3)^(0+256)
  2702  0D9E  082A               	movf	(___lmul@product+2)^(0+256),w
  2703  0D9F  00A2               	movwf	(?___lmul+2)^(0+256)
  2704  0DA0  0829               	movf	(___lmul@product+1)^(0+256),w
  2705  0DA1  00A1               	movwf	(?___lmul+1)^(0+256)
  2706  0DA2  0828               	movf	___lmul@product^(0+256),w
  2707  0DA3  00A0               	movwf	?___lmul^(0+256)
  2708  0DA4  0008               	return
  2709  0DA5                     __end_of___lmul:	
  2710                           
  2711                           	psect	text13
  2712  0D1A                     __ptext13:	
  2713 ;; *************** function _OUT *****************
  2714 ;; Defined at:
  2715 ;;		line 233 in file "PIC16F1827-ChargeStation5-02.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  b               1    wreg     unsigned char 
  2718 ;;  value           1    0[BANK1 ] unsigned char 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  b               1    1[BANK1 ] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;		None               void
  2723 ;; Registers used:
  2724 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2730 ;;      Params:         0       0       1       0       0       0
  2731 ;;      Locals:         0       0       1       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0
  2733 ;;      Totals:         0       0       2       0       0       0
  2734 ;;Total ram usage:        2 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    6
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_main
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           
  2745                           ;psect for function _OUT
  2746  0D1A                     _OUT:	
  2747                           
  2748                           ;incstack = 0
  2749                           ; Regs used in _OUT: [wreg-fsr0h+status,2+status,0]
  2750                           ;OUT@b stored from wreg
  2751  0D1A  0021               	movlb	1	; select bank1
  2752  0D1B  00EC               	movwf	OUT@b^(0+128)
  2753                           
  2754                           ;PIC16F1827-ChargeStation5-02.c: 234: switch (b) {
  2755  0D1C  2D3A               	goto	l3339
  2756  0D1D                     l3325:	
  2757                           ;PIC16F1827-ChargeStation5-02.c: 235: case 0:
  2758                           
  2759                           
  2760                           ;PIC16F1827-ChargeStation5-02.c: 236: if (value) {
  2761  0D1D  086B               	movf	OUT@value^(0+128),w
  2762  0D1E  1903               	btfsc	3,2
  2763  0D1F  2D23               	goto	l437
  2764                           
  2765                           ;PIC16F1827-ChargeStation5-02.c: 237: LATB2 = 0;
  2766  0D20  0022               	movlb	2	; select bank2
  2767  0D21  110D               	bcf	13,2	;volatile
  2768                           
  2769                           ;PIC16F1827-ChargeStation5-02.c: 238: } else {
  2770  0D22  0008               	return
  2771  0D23                     l437:	
  2772                           
  2773                           ;PIC16F1827-ChargeStation5-02.c: 239: LATB2 = 1;
  2774  0D23  0022               	movlb	2	; select bank2
  2775  0D24  150D               	bsf	13,2	;volatile
  2776                           
  2777                           ;PIC16F1827-ChargeStation5-02.c: 240: }
  2778                           ;PIC16F1827-ChargeStation5-02.c: 241: break;
  2779  0D25  0008               	return
  2780  0D26                     l3329:	
  2781                           ;PIC16F1827-ChargeStation5-02.c: 242: case 1:
  2782                           
  2783                           
  2784                           ;PIC16F1827-ChargeStation5-02.c: 243: if (value) {
  2785  0D26  0021               	movlb	1	; select bank1
  2786  0D27  086B               	movf	OUT@value^(0+128),w
  2787  0D28  1903               	btfsc	3,2
  2788  0D29  2D2D               	goto	l441
  2789                           
  2790                           ;PIC16F1827-ChargeStation5-02.c: 244: LATB5 = 0;
  2791  0D2A  0022               	movlb	2	; select bank2
  2792  0D2B  128D               	bcf	13,5	;volatile
  2793                           
  2794                           ;PIC16F1827-ChargeStation5-02.c: 245: } else {
  2795  0D2C  0008               	return
  2796  0D2D                     l441:	
  2797                           
  2798                           ;PIC16F1827-ChargeStation5-02.c: 246: LATB5 = 1;
  2799  0D2D  0022               	movlb	2	; select bank2
  2800  0D2E  168D               	bsf	13,5	;volatile
  2801                           
  2802                           ;PIC16F1827-ChargeStation5-02.c: 247: }
  2803                           ;PIC16F1827-ChargeStation5-02.c: 248: break;
  2804  0D2F  0008               	return
  2805  0D30                     l3333:	
  2806                           ;PIC16F1827-ChargeStation5-02.c: 249: case 2:
  2807                           
  2808                           
  2809                           ;PIC16F1827-ChargeStation5-02.c: 250: if (value) {
  2810  0D30  0021               	movlb	1	; select bank1
  2811  0D31  086B               	movf	OUT@value^(0+128),w
  2812  0D32  1903               	btfsc	3,2
  2813  0D33  2D37               	goto	l444
  2814                           
  2815                           ;PIC16F1827-ChargeStation5-02.c: 251: LATB7 = 0;
  2816  0D34  0022               	movlb	2	; select bank2
  2817  0D35  138D               	bcf	13,7	;volatile
  2818                           
  2819                           ;PIC16F1827-ChargeStation5-02.c: 252: } else {
  2820  0D36  0008               	return
  2821  0D37                     l444:	
  2822                           
  2823                           ;PIC16F1827-ChargeStation5-02.c: 253: LATB7 = 1;
  2824  0D37  0022               	movlb	2	; select bank2
  2825  0D38  178D               	bsf	13,7	;volatile
  2826                           
  2827                           ;PIC16F1827-ChargeStation5-02.c: 256: }
  2828                           
  2829                           ;PIC16F1827-ChargeStation5-02.c: 254: }
  2830                           ;PIC16F1827-ChargeStation5-02.c: 255: break;
  2831  0D39  0008               	return
  2832  0D3A                     l3339:	
  2833  0D3A  0021               	movlb	1	; select bank1
  2834  0D3B  086C               	movf	OUT@b^(0+128),w
  2835                           
  2836                           ; Switch size 1, requested type "space"
  2837                           ; Number of cases is 3, Range of values is 0 to 2
  2838                           ; switch strategies available:
  2839                           ; Name         Instructions Cycles
  2840                           ; simple_byte           10     6 (average)
  2841                           ; direct_byte           12     6 (fixed)
  2842                           ; jumptable            260     6 (fixed)
  2843                           ;	Chosen strategy is simple_byte
  2844  0D3C  3A00               	xorlw	0	; case 0
  2845  0D3D  1903               	skipnz
  2846  0D3E  2D1D               	goto	l3325
  2847  0D3F  3A01               	xorlw	1	; case 1
  2848  0D40  1903               	skipnz
  2849  0D41  2D26               	goto	l3329
  2850  0D42  3A03               	xorlw	3	; case 2
  2851  0D43  1903               	skipnz
  2852  0D44  2D30               	goto	l3333
  2853  0D45  2D46               	goto	l446
  2854  0D46                     l446:	
  2855  0D46  0008               	return
  2856  0D47                     __end_of_OUT:	
  2857                           
  2858                           	psect	text14
  2859  0C70                     __ptext14:	
  2860 ;; *************** function _LED *****************
  2861 ;; Defined at:
  2862 ;;		line 259 in file "PIC16F1827-ChargeStation5-02.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  b               1    wreg     unsigned char 
  2865 ;;  value           1    0[BANK1 ] unsigned char 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  b               1    1[BANK1 ] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;		None               void
  2870 ;; Registers used:
  2871 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2877 ;;      Params:         0       0       1       0       0       0
  2878 ;;      Locals:         0       0       1       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0
  2880 ;;      Totals:         0       0       2       0       0       0
  2881 ;;Total ram usage:        2 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    6
  2884 ;; This function calls:
  2885 ;;		Nothing
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _LED
  2893  0C70                     _LED:	
  2894                           
  2895                           ;incstack = 0
  2896                           ; Regs used in _LED: [wreg-fsr0h+status,2+status,0]
  2897                           ;LED@b stored from wreg
  2898  0C70  0021               	movlb	1	; select bank1
  2899  0C71  00EC               	movwf	LED@b^(0+128)
  2900                           
  2901                           ;PIC16F1827-ChargeStation5-02.c: 260: switch (b) {
  2902  0C72  2C8B               	goto	l3321
  2903  0C73                     l450:	
  2904                           ;PIC16F1827-ChargeStation5-02.c: 261: case 0:
  2905                           
  2906                           
  2907                           ;PIC16F1827-ChargeStation5-02.c: 262: LATA3 = value;
  2908  0C73  1C6B               	btfss	LED@value^(0+128),0
  2909  0C74  2C78               	goto	u3720
  2910  0C75  0022               	movlb	2	; select bank2
  2911  0C76  158C               	bsf	12,3	;volatile
  2912  0C77  0008               	return
  2913  0C78                     u3720:	
  2914  0C78  0022               	movlb	2	; select bank2
  2915  0C79  118C               	bcf	12,3	;volatile
  2916                           
  2917                           ;PIC16F1827-ChargeStation5-02.c: 263: break;
  2918  0C7A  0008               	return
  2919  0C7B                     l452:	
  2920                           ;PIC16F1827-ChargeStation5-02.c: 264: case 1:
  2921                           
  2922                           
  2923                           ;PIC16F1827-ChargeStation5-02.c: 265: LATA6 = value;
  2924  0C7B  1C6B               	btfss	LED@value^(0+128),0
  2925  0C7C  2C80               	goto	u3740
  2926  0C7D  0022               	movlb	2	; select bank2
  2927  0C7E  170C               	bsf	12,6	;volatile
  2928  0C7F  0008               	return
  2929  0C80                     u3740:	
  2930  0C80  0022               	movlb	2	; select bank2
  2931  0C81  130C               	bcf	12,6	;volatile
  2932                           
  2933                           ;PIC16F1827-ChargeStation5-02.c: 266: break;
  2934  0C82  0008               	return
  2935  0C83                     l453:	
  2936                           ;PIC16F1827-ChargeStation5-02.c: 267: case 2:
  2937                           
  2938                           
  2939                           ;PIC16F1827-ChargeStation5-02.c: 268: LATA7 = value;
  2940  0C83  1C6B               	btfss	LED@value^(0+128),0
  2941  0C84  2C88               	goto	u3760
  2942  0C85  0022               	movlb	2	; select bank2
  2943  0C86  178C               	bsf	12,7	;volatile
  2944  0C87  0008               	return
  2945  0C88                     u3760:	
  2946  0C88  0022               	movlb	2	; select bank2
  2947  0C89  138C               	bcf	12,7	;volatile
  2948                           
  2949                           ;PIC16F1827-ChargeStation5-02.c: 272: }
  2950                           
  2951                           ;PIC16F1827-ChargeStation5-02.c: 271: break;
  2952                           
  2953                           ;PIC16F1827-ChargeStation5-02.c: 270: default:
  2954                           
  2955                           ;PIC16F1827-ChargeStation5-02.c: 269: break;
  2956  0C8A  0008               	return
  2957  0C8B                     l3321:	
  2958  0C8B  0021               	movlb	1	; select bank1
  2959  0C8C  086C               	movf	LED@b^(0+128),w
  2960                           
  2961                           ; Switch size 1, requested type "space"
  2962                           ; Number of cases is 3, Range of values is 0 to 2
  2963                           ; switch strategies available:
  2964                           ; Name         Instructions Cycles
  2965                           ; simple_byte           10     6 (average)
  2966                           ; direct_byte           12     6 (fixed)
  2967                           ; jumptable            260     6 (fixed)
  2968                           ;	Chosen strategy is simple_byte
  2969  0C8D  3A00               	xorlw	0	; case 0
  2970  0C8E  1903               	skipnz
  2971  0C8F  2C73               	goto	l450
  2972  0C90  3A01               	xorlw	1	; case 1
  2973  0C91  1903               	skipnz
  2974  0C92  2C7B               	goto	l452
  2975  0C93  3A03               	xorlw	3	; case 2
  2976  0C94  1903               	skipnz
  2977  0C95  2C83               	goto	l453
  2978  0C96  2C97               	goto	l455
  2979  0C97                     l455:	
  2980  0C97  0008               	return
  2981  0C98                     __end_of_LED:	
  2982                           
  2983                           	psect	text15
  2984  0C98                     __ptext15:	
  2985 ;; *************** function _EEP_write16 *****************
  2986 ;; Defined at:
  2987 ;;		line 333 in file "../My_header\My_I2C.h"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  Reg_h           1    wreg     unsigned char 
  2990 ;;  Reg_l           1    1[BANK2 ] unsigned char 
  2991 ;;  data            2    2[BANK2 ] unsigned int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  Reg_h           1    5[BANK2 ] unsigned char 
  2994 ;;  ans             1    6[BANK2 ] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;		None               void
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3004 ;;      Params:         0       0       0       3       0       0
  3005 ;;      Locals:         0       0       0       2       0       0
  3006 ;;      Temps:          0       0       0       1       0       0
  3007 ;;      Totals:         0       0       0       6       0       0
  3008 ;;Total ram usage:        6 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    8
  3011 ;; This function calls:
  3012 ;;		_I2C_Send
  3013 ;;		_I2C_Start
  3014 ;;		_I2C_Stop
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _EEP_write16
  3022  0C98                     _EEP_write16:	
  3023                           
  3024                           ;incstack = 0
  3025                           ; Regs used in _EEP_write16: [wreg+status,2+status,0+pclath+cstack]
  3026                           ;EEP_write16@Reg_h stored from wreg
  3027  0C98  0022               	movlb	2	; select bank2
  3028  0C99  00A5               	movwf	EEP_write16@Reg_h^(0+256)
  3029                           
  3030                           ;My_header\My_I2C.h: 334: uint8_t ans;
  3031                           ;My_header\My_I2C.h: 335: ans = I2C_Start(0x50, 0);
  3032  0C9A  0021               	movlb	1	; select bank1
  3033  0C9B  01ED               	clrf	I2C_Start@rw^(0+128)
  3034  0C9C  3050               	movlw	80
  3035  0C9D  318B  23C6  318C   	fcall	_I2C_Start
  3036  0CA0  0022               	movlb	2	; select bank2
  3037  0CA1  00A4               	movwf	??_EEP_write16^(0+256)
  3038  0CA2  0824               	movf	??_EEP_write16^(0+256),w
  3039  0CA3  00A6               	movwf	EEP_write16@ans^(0+256)
  3040                           
  3041                           ;My_header\My_I2C.h: 336: if (ans == 0) {
  3042  0CA4  0826               	movf	EEP_write16@ans^(0+256),w
  3043  0CA5  1D03               	btfss	3,2
  3044  0CA6  2CBA               	goto	l307
  3045                           
  3046                           ;My_header\My_I2C.h: 338: I2C_Send(Reg_h);
  3047  0CA7  0825               	movf	EEP_write16@Reg_h^(0+256),w
  3048  0CA8  318A  22BE  318C   	fcall	_I2C_Send
  3049                           
  3050                           ;My_header\My_I2C.h: 339: I2C_Send(Reg_l);
  3051  0CAB  0022               	movlb	2	; select bank2
  3052  0CAC  0821               	movf	EEP_write16@Reg_l^(0+256),w
  3053  0CAD  318A  22BE  318C   	fcall	_I2C_Send
  3054                           
  3055                           ;My_header\My_I2C.h: 340: I2C_Send(data >> 8);
  3056  0CB0  0022               	movlb	2	; select bank2
  3057  0CB1  0823               	movf	(EEP_write16@data+1)^(0+256),w
  3058  0CB2  318A  22BE  318C   	fcall	_I2C_Send
  3059                           
  3060                           ;My_header\My_I2C.h: 341: I2C_Send(data >> 0);
  3061  0CB5  0022               	movlb	2	; select bank2
  3062  0CB6  0822               	movf	EEP_write16@data^(0+256),w
  3063  0CB7  318A  22BE  318C   	fcall	_I2C_Send
  3064  0CBA                     l307:	
  3065                           
  3066                           ;My_header\My_I2C.h: 342: }
  3067                           ;My_header\My_I2C.h: 343: I2C_Stop();
  3068  0CBA  318A  2250  318C   	fcall	_I2C_Stop
  3069                           
  3070                           ;My_header\My_I2C.h: 344: _delay((unsigned long)((26)*(32000000/4000000.0)));
  3071  0CBD  3045               	movlw	69
  3072  0CBE  0022               	movlb	2	; select bank2
  3073  0CBF  00A4               	movwf	??_EEP_write16^(0+256)
  3074  0CC0                     u4257:	
  3075  0CC0  0BA4               	decfsz	??_EEP_write16^(0+256),f
  3076  0CC1  2CC0               	goto	u4257
  3077  0CC2  0008               	return
  3078  0CC3                     __end_of_EEP_write16:	
  3079                           
  3080                           	psect	text16
  3081  0E10                     __ptext16:	
  3082 ;; *************** function _EEP_read *****************
  3083 ;; Defined at:
  3084 ;;		line 270 in file "../My_header\My_I2C.h"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  Reg_h           1    wreg     unsigned char 
  3087 ;;  Reg_l           1    4[BANK2 ] unsigned char 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  Reg_h           1    6[BANK2 ] unsigned char 
  3090 ;;  ans             1    8[BANK2 ] unsigned char 
  3091 ;;  data            1    7[BANK2 ] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      unsigned char 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, pclath, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3101 ;;      Params:         0       0       0       1       0       0
  3102 ;;      Locals:         0       0       0       3       0       0
  3103 ;;      Temps:          0       0       0       1       0       0
  3104 ;;      Totals:         0       0       0       5       0       0
  3105 ;;Total ram usage:        5 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    8
  3108 ;; This function calls:
  3109 ;;		_I2C_Receive
  3110 ;;		_I2C_Send
  3111 ;;		_I2C_Start
  3112 ;;		_I2C_Stop
  3113 ;;		_I2C_rStart
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function _EEP_read
  3121  0E10                     _EEP_read:	
  3122                           
  3123                           ;incstack = 0
  3124                           ; Regs used in _EEP_read: [wreg+status,2+status,0+pclath+cstack]
  3125                           ;EEP_read@Reg_h stored from wreg
  3126  0E10  0022               	movlb	2	; select bank2
  3127  0E11  00A6               	movwf	EEP_read@Reg_h^(0+256)
  3128                           
  3129                           ;My_header\My_I2C.h: 271: uint8_t ans;
  3130                           ;My_header\My_I2C.h: 272: uint8_t data;
  3131                           ;My_header\My_I2C.h: 274: ans = I2C_Start(0x50, 0);
  3132  0E12  0021               	movlb	1	; select bank1
  3133  0E13  01ED               	clrf	I2C_Start@rw^(0+128)
  3134  0E14  3050               	movlw	80
  3135  0E15  318B  23C6  318E   	fcall	_I2C_Start
  3136  0E18  0022               	movlb	2	; select bank2
  3137  0E19  00A5               	movwf	??_EEP_read^(0+256)
  3138  0E1A  0825               	movf	??_EEP_read^(0+256),w
  3139  0E1B  00A8               	movwf	EEP_read@ans^(0+256)
  3140                           
  3141                           ;My_header\My_I2C.h: 275: if (ans == 0) {
  3142  0E1C  0828               	movf	EEP_read@ans^(0+256),w
  3143  0E1D  1D03               	btfss	3,2
  3144  0E1E  2E28               	goto	l292
  3145                           
  3146                           ;My_header\My_I2C.h: 276: I2C_Send(Reg_h);
  3147  0E1F  0826               	movf	EEP_read@Reg_h^(0+256),w
  3148  0E20  318A  22BE  318E   	fcall	_I2C_Send
  3149                           
  3150                           ;My_header\My_I2C.h: 277: I2C_Send(Reg_l);
  3151  0E23  0022               	movlb	2	; select bank2
  3152  0E24  0824               	movf	EEP_read@Reg_l^(0+256),w
  3153  0E25  318A  22BE  318E   	fcall	_I2C_Send
  3154  0E28                     l292:	
  3155                           
  3156                           ;My_header\My_I2C.h: 278: }
  3157                           ;My_header\My_I2C.h: 279: ans = I2C_rStart(0x50, 1);
  3158  0E28  3050               	movlw	80
  3159  0E29  0022               	movlb	2	; select bank2
  3160  0E2A  00A0               	movwf	I2C_rStart@adrs^(0+256)
  3161  0E2B  3000               	movlw	0
  3162  0E2C  00A1               	movwf	(I2C_rStart@adrs^(0+256)+1)
  3163  0E2D  3001               	movlw	1
  3164  0E2E  00A2               	movwf	I2C_rStart@rw^(0+256)
  3165  0E2F  3000               	movlw	0
  3166  0E30  00A3               	movwf	(I2C_rStart@rw^(0+256)+1)
  3167  0E31  318B  235A  318E   	fcall	_I2C_rStart
  3168  0E34  0022               	movlb	2	; select bank2
  3169  0E35  00A5               	movwf	??_EEP_read^(0+256)
  3170  0E36  0825               	movf	??_EEP_read^(0+256),w
  3171  0E37  00A8               	movwf	EEP_read@ans^(0+256)
  3172                           
  3173                           ;My_header\My_I2C.h: 280: if (ans == 0) {
  3174  0E38  0828               	movf	EEP_read@ans^(0+256),w
  3175  0E39  1D03               	btfss	3,2
  3176  0E3A  2E43               	goto	l293
  3177                           
  3178                           ;My_header\My_I2C.h: 281: data = I2C_Receive(1);
  3179  0E3B  3001               	movlw	1
  3180  0E3C  318B  23E3  318E   	fcall	_I2C_Receive
  3181  0E3F  0022               	movlb	2	; select bank2
  3182  0E40  00A5               	movwf	??_EEP_read^(0+256)
  3183  0E41  0825               	movf	??_EEP_read^(0+256),w
  3184  0E42  00A7               	movwf	EEP_read@data^(0+256)
  3185  0E43                     l293:	
  3186                           
  3187                           ;My_header\My_I2C.h: 282: }
  3188                           ;My_header\My_I2C.h: 283: I2C_Stop();
  3189  0E43  318A  2250  318E   	fcall	_I2C_Stop
  3190                           
  3191                           ;My_header\My_I2C.h: 284: _delay((unsigned long)((26)*(32000000/4000000.0)));
  3192  0E46  3045               	movlw	69
  3193  0E47  0022               	movlb	2	; select bank2
  3194  0E48  00A5               	movwf	??_EEP_read^(0+256)
  3195  0E49                     u4267:	
  3196  0E49  0BA5               	decfsz	??_EEP_read^(0+256),f
  3197  0E4A  2E49               	goto	u4267
  3198                           
  3199                           ;My_header\My_I2C.h: 285: return data;
  3200  0E4B  0022               	movlb	2	; select bank2
  3201  0E4C  0827               	movf	EEP_read@data^(0+256),w
  3202  0E4D  0008               	return
  3203  0E4E                     __end_of_EEP_read:	
  3204                           
  3205                           	psect	text17
  3206  0B5A                     __ptext17:	
  3207 ;; *************** function _I2C_rStart *****************
  3208 ;; Defined at:
  3209 ;;		line 47 in file "../My_header\My_I2C.h"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  adrs            2    0[BANK2 ] int 
  3212 ;;  rw              2    2[BANK2 ] int 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      unsigned char 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3224 ;;      Params:         0       0       0       4       0       0
  3225 ;;      Locals:         0       0       0       0       0       0
  3226 ;;      Temps:          0       0       0       0       0       0
  3227 ;;      Totals:         0       0       0       4       0       0
  3228 ;;Total ram usage:        4 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    7
  3231 ;; This function calls:
  3232 ;;		_I2C_IdleCheck
  3233 ;; This function is called by:
  3234 ;;		_EEP_read
  3235 ;;		_EEP_read16
  3236 ;;		_EEP_read32
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function _I2C_rStart
  3242  0B5A                     _I2C_rStart:	
  3243                           
  3244                           ;My_header\My_I2C.h: 49: I2C_IdleCheck(0x5);
  3245                           
  3246                           ;incstack = 0
  3247                           ; Regs used in _I2C_rStart: [wreg+status,2+status,0+pclath+cstack]
  3248  0B5A  3005               	movlw	5
  3249  0B5B  318A  2280  318B   	fcall	_I2C_IdleCheck
  3250                           
  3251                           ;My_header\My_I2C.h: 50: SSP1CON2bits.RSEN = 1;
  3252  0B5E  0024               	movlb	4	; select bank4
  3253  0B5F  1496               	bsf	22,1	;volatile
  3254                           
  3255                           ;My_header\My_I2C.h: 52: I2C_IdleCheck(0x5);
  3256  0B60  3005               	movlw	5
  3257  0B61  318A  2280  318B   	fcall	_I2C_IdleCheck
  3258                           
  3259                           ;My_header\My_I2C.h: 53: SSP1IF = 0;
  3260  0B64  0020               	movlb	0	; select bank0
  3261  0B65  1191               	bcf	17,3	;volatile
  3262                           
  3263                           ;My_header\My_I2C.h: 54: SSP1BUF = (char) ((adrs << 1) + rw);
  3264  0B66  0022               	movlb	2	; select bank2
  3265  0B67  3520               	lslf	I2C_rStart@adrs^(0+256),w
  3266  0B68  0722               	addwf	I2C_rStart@rw^(0+256),w
  3267  0B69  0024               	movlb	4	; select bank4
  3268  0B6A  0091               	movwf	17	;volatile
  3269  0B6B                     l238:	
  3270                           ;My_header\My_I2C.h: 55: while (!SSP1IF);
  3271                           
  3272  0B6B  0020               	movlb	0	; select bank0
  3273  0B6C  1D91               	btfss	17,3	;volatile
  3274  0B6D  2B6B               	goto	l238
  3275                           
  3276                           ;My_header\My_I2C.h: 56: return SSP1CON2bits.ACKSTAT;
  3277  0B6E  0024               	movlb	4	; select bank4
  3278  0B6F  0E16               	swapf	22,w	;volatile
  3279  0B70  0C89               	rrf	9,f
  3280  0B71  0C89               	rrf	9,f
  3281  0B72  3901               	andlw	1
  3282  0B73  0008               	return
  3283  0B74                     __end_of_I2C_rStart:	
  3284                           
  3285                           	psect	text18
  3286  0A50                     __ptext18:	
  3287 ;; *************** function _I2C_Stop *****************
  3288 ;; Defined at:
  3289 ;;		line 59 in file "../My_header\My_I2C.h"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;		None               void
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3303 ;;      Params:         0       0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    7
  3310 ;; This function calls:
  3311 ;;		_I2C_IdleCheck
  3312 ;; This function is called by:
  3313 ;;		_I2C_LCD_Command
  3314 ;;		_EEP_read
  3315 ;;		_EEP_write16
  3316 ;;		_I2C_LCD_CreateChar
  3317 ;;		_EEP_write
  3318 ;;		_EEP_read16
  3319 ;;		_EEP_read32
  3320 ;;		_EEP_write32
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           
  3325                           ;psect for function _I2C_Stop
  3326  0A50                     _I2C_Stop:	
  3327                           
  3328                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
  3329                           
  3330                           ;incstack = 0
  3331                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3332  0A50  3005               	movlw	5
  3333  0A51  318A  2280         	fcall	_I2C_IdleCheck
  3334                           
  3335                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
  3336  0A53  0024               	movlb	4	; select bank4
  3337  0A54  1516               	bsf	22,2	;volatile
  3338  0A55  0008               	return
  3339  0A56                     __end_of_I2C_Stop:	
  3340                           
  3341                           	psect	text19
  3342  0BC6                     __ptext19:	
  3343 ;; *************** function _I2C_Start *****************
  3344 ;; Defined at:
  3345 ;;		line 35 in file "../My_header\My_I2C.h"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  adrs            1    wreg     unsigned char 
  3348 ;;  rw              1    2[BANK1 ] unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  adrs            1    0[BANK2 ] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      unsigned char 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3360 ;;      Params:         0       0       1       0       0       0
  3361 ;;      Locals:         0       0       0       1       0       0
  3362 ;;      Temps:          0       0       0       0       0       0
  3363 ;;      Totals:         0       0       1       1       0       0
  3364 ;;Total ram usage:        2 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    7
  3367 ;; This function calls:
  3368 ;;		_I2C_IdleCheck
  3369 ;; This function is called by:
  3370 ;;		_I2C_LCD_Command
  3371 ;;		_EEP_read
  3372 ;;		_EEP_write16
  3373 ;;		_I2C_LCD_CreateChar
  3374 ;;		_EEP_write
  3375 ;;		_EEP_read16
  3376 ;;		_EEP_read32
  3377 ;;		_EEP_write32
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function _I2C_Start
  3383  0BC6                     _I2C_Start:	
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3387                           ;I2C_Start@adrs stored from wreg
  3388  0BC6  0022               	movlb	2	; select bank2
  3389  0BC7  00A0               	movwf	I2C_Start@adrs^(0+256)
  3390                           
  3391                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
  3392  0BC8  3005               	movlw	5
  3393  0BC9  318A  2280  318B   	fcall	_I2C_IdleCheck
  3394                           
  3395                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
  3396  0BCC  0024               	movlb	4	; select bank4
  3397  0BCD  1416               	bsf	22,0	;volatile
  3398                           
  3399                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
  3400  0BCE  3005               	movlw	5
  3401  0BCF  318A  2280  318B   	fcall	_I2C_IdleCheck
  3402                           
  3403                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
  3404  0BD2  0020               	movlb	0	; select bank0
  3405  0BD3  1191               	bcf	17,3	;volatile
  3406                           
  3407                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  3408  0BD4  0022               	movlb	2	; select bank2
  3409  0BD5  3520               	lslf	I2C_Start@adrs^(0+256),w
  3410  0BD6  0021               	movlb	1	; select bank1
  3411  0BD7  076D               	addwf	I2C_Start@rw^(0+128),w
  3412  0BD8  0024               	movlb	4	; select bank4
  3413  0BD9  0091               	movwf	17	;volatile
  3414  0BDA                     l232:	
  3415                           ;My_header\My_I2C.h: 43: while (!SSP1IF);
  3416                           
  3417  0BDA  0020               	movlb	0	; select bank0
  3418  0BDB  1D91               	btfss	17,3	;volatile
  3419  0BDC  2BDA               	goto	l232
  3420                           
  3421                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
  3422  0BDD  0024               	movlb	4	; select bank4
  3423  0BDE  0E16               	swapf	22,w	;volatile
  3424  0BDF  0C89               	rrf	9,f
  3425  0BE0  0C89               	rrf	9,f
  3426  0BE1  3901               	andlw	1
  3427  0BE2  0008               	return
  3428  0BE3                     __end_of_I2C_Start:	
  3429                           
  3430                           	psect	text20
  3431  0ABE                     __ptext20:	
  3432 ;; *************** function _I2C_Send *****************
  3433 ;; Defined at:
  3434 ;;		line 65 in file "../My_header\My_I2C.h"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  data            1    wreg     unsigned char 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  data            1    2[BANK1 ] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      unsigned char 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, pclath, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3448 ;;      Params:         0       0       0       0       0       0
  3449 ;;      Locals:         0       0       1       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0
  3451 ;;      Totals:         0       0       1       0       0       0
  3452 ;;Total ram usage:        1 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    7
  3455 ;; This function calls:
  3456 ;;		_I2C_IdleCheck
  3457 ;; This function is called by:
  3458 ;;		_I2C_LCD_Command
  3459 ;;		_EEP_read
  3460 ;;		_EEP_write16
  3461 ;;		_I2C_LCD_CreateChar
  3462 ;;		_EEP_write
  3463 ;;		_EEP_read16
  3464 ;;		_EEP_read32
  3465 ;;		_EEP_write32
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           
  3470                           ;psect for function _I2C_Send
  3471  0ABE                     _I2C_Send:	
  3472                           
  3473                           ;incstack = 0
  3474                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  3475                           ;I2C_Send@data stored from wreg
  3476  0ABE  0021               	movlb	1	; select bank1
  3477  0ABF  00ED               	movwf	I2C_Send@data^(0+128)
  3478                           
  3479                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
  3480  0AC0  3005               	movlw	5
  3481  0AC1  318A  2280  318A   	fcall	_I2C_IdleCheck
  3482                           
  3483                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
  3484  0AC4  0020               	movlb	0	; select bank0
  3485  0AC5  1191               	bcf	17,3	;volatile
  3486                           
  3487                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
  3488  0AC6  0021               	movlb	1	; select bank1
  3489  0AC7  086D               	movf	I2C_Send@data^(0+128),w
  3490  0AC8  0024               	movlb	4	; select bank4
  3491  0AC9  0091               	movwf	17	;volatile
  3492  0ACA                     l247:	
  3493                           ;My_header\My_I2C.h: 69: while (!SSP1IF);
  3494                           
  3495  0ACA  0020               	movlb	0	; select bank0
  3496  0ACB  1D91               	btfss	17,3	;volatile
  3497  0ACC  2ACA               	goto	l247
  3498                           
  3499                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
  3500                           ;	Return value of _I2C_Send is never used
  3501  0ACD  0024               	movlb	4	; select bank4
  3502  0ACE  0816               	movf	22,w	;volatile
  3503  0ACF  0008               	return
  3504  0AD0                     __end_of_I2C_Send:	
  3505                           
  3506                           	psect	text21
  3507  0BE3                     __ptext21:	
  3508 ;; *************** function _I2C_Receive *****************
  3509 ;; Defined at:
  3510 ;;		line 73 in file "../My_header\My_I2C.h"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  ack             1    wreg     unsigned char 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  ack             1    0[BANK2 ] unsigned char 
  3515 ;;  data            1    1[BANK2 ] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      unsigned char 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3525 ;;      Params:         0       0       0       0       0       0
  3526 ;;      Locals:         0       0       0       2       0       0
  3527 ;;      Temps:          0       0       1       0       0       0
  3528 ;;      Totals:         0       0       1       2       0       0
  3529 ;;Total ram usage:        3 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    7
  3532 ;; This function calls:
  3533 ;;		_I2C_IdleCheck
  3534 ;; This function is called by:
  3535 ;;		_EEP_read
  3536 ;;		_EEP_read16
  3537 ;;		_EEP_read32
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           
  3542                           ;psect for function _I2C_Receive
  3543  0BE3                     _I2C_Receive:	
  3544                           
  3545                           ;incstack = 0
  3546                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  3547                           ;I2C_Receive@ack stored from wreg
  3548  0BE3  0022               	movlb	2	; select bank2
  3549  0BE4  00A0               	movwf	I2C_Receive@ack^(0+256)
  3550                           
  3551                           ;My_header\My_I2C.h: 74: uint8_t data;
  3552                           ;My_header\My_I2C.h: 76: I2C_IdleCheck(0x5);
  3553  0BE5  3005               	movlw	5
  3554  0BE6  318A  2280  318B   	fcall	_I2C_IdleCheck
  3555                           
  3556                           ;My_header\My_I2C.h: 77: SSP1CON2bits.RCEN = 1;
  3557  0BE9  0024               	movlb	4	; select bank4
  3558  0BEA  1596               	bsf	22,3	;volatile
  3559                           
  3560                           ;My_header\My_I2C.h: 78: I2C_IdleCheck(0x4);
  3561  0BEB  3004               	movlw	4
  3562  0BEC  318A  2280  318B   	fcall	_I2C_IdleCheck
  3563                           
  3564                           ;My_header\My_I2C.h: 79: data = SSP1BUF;
  3565  0BEF  0024               	movlb	4	; select bank4
  3566  0BF0  0811               	movf	17,w	;volatile
  3567  0BF1  0021               	movlb	1	; select bank1
  3568  0BF2  00ED               	movwf	??_I2C_Receive^(0+128)
  3569  0BF3  086D               	movf	??_I2C_Receive^(0+128),w
  3570  0BF4  0022               	movlb	2	; select bank2
  3571  0BF5  00A1               	movwf	I2C_Receive@data^(0+256)
  3572                           
  3573                           ;My_header\My_I2C.h: 80: I2C_IdleCheck(0x5);
  3574  0BF6  3005               	movlw	5
  3575  0BF7  318A  2280         	fcall	_I2C_IdleCheck
  3576                           
  3577                           ;My_header\My_I2C.h: 81: SSP1CON2bits.ACKDT = ack;
  3578  0BF9  0022               	movlb	2	; select bank2
  3579  0BFA  0820               	movf	I2C_Receive@ack^(0+256),w
  3580  0BFB  0024               	movlb	4	; select bank4
  3581  0BFC  1D03               	skipz
  3582  0BFD  1696               	bsf	22,5	;volatile
  3583  0BFE  1903               	skipnz
  3584  0BFF  1296               	bcf	22,5	;volatile
  3585                           
  3586                           ;My_header\My_I2C.h: 82: SSP1CON2bits.ACKEN = 1;
  3587  0C00  1616               	bsf	22,4	;volatile
  3588                           
  3589                           ;My_header\My_I2C.h: 83: return data;
  3590  0C01  0022               	movlb	2	; select bank2
  3591  0C02  0821               	movf	I2C_Receive@data^(0+256),w
  3592  0C03  0008               	return
  3593  0C04                     __end_of_I2C_Receive:	
  3594                           
  3595                           	psect	text22
  3596  0A80                     __ptext22:	
  3597 ;; *************** function _I2C_IdleCheck *****************
  3598 ;; Defined at:
  3599 ;;		line 21 in file "../My_header\My_I2C.h"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  mask            1    wreg     unsigned char 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  mask            1    1[BANK1 ] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;		None               void
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3613 ;;      Params:         0       0       0       0       0       0
  3614 ;;      Locals:         0       0       1       0       0       0
  3615 ;;      Temps:          0       0       1       0       0       0
  3616 ;;      Totals:         0       0       2       0       0       0
  3617 ;;Total ram usage:        2 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    6
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_I2C_Start
  3624 ;;		_I2C_rStart
  3625 ;;		_I2C_Stop
  3626 ;;		_I2C_Send
  3627 ;;		_I2C_Receive
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function _I2C_IdleCheck
  3633  0A80                     _I2C_IdleCheck:	
  3634                           
  3635                           ;incstack = 0
  3636                           ; Regs used in _I2C_IdleCheck: [wreg+status,2+status,0]
  3637                           ;I2C_IdleCheck@mask stored from wreg
  3638  0A80  0021               	movlb	1	; select bank1
  3639  0A81  00EC               	movwf	I2C_IdleCheck@mask^(0+128)
  3640  0A82                     l3181:	
  3641                           ;My_header\My_I2C.h: 22: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  3642                           
  3643  0A82  086C               	movf	I2C_IdleCheck@mask^(0+128),w
  3644  0A83  0024               	movlb	4	; select bank4
  3645  0A84  0514               	andwf	20,w	;volatile
  3646  0A85  0021               	movlb	1	; select bank1
  3647  0A86  00EB               	movwf	??_I2C_IdleCheck^(0+128)
  3648  0A87  0024               	movlb	4	; select bank4
  3649  0A88  0816               	movf	22,w	;volatile
  3650  0A89  391F               	andlw	31
  3651  0A8A  0021               	movlb	1	; select bank1
  3652  0A8B  046B               	iorwf	??_I2C_IdleCheck^(0+128),w
  3653  0A8C  1903               	btfsc	3,2
  3654  0A8D  0008               	return
  3655  0A8E  2A82               	goto	l3181
  3656  0A8F                     __end_of_I2C_IdleCheck:	
  3657                           
  3658                           	psect	intentry
  3659  0004                     __pintentry:	
  3660 ;; *************** function _isr *****************
  3661 ;; Defined at:
  3662 ;;		line 85 in file "PIC16F1827-ChargeStation5-02.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  i               1   26[BANK0 ] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;		None               void
  3669 ;; Registers used:
  3670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3676 ;;      Params:         0       0       0       0       0       0
  3677 ;;      Locals:         0       1       0       0       0       0
  3678 ;;      Temps:          0       8       0       0       0       0
  3679 ;;      Totals:         0       9       0       0       0       0
  3680 ;;Total ram usage:        9 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    5
  3683 ;; This function calls:
  3684 ;;		_ADC
  3685 ;;		___lldiv
  3686 ;;		___lwdiv
  3687 ;;		_button_timer_interrupt
  3688 ;;		_display
  3689 ;;		_lchika
  3690 ;;		_ringbuf_num
  3691 ;;		_ringbuf_pop
  3692 ;; This function is called by:
  3693 ;;		Interrupt level 1
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697  0004                     _isr:	
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3701  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3702  0005  3180               	pagesel	$
  3703  0006  0020               	movlb	0	; select bank0
  3704  0007  087F               	movf	127,w
  3705  0008  00D4               	movwf	??_isr+7
  3706                           
  3707                           ;PIC16F1827-ChargeStation5-02.c: 86: uint8_t i;
  3708                           ;PIC16F1827-ChargeStation5-02.c: 87: if (PIR1bits.RCIF == 1) {
  3709  0009  1A91               	btfsc	17,5	;volatile
  3710                           
  3711                           ;PIC16F1827-ChargeStation5-02.c: 88: PIR1bits.RCIF = 0;
  3712  000A  1291               	bcf	17,5	;volatile
  3713                           
  3714                           ;PIC16F1827-ChargeStation5-02.c: 89: }
  3715                           ;PIC16F1827-ChargeStation5-02.c: 90: if (PIR1bits.TXIF & PIE1bits.TXIE) {
  3716  000B  0021               	movlb	1	; select bank1
  3717  000C  0E11               	swapf	17,w	;volatile
  3718  000D  3901               	andlw	1
  3719  000E  0020               	movlb	0	; select bank0
  3720  000F  00CD               	movwf	??_isr
  3721  0010  0E11               	swapf	17,w	;volatile
  3722  0011  3901               	andlw	1
  3723  0012  054D               	andwf	??_isr,w
  3724  0013  1903               	btfsc	3,2
  3725  0014  2826               	goto	i1l383
  3726                           
  3727                           ;PIC16F1827-ChargeStation5-02.c: 91: if (ringbuf_num(&tx_buf)) {
  3728  0015  30D3               	movlw	(low (_tx_buf| 0))& (0+255)
  3729  0016  318F  2740  3180   	fcall	_ringbuf_num
  3730  0019  0870               	movf	?_ringbuf_num,w
  3731  001A  0471               	iorwf	?_ringbuf_num+1,w
  3732  001B  1903               	btfsc	3,2
  3733  001C  2824               	goto	i1l384
  3734                           
  3735                           ;PIC16F1827-ChargeStation5-02.c: 92: TXREG = ringbuf_pop(&tx_buf);
  3736  001D  30D3               	movlw	(low (_tx_buf| 0))& (0+255)
  3737  001E  318E  264E  3180   	fcall	_ringbuf_pop
  3738  0021  0023               	movlb	3	; select bank3
  3739  0022  009A               	movwf	26	;volatile
  3740                           
  3741                           ;PIC16F1827-ChargeStation5-02.c: 93: } else {
  3742  0023  2826               	goto	i1l383
  3743  0024                     i1l384:	
  3744                           
  3745                           ;PIC16F1827-ChargeStation5-02.c: 94: PIE1bits.TXIE = 0;
  3746  0024  0021               	movlb	1	; select bank1
  3747  0025  1211               	bcf	17,4	;volatile
  3748  0026                     i1l383:	
  3749                           
  3750                           ;PIC16F1827-ChargeStation5-02.c: 95: }
  3751                           ;PIC16F1827-ChargeStation5-02.c: 96: }
  3752                           ;PIC16F1827-ChargeStation5-02.c: 97: if (PIR1bits.TMR1IF) {
  3753  0026  0020               	movlb	0	; select bank0
  3754  0027  1C11               	btfss	17,0	;volatile
  3755  0028  28D2               	goto	i1l386
  3756                           
  3757                           ;PIC16F1827-ChargeStation5-02.c: 98: PIR1bits.TMR1IF = 0;
  3758  0029  1011               	bcf	17,0	;volatile
  3759                           
  3760                           ;PIC16F1827-ChargeStation5-02.c: 99: button_timer_interrupt(&sh_0, !RB0);
  3761  002A  1003               	clrc
  3762  002B  1C0D               	btfss	13,0	;volatile
  3763  002C  1403               	setc
  3764  002D  3000               	movlw	0
  3765  002E  1803               	btfsc	3,0
  3766  002F  3001               	movlw	1
  3767  0030  00F0               	movwf	button_timer_interrupt@sw_value
  3768  0031  30DB               	movlw	(low (_sh_0| 0))& (0+255)
  3769  0032  3185  2578  3180   	fcall	_button_timer_interrupt
  3770                           
  3771                           ;PIC16F1827-ChargeStation5-02.c: 100: button_timer_interrupt(&sh_1, !RB3);
  3772  0035  1003               	clrc
  3773  0036  0020               	movlb	0	; select bank0
  3774  0037  1D8D               	btfss	13,3	;volatile
  3775  0038  1403               	setc
  3776  0039  3000               	movlw	0
  3777  003A  1803               	btfsc	3,0
  3778  003B  3001               	movlw	1
  3779  003C  00F0               	movwf	button_timer_interrupt@sw_value
  3780  003D  30DF               	movlw	(low (_sh_1| 0))& (0+255)
  3781  003E  3185  2578  3180   	fcall	_button_timer_interrupt
  3782                           
  3783                           ;PIC16F1827-ChargeStation5-02.c: 101: button_timer_interrupt(&sh_2, !RB6);
  3784  0041  1003               	clrc
  3785  0042  0020               	movlb	0	; select bank0
  3786  0043  1F0D               	btfss	13,6	;volatile
  3787  0044  1403               	setc
  3788  0045  3000               	movlw	0
  3789  0046  1803               	btfsc	3,0
  3790  0047  3001               	movlw	1
  3791  0048  00F0               	movwf	button_timer_interrupt@sw_value
  3792  0049  30E3               	movlw	(low (_sh_2| 0))& (0+255)
  3793  004A  3185  2578  3180   	fcall	_button_timer_interrupt
  3794                           
  3795                           ;PIC16F1827-ChargeStation5-02.c: 102: button_timer_interrupt(&sw_0, !RA4);
  3796  004D  1003               	clrc
  3797  004E  0020               	movlb	0	; select bank0
  3798  004F  1E0C               	btfss	12,4	;volatile
  3799  0050  1403               	setc
  3800  0051  3000               	movlw	0
  3801  0052  1803               	btfsc	3,0
  3802  0053  3001               	movlw	1
  3803  0054  00F0               	movwf	button_timer_interrupt@sw_value
  3804  0055  30E7               	movlw	(low (_sw_0| 0))& (0+255)
  3805  0056  3185  2578  3180   	fcall	_button_timer_interrupt
  3806                           
  3807                           ;PIC16F1827-ChargeStation5-02.c: 103: button_timer_interrupt(&sw_1, !RA5);
  3808  0059  1003               	clrc
  3809  005A  0020               	movlb	0	; select bank0
  3810  005B  1E8C               	btfss	12,5	;volatile
  3811  005C  1403               	setc
  3812  005D  3000               	movlw	0
  3813  005E  1803               	btfsc	3,0
  3814  005F  3001               	movlw	1
  3815  0060  00F0               	movwf	button_timer_interrupt@sw_value
  3816  0061  3037               	movlw	(low (_sw_1| 0))& (0+255)
  3817  0062  3185  2578  3180   	fcall	_button_timer_interrupt
  3818                           
  3819                           ;PIC16F1827-ChargeStation5-02.c: 104: for (i = 0; i < 3; i++) {
  3820  0065  0020               	movlb	0	; select bank0
  3821  0066  01D5               	clrf	isr@i
  3822  0067  3003               	movlw	3
  3823  0068  0255               	subwf	isr@i,w
  3824  0069  1803               	btfsc	3,0
  3825  006A  28D2               	goto	i1l386
  3826  006B                     i1l2967:	
  3827                           
  3828                           ;PIC16F1827-ChargeStation5-02.c: 105: if (auto_cut_ON[i]) {
  3829  006B  0855               	movf	isr@i,w
  3830  006C  3E2C               	addlw	(low (_auto_cut_ON| 0))& (0+255)
  3831  006D  0086               	movwf	6
  3832  006E  0187               	clrf	7
  3833  006F  0801               	movf	1,w
  3834  0070  1903               	btfsc	3,2
  3835  0071  28CA               	goto	i1l2979
  3836                           
  3837                           ;PIC16F1827-ChargeStation5-02.c: 106: v[i] = 2 * ADC(i)*4 / 5;
  3838  0072  3005               	movlw	5
  3839  0073  00F6               	movwf	___lwdiv@divisor
  3840  0074  3000               	movlw	0
  3841  0075  00F7               	movwf	___lwdiv@divisor+1
  3842  0076  0855               	movf	isr@i,w
  3843  0077  318B  2327  3180   	fcall	_ADC
  3844  007A  0870               	movf	?_ADC,w
  3845  007B  0020               	movlb	0	; select bank0
  3846  007C  00CD               	movwf	??_isr
  3847  007D  0871               	movf	?_ADC+1,w
  3848  007E  00CE               	movwf	??_isr+1
  3849  007F  35CD               	lslf	??_isr,f
  3850  0080  0DCE               	rlf	??_isr+1,f
  3851  0081  35CD               	lslf	??_isr,f
  3852  0082  0DCE               	rlf	??_isr+1,f
  3853  0083  35CD               	lslf	??_isr,f
  3854  0084  0DCE               	rlf	??_isr+1,f
  3855  0085  084D               	movf	??_isr,w
  3856  0086  00F8               	movwf	___lwdiv@dividend
  3857  0087  084E               	movf	??_isr+1,w
  3858  0088  00F9               	movwf	___lwdiv@dividend+1
  3859  0089  318D  25A5  3180   	fcall	___lwdiv
  3860  008C  0020               	movlb	0	; select bank0
  3861  008D  3555               	lslf	isr@i,w
  3862  008E  3E26               	addlw	(low (_v| 0))& (0+255)
  3863  008F  0086               	movwf	6
  3864  0090  0187               	clrf	7
  3865  0091  0876               	movf	?___lwdiv,w
  3866  0092  3FC0               	movwi [0]fsr1
  3867  0093  0877               	movf	?___lwdiv+1,w
  3868  0094  3FC1               	movwi [1]fsr1
  3869                           
  3870                           ;PIC16F1827-ChargeStation5-02.c: 108: if (v[i] < 100) {
  3871  0095  3555               	lslf	isr@i,w
  3872  0096  3E26               	addlw	(low (_v| 0))& (0+255)
  3873  0097  0086               	movwf	6
  3874  0098  0187               	clrf	7
  3875  0099  3F40               	moviw [0]fsr1
  3876  009A  00CD               	movwf	??_isr
  3877  009B  3F41               	moviw [1]fsr1
  3878  009C  00CE               	movwf	??_isr+1
  3879  009D  3000               	movlw	0
  3880  009E  024E               	subwf	??_isr+1,w
  3881  009F  3064               	movlw	100
  3882  00A0  1903               	skipnz
  3883  00A1  024D               	subwf	??_isr,w
  3884  00A2  1803               	skipnc
  3885  00A3  28C3               	goto	i1l2977
  3886                           
  3887                           ;PIC16F1827-ChargeStation5-02.c: 109: cut[i]++;
  3888  00A4  3555               	lslf	isr@i,w
  3889  00A5  3EB4               	addlw	(low (_cut| 0))& (0+255)
  3890  00A6  0086               	movwf	6
  3891  00A7  0187               	clrf	7
  3892  00A8  3001               	movlw	1
  3893  00A9  0781               	addwf	1,f
  3894  00AA  3141               	addfsr 1,1
  3895  00AB  1803               	skipnc
  3896  00AC  0A81               	incf	1,f
  3897                           
  3898                           ;PIC16F1827-ChargeStation5-02.c: 110: if (cut[i] >= 30 * 6) {
  3899  00AD  3555               	lslf	isr@i,w
  3900  00AE  3EB4               	addlw	(low (_cut| 0))& (0+255)
  3901  00AF  0086               	movwf	6
  3902  00B0  0187               	clrf	7
  3903  00B1  3F40               	moviw [0]fsr1
  3904  00B2  00CD               	movwf	??_isr
  3905  00B3  3F41               	moviw [1]fsr1
  3906  00B4  00CE               	movwf	??_isr+1
  3907  00B5  3000               	movlw	0
  3908  00B6  024E               	subwf	??_isr+1,w
  3909  00B7  30B4               	movlw	180
  3910  00B8  1903               	skipnz
  3911  00B9  024D               	subwf	??_isr,w
  3912  00BA  1C03               	skipc
  3913  00BB  28CA               	goto	i1l2979
  3914                           
  3915                           ;PIC16F1827-ChargeStation5-02.c: 111: cut_flag[i] = 1;
  3916  00BC  0855               	movf	isr@i,w
  3917  00BD  3ECD               	addlw	(low (_cut_flag| 0))& (0+255)
  3918  00BE  0086               	movwf	6
  3919  00BF  0187               	clrf	7
  3920  00C0  0181               	clrf	1
  3921  00C1  0A81               	incf	1,f
  3922                           
  3923                           ;PIC16F1827-ChargeStation5-02.c: 112: }
  3924                           ;PIC16F1827-ChargeStation5-02.c: 113: } else {
  3925  00C2  28CA               	goto	i1l2979
  3926  00C3                     i1l2977:	
  3927                           
  3928                           ;PIC16F1827-ChargeStation5-02.c: 114: cut[i] = 0;
  3929  00C3  3555               	lslf	isr@i,w
  3930  00C4  3EB4               	addlw	(low (_cut| 0))& (0+255)
  3931  00C5  0086               	movwf	6
  3932  00C6  0187               	clrf	7
  3933  00C7  3000               	movlw	0
  3934  00C8  3FC0               	movwi [0]fsr1
  3935  00C9  3FC1               	movwi [1]fsr1
  3936  00CA                     i1l2979:	
  3937  00CA  3001               	movlw	1
  3938  00CB  00CD               	movwf	??_isr
  3939  00CC  084D               	movf	??_isr,w
  3940  00CD  07D5               	addwf	isr@i,f
  3941  00CE  3003               	movlw	3
  3942  00CF  0255               	subwf	isr@i,w
  3943  00D0  1C03               	skipc
  3944  00D1  286B               	goto	i1l2967
  3945  00D2                     i1l386:	
  3946                           
  3947                           ;PIC16F1827-ChargeStation5-02.c: 115: }
  3948                           ;PIC16F1827-ChargeStation5-02.c: 116: }
  3949                           ;PIC16F1827-ChargeStation5-02.c: 117: }
  3950                           ;PIC16F1827-ChargeStation5-02.c: 118: }
  3951                           ;PIC16F1827-ChargeStation5-02.c: 119: if (INTCONbits.TMR0IF) {
  3952  00D2  1D0B               	btfss	11,2	;volatile
  3953  00D3  297E               	goto	i1l399
  3954                           
  3955                           ;PIC16F1827-ChargeStation5-02.c: 120: INTCONbits.TMR0IF = 0;
  3956  00D4  110B               	bcf	11,2	;volatile
  3957                           
  3958                           ;PIC16F1827-ChargeStation5-02.c: 121: cnt0++;
  3959  00D5  3001               	movlw	1
  3960  00D6  07AF               	addwf	_cnt0,f
  3961  00D7  3000               	movlw	0
  3962  00D8  3DB0               	addwfc	_cnt0+1,f
  3963                           
  3964                           ;PIC16F1827-ChargeStation5-02.c: 122: if (cnt0 == 400) {
  3965  00D9  3090               	movlw	144
  3966  00DA  062F               	xorwf	_cnt0,w
  3967  00DB  1D03               	skipz
  3968  00DC  28EE               	goto	i1l2995
  3969  00DD  0330               	decf	_cnt0+1,w
  3970  00DE  1D03               	btfss	3,2
  3971  00DF  28EE               	goto	i1l2995
  3972                           
  3973                           ;PIC16F1827-ChargeStation5-02.c: 123: cnt0 = 0;
  3974  00E0  01AF               	clrf	_cnt0
  3975  00E1  01B0               	clrf	_cnt0+1
  3976                           
  3977                           ;PIC16F1827-ChargeStation5-02.c: 124: lchika();
  3978  00E2  3187  2740  3180   	fcall	_lchika
  3979                           
  3980                           ;PIC16F1827-ChargeStation5-02.c: 125: display(print_port, print_content);
  3981  00E5  0020               	movlb	0	; select bank0
  3982  00E6  0835               	movf	_print_content,w
  3983  00E7  00CD               	movwf	??_isr
  3984  00E8  084D               	movf	??_isr,w
  3985  00E9  00C9               	movwf	display@co
  3986  00EA  0836               	movf	_print_port,w
  3987  00EB  3181  21A0  3180   	fcall	_display
  3988  00EE                     i1l2995:	
  3989                           
  3990                           ;PIC16F1827-ChargeStation5-02.c: 126: }
  3991                           ;PIC16F1827-ChargeStation5-02.c: 127: cnt1s++;
  3992  00EE  3001               	movlw	1
  3993  00EF  0020               	movlb	0	; select bank0
  3994  00F0  07B1               	addwf	_cnt1s,f
  3995  00F1  3000               	movlw	0
  3996  00F2  3DB2               	addwfc	_cnt1s+1,f
  3997                           
  3998                           ;PIC16F1827-ChargeStation5-02.c: 128: if (cnt1s == 1953) {
  3999  00F3  30A1               	movlw	161
  4000  00F4  0631               	xorwf	_cnt1s,w
  4001  00F5  3007               	movlw	7
  4002  00F6  1903               	skipnz
  4003  00F7  0632               	xorwf	_cnt1s+1,w
  4004  00F8  1D03               	btfss	3,2
  4005  00F9  297E               	goto	i1l399
  4006                           
  4007                           ;PIC16F1827-ChargeStation5-02.c: 129: cnt1s = 0;
  4008  00FA  01B1               	clrf	_cnt1s
  4009  00FB  01B2               	clrf	_cnt1s+1
  4010                           
  4011                           ;PIC16F1827-ChargeStation5-02.c: 130: for (i = 0; i < 3; i++) {
  4012  00FC  01D5               	clrf	isr@i
  4013  00FD  3003               	movlw	3
  4014  00FE  0255               	subwf	isr@i,w
  4015  00FF  1803               	btfsc	3,0
  4016  0100  297E               	goto	i1l399
  4017  0101                     i1l3005:	
  4018                           
  4019                           ;PIC16F1827-ChargeStation5-02.c: 131: ss[i] += v[i];
  4020  0101  3555               	lslf	isr@i,w
  4021  0102  3E26               	addlw	(low (_v| 0))& (0+255)
  4022  0103  0086               	movwf	6
  4023  0104  0187               	clrf	7
  4024  0105  3F40               	moviw [0]fsr1
  4025  0106  00CD               	movwf	??_isr
  4026  0107  3F41               	moviw [1]fsr1
  4027  0108  00CE               	movwf	??_isr+1
  4028  0109  084D               	movf	??_isr,w
  4029  010A  00CF               	movwf	??_isr+2
  4030  010B  084E               	movf	??_isr+1,w
  4031  010C  00D0               	movwf	??_isr+3
  4032  010D  01D1               	clrf	??_isr+4
  4033  010E  01D2               	clrf	??_isr+5
  4034  010F  0855               	movf	isr@i,w
  4035  0110  00D3               	movwf	??_isr+6
  4036  0111  3001               	movlw	1
  4037  0112                     u333_25:	
  4038  0112  35D3               	lslf	??_isr+6,f
  4039  0113  3EFF               	addlw	-1
  4040  0114  1D03               	skipz
  4041  0115  2912               	goto	u333_25
  4042  0116  3553               	lslf	??_isr+6,w
  4043  0117  3EA0               	addlw	(low (_ss| 0))& (0+255)
  4044  0118  0086               	movwf	6
  4045  0119  0187               	clrf	7
  4046  011A  084F               	movf	??_isr+2,w
  4047  011B  0781               	addwf	1,f
  4048  011C  3141               	addfsr 1,1
  4049  011D  0850               	movf	??_isr+3,w
  4050  011E  3D81               	addwfc	1,f
  4051  011F  3141               	addfsr 1,1
  4052  0120  0851               	movf	??_isr+4,w
  4053  0121  3D81               	addwfc	1,f
  4054  0122  3141               	addfsr 1,1
  4055  0123  0852               	movf	??_isr+5,w
  4056  0124  3D81               	addwfc	1,f
  4057                           
  4058                           ;PIC16F1827-ChargeStation5-02.c: 132: s[i] = ss[i] / 3600;
  4059  0125  3000               	movlw	0
  4060  0126  00F3               	movwf	___lldiv@divisor+3
  4061  0127  3000               	movlw	0
  4062  0128  00F2               	movwf	___lldiv@divisor+2
  4063  0129  300E               	movlw	14
  4064  012A  00F1               	movwf	___lldiv@divisor+1
  4065  012B  3010               	movlw	16
  4066  012C  00F0               	movwf	___lldiv@divisor
  4067  012D  0855               	movf	isr@i,w
  4068  012E  00CD               	movwf	??_isr
  4069  012F  3001               	movlw	1
  4070  0130                     u334_25:	
  4071  0130  35CD               	lslf	??_isr,f
  4072  0131  3EFF               	addlw	-1
  4073  0132  1D03               	skipz
  4074  0133  2930               	goto	u334_25
  4075  0134  354D               	lslf	??_isr,w
  4076  0135  3EA0               	addlw	(low (_ss| 0))& (0+255)
  4077  0136  0086               	movwf	6
  4078  0137  0187               	clrf	7
  4079  0138  3F40               	moviw [0]fsr1
  4080  0139  00F4               	movwf	___lldiv@dividend
  4081  013A  3F41               	moviw [1]fsr1
  4082  013B  00F5               	movwf	___lldiv@dividend+1
  4083  013C  3F42               	moviw [2]fsr1
  4084  013D  00F6               	movwf	___lldiv@dividend+2
  4085  013E  3F43               	moviw [3]fsr1
  4086  013F  00F7               	movwf	___lldiv@dividend+3
  4087  0140  318E  26EE  3180   	fcall	___lldiv
  4088  0143  0020               	movlb	0	; select bank0
  4089  0144  3555               	lslf	isr@i,w
  4090  0145  3E20               	addlw	(low (_s| 0))& (0+255)
  4091  0146  0086               	movwf	6
  4092  0147  0187               	clrf	7
  4093  0148  0870               	movf	?___lldiv,w
  4094  0149  3FC0               	movwi [0]fsr1
  4095  014A  0871               	movf	?___lldiv+1,w
  4096  014B  3FC1               	movwi [1]fsr1
  4097                           
  4098                           ;PIC16F1827-ChargeStation5-02.c: 133: if (s[i] != sp[i]) {
  4099  014C  3555               	lslf	isr@i,w
  4100  014D  3EBA               	addlw	(low (_sp| 0))& (0+255)
  4101  014E  0086               	movwf	6
  4102  014F  0187               	clrf	7
  4103  0150  3F40               	moviw [0]fsr1
  4104  0151  00CD               	movwf	??_isr
  4105  0152  3F41               	moviw [1]fsr1
  4106  0153  00CE               	movwf	??_isr+1
  4107  0154  3555               	lslf	isr@i,w
  4108  0155  3E20               	addlw	(low (_s| 0))& (0+255)
  4109  0156  0086               	movwf	6
  4110  0157  0187               	clrf	7
  4111  0158  3F40               	moviw [0]fsr1
  4112  0159  00CF               	movwf	??_isr+2
  4113  015A  3F41               	moviw [1]fsr1
  4114  015B  00D0               	movwf	??_isr+3
  4115  015C  084E               	movf	??_isr+1,w
  4116  015D  0650               	xorwf	??_isr+3,w
  4117  015E  1D03               	skipz
  4118  015F  2962               	goto	u335_25
  4119  0160  084D               	movf	??_isr,w
  4120  0161  064F               	xorwf	??_isr+2,w
  4121  0162                     u335_25:	
  4122  0162  1903               	skipnz
  4123  0163  2976               	goto	i1l3015
  4124                           
  4125                           ;PIC16F1827-ChargeStation5-02.c: 134: change_flag[i] = 1;
  4126  0164  0855               	movf	isr@i,w
  4127  0165  3EC4               	addlw	(low (_change_flag| 0))& (0+255)
  4128  0166  0086               	movwf	6
  4129  0167  0187               	clrf	7
  4130  0168  0181               	clrf	1
  4131  0169  0A81               	incf	1,f
  4132                           
  4133                           ;PIC16F1827-ChargeStation5-02.c: 135: sp[i] = s[i];
  4134  016A  3555               	lslf	isr@i,w
  4135  016B  3E20               	addlw	(low (_s| 0))& (0+255)
  4136  016C  0086               	movwf	6
  4137  016D  0187               	clrf	7
  4138  016E  3555               	lslf	isr@i,w
  4139  016F  3EBA               	addlw	(low (_sp| 0))& (0+255)
  4140  0170  0084               	movwf	4
  4141  0171  0185               	clrf	5
  4142  0172  3F40               	moviw [0]fsr1
  4143  0173  3F80               	movwi [0]fsr0
  4144  0174  3F41               	moviw [1]fsr1
  4145  0175  3F81               	movwi [1]fsr0
  4146  0176                     i1l3015:	
  4147  0176  3001               	movlw	1
  4148  0177  00CD               	movwf	??_isr
  4149  0178  084D               	movf	??_isr,w
  4150  0179  07D5               	addwf	isr@i,f
  4151  017A  3003               	movlw	3
  4152  017B  0255               	subwf	isr@i,w
  4153  017C  1C03               	skipc
  4154  017D  2901               	goto	i1l3005
  4155  017E                     i1l399:	
  4156  017E  0854               	movf	??_isr+7,w
  4157  017F  00FF               	movwf	127
  4158  0180  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4159  0181  0009               	retfie
  4160  0182                     __end_of_isr:	
  4161                           
  4162                           	psect	text24
  4163  0E4E                     __ptext24:	
  4164 ;; *************** function _ringbuf_pop *****************
  4165 ;; Defined at:
  4166 ;;		line 64 in file "../My_header\My_ringbuf.h"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  rb              1    wreg     PTR struct ringbuf
  4169 ;;		 -> tx_buf(8), 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  rb              1    1[BANK0 ] PTR struct ringbuf
  4172 ;;		 -> tx_buf(8), 
  4173 ;;  ret             1    0[BANK0 ] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      unsigned char 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4183 ;;      Params:         0       0       0       0       0       0
  4184 ;;      Locals:         0       2       0       0       0       0
  4185 ;;      Temps:          6       0       0       0       0       0
  4186 ;;      Totals:         6       2       0       0       0       0
  4187 ;;Total ram usage:        8 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    1
  4190 ;; This function calls:
  4191 ;;		_ringbuf_num
  4192 ;; This function is called by:
  4193 ;;		_isr
  4194 ;;		_interrupt_TXIF
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _ringbuf_pop
  4200  0E4E                     _ringbuf_pop:	
  4201                           
  4202                           ;incstack = 0
  4203                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4204                           ;ringbuf_pop@rb stored from wreg
  4205  0E4E  0020               	movlb	0	; select bank0
  4206  0E4F  00BC               	movwf	ringbuf_pop@rb
  4207                           
  4208                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  4209  0E50  083C               	movf	ringbuf_pop@rb,w
  4210  0E51  318F  2740  318E   	fcall	_ringbuf_num
  4211  0E54  0870               	movf	?_ringbuf_num,w
  4212  0E55  0471               	iorwf	?_ringbuf_num+1,w
  4213  0E56  1903               	btfsc	3,2
  4214  0E57  2E9B               	goto	i1l2491
  4215                           
  4216                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  4217  0E58  0020               	movlb	0	; select bank0
  4218  0E59  083C               	movf	ringbuf_pop@rb,w
  4219  0E5A  0086               	movwf	6
  4220  0E5B  0187               	clrf	7
  4221  0E5C  083C               	movf	ringbuf_pop@rb,w
  4222  0E5D  3E06               	addlw	6
  4223  0E5E  0084               	movwf	4
  4224  0E5F  0185               	clrf	5
  4225  0E60  0800               	movf	0,w
  4226  0E61  0701               	addwf	1,w
  4227  0E62  00F7               	movwf	??_ringbuf_pop
  4228  0E63  0877               	movf	??_ringbuf_pop,w
  4229  0E64  0086               	movwf	6
  4230  0E65  0187               	clrf	7
  4231  0E66  0801               	movf	1,w
  4232  0E67  00F8               	movwf	??_ringbuf_pop+1
  4233  0E68  0878               	movf	??_ringbuf_pop+1,w
  4234  0E69  00BB               	movwf	ringbuf_pop@ret
  4235                           
  4236                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  4237  0E6A  083C               	movf	ringbuf_pop@rb,w
  4238  0E6B  3E02               	addlw	2
  4239  0E6C  0086               	movwf	6
  4240  0E6D  0187               	clrf	7
  4241  0E6E  3F40               	moviw [0]fsr1
  4242  0E6F  00F7               	movwf	??_ringbuf_pop
  4243  0E70  3F41               	moviw [1]fsr1
  4244  0E71  00F8               	movwf	??_ringbuf_pop+1
  4245  0E72  083C               	movf	ringbuf_pop@rb,w
  4246  0E73  3E06               	addlw	6
  4247  0E74  0086               	movwf	6
  4248  0E75  0187               	clrf	7
  4249  0E76  3F40               	moviw [0]fsr1
  4250  0E77  00F9               	movwf	??_ringbuf_pop+2
  4251  0E78  3F41               	moviw [1]fsr1
  4252  0E79  00FA               	movwf	??_ringbuf_pop+3
  4253  0E7A  0879               	movf	??_ringbuf_pop+2,w
  4254  0E7B  3E01               	addlw	1
  4255  0E7C  00FB               	movwf	??_ringbuf_pop+4
  4256  0E7D  3000               	movlw	0
  4257  0E7E  3D7A               	addwfc	??_ringbuf_pop+3,w
  4258  0E7F  00FC               	movwf	??_ringbuf_pop+5
  4259  0E80  0878               	movf	??_ringbuf_pop+1,w
  4260  0E81  027C               	subwf	??_ringbuf_pop+5,w
  4261  0E82  1D03               	skipz
  4262  0E83  2E86               	goto	u249_25
  4263  0E84  0877               	movf	??_ringbuf_pop,w
  4264  0E85  027B               	subwf	??_ringbuf_pop+4,w
  4265  0E86                     u249_25:	
  4266  0E86  1803               	skipnc
  4267  0E87  2E92               	goto	i1l2483
  4268                           
  4269                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  4270  0E88  083C               	movf	ringbuf_pop@rb,w
  4271  0E89  3E06               	addlw	6
  4272  0E8A  0086               	movwf	6
  4273  0E8B  0187               	clrf	7
  4274  0E8C  3001               	movlw	1
  4275  0E8D  0781               	addwf	1,f
  4276  0E8E  3141               	addfsr 1,1
  4277  0E8F  1803               	skipnc
  4278  0E90  0A81               	incf	1,f
  4279                           
  4280                           ;My_header\My_ringbuf.h: 69: } else {
  4281  0E91  2E99               	goto	i1l2485
  4282  0E92                     i1l2483:	
  4283                           
  4284                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  4285  0E92  083C               	movf	ringbuf_pop@rb,w
  4286  0E93  3E06               	addlw	6
  4287  0E94  0086               	movwf	6
  4288  0E95  0187               	clrf	7
  4289  0E96  3000               	movlw	0
  4290  0E97  3FC0               	movwi [0]fsr1
  4291  0E98  3FC1               	movwi [1]fsr1
  4292  0E99                     i1l2485:	
  4293                           
  4294                           ;My_header\My_ringbuf.h: 71: }
  4295                           ;My_header\My_ringbuf.h: 72: return ret;
  4296  0E99  083B               	movf	ringbuf_pop@ret,w
  4297                           
  4298                           ;My_header\My_ringbuf.h: 73: } else {
  4299  0E9A  0008               	return
  4300  0E9B                     i1l2491:	
  4301                           
  4302                           ;My_header\My_ringbuf.h: 74: return 0;
  4303  0E9B  3000               	movlw	0
  4304  0E9C  0008               	return
  4305  0E9D                     __end_of_ringbuf_pop:	
  4306                           
  4307                           	psect	text25
  4308  0F40                     __ptext25:	
  4309 ;; *************** function _ringbuf_num *****************
  4310 ;; Defined at:
  4311 ;;		line 31 in file "../My_header\My_ringbuf.h"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  rb              1    wreg     PTR struct ringbuf
  4314 ;;		 -> tx_buf(8), 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  rb              1    6[COMMON] PTR struct ringbuf
  4317 ;;		 -> tx_buf(8), 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2    0[COMMON] unsigned int 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4327 ;;      Params:         2       0       0       0       0       0
  4328 ;;      Locals:         1       0       0       0       0       0
  4329 ;;      Temps:          4       0       0       0       0       0
  4330 ;;      Totals:         7       0       0       0       0       0
  4331 ;;Total ram usage:        7 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; This function calls:
  4334 ;;		Nothing
  4335 ;; This function is called by:
  4336 ;;		_ringbuf_pop
  4337 ;;		_isr
  4338 ;;		_ringbuf_put
  4339 ;;		_ringbuf_backspace
  4340 ;;		_interrupt_TXIF
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function _ringbuf_num
  4346  0F40                     _ringbuf_num:	
  4347                           
  4348                           ;incstack = 0
  4349                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  4350                           ;ringbuf_num@rb stored from wreg
  4351  0F40  00F6               	movwf	ringbuf_num@rb
  4352                           
  4353                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  4354  0F41  0876               	movf	ringbuf_num@rb,w
  4355  0F42  3E06               	addlw	6
  4356  0F43  0086               	movwf	6
  4357  0F44  0187               	clrf	7
  4358  0F45  3F40               	moviw [0]fsr1
  4359  0F46  00F2               	movwf	??_ringbuf_num
  4360  0F47  3F41               	moviw [1]fsr1
  4361  0F48  00F3               	movwf	??_ringbuf_num+1
  4362  0F49  0876               	movf	ringbuf_num@rb,w
  4363  0F4A  3E04               	addlw	4
  4364  0F4B  0086               	movwf	6
  4365  0F4C  0187               	clrf	7
  4366  0F4D  3F40               	moviw [0]fsr1
  4367  0F4E  00F4               	movwf	??_ringbuf_num+2
  4368  0F4F  3F41               	moviw [1]fsr1
  4369  0F50  00F5               	movwf	??_ringbuf_num+3
  4370  0F51  0873               	movf	??_ringbuf_num+1,w
  4371  0F52  0275               	subwf	??_ringbuf_num+3,w
  4372  0F53  1D03               	skipz
  4373  0F54  2F57               	goto	u192_25
  4374  0F55  0872               	movf	??_ringbuf_num,w
  4375  0F56  0274               	subwf	??_ringbuf_num+2,w
  4376  0F57                     u192_25:	
  4377  0F57  1C03               	skipc
  4378  0F58  2F71               	goto	i1l2217
  4379                           
  4380                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  4381  0F59  0876               	movf	ringbuf_num@rb,w
  4382  0F5A  3E04               	addlw	4
  4383  0F5B  0086               	movwf	6
  4384  0F5C  0187               	clrf	7
  4385  0F5D  0876               	movf	ringbuf_num@rb,w
  4386  0F5E  3E06               	addlw	6
  4387  0F5F  0084               	movwf	4
  4388  0F60  0185               	clrf	5
  4389  0F61  3F00               	moviw [0]fsr0
  4390  0F62  00F2               	movwf	??_ringbuf_num
  4391  0F63  3F01               	moviw [1]fsr0
  4392  0F64  00F3               	movwf	??_ringbuf_num+1
  4393  0F65  09F2               	comf	??_ringbuf_num,f
  4394  0F66  09F3               	comf	??_ringbuf_num+1,f
  4395  0F67  0AF2               	incf	??_ringbuf_num,f
  4396  0F68  1903               	skipnz
  4397  0F69  0AF3               	incf	??_ringbuf_num+1,f
  4398  0F6A  3F40               	moviw [0]fsr1
  4399  0F6B  0772               	addwf	??_ringbuf_num,w
  4400  0F6C  00F0               	movwf	?_ringbuf_num
  4401  0F6D  3F41               	moviw [1]fsr1
  4402  0F6E  3D73               	addwfc	??_ringbuf_num+1,w
  4403  0F6F  00F1               	movwf	?_ringbuf_num+1
  4404                           
  4405                           ;My_header\My_ringbuf.h: 34: } else {
  4406  0F70  0008               	return
  4407  0F71                     i1l2217:	
  4408                           
  4409                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  4410  0F71  0876               	movf	ringbuf_num@rb,w
  4411  0F72  3E04               	addlw	4
  4412  0F73  0086               	movwf	6
  4413  0F74  0187               	clrf	7
  4414  0F75  0876               	movf	ringbuf_num@rb,w
  4415  0F76  3E06               	addlw	6
  4416  0F77  0084               	movwf	4
  4417  0F78  0185               	clrf	5
  4418  0F79  3F00               	moviw [0]fsr0
  4419  0F7A  00F2               	movwf	??_ringbuf_num
  4420  0F7B  3F01               	moviw [1]fsr0
  4421  0F7C  00F3               	movwf	??_ringbuf_num+1
  4422  0F7D  09F2               	comf	??_ringbuf_num,f
  4423  0F7E  09F3               	comf	??_ringbuf_num+1,f
  4424  0F7F  0AF2               	incf	??_ringbuf_num,f
  4425  0F80  1903               	skipnz
  4426  0F81  0AF3               	incf	??_ringbuf_num+1,f
  4427  0F82  0876               	movf	ringbuf_num@rb,w
  4428  0F83  3E02               	addlw	2
  4429  0F84  0084               	movwf	4
  4430  0F85  0185               	clrf	5
  4431  0F86  3F00               	moviw [0]fsr0
  4432  0F87  0772               	addwf	??_ringbuf_num,w
  4433  0F88  00F4               	movwf	??_ringbuf_num+2
  4434  0F89  3F01               	moviw [1]fsr0
  4435  0F8A  3D73               	addwfc	??_ringbuf_num+1,w
  4436  0F8B  00F5               	movwf	??_ringbuf_num+3
  4437  0F8C  3F40               	moviw [0]fsr1
  4438  0F8D  0774               	addwf	??_ringbuf_num+2,w
  4439  0F8E  00F0               	movwf	?_ringbuf_num
  4440  0F8F  3F41               	moviw [1]fsr1
  4441  0F90  3D75               	addwfc	??_ringbuf_num+3,w
  4442  0F91  00F1               	movwf	?_ringbuf_num+1
  4443  0F92  0008               	return
  4444  0F93                     __end_of_ringbuf_num:	
  4445                           
  4446                           	psect	text26
  4447  0740                     __ptext26:	
  4448 ;; *************** function _lchika *****************
  4449 ;; Defined at:
  4450 ;;		line 142 in file "PIC16F1827-ChargeStation5-02.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;		None
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  i               1    4[BANK0 ] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;		None               void
  4457 ;; Registers used:
  4458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4464 ;;      Params:         0       0       0       0       0       0
  4465 ;;      Locals:         0       1       0       0       0       0
  4466 ;;      Temps:          0       4       0       0       0       0
  4467 ;;      Totals:         0       5       0       0       0       0
  4468 ;;Total ram usage:        5 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    1
  4471 ;; This function calls:
  4472 ;;		___awdiv
  4473 ;;		___lwdiv
  4474 ;;		i1_LED
  4475 ;; This function is called by:
  4476 ;;		_isr
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           
  4481                           ;psect for function _lchika
  4482  0740                     _lchika:	
  4483                           
  4484                           ;PIC16F1827-ChargeStation5-02.c: 143: uint8_t i;
  4485                           ;PIC16F1827-ChargeStation5-02.c: 144: for (i = 0; i < 3; i++) {
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in _lchika: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4489  0740  0020               	movlb	0	; select bank0
  4490  0741  01BF               	clrf	lchika@i
  4491  0742                     L3:	
  4492  0742  3003               	movlw	3
  4493  0743  023F               	subwf	lchika@i,w
  4494  0744  1803               	btfsc	3,0
  4495  0745  0008               	return
  4496                           
  4497                           ;PIC16F1827-ChargeStation5-02.c: 145: cnt[i]++;
  4498  0746  3001               	movlw	1
  4499  0747  00BB               	movwf	??_lchika
  4500  0748  083F               	movf	lchika@i,w
  4501  0749  3EC7               	addlw	(low (_cnt| 0))& (0+255)
  4502  074A  0086               	movwf	6
  4503  074B  0187               	clrf	7
  4504  074C  083B               	movf	??_lchika,w
  4505  074D  0781               	addwf	1,f
  4506                           
  4507                           ;PIC16F1827-ChargeStation5-02.c: 147: if (cnt[i] % 2 == 1) {
  4508  074E  083F               	movf	lchika@i,w
  4509  074F  3EC7               	addlw	(low (_cnt| 0))& (0+255)
  4510  0750  0086               	movwf	6
  4511  0751  0187               	clrf	7
  4512  0752  1C01               	btfss	1,0
  4513  0753  2F5A               	goto	i1l2593
  4514                           
  4515                           ;PIC16F1827-ChargeStation5-02.c: 148: LED(i, 0);
  4516  0754  01F0               	clrf	i1LED@value
  4517  0755  083F               	movf	lchika@i,w
  4518  0756  318C  244A  3187   	fcall	i1_LED
  4519                           
  4520                           ;PIC16F1827-ChargeStation5-02.c: 149: } else {
  4521  0759  2FAF               	goto	i1l2607
  4522  075A                     i1l2593:	
  4523                           
  4524                           ;PIC16F1827-ChargeStation5-02.c: 150: if (cnt[i] / 2 <= v[i] / 100) {
  4525  075A  3064               	movlw	100
  4526  075B  00F6               	movwf	___lwdiv@divisor
  4527  075C  3000               	movlw	0
  4528  075D  00F7               	movwf	___lwdiv@divisor+1
  4529  075E  0020               	movlb	0	; select bank0
  4530  075F  353F               	lslf	lchika@i,w
  4531  0760  3E26               	addlw	(low (_v| 0))& (0+255)
  4532  0761  0086               	movwf	6
  4533  0762  0187               	clrf	7
  4534  0763  3F40               	moviw [0]fsr1
  4535  0764  00F8               	movwf	___lwdiv@dividend
  4536  0765  3F41               	moviw [1]fsr1
  4537  0766  00F9               	movwf	___lwdiv@dividend+1
  4538  0767  318D  25A5  3187   	fcall	___lwdiv
  4539  076A  0876               	movf	?___lwdiv,w
  4540  076B  0020               	movlb	0	; select bank0
  4541  076C  00BB               	movwf	??_lchika
  4542  076D  0877               	movf	?___lwdiv+1,w
  4543  076E  00BC               	movwf	??_lchika+1
  4544  076F  3002               	movlw	2
  4545  0770  00F0               	movwf	___awdiv@divisor
  4546  0771  3000               	movlw	0
  4547  0772  00F1               	movwf	___awdiv@divisor+1
  4548  0773  083F               	movf	lchika@i,w
  4549  0774  3EC7               	addlw	(low (_cnt| 0))& (0+255)
  4550  0775  0086               	movwf	6
  4551  0776  0187               	clrf	7
  4552  0777  0801               	movf	1,w
  4553  0778  00BD               	movwf	??_lchika+2
  4554  0779  01BE               	clrf	??_lchika+3
  4555  077A  083D               	movf	??_lchika+2,w
  4556  077B  00F2               	movwf	___awdiv@dividend
  4557  077C  083E               	movf	??_lchika+3,w
  4558  077D  00F3               	movwf	___awdiv@dividend+1
  4559  077E  318E  269D  3187   	fcall	___awdiv
  4560  0781  0871               	movf	?___awdiv+1,w
  4561  0782  0020               	movlb	0	; select bank0
  4562  0783  023C               	subwf	??_lchika+1,w
  4563  0784  1D03               	skipz
  4564  0785  2F88               	goto	u273_25
  4565  0786  0870               	movf	?___awdiv,w
  4566  0787  023B               	subwf	??_lchika,w
  4567  0788                     u273_25:	
  4568  0788  1C03               	skipc
  4569  0789  2F94               	goto	i1l2599
  4570                           
  4571                           ;PIC16F1827-ChargeStation5-02.c: 151: LED(i, 1);
  4572  078A  01F0               	clrf	i1LED@value
  4573  078B  0AF0               	incf	i1LED@value,f
  4574  078C  083F               	movf	lchika@i,w
  4575  078D  318C  244A  3187   	fcall	i1_LED
  4576                           
  4577                           ;PIC16F1827-ChargeStation5-02.c: 152: cntf[i] = 0;
  4578  0790  0020               	movlb	0	; select bank0
  4579  0791  083F               	movf	lchika@i,w
  4580  0792  3ECA               	addlw	(low (_cntf| 0))& (0+255)
  4581  0793  2FAC               	goto	L2
  4582  0794                     i1l2599:	
  4583                           ;PIC16F1827-ChargeStation5-02.c: 153: } else {
  4584                           
  4585                           
  4586                           ;PIC16F1827-ChargeStation5-02.c: 154: cntf[i]++;
  4587  0794  3001               	movlw	1
  4588  0795  00BB               	movwf	??_lchika
  4589  0796  083F               	movf	lchika@i,w
  4590  0797  3ECA               	addlw	(low (_cntf| 0))& (0+255)
  4591  0798  0086               	movwf	6
  4592  0799  0187               	clrf	7
  4593  079A  083B               	movf	??_lchika,w
  4594  079B  0781               	addwf	1,f
  4595                           
  4596                           ;PIC16F1827-ChargeStation5-02.c: 155: LED(i, 0);
  4597  079C  01F0               	clrf	i1LED@value
  4598  079D  083F               	movf	lchika@i,w
  4599  079E  318C  244A  3187   	fcall	i1_LED
  4600                           
  4601                           ;PIC16F1827-ChargeStation5-02.c: 156: if (cntf[i] >= 2) {
  4602  07A1  0020               	movlb	0	; select bank0
  4603  07A2  083F               	movf	lchika@i,w
  4604  07A3  3ECA               	addlw	(low (_cntf| 0))& (0+255)
  4605  07A4  0086               	movwf	6
  4606  07A5  0187               	clrf	7
  4607  07A6  3002               	movlw	2
  4608  07A7  0201               	subwf	1,w
  4609  07A8  1C03               	skipc
  4610  07A9  2FAF               	goto	i1l2607
  4611                           
  4612                           ;PIC16F1827-ChargeStation5-02.c: 157: cnt[i] = 0;
  4613  07AA  083F               	movf	lchika@i,w
  4614  07AB  3EC7               	addlw	(low (_cnt| 0))& (0+255)
  4615  07AC                     L2:	
  4616  07AC  0086               	movwf	6
  4617  07AD  0187               	clrf	7
  4618  07AE  0181               	clrf	1
  4619  07AF                     i1l2607:	
  4620  07AF  3001               	movlw	1
  4621  07B0  0020               	movlb	0	; select bank0
  4622  07B1  00BB               	movwf	??_lchika
  4623  07B2  083B               	movf	??_lchika,w
  4624  07B3  07BF               	addwf	lchika@i,f
  4625  07B4  2F42               	goto	L3
  4626  07B5                     __end_of_lchika:	
  4627                           
  4628                           	psect	text27
  4629  0C4A                     __ptext27:	
  4630 ;; *************** function i1_LED *****************
  4631 ;; Defined at:
  4632 ;;		line 259 in file "PIC16F1827-ChargeStation5-02.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  b               1    wreg     unsigned char 
  4635 ;;  value           1    0[COMMON] unsigned char 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  b               1    1[COMMON] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;		None               void
  4640 ;; Registers used:
  4641 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4647 ;;      Params:         1       0       0       0       0       0
  4648 ;;      Locals:         1       0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0
  4650 ;;      Totals:         2       0       0       0       0       0
  4651 ;;Total ram usage:        2 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_lchika
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function i1_LED
  4662  0C4A                     i1_LED:	
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in i1_LED: [wreg-fsr0h+status,2+status,0]
  4666                           ;i1LED@b stored from wreg
  4667  0C4A  00F1               	movwf	i1LED@b
  4668                           
  4669                           ;PIC16F1827-ChargeStation5-02.c: 260: switch (b) {
  4670  0C4B  2C64               	goto	i1l2461
  4671  0C4C                     i1l450:	
  4672                           ;PIC16F1827-ChargeStation5-02.c: 261: case 0:
  4673                           
  4674                           
  4675                           ;PIC16F1827-ChargeStation5-02.c: 262: LATA3 = value;
  4676  0C4C  1C70               	btfss	i1LED@value,0
  4677  0C4D  2C51               	goto	u241_20
  4678  0C4E  0022               	movlb	2	; select bank2
  4679  0C4F  158C               	bsf	12,3	;volatile
  4680  0C50  0008               	return
  4681  0C51                     u241_20:	
  4682  0C51  0022               	movlb	2	; select bank2
  4683  0C52  118C               	bcf	12,3	;volatile
  4684                           
  4685                           ;PIC16F1827-ChargeStation5-02.c: 263: break;
  4686  0C53  0008               	return
  4687  0C54                     i1l452:	
  4688                           ;PIC16F1827-ChargeStation5-02.c: 264: case 1:
  4689                           
  4690                           
  4691                           ;PIC16F1827-ChargeStation5-02.c: 265: LATA6 = value;
  4692  0C54  1C70               	btfss	i1LED@value,0
  4693  0C55  2C59               	goto	u243_20
  4694  0C56  0022               	movlb	2	; select bank2
  4695  0C57  170C               	bsf	12,6	;volatile
  4696  0C58  0008               	return
  4697  0C59                     u243_20:	
  4698  0C59  0022               	movlb	2	; select bank2
  4699  0C5A  130C               	bcf	12,6	;volatile
  4700                           
  4701                           ;PIC16F1827-ChargeStation5-02.c: 266: break;
  4702  0C5B  0008               	return
  4703  0C5C                     i1l453:	
  4704                           ;PIC16F1827-ChargeStation5-02.c: 267: case 2:
  4705                           
  4706                           
  4707                           ;PIC16F1827-ChargeStation5-02.c: 268: LATA7 = value;
  4708  0C5C  1C70               	btfss	i1LED@value,0
  4709  0C5D  2C61               	goto	u245_20
  4710  0C5E  0022               	movlb	2	; select bank2
  4711  0C5F  178C               	bsf	12,7	;volatile
  4712  0C60  0008               	return
  4713  0C61                     u245_20:	
  4714  0C61  0022               	movlb	2	; select bank2
  4715  0C62  138C               	bcf	12,7	;volatile
  4716                           
  4717                           ;PIC16F1827-ChargeStation5-02.c: 272: }
  4718                           
  4719                           ;PIC16F1827-ChargeStation5-02.c: 271: break;
  4720                           
  4721                           ;PIC16F1827-ChargeStation5-02.c: 270: default:
  4722                           
  4723                           ;PIC16F1827-ChargeStation5-02.c: 269: break;
  4724  0C63  0008               	return
  4725  0C64                     i1l2461:	
  4726  0C64  0871               	movf	i1LED@b,w
  4727                           
  4728                           ; Switch size 1, requested type "space"
  4729                           ; Number of cases is 3, Range of values is 0 to 2
  4730                           ; switch strategies available:
  4731                           ; Name         Instructions Cycles
  4732                           ; simple_byte           10     6 (average)
  4733                           ; direct_byte           12     6 (fixed)
  4734                           ; jumptable            260     6 (fixed)
  4735                           ;	Chosen strategy is simple_byte
  4736  0C65  3A00               	xorlw	0	; case 0
  4737  0C66  1903               	skipnz
  4738  0C67  2C4C               	goto	i1l450
  4739  0C68  3A01               	xorlw	1	; case 1
  4740  0C69  1903               	skipnz
  4741  0C6A  2C54               	goto	i1l452
  4742  0C6B  3A03               	xorlw	3	; case 2
  4743  0C6C  1903               	skipnz
  4744  0C6D  2C5C               	goto	i1l453
  4745  0C6E  2C6F               	goto	i1l455
  4746  0C6F                     i1l455:	
  4747  0C6F  0008               	return
  4748  0C70                     __end_ofi1_LED:	
  4749                           
  4750                           	psect	text28
  4751  0E9D                     __ptext28:	
  4752 ;; *************** function ___awdiv *****************
  4753 ;; Defined at:
  4754 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  divisor         2    0[COMMON] int 
  4757 ;;  dividend        2    2[COMMON] int 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  quotient        2    7[COMMON] int 
  4760 ;;  sign            1    6[COMMON] unsigned char 
  4761 ;;  counter         1    5[COMMON] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  2    0[COMMON] int 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4771 ;;      Params:         4       0       0       0       0       0
  4772 ;;      Locals:         4       0       0       0       0       0
  4773 ;;      Temps:          1       0       0       0       0       0
  4774 ;;      Totals:         9       0       0       0       0       0
  4775 ;;Total ram usage:        9 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_lchika
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           
  4785                           ;psect for function ___awdiv
  4786  0E9D                     ___awdiv:	
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4790  0E9D  01F6               	clrf	___awdiv@sign
  4791  0E9E  1FF1               	btfss	___awdiv@divisor+1,7
  4792  0E9F  2EA7               	goto	i1l2369
  4793  0EA0  09F0               	comf	___awdiv@divisor,f
  4794  0EA1  09F1               	comf	___awdiv@divisor+1,f
  4795  0EA2  0AF0               	incf	___awdiv@divisor,f
  4796  0EA3  1903               	skipnz
  4797  0EA4  0AF1               	incf	___awdiv@divisor+1,f
  4798  0EA5  01F6               	clrf	___awdiv@sign
  4799  0EA6  0AF6               	incf	___awdiv@sign,f
  4800  0EA7                     i1l2369:	
  4801  0EA7  1FF3               	btfss	___awdiv@dividend+1,7
  4802  0EA8  2EB2               	goto	i1l2375
  4803  0EA9  09F2               	comf	___awdiv@dividend,f
  4804  0EAA  09F3               	comf	___awdiv@dividend+1,f
  4805  0EAB  0AF2               	incf	___awdiv@dividend,f
  4806  0EAC  1903               	skipnz
  4807  0EAD  0AF3               	incf	___awdiv@dividend+1,f
  4808  0EAE  3001               	movlw	1
  4809  0EAF  00F4               	movwf	??___awdiv
  4810  0EB0  0874               	movf	??___awdiv,w
  4811  0EB1  06F6               	xorwf	___awdiv@sign,f
  4812  0EB2                     i1l2375:	
  4813  0EB2  01F7               	clrf	___awdiv@quotient
  4814  0EB3  01F8               	clrf	___awdiv@quotient+1
  4815  0EB4  0870               	movf	___awdiv@divisor,w
  4816  0EB5  0471               	iorwf	___awdiv@divisor+1,w
  4817  0EB6  1903               	btfsc	3,2
  4818  0EB7  2EE1               	goto	i1l2397
  4819  0EB8  01F5               	clrf	___awdiv@counter
  4820  0EB9  0AF5               	incf	___awdiv@counter,f
  4821  0EBA                     i1l2385:	
  4822  0EBA  1BF1               	btfsc	___awdiv@divisor+1,7
  4823  0EBB  2EC6               	goto	i1l2387
  4824  0EBC  3001               	movlw	1
  4825  0EBD                     u221_25:	
  4826  0EBD  35F0               	lslf	___awdiv@divisor,f
  4827  0EBE  0DF1               	rlf	___awdiv@divisor+1,f
  4828  0EBF  0B89               	decfsz	9,f
  4829  0EC0  2EBD               	goto	u221_25
  4830  0EC1  3001               	movlw	1
  4831  0EC2  00F4               	movwf	??___awdiv
  4832  0EC3  0874               	movf	??___awdiv,w
  4833  0EC4  07F5               	addwf	___awdiv@counter,f
  4834  0EC5  2EBA               	goto	i1l2385
  4835  0EC6                     i1l2387:	
  4836  0EC6  3001               	movlw	1
  4837  0EC7                     u223_25:	
  4838  0EC7  35F7               	lslf	___awdiv@quotient,f
  4839  0EC8  0DF8               	rlf	___awdiv@quotient+1,f
  4840  0EC9  0B89               	decfsz	9,f
  4841  0ECA  2EC7               	goto	u223_25
  4842  0ECB  0871               	movf	___awdiv@divisor+1,w
  4843  0ECC  0273               	subwf	___awdiv@dividend+1,w
  4844  0ECD  1D03               	skipz
  4845  0ECE  2ED1               	goto	u224_25
  4846  0ECF  0870               	movf	___awdiv@divisor,w
  4847  0ED0  0272               	subwf	___awdiv@dividend,w
  4848  0ED1                     u224_25:	
  4849  0ED1  1C03               	skipc
  4850  0ED2  2ED8               	goto	i1l2393
  4851  0ED3  0870               	movf	___awdiv@divisor,w
  4852  0ED4  02F2               	subwf	___awdiv@dividend,f
  4853  0ED5  0871               	movf	___awdiv@divisor+1,w
  4854  0ED6  3BF3               	subwfb	___awdiv@dividend+1,f
  4855  0ED7  1477               	bsf	___awdiv@quotient,0
  4856  0ED8                     i1l2393:	
  4857  0ED8  3001               	movlw	1
  4858  0ED9                     u225_25:	
  4859  0ED9  36F1               	lsrf	___awdiv@divisor+1,f
  4860  0EDA  0CF0               	rrf	___awdiv@divisor,f
  4861  0EDB  0B89               	decfsz	9,f
  4862  0EDC  2ED9               	goto	u225_25
  4863  0EDD  3001               	movlw	1
  4864  0EDE  02F5               	subwf	___awdiv@counter,f
  4865  0EDF  1D03               	btfss	3,2
  4866  0EE0  2EC6               	goto	i1l2387
  4867  0EE1                     i1l2397:	
  4868  0EE1  0876               	movf	___awdiv@sign,w
  4869  0EE2  1903               	btfsc	3,2
  4870  0EE3  2EE9               	goto	i1l2401
  4871  0EE4  09F7               	comf	___awdiv@quotient,f
  4872  0EE5  09F8               	comf	___awdiv@quotient+1,f
  4873  0EE6  0AF7               	incf	___awdiv@quotient,f
  4874  0EE7  1903               	skipnz
  4875  0EE8  0AF8               	incf	___awdiv@quotient+1,f
  4876  0EE9                     i1l2401:	
  4877  0EE9  0878               	movf	___awdiv@quotient+1,w
  4878  0EEA  00F1               	movwf	?___awdiv+1
  4879  0EEB  0877               	movf	___awdiv@quotient,w
  4880  0EEC  00F0               	movwf	?___awdiv
  4881  0EED  0008               	return
  4882  0EEE                     __end_of___awdiv:	
  4883                           
  4884                           	psect	text29
  4885  01A0                     __ptext29:	
  4886 ;; *************** function _display *****************
  4887 ;; Defined at:
  4888 ;;		line 164 in file "PIC16F1827-ChargeStation5-02.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  i               1    wreg     unsigned char 
  4891 ;;  co              1   14[BANK0 ] unsigned char 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  i               1   17[BANK0 ] unsigned char 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;		None               void
  4896 ;; Registers used:
  4897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4903 ;;      Params:         0       1       0       0       0       0
  4904 ;;      Locals:         0       1       0       0       0       0
  4905 ;;      Temps:          0       2       0       0       0       0
  4906 ;;      Totals:         0       4       0       0       0       0
  4907 ;;Total ram usage:        4 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    4
  4910 ;; This function calls:
  4911 ;;		_I2C_LCD_Putc
  4912 ;;		_I2C_LCD_Puts
  4913 ;;		_I2C_LCD_SetCursor
  4914 ;;		___aldiv
  4915 ;;		___almod
  4916 ;;		___lwdiv
  4917 ;;		___lwmod
  4918 ;;		i1_I2C_LCD_Clear
  4919 ;; This function is called by:
  4920 ;;		_isr
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           
  4925                           ;psect for function _display
  4926  01A0                     _display:	
  4927                           
  4928                           ;incstack = 0
  4929                           ; Regs used in _display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4930                           ;display@i stored from wreg
  4931  01A0  0020               	movlb	0	; select bank0
  4932  01A1  00CC               	movwf	display@i
  4933                           
  4934                           ;PIC16F1827-ChargeStation5-02.c: 165: I2C_LCD_Clear();
  4935  01A2  318A  2272  3181   	fcall	i1_I2C_LCD_Clear
  4936                           
  4937                           ;PIC16F1827-ChargeStation5-02.c: 166: I2C_LCD_SetCursor(0, 0);
  4938  01A5  01F7               	clrf	I2C_LCD_SetCursor@row
  4939  01A6  3000               	movlw	0
  4940  01A7  318A  22AE  3181   	fcall	_I2C_LCD_SetCursor
  4941                           
  4942                           ;PIC16F1827-ChargeStation5-02.c: 167: I2C_LCD_Puts("Charge Station 5");
  4943  01AA  30B5               	movlw	low (STR_1| (0+32768))
  4944  01AB  00F4               	movwf	I2C_LCD_Puts@s
  4945  01AC  3087               	movlw	high (STR_1| (0+32768))
  4946  01AD  00F5               	movwf	I2C_LCD_Puts@s+1
  4947  01AE  318D  2547  3181   	fcall	_I2C_LCD_Puts
  4948                           
  4949                           ;PIC16F1827-ChargeStation5-02.c: 168: I2C_LCD_SetCursor(0, 1);
  4950  01B1  01F7               	clrf	I2C_LCD_SetCursor@row
  4951  01B2  0AF7               	incf	I2C_LCD_SetCursor@row,f
  4952  01B3  3000               	movlw	0
  4953  01B4  318A  22AE  3181   	fcall	_I2C_LCD_SetCursor
  4954                           
  4955                           ;PIC16F1827-ChargeStation5-02.c: 169: if (auto_cut_ON[print_port]) {
  4956  01B7  0020               	movlb	0	; select bank0
  4957  01B8  0836               	movf	_print_port,w
  4958  01B9  3E2C               	addlw	(low (_auto_cut_ON| 0))& (0+255)
  4959  01BA  0086               	movwf	6
  4960  01BB  0187               	clrf	7
  4961  01BC  0801               	movf	1,w
  4962  01BD  1D03               	btfss	3,2
  4963  01BE  29D8               	goto	i1l2631
  4964  01BF  29FD               	goto	i1l2641
  4965  01C0                     i1l2623:	
  4966                           ;PIC16F1827-ChargeStation5-02.c: 171: case 0:
  4967                           
  4968                           ;PIC16F1827-ChargeStation5-02.c: 170: switch (i) {
  4969                           
  4970                           
  4971                           ;PIC16F1827-ChargeStation5-02.c: 172: I2C_LCD_Puts("Right");
  4972  01C0  30FD               	movlw	low (STR_2| (0+32768))
  4973  01C1  00F4               	movwf	I2C_LCD_Puts@s
  4974  01C2  3087               	movlw	high (STR_2| (0+32768))
  4975  01C3  00F5               	movwf	I2C_LCD_Puts@s+1
  4976  01C4  318D  2547  3181   	fcall	_I2C_LCD_Puts
  4977                           
  4978                           ;PIC16F1827-ChargeStation5-02.c: 173: break;
  4979  01C7  2BAB               	goto	i1l2675
  4980  01C8                     i1l2625:	
  4981                           ;PIC16F1827-ChargeStation5-02.c: 174: case 1:
  4982                           
  4983                           
  4984                           ;PIC16F1827-ChargeStation5-02.c: 175: I2C_LCD_Puts("Center");
  4985  01C8  30F0               	movlw	low (STR_3| (0+32768))
  4986  01C9  00F4               	movwf	I2C_LCD_Puts@s
  4987  01CA  3087               	movlw	high (STR_3| (0+32768))
  4988  01CB  00F5               	movwf	I2C_LCD_Puts@s+1
  4989  01CC  318D  2547  3181   	fcall	_I2C_LCD_Puts
  4990                           
  4991                           ;PIC16F1827-ChargeStation5-02.c: 176: break;
  4992  01CF  2BAB               	goto	i1l2675
  4993  01D0                     i1l2627:	
  4994                           ;PIC16F1827-ChargeStation5-02.c: 177: case 2:
  4995                           
  4996                           
  4997                           ;PIC16F1827-ChargeStation5-02.c: 178: I2C_LCD_Puts("Left");
  4998  01D0  3008               	movlw	low (STR_4| (0+32768))
  4999  01D1  00F4               	movwf	I2C_LCD_Puts@s
  5000  01D2  3088               	movlw	high (STR_4| (0+32768))
  5001  01D3  00F5               	movwf	I2C_LCD_Puts@s+1
  5002  01D4  318D  2547  3181   	fcall	_I2C_LCD_Puts
  5003                           
  5004                           ;PIC16F1827-ChargeStation5-02.c: 180: }
  5005                           
  5006                           ;PIC16F1827-ChargeStation5-02.c: 179: break;
  5007  01D7  2BAB               	goto	i1l2675
  5008  01D8                     i1l2631:	
  5009  01D8  0020               	movlb	0	; select bank0
  5010  01D9  084C               	movf	display@i,w
  5011                           
  5012                           ; Switch size 1, requested type "space"
  5013                           ; Number of cases is 3, Range of values is 0 to 2
  5014                           ; switch strategies available:
  5015                           ; Name         Instructions Cycles
  5016                           ; simple_byte           10     6 (average)
  5017                           ; direct_byte           12     6 (fixed)
  5018                           ; jumptable            260     6 (fixed)
  5019                           ;	Chosen strategy is simple_byte
  5020  01DA  3A00               	xorlw	0	; case 0
  5021  01DB  1903               	skipnz
  5022  01DC  29C0               	goto	i1l2623
  5023  01DD  3A01               	xorlw	1	; case 1
  5024  01DE  1903               	skipnz
  5025  01DF  29C8               	goto	i1l2625
  5026  01E0  3A03               	xorlw	3	; case 2
  5027  01E1  1903               	skipnz
  5028  01E2  29D0               	goto	i1l2627
  5029  01E3  2BAB               	goto	i1l2675
  5030                           
  5031                           ;PIC16F1827-ChargeStation5-02.c: 181: } else {
  5032  01E4  2BAB               	goto	i1l2675
  5033  01E5                     i1l2633:	
  5034                           ;PIC16F1827-ChargeStation5-02.c: 183: case 0:
  5035                           
  5036                           ;PIC16F1827-ChargeStation5-02.c: 182: switch (i) {
  5037                           
  5038                           
  5039                           ;PIC16F1827-ChargeStation5-02.c: 184: I2C_LCD_Puts("RIGHT");
  5040  01E5  30F7               	movlw	low (STR_5| (0+32768))
  5041  01E6  00F4               	movwf	I2C_LCD_Puts@s
  5042  01E7  3087               	movlw	high (STR_5| (0+32768))
  5043  01E8  00F5               	movwf	I2C_LCD_Puts@s+1
  5044  01E9  318D  2547  3181   	fcall	_I2C_LCD_Puts
  5045                           
  5046                           ;PIC16F1827-ChargeStation5-02.c: 185: break;
  5047  01EC  2BAB               	goto	i1l2675
  5048  01ED                     i1l2635:	
  5049                           ;PIC16F1827-ChargeStation5-02.c: 186: case 1:
  5050                           
  5051                           
  5052                           ;PIC16F1827-ChargeStation5-02.c: 187: I2C_LCD_Puts("CENTER");
  5053  01ED  30E9               	movlw	low (STR_6| (0+32768))
  5054  01EE  00F4               	movwf	I2C_LCD_Puts@s
  5055  01EF  3087               	movlw	high (STR_6| (0+32768))
  5056  01F0  00F5               	movwf	I2C_LCD_Puts@s+1
  5057  01F1  318D  2547  3181   	fcall	_I2C_LCD_Puts
  5058                           
  5059                           ;PIC16F1827-ChargeStation5-02.c: 188: break;
  5060  01F4  2BAB               	goto	i1l2675
  5061  01F5                     i1l2637:	
  5062                           ;PIC16F1827-ChargeStation5-02.c: 189: case 2:
  5063                           
  5064                           
  5065                           ;PIC16F1827-ChargeStation5-02.c: 190: I2C_LCD_Puts("LEFT");
  5066  01F5  3003               	movlw	low (STR_7| (0+32768))
  5067  01F6  00F4               	movwf	I2C_LCD_Puts@s
  5068  01F7  3088               	movlw	high (STR_7| (0+32768))
  5069  01F8  00F5               	movwf	I2C_LCD_Puts@s+1
  5070  01F9  318D  2547  3181   	fcall	_I2C_LCD_Puts
  5071                           
  5072                           ;PIC16F1827-ChargeStation5-02.c: 192: }
  5073                           
  5074                           ;PIC16F1827-ChargeStation5-02.c: 191: break;
  5075  01FC  2BAB               	goto	i1l2675
  5076  01FD                     i1l2641:	
  5077  01FD  0020               	movlb	0	; select bank0
  5078  01FE  084C               	movf	display@i,w
  5079                           
  5080                           ; Switch size 1, requested type "space"
  5081                           ; Number of cases is 3, Range of values is 0 to 2
  5082                           ; switch strategies available:
  5083                           ; Name         Instructions Cycles
  5084                           ; simple_byte           10     6 (average)
  5085                           ; direct_byte           12     6 (fixed)
  5086                           ; jumptable            260     6 (fixed)
  5087                           ;	Chosen strategy is simple_byte
  5088  01FF  3A00               	xorlw	0	; case 0
  5089  0200  1903               	skipnz
  5090  0201  29E5               	goto	i1l2633
  5091  0202  3A01               	xorlw	1	; case 1
  5092  0203  1903               	skipnz
  5093  0204  29ED               	goto	i1l2635
  5094  0205  3A03               	xorlw	3	; case 2
  5095  0206  1903               	skipnz
  5096  0207  29F5               	goto	i1l2637
  5097  0208  2BAB               	goto	i1l2675
  5098                           
  5099                           ;PIC16F1827-ChargeStation5-02.c: 193: }
  5100                           ;PIC16F1827-ChargeStation5-02.c: 194: switch (co) {
  5101  0209  2BAB               	goto	i1l2675
  5102  020A                     i1l2643:	
  5103                           ;PIC16F1827-ChargeStation5-02.c: 195: case 0:
  5104                           
  5105                           
  5106                           ;PIC16F1827-ChargeStation5-02.c: 196: I2C_LCD_SetCursor(8, 1);
  5107  020A  01F7               	clrf	I2C_LCD_SetCursor@row
  5108  020B  0AF7               	incf	I2C_LCD_SetCursor@row,f
  5109  020C  3008               	movlw	8
  5110  020D  318A  22AE  3181   	fcall	_I2C_LCD_SetCursor
  5111                           
  5112                           ;PIC16F1827-ChargeStation5-02.c: 197: I2C_LCD_Putc((v[i] % 10000) / 1000 + '0');
  5113  0210  30E8               	movlw	232
  5114  0211  00F6               	movwf	___lwdiv@divisor
  5115  0212  3003               	movlw	3
  5116  0213  00F7               	movwf	___lwdiv@divisor+1
  5117  0214  0020               	movlb	0	; select bank0
  5118  0215  354C               	lslf	display@i,w
  5119  0216  3E26               	addlw	(low (_v| 0))& (0+255)
  5120  0217  0086               	movwf	6
  5121  0218  0187               	clrf	7
  5122  0219  3F40               	moviw [0]fsr1
  5123  021A  00F2               	movwf	___lwmod@dividend
  5124  021B  3F41               	moviw [1]fsr1
  5125  021C  00F3               	movwf	___lwmod@dividend+1
  5126  021D  3010               	movlw	16
  5127  021E  00F0               	movwf	___lwmod@divisor
  5128  021F  3027               	movlw	39
  5129  0220  00F1               	movwf	___lwmod@divisor+1
  5130  0221  318C  24EE  3181   	fcall	___lwmod
  5131  0224  0871               	movf	?___lwmod+1,w
  5132  0225  00F9               	movwf	___lwdiv@dividend+1
  5133  0226  0870               	movf	?___lwmod,w
  5134  0227  00F8               	movwf	___lwdiv@dividend
  5135  0228  318D  25A5  3181   	fcall	___lwdiv
  5136  022B  0876               	movf	?___lwdiv,w
  5137  022C  3E30               	addlw	48
  5138  022D  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5139                           
  5140                           ;PIC16F1827-ChargeStation5-02.c: 198: I2C_LCD_Putc('.');
  5141  0230  302E               	movlw	46
  5142  0231  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5143                           
  5144                           ;PIC16F1827-ChargeStation5-02.c: 199: I2C_LCD_Putc((v[i] % 1000) / 100 + '0');
  5145  0234  3064               	movlw	100
  5146  0235  00F6               	movwf	___lwdiv@divisor
  5147  0236  3000               	movlw	0
  5148  0237  00F7               	movwf	___lwdiv@divisor+1
  5149  0238  0020               	movlb	0	; select bank0
  5150  0239  354C               	lslf	display@i,w
  5151  023A  3E26               	addlw	(low (_v| 0))& (0+255)
  5152  023B  0086               	movwf	6
  5153  023C  0187               	clrf	7
  5154  023D  3F40               	moviw [0]fsr1
  5155  023E  00F2               	movwf	___lwmod@dividend
  5156  023F  3F41               	moviw [1]fsr1
  5157  0240  00F3               	movwf	___lwmod@dividend+1
  5158  0241  30E8               	movlw	232
  5159  0242  00F0               	movwf	___lwmod@divisor
  5160  0243  3003               	movlw	3
  5161  0244  00F1               	movwf	___lwmod@divisor+1
  5162  0245  318C  24EE  3181   	fcall	___lwmod
  5163  0248  0871               	movf	?___lwmod+1,w
  5164  0249  00F9               	movwf	___lwdiv@dividend+1
  5165  024A  0870               	movf	?___lwmod,w
  5166  024B  00F8               	movwf	___lwdiv@dividend
  5167  024C  318D  25A5  3181   	fcall	___lwdiv
  5168  024F  0876               	movf	?___lwdiv,w
  5169  0250  3E30               	addlw	48
  5170  0251  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5171                           
  5172                           ;PIC16F1827-ChargeStation5-02.c: 200: I2C_LCD_Putc((v[i] % 100) / 10 + '0');
  5173  0254  300A               	movlw	10
  5174  0255  00F6               	movwf	___lwdiv@divisor
  5175  0256  3000               	movlw	0
  5176  0257  00F7               	movwf	___lwdiv@divisor+1
  5177  0258  0020               	movlb	0	; select bank0
  5178  0259  354C               	lslf	display@i,w
  5179  025A  3E26               	addlw	(low (_v| 0))& (0+255)
  5180  025B  0086               	movwf	6
  5181  025C  0187               	clrf	7
  5182  025D  3F40               	moviw [0]fsr1
  5183  025E  00F2               	movwf	___lwmod@dividend
  5184  025F  3F41               	moviw [1]fsr1
  5185  0260  00F3               	movwf	___lwmod@dividend+1
  5186  0261  3064               	movlw	100
  5187  0262  00F0               	movwf	___lwmod@divisor
  5188  0263  3000               	movlw	0
  5189  0264  00F1               	movwf	___lwmod@divisor+1
  5190  0265  318C  24EE  3181   	fcall	___lwmod
  5191  0268  0871               	movf	?___lwmod+1,w
  5192  0269  00F9               	movwf	___lwdiv@dividend+1
  5193  026A  0870               	movf	?___lwmod,w
  5194  026B  00F8               	movwf	___lwdiv@dividend
  5195  026C  318D  25A5  3181   	fcall	___lwdiv
  5196  026F  0876               	movf	?___lwdiv,w
  5197  0270  3E30               	addlw	48
  5198  0271  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5199                           
  5200                           ;PIC16F1827-ChargeStation5-02.c: 201: I2C_LCD_Putc((v[i] % 10) / 1 + '0');
  5201  0274  300A               	movlw	10
  5202  0275  00F0               	movwf	___lwmod@divisor
  5203  0276  3000               	movlw	0
  5204  0277  00F1               	movwf	___lwmod@divisor+1
  5205  0278  0020               	movlb	0	; select bank0
  5206  0279  354C               	lslf	display@i,w
  5207  027A  3E26               	addlw	(low (_v| 0))& (0+255)
  5208  027B  0086               	movwf	6
  5209  027C  0187               	clrf	7
  5210  027D  3F40               	moviw [0]fsr1
  5211  027E  00F2               	movwf	___lwmod@dividend
  5212  027F  3F41               	moviw [1]fsr1
  5213  0280  00F3               	movwf	___lwmod@dividend+1
  5214  0281  318C  24EE  3181   	fcall	___lwmod
  5215  0284  0870               	movf	?___lwmod,w
  5216  0285  3E30               	addlw	48
  5217  0286  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5218                           
  5219                           ;PIC16F1827-ChargeStation5-02.c: 202: I2C_LCD_Putc('A');
  5220  0289  3041               	movlw	65
  5221  028A  318B  238E         	fcall	_I2C_LCD_Putc
  5222                           
  5223                           ;PIC16F1827-ChargeStation5-02.c: 203: break;
  5224  028C  0008               	return
  5225  028D                     i1l2653:	
  5226                           ;PIC16F1827-ChargeStation5-02.c: 204: case 1:
  5227                           
  5228                           
  5229                           ;PIC16F1827-ChargeStation5-02.c: 205: I2C_LCD_SetCursor(7, 1);
  5230  028D  01F7               	clrf	I2C_LCD_SetCursor@row
  5231  028E  0AF7               	incf	I2C_LCD_SetCursor@row,f
  5232  028F  3007               	movlw	7
  5233  0290  318A  22AE  3181   	fcall	_I2C_LCD_SetCursor
  5234                           
  5235                           ;PIC16F1827-ChargeStation5-02.c: 206: I2C_LCD_Putc((s[i] % 1000000) / 100000 + '0');
  5236  0293  3000               	movlw	0
  5237  0294  0020               	movlb	0	; select bank0
  5238  0295  00BE               	movwf	___aldiv@divisor+3
  5239  0296  3001               	movlw	1
  5240  0297  00BD               	movwf	___aldiv@divisor+2
  5241  0298  3086               	movlw	134
  5242  0299  00BC               	movwf	___aldiv@divisor+1
  5243  029A  30A0               	movlw	160
  5244  029B  00BB               	movwf	___aldiv@divisor
  5245  029C  354C               	lslf	display@i,w
  5246  029D  3E20               	addlw	(low (_s| 0))& (0+255)
  5247  029E  0086               	movwf	6
  5248  029F  0187               	clrf	7
  5249  02A0  3F40               	moviw [0]fsr1
  5250  02A1  00CA               	movwf	??_display
  5251  02A2  3F41               	moviw [1]fsr1
  5252  02A3  00CB               	movwf	??_display+1
  5253  02A4  084A               	movf	??_display,w
  5254  02A5  00F4               	movwf	___almod@dividend
  5255  02A6  084B               	movf	??_display+1,w
  5256  02A7  00F5               	movwf	___almod@dividend+1
  5257  02A8  01F6               	clrf	___almod@dividend+2
  5258  02A9  01F7               	clrf	___almod@dividend+3
  5259  02AA  3000               	movlw	0
  5260  02AB  00F3               	movwf	___almod@divisor+3
  5261  02AC  300F               	movlw	15
  5262  02AD  00F2               	movwf	___almod@divisor+2
  5263  02AE  3042               	movlw	66
  5264  02AF  00F1               	movwf	___almod@divisor+1
  5265  02B0  3040               	movlw	64
  5266  02B1  00F0               	movwf	___almod@divisor
  5267  02B2  318F  2793  3181   	fcall	___almod
  5268  02B5  0873               	movf	?___almod+3,w
  5269  02B6  0020               	movlb	0	; select bank0
  5270  02B7  00C2               	movwf	___aldiv@dividend+3
  5271  02B8  0872               	movf	?___almod+2,w
  5272  02B9  00C1               	movwf	___aldiv@dividend+2
  5273  02BA  0871               	movf	?___almod+1,w
  5274  02BB  00C0               	movwf	___aldiv@dividend+1
  5275  02BC  0870               	movf	?___almod,w
  5276  02BD  00BF               	movwf	___aldiv@dividend
  5277  02BE  3186  26BE  3181   	fcall	___aldiv
  5278  02C1  0020               	movlb	0	; select bank0
  5279  02C2  083B               	movf	?___aldiv,w
  5280  02C3  3E30               	addlw	48
  5281  02C4  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5282                           
  5283                           ;PIC16F1827-ChargeStation5-02.c: 207: I2C_LCD_Putc((s[i] % 100000) / 10000 + '0');
  5284  02C7  3000               	movlw	0
  5285  02C8  0020               	movlb	0	; select bank0
  5286  02C9  00BE               	movwf	___aldiv@divisor+3
  5287  02CA  3000               	movlw	0
  5288  02CB  00BD               	movwf	___aldiv@divisor+2
  5289  02CC  3027               	movlw	39
  5290  02CD  00BC               	movwf	___aldiv@divisor+1
  5291  02CE  3010               	movlw	16
  5292  02CF  00BB               	movwf	___aldiv@divisor
  5293  02D0  354C               	lslf	display@i,w
  5294  02D1  3E20               	addlw	(low (_s| 0))& (0+255)
  5295  02D2  0086               	movwf	6
  5296  02D3  0187               	clrf	7
  5297  02D4  3F40               	moviw [0]fsr1
  5298  02D5  00CA               	movwf	??_display
  5299  02D6  3F41               	moviw [1]fsr1
  5300  02D7  00CB               	movwf	??_display+1
  5301  02D8  084A               	movf	??_display,w
  5302  02D9  00F4               	movwf	___almod@dividend
  5303  02DA  084B               	movf	??_display+1,w
  5304  02DB  00F5               	movwf	___almod@dividend+1
  5305  02DC  01F6               	clrf	___almod@dividend+2
  5306  02DD  01F7               	clrf	___almod@dividend+3
  5307  02DE  3000               	movlw	0
  5308  02DF  00F3               	movwf	___almod@divisor+3
  5309  02E0  3001               	movlw	1
  5310  02E1  00F2               	movwf	___almod@divisor+2
  5311  02E2  3086               	movlw	134
  5312  02E3  00F1               	movwf	___almod@divisor+1
  5313  02E4  30A0               	movlw	160
  5314  02E5  00F0               	movwf	___almod@divisor
  5315  02E6  318F  2793  3181   	fcall	___almod
  5316  02E9  0873               	movf	?___almod+3,w
  5317  02EA  0020               	movlb	0	; select bank0
  5318  02EB  00C2               	movwf	___aldiv@dividend+3
  5319  02EC  0872               	movf	?___almod+2,w
  5320  02ED  00C1               	movwf	___aldiv@dividend+2
  5321  02EE  0871               	movf	?___almod+1,w
  5322  02EF  00C0               	movwf	___aldiv@dividend+1
  5323  02F0  0870               	movf	?___almod,w
  5324  02F1  00BF               	movwf	___aldiv@dividend
  5325  02F2  3186  26BE  3181   	fcall	___aldiv
  5326  02F5  0020               	movlb	0	; select bank0
  5327  02F6  083B               	movf	?___aldiv,w
  5328  02F7  3E30               	addlw	48
  5329  02F8  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5330                           
  5331                           ;PIC16F1827-ChargeStation5-02.c: 208: I2C_LCD_Putc((s[i] % 10000) / 1000 + '0');
  5332  02FB  30E8               	movlw	232
  5333  02FC  00F6               	movwf	___lwdiv@divisor
  5334  02FD  3003               	movlw	3
  5335  02FE  00F7               	movwf	___lwdiv@divisor+1
  5336  02FF  0020               	movlb	0	; select bank0
  5337  0300  354C               	lslf	display@i,w
  5338  0301  3E20               	addlw	(low (_s| 0))& (0+255)
  5339  0302  0086               	movwf	6
  5340  0303  0187               	clrf	7
  5341  0304  3F40               	moviw [0]fsr1
  5342  0305  00F2               	movwf	___lwmod@dividend
  5343  0306  3F41               	moviw [1]fsr1
  5344  0307  00F3               	movwf	___lwmod@dividend+1
  5345  0308  3010               	movlw	16
  5346  0309  00F0               	movwf	___lwmod@divisor
  5347  030A  3027               	movlw	39
  5348  030B  00F1               	movwf	___lwmod@divisor+1
  5349  030C  318C  24EE  3181   	fcall	___lwmod
  5350  030F  0871               	movf	?___lwmod+1,w
  5351  0310  00F9               	movwf	___lwdiv@dividend+1
  5352  0311  0870               	movf	?___lwmod,w
  5353  0312  00F8               	movwf	___lwdiv@dividend
  5354  0313  318D  25A5  3181   	fcall	___lwdiv
  5355  0316  0876               	movf	?___lwdiv,w
  5356  0317  3E30               	addlw	48
  5357  0318  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5358                           
  5359                           ;PIC16F1827-ChargeStation5-02.c: 209: I2C_LCD_Putc((s[i] % 1000) / 100 + '0');
  5360  031B  3064               	movlw	100
  5361  031C  00F6               	movwf	___lwdiv@divisor
  5362  031D  3000               	movlw	0
  5363  031E  00F7               	movwf	___lwdiv@divisor+1
  5364  031F  0020               	movlb	0	; select bank0
  5365  0320  354C               	lslf	display@i,w
  5366  0321  3E20               	addlw	(low (_s| 0))& (0+255)
  5367  0322  0086               	movwf	6
  5368  0323  0187               	clrf	7
  5369  0324  3F40               	moviw [0]fsr1
  5370  0325  00F2               	movwf	___lwmod@dividend
  5371  0326  3F41               	moviw [1]fsr1
  5372  0327  00F3               	movwf	___lwmod@dividend+1
  5373  0328  30E8               	movlw	232
  5374  0329  00F0               	movwf	___lwmod@divisor
  5375  032A  3003               	movlw	3
  5376  032B  00F1               	movwf	___lwmod@divisor+1
  5377  032C  318C  24EE  3181   	fcall	___lwmod
  5378  032F  0871               	movf	?___lwmod+1,w
  5379  0330  00F9               	movwf	___lwdiv@dividend+1
  5380  0331  0870               	movf	?___lwmod,w
  5381  0332  00F8               	movwf	___lwdiv@dividend
  5382  0333  318D  25A5  3181   	fcall	___lwdiv
  5383  0336  0876               	movf	?___lwdiv,w
  5384  0337  3E30               	addlw	48
  5385  0338  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5386                           
  5387                           ;PIC16F1827-ChargeStation5-02.c: 210: I2C_LCD_Putc((s[i] % 100) / 10 + '0');
  5388  033B  300A               	movlw	10
  5389  033C  00F6               	movwf	___lwdiv@divisor
  5390  033D  3000               	movlw	0
  5391  033E  00F7               	movwf	___lwdiv@divisor+1
  5392  033F  0020               	movlb	0	; select bank0
  5393  0340  354C               	lslf	display@i,w
  5394  0341  3E20               	addlw	(low (_s| 0))& (0+255)
  5395  0342  0086               	movwf	6
  5396  0343  0187               	clrf	7
  5397  0344  3F40               	moviw [0]fsr1
  5398  0345  00F2               	movwf	___lwmod@dividend
  5399  0346  3F41               	moviw [1]fsr1
  5400  0347  00F3               	movwf	___lwmod@dividend+1
  5401  0348  3064               	movlw	100
  5402  0349  00F0               	movwf	___lwmod@divisor
  5403  034A  3000               	movlw	0
  5404  034B  00F1               	movwf	___lwmod@divisor+1
  5405  034C  318C  24EE  3181   	fcall	___lwmod
  5406  034F  0871               	movf	?___lwmod+1,w
  5407  0350  00F9               	movwf	___lwdiv@dividend+1
  5408  0351  0870               	movf	?___lwmod,w
  5409  0352  00F8               	movwf	___lwdiv@dividend
  5410  0353  318D  25A5  3181   	fcall	___lwdiv
  5411  0356  0876               	movf	?___lwdiv,w
  5412  0357  3E30               	addlw	48
  5413  0358  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5414                           
  5415                           ;PIC16F1827-ChargeStation5-02.c: 211: I2C_LCD_Putc((s[i] % 10) / 1 + '0');
  5416  035B  300A               	movlw	10
  5417  035C  00F0               	movwf	___lwmod@divisor
  5418  035D  3000               	movlw	0
  5419  035E  00F1               	movwf	___lwmod@divisor+1
  5420  035F  0020               	movlb	0	; select bank0
  5421  0360  354C               	lslf	display@i,w
  5422  0361  3E20               	addlw	(low (_s| 0))& (0+255)
  5423  0362  0086               	movwf	6
  5424  0363  0187               	clrf	7
  5425  0364  3F40               	moviw [0]fsr1
  5426  0365  00F2               	movwf	___lwmod@dividend
  5427  0366  3F41               	moviw [1]fsr1
  5428  0367  00F3               	movwf	___lwmod@dividend+1
  5429  0368  318C  24EE  3181   	fcall	___lwmod
  5430  036B  0870               	movf	?___lwmod,w
  5431  036C  3E30               	addlw	48
  5432  036D  318B  238E  3181   	fcall	_I2C_LCD_Putc
  5433                           
  5434                           ;PIC16F1827-ChargeStation5-02.c: 212: I2C_LCD_Puts("mAh");
  5435  0370  300D               	movlw	low (STR_8| (0+32768))
  5436  0371  00F4               	movwf	I2C_LCD_Puts@s
  5437  0372  3088               	movlw	high (STR_8| (0+32768))
  5438  0373  00F5               	movwf	I2C_LCD_Puts@s+1
  5439  0374  318D  2547         	fcall	_I2C_LCD_Puts
  5440                           
  5441                           ;PIC16F1827-ChargeStation5-02.c: 213: break;
  5442  0376  0008               	return
  5443  0377                     i1l2657:	
  5444                           ;PIC16F1827-ChargeStation5-02.c: 214: case 2:
  5445                           
  5446                           
  5447                           ;PIC16F1827-ChargeStation5-02.c: 215: I2C_LCD_SetCursor(8, 1);
  5448  0377  01F7               	clrf	I2C_LCD_SetCursor@row
  5449  0378  0AF7               	incf	I2C_LCD_SetCursor@row,f
  5450  0379  3008               	movlw	8
  5451  037A  318A  22AE  3181   	fcall	_I2C_LCD_SetCursor
  5452                           
  5453                           ;PIC16F1827-ChargeStation5-02.c: 216: I2C_LCD_Puts("Reset?");
  5454  037D  30E2               	movlw	low (STR_9| (0+32768))
  5455  037E  00F4               	movwf	I2C_LCD_Puts@s
  5456  037F  3087               	movlw	high (STR_9| (0+32768))
  5457  0380  00F5               	movwf	I2C_LCD_Puts@s+1
  5458  0381  318D  2547         	fcall	_I2C_LCD_Puts
  5459                           
  5460                           ;PIC16F1827-ChargeStation5-02.c: 217: break;
  5461  0383  0008               	return
  5462  0384                     i1l2661:	
  5463                           ;PIC16F1827-ChargeStation5-02.c: 218: case 3:
  5464                           
  5465                           
  5466                           ;PIC16F1827-ChargeStation5-02.c: 219: I2C_LCD_SetCursor(8, 1);
  5467  0384  01F7               	clrf	I2C_LCD_SetCursor@row
  5468  0385  0AF7               	incf	I2C_LCD_SetCursor@row,f
  5469  0386  3008               	movlw	8
  5470  0387  318A  22AE  3181   	fcall	_I2C_LCD_SetCursor
  5471                           
  5472                           ;PIC16F1827-ChargeStation5-02.c: 220: I2C_LCD_Puts("Reseted");
  5473  038A  30DA               	movlw	low (STR_10| (0+32768))
  5474  038B  00F4               	movwf	I2C_LCD_Puts@s
  5475  038C  3087               	movlw	high (STR_10| (0+32768))
  5476  038D  00F5               	movwf	I2C_LCD_Puts@s+1
  5477  038E  318D  2547         	fcall	_I2C_LCD_Puts
  5478                           
  5479                           ;PIC16F1827-ChargeStation5-02.c: 221: break;
  5480  0390  0008               	return
  5481  0391                     i1l2665:	
  5482                           ;PIC16F1827-ChargeStation5-02.c: 222: case 4:
  5483                           
  5484                           
  5485                           ;PIC16F1827-ChargeStation5-02.c: 223: I2C_LCD_SetCursor(7, 1);
  5486  0391  01F7               	clrf	I2C_LCD_SetCursor@row
  5487  0392  0AF7               	incf	I2C_LCD_SetCursor@row,f
  5488  0393  3007               	movlw	7
  5489  0394  318A  22AE  3181   	fcall	_I2C_LCD_SetCursor
  5490                           
  5491                           ;PIC16F1827-ChargeStation5-02.c: 224: I2C_LCD_Puts("Always ON");
  5492  0397  30C6               	movlw	low (STR_11| (0+32768))
  5493  0398  00F4               	movwf	I2C_LCD_Puts@s
  5494  0399  3087               	movlw	high (STR_11| (0+32768))
  5495  039A  00F5               	movwf	I2C_LCD_Puts@s+1
  5496  039B  318D  2547         	fcall	_I2C_LCD_Puts
  5497                           
  5498                           ;PIC16F1827-ChargeStation5-02.c: 225: break;
  5499  039D  0008               	return
  5500  039E                     i1l2669:	
  5501                           ;PIC16F1827-ChargeStation5-02.c: 226: case 5:
  5502                           
  5503                           
  5504                           ;PIC16F1827-ChargeStation5-02.c: 227: I2C_LCD_SetCursor(7, 1);
  5505  039E  01F7               	clrf	I2C_LCD_SetCursor@row
  5506  039F  0AF7               	incf	I2C_LCD_SetCursor@row,f
  5507  03A0  3007               	movlw	7
  5508  03A1  318A  22AE  3181   	fcall	_I2C_LCD_SetCursor
  5509                           
  5510                           ;PIC16F1827-ChargeStation5-02.c: 228: I2C_LCD_Puts("Auto Stop");
  5511  03A4  30D0               	movlw	low (STR_12| (0+32768))
  5512  03A5  00F4               	movwf	I2C_LCD_Puts@s
  5513  03A6  3087               	movlw	high (STR_12| (0+32768))
  5514  03A7  00F5               	movwf	I2C_LCD_Puts@s+1
  5515  03A8  318D  2547         	fcall	_I2C_LCD_Puts
  5516                           
  5517                           ;PIC16F1827-ChargeStation5-02.c: 230: }
  5518                           
  5519                           ;PIC16F1827-ChargeStation5-02.c: 229: break;
  5520  03AA  0008               	return
  5521  03AB                     i1l2675:	
  5522  03AB  0020               	movlb	0	; select bank0
  5523  03AC  0849               	movf	display@co,w
  5524                           
  5525                           ; Switch size 1, requested type "space"
  5526                           ; Number of cases is 6, Range of values is 0 to 5
  5527                           ; switch strategies available:
  5528                           ; Name         Instructions Cycles
  5529                           ; direct_byte           18     6 (fixed)
  5530                           ; simple_byte           19    10 (average)
  5531                           ; jumptable            260     6 (fixed)
  5532                           ;	Chosen strategy is direct_byte
  5533  03AD  0084               	movwf	4
  5534  03AE  3006               	movlw	6
  5535  03AF  0204               	subwf	4,w
  5536  03B0  1803               	skipnc
  5537  03B1  0008               	return
  5538  03B2  3188               	movlp	high i1S3645
  5539  03B3  3504               	lslf	4,w
  5540  03B4  3E11               	addlw	low i1S3645
  5541  03B5  0082               	movwf	2
  5542  03B6  0008               	return
  5543  03B7                     __end_of_display:	
  5544                           
  5545                           	psect	swtext1
  5546  0811                     __pswtext1:	
  5547  0811                     i1S3645:	
  5548  0811  3182  2A0A         	ljmp	i1l2643
  5549  0813  3182  2A8D         	ljmp	i1l2653
  5550  0815  3183  2B77         	ljmp	i1l2657
  5551  0817  3183  2B84         	ljmp	i1l2661
  5552  0819  3183  2B91         	ljmp	i1l2665
  5553  081B  3183  2B9E         	ljmp	i1l2669
  5554                           
  5555                           	psect	text30
  5556  0A72                     __ptext30:	
  5557 ;; *************** function i1_I2C_LCD_Clear *****************
  5558 ;; Defined at:
  5559 ;;		line 107 in file "../My_header\My_I2C.h"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;		None
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;		None               void
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, pclath, cstack
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5573 ;;      Params:         0       0       0       0       0       0
  5574 ;;      Locals:         0       0       0       0       0       0
  5575 ;;      Temps:          2       0       0       0       0       0
  5576 ;;      Totals:         2       0       0       0       0       0
  5577 ;;Total ram usage:        2 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    3
  5580 ;; This function calls:
  5581 ;;		i1_I2C_LCD_Command
  5582 ;; This function is called by:
  5583 ;;		_display
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           
  5588                           ;psect for function i1_I2C_LCD_Clear
  5589  0A72                     i1_I2C_LCD_Clear:	
  5590                           
  5591                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
  5592                           
  5593                           ;incstack = 0
  5594                           ; Regs used in i1_I2C_LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  5595  0A72  3001               	movlw	1
  5596  0A73  318B  23AA  318A   	fcall	i1_I2C_LCD_Command
  5597                           
  5598                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  5599  0A76  300C               	movlw	12
  5600  0A77  00F8               	movwf	??i1_I2C_LCD_Clear+1
  5601  0A78  306C               	movlw	108
  5602  0A79  00F7               	movwf	??i1_I2C_LCD_Clear
  5603  0A7A                     u427_27:	
  5604  0A7A  0BF7               	decfsz	??i1_I2C_LCD_Clear,f
  5605  0A7B  2A7A               	goto	u427_27
  5606  0A7C  0BF8               	decfsz	??i1_I2C_LCD_Clear+1,f
  5607  0A7D  2A7A               	goto	u427_27
  5608  0A7E  0000               	nop
  5609  0A7F  0008               	return
  5610  0A80                     __end_ofi1_I2C_LCD_Clear:	
  5611                           
  5612                           	psect	text31
  5613  0CEE                     __ptext31:	
  5614 ;; *************** function ___lwmod *****************
  5615 ;; Defined at:
  5616 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  divisor         2    0[COMMON] unsigned int 
  5619 ;;  dividend        2    2[COMMON] unsigned int 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  counter         1    5[COMMON] unsigned char 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  2    0[COMMON] unsigned int 
  5624 ;; Registers used:
  5625 ;;		wreg, status,2, status,0
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5631 ;;      Params:         4       0       0       0       0       0
  5632 ;;      Locals:         1       0       0       0       0       0
  5633 ;;      Temps:          1       0       0       0       0       0
  5634 ;;      Totals:         6       0       0       0       0       0
  5635 ;;Total ram usage:        6 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; This function calls:
  5638 ;;		Nothing
  5639 ;; This function is called by:
  5640 ;;		_display
  5641 ;;		_ringbuf_put_num
  5642 ;;		_tx_sendn
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           
  5647                           ;psect for function ___lwmod
  5648  0CEE                     ___lwmod:	
  5649                           
  5650                           ;incstack = 0
  5651                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5652  0CEE  0870               	movf	___lwmod@divisor,w
  5653  0CEF  0471               	iorwf	___lwmod@divisor+1,w
  5654  0CF0  1903               	btfsc	3,2
  5655  0CF1  2D15               	goto	i1l2449
  5656  0CF2  01F5               	clrf	___lwmod@counter
  5657  0CF3  0AF5               	incf	___lwmod@counter,f
  5658  0CF4                     i1l2439:	
  5659  0CF4  1BF1               	btfsc	___lwmod@divisor+1,7
  5660  0CF5  2D00               	goto	i1l2441
  5661  0CF6  3001               	movlw	1
  5662  0CF7                     u236_25:	
  5663  0CF7  35F0               	lslf	___lwmod@divisor,f
  5664  0CF8  0DF1               	rlf	___lwmod@divisor+1,f
  5665  0CF9  0B89               	decfsz	9,f
  5666  0CFA  2CF7               	goto	u236_25
  5667  0CFB  3001               	movlw	1
  5668  0CFC  00F4               	movwf	??___lwmod
  5669  0CFD  0874               	movf	??___lwmod,w
  5670  0CFE  07F5               	addwf	___lwmod@counter,f
  5671  0CFF  2CF4               	goto	i1l2439
  5672  0D00                     i1l2441:	
  5673  0D00  0871               	movf	___lwmod@divisor+1,w
  5674  0D01  0273               	subwf	___lwmod@dividend+1,w
  5675  0D02  1D03               	skipz
  5676  0D03  2D06               	goto	u238_25
  5677  0D04  0870               	movf	___lwmod@divisor,w
  5678  0D05  0272               	subwf	___lwmod@dividend,w
  5679  0D06                     u238_25:	
  5680  0D06  1C03               	skipc
  5681  0D07  2D0C               	goto	i1l2445
  5682  0D08  0870               	movf	___lwmod@divisor,w
  5683  0D09  02F2               	subwf	___lwmod@dividend,f
  5684  0D0A  0871               	movf	___lwmod@divisor+1,w
  5685  0D0B  3BF3               	subwfb	___lwmod@dividend+1,f
  5686  0D0C                     i1l2445:	
  5687  0D0C  3001               	movlw	1
  5688  0D0D                     u239_25:	
  5689  0D0D  36F1               	lsrf	___lwmod@divisor+1,f
  5690  0D0E  0CF0               	rrf	___lwmod@divisor,f
  5691  0D0F  0B89               	decfsz	9,f
  5692  0D10  2D0D               	goto	u239_25
  5693  0D11  3001               	movlw	1
  5694  0D12  02F5               	subwf	___lwmod@counter,f
  5695  0D13  1D03               	btfss	3,2
  5696  0D14  2D00               	goto	i1l2441
  5697  0D15                     i1l2449:	
  5698  0D15  0873               	movf	___lwmod@dividend+1,w
  5699  0D16  00F1               	movwf	?___lwmod+1
  5700  0D17  0872               	movf	___lwmod@dividend,w
  5701  0D18  00F0               	movwf	?___lwmod
  5702  0D19  0008               	return
  5703  0D1A                     __end_of___lwmod:	
  5704                           
  5705                           	psect	text32
  5706  0DA5                     __ptext32:	
  5707 ;; *************** function ___lwdiv *****************
  5708 ;; Defined at:
  5709 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  divisor         2    6[COMMON] unsigned int 
  5712 ;;  dividend        2    8[COMMON] unsigned int 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  quotient        2   11[COMMON] unsigned int 
  5715 ;;  counter         1   13[COMMON] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  2    6[COMMON] unsigned int 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5725 ;;      Params:         4       0       0       0       0       0
  5726 ;;      Locals:         3       0       0       0       0       0
  5727 ;;      Temps:          1       0       0       0       0       0
  5728 ;;      Totals:         8       0       0       0       0       0
  5729 ;;Total ram usage:        8 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		_isr
  5735 ;;		_lchika
  5736 ;;		_display
  5737 ;;		_ringbuf_put_num
  5738 ;;		_tx_sendn
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           
  5743                           ;psect for function ___lwdiv
  5744  0DA5                     ___lwdiv:	
  5745                           
  5746                           ;incstack = 0
  5747                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5748  0DA5  01FB               	clrf	___lwdiv@quotient
  5749  0DA6  01FC               	clrf	___lwdiv@quotient+1
  5750  0DA7  0876               	movf	___lwdiv@divisor,w
  5751  0DA8  0477               	iorwf	___lwdiv@divisor+1,w
  5752  0DA9  1903               	btfsc	3,2
  5753  0DAA  2DD4               	goto	i1l2427
  5754  0DAB  01FD               	clrf	___lwdiv@counter
  5755  0DAC  0AFD               	incf	___lwdiv@counter,f
  5756  0DAD                     i1l2415:	
  5757  0DAD  1BF7               	btfsc	___lwdiv@divisor+1,7
  5758  0DAE  2DB9               	goto	i1l2417
  5759  0DAF  3001               	movlw	1
  5760  0DB0                     u229_25:	
  5761  0DB0  35F6               	lslf	___lwdiv@divisor,f
  5762  0DB1  0DF7               	rlf	___lwdiv@divisor+1,f
  5763  0DB2  0B89               	decfsz	9,f
  5764  0DB3  2DB0               	goto	u229_25
  5765  0DB4  3001               	movlw	1
  5766  0DB5  00FA               	movwf	??___lwdiv
  5767  0DB6  087A               	movf	??___lwdiv,w
  5768  0DB7  07FD               	addwf	___lwdiv@counter,f
  5769  0DB8  2DAD               	goto	i1l2415
  5770  0DB9                     i1l2417:	
  5771  0DB9  3001               	movlw	1
  5772  0DBA                     u231_25:	
  5773  0DBA  35FB               	lslf	___lwdiv@quotient,f
  5774  0DBB  0DFC               	rlf	___lwdiv@quotient+1,f
  5775  0DBC  0B89               	decfsz	9,f
  5776  0DBD  2DBA               	goto	u231_25
  5777  0DBE  0877               	movf	___lwdiv@divisor+1,w
  5778  0DBF  0279               	subwf	___lwdiv@dividend+1,w
  5779  0DC0  1D03               	skipz
  5780  0DC1  2DC4               	goto	u232_25
  5781  0DC2  0876               	movf	___lwdiv@divisor,w
  5782  0DC3  0278               	subwf	___lwdiv@dividend,w
  5783  0DC4                     u232_25:	
  5784  0DC4  1C03               	skipc
  5785  0DC5  2DCB               	goto	i1l2423
  5786  0DC6  0876               	movf	___lwdiv@divisor,w
  5787  0DC7  02F8               	subwf	___lwdiv@dividend,f
  5788  0DC8  0877               	movf	___lwdiv@divisor+1,w
  5789  0DC9  3BF9               	subwfb	___lwdiv@dividend+1,f
  5790  0DCA  147B               	bsf	___lwdiv@quotient,0
  5791  0DCB                     i1l2423:	
  5792  0DCB  3001               	movlw	1
  5793  0DCC                     u233_25:	
  5794  0DCC  36F7               	lsrf	___lwdiv@divisor+1,f
  5795  0DCD  0CF6               	rrf	___lwdiv@divisor,f
  5796  0DCE  0B89               	decfsz	9,f
  5797  0DCF  2DCC               	goto	u233_25
  5798  0DD0  3001               	movlw	1
  5799  0DD1  02FD               	subwf	___lwdiv@counter,f
  5800  0DD2  1D03               	btfss	3,2
  5801  0DD3  2DB9               	goto	i1l2417
  5802  0DD4                     i1l2427:	
  5803  0DD4  087C               	movf	___lwdiv@quotient+1,w
  5804  0DD5  00F7               	movwf	?___lwdiv+1
  5805  0DD6  087B               	movf	___lwdiv@quotient,w
  5806  0DD7  00F6               	movwf	?___lwdiv
  5807  0DD8  0008               	return
  5808  0DD9                     __end_of___lwdiv:	
  5809                           
  5810                           	psect	text33
  5811  0F93                     __ptext33:	
  5812 ;; *************** function ___almod *****************
  5813 ;; Defined at:
  5814 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\almod.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  divisor         4    0[COMMON] long 
  5817 ;;  dividend        4    4[COMMON] long 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  sign            1   10[COMMON] unsigned char 
  5820 ;;  counter         1    9[COMMON] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  4    0[COMMON] long 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5830 ;;      Params:         8       0       0       0       0       0
  5831 ;;      Locals:         2       0       0       0       0       0
  5832 ;;      Temps:          1       0       0       0       0       0
  5833 ;;      Totals:        11       0       0       0       0       0
  5834 ;;Total ram usage:       11 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; This function calls:
  5837 ;;		Nothing
  5838 ;; This function is called by:
  5839 ;;		_display
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           
  5844                           ;psect for function ___almod
  5845  0F93                     ___almod:	
  5846                           
  5847                           ;incstack = 0
  5848                           ; Regs used in ___almod: [wreg+status,2+status,0]
  5849  0F93  01FA               	clrf	___almod@sign
  5850  0F94  1FF7               	btfss	___almod@dividend+3,7
  5851  0F95  2FA3               	goto	i1l657
  5852  0F96  09F4               	comf	___almod@dividend,f
  5853  0F97  09F5               	comf	___almod@dividend+1,f
  5854  0F98  09F6               	comf	___almod@dividend+2,f
  5855  0F99  09F7               	comf	___almod@dividend+3,f
  5856  0F9A  0AF4               	incf	___almod@dividend,f
  5857  0F9B  1903               	skipnz
  5858  0F9C  0AF5               	incf	___almod@dividend+1,f
  5859  0F9D  1903               	skipnz
  5860  0F9E  0AF6               	incf	___almod@dividend+2,f
  5861  0F9F  1903               	skipnz
  5862  0FA0  0AF7               	incf	___almod@dividend+3,f
  5863  0FA1  01FA               	clrf	___almod@sign
  5864  0FA2  0AFA               	incf	___almod@sign,f
  5865  0FA3                     i1l657:	
  5866  0FA3  1FF3               	btfss	___almod@divisor+3,7
  5867  0FA4  2FB0               	goto	i1l2337
  5868  0FA5  09F0               	comf	___almod@divisor,f
  5869  0FA6  09F1               	comf	___almod@divisor+1,f
  5870  0FA7  09F2               	comf	___almod@divisor+2,f
  5871  0FA8  09F3               	comf	___almod@divisor+3,f
  5872  0FA9  0AF0               	incf	___almod@divisor,f
  5873  0FAA  1903               	skipnz
  5874  0FAB  0AF1               	incf	___almod@divisor+1,f
  5875  0FAC  1903               	skipnz
  5876  0FAD  0AF2               	incf	___almod@divisor+2,f
  5877  0FAE  1903               	skipnz
  5878  0FAF  0AF3               	incf	___almod@divisor+3,f
  5879  0FB0                     i1l2337:	
  5880  0FB0  0873               	movf	___almod@divisor+3,w
  5881  0FB1  0472               	iorwf	___almod@divisor+2,w
  5882  0FB2  0471               	iorwf	___almod@divisor+1,w
  5883  0FB3  0470               	iorwf	___almod@divisor,w
  5884  0FB4  1903               	skipnz
  5885  0FB5  2FE9               	goto	i1l2353
  5886  0FB6  01F9               	clrf	___almod@counter
  5887  0FB7  0AF9               	incf	___almod@counter,f
  5888  0FB8                     i1l2343:	
  5889  0FB8  1BF3               	btfsc	___almod@divisor+3,7
  5890  0FB9  2FC6               	goto	i1l2345
  5891  0FBA  3001               	movlw	1
  5892  0FBB                     u212_25:	
  5893  0FBB  35F0               	lslf	___almod@divisor,f
  5894  0FBC  0DF1               	rlf	___almod@divisor+1,f
  5895  0FBD  0DF2               	rlf	___almod@divisor+2,f
  5896  0FBE  0DF3               	rlf	___almod@divisor+3,f
  5897  0FBF  0B89               	decfsz	9,f
  5898  0FC0  2FBB               	goto	u212_25
  5899  0FC1  3001               	movlw	1
  5900  0FC2  00F8               	movwf	??___almod
  5901  0FC3  0878               	movf	??___almod,w
  5902  0FC4  07F9               	addwf	___almod@counter,f
  5903  0FC5  2FB8               	goto	i1l2343
  5904  0FC6                     i1l2345:	
  5905  0FC6  0873               	movf	___almod@divisor+3,w
  5906  0FC7  0277               	subwf	___almod@dividend+3,w
  5907  0FC8  1D03               	skipz
  5908  0FC9  2FD4               	goto	u214_25
  5909  0FCA  0872               	movf	___almod@divisor+2,w
  5910  0FCB  0276               	subwf	___almod@dividend+2,w
  5911  0FCC  1D03               	skipz
  5912  0FCD  2FD4               	goto	u214_25
  5913  0FCE  0871               	movf	___almod@divisor+1,w
  5914  0FCF  0275               	subwf	___almod@dividend+1,w
  5915  0FD0  1D03               	skipz
  5916  0FD1  2FD4               	goto	u214_25
  5917  0FD2  0870               	movf	___almod@divisor,w
  5918  0FD3  0274               	subwf	___almod@dividend,w
  5919  0FD4                     u214_25:	
  5920  0FD4  1C03               	skipc
  5921  0FD5  2FDE               	goto	i1l2349
  5922  0FD6  0870               	movf	___almod@divisor,w
  5923  0FD7  02F4               	subwf	___almod@dividend,f
  5924  0FD8  0871               	movf	___almod@divisor+1,w
  5925  0FD9  3BF5               	subwfb	___almod@dividend+1,f
  5926  0FDA  0872               	movf	___almod@divisor+2,w
  5927  0FDB  3BF6               	subwfb	___almod@dividend+2,f
  5928  0FDC  0873               	movf	___almod@divisor+3,w
  5929  0FDD  3BF7               	subwfb	___almod@dividend+3,f
  5930  0FDE                     i1l2349:	
  5931  0FDE  3001               	movlw	1
  5932  0FDF                     u215_25:	
  5933  0FDF  36F3               	lsrf	___almod@divisor+3,f
  5934  0FE0  0CF2               	rrf	___almod@divisor+2,f
  5935  0FE1  0CF1               	rrf	___almod@divisor+1,f
  5936  0FE2  0CF0               	rrf	___almod@divisor,f
  5937  0FE3  0B89               	decfsz	9,f
  5938  0FE4  2FDF               	goto	u215_25
  5939  0FE5  3001               	movlw	1
  5940  0FE6  02F9               	subwf	___almod@counter,f
  5941  0FE7  1D03               	btfss	3,2
  5942  0FE8  2FC6               	goto	i1l2345
  5943  0FE9                     i1l2353:	
  5944  0FE9  087A               	movf	___almod@sign,w
  5945  0FEA  1903               	btfsc	3,2
  5946  0FEB  2FF7               	goto	i1l2357
  5947  0FEC  09F4               	comf	___almod@dividend,f
  5948  0FED  09F5               	comf	___almod@dividend+1,f
  5949  0FEE  09F6               	comf	___almod@dividend+2,f
  5950  0FEF  09F7               	comf	___almod@dividend+3,f
  5951  0FF0  0AF4               	incf	___almod@dividend,f
  5952  0FF1  1903               	skipnz
  5953  0FF2  0AF5               	incf	___almod@dividend+1,f
  5954  0FF3  1903               	skipnz
  5955  0FF4  0AF6               	incf	___almod@dividend+2,f
  5956  0FF5  1903               	skipnz
  5957  0FF6  0AF7               	incf	___almod@dividend+3,f
  5958  0FF7                     i1l2357:	
  5959  0FF7  0877               	movf	___almod@dividend+3,w
  5960  0FF8  00F3               	movwf	?___almod+3
  5961  0FF9  0876               	movf	___almod@dividend+2,w
  5962  0FFA  00F2               	movwf	?___almod+2
  5963  0FFB  0875               	movf	___almod@dividend+1,w
  5964  0FFC  00F1               	movwf	?___almod+1
  5965  0FFD  0874               	movf	___almod@dividend,w
  5966  0FFE  00F0               	movwf	?___almod
  5967  0FFF  0008               	return
  5968  1000                     __end_of___almod:	
  5969                           
  5970                           	psect	text34
  5971  06BE                     __ptext34:	
  5972 ;; *************** function ___aldiv *****************
  5973 ;; Defined at:
  5974 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\aldiv.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  divisor         4    0[BANK0 ] long 
  5977 ;;  dividend        4    4[BANK0 ] long 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  quotient        4   10[BANK0 ] long 
  5980 ;;  sign            1    9[BANK0 ] unsigned char 
  5981 ;;  counter         1    8[BANK0 ] unsigned char 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  4    0[BANK0 ] long 
  5984 ;; Registers used:
  5985 ;;		wreg, status,2, status,0
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5991 ;;      Params:         0       8       0       0       0       0
  5992 ;;      Locals:         0       6       0       0       0       0
  5993 ;;      Temps:          1       0       0       0       0       0
  5994 ;;      Totals:         1      14       0       0       0       0
  5995 ;;Total ram usage:       15 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_display
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           
  6005                           ;psect for function ___aldiv
  6006  06BE                     ___aldiv:	
  6007                           
  6008                           ;incstack = 0
  6009                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6010  06BE  0020               	movlb	0	; select bank0
  6011  06BF  01C4               	clrf	___aldiv@sign
  6012  06C0  1FBE               	btfss	___aldiv@divisor+3,7
  6013  06C1  2ECF               	goto	i1l644
  6014  06C2  09BB               	comf	___aldiv@divisor,f
  6015  06C3  09BC               	comf	___aldiv@divisor+1,f
  6016  06C4  09BD               	comf	___aldiv@divisor+2,f
  6017  06C5  09BE               	comf	___aldiv@divisor+3,f
  6018  06C6  0ABB               	incf	___aldiv@divisor,f
  6019  06C7  1903               	skipnz
  6020  06C8  0ABC               	incf	___aldiv@divisor+1,f
  6021  06C9  1903               	skipnz
  6022  06CA  0ABD               	incf	___aldiv@divisor+2,f
  6023  06CB  1903               	skipnz
  6024  06CC  0ABE               	incf	___aldiv@divisor+3,f
  6025  06CD  01C4               	clrf	___aldiv@sign
  6026  06CE  0AC4               	incf	___aldiv@sign,f
  6027  06CF                     i1l644:	
  6028  06CF  1FC2               	btfss	___aldiv@dividend+3,7
  6029  06D0  2EE0               	goto	i1l2299
  6030  06D1  09BF               	comf	___aldiv@dividend,f
  6031  06D2  09C0               	comf	___aldiv@dividend+1,f
  6032  06D3  09C1               	comf	___aldiv@dividend+2,f
  6033  06D4  09C2               	comf	___aldiv@dividend+3,f
  6034  06D5  0ABF               	incf	___aldiv@dividend,f
  6035  06D6  1903               	skipnz
  6036  06D7  0AC0               	incf	___aldiv@dividend+1,f
  6037  06D8  1903               	skipnz
  6038  06D9  0AC1               	incf	___aldiv@dividend+2,f
  6039  06DA  1903               	skipnz
  6040  06DB  0AC2               	incf	___aldiv@dividend+3,f
  6041  06DC  3001               	movlw	1
  6042  06DD  00FB               	movwf	??___aldiv
  6043  06DE  087B               	movf	??___aldiv,w
  6044  06DF  06C4               	xorwf	___aldiv@sign,f
  6045  06E0                     i1l2299:	
  6046  06E0  3000               	movlw	0
  6047  06E1  00C8               	movwf	___aldiv@quotient+3
  6048  06E2  3000               	movlw	0
  6049  06E3  00C7               	movwf	___aldiv@quotient+2
  6050  06E4  3000               	movlw	0
  6051  06E5  00C6               	movwf	___aldiv@quotient+1
  6052  06E6  3000               	movlw	0
  6053  06E7  00C5               	movwf	___aldiv@quotient
  6054  06E8  083E               	movf	___aldiv@divisor+3,w
  6055  06E9  043D               	iorwf	___aldiv@divisor+2,w
  6056  06EA  043C               	iorwf	___aldiv@divisor+1,w
  6057  06EB  043B               	iorwf	___aldiv@divisor,w
  6058  06EC  1903               	skipnz
  6059  06ED  2F29               	goto	i1l2321
  6060  06EE  01C3               	clrf	___aldiv@counter
  6061  06EF  0AC3               	incf	___aldiv@counter,f
  6062  06F0                     i1l2307:	
  6063  06F0  1BBE               	btfsc	___aldiv@divisor+3,7
  6064  06F1  2EFE               	goto	i1l2309
  6065  06F2  3001               	movlw	1
  6066  06F3                     u202_25:	
  6067  06F3  35BB               	lslf	___aldiv@divisor,f
  6068  06F4  0DBC               	rlf	___aldiv@divisor+1,f
  6069  06F5  0DBD               	rlf	___aldiv@divisor+2,f
  6070  06F6  0DBE               	rlf	___aldiv@divisor+3,f
  6071  06F7  0B89               	decfsz	9,f
  6072  06F8  2EF3               	goto	u202_25
  6073  06F9  3001               	movlw	1
  6074  06FA  00FB               	movwf	??___aldiv
  6075  06FB  087B               	movf	??___aldiv,w
  6076  06FC  07C3               	addwf	___aldiv@counter,f
  6077  06FD  2EF0               	goto	i1l2307
  6078  06FE                     i1l2309:	
  6079  06FE  3001               	movlw	1
  6080  06FF                     u204_25:	
  6081  06FF  35C5               	lslf	___aldiv@quotient,f
  6082  0700  0DC6               	rlf	___aldiv@quotient+1,f
  6083  0701  0DC7               	rlf	___aldiv@quotient+2,f
  6084  0702  0DC8               	rlf	___aldiv@quotient+3,f
  6085  0703  0B89               	decfsz	9,f
  6086  0704  2EFF               	goto	u204_25
  6087  0705  083E               	movf	___aldiv@divisor+3,w
  6088  0706  0242               	subwf	___aldiv@dividend+3,w
  6089  0707  1D03               	skipz
  6090  0708  2F13               	goto	u205_25
  6091  0709  083D               	movf	___aldiv@divisor+2,w
  6092  070A  0241               	subwf	___aldiv@dividend+2,w
  6093  070B  1D03               	skipz
  6094  070C  2F13               	goto	u205_25
  6095  070D  083C               	movf	___aldiv@divisor+1,w
  6096  070E  0240               	subwf	___aldiv@dividend+1,w
  6097  070F  1D03               	skipz
  6098  0710  2F13               	goto	u205_25
  6099  0711  083B               	movf	___aldiv@divisor,w
  6100  0712  023F               	subwf	___aldiv@dividend,w
  6101  0713                     u205_25:	
  6102  0713  1C03               	skipc
  6103  0714  2F1E               	goto	i1l2317
  6104  0715  083B               	movf	___aldiv@divisor,w
  6105  0716  02BF               	subwf	___aldiv@dividend,f
  6106  0717  083C               	movf	___aldiv@divisor+1,w
  6107  0718  3BC0               	subwfb	___aldiv@dividend+1,f
  6108  0719  083D               	movf	___aldiv@divisor+2,w
  6109  071A  3BC1               	subwfb	___aldiv@dividend+2,f
  6110  071B  083E               	movf	___aldiv@divisor+3,w
  6111  071C  3BC2               	subwfb	___aldiv@dividend+3,f
  6112  071D  1445               	bsf	___aldiv@quotient,0
  6113  071E                     i1l2317:	
  6114  071E  3001               	movlw	1
  6115  071F                     u206_25:	
  6116  071F  36BE               	lsrf	___aldiv@divisor+3,f
  6117  0720  0CBD               	rrf	___aldiv@divisor+2,f
  6118  0721  0CBC               	rrf	___aldiv@divisor+1,f
  6119  0722  0CBB               	rrf	___aldiv@divisor,f
  6120  0723  0B89               	decfsz	9,f
  6121  0724  2F1F               	goto	u206_25
  6122  0725  3001               	movlw	1
  6123  0726  02C3               	subwf	___aldiv@counter,f
  6124  0727  1D03               	btfss	3,2
  6125  0728  2EFE               	goto	i1l2309
  6126  0729                     i1l2321:	
  6127  0729  0844               	movf	___aldiv@sign,w
  6128  072A  1903               	btfsc	3,2
  6129  072B  2F37               	goto	i1l2325
  6130  072C  09C5               	comf	___aldiv@quotient,f
  6131  072D  09C6               	comf	___aldiv@quotient+1,f
  6132  072E  09C7               	comf	___aldiv@quotient+2,f
  6133  072F  09C8               	comf	___aldiv@quotient+3,f
  6134  0730  0AC5               	incf	___aldiv@quotient,f
  6135  0731  1903               	skipnz
  6136  0732  0AC6               	incf	___aldiv@quotient+1,f
  6137  0733  1903               	skipnz
  6138  0734  0AC7               	incf	___aldiv@quotient+2,f
  6139  0735  1903               	skipnz
  6140  0736  0AC8               	incf	___aldiv@quotient+3,f
  6141  0737                     i1l2325:	
  6142  0737  0848               	movf	___aldiv@quotient+3,w
  6143  0738  00BE               	movwf	?___aldiv+3
  6144  0739  0847               	movf	___aldiv@quotient+2,w
  6145  073A  00BD               	movwf	?___aldiv+2
  6146  073B  0846               	movf	___aldiv@quotient+1,w
  6147  073C  00BC               	movwf	?___aldiv+1
  6148  073D  0845               	movf	___aldiv@quotient,w
  6149  073E  00BB               	movwf	?___aldiv
  6150  073F  0008               	return
  6151  0740                     __end_of___aldiv:	
  6152                           
  6153                           	psect	text35
  6154  0AAE                     __ptext35:	
  6155 ;; *************** function _I2C_LCD_SetCursor *****************
  6156 ;; Defined at:
  6157 ;;		line 112 in file "../My_header\My_I2C.h"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  col             1    wreg     unsigned char 
  6160 ;;  row             1    7[COMMON] unsigned char 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  col             1   10[COMMON] unsigned char 
  6163 ;;  row_offsets     2    8[COMMON] unsigned char [2]
  6164 ;; Return value:  Size  Location     Type
  6165 ;;		None               void
  6166 ;; Registers used:
  6167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6173 ;;      Params:         1       0       0       0       0       0
  6174 ;;      Locals:         3       0       0       0       0       0
  6175 ;;      Temps:          0       0       0       0       0       0
  6176 ;;      Totals:         4       0       0       0       0       0
  6177 ;;Total ram usage:        4 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; Hardware stack levels required when called:    3
  6180 ;; This function calls:
  6181 ;;		i1_I2C_LCD_Command
  6182 ;; This function is called by:
  6183 ;;		_display
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           
  6188                           ;psect for function _I2C_LCD_SetCursor
  6189  0AAE                     _I2C_LCD_SetCursor:	
  6190                           
  6191                           ;incstack = 0
  6192                           ; Regs used in _I2C_LCD_SetCursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6193                           ;I2C_LCD_SetCursor@col stored from wreg
  6194  0AAE  00FA               	movwf	I2C_LCD_SetCursor@col
  6195                           
  6196                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
  6197  0AAF  0021               	movlb	1	; select bank1
  6198  0AB0  086F               	movf	(I2C_LCD_SetCursor@F2900+1)^(0+128),w
  6199  0AB1  00F9               	movwf	I2C_LCD_SetCursor@row_offsets+1
  6200  0AB2  086E               	movf	I2C_LCD_SetCursor@F2900^(0+128),w
  6201  0AB3  00F8               	movwf	I2C_LCD_SetCursor@row_offsets
  6202                           
  6203                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  6204  0AB4  0877               	movf	I2C_LCD_SetCursor@row,w
  6205  0AB5  3E78               	addlw	(low (I2C_LCD_SetCursor@row_offsets| 0))& (0+255)
  6206  0AB6  0086               	movwf	6
  6207  0AB7  0187               	clrf	7
  6208  0AB8  0801               	movf	1,w
  6209  0AB9  077A               	addwf	I2C_LCD_SetCursor@col,w
  6210  0ABA  3880               	iorlw	128
  6211  0ABB  318B  23AA         	fcall	i1_I2C_LCD_Command
  6212  0ABD  0008               	return
  6213  0ABE                     __end_of_I2C_LCD_SetCursor:	
  6214                           
  6215                           	psect	text36
  6216  0BAA                     __ptext36:	
  6217 ;; *************** function i1_I2C_LCD_Command *****************
  6218 ;; Defined at:
  6219 ;;		line 94 in file "../My_header\My_I2C.h"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  c               1    wreg     unsigned char 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  c               1    5[COMMON] unsigned char 
  6224 ;;  I2C_LCD_Comm    1    6[COMMON] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;		None               void
  6227 ;; Registers used:
  6228 ;;		wreg, status,2, status,0, pclath, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6234 ;;      Params:         0       0       0       0       0       0
  6235 ;;      Locals:         2       0       0       0       0       0
  6236 ;;      Temps:          1       0       0       0       0       0
  6237 ;;      Totals:         3       0       0       0       0       0
  6238 ;;Total ram usage:        3 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    2
  6241 ;; This function calls:
  6242 ;;		i1_I2C_Send
  6243 ;;		i1_I2C_Start
  6244 ;;		i1_I2C_Stop
  6245 ;; This function is called by:
  6246 ;;		_I2C_LCD_SetCursor
  6247 ;;		i1_I2C_LCD_Clear
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           
  6252                           ;psect for function i1_I2C_LCD_Command
  6253  0BAA                     i1_I2C_LCD_Command:	
  6254                           
  6255                           ;incstack = 0
  6256                           ; Regs used in i1_I2C_LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  6257                           ;i1I2C_LCD_Command@c stored from wreg
  6258  0BAA  00F5               	movwf	i1I2C_LCD_Command@c
  6259                           
  6260                           ;My_header\My_I2C.h: 95: uint8_t ans;
  6261                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
  6262  0BAB  01F2               	clrf	i1I2C_Start@rw
  6263  0BAC  303E               	movlw	62
  6264  0BAD  318B  2340  318B   	fcall	i1_I2C_Start
  6265  0BB0  00F4               	movwf	??i1_I2C_LCD_Command
  6266  0BB1  0874               	movf	??i1_I2C_LCD_Command,w
  6267  0BB2  00F6               	movwf	i1I2C_LCD_Command@ans
  6268                           
  6269                           ;My_header\My_I2C.h: 98: if (ans == 0) {
  6270  0BB3  0876               	movf	i1I2C_LCD_Command@ans,w
  6271  0BB4  1D03               	btfss	3,2
  6272  0BB5  2BBE               	goto	i1l256
  6273                           
  6274                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
  6275  0BB6  3080               	movlw	128
  6276  0BB7  318A  229E  318B   	fcall	i1_I2C_Send
  6277                           
  6278                           ;My_header\My_I2C.h: 101: I2C_Send(c);
  6279  0BBA  0875               	movf	i1I2C_LCD_Command@c,w
  6280  0BBB  318A  229E  318B   	fcall	i1_I2C_Send
  6281  0BBE                     i1l256:	
  6282                           
  6283                           ;My_header\My_I2C.h: 102: }
  6284                           ;My_header\My_I2C.h: 103: I2C_Stop();
  6285  0BBE  318A  224A  318B   	fcall	i1_I2C_Stop
  6286                           
  6287                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6288  0BC1  3045               	movlw	69
  6289  0BC2  00F4               	movwf	??i1_I2C_LCD_Command
  6290  0BC3                     u428_27:	
  6291  0BC3  0BF4               	decfsz	??i1_I2C_LCD_Command,f
  6292  0BC4  2BC3               	goto	u428_27
  6293  0BC5  0008               	return
  6294  0BC6                     __end_ofi1_I2C_LCD_Command:	
  6295                           
  6296                           	psect	text37
  6297  0D47                     __ptext37:	
  6298 ;; *************** function _I2C_LCD_Puts *****************
  6299 ;; Defined at:
  6300 ;;		line 131 in file "../My_header\My_I2C.h"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;  s               2    4[COMMON] PTR const unsigned char 
  6303 ;;		 -> STR_12(10), STR_11(10), STR_10(8), STR_9(7), 
  6304 ;;		 -> STR_8(4), STR_7(5), STR_6(7), STR_5(6), 
  6305 ;;		 -> STR_4(5), STR_3(7), STR_2(6), STR_1(17), 
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;  ans             2    8[COMMON] int 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;		None               void
  6310 ;; Registers used:
  6311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6317 ;;      Params:         2       0       0       0       0       0
  6318 ;;      Locals:         2       0       0       0       0       0
  6319 ;;      Temps:          2       0       0       0       0       0
  6320 ;;      Totals:         6       0       0       0       0       0
  6321 ;;Total ram usage:        6 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    2
  6324 ;; This function calls:
  6325 ;;		i1_I2C_Send
  6326 ;;		i1_I2C_Start
  6327 ;;		i1_I2C_Stop
  6328 ;; This function is called by:
  6329 ;;		_display
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           
  6334                           ;psect for function _I2C_LCD_Puts
  6335  0D47                     _I2C_LCD_Puts:	
  6336                           
  6337                           ;My_header\My_I2C.h: 132: int ans;
  6338                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
  6339                           
  6340                           ;incstack = 0
  6341                           ; Regs used in _I2C_LCD_Puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6342  0D47  01F2               	clrf	i1I2C_Start@rw
  6343  0D48  303E               	movlw	62
  6344  0D49  318B  2340  318D   	fcall	i1_I2C_Start
  6345  0D4C  00F6               	movwf	??_I2C_LCD_Puts
  6346  0D4D  01F7               	clrf	??_I2C_LCD_Puts+1
  6347  0D4E  0876               	movf	??_I2C_LCD_Puts,w
  6348  0D4F  00F8               	movwf	I2C_LCD_Puts@ans
  6349  0D50  0877               	movf	??_I2C_LCD_Puts+1,w
  6350  0D51  00F9               	movwf	I2C_LCD_Puts@ans+1
  6351                           
  6352                           ;My_header\My_I2C.h: 135: if (ans == 0) {
  6353  0D52  0878               	movf	I2C_LCD_Puts@ans,w
  6354  0D53  0479               	iorwf	I2C_LCD_Puts@ans+1,w
  6355  0D54  1D03               	btfss	3,2
  6356  0D55  2D72               	goto	i1l2285
  6357                           
  6358                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
  6359  0D56  3040               	movlw	64
  6360  0D57  318A  229E  318D   	fcall	i1_I2C_Send
  6361  0D5A                     i1l2283:	
  6362                           ;My_header\My_I2C.h: 137: while (*s) {
  6363                           
  6364  0D5A  0874               	movf	I2C_LCD_Puts@s,w
  6365  0D5B  0084               	movwf	4
  6366  0D5C  0875               	movf	I2C_LCD_Puts@s+1,w
  6367  0D5D  0085               	movwf	5
  6368  0D5E  0012               	moviw fsr0++
  6369  0D5F  1903               	btfsc	3,2
  6370  0D60  2D72               	goto	i1l2285
  6371                           
  6372                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
  6373  0D61  0874               	movf	I2C_LCD_Puts@s,w
  6374  0D62  0084               	movwf	4
  6375  0D63  0875               	movf	I2C_LCD_Puts@s+1,w
  6376  0D64  0085               	movwf	5
  6377  0D65  0800               	movf	0,w	;code access
  6378  0D66  318A  229E  318D   	fcall	i1_I2C_Send
  6379  0D69  3001               	movlw	1
  6380  0D6A  07F4               	addwf	I2C_LCD_Puts@s,f
  6381  0D6B  3000               	movlw	0
  6382  0D6C  3DF5               	addwfc	I2C_LCD_Puts@s+1,f
  6383                           
  6384                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6385  0D6D  3045               	movlw	69
  6386  0D6E  00F6               	movwf	??_I2C_LCD_Puts
  6387  0D6F                     u429_27:	
  6388  0D6F  0BF6               	decfsz	??_I2C_LCD_Puts,f
  6389  0D70  2D6F               	goto	u429_27
  6390  0D71  2D5A               	goto	i1l2283
  6391  0D72                     i1l2285:	
  6392                           
  6393                           ;My_header\My_I2C.h: 140: }
  6394                           ;My_header\My_I2C.h: 141: }
  6395                           ;My_header\My_I2C.h: 142: I2C_Stop();
  6396  0D72  318A  224A         	fcall	i1_I2C_Stop
  6397  0D74  0008               	return
  6398  0D75                     __end_of_I2C_LCD_Puts:	
  6399                           
  6400                           	psect	text38
  6401  0B8E                     __ptext38:	
  6402 ;; *************** function _I2C_LCD_Putc *****************
  6403 ;; Defined at:
  6404 ;;		line 118 in file "../My_header\My_I2C.h"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  c               1    wreg     unsigned char 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  c               1    5[COMMON] unsigned char 
  6409 ;;  ans             1    6[COMMON] unsigned char 
  6410 ;; Return value:  Size  Location     Type
  6411 ;;		None               void
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0, pclath, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6419 ;;      Params:         0       0       0       0       0       0
  6420 ;;      Locals:         2       0       0       0       0       0
  6421 ;;      Temps:          1       0       0       0       0       0
  6422 ;;      Totals:         3       0       0       0       0       0
  6423 ;;Total ram usage:        3 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    2
  6426 ;; This function calls:
  6427 ;;		i1_I2C_Send
  6428 ;;		i1_I2C_Start
  6429 ;;		i1_I2C_Stop
  6430 ;; This function is called by:
  6431 ;;		_display
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           
  6436                           ;psect for function _I2C_LCD_Putc
  6437  0B8E                     _I2C_LCD_Putc:	
  6438                           
  6439                           ;incstack = 0
  6440                           ; Regs used in _I2C_LCD_Putc: [wreg+status,2+status,0+pclath+cstack]
  6441                           ;I2C_LCD_Putc@c stored from wreg
  6442  0B8E  00F5               	movwf	I2C_LCD_Putc@c
  6443                           
  6444                           ;My_header\My_I2C.h: 119: uint8_t ans;
  6445                           ;My_header\My_I2C.h: 121: ans = I2C_Start(0x3E, 0);
  6446  0B8F  01F2               	clrf	i1I2C_Start@rw
  6447  0B90  303E               	movlw	62
  6448  0B91  318B  2340  318B   	fcall	i1_I2C_Start
  6449  0B94  00F4               	movwf	??_I2C_LCD_Putc
  6450  0B95  0874               	movf	??_I2C_LCD_Putc,w
  6451  0B96  00F6               	movwf	I2C_LCD_Putc@ans
  6452                           
  6453                           ;My_header\My_I2C.h: 122: if (ans == 0) {
  6454  0B97  0876               	movf	I2C_LCD_Putc@ans,w
  6455  0B98  1D03               	btfss	3,2
  6456  0B99  2BA2               	goto	i1l268
  6457                           
  6458                           ;My_header\My_I2C.h: 124: I2C_Send(0b11000000);
  6459  0B9A  30C0               	movlw	192
  6460  0B9B  318A  229E  318B   	fcall	i1_I2C_Send
  6461                           
  6462                           ;My_header\My_I2C.h: 125: I2C_Send(c);
  6463  0B9E  0875               	movf	I2C_LCD_Putc@c,w
  6464  0B9F  318A  229E  318B   	fcall	i1_I2C_Send
  6465  0BA2                     i1l268:	
  6466                           
  6467                           ;My_header\My_I2C.h: 126: }
  6468                           ;My_header\My_I2C.h: 127: I2C_Stop();
  6469  0BA2  318A  224A  318B   	fcall	i1_I2C_Stop
  6470                           
  6471                           ;My_header\My_I2C.h: 128: _delay((unsigned long)((26)*(32000000/4000000.0)));
  6472  0BA5  3045               	movlw	69
  6473  0BA6  00F4               	movwf	??_I2C_LCD_Putc
  6474  0BA7                     u430_27:	
  6475  0BA7  0BF4               	decfsz	??_I2C_LCD_Putc,f
  6476  0BA8  2BA7               	goto	u430_27
  6477  0BA9  0008               	return
  6478  0BAA                     __end_of_I2C_LCD_Putc:	
  6479                           
  6480                           	psect	text39
  6481  0A4A                     __ptext39:	
  6482 ;; *************** function i1_I2C_Stop *****************
  6483 ;; Defined at:
  6484 ;;		line 59 in file "../My_header\My_I2C.h"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, status,0, pclath, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6498 ;;      Params:         0       0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0
  6500 ;;      Temps:          0       0       0       0       0       0
  6501 ;;      Totals:         0       0       0       0       0       0
  6502 ;;Total ram usage:        0 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    1
  6505 ;; This function calls:
  6506 ;;		i1_I2C_IdleCheck
  6507 ;; This function is called by:
  6508 ;;		_I2C_LCD_Putc
  6509 ;;		_I2C_LCD_Puts
  6510 ;;		i1_I2C_LCD_Command
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           
  6515                           ;psect for function i1_I2C_Stop
  6516  0A4A                     i1_I2C_Stop:	
  6517                           
  6518                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
  6519                           
  6520                           ;incstack = 0
  6521                           ; Regs used in i1_I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  6522  0A4A  3005               	movlw	5
  6523  0A4B  318A  225C         	fcall	i1_I2C_IdleCheck
  6524                           
  6525                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
  6526  0A4D  0024               	movlb	4	; select bank4
  6527  0A4E  1516               	bsf	22,2	;volatile
  6528  0A4F  0008               	return
  6529  0A50                     __end_ofi1_I2C_Stop:	
  6530                           
  6531                           	psect	text40
  6532  0B40                     __ptext40:	
  6533 ;; *************** function i1_I2C_Start *****************
  6534 ;; Defined at:
  6535 ;;		line 35 in file "../My_header\My_I2C.h"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;  adrs            1    wreg     unsigned char 
  6538 ;;  rw              1    2[COMMON] unsigned char 
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;  adrs            1    3[COMMON] unsigned char 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  1    wreg      unsigned char 
  6543 ;; Registers used:
  6544 ;;		wreg, status,2, status,0, pclath, cstack
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6550 ;;      Params:         1       0       0       0       0       0
  6551 ;;      Locals:         1       0       0       0       0       0
  6552 ;;      Temps:          0       0       0       0       0       0
  6553 ;;      Totals:         2       0       0       0       0       0
  6554 ;;Total ram usage:        2 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:    1
  6557 ;; This function calls:
  6558 ;;		i1_I2C_IdleCheck
  6559 ;; This function is called by:
  6560 ;;		_I2C_LCD_Putc
  6561 ;;		_I2C_LCD_Puts
  6562 ;;		i1_I2C_LCD_Command
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           
  6567                           ;psect for function i1_I2C_Start
  6568  0B40                     i1_I2C_Start:	
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in i1_I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  6572                           ;i1I2C_Start@adrs stored from wreg
  6573  0B40  00F3               	movwf	i1I2C_Start@adrs
  6574                           
  6575                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
  6576  0B41  3005               	movlw	5
  6577  0B42  318A  225C  318B   	fcall	i1_I2C_IdleCheck
  6578                           
  6579                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
  6580  0B45  0024               	movlb	4	; select bank4
  6581  0B46  1416               	bsf	22,0	;volatile
  6582                           
  6583                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
  6584  0B47  3005               	movlw	5
  6585  0B48  318A  225C  318B   	fcall	i1_I2C_IdleCheck
  6586                           
  6587                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
  6588  0B4B  0020               	movlb	0	; select bank0
  6589  0B4C  1191               	bcf	17,3	;volatile
  6590                           
  6591                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  6592  0B4D  3573               	lslf	i1I2C_Start@adrs,w
  6593  0B4E  0772               	addwf	i1I2C_Start@rw,w
  6594  0B4F  0024               	movlb	4	; select bank4
  6595  0B50  0091               	movwf	17	;volatile
  6596  0B51                     i1l232:	
  6597                           ;My_header\My_I2C.h: 43: while (!SSP1IF);
  6598                           
  6599  0B51  0020               	movlb	0	; select bank0
  6600  0B52  1D91               	btfss	17,3	;volatile
  6601  0B53  2B51               	goto	i1l232
  6602                           
  6603                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
  6604  0B54  0024               	movlb	4	; select bank4
  6605  0B55  0E16               	swapf	22,w	;volatile
  6606  0B56  0C89               	rrf	9,f
  6607  0B57  0C89               	rrf	9,f
  6608  0B58  3901               	andlw	1
  6609  0B59  0008               	return
  6610  0B5A                     __end_ofi1_I2C_Start:	
  6611                           
  6612                           	psect	text41
  6613  0A9E                     __ptext41:	
  6614 ;; *************** function i1_I2C_Send *****************
  6615 ;; Defined at:
  6616 ;;		line 65 in file "../My_header\My_I2C.h"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  data            1    wreg     unsigned char 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  data            1    2[COMMON] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      unsigned char 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0, pclath, cstack
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6630 ;;      Params:         0       0       0       0       0       0
  6631 ;;      Locals:         1       0       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0
  6633 ;;      Totals:         1       0       0       0       0       0
  6634 ;;Total ram usage:        1 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; Hardware stack levels required when called:    1
  6637 ;; This function calls:
  6638 ;;		i1_I2C_IdleCheck
  6639 ;; This function is called by:
  6640 ;;		_I2C_LCD_Putc
  6641 ;;		_I2C_LCD_Puts
  6642 ;;		i1_I2C_LCD_Command
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           
  6647                           ;psect for function i1_I2C_Send
  6648  0A9E                     i1_I2C_Send:	
  6649                           
  6650                           ;incstack = 0
  6651                           ; Regs used in i1_I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  6652                           ;i1I2C_Send@data stored from wreg
  6653  0A9E  00F2               	movwf	i1I2C_Send@data
  6654                           
  6655                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
  6656  0A9F  3005               	movlw	5
  6657  0AA0  318A  225C  318A   	fcall	i1_I2C_IdleCheck
  6658                           
  6659                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
  6660  0AA3  0020               	movlb	0	; select bank0
  6661  0AA4  1191               	bcf	17,3	;volatile
  6662                           
  6663                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
  6664  0AA5  0872               	movf	i1I2C_Send@data,w
  6665  0AA6  0024               	movlb	4	; select bank4
  6666  0AA7  0091               	movwf	17	;volatile
  6667  0AA8                     i1l247:	
  6668                           ;My_header\My_I2C.h: 69: while (!SSP1IF);
  6669                           
  6670  0AA8  0020               	movlb	0	; select bank0
  6671  0AA9  1D91               	btfss	17,3	;volatile
  6672  0AAA  2AA8               	goto	i1l247
  6673                           
  6674                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
  6675                           ;	Return value of i1_I2C_Send is never used
  6676  0AAB  0024               	movlb	4	; select bank4
  6677  0AAC  0816               	movf	22,w	;volatile
  6678  0AAD  0008               	return
  6679  0AAE                     __end_ofi1_I2C_Send:	
  6680                           
  6681                           	psect	text42
  6682  0A5C                     __ptext42:	
  6683 ;; *************** function i1_I2C_IdleCheck *****************
  6684 ;; Defined at:
  6685 ;;		line 21 in file "../My_header\My_I2C.h"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  mask            1    wreg     unsigned char 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  mask            1    1[COMMON] unsigned char 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;		None               void
  6692 ;; Registers used:
  6693 ;;		wreg, status,2, status,0
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6699 ;;      Params:         0       0       0       0       0       0
  6700 ;;      Locals:         1       0       0       0       0       0
  6701 ;;      Temps:          1       0       0       0       0       0
  6702 ;;      Totals:         2       0       0       0       0       0
  6703 ;;Total ram usage:        2 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		i1_I2C_Start
  6709 ;;		i1_I2C_Stop
  6710 ;;		i1_I2C_Send
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           
  6715                           ;psect for function i1_I2C_IdleCheck
  6716  0A5C                     i1_I2C_IdleCheck:	
  6717                           
  6718                           ;incstack = 0
  6719                           ; Regs used in i1_I2C_IdleCheck: [wreg+status,2+status,0]
  6720                           ;i1I2C_IdleCheck@mask stored from wreg
  6721  0A5C  00F1               	movwf	i1I2C_IdleCheck@mask
  6722  0A5D                     i1l2121:	
  6723                           ;My_header\My_I2C.h: 22: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  6724                           
  6725  0A5D  0871               	movf	i1I2C_IdleCheck@mask,w
  6726  0A5E  0024               	movlb	4	; select bank4
  6727  0A5F  0514               	andwf	20,w	;volatile
  6728  0A60  00F0               	movwf	??i1_I2C_IdleCheck
  6729  0A61  0816               	movf	22,w	;volatile
  6730  0A62  391F               	andlw	31
  6731  0A63  0470               	iorwf	??i1_I2C_IdleCheck,w
  6732  0A64  1903               	btfsc	3,2
  6733  0A65  0008               	return
  6734  0A66  2A5D               	goto	i1l2121
  6735  0A67                     __end_ofi1_I2C_IdleCheck:	
  6736                           
  6737                           	psect	text43
  6738  0578                     __ptext43:	
  6739 ;; *************** function _button_timer_interrupt *****************
  6740 ;; Defined at:
  6741 ;;		line 51 in file "../My_header\My_button.h"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  bt              1    wreg     PTR struct button
  6744 ;;		 -> sw_1(4), sw_0(4), sh_2(4), sh_1(4), 
  6745 ;;		 -> sh_0(4), 
  6746 ;;  sw_value        1    0[COMMON] unsigned char 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;  bt              1    3[COMMON] PTR struct button
  6749 ;;		 -> sw_1(4), sw_0(4), sh_2(4), sh_1(4), 
  6750 ;;		 -> sh_0(4), 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;		None               void
  6753 ;; Registers used:
  6754 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6760 ;;      Params:         1       0       0       0       0       0
  6761 ;;      Locals:         1       0       0       0       0       0
  6762 ;;      Temps:          2       0       0       0       0       0
  6763 ;;      Totals:         4       0       0       0       0       0
  6764 ;;Total ram usage:        4 bytes
  6765 ;; Hardware stack levels used:    1
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_isr
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           
  6774                           ;psect for function _button_timer_interrupt
  6775  0578                     _button_timer_interrupt:	
  6776                           
  6777                           ;incstack = 0
  6778                           ; Regs used in _button_timer_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6779                           ;button_timer_interrupt@bt stored from wreg
  6780  0578  00F3               	movwf	button_timer_interrupt@bt
  6781                           
  6782                           ;My_header\My_button.h: 52: if (sw_value) {
  6783  0579  0870               	movf	button_timer_interrupt@sw_value,w
  6784  057A  1903               	btfsc	3,2
  6785  057B  2E0F               	goto	i1l2547
  6786                           
  6787                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
  6788  057C  0873               	movf	button_timer_interrupt@bt,w
  6789  057D  0086               	movwf	6
  6790  057E  0187               	clrf	7
  6791  057F  0016               	moviw fsr1++
  6792  0580  3A84               	xorlw	132
  6793  0581  00F1               	movwf	??_button_timer_interrupt
  6794  0582  0016               	moviw fsr1++
  6795  0583  3A03               	xorlw	3
  6796  0584  04F1               	iorwf	??_button_timer_interrupt,f
  6797  0585  1D03               	btfss	3,2
  6798  0586  2D8C               	goto	i1l316
  6799  0587  0873               	movf	button_timer_interrupt@bt,w
  6800  0588  3E03               	addlw	3
  6801  0589  0086               	movwf	6
  6802  058A  0187               	clrf	7
  6803  058B  1781               	bsf	1,7
  6804  058C                     i1l316:	
  6805                           
  6806                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
  6807  058C  0873               	movf	button_timer_interrupt@bt,w
  6808  058D  0086               	movwf	6
  6809  058E  0187               	clrf	7
  6810  058F  0016               	moviw fsr1++
  6811  0590  3ABC               	xorlw	188
  6812  0591  00F1               	movwf	??_button_timer_interrupt
  6813  0592  0016               	moviw fsr1++
  6814  0593  3A02               	xorlw	2
  6815  0594  04F1               	iorwf	??_button_timer_interrupt,f
  6816  0595  1D03               	btfss	3,2
  6817  0596  2D9C               	goto	i1l317
  6818  0597  0873               	movf	button_timer_interrupt@bt,w
  6819  0598  3E03               	addlw	3
  6820  0599  0086               	movwf	6
  6821  059A  0187               	clrf	7
  6822  059B  1701               	bsf	1,6
  6823  059C                     i1l317:	
  6824                           
  6825                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
  6826  059C  0873               	movf	button_timer_interrupt@bt,w
  6827  059D  0086               	movwf	6
  6828  059E  0187               	clrf	7
  6829  059F  0016               	moviw fsr1++
  6830  05A0  3AF4               	xorlw	244
  6831  05A1  00F1               	movwf	??_button_timer_interrupt
  6832  05A2  0016               	moviw fsr1++
  6833  05A3  3A01               	xorlw	1
  6834  05A4  04F1               	iorwf	??_button_timer_interrupt,f
  6835  05A5  1D03               	btfss	3,2
  6836  05A6  2DAC               	goto	i1l318
  6837  05A7  0873               	movf	button_timer_interrupt@bt,w
  6838  05A8  3E03               	addlw	3
  6839  05A9  0086               	movwf	6
  6840  05AA  0187               	clrf	7
  6841  05AB  1681               	bsf	1,5
  6842  05AC                     i1l318:	
  6843                           
  6844                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
  6845  05AC  0873               	movf	button_timer_interrupt@bt,w
  6846  05AD  0086               	movwf	6
  6847  05AE  0187               	clrf	7
  6848  05AF  0016               	moviw fsr1++
  6849  05B0  3A2C               	xorlw	44
  6850  05B1  00F1               	movwf	??_button_timer_interrupt
  6851  05B2  0016               	moviw fsr1++
  6852  05B3  3A01               	xorlw	1
  6853  05B4  04F1               	iorwf	??_button_timer_interrupt,f
  6854  05B5  1D03               	btfss	3,2
  6855  05B6  2DBC               	goto	i1l319
  6856  05B7  0873               	movf	button_timer_interrupt@bt,w
  6857  05B8  3E03               	addlw	3
  6858  05B9  0086               	movwf	6
  6859  05BA  0187               	clrf	7
  6860  05BB  1601               	bsf	1,4
  6861  05BC                     i1l319:	
  6862                           
  6863                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  6864  05BC  0873               	movf	button_timer_interrupt@bt,w
  6865  05BD  0086               	movwf	6
  6866  05BE  0187               	clrf	7
  6867  05BF  0016               	moviw fsr1++
  6868  05C0  3A96               	xorlw	150
  6869  05C1  00F1               	movwf	??_button_timer_interrupt
  6870  05C2  0016               	moviw fsr1++
  6871  05C3  04F1               	iorwf	??_button_timer_interrupt,f
  6872  05C4  1D03               	btfss	3,2
  6873  05C5  2DCB               	goto	i1l320
  6874  05C6  0873               	movf	button_timer_interrupt@bt,w
  6875  05C7  3E03               	addlw	3
  6876  05C8  0086               	movwf	6
  6877  05C9  0187               	clrf	7
  6878  05CA  1581               	bsf	1,3
  6879  05CB                     i1l320:	
  6880                           
  6881                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
  6882  05CB  0873               	movf	button_timer_interrupt@bt,w
  6883  05CC  0086               	movwf	6
  6884  05CD  0187               	clrf	7
  6885  05CE  0016               	moviw fsr1++
  6886  05CF  3A3C               	xorlw	60
  6887  05D0  00F1               	movwf	??_button_timer_interrupt
  6888  05D1  0016               	moviw fsr1++
  6889  05D2  04F1               	iorwf	??_button_timer_interrupt,f
  6890  05D3  1D03               	btfss	3,2
  6891  05D4  2DDA               	goto	i1l321
  6892  05D5  0873               	movf	button_timer_interrupt@bt,w
  6893  05D6  3E03               	addlw	3
  6894  05D7  0086               	movwf	6
  6895  05D8  0187               	clrf	7
  6896  05D9  1501               	bsf	1,2
  6897  05DA                     i1l321:	
  6898                           
  6899                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
  6900  05DA  0873               	movf	button_timer_interrupt@bt,w
  6901  05DB  0086               	movwf	6
  6902  05DC  0187               	clrf	7
  6903  05DD  0016               	moviw fsr1++
  6904  05DE  3A10               	xorlw	16
  6905  05DF  00F1               	movwf	??_button_timer_interrupt
  6906  05E0  0016               	moviw fsr1++
  6907  05E1  04F1               	iorwf	??_button_timer_interrupt,f
  6908  05E2  1D03               	btfss	3,2
  6909  05E3  2DE9               	goto	i1l322
  6910  05E4  0873               	movf	button_timer_interrupt@bt,w
  6911  05E5  3E03               	addlw	3
  6912  05E6  0086               	movwf	6
  6913  05E7  0187               	clrf	7
  6914  05E8  1481               	bsf	1,1
  6915  05E9                     i1l322:	
  6916                           
  6917                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  6918  05E9  0873               	movf	button_timer_interrupt@bt,w
  6919  05EA  0086               	movwf	6
  6920  05EB  0187               	clrf	7
  6921  05EC  0016               	moviw fsr1++
  6922  05ED  3A02               	xorlw	2
  6923  05EE  00F1               	movwf	??_button_timer_interrupt
  6924  05EF  0016               	moviw fsr1++
  6925  05F0  04F1               	iorwf	??_button_timer_interrupt,f
  6926  05F1  1D03               	btfss	3,2
  6927  05F2  2DF8               	goto	i1l2543
  6928  05F3  0873               	movf	button_timer_interrupt@bt,w
  6929  05F4  3E03               	addlw	3
  6930  05F5  0086               	movwf	6
  6931  05F6  0187               	clrf	7
  6932  05F7  1401               	bsf	1,0
  6933  05F8                     i1l2543:	
  6934                           
  6935                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
  6936  05F8  0873               	movf	button_timer_interrupt@bt,w
  6937  05F9  0086               	movwf	6
  6938  05FA  0187               	clrf	7
  6939  05FB  3F40               	moviw [0]fsr1
  6940  05FC  00F1               	movwf	??_button_timer_interrupt
  6941  05FD  3F41               	moviw [1]fsr1
  6942  05FE  00F2               	movwf	??_button_timer_interrupt+1
  6943  05FF  3003               	movlw	3
  6944  0600  0272               	subwf	??_button_timer_interrupt+1,w
  6945  0601  3085               	movlw	133
  6946  0602  1903               	skipnz
  6947  0603  0271               	subwf	??_button_timer_interrupt,w
  6948  0604  1803               	skipnc
  6949  0605  0008               	return
  6950  0606  0873               	movf	button_timer_interrupt@bt,w
  6951  0607  0086               	movwf	6
  6952  0608  0187               	clrf	7
  6953  0609  3001               	movlw	1
  6954  060A  0781               	addwf	1,f
  6955  060B  3141               	addfsr 1,1
  6956  060C  1803               	skipnc
  6957  060D  0A81               	incf	1,f
  6958                           
  6959                           ;My_header\My_button.h: 62: } else {
  6960  060E  0008               	return
  6961  060F                     i1l2547:	
  6962                           
  6963                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
  6964  060F  0873               	movf	button_timer_interrupt@bt,w
  6965  0610  0086               	movwf	6
  6966  0611  0187               	clrf	7
  6967  0612  3F40               	moviw [0]fsr1
  6968  0613  00F1               	movwf	??_button_timer_interrupt
  6969  0614  3F41               	moviw [1]fsr1
  6970  0615  00F2               	movwf	??_button_timer_interrupt+1
  6971  0616  3003               	movlw	3
  6972  0617  0272               	subwf	??_button_timer_interrupt+1,w
  6973  0618  3084               	movlw	132
  6974  0619  1903               	skipnz
  6975  061A  0271               	subwf	??_button_timer_interrupt,w
  6976  061B  1C03               	skipc
  6977  061C  2E23               	goto	i1l2551
  6978  061D  0873               	movf	button_timer_interrupt@bt,w
  6979  061E  3E02               	addlw	2
  6980  061F  0086               	movwf	6
  6981  0620  0187               	clrf	7
  6982  0621  1781               	bsf	1,7
  6983  0622  2EAE               	goto	i1l2579
  6984  0623                     i1l2551:	
  6985                           
  6986                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
  6987  0623  0873               	movf	button_timer_interrupt@bt,w
  6988  0624  0086               	movwf	6
  6989  0625  0187               	clrf	7
  6990  0626  3F40               	moviw [0]fsr1
  6991  0627  00F1               	movwf	??_button_timer_interrupt
  6992  0628  3F41               	moviw [1]fsr1
  6993  0629  00F2               	movwf	??_button_timer_interrupt+1
  6994  062A  3002               	movlw	2
  6995  062B  0272               	subwf	??_button_timer_interrupt+1,w
  6996  062C  30BC               	movlw	188
  6997  062D  1903               	skipnz
  6998  062E  0271               	subwf	??_button_timer_interrupt,w
  6999  062F  1C03               	skipc
  7000  0630  2E37               	goto	i1l2555
  7001  0631  0873               	movf	button_timer_interrupt@bt,w
  7002  0632  3E02               	addlw	2
  7003  0633  0086               	movwf	6
  7004  0634  0187               	clrf	7
  7005  0635  1701               	bsf	1,6
  7006  0636  2EAE               	goto	i1l2579
  7007  0637                     i1l2555:	
  7008                           
  7009                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
  7010  0637  0873               	movf	button_timer_interrupt@bt,w
  7011  0638  0086               	movwf	6
  7012  0639  0187               	clrf	7
  7013  063A  3F40               	moviw [0]fsr1
  7014  063B  00F1               	movwf	??_button_timer_interrupt
  7015  063C  3F41               	moviw [1]fsr1
  7016  063D  00F2               	movwf	??_button_timer_interrupt+1
  7017  063E  3001               	movlw	1
  7018  063F  0272               	subwf	??_button_timer_interrupt+1,w
  7019  0640  30F4               	movlw	244
  7020  0641  1903               	skipnz
  7021  0642  0271               	subwf	??_button_timer_interrupt,w
  7022  0643  1C03               	skipc
  7023  0644  2E4B               	goto	i1l2559
  7024  0645  0873               	movf	button_timer_interrupt@bt,w
  7025  0646  3E02               	addlw	2
  7026  0647  0086               	movwf	6
  7027  0648  0187               	clrf	7
  7028  0649  1681               	bsf	1,5
  7029  064A  2EAE               	goto	i1l2579
  7030  064B                     i1l2559:	
  7031                           
  7032                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
  7033  064B  0873               	movf	button_timer_interrupt@bt,w
  7034  064C  0086               	movwf	6
  7035  064D  0187               	clrf	7
  7036  064E  3F40               	moviw [0]fsr1
  7037  064F  00F1               	movwf	??_button_timer_interrupt
  7038  0650  3F41               	moviw [1]fsr1
  7039  0651  00F2               	movwf	??_button_timer_interrupt+1
  7040  0652  3001               	movlw	1
  7041  0653  0272               	subwf	??_button_timer_interrupt+1,w
  7042  0654  302C               	movlw	44
  7043  0655  1903               	skipnz
  7044  0656  0271               	subwf	??_button_timer_interrupt,w
  7045  0657  1C03               	skipc
  7046  0658  2E5F               	goto	i1l2563
  7047  0659  0873               	movf	button_timer_interrupt@bt,w
  7048  065A  3E02               	addlw	2
  7049  065B  0086               	movwf	6
  7050  065C  0187               	clrf	7
  7051  065D  1601               	bsf	1,4
  7052  065E  2EAE               	goto	i1l2579
  7053  065F                     i1l2563:	
  7054                           
  7055                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  7056  065F  0873               	movf	button_timer_interrupt@bt,w
  7057  0660  0086               	movwf	6
  7058  0661  0187               	clrf	7
  7059  0662  3F40               	moviw [0]fsr1
  7060  0663  00F1               	movwf	??_button_timer_interrupt
  7061  0664  3F41               	moviw [1]fsr1
  7062  0665  00F2               	movwf	??_button_timer_interrupt+1
  7063  0666  3000               	movlw	0
  7064  0667  0272               	subwf	??_button_timer_interrupt+1,w
  7065  0668  3096               	movlw	150
  7066  0669  1903               	skipnz
  7067  066A  0271               	subwf	??_button_timer_interrupt,w
  7068  066B  1C03               	skipc
  7069  066C  2E73               	goto	i1l2567
  7070  066D  0873               	movf	button_timer_interrupt@bt,w
  7071  066E  3E02               	addlw	2
  7072  066F  0086               	movwf	6
  7073  0670  0187               	clrf	7
  7074  0671  1581               	bsf	1,3
  7075  0672  2EAE               	goto	i1l2579
  7076  0673                     i1l2567:	
  7077                           
  7078                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
  7079  0673  0873               	movf	button_timer_interrupt@bt,w
  7080  0674  0086               	movwf	6
  7081  0675  0187               	clrf	7
  7082  0676  3F40               	moviw [0]fsr1
  7083  0677  00F1               	movwf	??_button_timer_interrupt
  7084  0678  3F41               	moviw [1]fsr1
  7085  0679  00F2               	movwf	??_button_timer_interrupt+1
  7086  067A  3000               	movlw	0
  7087  067B  0272               	subwf	??_button_timer_interrupt+1,w
  7088  067C  303C               	movlw	60
  7089  067D  1903               	skipnz
  7090  067E  0271               	subwf	??_button_timer_interrupt,w
  7091  067F  1C03               	skipc
  7092  0680  2E87               	goto	i1l2571
  7093  0681  0873               	movf	button_timer_interrupt@bt,w
  7094  0682  3E02               	addlw	2
  7095  0683  0086               	movwf	6
  7096  0684  0187               	clrf	7
  7097  0685  1501               	bsf	1,2
  7098  0686  2EAE               	goto	i1l2579
  7099  0687                     i1l2571:	
  7100                           
  7101                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
  7102  0687  0873               	movf	button_timer_interrupt@bt,w
  7103  0688  0086               	movwf	6
  7104  0689  0187               	clrf	7
  7105  068A  3F40               	moviw [0]fsr1
  7106  068B  00F1               	movwf	??_button_timer_interrupt
  7107  068C  3F41               	moviw [1]fsr1
  7108  068D  00F2               	movwf	??_button_timer_interrupt+1
  7109  068E  3000               	movlw	0
  7110  068F  0272               	subwf	??_button_timer_interrupt+1,w
  7111  0690  3010               	movlw	16
  7112  0691  1903               	skipnz
  7113  0692  0271               	subwf	??_button_timer_interrupt,w
  7114  0693  1C03               	skipc
  7115  0694  2E9B               	goto	i1l2575
  7116  0695  0873               	movf	button_timer_interrupt@bt,w
  7117  0696  3E02               	addlw	2
  7118  0697  0086               	movwf	6
  7119  0698  0187               	clrf	7
  7120  0699  1481               	bsf	1,1
  7121  069A  2EAE               	goto	i1l2579
  7122  069B                     i1l2575:	
  7123                           
  7124                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  7125  069B  0873               	movf	button_timer_interrupt@bt,w
  7126  069C  0086               	movwf	6
  7127  069D  0187               	clrf	7
  7128  069E  3F40               	moviw [0]fsr1
  7129  069F  00F1               	movwf	??_button_timer_interrupt
  7130  06A0  3F41               	moviw [1]fsr1
  7131  06A1  00F2               	movwf	??_button_timer_interrupt+1
  7132  06A2  3000               	movlw	0
  7133  06A3  0272               	subwf	??_button_timer_interrupt+1,w
  7134  06A4  3002               	movlw	2
  7135  06A5  1903               	skipnz
  7136  06A6  0271               	subwf	??_button_timer_interrupt,w
  7137  06A7  1C03               	skipc
  7138  06A8  2EAE               	goto	i1l2579
  7139  06A9  0873               	movf	button_timer_interrupt@bt,w
  7140  06AA  3E02               	addlw	2
  7141  06AB  0086               	movwf	6
  7142  06AC  0187               	clrf	7
  7143  06AD  1401               	bsf	1,0
  7144  06AE                     i1l2579:	
  7145                           
  7146                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
  7147  06AE  0873               	movf	button_timer_interrupt@bt,w
  7148  06AF  0086               	movwf	6
  7149  06B0  0187               	clrf	7
  7150  06B1  3000               	movlw	0
  7151  06B2  3FC0               	movwi [0]fsr1
  7152  06B3  3FC1               	movwi [1]fsr1
  7153                           
  7154                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
  7155  06B4  0873               	movf	button_timer_interrupt@bt,w
  7156  06B5  3E02               	addlw	2
  7157  06B6  0086               	movwf	6
  7158  06B7  0187               	clrf	7
  7159  06B8  30FF               	movlw	255
  7160  06B9  0581               	andwf	1,f
  7161  06BA  3141               	addfsr 1,1
  7162  06BB  3000               	movlw	0
  7163  06BC  0581               	andwf	1,f
  7164  06BD  0008               	return
  7165  06BE                     __end_of_button_timer_interrupt:	
  7166                           
  7167                           	psect	text44
  7168  0EEE                     __ptext44:	
  7169 ;; *************** function ___lldiv *****************
  7170 ;; Defined at:
  7171 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  divisor         4    0[COMMON] unsigned long 
  7174 ;;  dividend        4    4[COMMON] unsigned long 
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;  quotient        4    9[COMMON] unsigned long 
  7177 ;;  counter         1   13[COMMON] unsigned char 
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  4    0[COMMON] unsigned long 
  7180 ;; Registers used:
  7181 ;;		wreg, status,2, status,0
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7187 ;;      Params:         8       0       0       0       0       0
  7188 ;;      Locals:         5       0       0       0       0       0
  7189 ;;      Temps:          1       0       0       0       0       0
  7190 ;;      Totals:        14       0       0       0       0       0
  7191 ;;Total ram usage:       14 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; This function calls:
  7194 ;;		Nothing
  7195 ;; This function is called by:
  7196 ;;		_isr
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           
  7201                           ;psect for function ___lldiv
  7202  0EEE                     ___lldiv:	
  7203                           
  7204                           ;incstack = 0
  7205                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7206  0EEE  3000               	movlw	0
  7207  0EEF  00FC               	movwf	___lldiv@quotient+3
  7208  0EF0  3000               	movlw	0
  7209  0EF1  00FB               	movwf	___lldiv@quotient+2
  7210  0EF2  3000               	movlw	0
  7211  0EF3  00FA               	movwf	___lldiv@quotient+1
  7212  0EF4  3000               	movlw	0
  7213  0EF5  00F9               	movwf	___lldiv@quotient
  7214  0EF6  0873               	movf	___lldiv@divisor+3,w
  7215  0EF7  0472               	iorwf	___lldiv@divisor+2,w
  7216  0EF8  0471               	iorwf	___lldiv@divisor+1,w
  7217  0EF9  0470               	iorwf	___lldiv@divisor,w
  7218  0EFA  1903               	skipnz
  7219  0EFB  2F37               	goto	i1l2795
  7220  0EFC  01FD               	clrf	___lldiv@counter
  7221  0EFD  0AFD               	incf	___lldiv@counter,f
  7222  0EFE                     i1l2781:	
  7223  0EFE  1BF3               	btfsc	___lldiv@divisor+3,7
  7224  0EFF  2F0C               	goto	i1l2783
  7225  0F00  3001               	movlw	1
  7226  0F01                     u291_25:	
  7227  0F01  35F0               	lslf	___lldiv@divisor,f
  7228  0F02  0DF1               	rlf	___lldiv@divisor+1,f
  7229  0F03  0DF2               	rlf	___lldiv@divisor+2,f
  7230  0F04  0DF3               	rlf	___lldiv@divisor+3,f
  7231  0F05  0B89               	decfsz	9,f
  7232  0F06  2F01               	goto	u291_25
  7233  0F07  3001               	movlw	1
  7234  0F08  00F8               	movwf	??___lldiv
  7235  0F09  0878               	movf	??___lldiv,w
  7236  0F0A  07FD               	addwf	___lldiv@counter,f
  7237  0F0B  2EFE               	goto	i1l2781
  7238  0F0C                     i1l2783:	
  7239  0F0C  3001               	movlw	1
  7240  0F0D                     u293_25:	
  7241  0F0D  35F9               	lslf	___lldiv@quotient,f
  7242  0F0E  0DFA               	rlf	___lldiv@quotient+1,f
  7243  0F0F  0DFB               	rlf	___lldiv@quotient+2,f
  7244  0F10  0DFC               	rlf	___lldiv@quotient+3,f
  7245  0F11  0B89               	decfsz	9,f
  7246  0F12  2F0D               	goto	u293_25
  7247  0F13  0873               	movf	___lldiv@divisor+3,w
  7248  0F14  0277               	subwf	___lldiv@dividend+3,w
  7249  0F15  1D03               	skipz
  7250  0F16  2F21               	goto	u294_25
  7251  0F17  0872               	movf	___lldiv@divisor+2,w
  7252  0F18  0276               	subwf	___lldiv@dividend+2,w
  7253  0F19  1D03               	skipz
  7254  0F1A  2F21               	goto	u294_25
  7255  0F1B  0871               	movf	___lldiv@divisor+1,w
  7256  0F1C  0275               	subwf	___lldiv@dividend+1,w
  7257  0F1D  1D03               	skipz
  7258  0F1E  2F21               	goto	u294_25
  7259  0F1F  0870               	movf	___lldiv@divisor,w
  7260  0F20  0274               	subwf	___lldiv@dividend,w
  7261  0F21                     u294_25:	
  7262  0F21  1C03               	skipc
  7263  0F22  2F2C               	goto	i1l2791
  7264  0F23  0870               	movf	___lldiv@divisor,w
  7265  0F24  02F4               	subwf	___lldiv@dividend,f
  7266  0F25  0871               	movf	___lldiv@divisor+1,w
  7267  0F26  3BF5               	subwfb	___lldiv@dividend+1,f
  7268  0F27  0872               	movf	___lldiv@divisor+2,w
  7269  0F28  3BF6               	subwfb	___lldiv@dividend+2,f
  7270  0F29  0873               	movf	___lldiv@divisor+3,w
  7271  0F2A  3BF7               	subwfb	___lldiv@dividend+3,f
  7272  0F2B  1479               	bsf	___lldiv@quotient,0
  7273  0F2C                     i1l2791:	
  7274  0F2C  3001               	movlw	1
  7275  0F2D                     u295_25:	
  7276  0F2D  36F3               	lsrf	___lldiv@divisor+3,f
  7277  0F2E  0CF2               	rrf	___lldiv@divisor+2,f
  7278  0F2F  0CF1               	rrf	___lldiv@divisor+1,f
  7279  0F30  0CF0               	rrf	___lldiv@divisor,f
  7280  0F31  0B89               	decfsz	9,f
  7281  0F32  2F2D               	goto	u295_25
  7282  0F33  3001               	movlw	1
  7283  0F34  02FD               	subwf	___lldiv@counter,f
  7284  0F35  1D03               	btfss	3,2
  7285  0F36  2F0C               	goto	i1l2783
  7286  0F37                     i1l2795:	
  7287  0F37  087C               	movf	___lldiv@quotient+3,w
  7288  0F38  00F3               	movwf	?___lldiv+3
  7289  0F39  087B               	movf	___lldiv@quotient+2,w
  7290  0F3A  00F2               	movwf	?___lldiv+2
  7291  0F3B  087A               	movf	___lldiv@quotient+1,w
  7292  0F3C  00F1               	movwf	?___lldiv+1
  7293  0F3D  0879               	movf	___lldiv@quotient,w
  7294  0F3E  00F0               	movwf	?___lldiv
  7295  0F3F  0008               	return
  7296  0F40                     __end_of___lldiv:	
  7297                           
  7298                           	psect	text45
  7299  0B27                     __ptext45:	
  7300 ;; *************** function _ADC *****************
  7301 ;; Defined at:
  7302 ;;		line 172 in file "../My_header\My_header.h"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  ch              1    wreg     unsigned char 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  ch              1    3[COMMON] unsigned char 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  2    0[COMMON] unsigned int 
  7309 ;; Registers used:
  7310 ;;		wreg, status,2, status,0
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7316 ;;      Params:         2       0       0       0       0       0
  7317 ;;      Locals:         1       0       0       0       0       0
  7318 ;;      Temps:          1       0       0       0       0       0
  7319 ;;      Totals:         4       0       0       0       0       0
  7320 ;;Total ram usage:        4 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; This function calls:
  7323 ;;		Nothing
  7324 ;; This function is called by:
  7325 ;;		_isr
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           
  7330                           ;psect for function _ADC
  7331  0B27                     _ADC:	
  7332                           
  7333                           ;incstack = 0
  7334                           ; Regs used in _ADC: [wreg+status,2+status,0]
  7335                           ;ADC@ch stored from wreg
  7336  0B27  00F3               	movwf	ADC@ch
  7337                           
  7338                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
  7339  0B28  0873               	movf	ADC@ch,w
  7340  0B29  00F2               	movwf	??_ADC
  7341  0B2A  0DF2               	rlf	??_ADC,f
  7342  0B2B  0DF2               	rlf	??_ADC,f
  7343  0B2C  0021               	movlb	1	; select bank1
  7344  0B2D  081D               	movf	29,w	;volatile
  7345  0B2E  0672               	xorwf	??_ADC,w
  7346  0B2F  3983               	andlw	-125
  7347  0B30  0672               	xorwf	??_ADC,w
  7348  0B31  009D               	movwf	29	;volatile
  7349                           
  7350                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
  7351  0B32  141D               	bsf	29,0	;volatile
  7352                           
  7353                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
  7354  0B33  0020               	movlb	0	; select bank0
  7355  0B34  1311               	bcf	17,6	;volatile
  7356                           
  7357                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
  7358  0B35  0021               	movlb	1	; select bank1
  7359  0B36  149D               	bsf	29,1	;volatile
  7360  0B37                     i1l113:	
  7361                           ;My_header\My_header.h: 178: while (!PIR1bits.ADIF);
  7362                           
  7363  0B37  0020               	movlb	0	; select bank0
  7364  0B38  1F11               	btfss	17,6	;volatile
  7365  0B39  2B37               	goto	i1l113
  7366                           
  7367                           ;My_header\My_header.h: 179: return ADRES;
  7368  0B3A  0021               	movlb	1	; select bank1
  7369  0B3B  081C               	movf	28,w	;volatile
  7370  0B3C  00F1               	movwf	?_ADC+1
  7371  0B3D  081B               	movf	27,w	;volatile
  7372  0B3E  00F0               	movwf	?_ADC
  7373  0B3F  0008               	return
  7374  0B40                     __end_of_ADC:	
  7375  007E                     btemp	set	126	;btemp
  7376  007E                     int$flags	set	126
  7377  007E                     wtemp	set	126
  7378  007E                     wtemp0	set	126
  7379  0080                     wtemp1	set	128
  7380  0082                     wtemp2	set	130
  7381  0084                     wtemp3	set	132
  7382  0086                     wtemp4	set	134
  7383  0088                     wtemp5	set	136
  7384  007F                     wtemp6	set	127
  7385  007E                     ttemp	set	126
  7386  007E                     ttemp0	set	126
  7387  0081                     ttemp1	set	129
  7388  0084                     ttemp2	set	132
  7389  0087                     ttemp3	set	135
  7390  007F                     ttemp4	set	127
  7391  007E                     ltemp	set	126
  7392  007E                     ltemp0	set	126
  7393  0082                     ltemp1	set	130
  7394  0086                     ltemp2	set	134
  7395  0080                     ltemp3	set	128


Data Sizes:
    Strings     92
    Constant    0
    Data        2
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      54
    BANK1            80      3      80
    BANK2            80     25      25
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ringbuf_put_str@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_put_num@rb.buf	PTR unsigned char  size(1) Largest target is 0

    button_timer_interrupt@bt	PTR struct button size(1) Largest target is 4
		 -> sw_1(BANK0[4]), sw_0(BANK1[4]), sh_2(BANK1[4]), sh_1(BANK1[4]), 
		 -> sh_0(BANK1[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[10]), STR_11(CODE[10]), STR_10(CODE[8]), STR_9(CODE[7]), 
		 -> STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[6]), 
		 -> STR_4(CODE[5]), STR_3(CODE[7]), STR_2(CODE[6]), STR_1(CODE[17]), 

    rx_buf.buf	PTR unsigned char  size(1) Largest target is 0

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_delete@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_backspace@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK1[8]), 

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lldiv
    _isr->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _lchika->___lwdiv
    _display->___lwdiv
    i1_I2C_LCD_Clear->i1_I2C_LCD_Command
    ___lwdiv->___lwmod
    ___aldiv->___almod
    _I2C_LCD_SetCursor->i1_I2C_LCD_Command
    i1_I2C_LCD_Command->i1_I2C_Start
    _I2C_LCD_Puts->i1_I2C_Start
    _I2C_LCD_Putc->i1_I2C_Start
    i1_I2C_Stop->i1_I2C_IdleCheck
    i1_I2C_Start->i1_I2C_IdleCheck
    i1_I2C_Send->i1_I2C_IdleCheck

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_display
    _display->___aldiv

Critical Paths under _main in BANK1

    _main->_sh_flag_clear
    _I2C_LCD_Command->_I2C_Send
    _I2C_LCD_Command->_I2C_Start
    _EEP_write16->_I2C_Send
    _EEP_write16->_I2C_Start
    _EEP_read->_I2C_Receive
    _EEP_read->_I2C_Send
    _EEP_read->_I2C_Start
    _I2C_rStart->_I2C_IdleCheck
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _I2C_Receive->_I2C_IdleCheck

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->___lmul
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _EEP_write16->_I2C_Start
    _EEP_read->_I2C_rStart

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   10156
                                             12 BANK2     13    13      0
                           _EEP_read
                        _EEP_write16
                                _LED
                                _OUT
                             ___lmul
                          _main_init
                      _sh_flag_clear
                       _sh_flag_read
 ---------------------------------------------------------------------------------
 (1) _sh_flag_read                                         2     1      1     228
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _sh_flag_clear                                        4     3      1     228
                                              0 BANK1      3     2      1
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    2836
                           _ADC_init
                       _I2C_LCD_init
                           _I2C_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    2681
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        2     2      0    1221
                                              4 BANK2      2     2      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      3     3      0    1221
                                              1 BANK2      3     3      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             4     2      2     239
                                              0 BANK1      2     0      2
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     344
                                              0 BANK2     12     4      8
 ---------------------------------------------------------------------------------
 (1) _OUT                                                  2     1      1     956
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _LED                                                  2     1      1     747
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEP_write16                                          6     3      3    1522
                                              1 BANK2      6     3      3
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _EEP_read                                             5     4      1    2341
                                              4 BANK2      5     4      1
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
 ---------------------------------------------------------------------------------
 (2) _I2C_rStart                                           4     0      4     717
                                              0 BANK2      4     0      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1    1063
                                              2 BANK1      1     0      1
                                              0 BANK2      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK1      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          3     3      0      96
                                              2 BANK1      1     1      0
                                              0 BANK2      2     2      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  9     9      0   16455
                                             18 BANK0      9     9      0
                                _ADC
                            ___lldiv
                            ___lwdiv
             _button_timer_interrupt
                            _display
                             _lchika
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (8) _ringbuf_pop                                          8     8      0     583
                                              7 COMMON     6     6      0
                                              0 BANK0      2     2      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (9) _ringbuf_num                                          7     5      2     334
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (8) _lchika                                               5     5      0    2874
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___lwdiv
                              i1_LED
 ---------------------------------------------------------------------------------
 (9) i1_LED                                                2     1      1     166
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              9     5      4     478
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (8) _display                                              4     3      1    8455
                                             14 BANK0      4     3      1
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___aldiv
                            ___almod
                            ___lwdiv
                            ___lwmod
                    i1_I2C_LCD_Clear
 ---------------------------------------------------------------------------------
 (9) i1_I2C_LCD_Clear                                      2     2      0     255
                                              7 COMMON     2     2      0
                  i1_I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              6     2      4    1939
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4    1942
                                              6 COMMON     8     4      4
                                _ADC (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___almod                                             11     3      8     652
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (9) ___aldiv                                             15     7      8     656
                                             11 COMMON     1     1      0
                                              0 BANK0     14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C_LCD_SetCursor                                    4     3      1    1035
                                              7 COMMON     4     3      1
                  i1_I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (10) i1_I2C_LCD_Command                                   3     3      0     255
                                              4 COMMON     3     3      0
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C_LCD_Puts                                         6     4      2    1346
                                              4 COMMON     6     4      2
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C_LCD_Putc                                         3     3      0     255
                                              4 COMMON     3     3      0
                         i1_I2C_Send
                        i1_I2C_Start
                         i1_I2C_Stop
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Stop                                          0     0      0      22
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Start                                         2     1      1     144
                                              2 COMMON     2     1      1
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Send                                          1     1      0      44
                                              2 COMMON     1     1      0
                    i1_I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (12) i1_I2C_IdleCheck                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               4     3      1    1439
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             14     6      8     340
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (8) _ADC                                                  4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEP_read
     _I2C_Receive
       _I2C_IdleCheck
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _I2C_rStart
       _I2C_IdleCheck
   _EEP_write16
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _LED
   _OUT
   ___lmul
   _main_init
     _ADC_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _timer0_init
     _timer1_init
   _sh_flag_clear
   _sh_flag_read

 _isr (ROOT)
   _ADC
   ___lldiv
   ___lwdiv
     _ADC (ARG)
     ___lwmod (ARG)
   _button_timer_interrupt
   _display
     _I2C_LCD_Putc
       i1_I2C_Send
         i1_I2C_IdleCheck
       i1_I2C_Start
         i1_I2C_IdleCheck
       i1_I2C_Stop
         i1_I2C_IdleCheck
     _I2C_LCD_Puts
       i1_I2C_Send
         i1_I2C_IdleCheck
       i1_I2C_Start
         i1_I2C_IdleCheck
       i1_I2C_Stop
         i1_I2C_IdleCheck
     _I2C_LCD_SetCursor
       i1_I2C_LCD_Command
         i1_I2C_Send
           i1_I2C_IdleCheck
         i1_I2C_Start
           i1_I2C_IdleCheck
         i1_I2C_Stop
           i1_I2C_IdleCheck
     ___aldiv
       ___almod (ARG)
     ___almod
     ___lwdiv
       _ADC (ARG)
       ___lwmod (ARG)
     ___lwmod
     i1_I2C_LCD_Clear
       i1_I2C_LCD_Command
         i1_I2C_Send
           i1_I2C_IdleCheck
         i1_I2C_Start
           i1_I2C_IdleCheck
         i1_I2C_Stop
           i1_I2C_IdleCheck
   _lchika
     ___awdiv
     ___lwdiv
       _ADC (ARG)
       ___lwmod (ARG)
     i1_LED
   _ringbuf_num
   _ringbuf_pop
     _ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      AD       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1B      36       6       67.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      3      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     19      19      10       31.3%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      AD      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 18:38:14 2015

                EEP_write16@data 0122                                _s 0020                                _v 0026  
                              pc 0002                 EEP_write16@Reg_h 0125                 EEP_write16@Reg_l 0121  
             __size_of_I2C_Start 001D                      __CFG_CP$OFF 0000                               _d1 00D0  
                   ___awdiv@sign 0076                               _ms 00C0                               _sp 00BA  
                             _ss 00A0                     ?_EEP_write16 0121                      ?i1_I2C_Send 0070  
                    ?i1_I2C_Stop 0070                              l101 0B01                              l232 0BDA  
                            l307 0CBA                              l238 0B6B                              l247 0ACA  
                            _ADC 0B27                              l256 0C1C                              l441 0D2D  
                            l450 0C73                              l292 0E28                              l452 0C7B  
                            l444 0D37                              l293 0E43                              l453 0C83  
                            l437 0D23                              l446 0D46                              l455 0C97  
                            l480 0462                              l473 0CED                              l483 04CC  
                            _GIE 005F                              _RB0 0068                              _RA4 0064  
                            _LED 0C70                              _RB3 006B                              _RA5 0065  
                            _RB6 006E                     __CFG_CPD$OFF 0000                              _OUT 0D1A  
                            _cnt 00C7                              _cut 00B4                              _isr 0004  
            __size_of_I2C_rStart 001A             __size_of_I2C_Receive 0021                     __CFG_BORV$LO 0000  
                            wreg 0009                      EEP_read@ans 0128              sh_flag_read@bit_and 00EB  
                   _I2C_LCD_Putc 0B8E                     _I2C_LCD_Puts 0D47                             ?_ADC 0070  
                   __CFG_LVP$OFF 0000                             LED@b 00EC                             ?_LED 00EB  
              ??_I2C_LCD_Command 0121                             ?_OUT 00EB                     _I2C_LCD_init 0DD9  
                   ?i1_I2C_Start 0072                             l3221 0AE5                             l3321 0C8B  
                           l3233 0B0A                             l3403 0D88                             l3181 0A82  
                           l3333 0D30                             l3325 0D1D                             l3351 0B7D  
                           l3343 0B77                             l3329 0D26                             l3361 0B82  
                           l3521 0469                             l3339 0D3A                             l3355 0B80  
                           l3347 0B7A                             l3603 054D                             l3515 0463  
                           l3507 03EB                             l3365 0CC6                             l3373 0CE1  
                           l3533 04A9                             l3367 0CCF                             l3615 0567  
                           l3551 04D6                             l3527 0495                             l3369 0CD8  
                           OUT@b 00EC                             l3619 0573                             l3563 04F5  
                           l3539 04C3                             l3565 04FB                             l3399 0D7E  
                           l3583 051D                             l3575 0505                             l3559 04EE  
                           l3595 0532                             l3587 0523                             l3589 0529  
                           ?_isr 0070                             STR_1 07B5                             STR_2 07FD  
                           STR_3 07F0                             STR_4 0808                             STR_5 07F7  
                           STR_6 07E9                             STR_7 0803                             STR_8 080D  
                           STR_9 07E2                             u4005 042D                             u4015 0444  
                           u4227 0A98                             u4237 0C22                             u4247 0AF4  
                           u3720 0C78                             u4257 0CC0                             u4185 053F  
                           u4267 0E49                             u3740 0C80                             u3760 0C88  
                           u3825 0D89                             u3835 0D90                             u3995 0412  
                           _SPEN 0CEF                             _WPUA 020C                             _WPUB 020D  
          __end_of_sh_flag_clear 0CEE                     __CFG_WRT$OFF 0000                             _cnt0 002F  
                           _cntf 00CA                             _sh_0 00DB                             _sh_1 00DF  
                           _sh_2 00E3                             _main 03B7         button_timer_interrupt@bt 0073  
                           _sw_0 00E7                             _sw_1 0037                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                 __end_of_I2C_Send 0AD0  
                           btemp 007E                             isr@i 0055                 __end_of_I2C_Stop 0A56  
                           ltemp 007E                 __end_of_I2C_init 0A72                             start 0182  
                           ttemp 007E                 __end_of_ADC_init 0AE5                             wtemp 007E  
                  __CFG_IESO$OFF 0000                     EEP_read@data 0127       __size_ofi1_I2C_LCD_Command 001C  
                  _I2C_LCD_Clear 0A8F                            ??_ADC 0072                            ADC@ch 0073  
                  ADC_init@p_ref 00EB                            ??_LED 00EC           __size_of_I2C_IdleCheck 000F  
                          ??_OUT 00EC                ??i1_I2C_IdleCheck 0070                            ??_isr 004D  
               __end_of_EEP_read 0E4E                    __CFG_PLLEN$ON 0000                  __end_of___aldiv 0740  
                __end_of___almod 1000                            ?_main 0070                  __end_of___awdiv 0EEE  
                          _ADRES 009B                            STR_10 07DA                            STR_11 07C6  
                          STR_12 07D0                            _BRG16 0CFB                    __CFG_WDTE$OFF 0000  
                __end_of___lldiv 0F40                  ___awdiv@divisor 0070                            _LATA3 0863  
                          _LATB2 086A                            _LATA6 0866                            _LATB5 086D  
                          _LATA7 0867                            _LATB7 086F                  __end_of___lwdiv 0DD9  
                          i1l113 0B37                            i1l320 05CB                            i1l232 0B51  
                          i1l321 05DA                            i1l322 05E9                            i1l316 058C  
                          i1l317 059C                            i1l318 05AC                            i1l319 05BC  
                          i1l247 0AA8                            i1l256 0BBE                  __end_of___lwmod 0D1A  
                          i1l450 0C4C                            i1l268 0BA2                            i1l452 0C54  
                          i1l453 0C5C                            i1l455 0C6F                            i1l383 0026  
                          i1l384 0024                            i1l386 00D2                            i1l644 06CF  
                          i1l399 017E                            i1l657 0FA3                  ___awdiv@counter 0075  
                          i1_LED 0C4A                            _RCSTA 019D                            _TMR1H 0017  
                          _TMR1L 0016                            _TRISA 008C                            _TRISB 008D  
                          _TXREG 019A                            _TXSTA 019E              ___lmul@multiplicand 0124  
                 __CFG_FCMEN$OFF 0000                  __end_of_display 03B7                            _cnt1s 0031  
                          main@i 0138                __end_of_I2C_Start 0BE3                   __CFG_BOREN$OFF 0000  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                    EEP_read@Reg_h 0126                    EEP_read@Reg_l 0124  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F              __size_ofi1_I2C_Send 0010                 __end_of_Delay_ms 0AFA  
            __size_ofi1_I2C_Stop 0006                   __CFG_MCLRE$OFF 0000                   ?_I2C_LCD_Clear 0070  
                __initialization 0184                     __end_of_main 0578                           ??_main 012C  
                         ?i1_LED 0070                           _BCL1IF 0093                    _I2C_IdleCheck 0A80  
                         i1S3645 0811                _I2C_LCD_SetCursor 0AAE                 ___awdiv@dividend 0072  
                         i1LED@b 0071                           _ANSELA 018C                           _ANSELB 018D  
             I2C_LCD_Command@ans 0123              i1I2C_IdleCheck@mask 0071                           i1l2121 0A5D  
                         i1l3005 0101                           i1l3015 0176                           i1l2321 0729  
                         i1l2401 0EE9                           i1l2217 0F71                           i1l2307 06F0  
                         i1l2325 0737                           i1l2317 071E                           i1l2309 06FE  
                         i1l2343 0FB8                           i1l2423 0DCB                           i1l2415 0DAD  
                         i1l2345 0FC6                           i1l2353 0FE9                           i1l2337 0FB0  
                         i1l2417 0DB9                           i1l2441 0D00                           i1l2283 0D5A  
                         i1l2427 0DD4                           i1l2285 0D72                           i1l2357 0FF7  
                         i1l2349 0FDE                           i1l2445 0D0C                           i1l2461 0C64  
                         i1l2551 0623                           i1l2543 05F8                           i1l2439 0CF4  
                         i1l2623 01C0                           i1l2631 01D8                           i1l2375 0EB2  
                         i1l2607 07AF                           i1l2449 0D15                           i1l2633 01E5  
                         i1l2625 01C8                           i1l2641 01FD                           i1l2393 0ED8  
                         i1l2385 0EBA                           i1l2369 0EA7                           i1l2571 0687  
                         i1l2563 065F                           i1l2555 0637                           i1l2547 060F  
                         i1l2299 06E0                           i1l2643 020A                           i1l2635 01ED  
                         i1l2627 01D0                           i1l2387 0EC6                           i1l2483 0E92  
                         i1l2491 0E9B                           u202_25 06F3                           i1l2661 0384  
                         i1l2653 028D                           i1l2637 01F5                           i1l2397 0EE1  
                         i1l2485 0E99                           i1l2575 069B                           i1l2567 0673  
                         i1l2559 064B                           i1l2665 0391                           i1l2657 0377  
                         i1l2593 075A                           i1l2579 06AE                           i1l2675 03AB  
                         i1l2781 0EFE                           i1l2669 039E                           i1l2791 0F2C  
                         i1l2783 0F0C                           i1l2599 0794                           i1l2795 0F37  
                         u204_25 06FF                           u212_25 0FBB                           i1l2967 006B  
                         i1l2977 00C3                           i1l2995 00EE                           i1l2979 00CA  
                         u205_25 0713                           u221_25 0EBD                           u206_25 071F  
                         u214_25 0FD4                           u215_25 0FDF                           u231_25 0DBA  
                         u223_25 0EC7                           u232_25 0DC4                           u224_25 0ED1  
                         u241_20 0C51                           u233_25 0DCC                           u225_25 0ED9  
                         u243_20 0C59                           _FVRCON 0117                           u236_25 0CF7  
                         u245_20 0C61                           u229_25 0DB0                           u333_25 0112  
                         u238_25 0D06                           u334_25 0130                           u430_27 0BA7  
                         u239_25 0D0D                           u335_25 0162               ?_I2C_LCD_SetCursor 0077  
                         u192_25 0F57                           u273_25 0788                           u249_25 0E86  
                         u291_25 0F01                           u427_27 0A7A                           u428_27 0BC3  
                         u293_25 0F0D                           u429_27 0D6F                           u294_25 0F21  
                         u295_25 0F2D                           _OSCCON 0099                           _SPBRGH 019C  
                         _SPBRGL 019B                           _SSP1IF 008B                     ??_I2C_rStart 00ED  
                 __CFG_PWRTE$OFF 0000              ??_I2C_LCD_SetCursor 0078                     ?_ringbuf_pop 0070  
                   ?_ringbuf_num 0070                           ___lmul 0D75                        ??___aldiv 007B  
                      ??___almod 0078                        ??___awdiv 0074                        ??___lldiv 0078  
                   ?_timer0_init 0070                     ?_timer1_init 0070                        ??___lwdiv 007A  
                      ??___lwmod 0074                           _lchika 0740                 ___awdiv@quotient 0077  
                i1_I2C_LCD_Clear 0A72                           _rx_buf 00AC                           _tx_buf 00D3  
                      ??_display 004A             __size_of_EEP_write16 002B                        ?_I2C_Send 0070  
                      ?_I2C_Stop 0070                    i1I2C_Start@rw 0072                        ?_I2C_init 0070  
      __end_of_I2C_LCD_SetCursor 0ABE               __end_of_I2C_rStart 0B74                        ?_ADC_init 0070  
                 ?_I2C_IdleCheck 0070                        ?_EEP_read 0124             __size_ofi1_I2C_Start 001A  
        __end_of__initialization 019C                  ??_I2C_LCD_Clear 0124                    __end_ofi1_LED 0C70  
                 __pcstackCOMMON 0070                     __pidataBANK1 0002                  _I2C_LCD_Command 0C04  
                   ??i1_I2C_Send 0072                     ??i1_I2C_Stop 0072                          ??i1_LED 0071  
                  ?_sh_flag_read 00EB                   _OPTION_REGbits 0095                 I2C_LCD_Command@c 0122  
                     ??_I2C_Send 00ED                       ??_I2C_Stop 00ED                       ??_I2C_init 00EB  
                      ?_Delay_ms 00EB                       ??_ADC_init 00EB               __size_of_main_init 0025  
                     __pbssBANK0 0020                       __pbssBANK1 00A0                       ??_EEP_read 0125  
                i1_I2C_IdleCheck 0A5C               __end_ofi1_I2C_Send 0AAE               __end_ofi1_I2C_Stop 0A50  
                     __pmaintext 03B7          __end_ofi1_I2C_LCD_Clear 0A80                          ?___lmul 0120  
                     __pintentry 0004                          ?_lchika 0070             I2C_LCD_SetCursor@col 007A  
                 ___lmul@product 0128             I2C_LCD_SetCursor@row 0077                    ??_I2C_Receive 00ED  
                   I2C_Send@data 00ED                   ??_sh_flag_read 00EC                  ??_I2C_IdleCheck 00EB  
                     ??_Delay_ms 0120       __size_of_I2C_LCD_SetCursor 0010           I2C_LCD_SetCursor@F2900 00EE  
                        _SSP1ADD 0212                          _SSP1BUF 0211             timer1_init@prescaler 00EC  
       ??_button_timer_interrupt 0071                        _I2C_Start 0BC6                   I2C_Receive@ack 0120  
        __end_of_I2C_LCD_Command 0C25                          ___aldiv 06BE                          ___almod 0F93  
                        ___awdiv 0E9D                  __size_of___lmul 0030                          ___lldiv 0EEE  
                        ___lwdiv 0DA5                          ___lwmod 0CEE             __size_of_ringbuf_pop 004F  
           __size_of_ringbuf_num 0053                  __CFG_STVREN$OFF 0000                  __size_of_lchika 0075  
              __end_of_main_init 0C4A             __size_of_timer0_init 0015             __size_of_timer1_init 0018  
                        __ptext1 0B74                          __ptext2 0CC3                          __ptext3 0C25  
                        __ptext4 0B0F                          __ptext5 0AFA                          __ptext6 0A67  
                        __ptext7 0DD9                          __ptext8 0A8F                          __ptext9 0C04  
                  I2C_LCD_Putc@c 0075                    I2C_LCD_Puts@s 0074           __size_of_sh_flag_clear 002B  
                        _display 01A0                     __size_of_ADC 0019                     __size_of_LED 0028  
                      _T1CONbits 0018                     __size_of_OUT 002D                   i1I2C_Send@data 0072  
                   __size_of_isr 017E                 ___aldiv@dividend 003F              __end_of_I2C_Receive 0C04  
        __end_ofi1_I2C_IdleCheck 0A67                          clrloop0 0A57                          lchika@i 003F  
           end_of_initialization 019C                       ?_I2C_Start 00ED                  ___lldiv@divisor 0070  
                   I2C_rStart@rw 0122                  ___lldiv@counter 007D             sh_flag_clear@bit_and 00EB  
               ?i1_I2C_LCD_Clear 0070                 ___aldiv@quotient 0045                     __pstringtext 07B5  
             i1I2C_LCD_Command@c 0075                       _print_port 0036                 __CFG_FOSC$INTOSC 0000  
                 EEP_write16@ans 0126                __size_of_I2C_Send 0012                __size_of_I2C_Stop 0006  
               sh_flag_read@port 00EC                __size_of_I2C_init 000B                __size_of_ADC_init 0015  
__size_of_button_timer_interrupt 0146                    _sh_flag_clear 0CC3             __end_of_sh_flag_read 0B8E  
              __size_of_EEP_read 003E                 ?_I2C_LCD_Command 0070                   ringbuf_pop@ret 003B  
                 __end_of___lmul 0DA5                    ??_EEP_write16 0124                   __end_of_lchika 07B5  
                    _I2C_Receive 0BE3              start_initialization 0184                      __end_of_ADC 0B40  
                    __end_of_LED 0C98                      __end_of_OUT 0D47                    ?_I2C_LCD_Putc 0070  
                    __end_of_isr 0182                    ?_I2C_LCD_Puts 0074                 ?i1_I2C_IdleCheck 0070  
                  ?_I2C_LCD_init 0070                    ??i1_I2C_Start 0073                __size_of_Delay_ms 0015  
                 ?_sh_flag_clear 00EB                      ??_I2C_Start 00EE            __end_of_I2C_LCD_Clear 0A9E  
                       ??___lmul 00EB                      __pdataBANK1 00EE                         ??_lchika 003B  
         _button_timer_interrupt 0578                      _change_flag 00C4              __end_of_EEP_write16 0CC3  
                      ___latbits 0001                         LED@value 00EB                    __pcstackBANK0 003B  
                  __pcstackBANK1 00EB                    __pcstackBANK2 0120                   ??_I2C_LCD_Putc 0074  
                 ??_I2C_LCD_Puts 0076                   ??_I2C_LCD_init 00EE              __end_ofi1_I2C_Start 0B5A  
                millis_timer@cnt 0033                 ___lwdiv@dividend 0078                         ?___aldiv 003B  
                       ?___almod 0070                         ?___awdiv 0070                         ?___lldiv 0070  
                       ?___lwdiv 0076                         ?___lwmod 0070                  I2C_LCD_Putc@ans 0076  
                I2C_LCD_Puts@ans 0078                 ___almod@dividend 0074                        __pswtext1 0811  
                       ?_display 0049                   __size_ofi1_LED 0026                        _main_init 0C25  
                    I2C_Start@rw 00ED                         _I2C_Send 0ABE                         OUT@value 00EB  
                       _I2C_Stop 0A50                         _I2C_init 0A67                         _ADC_init 0AD0  
          __end_of_I2C_IdleCheck 0A8F                 ___lwdiv@quotient 007B                  ??_sh_flag_clear 00EC  
          __size_of_sh_flag_read 001A                  ___aldiv@divisor 003B                         _EEP_read 0E10  
                ___aldiv@counter 0043                        clear_ram0 0A56                         _PIE1bits 0091  
                       _PIR1bits 0011                    ??_ringbuf_pop 0077                    ??_ringbuf_num 0072  
                       _SSP1CON1 0215                         _SSP1CON2 0216                    ??_timer0_init 00EB  
                  ??_timer1_init 00EB                         _SSP1STAT 0214                      _EEP_write16 0C98  
                     _ADCON0bits 009D                       _ADCON1bits 009E   button_timer_interrupt@sw_value 0070  
                     ?_main_init 0070                     _sh_flag_read 0B74                        display@co 0049  
                       _Delay_ms 0AE5                    ringbuf_pop@rb 003C                    ringbuf_num@rb 0076  
                  I2C_Start@adrs 0120                ___lmul@multiplier 0120                      i1_I2C_Start 0B40  
                    _auto_cut_ON 002C                  I2C_Receive@data 0121                       _I2C_rStart 0B5A  
           __end_of_I2C_LCD_Putc 0BAA             __end_of_I2C_LCD_Puts 0D75             __end_of_I2C_LCD_init 0E10  
               __size_of___aldiv 0082                 __size_of___almod 006D                 __size_of___awdiv 0051  
              I2C_IdleCheck@mask 00EC                 __size_of___lldiv 0052                 __size_of___lwdiv 0034  
               __size_of___lwmod 002C                     ?_I2C_Receive 0070              __end_of_ringbuf_pop 0E9D  
            __end_of_ringbuf_num 0F93         __size_ofi1_I2C_LCD_Clear 000E                       i1LED@value 0070  
            __end_of_timer0_init 0B0F              __end_of_timer1_init 0B27                 __size_of_display 0217  
                ___lwdiv@divisor 0076                  ___lwdiv@counter 007D             timer0_init@prescaler 00EC  
                       __ptext10 0AE5                         __ptext11 0AD0                         __ptext20 0ABE  
                       __ptext12 0D75                         __ptext21 0BE3                         __ptext13 0D1A  
                       __ptext30 0A72                         __ptext22 0A80                         __ptext14 0C70  
                       __ptext31 0CEE                         __ptext15 0C98                         __ptext40 0B40  
                       __ptext32 0DA5                         __ptext24 0E4E                         __ptext16 0E10  
                       __ptext41 0A9E                         __ptext33 0F93                         __ptext25 0F40  
                       __ptext17 0B5A                         __ptext42 0A5C                         __ptext34 06BE  
                       __ptext26 0740                         __ptext18 0A50                         __ptext43 0578  
                       __ptext35 0AAE                         __ptext27 0C4A                         __ptext19 0BC6  
                       __ptext44 0EEE                         __ptext36 0BAA                         __ptext28 0E9D  
                       __ptext45 0B27                         __ptext37 0D47                         __ptext29 01A0  
                       __ptext38 0B8E                         __ptext39 0A4A                     _SSP1CON2bits 0216  
                ___almod@divisor 0070                  ___almod@counter 0079                         _cut_flag 00CD  
                 I2C_rStart@adrs 0120                    __size_of_main 01C1          ?_button_timer_interrupt 0070  
                       int$flags 007E                i1_I2C_LCD_Command 0BAA                         display@i 004C  
             ?i1_I2C_LCD_Command 0070                       i1_I2C_Send 0A9E                       i1_I2C_Stop 0A4A  
       __size_of_I2C_LCD_Command 0021                      ??_main_init 00EE                       _INTCONbits 000B  
            ??i1_I2C_LCD_Command 0074     I2C_LCD_SetCursor@row_offsets 0078                       Delay_ms@ms 00EB  
           i1I2C_LCD_Command@ans 0076                         intlevel1 0000                 ___lwmod@dividend 0072  
               ___lldiv@dividend 0074                  i1I2C_Start@adrs 0073                __CFG_CLKOUTEN$OFF 0000  
                    ?_I2C_rStart 0120         __size_ofi1_I2C_IdleCheck 000B                    _print_content 0035  
 __end_of_button_timer_interrupt 06BE        __end_ofi1_I2C_LCD_Command 0BC6                sh_flag_clear@port 0120  
                    _ringbuf_pop 0E4E                      _ringbuf_num 0F40                      _timer0_init 0AFA  
                    _timer1_init 0B0F                 ___lldiv@quotient 0079                  ___lwmod@divisor 0070  
                ___lwmod@counter 0075                     ___aldiv@sign 0044           __size_of_I2C_LCD_Clear 000F  
              ??i1_I2C_LCD_Clear 0077                     ___almod@sign 007A            __size_of_I2C_LCD_Putc 001C  
          __size_of_I2C_LCD_Puts 002E            __size_of_I2C_LCD_init 0037  
