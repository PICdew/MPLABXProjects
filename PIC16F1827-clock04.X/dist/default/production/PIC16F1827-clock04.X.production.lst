

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 12 08:31:18 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001E                     	;# 
    46  001F                     	;# 
    47  008C                     	;# 
    48  008D                     	;# 
    49  0091                     	;# 
    50  0092                     	;# 
    51  0093                     	;# 
    52  0094                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0097                     	;# 
    56  0098                     	;# 
    57  0099                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009B                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  010C                     	;# 
    65  010D                     	;# 
    66  0111                     	;# 
    67  0112                     	;# 
    68  0113                     	;# 
    69  0114                     	;# 
    70  0115                     	;# 
    71  0116                     	;# 
    72  0117                     	;# 
    73  0118                     	;# 
    74  0119                     	;# 
    75  011A                     	;# 
    76  011B                     	;# 
    77  011D                     	;# 
    78  011E                     	;# 
    79  018C                     	;# 
    80  018D                     	;# 
    81  0191                     	;# 
    82  0191                     	;# 
    83  0192                     	;# 
    84  0193                     	;# 
    85  0193                     	;# 
    86  0193                     	;# 
    87  0194                     	;# 
    88  0195                     	;# 
    89  0196                     	;# 
    90  0199                     	;# 
    91  019A                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019C                     	;# 
    97  019C                     	;# 
    98  019D                     	;# 
    99  019E                     	;# 
   100  019F                     	;# 
   101  020C                     	;# 
   102  020D                     	;# 
   103  0211                     	;# 
   104  0211                     	;# 
   105  0212                     	;# 
   106  0212                     	;# 
   107  0213                     	;# 
   108  0213                     	;# 
   109  0214                     	;# 
   110  0214                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0215                     	;# 
   114  0216                     	;# 
   115  0216                     	;# 
   116  0217                     	;# 
   117  0217                     	;# 
   118  0219                     	;# 
   119  021A                     	;# 
   120  021B                     	;# 
   121  021C                     	;# 
   122  021D                     	;# 
   123  021E                     	;# 
   124  021F                     	;# 
   125  0291                     	;# 
   126  0291                     	;# 
   127  0292                     	;# 
   128  0293                     	;# 
   129  0294                     	;# 
   130  0295                     	;# 
   131  0295                     	;# 
   132  0296                     	;# 
   133  0298                     	;# 
   134  0298                     	;# 
   135  0299                     	;# 
   136  029A                     	;# 
   137  029B                     	;# 
   138  029C                     	;# 
   139  029C                     	;# 
   140  029D                     	;# 
   141  029E                     	;# 
   142  029E                     	;# 
   143  0311                     	;# 
   144  0311                     	;# 
   145  0312                     	;# 
   146  0313                     	;# 
   147  0318                     	;# 
   148  0318                     	;# 
   149  0319                     	;# 
   150  031A                     	;# 
   151  0394                     	;# 
   152  0395                     	;# 
   153  0396                     	;# 
   154  039A                     	;# 
   155  039C                     	;# 
   156  039D                     	;# 
   157  039E                     	;# 
   158  039F                     	;# 
   159  0415                     	;# 
   160  0416                     	;# 
   161  0417                     	;# 
   162  041C                     	;# 
   163  041D                     	;# 
   164  041E                     	;# 
   165  0FE4                     	;# 
   166  0FE5                     	;# 
   167  0FE6                     	;# 
   168  0FE7                     	;# 
   169  0FE8                     	;# 
   170  0FE9                     	;# 
   171  0FEA                     	;# 
   172  0FEB                     	;# 
   173  0FED                     	;# 
   174  0FEE                     	;# 
   175  0FEF                     	;# 
   176                           
   177                           	psect	idataBANK0
   178  0213                     __pidataBANK0:	
   179                           
   180                           ;initializer for _p
   181  0213  3403               	retlw	3
   182  0214  349F               	retlw	159
   183  0215  3425               	retlw	37
   184  0216  340D               	retlw	13
   185  0217  3499               	retlw	153
   186  0218  3449               	retlw	73
   187  0219  3441               	retlw	65
   188  021A  341B               	retlw	27
   189  021B  3401               	retlw	1
   190  021C  3409               	retlw	9
   191                           
   192                           ;initializer for _q
   193  021D  3402               	retlw	2
   194  021E  349E               	retlw	158
   195  021F  3424               	retlw	36
   196  0220  340C               	retlw	12
   197  0221  3498               	retlw	152
   198  0222  3448               	retlw	72
   199  0223  3440               	retlw	64
   200  0224  341A               	retlw	26
   201  0225  3400               	retlw	0
   202  0226  3408               	retlw	8
   203                           
   204                           ;initializer for _r
   205  0227  34FF               	retlw	255
   206  0228  349F               	retlw	159
   207  0229  3425               	retlw	37
   208  022A  340D               	retlw	13
   209  022B  3499               	retlw	153
   210  022C  3449               	retlw	73
   211  022D  3441               	retlw	65
   212  022E  341B               	retlw	27
   213  022F  3401               	retlw	1
   214  0230  3409               	retlw	9
   215  000B                     _INTCONbits	set	11
   216  0011                     _PIR1bits	set	17
   217  000C                     _PORTA	set	12
   218  000D                     _PORTB	set	13
   219  0018                     _T1CON	set	24
   220  0017                     _TMR1H	set	23
   221  0016                     _TMR1L	set	22
   222  0064                     _RA4	set	100
   223  0065                     _RA5	set	101
   224  0095                     _OPTION_REG	set	149
   225  0099                     _OSCCON	set	153
   226  0091                     _PIE1bits	set	145
   227  008C                     _TRISA	set	140
   228  008D                     _TRISB	set	141
   229  018C                     _ANSELA	set	396
   230  018D                     _ANSELB	set	397
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  011D                     start_initialization:	
   236  011D                     __initialization:	
   237                           
   238                           ; Clear objects allocated to COMMON
   239  011D  01FC               	clrf	__pbssCOMMON& (0+127)
   240  011E  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   241                           
   242                           ; Clear objects allocated to BANK0
   243  011F  303E               	movlw	low __pbssBANK0
   244  0120  0084               	movwf	4
   245  0121  3000               	movlw	high __pbssBANK0
   246  0122  0085               	movwf	5
   247  0123  300E               	movlw	14
   248  0124  3182  2231  3181   	fcall	clear_ram0
   249                           
   250                           ; Initialize objects allocated to BANK0
   251  0127  3013               	movlw	low __pidataBANK0
   252  0128  0084               	movwf	4
   253  0129  3082               	movlw	(high __pidataBANK0)| (0+128)
   254  012A  0085               	movwf	5
   255  012B  3020               	movlw	low __pdataBANK0
   256  012C  0086               	movwf	6
   257  012D  3000               	movlw	high __pdataBANK0
   258  012E  0087               	movwf	7
   259  012F  301E               	movlw	30
   260  0130  3182  2237         	fcall	init_ram
   261  0132                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  0132                     __end_of__initialization:	
   265  0132  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   266  0133  0020               	movlb	0
   267  0134  3181  2988         	ljmp	_main	;jump to C main() function
   268                           
   269                           	psect	bssCOMMON
   270  007C                     __pbssCOMMON:	
   271  007C                     _j:	
   272  007C                     	ds	1
   273  007D                     _ji:	
   274  007D                     	ds	1
   275                           
   276                           	psect	bssBANK0
   277  003E                     __pbssBANK0:	
   278  003E                     _s:	
   279  003E                     	ds	10
   280  0048                     _cnt1m:	
   281  0048                     	ds	2
   282  004A                     _fu:	
   283  004A                     	ds	1
   284  004B                     _i:	
   285  004B                     	ds	1
   286                           
   287                           	psect	dataBANK0
   288  0020                     __pdataBANK0:	
   289  0020                     _p:	
   290  0020                     	ds	10
   291  002A                     _q:	
   292  002A                     	ds	10
   293  0034                     _r:	
   294  0034                     	ds	10
   295                           
   296                           	psect	clrtext
   297  0231                     clear_ram0:	
   298                           ;	Called with FSR0 containing the base address, and
   299                           ;	WREG with the size to clear
   300                           
   301  0231  0064               	clrwdt	;clear the watchdog before getting into this loop
   302  0232                     clrloop0:	
   303  0232  0180               	clrf	0	;clear RAM location pointed to by FSR
   304  0233  3101               	addfsr 0,1
   305  0234  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   306  0235  2A32               	goto	clrloop0	;have we reached the end yet?
   307  0236  3400               	retlw	0	;all done for this memory range, return
   308                           
   309                           	psect	inittext
   310  0237                     init_ram:	
   311  0237  00FE               	movwf	126
   312  0238                     initloop:	
   313  0238  0012               	moviw fsr0++
   314  0239  001E               	movwi fsr1++
   315  023A  0BFE               	decfsz	126,f
   316  023B  2A38               	goto	initloop
   317  023C  3400               	retlw	0
   318                           
   319                           	psect	cstackCOMMON
   320  0070                     __pcstackCOMMON:	
   321  0070                     ?_isr:	
   322  0070                     ?_main:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?___awmod:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ___awmod@divisor:	
   329                           ; 2 bytes @ 0x0
   330                           
   331                           
   332                           ; 2 bytes @ 0x0
   333  0070                     	ds	2
   334  0072                     ___awmod@dividend:	
   335                           
   336                           ; 2 bytes @ 0x2
   337  0072                     	ds	2
   338  0074                     ??___awmod:	
   339                           
   340                           ; 0 bytes @ 0x4
   341  0074                     	ds	1
   342  0075                     ___awmod@counter:	
   343                           
   344                           ; 1 bytes @ 0x5
   345  0075                     	ds	1
   346  0076                     ___awmod@sign:	
   347                           
   348                           ; 1 bytes @ 0x6
   349  0076                     	ds	1
   350  0077                     ?___awdiv:	
   351  0077                     ___awdiv@divisor:	
   352                           ; 2 bytes @ 0x7
   353                           
   354                           
   355                           ; 2 bytes @ 0x7
   356  0077                     	ds	2
   357  0079                     ___awdiv@dividend:	
   358                           
   359                           ; 2 bytes @ 0x9
   360  0079                     	ds	2
   361  007B                     ??___awdiv:	
   362                           
   363                           ; 0 bytes @ 0xB
   364  007B                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  004C                     __pcstackBANK0:	
   368  004C                     ___awdiv@counter:	
   369                           
   370                           ; 1 bytes @ 0x0
   371  004C                     	ds	1
   372  004D                     ___awdiv@sign:	
   373                           
   374                           ; 1 bytes @ 0x1
   375  004D                     	ds	1
   376  004E                     ___awdiv@quotient:	
   377                           
   378                           ; 2 bytes @ 0x2
   379  004E                     	ds	2
   380  0050                     ??_isr:	
   381                           
   382                           ; 0 bytes @ 0x4
   383  0050                     	ds	5
   384  0055                     ??_main:	
   385                           
   386                           ; 0 bytes @ 0x9
   387  0055                     	ds	1
   388                           
   389                           	psect	maintext
   390  0188                     __pmaintext:	
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 105 in file "PIC16F1827-clock04.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;		None               void
   403 ;; Registers used:
   404 ;;		wreg, status,2, status,0
   405 ;; Tracked objects:
   406 ;;		On entry : B1F/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   410 ;;      Params:         0       0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0
   412 ;;      Temps:          0       1       0       0       0       0
   413 ;;      Totals:         0       1       0       0       0       0
   414 ;;Total ram usage:        1 bytes
   415 ;; Hardware stack levels required when called:    2
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		Startup code after reset
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           
   424                           ;psect for function _main
   425  0188                     _main:	
   426                           
   427                           ;PIC16F1827-clock04.c: 106: OSCCON = 0x00;
   428                           
   429                           ;incstack = 0
   430                           ; Regs used in _main: [wreg+status,2+status,0]
   431  0188  0021               	movlb	1	; select bank1
   432  0189  0199               	clrf	25	;volatile
   433                           
   434                           ;PIC16F1827-clock04.c: 107: ANSELA = 0x00;
   435  018A  0023               	movlb	3	; select bank3
   436  018B  018C               	clrf	12	;volatile
   437                           
   438                           ;PIC16F1827-clock04.c: 108: ANSELB = 0x00;
   439  018C  018D               	clrf	13	;volatile
   440                           
   441                           ;PIC16F1827-clock04.c: 109: TRISA = 0xF0;
   442  018D  30F0               	movlw	240
   443  018E  0021               	movlb	1	; select bank1
   444  018F  008C               	movwf	12	;volatile
   445                           
   446                           ;PIC16F1827-clock04.c: 110: TRISB = 0x00;
   447  0190  018D               	clrf	13	;volatile
   448                           
   449                           ;PIC16F1827-clock04.c: 112: OPTION_REG = 0b10011000;
   450  0191  3098               	movlw	152
   451  0192  0095               	movwf	21	;volatile
   452                           
   453                           ;PIC16F1827-clock04.c: 113: INTCONbits.TMR0IE = 1;
   454  0193  168B               	bsf	11,5	;volatile
   455                           
   456                           ;PIC16F1827-clock04.c: 115: T1CON = 0x01;
   457  0194  3001               	movlw	1
   458  0195  0020               	movlb	0	; select bank0
   459  0196  0098               	movwf	24	;volatile
   460                           
   461                           ;PIC16F1827-clock04.c: 116: TMR1H = 0xFF;
   462  0197  30FF               	movlw	255
   463  0198  0097               	movwf	23	;volatile
   464                           
   465                           ;PIC16F1827-clock04.c: 117: TMR1L = 0xDD;
   466  0199  30DD               	movlw	221
   467  019A  0096               	movwf	22	;volatile
   468                           
   469                           ;PIC16F1827-clock04.c: 118: PIE1bits.TMR1IE = 1;
   470  019B  0021               	movlb	1	; select bank1
   471  019C  1411               	bsf	17,0	;volatile
   472                           
   473                           ;PIC16F1827-clock04.c: 119: INTCONbits.PEIE = 1;
   474  019D  170B               	bsf	11,6	;volatile
   475                           
   476                           ;PIC16F1827-clock04.c: 120: INTCONbits.GIE = 1;
   477  019E  178B               	bsf	11,7	;volatile
   478  019F                     l935:	
   479                           ;PIC16F1827-clock04.c: 123: while (RA4 == 0) {
   480                           
   481                           ;PIC16F1827-clock04.c: 122: while (1) {
   482                           
   483  019F  0020               	movlb	0	; select bank0
   484  01A0  1A0C               	btfsc	12,4	;volatile
   485  01A1  29CA               	goto	l945
   486                           
   487                           ;PIC16F1827-clock04.c: 124: if (fu == 59) {
   488  01A2  303B               	movlw	59
   489  01A3  0020               	movlb	0	; select bank0
   490  01A4  064A               	xorwf	_fu,w
   491  01A5  1D03               	btfss	3,2
   492  01A6  29A9               	goto	l931
   493                           
   494                           ;PIC16F1827-clock04.c: 125: fu = 0;
   495  01A7  01CA               	clrf	_fu
   496                           
   497                           ;PIC16F1827-clock04.c: 126: } else {
   498  01A8  29AD               	goto	l933
   499  01A9                     l931:	
   500                           
   501                           ;PIC16F1827-clock04.c: 127: fu++;
   502  01A9  3001               	movlw	1
   503  01AA  00D5               	movwf	??_main
   504  01AB  0855               	movf	??_main,w
   505  01AC  07CA               	addwf	_fu,f
   506  01AD                     l933:	
   507                           
   508                           ;PIC16F1827-clock04.c: 128: }
   509                           ;PIC16F1827-clock04.c: 129: _delay((unsigned long)((200)*(32768/4000.0)));
   510  01AD  30E9               	movlw	233
   511  01AE  00D5               	movwf	??_main
   512  01AF                     u697:	
   513  01AF  3200               	nop2
   514  01B0  3200               	nop2
   515  01B1  0BD5               	decfsz	??_main,f
   516  01B2  29AF               	goto	u697
   517  01B3  3200               	nop2	;nop
   518  01B4  3200               	nop2	;nop
   519  01B5  3200               	nop2	;nop
   520  01B6  299F               	goto	l935
   521  01B7                     l937:	
   522                           ;PIC16F1827-clock04.c: 130: }
   523                           ;PIC16F1827-clock04.c: 131: while (RA5 == 0) {
   524                           
   525                           
   526                           ;PIC16F1827-clock04.c: 132: if (ji == 23) {
   527  01B7  3017               	movlw	23
   528  01B8  067D               	xorwf	_ji,w
   529  01B9  1D03               	btfss	3,2
   530  01BA  29BD               	goto	l941
   531                           
   532                           ;PIC16F1827-clock04.c: 133: ji = 0;
   533  01BB  01FD               	clrf	_ji
   534                           
   535                           ;PIC16F1827-clock04.c: 134: } else {
   536  01BC  29C1               	goto	l943
   537  01BD                     l941:	
   538                           
   539                           ;PIC16F1827-clock04.c: 135: ji++;
   540  01BD  3001               	movlw	1
   541  01BE  00D5               	movwf	??_main
   542  01BF  0855               	movf	??_main,w
   543  01C0  07FD               	addwf	_ji,f
   544  01C1                     l943:	
   545                           
   546                           ;PIC16F1827-clock04.c: 136: }
   547                           ;PIC16F1827-clock04.c: 137: _delay((unsigned long)((200)*(32768/4000.0)));
   548  01C1  30E9               	movlw	233
   549  01C2  00D5               	movwf	??_main
   550  01C3                     u707:	
   551  01C3  3200               	nop2
   552  01C4  3200               	nop2
   553  01C5  0BD5               	decfsz	??_main,f
   554  01C6  29C3               	goto	u707
   555  01C7  3200               	nop2	;nop
   556  01C8  3200               	nop2	;nop
   557  01C9  3200               	nop2	;nop
   558  01CA                     l945:	
   559  01CA  0020               	movlb	0	; select bank0
   560  01CB  1A8C               	btfsc	12,5	;volatile
   561  01CC  299F               	goto	l935
   562  01CD  29B7               	goto	l937
   563  01CE                     __end_of_main:	
   564                           
   565                           	psect	intentry
   566  0004                     __pintentry:	
   567 ;; *************** function _isr *****************
   568 ;; Defined at:
   569 ;;		line 37 in file "PIC16F1827-clock04.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;		None               void
   576 ;; Registers used:
   577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   583 ;;      Params:         0       0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0       0
   585 ;;      Temps:          0       5       0       0       0       0
   586 ;;      Totals:         0       5       0       0       0       0
   587 ;;Total ram usage:        5 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    1
   590 ;; This function calls:
   591 ;;		___awdiv
   592 ;;		___awmod
   593 ;; This function is called by:
   594 ;;		Interrupt level 1
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598  0004                     _isr:	
   599                           
   600                           ;incstack = 0
   601                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   602  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   603  0005  3180               	pagesel	$
   604  0006  0020               	movlb	0	; select bank0
   605  0007  087F               	movf	127,w
   606  0008  00D4               	movwf	??_isr+4
   607                           
   608                           ;PIC16F1827-clock04.c: 38: if (INTCONbits.TMR0IF == 1) {
   609  0009  1D0B               	btfss	11,2	;volatile
   610  000A  2877               	goto	i1l881
   611                           
   612                           ;PIC16F1827-clock04.c: 39: INTCONbits.TMR0IF = 0;
   613  000B  110B               	bcf	11,2	;volatile
   614                           
   615                           ;PIC16F1827-clock04.c: 41: if ((cnt1m % 8) < 4) {
   616  000C  3007               	movlw	7
   617  000D  0548               	andwf	_cnt1m,w
   618  000E  00D0               	movwf	??_isr
   619  000F  3000               	movlw	0
   620  0010  0549               	andwf	_cnt1m+1,w
   621  0011  00D1               	movwf	??_isr+1
   622  0012  3000               	movlw	0
   623  0013  0251               	subwf	??_isr+1,w
   624  0014  3004               	movlw	4
   625  0015  1903               	skipnz
   626  0016  0250               	subwf	??_isr,w
   627  0017  1803               	skipnc
   628  0018  2832               	goto	i1l849
   629                           
   630                           ;PIC16F1827-clock04.c: 42: for (j = 0; j < 10; j++) {
   631  0019  01FC               	clrf	_j
   632  001A  300A               	movlw	10
   633  001B  027C               	subwf	_j,w
   634  001C  1803               	btfsc	3,0
   635  001D  2832               	goto	i1l849
   636  001E                     i1l843:	
   637                           
   638                           ;PIC16F1827-clock04.c: 43: s[j] = q[j];
   639  001E  087C               	movf	_j,w
   640  001F  3E2A               	addlw	(low (_q| 0))& (0+255)
   641  0020  0086               	movwf	6
   642  0021  0187               	clrf	7
   643  0022  0801               	movf	1,w
   644  0023  00D0               	movwf	??_isr
   645  0024  087C               	movf	_j,w
   646  0025  3E3E               	addlw	(low (_s| 0))& (0+255)
   647  0026  0086               	movwf	6
   648  0027  0187               	clrf	7
   649  0028  0850               	movf	??_isr,w
   650  0029  0081               	movwf	1
   651  002A  3001               	movlw	1
   652  002B  00D0               	movwf	??_isr
   653  002C  0850               	movf	??_isr,w
   654  002D  07FC               	addwf	_j,f
   655  002E  300A               	movlw	10
   656  002F  027C               	subwf	_j,w
   657  0030  1C03               	skipc
   658  0031  281E               	goto	i1l843
   659  0032                     i1l849:	
   660                           
   661                           ;PIC16F1827-clock04.c: 44: }
   662                           ;PIC16F1827-clock04.c: 45: }
   663                           ;PIC16F1827-clock04.c: 46: if ((cnt1m % 8) > 5) {
   664  0032  3007               	movlw	7
   665  0033  0548               	andwf	_cnt1m,w
   666  0034  00D0               	movwf	??_isr
   667  0035  3000               	movlw	0
   668  0036  0549               	andwf	_cnt1m+1,w
   669  0037  00D1               	movwf	??_isr+1
   670  0038  3000               	movlw	0
   671  0039  0251               	subwf	??_isr+1,w
   672  003A  3006               	movlw	6
   673  003B  1903               	skipnz
   674  003C  0250               	subwf	??_isr,w
   675  003D  1C03               	skipc
   676  003E  2858               	goto	i1l863
   677                           
   678                           ;PIC16F1827-clock04.c: 47: for (j = 0; j < 10; j++) {
   679  003F  01FC               	clrf	_j
   680  0040  300A               	movlw	10
   681  0041  027C               	subwf	_j,w
   682  0042  1803               	btfsc	3,0
   683  0043  2858               	goto	i1l863
   684  0044                     i1l857:	
   685                           
   686                           ;PIC16F1827-clock04.c: 48: s[j] = p[j];
   687  0044  087C               	movf	_j,w
   688  0045  3E20               	addlw	(low (_p| 0))& (0+255)
   689  0046  0086               	movwf	6
   690  0047  0187               	clrf	7
   691  0048  0801               	movf	1,w
   692  0049  00D0               	movwf	??_isr
   693  004A  087C               	movf	_j,w
   694  004B  3E3E               	addlw	(low (_s| 0))& (0+255)
   695  004C  0086               	movwf	6
   696  004D  0187               	clrf	7
   697  004E  0850               	movf	??_isr,w
   698  004F  0081               	movwf	1
   699  0050  3001               	movlw	1
   700  0051  00D0               	movwf	??_isr
   701  0052  0850               	movf	??_isr,w
   702  0053  07FC               	addwf	_j,f
   703  0054  300A               	movlw	10
   704  0055  027C               	subwf	_j,w
   705  0056  1C03               	skipc
   706  0057  2844               	goto	i1l857
   707  0058                     i1l863:	
   708                           
   709                           ;PIC16F1827-clock04.c: 49: }
   710                           ;PIC16F1827-clock04.c: 50: }
   711                           ;PIC16F1827-clock04.c: 52: cnt1m++;
   712  0058  3001               	movlw	1
   713  0059  07C8               	addwf	_cnt1m,f
   714  005A  3000               	movlw	0
   715  005B  3DC9               	addwfc	_cnt1m+1,f
   716                           
   717                           ;PIC16F1827-clock04.c: 53: if (cnt1m == 8) {
   718  005C  3008               	movlw	8
   719  005D  0648               	xorwf	_cnt1m,w
   720  005E  0449               	iorwf	_cnt1m+1,w
   721  005F  1D03               	btfss	3,2
   722  0060  2877               	goto	i1l881
   723                           
   724                           ;PIC16F1827-clock04.c: 54: cnt1m = 0;
   725  0061  01C8               	clrf	_cnt1m
   726  0062  01C9               	clrf	_cnt1m+1
   727                           
   728                           ;PIC16F1827-clock04.c: 56: if (fu == 59) {
   729  0063  303B               	movlw	59
   730  0064  064A               	xorwf	_fu,w
   731  0065  1D03               	btfss	3,2
   732  0066  2873               	goto	i1l879
   733                           
   734                           ;PIC16F1827-clock04.c: 57: fu = 0;
   735  0067  01CA               	clrf	_fu
   736                           
   737                           ;PIC16F1827-clock04.c: 58: if (ji == 23) {
   738  0068  3017               	movlw	23
   739  0069  067D               	xorwf	_ji,w
   740  006A  1D03               	btfss	3,2
   741  006B  286E               	goto	i1l877
   742                           
   743                           ;PIC16F1827-clock04.c: 59: ji = 0;
   744  006C  01FD               	clrf	_ji
   745                           
   746                           ;PIC16F1827-clock04.c: 60: } else {
   747  006D  2877               	goto	i1l881
   748  006E                     i1l877:	
   749                           
   750                           ;PIC16F1827-clock04.c: 61: ji++;
   751  006E  3001               	movlw	1
   752  006F  00D0               	movwf	??_isr
   753  0070  0850               	movf	??_isr,w
   754  0071  07FD               	addwf	_ji,f
   755                           
   756                           ;PIC16F1827-clock04.c: 62: }
   757                           ;PIC16F1827-clock04.c: 63: } else {
   758  0072  2877               	goto	i1l881
   759  0073                     i1l879:	
   760                           
   761                           ;PIC16F1827-clock04.c: 64: fu++;
   762  0073  3001               	movlw	1
   763  0074  00D0               	movwf	??_isr
   764  0075  0850               	movf	??_isr,w
   765  0076  07CA               	addwf	_fu,f
   766  0077                     i1l881:	
   767                           
   768                           ;PIC16F1827-clock04.c: 65: }
   769                           ;PIC16F1827-clock04.c: 66: }
   770                           ;PIC16F1827-clock04.c: 67: }
   771                           ;PIC16F1827-clock04.c: 69: if (PIR1bits.TMR1IF == 1) {
   772  0077  1C11               	btfss	17,0	;volatile
   773  0078  2917               	goto	i1l75
   774                           
   775                           ;PIC16F1827-clock04.c: 70: PIR1bits.TMR1IF = 0;
   776  0079  1011               	bcf	17,0	;volatile
   777                           
   778                           ;PIC16F1827-clock04.c: 71: TMR1H = 0xFF;
   779  007A  30FF               	movlw	255
   780  007B  0097               	movwf	23	;volatile
   781                           
   782                           ;PIC16F1827-clock04.c: 72: TMR1L = 0xF0;
   783  007C  30F0               	movlw	240
   784  007D  0096               	movwf	22	;volatile
   785                           
   786                           ;PIC16F1827-clock04.c: 74: i=1;
   787  007E  01CB               	clrf	_i
   788  007F  0ACB               	incf	_i,f
   789                           
   790                           ;PIC16F1827-clock04.c: 76: switch (i) {
   791  0080  2909               	goto	i1l911
   792  0081                     i1l889:	
   793                           ;PIC16F1827-clock04.c: 77: case 1:
   794                           
   795                           
   796                           ;PIC16F1827-clock04.c: 78: PORTB = 0xFF;
   797  0081  30FF               	movlw	255
   798  0082  008D               	movwf	13	;volatile
   799                           
   800                           ;PIC16F1827-clock04.c: 79: PORTA = 0x01;
   801  0083  3001               	movlw	1
   802  0084  008C               	movwf	12	;volatile
   803                           
   804                           ;PIC16F1827-clock04.c: 80: PORTB = p[fu % 10];
   805  0085  300A               	movlw	10
   806  0086  00F0               	movwf	___awmod@divisor
   807  0087  3000               	movlw	0
   808  0088  00F1               	movwf	___awmod@divisor+1
   809  0089  084A               	movf	_fu,w
   810  008A  00D0               	movwf	??_isr
   811  008B  01D1               	clrf	??_isr+1
   812  008C  0850               	movf	??_isr,w
   813  008D  00F2               	movwf	___awmod@dividend
   814  008E  0851               	movf	??_isr+1,w
   815  008F  00F3               	movwf	___awmod@dividend+1
   816  0090  3181  21CE  3180   	fcall	___awmod
   817  0093  0870               	movf	?___awmod,w
   818  0094  28BE               	goto	L1
   819  0095                     i1l893:	
   820                           ;PIC16F1827-clock04.c: 82: case 2:
   821                           
   822                           ;PIC16F1827-clock04.c: 81: break;
   823                           
   824                           
   825                           ;PIC16F1827-clock04.c: 83: PORTB = 0xFF;
   826  0095  30FF               	movlw	255
   827  0096  008D               	movwf	13	;volatile
   828                           
   829                           ;PIC16F1827-clock04.c: 84: PORTA = 0x02;
   830  0097  3002               	movlw	2
   831  0098  008C               	movwf	12	;volatile
   832                           
   833                           ;PIC16F1827-clock04.c: 85: PORTB = p[(fu - (fu % 10)) / 10];
   834  0099  300A               	movlw	10
   835  009A  00F7               	movwf	___awdiv@divisor
   836  009B  3000               	movlw	0
   837  009C  00F8               	movwf	___awdiv@divisor+1
   838  009D  300A               	movlw	10
   839  009E  00F0               	movwf	___awmod@divisor
   840  009F  3000               	movlw	0
   841  00A0  00F1               	movwf	___awmod@divisor+1
   842  00A1  084A               	movf	_fu,w
   843  00A2  00D0               	movwf	??_isr
   844  00A3  01D1               	clrf	??_isr+1
   845  00A4  0850               	movf	??_isr,w
   846  00A5  00F2               	movwf	___awmod@dividend
   847  00A6  0851               	movf	??_isr+1,w
   848  00A7  00F3               	movwf	___awmod@dividend+1
   849  00A8  3181  21CE  3180   	fcall	___awmod
   850  00AB  0970               	comf	?___awmod,w
   851  00AC  0020               	movlb	0	; select bank0
   852  00AD  00D2               	movwf	??_isr+2
   853  00AE  0971               	comf	?___awmod+1,w
   854  00AF  00D3               	movwf	??_isr+3
   855  00B0  0AD2               	incf	??_isr+2,f
   856  00B1  1903               	skipnz
   857  00B2  0AD3               	incf	??_isr+3,f
   858  00B3  084A               	movf	_fu,w
   859  00B4  0752               	addwf	??_isr+2,w
   860  00B5  00F9               	movwf	___awdiv@dividend
   861  00B6  0853               	movf	??_isr+3,w
   862  00B7  1803               	skipnc
   863  00B8  0A53               	incf	??_isr+3,w
   864  00B9  00FA               	movwf	___awdiv@dividend+1
   865  00BA  3181  2136  3180   	fcall	___awdiv
   866  00BD  0877               	movf	?___awdiv,w
   867  00BE                     L1:	
   868  00BE  3E20               	addlw	(low (_p| 0))& (0+255)
   869  00BF  28FF               	goto	L3
   870  00C0                     i1l897:	
   871                           ;PIC16F1827-clock04.c: 87: case 3:
   872                           
   873                           ;PIC16F1827-clock04.c: 86: break;
   874                           
   875                           
   876                           ;PIC16F1827-clock04.c: 88: PORTB = 0xFF;
   877  00C0  30FF               	movlw	255
   878  00C1  008D               	movwf	13	;volatile
   879                           
   880                           ;PIC16F1827-clock04.c: 89: PORTA = 0x04;
   881  00C2  3004               	movlw	4
   882  00C3  008C               	movwf	12	;volatile
   883                           
   884                           ;PIC16F1827-clock04.c: 90: PORTB = s[ji % 10];
   885  00C4  300A               	movlw	10
   886  00C5  00F0               	movwf	___awmod@divisor
   887  00C6  3000               	movlw	0
   888  00C7  00F1               	movwf	___awmod@divisor+1
   889  00C8  087D               	movf	_ji,w
   890  00C9  00D0               	movwf	??_isr
   891  00CA  01D1               	clrf	??_isr+1
   892  00CB  0850               	movf	??_isr,w
   893  00CC  00F2               	movwf	___awmod@dividend
   894  00CD  0851               	movf	??_isr+1,w
   895  00CE  00F3               	movwf	___awmod@dividend+1
   896  00CF  3181  21CE  3180   	fcall	___awmod
   897  00D2  0870               	movf	?___awmod,w
   898  00D3  3E3E               	addlw	(low (_s| 0))& (0+255)
   899  00D4  28FF               	goto	L3
   900  00D5                     i1l901:	
   901                           ;PIC16F1827-clock04.c: 92: case 4:
   902                           
   903                           ;PIC16F1827-clock04.c: 91: break;
   904                           
   905                           
   906                           ;PIC16F1827-clock04.c: 93: PORTB = 0xFF;
   907  00D5  30FF               	movlw	255
   908  00D6  008D               	movwf	13	;volatile
   909                           
   910                           ;PIC16F1827-clock04.c: 94: PORTA = 0x08;
   911  00D7  3008               	movlw	8
   912  00D8  008C               	movwf	12	;volatile
   913                           
   914                           ;PIC16F1827-clock04.c: 95: PORTB = r[(ji - (ji % 10)) / 10];
   915  00D9  300A               	movlw	10
   916  00DA  00F7               	movwf	___awdiv@divisor
   917  00DB  3000               	movlw	0
   918  00DC  00F8               	movwf	___awdiv@divisor+1
   919  00DD  300A               	movlw	10
   920  00DE  00F0               	movwf	___awmod@divisor
   921  00DF  3000               	movlw	0
   922  00E0  00F1               	movwf	___awmod@divisor+1
   923  00E1  087D               	movf	_ji,w
   924  00E2  00D0               	movwf	??_isr
   925  00E3  01D1               	clrf	??_isr+1
   926  00E4  0850               	movf	??_isr,w
   927  00E5  00F2               	movwf	___awmod@dividend
   928  00E6  0851               	movf	??_isr+1,w
   929  00E7  00F3               	movwf	___awmod@dividend+1
   930  00E8  3181  21CE  3180   	fcall	___awmod
   931  00EB  0970               	comf	?___awmod,w
   932  00EC  0020               	movlb	0	; select bank0
   933  00ED  00D2               	movwf	??_isr+2
   934  00EE  0971               	comf	?___awmod+1,w
   935  00EF  00D3               	movwf	??_isr+3
   936  00F0  0AD2               	incf	??_isr+2,f
   937  00F1  1903               	skipnz
   938  00F2  0AD3               	incf	??_isr+3,f
   939  00F3  087D               	movf	_ji,w
   940  00F4  0752               	addwf	??_isr+2,w
   941  00F5  00F9               	movwf	___awdiv@dividend
   942  00F6  0853               	movf	??_isr+3,w
   943  00F7  1803               	skipnc
   944  00F8  0A53               	incf	??_isr+3,w
   945  00F9  00FA               	movwf	___awdiv@dividend+1
   946  00FA  3181  2136  3180   	fcall	___awdiv
   947  00FD  0877               	movf	?___awdiv,w
   948  00FE  3E34               	addlw	(low (_r| 0))& (0+255)
   949  00FF                     L3:	
   950  00FF  0086               	movwf	6
   951  0100  0187               	clrf	7
   952  0101  0801               	movf	1,w
   953  0102  0020               	movlb	0	; select bank0
   954  0103  008D               	movwf	13	;volatile
   955                           
   956                           ;PIC16F1827-clock04.c: 96: break;
   957  0104  2917               	goto	i1l75
   958  0105                     i1l905:	
   959                           ;PIC16F1827-clock04.c: 97: default:
   960                           
   961                           
   962                           ;PIC16F1827-clock04.c: 98: PORTB = 0xFF;
   963  0105  30FF               	movlw	255
   964  0106  008D               	movwf	13	;volatile
   965                           
   966                           ;PIC16F1827-clock04.c: 99: i = 0;
   967  0107  01CB               	clrf	_i
   968                           
   969                           ;PIC16F1827-clock04.c: 101: }
   970                           
   971                           ;PIC16F1827-clock04.c: 100: break;
   972  0108  2917               	goto	i1l75
   973  0109                     i1l911:	
   974  0109  084B               	movf	_i,w
   975                           
   976                           ; Switch size 1, requested type "space"
   977                           ; Number of cases is 4, Range of values is 1 to 4
   978                           ; switch strategies available:
   979                           ; Name         Instructions Cycles
   980                           ; simple_byte           13     7 (average)
   981                           ; direct_byte           17     9 (fixed)
   982                           ; jumptable            263     9 (fixed)
   983                           ;	Chosen strategy is simple_byte
   984  010A  3A01               	xorlw	1	; case 1
   985  010B  1903               	skipnz
   986  010C  2881               	goto	i1l889
   987  010D  3A03               	xorlw	3	; case 2
   988  010E  1903               	skipnz
   989  010F  2895               	goto	i1l893
   990  0110  3A01               	xorlw	1	; case 3
   991  0111  1903               	skipnz
   992  0112  28C0               	goto	i1l897
   993  0113  3A07               	xorlw	7	; case 4
   994  0114  1903               	skipnz
   995  0115  28D5               	goto	i1l901
   996  0116  2905               	goto	i1l905
   997  0117                     i1l75:	
   998  0117  0854               	movf	??_isr+4,w
   999  0118  00FF               	movwf	127
  1000  0119  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1001  011A  0009               	retfie
  1002  011B                     __end_of_isr:	
  1003                           
  1004                           	psect	text2
  1005  01CE                     __ptext2:	
  1006 ;; *************** function ___awmod *****************
  1007 ;; Defined at:
  1008 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  divisor         2    0[COMMON] int 
  1011 ;;  dividend        2    2[COMMON] int 
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;  sign            1    6[COMMON] unsigned char 
  1014 ;;  counter         1    5[COMMON] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  2    0[COMMON] int 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1024 ;;      Params:         4       0       0       0       0       0
  1025 ;;      Locals:         2       0       0       0       0       0
  1026 ;;      Temps:          1       0       0       0       0       0
  1027 ;;      Totals:         7       0       0       0       0       0
  1028 ;;Total ram usage:        7 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		_isr
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           
  1038                           ;psect for function ___awmod
  1039  01CE                     ___awmod:	
  1040                           
  1041                           ;incstack = 0
  1042                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1043  01CE  01F6               	clrf	___awmod@sign
  1044  01CF  1FF3               	btfss	___awmod@dividend+1,7
  1045  01D0  29D8               	goto	i1l801
  1046  01D1  09F2               	comf	___awmod@dividend,f
  1047  01D2  09F3               	comf	___awmod@dividend+1,f
  1048  01D3  0AF2               	incf	___awmod@dividend,f
  1049  01D4  1903               	skipnz
  1050  01D5  0AF3               	incf	___awmod@dividend+1,f
  1051  01D6  01F6               	clrf	___awmod@sign
  1052  01D7  0AF6               	incf	___awmod@sign,f
  1053  01D8                     i1l801:	
  1054  01D8  1FF1               	btfss	___awmod@divisor+1,7
  1055  01D9  29DF               	goto	i1l805
  1056  01DA  09F0               	comf	___awmod@divisor,f
  1057  01DB  09F1               	comf	___awmod@divisor+1,f
  1058  01DC  0AF0               	incf	___awmod@divisor,f
  1059  01DD  1903               	skipnz
  1060  01DE  0AF1               	incf	___awmod@divisor+1,f
  1061  01DF                     i1l805:	
  1062  01DF  0870               	movf	___awmod@divisor,w
  1063  01E0  0471               	iorwf	___awmod@divisor+1,w
  1064  01E1  1903               	btfsc	3,2
  1065  01E2  2A06               	goto	i1l823
  1066  01E3  01F5               	clrf	___awmod@counter
  1067  01E4  0AF5               	incf	___awmod@counter,f
  1068  01E5                     i1l813:	
  1069  01E5  1BF1               	btfsc	___awmod@divisor+1,7
  1070  01E6  29F1               	goto	i1l815
  1071  01E7  3001               	movlw	1
  1072  01E8                     u48_25:	
  1073  01E8  35F0               	lslf	___awmod@divisor,f
  1074  01E9  0DF1               	rlf	___awmod@divisor+1,f
  1075  01EA  0B89               	decfsz	9,f
  1076  01EB  29E8               	goto	u48_25
  1077  01EC  3001               	movlw	1
  1078  01ED  00F4               	movwf	??___awmod
  1079  01EE  0874               	movf	??___awmod,w
  1080  01EF  07F5               	addwf	___awmod@counter,f
  1081  01F0  29E5               	goto	i1l813
  1082  01F1                     i1l815:	
  1083  01F1  0871               	movf	___awmod@divisor+1,w
  1084  01F2  0273               	subwf	___awmod@dividend+1,w
  1085  01F3  1D03               	skipz
  1086  01F4  29F7               	goto	u50_25
  1087  01F5  0870               	movf	___awmod@divisor,w
  1088  01F6  0272               	subwf	___awmod@dividend,w
  1089  01F7                     u50_25:	
  1090  01F7  1C03               	skipc
  1091  01F8  29FD               	goto	i1l819
  1092  01F9  0870               	movf	___awmod@divisor,w
  1093  01FA  02F2               	subwf	___awmod@dividend,f
  1094  01FB  0871               	movf	___awmod@divisor+1,w
  1095  01FC  3BF3               	subwfb	___awmod@dividend+1,f
  1096  01FD                     i1l819:	
  1097  01FD  3001               	movlw	1
  1098  01FE                     u51_25:	
  1099  01FE  36F1               	lsrf	___awmod@divisor+1,f
  1100  01FF  0CF0               	rrf	___awmod@divisor,f
  1101  0200  0B89               	decfsz	9,f
  1102  0201  29FE               	goto	u51_25
  1103  0202  3001               	movlw	1
  1104  0203  02F5               	subwf	___awmod@counter,f
  1105  0204  1D03               	btfss	3,2
  1106  0205  29F1               	goto	i1l815
  1107  0206                     i1l823:	
  1108  0206  0876               	movf	___awmod@sign,w
  1109  0207  1903               	btfsc	3,2
  1110  0208  2A0E               	goto	i1l827
  1111  0209  09F2               	comf	___awmod@dividend,f
  1112  020A  09F3               	comf	___awmod@dividend+1,f
  1113  020B  0AF2               	incf	___awmod@dividend,f
  1114  020C  1903               	skipnz
  1115  020D  0AF3               	incf	___awmod@dividend+1,f
  1116  020E                     i1l827:	
  1117  020E  0873               	movf	___awmod@dividend+1,w
  1118  020F  00F1               	movwf	?___awmod+1
  1119  0210  0872               	movf	___awmod@dividend,w
  1120  0211  00F0               	movwf	?___awmod
  1121  0212  0008               	return
  1122  0213                     __end_of___awmod:	
  1123                           
  1124                           	psect	text3
  1125  0136                     __ptext3:	
  1126 ;; *************** function ___awdiv *****************
  1127 ;; Defined at:
  1128 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  divisor         2    7[COMMON] int 
  1131 ;;  dividend        2    9[COMMON] int 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  quotient        2    2[BANK0 ] int 
  1134 ;;  sign            1    1[BANK0 ] unsigned char 
  1135 ;;  counter         1    0[BANK0 ] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  2    7[COMMON] int 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1145 ;;      Params:         4       0       0       0       0       0
  1146 ;;      Locals:         0       4       0       0       0       0
  1147 ;;      Temps:          1       0       0       0       0       0
  1148 ;;      Totals:         5       4       0       0       0       0
  1149 ;;Total ram usage:        9 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_isr
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function ___awdiv
  1160  0136                     ___awdiv:	
  1161                           
  1162                           ;incstack = 0
  1163                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1164  0136  0020               	movlb	0	; select bank0
  1165  0137  01CD               	clrf	___awdiv@sign
  1166  0138  1FF8               	btfss	___awdiv@divisor+1,7
  1167  0139  2941               	goto	i1l757
  1168  013A  09F7               	comf	___awdiv@divisor,f
  1169  013B  09F8               	comf	___awdiv@divisor+1,f
  1170  013C  0AF7               	incf	___awdiv@divisor,f
  1171  013D  1903               	skipnz
  1172  013E  0AF8               	incf	___awdiv@divisor+1,f
  1173  013F  01CD               	clrf	___awdiv@sign
  1174  0140  0ACD               	incf	___awdiv@sign,f
  1175  0141                     i1l757:	
  1176  0141  1FFA               	btfss	___awdiv@dividend+1,7
  1177  0142  294C               	goto	i1l763
  1178  0143  09F9               	comf	___awdiv@dividend,f
  1179  0144  09FA               	comf	___awdiv@dividend+1,f
  1180  0145  0AF9               	incf	___awdiv@dividend,f
  1181  0146  1903               	skipnz
  1182  0147  0AFA               	incf	___awdiv@dividend+1,f
  1183  0148  3001               	movlw	1
  1184  0149  00FB               	movwf	??___awdiv
  1185  014A  087B               	movf	??___awdiv,w
  1186  014B  06CD               	xorwf	___awdiv@sign,f
  1187  014C                     i1l763:	
  1188  014C  01CE               	clrf	___awdiv@quotient
  1189  014D  01CF               	clrf	___awdiv@quotient+1
  1190  014E  0877               	movf	___awdiv@divisor,w
  1191  014F  0478               	iorwf	___awdiv@divisor+1,w
  1192  0150  1903               	btfsc	3,2
  1193  0151  297B               	goto	i1l785
  1194  0152  01CC               	clrf	___awdiv@counter
  1195  0153  0ACC               	incf	___awdiv@counter,f
  1196  0154                     i1l773:	
  1197  0154  1BF8               	btfsc	___awdiv@divisor+1,7
  1198  0155  2960               	goto	i1l775
  1199  0156  3001               	movlw	1
  1200  0157                     u38_25:	
  1201  0157  35F7               	lslf	___awdiv@divisor,f
  1202  0158  0DF8               	rlf	___awdiv@divisor+1,f
  1203  0159  0B89               	decfsz	9,f
  1204  015A  2957               	goto	u38_25
  1205  015B  3001               	movlw	1
  1206  015C  00FB               	movwf	??___awdiv
  1207  015D  087B               	movf	??___awdiv,w
  1208  015E  07CC               	addwf	___awdiv@counter,f
  1209  015F  2954               	goto	i1l773
  1210  0160                     i1l775:	
  1211  0160  3001               	movlw	1
  1212  0161                     u40_25:	
  1213  0161  35CE               	lslf	___awdiv@quotient,f
  1214  0162  0DCF               	rlf	___awdiv@quotient+1,f
  1215  0163  0B89               	decfsz	9,f
  1216  0164  2961               	goto	u40_25
  1217  0165  0878               	movf	___awdiv@divisor+1,w
  1218  0166  027A               	subwf	___awdiv@dividend+1,w
  1219  0167  1D03               	skipz
  1220  0168  296B               	goto	u41_25
  1221  0169  0877               	movf	___awdiv@divisor,w
  1222  016A  0279               	subwf	___awdiv@dividend,w
  1223  016B                     u41_25:	
  1224  016B  1C03               	skipc
  1225  016C  2972               	goto	i1l781
  1226  016D  0877               	movf	___awdiv@divisor,w
  1227  016E  02F9               	subwf	___awdiv@dividend,f
  1228  016F  0878               	movf	___awdiv@divisor+1,w
  1229  0170  3BFA               	subwfb	___awdiv@dividend+1,f
  1230  0171  144E               	bsf	___awdiv@quotient,0
  1231  0172                     i1l781:	
  1232  0172  3001               	movlw	1
  1233  0173                     u42_25:	
  1234  0173  36F8               	lsrf	___awdiv@divisor+1,f
  1235  0174  0CF7               	rrf	___awdiv@divisor,f
  1236  0175  0B89               	decfsz	9,f
  1237  0176  2973               	goto	u42_25
  1238  0177  3001               	movlw	1
  1239  0178  02CC               	subwf	___awdiv@counter,f
  1240  0179  1D03               	btfss	3,2
  1241  017A  2960               	goto	i1l775
  1242  017B                     i1l785:	
  1243  017B  084D               	movf	___awdiv@sign,w
  1244  017C  1903               	btfsc	3,2
  1245  017D  2983               	goto	i1l789
  1246  017E  09CE               	comf	___awdiv@quotient,f
  1247  017F  09CF               	comf	___awdiv@quotient+1,f
  1248  0180  0ACE               	incf	___awdiv@quotient,f
  1249  0181  1903               	skipnz
  1250  0182  0ACF               	incf	___awdiv@quotient+1,f
  1251  0183                     i1l789:	
  1252  0183  084F               	movf	___awdiv@quotient+1,w
  1253  0184  00F8               	movwf	?___awdiv+1
  1254  0185  084E               	movf	___awdiv@quotient,w
  1255  0186  00F7               	movwf	?___awdiv
  1256  0187  0008               	return
  1257  0188                     __end_of___awdiv:	
  1258  007E                     btemp	set	126	;btemp
  1259  007E                     int$flags	set	126
  1260  007E                     wtemp	set	126
  1261  007E                     wtemp0	set	126
  1262  0080                     wtemp1	set	128
  1263  0082                     wtemp2	set	130
  1264  0084                     wtemp3	set	132
  1265  0086                     wtemp4	set	134
  1266  0088                     wtemp5	set	136
  1267  007F                     wtemp6	set	127
  1268  007E                     ttemp	set	126
  1269  007E                     ttemp0	set	126
  1270  0081                     ttemp1	set	129
  1271  0084                     ttemp2	set	132
  1272  0087                     ttemp3	set	135
  1273  007F                     ttemp4	set	127
  1274  007E                     ltemp	set	126
  1275  007E                     ltemp0	set	126
  1276  0082                     ltemp1	set	130
  1277  0086                     ltemp2	set	134
  1278  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     10      54
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  5     5      0    1232
                                              4 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     720
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      44       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      36       6       67.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      44      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 12 08:31:18 2015

                      _i 004B                        _j 007C                        _p 0020  
                      _q 002A                        _r 0034                        _s 003E  
            __CFG_CP$OFF 0000             ___awdiv@sign 004D                       _ji 007D  
                     _fu 004A                      l931 01A9                      l941 01BD  
                    l933 01AD                      l943 01C1                      l935 019F  
                    l937 01B7                      l945 01CA                      _RA4 0064  
                    _RA5 0065             __CFG_CPD$OFF 0000                      u707 01C3  
                    u697 01AF                      _isr 0004             ___awmod@sign 0076  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_FOSC$LP 0000  
           __CFG_LVP$OFF 0000                     ?_isr 0070                     i1l75 0117  
           __CFG_WRT$OFF 0000                     _main 0188                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   ltemp 007E                     start 011B                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000                    ??_isr 0050  
                  ?_main 0070          __end_of___awdiv 0188            __CFG_WDTE$OFF 0000  
        __end_of___awmod 0213          ___awdiv@divisor 0077                    _T1CON 0018  
                  i1l801 01D8                    i1l813 01E5                    i1l805 01DF  
                  i1l901 00D5                    i1l815 01F1                    i1l823 0206  
                  i1l911 0109                    i1l905 0105                    i1l763 014C  
                  i1l827 020E                    i1l819 01FD                    i1l843 001E  
                  i1l781 0172                    i1l773 0154                    i1l757 0141  
                  i1l775 0160                    i1l863 0058                    i1l785 017B  
                  i1l857 0044                    i1l849 0032                    i1l881 0077  
                  i1l789 0183                    i1l893 0095                    i1l877 006E  
                  i1l879 0073                    i1l897 00C0                    i1l889 0081  
        ___awdiv@counter 004C                    u40_25 0161                    _TMR1H 0017  
                  u41_25 016B                    _TMR1L 0016                    u42_25 0173  
                  u50_25 01F7                    _PORTA 000C                    _PORTB 000D  
                  u51_25 01FE                    u38_25 0157                    u48_25 01E8  
                  _TRISA 008C                    _TRISB 008D           __CFG_FCMEN$OFF 0000  
                  _cnt1m 0048           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 011D  
           __end_of_main 01CE                   ??_main 0055           __CFG_PLLEN$OFF 0000  
       ___awdiv@dividend 0079                   _ANSELA 018C                   _ANSELB 018D  
                 _OSCCON 0099           __CFG_PWRTE$OFF 0000                ??___awdiv 007B  
              ??___awmod 0074         ___awdiv@quotient 004E          ___awmod@divisor 0070  
        ___awmod@counter 0075  __end_of__initialization 0132           __pcstackCOMMON 0070  
           __pidataBANK0 0213               __pbssBANK0 003E               __pmaintext 0188  
             __pintentry 0004                  ___awdiv 0136                  ___awmod 01CE  
        __CFG_STVREN$OFF 0000                  __ptext2 01CE                  __ptext3 0136  
           __size_of_isr 0117         ___awmod@dividend 0072                  clrloop0 0232  
   end_of_initialization 0132                  init_ram 0237                  initloop 0238  
    start_initialization 011D              __end_of_isr 011B              __pdataBANK0 0020  
            __pbssCOMMON 007C                ___latbits 0001            __pcstackBANK0 004C  
               ?___awdiv 0077                 ?___awmod 0070                clear_ram0 0231  
               _PIE1bits 0091                 _PIR1bits 0011         __size_of___awdiv 0052  
       __size_of___awmod 0045            __size_of_main 0046                 int$flags 007E  
             _INTCONbits 000B                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
             _OPTION_REG 0095  
