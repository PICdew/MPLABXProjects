

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 18:45:38 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001E                     	;# 
    46  001F                     	;# 
    47  008C                     	;# 
    48  008D                     	;# 
    49  0091                     	;# 
    50  0092                     	;# 
    51  0093                     	;# 
    52  0094                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0097                     	;# 
    56  0098                     	;# 
    57  0099                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009B                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  010C                     	;# 
    65  010D                     	;# 
    66  0111                     	;# 
    67  0112                     	;# 
    68  0113                     	;# 
    69  0114                     	;# 
    70  0115                     	;# 
    71  0116                     	;# 
    72  0117                     	;# 
    73  0118                     	;# 
    74  0119                     	;# 
    75  011A                     	;# 
    76  011B                     	;# 
    77  011D                     	;# 
    78  011E                     	;# 
    79  018C                     	;# 
    80  018D                     	;# 
    81  0191                     	;# 
    82  0191                     	;# 
    83  0192                     	;# 
    84  0193                     	;# 
    85  0193                     	;# 
    86  0193                     	;# 
    87  0194                     	;# 
    88  0195                     	;# 
    89  0196                     	;# 
    90  0199                     	;# 
    91  019A                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019C                     	;# 
    97  019C                     	;# 
    98  019D                     	;# 
    99  019E                     	;# 
   100  019F                     	;# 
   101  020C                     	;# 
   102  020D                     	;# 
   103  0211                     	;# 
   104  0211                     	;# 
   105  0212                     	;# 
   106  0212                     	;# 
   107  0213                     	;# 
   108  0213                     	;# 
   109  0214                     	;# 
   110  0214                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0215                     	;# 
   114  0216                     	;# 
   115  0216                     	;# 
   116  0217                     	;# 
   117  0217                     	;# 
   118  0219                     	;# 
   119  021A                     	;# 
   120  021B                     	;# 
   121  021C                     	;# 
   122  021D                     	;# 
   123  021E                     	;# 
   124  021F                     	;# 
   125  0291                     	;# 
   126  0291                     	;# 
   127  0292                     	;# 
   128  0293                     	;# 
   129  0294                     	;# 
   130  0295                     	;# 
   131  0295                     	;# 
   132  0296                     	;# 
   133  0298                     	;# 
   134  0298                     	;# 
   135  0299                     	;# 
   136  029A                     	;# 
   137  029B                     	;# 
   138  029C                     	;# 
   139  029C                     	;# 
   140  029D                     	;# 
   141  029E                     	;# 
   142  029E                     	;# 
   143  0311                     	;# 
   144  0311                     	;# 
   145  0312                     	;# 
   146  0313                     	;# 
   147  0318                     	;# 
   148  0318                     	;# 
   149  0319                     	;# 
   150  031A                     	;# 
   151  0394                     	;# 
   152  0395                     	;# 
   153  0396                     	;# 
   154  039A                     	;# 
   155  039C                     	;# 
   156  039D                     	;# 
   157  039E                     	;# 
   158  039F                     	;# 
   159  0415                     	;# 
   160  0416                     	;# 
   161  0417                     	;# 
   162  041C                     	;# 
   163  041D                     	;# 
   164  041E                     	;# 
   165  0FE4                     	;# 
   166  0FE5                     	;# 
   167  0FE6                     	;# 
   168  0FE7                     	;# 
   169  0FE8                     	;# 
   170  0FE9                     	;# 
   171  0FEA                     	;# 
   172  0FEB                     	;# 
   173  0FED                     	;# 
   174  0FEE                     	;# 
   175  0FEF                     	;# 
   176  000B                     _INTCONbits	set	11
   177  0011                     _PIR1bits	set	17
   178  000C                     _PORTA	set	12
   179  000D                     _PORTB	set	13
   180  0018                     _T1CON	set	24
   181  0017                     _TMR1H	set	23
   182  0016                     _TMR1L	set	22
   183  009B                     _ADRES	set	155
   184  009D                     _ADCON0bits	set	157
   185  009E                     _ADCON1	set	158
   186  0095                     _OPTION_REG	set	149
   187  0099                     _OSCCON	set	153
   188  0091                     _PIE1bits	set	145
   189  008C                     _TRISA	set	140
   190  008D                     _TRISB	set	141
   191  0117                     _FVRCON	set	279
   192  018C                     _ANSELA	set	396
   193  018D                     _ANSELB	set	397
   194                           
   195                           ; #config settings
   196  0000                     
   197                           	psect	cinit
   198  00E1                     start_initialization:	
   199  00E1                     __initialization:	
   200                           
   201                           ; Clear objects allocated to BANK0
   202  00E1  3020               	movlw	low __pbssBANK0
   203  00E2  0084               	movwf	4
   204  00E3  3000               	movlw	high __pbssBANK0
   205  00E4  0085               	movwf	5
   206  00E5  3026               	movlw	38
   207  00E6  3181  21E4         	fcall	clear_ram0
   208  00E8                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211  00E8                     __end_of__initialization:	
   212  00E8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   213  00E9  0020               	movlb	0
   214  00EA  3180  28EC         	ljmp	_main	;jump to C main() function
   215                           
   216                           	psect	bssBANK0
   217  0020                     __pbssBANK0:	
   218  0020                     _cut:	
   219  0020                     	ds	8
   220  0028                     _temp:	
   221  0028                     	ds	8
   222  0030                     _v:	
   223  0030                     	ds	8
   224  0038                     _cutf:	
   225  0038                     	ds	4
   226  003C                     _d:	
   227  003C                     	ds	4
   228  0040                     _cnt:	
   229  0040                     	ds	2
   230  0042                     _cnt0:	
   231  0042                     	ds	2
   232  0044                     _cnt1:	
   233  0044                     	ds	2
   234                           
   235                           	psect	clrtext
   236  01E4                     clear_ram0:	
   237                           ;	Called with FSR0 containing the base address, and
   238                           ;	WREG with the size to clear
   239                           
   240  01E4  0064               	clrwdt	;clear the watchdog before getting into this loop
   241  01E5                     clrloop0:	
   242  01E5  0180               	clrf	0	;clear RAM location pointed to by FSR
   243  01E6  3101               	addfsr 0,1
   244  01E7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   245  01E8  29E5               	goto	clrloop0	;have we reached the end yet?
   246  01E9  3400               	retlw	0	;all done for this memory range, return
   247                           
   248                           	psect	cstackCOMMON
   249  0070                     __pcstackCOMMON:	
   250  0070                     ?_LED:	
   251  0070                     ?_isr:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ?i1_OUT:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0070                     ?_SW:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ?_adc:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_main:	
   264                           ; 2 bytes @ 0x0
   265                           
   266  0070                     ?___lwdiv:	
   267                           ; 2 bytes @ 0x0
   268                           
   269  0070                     LED@hl:	
   270                           ; 2 bytes @ 0x0
   271                           
   272  0070                     i1OUT@hl:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ___lwdiv@divisor:	
   276                           ; 1 bytes @ 0x0
   277                           
   278                           
   279                           ; 2 bytes @ 0x0
   280  0070                     	ds	1
   281  0071                     ??_LED:	
   282  0071                     ??i1_OUT:	
   283                           ; 0 bytes @ 0x1
   284                           
   285                           
   286                           ; 0 bytes @ 0x1
   287  0071                     	ds	1
   288  0072                     ??_adc:	
   289  0072                     LED@b:	
   290                           ; 0 bytes @ 0x2
   291                           
   292  0072                     i1OUT@b:	
   293                           ; 1 bytes @ 0x2
   294                           
   295  0072                     ___lwdiv@dividend:	
   296                           ; 1 bytes @ 0x2
   297                           
   298                           
   299                           ; 2 bytes @ 0x2
   300  0072                     	ds	1
   301  0073                     adc@ch:	
   302                           
   303                           ; 1 bytes @ 0x3
   304  0073                     	ds	1
   305  0074                     ??___lwdiv:	
   306                           
   307                           ; 0 bytes @ 0x4
   308  0074                     	ds	1
   309  0075                     ___lwdiv@quotient:	
   310                           
   311                           ; 2 bytes @ 0x5
   312  0075                     	ds	2
   313  0077                     ___lwdiv@counter:	
   314                           
   315                           ; 1 bytes @ 0x7
   316  0077                     	ds	1
   317  0078                     ??_isr:	
   318                           
   319                           ; 0 bytes @ 0x8
   320  0078                     	ds	5
   321  007D                     isr@i:	
   322                           
   323                           ; 1 bytes @ 0xD
   324  007D                     	ds	1
   325                           
   326                           	psect	cstackBANK0
   327  0046                     __pcstackBANK0:	
   328  0046                     ?_OUT:	
   329  0046                     ??_SW:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0046                     OUT@hl:	
   333                           ; 0 bytes @ 0x0
   334                           
   335                           
   336                           ; 1 bytes @ 0x0
   337  0046                     	ds	1
   338  0047                     ??_OUT:	
   339  0047                     SW@b:	
   340                           ; 0 bytes @ 0x1
   341                           
   342                           
   343                           ; 1 bytes @ 0x1
   344  0047                     	ds	1
   345  0048                     OUT@b:	
   346  0048                     SW@temp:	
   347                           ; 1 bytes @ 0x2
   348                           
   349                           
   350                           ; 1 bytes @ 0x2
   351  0048                     	ds	1
   352  0049                     ??_main:	
   353                           
   354                           ; 0 bytes @ 0x3
   355  0049                     	ds	1
   356  004A                     main@i:	
   357                           
   358                           ; 1 bytes @ 0x4
   359  004A                     	ds	1
   360                           
   361                           	psect	maintext
   362  00EC                     __pmaintext:	
   363 ;;
   364 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   365 ;;
   366 ;; *************** function _main *****************
   367 ;; Defined at:
   368 ;;		line 122 in file "PIC16F1827-ChargeStation05.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  i               1    4[BANK0 ] unsigned char 
   373 ;; Return value:  Size  Location     Type
   374 ;;                  2  102[None  ] int 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, pclath, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : B1F/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   382 ;;      Params:         0       0       0       0       0       0
   383 ;;      Locals:         0       1       0       0       0       0
   384 ;;      Temps:          0       1       0       0       0       0
   385 ;;      Totals:         0       2       0       0       0       0
   386 ;;Total ram usage:        2 bytes
   387 ;; Hardware stack levels required when called:    3
   388 ;; This function calls:
   389 ;;		_OUT
   390 ;;		_SW
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           
   397                           ;psect for function _main
   398  00EC                     _main:	
   399                           
   400                           ;PIC16F1827-ChargeStation05.c: 123: OSCCON = 0x70;
   401                           
   402                           ;incstack = 0
   403                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   404  00EC  3070               	movlw	112
   405  00ED  0021               	movlb	1	; select bank1
   406  00EE  0099               	movwf	25	;volatile
   407                           
   408                           ;PIC16F1827-ChargeStation05.c: 124: TRISA = 0xFF;
   409  00EF  30FF               	movlw	255
   410  00F0  008C               	movwf	12	;volatile
   411                           
   412                           ;PIC16F1827-ChargeStation05.c: 125: TRISB = 0x00;
   413  00F1  018D               	clrf	13	;volatile
   414                           
   415                           ;PIC16F1827-ChargeStation05.c: 126: ANSELA = 0x0F;
   416  00F2  300F               	movlw	15
   417  00F3  0023               	movlb	3	; select bank3
   418  00F4  008C               	movwf	12	;volatile
   419                           
   420                           ;PIC16F1827-ChargeStation05.c: 127: ANSELB = 0x00;
   421  00F5  018D               	clrf	13	;volatile
   422                           
   423                           ;PIC16F1827-ChargeStation05.c: 128: ADCON1 = 0x93;
   424  00F6  3093               	movlw	147
   425  00F7  0021               	movlb	1	; select bank1
   426  00F8  009E               	movwf	30	;volatile
   427                           
   428                           ;PIC16F1827-ChargeStation05.c: 129: FVRCON = 0x83;
   429  00F9  3083               	movlw	131
   430  00FA  0022               	movlb	2	; select bank2
   431  00FB  0097               	movwf	23	;volatile
   432                           
   433                           ;PIC16F1827-ChargeStation05.c: 131: PORTB = 0xF0;
   434  00FC  30F0               	movlw	240
   435  00FD  0020               	movlb	0	; select bank0
   436  00FE  008D               	movwf	13	;volatile
   437                           
   438                           ;PIC16F1827-ChargeStation05.c: 133: OPTION_REG = 0b10010011;
   439  00FF  3093               	movlw	147
   440  0100  0021               	movlb	1	; select bank1
   441  0101  0095               	movwf	21	;volatile
   442                           
   443                           ;PIC16F1827-ChargeStation05.c: 134: INTCONbits.TMR0IE = 1;
   444  0102  168B               	bsf	11,5	;volatile
   445                           
   446                           ;PIC16F1827-ChargeStation05.c: 136: T1CON = 0x21;
   447  0103  3021               	movlw	33
   448  0104  0020               	movlb	0	; select bank0
   449  0105  0098               	movwf	24	;volatile
   450                           
   451                           ;PIC16F1827-ChargeStation05.c: 137: TMR1H = 0x00;
   452  0106  0197               	clrf	23	;volatile
   453                           
   454                           ;PIC16F1827-ChargeStation05.c: 138: TMR1L = 0x00;
   455  0107  0196               	clrf	22	;volatile
   456                           
   457                           ;PIC16F1827-ChargeStation05.c: 139: PIE1bits.TMR1IE = 1;
   458  0108  0021               	movlb	1	; select bank1
   459  0109  1411               	bsf	17,0	;volatile
   460                           
   461                           ;PIC16F1827-ChargeStation05.c: 140: INTCONbits.PEIE = 1;
   462  010A  170B               	bsf	11,6	;volatile
   463                           
   464                           ;PIC16F1827-ChargeStation05.c: 141: INTCONbits.GIE = 1;
   465  010B  178B               	bsf	11,7	;volatile
   466  010C                     l917:	
   467                           ;PIC16F1827-ChargeStation05.c: 142: uint8_t i;
   468                           ;PIC16F1827-ChargeStation05.c: 144: while (1) {
   469                           
   470                           
   471                           ;PIC16F1827-ChargeStation05.c: 145: for (i = 0; i < 4; i++) {
   472  010C  0020               	movlb	0	; select bank0
   473  010D  01CA               	clrf	main@i
   474  010E                     L1:	
   475  010E  3004               	movlw	4
   476  010F  024A               	subwf	main@i,w
   477  0110  1803               	btfsc	3,0
   478  0111  290C               	goto	l917
   479                           
   480                           ;PIC16F1827-ChargeStation05.c: 146: if (SW(i)) {
   481  0112  084A               	movf	main@i,w
   482  0113  3181  21CD  3180   	fcall	_SW
   483  0116  3A00               	xorlw	0
   484  0117  1903               	skipnz
   485  0118  2920               	goto	l925
   486                           
   487                           ;PIC16F1827-ChargeStation05.c: 147: OUT(i, 1);
   488  0119  0020               	movlb	0	; select bank0
   489  011A  01C6               	clrf	OUT@hl
   490  011B  0AC6               	incf	OUT@hl,f
   491  011C  084A               	movf	main@i,w
   492  011D  3181  2198  3180   	fcall	_OUT
   493  0120                     l925:	
   494  0120  3001               	movlw	1
   495  0121  0020               	movlb	0	; select bank0
   496  0122  00C9               	movwf	??_main
   497  0123  0849               	movf	??_main,w
   498  0124  07CA               	addwf	main@i,f
   499  0125  290E               	goto	L1
   500  0126                     __end_of_main:	
   501                           ;PIC16F1827-ChargeStation05.c: 148: }
   502                           ;PIC16F1827-ChargeStation05.c: 149: }
   503                           ;PIC16F1827-ChargeStation05.c: 150: }
   504                           ;PIC16F1827-ChargeStation05.c: 151: return 0;
   505                           ;	Return value of _main is never used
   506                           
   507                           
   508                           	psect	text1
   509  01CD                     __ptext1:	
   510 ;; *************** function _SW *****************
   511 ;; Defined at:
   512 ;;		line 112 in file "PIC16F1827-ChargeStation05.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;  b               1    wreg     unsigned char 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  b               1    1[BANK0 ] unsigned char 
   517 ;;  temp            1    2[BANK0 ] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      unsigned char 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   527 ;;      Params:         0       0       0       0       0       0
   528 ;;      Locals:         0       2       0       0       0       0
   529 ;;      Temps:          0       1       0       0       0       0
   530 ;;      Totals:         0       3       0       0       0       0
   531 ;;Total ram usage:        3 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    2
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           
   542                           ;psect for function _SW
   543  01CD                     _SW:	
   544                           
   545                           ;incstack = 0
   546                           ; Regs used in _SW: [wreg+status,2+status,0]
   547                           ;SW@b stored from wreg
   548  01CD  0020               	movlb	0	; select bank0
   549  01CE  00C7               	movwf	SW@b
   550                           
   551                           ;PIC16F1827-ChargeStation05.c: 113: uint8_t temp;
   552                           ;PIC16F1827-ChargeStation05.c: 114: temp = PORTA;
   553  01CF  080C               	movf	12,w	;volatile
   554  01D0  00C6               	movwf	??_SW
   555  01D1  0846               	movf	??_SW,w
   556  01D2  00C8               	movwf	SW@temp
   557                           
   558                           ;PIC16F1827-ChargeStation05.c: 115: if (temp & (0x01 << (b + 4))) {
   559  01D3  3001               	movlw	1
   560  01D4  00C6               	movwf	??_SW
   561  01D5  0847               	movf	SW@b,w
   562  01D6  3E04               	addlw	4
   563  01D7  0A89               	incf	9,f
   564  01D8  29DA               	goto	u444
   565  01D9                     u445:	
   566  01D9  35C6               	lslf	??_SW,f
   567  01DA                     u444:	
   568  01DA  0B89               	decfsz	9,f
   569  01DB  29D9               	goto	u445
   570  01DC  0846               	movf	??_SW,w
   571  01DD  0548               	andwf	SW@temp,w
   572  01DE  1903               	btfsc	3,2
   573  01DF  29E2               	goto	l785
   574                           
   575                           ;PIC16F1827-ChargeStation05.c: 116: return 0;
   576  01E0  3000               	movlw	0
   577                           
   578                           ;PIC16F1827-ChargeStation05.c: 117: } else {
   579  01E1  0008               	return
   580  01E2                     l785:	
   581                           
   582                           ;PIC16F1827-ChargeStation05.c: 118: return 1;
   583  01E2  3001               	movlw	1
   584  01E3  0008               	return
   585  01E4                     __end_of_SW:	
   586                           
   587                           	psect	text2
   588  0198                     __ptext2:	
   589 ;; *************** function _OUT *****************
   590 ;; Defined at:
   591 ;;		line 96 in file "PIC16F1827-ChargeStation05.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  b               1    wreg     unsigned char 
   594 ;;  hl              1    0[BANK0 ] unsigned char 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  b               1    2[BANK0 ] unsigned char 
   597 ;; Return value:  Size  Location     Type
   598 ;;		None               void
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   606 ;;      Params:         0       1       0       0       0       0
   607 ;;      Locals:         0       1       0       0       0       0
   608 ;;      Temps:          0       1       0       0       0       0
   609 ;;      Totals:         0       3       0       0       0       0
   610 ;;Total ram usage:        3 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    2
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _OUT
   622  0198                     _OUT:	
   623                           
   624                           ;incstack = 0
   625                           ; Regs used in _OUT: [wreg+status,2+status,0]
   626                           ;OUT@b stored from wreg
   627  0198  0020               	movlb	0	; select bank0
   628  0199  00C8               	movwf	OUT@b
   629                           
   630                           ;PIC16F1827-ChargeStation05.c: 97: if (hl == 0) {
   631  019A  0846               	movf	OUT@hl,w
   632  019B  1D03               	btfss	3,2
   633  019C  29A8               	goto	l767
   634                           
   635                           ;PIC16F1827-ChargeStation05.c: 98: PORTB = PORTB | (0x01 << b);
   636  019D  3001               	movlw	1
   637  019E  00C7               	movwf	??_OUT
   638  019F  0A48               	incf	OUT@b,w
   639  01A0  29A2               	goto	u394
   640  01A1                     u395:	
   641  01A1  35C7               	lslf	??_OUT,f
   642  01A2                     u394:	
   643  01A2  0B89               	decfsz	9,f
   644  01A3  29A1               	goto	u395
   645  01A4  0847               	movf	??_OUT,w
   646  01A5  040D               	iorwf	13,w	;volatile
   647  01A6  008D               	movwf	13	;volatile
   648                           
   649                           ;PIC16F1827-ChargeStation05.c: 99: } else {
   650  01A7  0008               	return
   651  01A8                     l767:	
   652                           
   653                           ;PIC16F1827-ChargeStation05.c: 100: PORTB = PORTB & (~(0x01 << b));
   654  01A8  3001               	movlw	1
   655  01A9  00C7               	movwf	??_OUT
   656  01AA  0A48               	incf	OUT@b,w
   657  01AB  29AD               	goto	u404
   658  01AC                     u405:	
   659  01AC  35C7               	lslf	??_OUT,f
   660  01AD                     u404:	
   661  01AD  0B89               	decfsz	9,f
   662  01AE  29AC               	goto	u405
   663  01AF  0847               	movf	??_OUT,w
   664  01B0  3AFF               	xorlw	255
   665  01B1  050D               	andwf	13,w	;volatile
   666  01B2  008D               	movwf	13	;volatile
   667  01B3  0008               	return
   668  01B4                     __end_of_OUT:	
   669                           
   670                           	psect	intentry
   671  0004                     __pintentry:	
   672 ;; *************** function _isr *****************
   673 ;; Defined at:
   674 ;;		line 43 in file "PIC16F1827-ChargeStation05.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  i               1   13[COMMON] unsigned char 
   679 ;; Return value:  Size  Location     Type
   680 ;;		None               void
   681 ;; Registers used:
   682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   688 ;;      Params:         0       0       0       0       0       0
   689 ;;      Locals:         1       0       0       0       0       0
   690 ;;      Temps:          5       0       0       0       0       0
   691 ;;      Totals:         6       0       0       0       0       0
   692 ;;Total ram usage:        6 bytes
   693 ;; Hardware stack levels used:    1
   694 ;; Hardware stack levels required when called:    1
   695 ;; This function calls:
   696 ;;		_LED
   697 ;;		___lwdiv
   698 ;;		_adc
   699 ;;		i1_OUT
   700 ;; This function is called by:
   701 ;;		Interrupt level 1
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705  0004                     _isr:	
   706                           
   707                           ;incstack = 0
   708                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   709  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   710  0005  3180               	pagesel	$
   711  0006  0020               	movlb	0	; select bank0
   712  0007  087F               	movf	127,w
   713  0008  00FC               	movwf	??_isr+4
   714                           
   715                           ;PIC16F1827-ChargeStation05.c: 44: uint8_t i;
   716                           ;PIC16F1827-ChargeStation05.c: 45: if (PIR1bits.TMR1IF == 1) {
   717  0009  1C11               	btfss	17,0	;volatile
   718  000A  2878               	goto	i1l63
   719                           
   720                           ;PIC16F1827-ChargeStation05.c: 46: PIR1bits.TMR1IF = 0;
   721  000B  1011               	bcf	17,0	;volatile
   722                           
   723                           ;PIC16F1827-ChargeStation05.c: 48: for (i = 0; i < 4; i++) {
   724  000C  01FD               	clrf	isr@i
   725  000D  3004               	movlw	4
   726  000E  027D               	subwf	isr@i,w
   727  000F  1803               	btfsc	3,0
   728  0010  2837               	goto	i1l839
   729  0011                     i1l831:	
   730                           
   731                           ;PIC16F1827-ChargeStation05.c: 49: temp[i] = adc(i);
   732  0011  087D               	movf	isr@i,w
   733  0012  3181  21B4  3180   	fcall	_adc
   734  0015  357D               	lslf	isr@i,w
   735  0016  3E28               	addlw	(low (_temp| 0))& (0+255)
   736  0017  0086               	movwf	6
   737  0018  0187               	clrf	7
   738  0019  0870               	movf	?_adc,w
   739  001A  3FC0               	movwi [0]fsr1
   740  001B  0871               	movf	?_adc+1,w
   741  001C  3FC1               	movwi [1]fsr1
   742                           
   743                           ;PIC16F1827-ChargeStation05.c: 50: v[i] = temp[i] * 2;
   744  001D  357D               	lslf	isr@i,w
   745  001E  3E28               	addlw	(low (_temp| 0))& (0+255)
   746  001F  0086               	movwf	6
   747  0020  0187               	clrf	7
   748  0021  3F40               	moviw [0]fsr1
   749  0022  00F8               	movwf	??_isr
   750  0023  3F41               	moviw [1]fsr1
   751  0024  00F9               	movwf	??_isr+1
   752  0025  35F8               	lslf	??_isr,f
   753  0026  0DF9               	rlf	??_isr+1,f
   754  0027  357D               	lslf	isr@i,w
   755  0028  3E30               	addlw	(low (_v| 0))& (0+255)
   756  0029  0086               	movwf	6
   757  002A  0187               	clrf	7
   758  002B  0878               	movf	??_isr,w
   759  002C  3FC0               	movwi [0]fsr1
   760  002D  0879               	movf	??_isr+1,w
   761  002E  3FC1               	movwi [1]fsr1
   762  002F  3001               	movlw	1
   763  0030  00F8               	movwf	??_isr
   764  0031  0878               	movf	??_isr,w
   765  0032  07FD               	addwf	isr@i,f
   766  0033  3004               	movlw	4
   767  0034  027D               	subwf	isr@i,w
   768  0035  1C03               	skipc
   769  0036  2811               	goto	i1l831
   770  0037                     i1l839:	
   771                           
   772                           ;PIC16F1827-ChargeStation05.c: 51: }
   773                           ;PIC16F1827-ChargeStation05.c: 53: for (i = 0; i < 4; i++) {
   774  0037  01FD               	clrf	isr@i
   775  0038  3004               	movlw	4
   776  0039  027D               	subwf	isr@i,w
   777  003A  1803               	btfsc	3,0
   778  003B  2878               	goto	i1l63
   779  003C                     i1l845:	
   780                           
   781                           ;PIC16F1827-ChargeStation05.c: 54: if (v[i] < 75) {
   782  003C  357D               	lslf	isr@i,w
   783  003D  3E30               	addlw	(low (_v| 0))& (0+255)
   784  003E  0086               	movwf	6
   785  003F  0187               	clrf	7
   786  0040  3F40               	moviw [0]fsr1
   787  0041  00F8               	movwf	??_isr
   788  0042  3F41               	moviw [1]fsr1
   789  0043  00F9               	movwf	??_isr+1
   790  0044  3000               	movlw	0
   791  0045  0279               	subwf	??_isr+1,w
   792  0046  304B               	movlw	75
   793  0047  1903               	skipnz
   794  0048  0278               	subwf	??_isr,w
   795  0049  1803               	skipnc
   796  004A  2869               	goto	i1l851
   797                           
   798                           ;PIC16F1827-ChargeStation05.c: 55: cut[i]++;
   799  004B  357D               	lslf	isr@i,w
   800  004C  3E20               	addlw	(low (_cut| 0))& (0+255)
   801  004D  0086               	movwf	6
   802  004E  0187               	clrf	7
   803  004F  3001               	movlw	1
   804  0050  0781               	addwf	1,f
   805  0051  3141               	addfsr 1,1
   806  0052  1803               	skipnc
   807  0053  0A81               	incf	1,f
   808                           
   809                           ;PIC16F1827-ChargeStation05.c: 56: if (cut[i] >= 10) {
   810  0054  357D               	lslf	isr@i,w
   811  0055  3E20               	addlw	(low (_cut| 0))& (0+255)
   812  0056  0086               	movwf	6
   813  0057  0187               	clrf	7
   814  0058  3F40               	moviw [0]fsr1
   815  0059  00F8               	movwf	??_isr
   816  005A  3F41               	moviw [1]fsr1
   817  005B  00F9               	movwf	??_isr+1
   818  005C  3000               	movlw	0
   819  005D  0279               	subwf	??_isr+1,w
   820  005E  300A               	movlw	10
   821  005F  1903               	skipnz
   822  0060  0278               	subwf	??_isr,w
   823  0061  1C03               	skipc
   824  0062  2870               	goto	i1l853
   825                           
   826                           ;PIC16F1827-ChargeStation05.c: 57: OUT(i, 0);
   827  0063  01F0               	clrf	i1OUT@hl
   828  0064  087D               	movf	isr@i,w
   829  0065  3181  217B  3180   	fcall	i1_OUT
   830                           
   831                           ;PIC16F1827-ChargeStation05.c: 58: }
   832                           ;PIC16F1827-ChargeStation05.c: 59: } else {
   833  0068  2870               	goto	i1l853
   834  0069                     i1l851:	
   835                           
   836                           ;PIC16F1827-ChargeStation05.c: 60: cut[i] = 0;
   837  0069  357D               	lslf	isr@i,w
   838  006A  3E20               	addlw	(low (_cut| 0))& (0+255)
   839  006B  0086               	movwf	6
   840  006C  0187               	clrf	7
   841  006D  3000               	movlw	0
   842  006E  3FC0               	movwi [0]fsr1
   843  006F  3FC1               	movwi [1]fsr1
   844  0070                     i1l853:	
   845  0070  3001               	movlw	1
   846  0071  00F8               	movwf	??_isr
   847  0072  0878               	movf	??_isr,w
   848  0073  07FD               	addwf	isr@i,f
   849  0074  3004               	movlw	4
   850  0075  027D               	subwf	isr@i,w
   851  0076  1C03               	skipc
   852  0077  283C               	goto	i1l845
   853  0078                     i1l63:	
   854                           
   855                           ;PIC16F1827-ChargeStation05.c: 61: }
   856                           ;PIC16F1827-ChargeStation05.c: 62: }
   857                           ;PIC16F1827-ChargeStation05.c: 63: }
   858                           ;PIC16F1827-ChargeStation05.c: 64: if (INTCONbits.TMR0IF == 1) {
   859  0078  1D0B               	btfss	11,2	;volatile
   860  0079  28DA               	goto	i1l79
   861                           
   862                           ;PIC16F1827-ChargeStation05.c: 65: INTCONbits.TMR0IF = 0;
   863  007A  110B               	bcf	11,2	;volatile
   864                           
   865                           ;PIC16F1827-ChargeStation05.c: 66: cnt0++;
   866  007B  3001               	movlw	1
   867  007C  0020               	movlb	0	; select bank0
   868  007D  07C2               	addwf	_cnt0,f
   869  007E  3000               	movlw	0
   870  007F  3DC3               	addwfc	_cnt0+1,f
   871                           
   872                           ;PIC16F1827-ChargeStation05.c: 67: if (cnt0 == 400) {
   873  0080  3090               	movlw	144
   874  0081  0642               	xorwf	_cnt0,w
   875  0082  1D03               	skipz
   876  0083  28DA               	goto	i1l79
   877  0084  0343               	decf	_cnt0+1,w
   878  0085  1D03               	btfss	3,2
   879  0086  28DA               	goto	i1l79
   880                           
   881                           ;PIC16F1827-ChargeStation05.c: 68: cnt0 = 0;
   882  0087  01C2               	clrf	_cnt0
   883  0088  01C3               	clrf	_cnt0+1
   884                           
   885                           ;PIC16F1827-ChargeStation05.c: 70: cnt++;
   886  0089  3001               	movlw	1
   887  008A  07C0               	addwf	_cnt,f
   888  008B  3000               	movlw	0
   889  008C  3DC1               	addwfc	_cnt+1,f
   890                           
   891                           ;PIC16F1827-ChargeStation05.c: 71: if (cnt == 40) cnt = 0;
   892  008D  3028               	movlw	40
   893  008E  0640               	xorwf	_cnt,w
   894  008F  0441               	iorwf	_cnt+1,w
   895  0090  1D03               	btfss	3,2
   896  0091  2894               	goto	i1l73
   897  0092  01C0               	clrf	_cnt
   898  0093  01C1               	clrf	_cnt+1
   899  0094                     i1l73:	
   900                           
   901                           ;PIC16F1827-ChargeStation05.c: 72: for (i = 0; i < 4; i++) {
   902  0094  01FD               	clrf	isr@i
   903  0095  3004               	movlw	4
   904  0096  027D               	subwf	isr@i,w
   905  0097  1803               	btfsc	3,0
   906  0098  28DA               	goto	i1l79
   907  0099                     i1l875:	
   908                           
   909                           ;PIC16F1827-ChargeStation05.c: 73: d[i] = v[i] / 100;
   910  0099  3064               	movlw	100
   911  009A  00F0               	movwf	___lwdiv@divisor
   912  009B  3000               	movlw	0
   913  009C  00F1               	movwf	___lwdiv@divisor+1
   914  009D  357D               	lslf	isr@i,w
   915  009E  3E30               	addlw	(low (_v| 0))& (0+255)
   916  009F  0086               	movwf	6
   917  00A0  0187               	clrf	7
   918  00A1  3F40               	moviw [0]fsr1
   919  00A2  00F2               	movwf	___lwdiv@dividend
   920  00A3  3F41               	moviw [1]fsr1
   921  00A4  00F3               	movwf	___lwdiv@dividend+1
   922  00A5  3181  2126  3180   	fcall	___lwdiv
   923  00A8  0870               	movf	?___lwdiv,w
   924  00A9  00F8               	movwf	??_isr
   925  00AA  087D               	movf	isr@i,w
   926  00AB  3E3C               	addlw	(low (_d| 0))& (0+255)
   927  00AC  0086               	movwf	6
   928  00AD  0187               	clrf	7
   929  00AE  0878               	movf	??_isr,w
   930  00AF  0081               	movwf	1
   931                           
   932                           ;PIC16F1827-ChargeStation05.c: 74: if ((cnt % 2) == 1) {
   933  00B0  0020               	movlb	0	; select bank0
   934  00B1  1C40               	btfss	_cnt,0
   935  00B2  28CD               	goto	i1l883
   936                           
   937                           ;PIC16F1827-ChargeStation05.c: 75: if (((cnt + 1) / 2) <= d[i]) {
   938  00B3  0840               	movf	_cnt,w
   939  00B4  3E01               	addlw	1
   940  00B5  00F8               	movwf	??_isr
   941  00B6  3000               	movlw	0
   942  00B7  3D41               	addwfc	_cnt+1,w
   943  00B8  00F9               	movwf	??_isr+1
   944  00B9  36F9               	lsrf	??_isr+1,f
   945  00BA  0CF8               	rrf	??_isr,f
   946  00BB  087D               	movf	isr@i,w
   947  00BC  3E3C               	addlw	(low (_d| 0))& (0+255)
   948  00BD  0086               	movwf	6
   949  00BE  0187               	clrf	7
   950  00BF  0801               	movf	1,w
   951  00C0  00FA               	movwf	??_isr+2
   952  00C1  01FB               	clrf	??_isr+3
   953  00C2  0879               	movf	??_isr+1,w
   954  00C3  027B               	subwf	??_isr+3,w
   955  00C4  1D03               	skipz
   956  00C5  28C8               	goto	u68_25
   957  00C6  0878               	movf	??_isr,w
   958  00C7  027A               	subwf	??_isr+2,w
   959  00C8                     u68_25:	
   960  00C8  1C03               	skipc
   961  00C9  28D2               	goto	i1l885
   962                           
   963                           ;PIC16F1827-ChargeStation05.c: 76: LED(i, 1);
   964  00CA  01F0               	clrf	LED@hl
   965  00CB  0AF0               	incf	LED@hl,f
   966  00CC  28CE               	goto	L2
   967  00CD                     i1l883:	
   968                           ;PIC16F1827-ChargeStation05.c: 77: }
   969                           ;PIC16F1827-ChargeStation05.c: 78: } else {
   970                           
   971                           
   972                           ;PIC16F1827-ChargeStation05.c: 79: LED(i, 0);
   973  00CD  01F0               	clrf	LED@hl
   974  00CE                     L2:	
   975  00CE  087D               	movf	isr@i,w
   976  00CF  3181  215A  3180   	fcall	_LED
   977  00D2                     i1l885:	
   978  00D2  3001               	movlw	1
   979  00D3  00F8               	movwf	??_isr
   980  00D4  0878               	movf	??_isr,w
   981  00D5  07FD               	addwf	isr@i,f
   982  00D6  3004               	movlw	4
   983  00D7  027D               	subwf	isr@i,w
   984  00D8  1C03               	skipc
   985  00D9  2899               	goto	i1l875
   986  00DA                     i1l79:	
   987  00DA  087C               	movf	??_isr+4,w
   988  00DB  0020               	movlb	0	; select bank0
   989  00DC  00FF               	movwf	127
   990  00DD  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   991  00DE  0009               	retfie
   992  00DF                     __end_of_isr:	
   993                           
   994                           	psect	text4
   995  017B                     __ptext4:	
   996 ;; *************** function i1_OUT *****************
   997 ;; Defined at:
   998 ;;		line 96 in file "PIC16F1827-ChargeStation05.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  b               1    wreg     unsigned char 
  1001 ;;  hl              1    0[COMMON] unsigned char 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  b               1    2[COMMON] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;		None               void
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1013 ;;      Params:         1       0       0       0       0       0
  1014 ;;      Locals:         1       0       0       0       0       0
  1015 ;;      Temps:          1       0       0       0       0       0
  1016 ;;      Totals:         3       0       0       0       0       0
  1017 ;;Total ram usage:        3 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_isr
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function i1_OUT
  1028  017B                     i1_OUT:	
  1029                           
  1030                           ;incstack = 0
  1031                           ; Regs used in i1_OUT: [wreg+status,2+status,0]
  1032                           ;i1OUT@b stored from wreg
  1033  017B  00F2               	movwf	i1OUT@b
  1034                           
  1035                           ;PIC16F1827-ChargeStation05.c: 97: if (hl == 0) {
  1036  017C  0870               	movf	i1OUT@hl,w
  1037  017D  1D03               	btfss	3,2
  1038  017E  298B               	goto	i1l819
  1039                           
  1040                           ;PIC16F1827-ChargeStation05.c: 98: PORTB = PORTB | (0x01 << b);
  1041  017F  3001               	movlw	1
  1042  0180  00F1               	movwf	??i1_OUT
  1043  0181  0A72               	incf	i1OUT@b,w
  1044  0182  2984               	goto	u54_24
  1045  0183                     u54_25:	
  1046  0183  35F1               	lslf	??i1_OUT,f
  1047  0184                     u54_24:	
  1048  0184  0B89               	decfsz	9,f
  1049  0185  2983               	goto	u54_25
  1050  0186  0871               	movf	??i1_OUT,w
  1051  0187  0020               	movlb	0	; select bank0
  1052  0188  040D               	iorwf	13,w	;volatile
  1053  0189  008D               	movwf	13	;volatile
  1054                           
  1055                           ;PIC16F1827-ChargeStation05.c: 99: } else {
  1056  018A  0008               	return
  1057  018B                     i1l819:	
  1058                           
  1059                           ;PIC16F1827-ChargeStation05.c: 100: PORTB = PORTB & (~(0x01 << b));
  1060  018B  3001               	movlw	1
  1061  018C  00F1               	movwf	??i1_OUT
  1062  018D  0A72               	incf	i1OUT@b,w
  1063  018E  2990               	goto	u55_24
  1064  018F                     u55_25:	
  1065  018F  35F1               	lslf	??i1_OUT,f
  1066  0190                     u55_24:	
  1067  0190  0B89               	decfsz	9,f
  1068  0191  298F               	goto	u55_25
  1069  0192  0871               	movf	??i1_OUT,w
  1070  0193  3AFF               	xorlw	255
  1071  0194  0020               	movlb	0	; select bank0
  1072  0195  050D               	andwf	13,w	;volatile
  1073  0196  008D               	movwf	13	;volatile
  1074  0197  0008               	return
  1075  0198                     __end_ofi1_OUT:	
  1076                           
  1077                           	psect	text5
  1078  01B4                     __ptext5:	
  1079 ;; *************** function _adc *****************
  1080 ;; Defined at:
  1081 ;;		line 87 in file "PIC16F1827-ChargeStation05.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  ch              1    wreg     unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  ch              1    3[COMMON] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2    0[COMMON] unsigned int 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1095 ;;      Params:         2       0       0       0       0       0
  1096 ;;      Locals:         1       0       0       0       0       0
  1097 ;;      Temps:          1       0       0       0       0       0
  1098 ;;      Totals:         4       0       0       0       0       0
  1099 ;;Total ram usage:        4 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_isr
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _adc
  1110  01B4                     _adc:	
  1111                           
  1112                           ;incstack = 0
  1113                           ; Regs used in _adc: [wreg+status,2+status,0]
  1114                           ;adc@ch stored from wreg
  1115  01B4  00F3               	movwf	adc@ch
  1116                           
  1117                           ;PIC16F1827-ChargeStation05.c: 88: ADCON0bits.ADON = 1;
  1118  01B5  0021               	movlb	1	; select bank1
  1119  01B6  141D               	bsf	29,0	;volatile
  1120                           
  1121                           ;PIC16F1827-ChargeStation05.c: 89: ADCON0bits.CHS = ch;
  1122  01B7  0873               	movf	adc@ch,w
  1123  01B8  00F2               	movwf	??_adc
  1124  01B9  0DF2               	rlf	??_adc,f
  1125  01BA  0DF2               	rlf	??_adc,f
  1126  01BB  081D               	movf	29,w	;volatile
  1127  01BC  0672               	xorwf	??_adc,w
  1128  01BD  3983               	andlw	-125
  1129  01BE  0672               	xorwf	??_adc,w
  1130  01BF  009D               	movwf	29	;volatile
  1131                           
  1132                           ;PIC16F1827-ChargeStation05.c: 90: _delay((unsigned long)((20)*(32000000/4000000.0)));
  1133  01C0  3035               	movlw	53
  1134  01C1  00F2               	movwf	??_adc
  1135  01C2                     u73_27:	
  1136  01C2  0BF2               	decfsz	??_adc,f
  1137  01C3  29C2               	goto	u73_27
  1138                           
  1139                           ;PIC16F1827-ChargeStation05.c: 91: ADCON0bits.GO_nDONE = 1;
  1140  01C4  0021               	movlb	1	; select bank1
  1141  01C5  149D               	bsf	29,1	;volatile
  1142  01C6                     i1l82:	
  1143                           ;PIC16F1827-ChargeStation05.c: 92: while (ADCON0bits.GO_nDONE);
  1144                           
  1145  01C6  189D               	btfsc	29,1	;volatile
  1146  01C7  29C6               	goto	i1l82
  1147                           
  1148                           ;PIC16F1827-ChargeStation05.c: 93: return ADRES;
  1149  01C8  081C               	movf	28,w	;volatile
  1150  01C9  00F1               	movwf	?_adc+1
  1151  01CA  081B               	movf	27,w	;volatile
  1152  01CB  00F0               	movwf	?_adc
  1153  01CC  0008               	return
  1154  01CD                     __end_of_adc:	
  1155                           
  1156                           	psect	text6
  1157  0126                     __ptext6:	
  1158 ;; *************** function ___lwdiv *****************
  1159 ;; Defined at:
  1160 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  divisor         2    0[COMMON] unsigned int 
  1163 ;;  dividend        2    2[COMMON] unsigned int 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  quotient        2    5[COMMON] unsigned int 
  1166 ;;  counter         1    7[COMMON] unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2    0[COMMON] unsigned int 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1176 ;;      Params:         4       0       0       0       0       0
  1177 ;;      Locals:         3       0       0       0       0       0
  1178 ;;      Temps:          1       0       0       0       0       0
  1179 ;;      Totals:         8       0       0       0       0       0
  1180 ;;Total ram usage:        8 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_isr
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function ___lwdiv
  1191  0126                     ___lwdiv:	
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1195  0126  01F5               	clrf	___lwdiv@quotient
  1196  0127  01F6               	clrf	___lwdiv@quotient+1
  1197  0128  0870               	movf	___lwdiv@divisor,w
  1198  0129  0471               	iorwf	___lwdiv@divisor+1,w
  1199  012A  1903               	btfsc	3,2
  1200  012B  2955               	goto	i1l811
  1201  012C  01F7               	clrf	___lwdiv@counter
  1202  012D  0AF7               	incf	___lwdiv@counter,f
  1203  012E                     i1l799:	
  1204  012E  1BF1               	btfsc	___lwdiv@divisor+1,7
  1205  012F  293A               	goto	i1l801
  1206  0130  3001               	movlw	1
  1207  0131                     u47_25:	
  1208  0131  35F0               	lslf	___lwdiv@divisor,f
  1209  0132  0DF1               	rlf	___lwdiv@divisor+1,f
  1210  0133  0B89               	decfsz	9,f
  1211  0134  2931               	goto	u47_25
  1212  0135  3001               	movlw	1
  1213  0136  00F4               	movwf	??___lwdiv
  1214  0137  0874               	movf	??___lwdiv,w
  1215  0138  07F7               	addwf	___lwdiv@counter,f
  1216  0139  292E               	goto	i1l799
  1217  013A                     i1l801:	
  1218  013A  3001               	movlw	1
  1219  013B                     u49_25:	
  1220  013B  35F5               	lslf	___lwdiv@quotient,f
  1221  013C  0DF6               	rlf	___lwdiv@quotient+1,f
  1222  013D  0B89               	decfsz	9,f
  1223  013E  293B               	goto	u49_25
  1224  013F  0871               	movf	___lwdiv@divisor+1,w
  1225  0140  0273               	subwf	___lwdiv@dividend+1,w
  1226  0141  1D03               	skipz
  1227  0142  2945               	goto	u50_25
  1228  0143  0870               	movf	___lwdiv@divisor,w
  1229  0144  0272               	subwf	___lwdiv@dividend,w
  1230  0145                     u50_25:	
  1231  0145  1C03               	skipc
  1232  0146  294C               	goto	i1l807
  1233  0147  0870               	movf	___lwdiv@divisor,w
  1234  0148  02F2               	subwf	___lwdiv@dividend,f
  1235  0149  0871               	movf	___lwdiv@divisor+1,w
  1236  014A  3BF3               	subwfb	___lwdiv@dividend+1,f
  1237  014B  1475               	bsf	___lwdiv@quotient,0
  1238  014C                     i1l807:	
  1239  014C  3001               	movlw	1
  1240  014D                     u51_25:	
  1241  014D  36F1               	lsrf	___lwdiv@divisor+1,f
  1242  014E  0CF0               	rrf	___lwdiv@divisor,f
  1243  014F  0B89               	decfsz	9,f
  1244  0150  294D               	goto	u51_25
  1245  0151  3001               	movlw	1
  1246  0152  02F7               	subwf	___lwdiv@counter,f
  1247  0153  1D03               	btfss	3,2
  1248  0154  293A               	goto	i1l801
  1249  0155                     i1l811:	
  1250  0155  0876               	movf	___lwdiv@quotient+1,w
  1251  0156  00F1               	movwf	?___lwdiv+1
  1252  0157  0875               	movf	___lwdiv@quotient,w
  1253  0158  00F0               	movwf	?___lwdiv
  1254  0159  0008               	return
  1255  015A                     __end_of___lwdiv:	
  1256                           
  1257                           	psect	text7
  1258  015A                     __ptext7:	
  1259 ;; *************** function _LED *****************
  1260 ;; Defined at:
  1261 ;;		line 104 in file "PIC16F1827-ChargeStation05.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  b               1    wreg     unsigned char 
  1264 ;;  hl              1    0[COMMON] unsigned char 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  b               1    2[COMMON] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;		None               void
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1276 ;;      Params:         1       0       0       0       0       0
  1277 ;;      Locals:         1       0       0       0       0       0
  1278 ;;      Temps:          1       0       0       0       0       0
  1279 ;;      Totals:         3       0       0       0       0       0
  1280 ;;Total ram usage:        3 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_isr
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _LED
  1291  015A                     _LED:	
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in _LED: [wreg+status,2+status,0]
  1295                           ;LED@b stored from wreg
  1296  015A  00F2               	movwf	LED@b
  1297                           
  1298                           ;PIC16F1827-ChargeStation05.c: 105: if (hl == 1) {
  1299  015B  0370               	decf	LED@hl,w
  1300  015C  1D03               	btfss	3,2
  1301  015D  296C               	goto	i1l773
  1302                           
  1303                           ;PIC16F1827-ChargeStation05.c: 106: PORTB = PORTB | (0x01 << (b + 4));
  1304  015E  3001               	movlw	1
  1305  015F  00F1               	movwf	??_LED
  1306  0160  0872               	movf	LED@b,w
  1307  0161  3E04               	addlw	4
  1308  0162  0A89               	incf	9,f
  1309  0163  2965               	goto	u42_24
  1310  0164                     u42_25:	
  1311  0164  35F1               	lslf	??_LED,f
  1312  0165                     u42_24:	
  1313  0165  0B89               	decfsz	9,f
  1314  0166  2964               	goto	u42_25
  1315  0167  0871               	movf	??_LED,w
  1316  0168  0020               	movlb	0	; select bank0
  1317  0169  040D               	iorwf	13,w	;volatile
  1318  016A  008D               	movwf	13	;volatile
  1319                           
  1320                           ;PIC16F1827-ChargeStation05.c: 107: } else {
  1321  016B  0008               	return
  1322  016C                     i1l773:	
  1323                           
  1324                           ;PIC16F1827-ChargeStation05.c: 108: PORTB = PORTB & (~(0x01 << (b + 4)));
  1325  016C  3001               	movlw	1
  1326  016D  00F1               	movwf	??_LED
  1327  016E  0872               	movf	LED@b,w
  1328  016F  3E04               	addlw	4
  1329  0170  0A89               	incf	9,f
  1330  0171  2973               	goto	u43_24
  1331  0172                     u43_25:	
  1332  0172  35F1               	lslf	??_LED,f
  1333  0173                     u43_24:	
  1334  0173  0B89               	decfsz	9,f
  1335  0174  2972               	goto	u43_25
  1336  0175  0871               	movf	??_LED,w
  1337  0176  3AFF               	xorlw	255
  1338  0177  0020               	movlb	0	; select bank0
  1339  0178  050D               	andwf	13,w	;volatile
  1340  0179  008D               	movwf	13	;volatile
  1341  017A  0008               	return
  1342  017B                     __end_of_LED:	
  1343  007E                     btemp	set	126	;btemp
  1344  007E                     int$flags	set	126
  1345  007E                     wtemp	set	126
  1346  007E                     wtemp0	set	126
  1347  0080                     wtemp1	set	128
  1348  0082                     wtemp2	set	130
  1349  0084                     wtemp3	set	132
  1350  0086                     wtemp4	set	134
  1351  0088                     wtemp5	set	136
  1352  007F                     wtemp6	set	127
  1353  007E                     ttemp	set	126
  1354  007E                     ttemp0	set	126
  1355  0081                     ttemp1	set	129
  1356  0084                     ttemp2	set	132
  1357  0087                     ttemp3	set	135
  1358  007F                     ttemp4	set	127
  1359  007E                     ltemp	set	126
  1360  007E                     ltemp0	set	126
  1361  0082                     ltemp1	set	130
  1362  0086                     ltemp2	set	134
  1363  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      5      43
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwdiv

Critical Paths under _main in BANK0

    _main->_OUT
    _main->_SW

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     303
                                              3 BANK0      2     2      0
                                _OUT
                                 _SW
 ---------------------------------------------------------------------------------
 (1) _SW                                                   3     3      0      45
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _OUT                                                  3     2      1     168
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0    1044
                                              8 COMMON     6     6      0
                                _LED
                            ___lwdiv
                                _adc
                              i1_OUT
 ---------------------------------------------------------------------------------
 (3) i1_OUT                                                3     2      1      92
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _adc                                                  4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _LED                                                  3     2      1     194
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OUT
   _SW

 _isr (ROOT)
   _LED
   ___lwdiv
   _adc
   i1_OUT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      39       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      39      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 18:45:38 2015

                      _d 003C                        _v 0030              __CFG_CP$OFF 0000  
                     _SW 01CD                      ?_SW 0070                      SW@b 0047  
                    l925 0120                      l917 010C                      l767 01A8  
                    l785 01E2                      _LED 015A                      u404 01AD  
                    u405 01AC             __CFG_CPD$OFF 0000                      u444 01DA  
                    u445 01D9                      u394 01A2                      u395 01A1  
                    _OUT 0198                      _adc 01B4                      _cnt 0040  
                    _cut 0020                      _isr 0004             __CFG_BORV$LO 0000  
                    wreg 0009                     ??_SW 0046             __CFG_LVP$OFF 0000  
                   LED@b 0072                     ?_LED 0070                     ?_OUT 0046  
                   ?_adc 0070                     OUT@b 0048                     ?_isr 0070  
                   i1l63 0078                     i1l73 0094                     i1l82 01C6  
                   i1l79 00DA             __CFG_WRT$OFF 0000                     _cnt0 0042  
                   _cnt1 0044                     _main 00EC                     _cutf 0038  
                   _temp 0028                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     isr@i 007D  
                   ltemp 007E                     start 00DF                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000                    ??_LED 0071  
                  ??_OUT 0047                    ??_adc 0072                    ??_isr 0078  
                  LED@hl 0070            __CFG_PLLEN$ON 0000                    ?_main 0070  
                  OUT@hl 0046                    _ADRES 009B            __CFG_WDTE$OFF 0000  
                  _T1CON 0018          __end_of___lwdiv 015A                    i1l801 013A  
                  i1l811 0155                    i1l807 014C                    i1l831 0011  
                  i1l819 018B                    i1l851 0069                    i1l773 016C  
                  i1l853 0070                    i1l845 003C                    i1l839 0037  
                  i1l883 00CD                    i1l875 0099                    i1l885 00D2  
                  i1l799 012E                    i1_OUT 017B                    _TMR1H 0017  
                  _TMR1L 0016                    u42_24 0165                    u42_25 0164  
                  u50_25 0145                    _PORTA 000C                    _PORTB 000D  
                  u43_24 0173                    u43_25 0172                    u51_25 014D  
                  u54_24 0184                    u54_25 0183                    u55_24 0190  
                  u47_25 0131                    u55_25 018F                    _TRISA 008C  
                  _TRISB 008D                    u49_25 013B                    u73_27 01C2  
                  u68_25 00C8           __CFG_FCMEN$OFF 0000                    adc@ch 0073  
                  main@i 004A           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 00E1  
           __end_of_main 0126                   ??_main 0049                   ?i1_OUT 0070  
                 _ADCON1 009E                   _ANSELA 018C                   _ANSELB 018D  
                 SW@temp 0048                   i1OUT@b 0072                   _FVRCON 0117  
                 _OSCCON 0099           __CFG_PWRTE$OFF 0000                ??___lwdiv 0074  
__end_of__initialization 00E8            __end_ofi1_OUT 0198           __pcstackCOMMON 0070  
             __end_of_SW 01E4                  ??i1_OUT 0071               __pbssBANK0 0020  
             __pmaintext 00EC               __pintentry 0004                  i1OUT@hl 0070  
                ___lwdiv 0126          __CFG_STVREN$OFF 0000                  __ptext1 01CD  
                __ptext2 0198                  __ptext4 017B                  __ptext5 01B4  
                __ptext6 0126                  __ptext7 015A             __size_of_LED 0021  
           __size_of_OUT 001C             __size_of_adc 0019             __size_of_isr 00DB  
                clrloop0 01E5     end_of_initialization 00E8         __CFG_FOSC$INTOSC 0000  
    start_initialization 00E1              __end_of_LED 017B              __end_of_OUT 01B4  
            __end_of_adc 01CD              __end_of_isr 00DF                ___latbits 0001  
          __pcstackBANK0 0046         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
         __size_ofi1_OUT 001D         ___lwdiv@quotient 0075              __size_of_SW 0017  
              clear_ram0 01E4                 _PIE1bits 0091                 _PIR1bits 0011  
             _ADCON0bits 009D         __size_of___lwdiv 0034          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077            __size_of_main 003A                 int$flags 007E  
             _INTCONbits 000B                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
             _OPTION_REG 0095  
