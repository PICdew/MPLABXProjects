

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 20:45:08 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	dabs	1,0xD00,48,_BDT
    63                           	dabs	1,0xD38,8,_CtrlTrfData
    64                           	dabs	1,0xD30,8,_SetupPkt
    65  0000                     
    66                           	psect	idataBANK0
    67  002524                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for I2C_LCD_SetCursor@F8672
    71  002524  00                 	db	0
    72  002525  40                 	db	64
    73                           
    74                           ;initializer for epoch_to_caltime@month_cache
    75  002526  01                 	db	1
    76                           
    77                           	psect	smallconst
    78  000F00                     __psmallconst:
    79                           	opt stack 0
    80  000F00  00                 	db	0
    81  000F01                     _USB_SD_Ptr:
    82                           	opt stack 0
    83  000F01  E2                 	db	low _sd000
    84  000F02  0F                 	db	high _sd000
    85  000F03  4C                 	db	low _sd001
    86  000F04  0F                 	db	high _sd001
    87  000F05  80                 	db	low _sd002
    88  000F06  0F                 	db	high _sd002
    89  000F07                     __end_of_USB_SD_Ptr:
    90                           	opt stack 0
    91  000F07                     _USB_CD_Ptr:
    92                           	opt stack 0
    93  000F07  09                 	db	low _configDescriptor1
    94  000F08  0F                 	db	high _configDescriptor1
    95  000F09                     __end_of_USB_CD_Ptr:
    96                           	opt stack 0
    97  000F09                     _configDescriptor1:
    98                           	opt stack 0
    99  000F09  09                 	db	9
   100  000F0A  02                 	db	2
   101  000F0B  43                 	db	67
   102  000F0C  00                 	db	0
   103  000F0D  02                 	db	2
   104  000F0E  01                 	db	1
   105  000F0F  00                 	db	0
   106  000F10  C0                 	db	192
   107  000F11  32                 	db	50
   108  000F12  09                 	db	9
   109  000F13  04                 	db	4
   110  000F14  00                 	db	0
   111  000F15  00                 	db	0
   112  000F16  01                 	db	1
   113  000F17  02                 	db	2
   114  000F18  02                 	db	2
   115  000F19  01                 	db	1
   116  000F1A  00                 	db	0
   117  000F1B  05                 	db	5
   118  000F1C  24                 	db	36
   119  000F1D  00                 	db	0
   120  000F1E  10                 	db	16
   121  000F1F  01                 	db	1
   122  000F20  04                 	db	4
   123  000F21  24                 	db	36
   124  000F22  02                 	db	2
   125  000F23  02                 	db	2
   126  000F24  05                 	db	5
   127  000F25  24                 	db	36
   128  000F26  06                 	db	6
   129  000F27  00                 	db	0
   130  000F28  01                 	db	1
   131  000F29  05                 	db	5
   132  000F2A  24                 	db	36
   133  000F2B  01                 	db	1
   134  000F2C  00                 	db	0
   135  000F2D  01                 	db	1
   136  000F2E  07                 	db	7
   137  000F2F  05                 	db	5
   138  000F30  81                 	db	129
   139  000F31  03                 	db	3
   140  000F32  08                 	db	8
   141  000F33  00                 	db	0
   142  000F34  02                 	db	2
   143  000F35  09                 	db	9
   144  000F36  04                 	db	4
   145  000F37  01                 	db	1
   146  000F38  00                 	db	0
   147  000F39  02                 	db	2
   148  000F3A  0A                 	db	10
   149  000F3B  00                 	db	0
   150  000F3C  00                 	db	0
   151  000F3D  00                 	db	0
   152  000F3E  07                 	db	7
   153  000F3F  05                 	db	5
   154  000F40  02                 	db	2
   155  000F41  02                 	db	2
   156  000F42  40                 	db	64
   157  000F43  00                 	db	0
   158  000F44  00                 	db	0
   159  000F45  07                 	db	7
   160  000F46  05                 	db	5
   161  000F47  82                 	db	130
   162  000F48  02                 	db	2
   163  000F49  40                 	db	64
   164  000F4A  00                 	db	0
   165  000F4B  00                 	db	0
   166  000F4C                     __end_of_configDescriptor1:
   167                           	opt stack 0
   168  000F4C                     _sd001:
   169                           	opt stack 0
   170  000F4C  34                 	db	52
   171  000F4D  03                 	db	3
   172  000F4E  004D               	dw	77
   173  000F50  0069               	dw	105
   174  000F52  0063               	dw	99
   175  000F54  0072               	dw	114
   176  000F56  006F               	dw	111
   177  000F58  0063               	dw	99
   178  000F5A  0068               	dw	104
   179  000F5C  0069               	dw	105
   180  000F5E  0070               	dw	112
   181  000F60  0020               	dw	32
   182  000F62  0054               	dw	84
   183  000F64  0065               	dw	101
   184  000F66  0063               	dw	99
   185  000F68  0068               	dw	104
   186  000F6A  006E               	dw	110
   187  000F6C  006F               	dw	111
   188  000F6E  006C               	dw	108
   189  000F70  006F               	dw	111
   190  000F72  0067               	dw	103
   191  000F74  0079               	dw	121
   192  000F76  0020               	dw	32
   193  000F78  0049               	dw	73
   194  000F7A  006E               	dw	110
   195  000F7C  0063               	dw	99
   196  000F7E  002E               	dw	46
   197  000F80                     __end_of_sd001:
   198                           	opt stack 0
   199  000F80                     _sd002:
   200                           	opt stack 0
   201  000F80  34                 	db	52
   202  000F81  03                 	db	3
   203  000F82  0043               	dw	67
   204  000F84  0044               	dw	68
   205  000F86  0043               	dw	67
   206  000F88  0020               	dw	32
   207  000F8A  0052               	dw	82
   208  000F8C  0053               	dw	83
   209  000F8E  002D               	dw	45
   210  000F90  0032               	dw	50
   211  000F92  0033               	dw	51
   212  000F94  0032               	dw	50
   213  000F96  0020               	dw	32
   214  000F98  0045               	dw	69
   215  000F9A  006D               	dw	109
   216  000F9C  0075               	dw	117
   217  000F9E  006C               	dw	108
   218  000FA0  0061               	dw	97
   219  000FA2  0074               	dw	116
   220  000FA4  0069               	dw	105
   221  000FA6  006F               	dw	111
   222  000FA8  006E               	dw	110
   223  000FAA  0020               	dw	32
   224  000FAC  0044               	dw	68
   225  000FAE  0065               	dw	101
   226  000FB0  006D               	dw	109
   227  000FB2  006F               	dw	111
   228  000FB4                     __end_of_sd002:
   229                           	opt stack 0
   230  000FB4                     _weekday_3char:
   231                           	opt stack 0
   232  000FB4  53                 	db	83
   233  000FB5  55                 	db	85
   234  000FB6  4E                 	db	78
   235  000FB7  00                 	db	0
   236  000FB8  4D                 	db	77
   237  000FB9  4F                 	db	79
   238  000FBA  4E                 	db	78
   239  000FBB  00                 	db	0
   240  000FBC  54                 	db	84
   241  000FBD  55                 	db	85
   242  000FBE  45                 	db	69
   243  000FBF  00                 	db	0
   244  000FC0  57                 	db	87
   245  000FC1  45                 	db	69
   246  000FC2  44                 	db	68
   247  000FC3  00                 	db	0
   248  000FC4  54                 	db	84
   249  000FC5  48                 	db	72
   250  000FC6  55                 	db	85
   251  000FC7  00                 	db	0
   252  000FC8  46                 	db	70
   253  000FC9  52                 	db	82
   254  000FCA  49                 	db	73
   255  000FCB  00                 	db	0
   256  000FCC  53                 	db	83
   257  000FCD  41                 	db	65
   258  000FCE  54                 	db	84
   259  000FCF  00                 	db	0
   260  000FD0                     __end_of_weekday_3char:
   261                           	opt stack 0
   262  000FD0                     _device_dsc:
   263                           	opt stack 0
   264  000FD0  12                 	db	18
   265  000FD1  01                 	db	1
   266  000FD2  0200               	dw	512
   267  000FD4  02                 	db	2
   268  000FD5  00                 	db	0
   269  000FD6  00                 	db	0
   270  000FD7  08                 	db	8
   271  000FD8  04D8               	dw	1240
   272  000FDA  000A               	dw	10
   273  000FDC  0100               	dw	256
   274  000FDE  01                 	db	1
   275  000FDF  02                 	db	2
   276  000FE0  00                 	db	0
   277  000FE1  01                 	db	1
   278  000FE2                     __end_of_device_dsc:
   279                           	opt stack 0
   280  000FE2                     _sd000:
   281                           	opt stack 0
   282  000FE2  04                 	db	4
   283  000FE3  03                 	db	3
   284  000FE4  0409               	dw	1033
   285  000FE6                     __end_of_sd000:
   286                           	opt stack 0
   287  0000                     _ANCON0	set	3912
   288  0000                     _ANCON1	set	3913
   289  0000                     _PADCFG1bits	set	3900
   290  0000                     _RTCCAL	set	3902
   291  0000                     _RTCCFGbits	set	3903
   292  0000                     _RTCVALH	set	3899
   293  0000                     _RTCVALL	set	3898
   294  0000                     _T5CONbits	set	3874
   295  0000                     _UADDR	set	3896
   296  0000                     _UCFG	set	3897
   297  0000                     _UEIE	set	3895
   298  0000                     _UEP0bits	set	3878
   299  0000                     _UIE	set	3894
   300  0000                     _UIEbits	set	3894
   301  0000                     _UEP0	set	3878
   302  0000                     _UEP1	set	3879
   303  0000                     _ADRES	set	4035
   304  0000                     _ADCON0bits	set	4034
   305  0000                     _ADCON1bits	set	4033
   306  0000                     _BAUDCON1bits	set	3966
   307  0000                     _CTMUCONH	set	4019
   308  0000                     _CTMUCONHbits	set	4019
   309  0000                     _CTMUCONL	set	4018
   310  0000                     _CTMUCONLbits	set	4018
   311  0000                     _CTMUICON	set	4017
   312  0000                     _EECON2	set	4007
   313  0000                     _INTCON2bits	set	4081
   314  0000                     _INTCONbits	set	4082
   315  0000                     _IPR1bits	set	3999
   316  0000                     _IPR2bits	set	4002
   317  0000                     _IPR5bits	set	3993
   318  0000                     _LATBbits	set	3978
   319  0000                     _OSCCONbits	set	4051
   320  0000                     _OSCTUNEbits	set	3995
   321  0000                     _PIE1bits	set	3997
   322  0000                     _PIE2bits	set	4000
   323  0000                     _PIE5bits	set	3985
   324  0000                     _PIR1bits	set	3998
   325  0000                     _PIR2bits	set	4001
   326  0000                     _PIR5bits	set	3992
   327  0000                     _RCONbits	set	4048
   328  0000                     _RCREG1	set	4015
   329  0000                     _RCSTA1bits	set	4012
   330  0000                     _SPBRG1	set	4016
   331  0000                     _SPBRGH1	set	3967
   332  0000                     _SSP1ADD	set	4040
   333  0000                     _SSP1BUF	set	4041
   334  0000                     _SSP1CON1	set	4038
   335  0000                     _SSP1CON2	set	4037
   336  0000                     _SSP1CON2bits	set	4037
   337  0000                     _SSP1STAT	set	4039
   338  0000                     _T0CONbits	set	4053
   339  0000                     _T1CONbits	set	4045
   340  0000                     _T3CONbits	set	3961
   341  0000                     _TMR1H	set	4047
   342  0000                     _TRISA	set	3986
   343  0000                     _TRISB	set	3987
   344  0000                     _TRISC	set	3988
   345  0000                     _TXREG1	set	4014
   346  0000                     _TXSTA1bits	set	4013
   347  0000                     _UCON	set	3941
   348  0000                     _UCONbits	set	3941
   349  0000                     _UEIR	set	3939
   350  0000                     _UIR	set	3938
   351  0000                     _UIRbits	set	3938
   352  0000                     _USTAT	set	3940
   353  0000                     _BCL1IF	set	32011
   354  0000                     _LATB2	set	31826
   355  0000                     _SSP1IF	set	31987
   356  000FE6                     STR_2:
   357  000FE6  31                 	db	49	;'1'
   358  000FE7  38                 	db	56	;'8'
   359  000FE8  46                 	db	70	;'F'
   360  000FE9  32                 	db	50	;'2'
   361  000FEA  37                 	db	55	;'7'
   362  000FEB  4A                 	db	74	;'J'
   363  000FEC  35                 	db	53	;'5'
   364  000FED  33                 	db	51	;'3'
   365  000FEE  00                 	db	0
   366  000FEF                     STR_3:
   367  000FEF  53                 	db	83	;'S'
   368  000FF0  4C                 	db	76	;'L'
   369  000FF1  45                 	db	69	;'E'
   370  000FF2  45                 	db	69	;'E'
   371  000FF3  50                 	db	80	;'P'
   372  000FF4  00                 	db	0
   373  000FF5  20                 	db	32
   374  000FF6  20                 	db	32
   375  000FF7  00                 	db	0
   376                           
   377                           ; #config settings
   378  000FF8  00                 	db	0	; dummy byte at the end
   379  0000                     
   380                           	psect	cinit
   381  0020F4                     __pcinit:
   382                           	opt stack 0
   383  0020F4                     start_initialization:
   384                           	opt stack 0
   385  0020F4                     __initialization:
   386                           	opt stack 0
   387                           
   388                           ; Clear objects allocated to BIGRAMl (2000 bytes)
   389  0020F4  EE01  F0F2         	lfsr	0,__pbssBIGRAMl
   390  0020F8  EE17 F0D0          	lfsr	1,2000
   391  0020FC                     clear_0:
   392  0020FC  6AEE               	clrf	postinc0,c
   393  0020FE  50E5               	movf	postdec1,w,c
   394  002100  50E1               	movf	fsr1l,w,c
   395  002102  E1FC               	bnz	clear_0
   396  002104  50E2               	movf	fsr1h,w,c
   397  002106  E1FA               	bnz	clear_0
   398                           
   399                           ; Clear objects allocated to BANK1 (228 bytes)
   400  002108  EE01  F000         	lfsr	0,__pbssBANK1
   401  00210C  0EE4               	movlw	228
   402  00210E                     clear_1:
   403  00210E  6AEE               	clrf	postinc0,c
   404  002110  06E8               	decf	wreg,f,c
   405  002112  E1FD               	bnz	clear_1
   406                           
   407                           ; Clear objects allocated to BANK0 (115 bytes)
   408  002114  EE00  F060         	lfsr	0,__pbssBANK0
   409  002118  0E73               	movlw	115
   410  00211A                     clear_2:
   411  00211A  6AEE               	clrf	postinc0,c
   412  00211C  06E8               	decf	wreg,f,c
   413  00211E  E1FD               	bnz	clear_2
   414                           
   415                           ; Clear objects allocated to COMRAM (31 bytes)
   416  002120  EE00  F021         	lfsr	0,__pbssCOMRAM
   417  002124  0E1F               	movlw	31
   418  002126                     clear_3:
   419  002126  6AEE               	clrf	postinc0,c
   420  002128  06E8               	decf	wreg,f,c
   421  00212A  E1FD               	bnz	clear_3
   422                           
   423                           ; Initialize objects allocated to BANK0 (3 bytes)
   424                           ; load TBLPTR registers with __pidataBANK0
   425  00212C  0E24               	movlw	low __pidataBANK0
   426  00212E  6EF6               	movwf	tblptrl,c
   427  002130  0E25               	movlw	high __pidataBANK0
   428  002132  6EF7               	movwf	tblptrh,c
   429  002134  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   430  002136  6EF8               	movwf	tblptru,c
   431  002138  0009               	tblrd		*+	;fetch initializer
   432  00213A  CFF5 F0FC          	movff	tablat,__pdataBANK0
   433  00213E  0009               	tblrd		*+	;fetch initializer
   434  002140  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   435  002144  0009               	tblrd		*+	;fetch initializer
   436  002146  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   437  00214A                     end_of_initialization:
   438                           	opt stack 0
   439  00214A                     __end_of__initialization:
   440                           	opt stack 0
   441  00214A  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   442  00214C  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   443  00214E  0100               	movlb	0
   444  002150  EF37  F00A         	goto	_main	;jump to C main() function
   445                           tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           postdec1	equ	0xFE5
   452                           fsr1h	equ	0xFE2
   453                           fsr1l	equ	0xFE1
   454                           
   455                           	psect	bssCOMRAM
   456  000021                     __pbssCOMRAM:
   457                           	opt stack 0
   458  000021                     _inPipes:
   459                           	opt stack 0
   460  000021                     	ds	6
   461  000027                     _pBDTEntryIn:
   462                           	opt stack 0
   463  000027                     	ds	6
   464  00002D                     _CDCDataOutHandle:
   465                           	opt stack 0
   466  00002D                     	ds	2
   467  00002F                     _pBDTEntryEP0OutCurrent:
   468                           	opt stack 0
   469  00002F                     	ds	2
   470  000031                     _pBDTEntryEP0OutNext:
   471                           	opt stack 0
   472  000031                     	ds	2
   473  000033                     _USBDeferStatusStagePacket:
   474                           	opt stack 0
   475  000033                     	ds	1
   476  000034                     _USBDeviceState:
   477                           	opt stack 0
   478  000034                     	ds	1
   479  000035                     _USBStatusStageTimeoutCounter:
   480                           	opt stack 0
   481  000035                     	ds	1
   482  000036                     _cdc_rx_len:
   483                           	opt stack 0
   484  000036                     	ds	1
   485  000037                     _cdc_trf_state:
   486                           	opt stack 0
   487  000037                     	ds	1
   488  000038                     _cdc_tx_len:
   489                           	opt stack 0
   490  000038                     	ds	1
   491  000039                     _controlTransferState:
   492                           	opt stack 0
   493  000039                     	ds	1
   494  00003A                     _edit_flag:
   495                           	opt stack 0
   496  00003A                     	ds	1
   497  00003B                     _endpoint_number:
   498                           	opt stack 0
   499  00003B                     	ds	1
   500  00003C                     _halfsec:
   501                           	opt stack 0
   502  00003C                     	ds	1
   503  00003D                     _shortPacketStatus:
   504                           	opt stack 0
   505  00003D                     	ds	1
   506  00003E                     _USBActiveConfiguration:
   507                           	opt stack 0
   508  00003E                     	ds	1
   509  00003F                     _USTATcopy:
   510                           	opt stack 0
   511  00003F                     	ds	1
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postdec1	equ	0xFE5
   519                           fsr1h	equ	0xFE2
   520                           fsr1l	equ	0xFE1
   521                           
   522                           	psect	bssBANK0
   523  000060                     __pbssBANK0:
   524                           	opt stack 0
   525  000060                     _cdc_notice:
   526                           	opt stack 0
   527  000060                     	ds	10
   528  00006A                     _outPipes:
   529                           	opt stack 0
   530  00006A                     	ds	9
   531  000073                     _pBDTEntryOut:
   532                           	opt stack 0
   533  000073                     	ds	6
   534  000079                     _BaudRateGen:
   535                           	opt stack 0
   536  000079                     	ds	4
   537  00007D                     _ms:
   538                           	opt stack 0
   539  00007D                     	ds	4
   540  000081                     _d1:
   541                           	opt stack 0
   542  000081                     	ds	3
   543  000084                     _ep_data_in:
   544                           	opt stack 0
   545  000084                     	ds	3
   546  000087                     _ep_data_out:
   547                           	opt stack 0
   548  000087                     	ds	3
   549  00008A                     _pCDCDst:
   550                           	opt stack 0
   551  00008A                     	ds	3
   552  00008D                     _pCDCSrc:
   553                           	opt stack 0
   554  00008D                     	ds	3
   555  000090                     USBCBSendResume@delay_count:
   556                           	opt stack 0
   557  000090                     	ds	2
   558  000092                     _CDCDataInHandle:
   559                           	opt stack 0
   560  000092                     	ds	2
   561  000094                     _pDst:
   562                           	opt stack 0
   563  000094                     	ds	2
   564  000096                     epoch_to_caltime@day_cache:
   565                           	opt stack 0
   566  000096                     	ds	2
   567  000098                     millis_timer@cnt:
   568                           	opt stack 0
   569  000098                     	ds	2
   570  00009A                     RTCC_loop@prev_halfsec:
   571                           	opt stack 0
   572  00009A                     	ds	1
   573  00009B                     _BothEP0OutUOWNsSet:
   574                           	opt stack 0
   575  00009B                     	ds	1
   576  00009C                     _RemoteWakeup:
   577                           	opt stack 0
   578  00009C                     	ds	1
   579  00009D                     _USBBusIsSuspended:
   580                           	opt stack 0
   581  00009D                     	ds	1
   582  00009E                     _USBDeferINDataStagePackets:
   583                           	opt stack 0
   584  00009E                     	ds	1
   585  00009F                     _USBDeferOUTDataStagePackets:
   586                           	opt stack 0
   587  00009F                     	ds	1
   588  0000A0                     _USBStatusStageEnabledFlag1:
   589                           	opt stack 0
   590  0000A0                     	ds	1
   591  0000A1                     _USBStatusStageEnabledFlag2:
   592                           	opt stack 0
   593  0000A1                     	ds	1
   594  0000A2                     _cdc_mem_type:
   595                           	opt stack 0
   596  0000A2                     	ds	1
   597  0000A3                     _colon:
   598                           	opt stack 0
   599  0000A3                     	ds	1
   600  0000A4                     _control_signal_bitmap:
   601                           	opt stack 0
   602  0000A4                     	ds	1
   603  0000A5                     _time_change_flag:
   604                           	opt stack 0
   605  0000A5                     	ds	1
   606  0000A6                     epoch_to_caltime@year_cache:
   607                           	opt stack 0
   608  0000A6                     	ds	1
   609  0000A7                     _dummy_encapsulated_cmd_response:
   610                           	opt stack 0
   611  0000A7                     	ds	8
   612  0000AF                     _rx_buf:
   613                           	opt stack 0
   614  0000AF                     	ds	8
   615  0000B7                     _tx_buf:
   616                           	opt stack 0
   617  0000B7                     	ds	8
   618  0000BF                     _caltime_now:
   619                           	opt stack 0
   620  0000BF                     	ds	7
   621  0000C6                     _line_coding:
   622                           	opt stack 0
   623  0000C6                     	ds	7
   624  0000CD                     _epoch_now:
   625                           	opt stack 0
   626  0000CD                     	ds	4
   627  0000D1                     _USBAlternateInterface:
   628                           	opt stack 0
   629  0000D1                     	ds	2
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1h	equ	0xFE2
   638                           fsr1l	equ	0xFE1
   639                           
   640                           	psect	dataBANK0
   641  0000FC                     __pdataBANK0:
   642                           	opt stack 0
   643  0000FC                     I2C_LCD_SetCursor@F8672:
   644                           	opt stack 0
   645  0000FC                     	ds	2
   646  0000FE                     epoch_to_caltime@month_cache:
   647                           	opt stack 0
   648  0000FE                     	ds	1
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           postdec1	equ	0xFE5
   656                           fsr1h	equ	0xFE2
   657                           fsr1l	equ	0xFE1
   658                           
   659                           	psect	bssBANK1
   660  000100                     __pbssBANK1:
   661                           	opt stack 0
   662  000100                     main_init@rxbuf:
   663                           	opt stack 0
   664  000100                     	ds	100
   665  000164                     _cdc_data_rx:
   666                           	opt stack 0
   667  000164                     	ds	64
   668  0001A4                     _cdc_data_tx:
   669                           	opt stack 0
   670  0001A4                     	ds	64
   671                           tblptru	equ	0xFF8
   672                           tblptrh	equ	0xFF7
   673                           tblptrl	equ	0xFF6
   674                           tablat	equ	0xFF5
   675                           postinc0	equ	0xFEE
   676                           wreg	equ	0xFE8
   677                           postdec1	equ	0xFE5
   678                           fsr1h	equ	0xFE2
   679                           fsr1l	equ	0xFE1
   680                           
   681                           	psect	bssBIGRAMl
   682  0001F2                     __pbssBIGRAMl:
   683                           	opt stack 0
   684  0001F2                     main_init@txbuf:
   685                           	opt stack 0
   686  0001F2                     	ds	2000
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           tblptrl	equ	0xFF6
   690                           tablat	equ	0xFF5
   691                           postinc0	equ	0xFEE
   692                           wreg	equ	0xFE8
   693                           postdec1	equ	0xFE5
   694                           fsr1h	equ	0xFE2
   695                           fsr1l	equ	0xFE1
   696                           
   697                           	psect	cstackBANK1
   698  0001E4                     __pcstackBANK1:
   699                           	opt stack 0
   700  0001E4                     epoch_to_caltime@day_since_epoch:
   701                           	opt stack 0
   702  0001E4                     RTCC_from_RTCC@ct:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x0
   706  0001E4                     	ds	2
   707  0001E6                     epoch_to_caltime@day:
   708                           	opt stack 0
   709  0001E6                     RTCC_from_RTCC@ep:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x2
   713  0001E6                     	ds	2
   714  0001E8                     epoch_to_caltime@year:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x4
   718  0001E8                     	ds	1
   719  0001E9                     epoch_to_caltime@month:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x5
   723  0001E9                     	ds	1
   724  0001EA                     epoch_to_caltime@num:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x6
   728  0001EA                     	ds	4
   729  0001EE                     RTCC_from_epoch@ct:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0xA
   733  0001EE                     	ds	2
   734  0001F0                     RTCC_from_epoch@ep:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0xC
   738  0001F0                     	ds	2
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           postinc0	equ	0xFEE
   744                           wreg	equ	0xFE8
   745                           postdec1	equ	0xFE5
   746                           fsr1h	equ	0xFE2
   747                           fsr1l	equ	0xFE1
   748                           
   749                           	psect	cstackBANK0
   750  0000D3                     __pcstackBANK0:
   751                           	opt stack 0
   752  0000D3                     ??_timer1_init:
   753  0000D3                     ?_ringbuf_num:
   754                           	opt stack 0
   755  0000D3                     ?___awdiv:
   756                           	opt stack 0
   757  0000D3                     ?___awmod:
   758                           	opt stack 0
   759  0000D3                     ?___lldiv:
   760                           	opt stack 0
   761  0000D3                     timer0_init@prescaler:
   762                           	opt stack 0
   763  0000D3                     timer3_init@prescaler:
   764                           	opt stack 0
   765  0000D3                     I2C_IdleCheck@mask:
   766                           	opt stack 0
   767  0000D3                     x_to_d@hex:
   768                           	opt stack 0
   769  0000D3                     ringbuf_init@rb:
   770                           	opt stack 0
   771  0000D3                     ringbuf_num@rb:
   772                           	opt stack 0
   773  0000D3                     Delay_ms@ms:
   774                           	opt stack 0
   775  0000D3                     ___awdiv@dividend:
   776                           	opt stack 0
   777  0000D3                     ___awmod@dividend:
   778                           	opt stack 0
   779  0000D3                     ___lldiv@dividend:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x0
   783  0000D3                     	ds	1
   784  0000D4                     timer1_init@prescaler:
   785                           	opt stack 0
   786  0000D4                     I2C_Start@rw:
   787                           	opt stack 0
   788  0000D4                     I2C_Send@data:
   789                           	opt stack 0
   790  0000D4                     RTCC_to_caltime@ct:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x1
   794  0000D4                     	ds	1
   795  0000D5                     ??_ringbuf_num:
   796  0000D5                     I2C_Start@adrs:
   797                           	opt stack 0
   798  0000D5                     ringbuf_init@internal_buf:
   799                           	opt stack 0
   800  0000D5                     ___awdiv@divisor:
   801                           	opt stack 0
   802  0000D5                     ___awmod@divisor:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x2
   806  0000D5                     	ds	1
   807  0000D6                     I2C_LCD_Command@c:
   808                           	opt stack 0
   809  0000D6                     RTCC_to_caltime@dumy:
   810                           	opt stack 0
   811  0000D6                     I2C_LCD_Puts@s:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x3
   815  0000D6                     	ds	1
   816  0000D7                     I2C_LCD_Command@ans:
   817                           	opt stack 0
   818  0000D7                     ___awdiv@counter:
   819                           	opt stack 0
   820  0000D7                     ___awmod@counter:
   821                           	opt stack 0
   822  0000D7                     ringbuf_init@bufsize:
   823                           	opt stack 0
   824  0000D7                     ___lldiv@divisor:
   825                           	opt stack 0
   826                           
   827                           ; 4 bytes @ 0x4
   828  0000D7                     	ds	1
   829  0000D8                     ??_I2C_LCD_Clear:
   830  0000D8                     ??_I2C_LCD_Puts:
   831  0000D8                     I2C_LCD_SetCursor@row:
   832                           	opt stack 0
   833  0000D8                     ___awdiv@sign:
   834                           	opt stack 0
   835  0000D8                     ___awmod@sign:
   836                           	opt stack 0
   837                           
   838                           ; 1 bytes @ 0x5
   839  0000D8                     	ds	1
   840  0000D9                     ??_month_length:
   841  0000D9                     I2C_LCD_SetCursor@row_offsets:
   842                           	opt stack 0
   843  0000D9                     I2C_LCD_Puts@ans:
   844                           	opt stack 0
   845  0000D9                     ___awdiv@quotient:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x6
   849  0000D9                     	ds	2
   850  0000DB                     I2C_LCD_SetCursor@col:
   851                           	opt stack 0
   852  0000DB                     ringbuf_put@rb:
   853                           	opt stack 0
   854  0000DB                     ringbuf_pop@rb:
   855                           	opt stack 0
   856  0000DB                     caltime_to_RTCC@ct:
   857                           	opt stack 0
   858  0000DB                     ___lldiv@quotient:
   859                           	opt stack 0
   860                           
   861                           ; 4 bytes @ 0x8
   862  0000DB                     	ds	2
   863  0000DD                     ??_ringbuf_pop:
   864  0000DD                     ringbuf_put@asciicode:
   865                           	opt stack 0
   866  0000DD                     month_length@year:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0xA
   870  0000DD                     	ds	1
   871  0000DE                     ??_ringbuf_put:
   872                           
   873                           ; 0 bytes @ 0xB
   874  0000DE                     	ds	1
   875  0000DF                     ___lldiv@counter:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0xC
   879  0000DF                     	ds	1
   880  0000E0                     ?___lmul:
   881                           	opt stack 0
   882  0000E0                     ___lmul@multiplier:
   883                           	opt stack 0
   884                           
   885                           ; 4 bytes @ 0xD
   886  0000E0                     	ds	4
   887  0000E4                     ___lmul@multiplicand:
   888                           	opt stack 0
   889                           
   890                           ; 4 bytes @ 0x11
   891  0000E4                     	ds	4
   892  0000E8                     ___lmul@product:
   893                           	opt stack 0
   894                           
   895                           ; 4 bytes @ 0x15
   896  0000E8                     	ds	4
   897  0000EC                     ?_get_quot_rem:
   898                           	opt stack 0
   899  0000EC                     get_quot_rem@quot:
   900                           	opt stack 0
   901  0000EC                     caltime_to_epoch@ct:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x19
   905  0000EC                     	ds	2
   906  0000EE                     get_quot_rem@div:
   907                           	opt stack 0
   908  0000EE                     caltime_to_epoch@ep:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x1B
   912  0000EE                     	ds	2
   913  0000F0                     ??_caltime_to_epoch:
   914  0000F0                     get_quot_rem@num:
   915                           	opt stack 0
   916                           
   917                           ; 4 bytes @ 0x1D
   918  0000F0                     	ds	4
   919  0000F4                     caltime_to_epoch@year:
   920                           	opt stack 0
   921  0000F4                     epoch_to_caltime@ct:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x21
   925  0000F4                     	ds	1
   926  0000F5                     caltime_to_epoch@month_3890:
   927                           	opt stack 0
   928                           
   929                           ; 1 bytes @ 0x22
   930  0000F5                     	ds	1
   931  0000F6                     epoch_to_caltime@ep:
   932                           	opt stack 0
   933  0000F6                     caltime_to_epoch@epoch:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x23
   937  0000F6                     	ds	2
   938  0000F8                     ??_epoch_to_caltime:
   939                           
   940                           ; 0 bytes @ 0x25
   941  0000F8                     	ds	2
   942  0000FA                     caltime_to_epoch@month:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0x27
   946  0000FA                     	ds	1
   947  0000FB                     ??_main:
   948                           
   949                           ; 0 bytes @ 0x28
   950  0000FB                     	ds	1
   951                           tblptru	equ	0xFF8
   952                           tblptrh	equ	0xFF7
   953                           tblptrl	equ	0xFF6
   954                           tablat	equ	0xFF5
   955                           postinc0	equ	0xFEE
   956                           wreg	equ	0xFE8
   957                           postdec1	equ	0xFE5
   958                           fsr1h	equ	0xFE2
   959                           fsr1l	equ	0xFE1
   960                           
   961                           	psect	cstackCOMRAM
   962  000001                     __pcstackCOMRAM:
   963                           	opt stack 0
   964  000001                     ?i2_ringbuf_num:
   965                           	opt stack 0
   966  000001                     i2ringbuf_num@rb:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x0
   970  000001                     	ds	2
   971  000003                     ??i2_ringbuf_num:
   972                           
   973                           ; 0 bytes @ 0x2
   974  000003                     	ds	6
   975  000009                     i2ringbuf_put@rb:
   976                           	opt stack 0
   977  000009                     i2ringbuf_pop@rb:
   978                           	opt stack 0
   979                           
   980                           ; 2 bytes @ 0x8
   981  000009                     	ds	2
   982  00000B                     ??i2_ringbuf_pop:
   983  00000B                     i2ringbuf_put@asciicode:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0xA
   987  00000B                     	ds	1
   988  00000C                     ??i2_ringbuf_put:
   989                           
   990                           ; 0 bytes @ 0xB
   991  00000C                     	ds	3
   992  00000F                     i2ringbuf_pop@ret:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0xE
   996  00000F                     	ds	1
   997  000010                     UART_ISR@ascii:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0xF
  1001  000010                     	ds	1
  1002  000011                     ??_ISR:
  1003                           
  1004                           ; 0 bytes @ 0x10
  1005  000011                     	ds	15
  1006  000020                     ??_timer0_init:
  1007  000020                     ??_timer3_init:
  1008  000020                     ??_Delay_ms:
  1009  000020                     ??_I2C_IdleCheck:
  1010  000020                     ??_x_to_d:
  1011  000020                     timer1_init@clock_select:
  1012                           	opt stack 0
  1013  000020                     ADC_init@p_ref:
  1014                           	opt stack 0
  1015  000020                     ringbuf_pop@ret:
  1016                           	opt stack 0
  1017  000020                     tx_send@asciicode:
  1018                           	opt stack 0
  1019  000020                     d_to_x@dec:
  1020                           	opt stack 0
  1021  000020                     month_length@month:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x1F
  1025  000020                     	ds	1
  1026  000021                     tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           postdec1	equ	0xFE5
  1033                           fsr1h	equ	0xFE2
  1034                           fsr1l	equ	0xFE1
  1035                           
  1036                           ; 0 bytes @ 0x20
  1037 ;;
  1038 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1039 ;;
  1040 ;; *************** function _main *****************
  1041 ;; Defined at:
  1042 ;;		line 83 in file "PIC18F27J53-SLEEP01.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  2  1142[None  ] int 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1058 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;Total ram usage:        1 bytes
  1061 ;; Hardware stack levels required when called:   10
  1062 ;; This function calls:
  1063 ;;		_I2C_LCD_Puts
  1064 ;;		_I2C_LCD_SetCursor
  1065 ;;		_RTCC_from_RTCC
  1066 ;;		_RTCC_from_epoch
  1067 ;;		_main_init
  1068 ;;		_ringbuf_num
  1069 ;;		_ringbuf_pop
  1070 ;;		_tx_send
  1071 ;; This function is called by:
  1072 ;;		Startup code after reset
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text0
  1077  00146E                     __ptext0:
  1078                           	opt stack 0
  1079  00146E                     _main:
  1080                           	opt stack 21
  1081                           
  1082                           ;PIC18F27J53-SLEEP01.c: 84: main_init();
  1083                           
  1084                           ;incstack = 0
  1085  00146E  ECA9  F00F         	call	_main_init	;wreg free
  1086                           
  1087                           ;PIC18F27J53-SLEEP01.c: 86: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1088  001472  0EBF               	movlw	low _caltime_now
  1089  001474  0101               	movlb	1	; () banked
  1090  001476  6FE4               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1091  001478  0E00               	movlw	high _caltime_now
  1092  00147A  0101               	movlb	1	; () banked
  1093  00147C  6FE5               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1094  00147E  0ECD               	movlw	low _epoch_now
  1095  001480  0101               	movlb	1	; () banked
  1096  001482  6FE6               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1097  001484  0E00               	movlw	high _epoch_now
  1098  001486  0101               	movlb	1	; () banked
  1099  001488  6FE7               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1100  00148A  EC14  F012         	call	_RTCC_from_RTCC	;wreg free
  1101                           
  1102                           ;PIC18F27J53-SLEEP01.c: 87: if (caltime_now.DD == 0) {
  1103  00148E  0100               	movlb	0	; () banked
  1104  001490  51C3               	movf	(_caltime_now+4)& (0+255),w,b
  1105  001492  A4D8               	btfss	status,2,c
  1106  001494  D017               	goto	l7152
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;PIC18F27J53-SLEEP01.c: 88: epoch_now = 0;
  1110  001496  0E00               	movlw	0
  1111  001498  0100               	movlb	0	; () banked
  1112  00149A  6FCD               	movwf	_epoch_now& (0+255),b
  1113  00149C  0E00               	movlw	0
  1114  00149E  6FCE               	movwf	(_epoch_now+1)& (0+255),b
  1115  0014A0  0E00               	movlw	0
  1116  0014A2  6FCF               	movwf	(_epoch_now+2)& (0+255),b
  1117  0014A4  0E00               	movlw	0
  1118  0014A6  6FD0               	movwf	(_epoch_now+3)& (0+255),b
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;PIC18F27J53-SLEEP01.c: 89: RTCC_from_epoch(&caltime_now, &epoch_now);
  1122  0014A8  0EBF               	movlw	low _caltime_now
  1123  0014AA  0101               	movlb	1	; () banked
  1124  0014AC  6FEE               	movwf	RTCC_from_epoch@ct& (0+255),b
  1125  0014AE  0E00               	movlw	high _caltime_now
  1126  0014B0  0101               	movlb	1	; () banked
  1127  0014B2  6FEF               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1128  0014B4  0ECD               	movlw	low _epoch_now
  1129  0014B6  0101               	movlb	1	; () banked
  1130  0014B8  6FF0               	movwf	RTCC_from_epoch@ep& (0+255),b
  1131  0014BA  0E00               	movlw	high _epoch_now
  1132  0014BC  0101               	movlb	1	; () banked
  1133  0014BE  6FF1               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1134  0014C0  EC03  F012         	call	_RTCC_from_epoch	;wreg free
  1135  0014C4                     l7152:
  1136                           
  1137                           ;PIC18F27J53-SLEEP01.c: 90: }
  1138                           ;PIC18F27J53-SLEEP01.c: 92: I2C_LCD_SetCursor(0, 0);
  1139  0014C4  0E00               	movlw	0
  1140  0014C6  0100               	movlb	0	; () banked
  1141  0014C8  6FD8               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1142  0014CA  0E00               	movlw	0
  1143  0014CC  ECB2  F011         	call	_I2C_LCD_SetCursor
  1144                           
  1145                           ;PIC18F27J53-SLEEP01.c: 93: I2C_LCD_Puts("18F27J53");
  1146  0014D0  0EE6               	movlw	low STR_2
  1147  0014D2  0100               	movlb	0	; () banked
  1148  0014D4  6FD6               	movwf	I2C_LCD_Puts@s& (0+255),b
  1149  0014D6  0E0F               	movlw	high STR_2
  1150  0014D8  0100               	movlb	0	; () banked
  1151  0014DA  6FD7               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1152  0014DC  ECF8  F00F         	call	_I2C_LCD_Puts	;wreg free
  1153                           
  1154                           ;PIC18F27J53-SLEEP01.c: 94: I2C_LCD_SetCursor(0, 1);
  1155  0014E0  0E01               	movlw	1
  1156  0014E2  0100               	movlb	0	; () banked
  1157  0014E4  6FD8               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1158  0014E6  0E00               	movlw	0
  1159  0014E8  ECB2  F011         	call	_I2C_LCD_SetCursor
  1160                           
  1161                           ;PIC18F27J53-SLEEP01.c: 95: I2C_LCD_Puts("SLEEP");
  1162  0014EC  0EEF               	movlw	low STR_3
  1163  0014EE  0100               	movlb	0	; () banked
  1164  0014F0  6FD6               	movwf	I2C_LCD_Puts@s& (0+255),b
  1165  0014F2  0E0F               	movlw	high STR_3
  1166  0014F4  0100               	movlb	0	; () banked
  1167  0014F6  6FD7               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1168  0014F8  ECF8  F00F         	call	_I2C_LCD_Puts	;wreg free
  1169  0014FC  D02D               	goto	l7176
  1170  0014FE                     l7162:
  1171                           
  1172                           ;PIC18F27J53-SLEEP01.c: 100: LATBbits.LATB2 = 0;
  1173  0014FE  948A               	bcf	3978,2,c	;volatile
  1174  001500  0003               	sleep		;# 
  1175                           
  1176                           ;PIC18F27J53-SLEEP01.c: 102: __nop();
  1177  001502  F000               	nop	
  1178                           
  1179                           ;PIC18F27J53-SLEEP01.c: 103: LATBbits.LATB2 = 1;
  1180  001504  848A               	bsf	3978,2,c	;volatile
  1181                           
  1182                           ;PIC18F27J53-SLEEP01.c: 104: INTCONbits.GIE = 0;
  1183  001506  9EF2               	bcf	intcon,7,c	;volatile
  1184                           
  1185                           ;PIC18F27J53-SLEEP01.c: 105: if (ringbuf_num(&rx_buf)) {
  1186  001508  0EAF               	movlw	low _rx_buf
  1187  00150A  0100               	movlb	0	; () banked
  1188  00150C  6FD3               	movwf	ringbuf_num@rb& (0+255),b
  1189  00150E  0E00               	movlw	high _rx_buf
  1190  001510  0100               	movlb	0	; () banked
  1191  001512  6FD4               	movwf	(ringbuf_num@rb+1)& (0+255),b
  1192  001514  ECAE  F00A         	call	_ringbuf_num	;wreg free
  1193  001518  0100               	movlb	0	; () banked
  1194  00151A  51D3               	movf	?_ringbuf_num& (0+255),w,b
  1195  00151C  0100               	movlb	0	; () banked
  1196  00151E  11D4               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1197  001520  B4D8               	btfsc	status,2,c
  1198  001522  D01A               	goto	l7176
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;PIC18F27J53-SLEEP01.c: 106: tx_send(ringbuf_pop(&rx_buf));
  1202  001524  0EAF               	movlw	low _rx_buf
  1203  001526  0100               	movlb	0	; () banked
  1204  001528  6FDB               	movwf	ringbuf_pop@rb& (0+255),b
  1205  00152A  0E00               	movlw	high _rx_buf
  1206  00152C  0100               	movlb	0	; () banked
  1207  00152E  6FDC               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1208  001530  ECCD  F00C         	call	_ringbuf_pop	;wreg free
  1209  001534  EC51  F012         	call	_tx_send
  1210                           
  1211                           ;PIC18F27J53-SLEEP01.c: 107: LATBbits.LATB1 = !LATBbits.LATB1;
  1212  001538  B28A               	btfsc	3978,1,c	;volatile
  1213  00153A  D004               	goto	u7140
  1214  00153C  0100               	movlb	0	; () banked
  1215  00153E  6BFB               	clrf	??_main& (0+255),b
  1216  001540  2BFB               	incf	??_main& (0+255),f,b
  1217  001542  D002               	goto	u7158
  1218  001544                     u7140:
  1219  001544  0100               	movlb	0	; () banked
  1220  001546  6BFB               	clrf	??_main& (0+255),b
  1221  001548                     u7158:
  1222  001548  0100               	movlb	0	; () banked
  1223  00154A  47FB               	rlncf	??_main& (0+255),f,b
  1224  00154C  508A               	movf	3978,w,c	;volatile
  1225  00154E  0100               	movlb	0	; () banked
  1226  001550  19FB               	xorwf	??_main& (0+255),w,b
  1227  001552  0BFD               	andlw	-3
  1228  001554  19FB               	xorwf	??_main& (0+255),w,b
  1229  001556  6E8A               	movwf	3978,c	;volatile
  1230  001558                     l7176:
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;PIC18F27J53-SLEEP01.c: 108: }
  1234                           ;PIC18F27J53-SLEEP01.c: 109: INTCONbits.GIE = 1;
  1235  001558  8EF2               	bsf	intcon,7,c	;volatile
  1236                           
  1237                           ; BSR set to: 0
  1238  00155A  D7D1               	goto	l7162
  1239  00155C                     __end_of_main:
  1240                           	opt stack 0
  1241                           tblptru	equ	0xFF8
  1242                           tblptrh	equ	0xFF7
  1243                           tblptrl	equ	0xFF6
  1244                           tablat	equ	0xFF5
  1245                           intcon	equ	0xFF2
  1246                           postinc0	equ	0xFEE
  1247                           wreg	equ	0xFE8
  1248                           postdec1	equ	0xFE5
  1249                           fsr1h	equ	0xFE2
  1250                           fsr1l	equ	0xFE1
  1251                           status	equ	0xFD8
  1252                           
  1253 ;; *************** function _tx_send *****************
  1254 ;; Defined at:
  1255 ;;		line 222 in file "../My_header\My_header.h"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  asciicode       1    wreg     const unsigned char 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  asciicode       1   31[COMRAM] const unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;		None               void
  1262 ;; Registers used:
  1263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1273 ;;Total ram usage:        1 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    6
  1276 ;; This function calls:
  1277 ;;		_ringbuf_put
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;;		_tx_sendn
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text1
  1285  0024A2                     __ptext1:
  1286                           	opt stack 0
  1287  0024A2                     _tx_send:
  1288                           	opt stack 24
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;incstack = 0
  1292                           ;tx_send@asciicode stored from wreg
  1293  0024A2  6E20               	movwf	tx_send@asciicode,c
  1294                           
  1295                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  1296  0024A4  0EB7               	movlw	low _tx_buf
  1297  0024A6  0100               	movlb	0	; () banked
  1298  0024A8  6FDB               	movwf	ringbuf_put@rb& (0+255),b
  1299  0024AA  0E00               	movlw	high _tx_buf
  1300  0024AC  0100               	movlb	0	; () banked
  1301  0024AE  6FDC               	movwf	(ringbuf_put@rb+1)& (0+255),b
  1302  0024B0  C020  F0DD         	movff	tx_send@asciicode,ringbuf_put@asciicode
  1303  0024B4  EC91  F00B         	call	_ringbuf_put	;wreg free
  1304                           
  1305                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  1306  0024B8  889D               	bsf	3997,4,c	;volatile
  1307  0024BA  0012               	return		;funcret
  1308  0024BC                     __end_of_tx_send:
  1309                           	opt stack 0
  1310                           tblptru	equ	0xFF8
  1311                           tblptrh	equ	0xFF7
  1312                           tblptrl	equ	0xFF6
  1313                           tablat	equ	0xFF5
  1314                           intcon	equ	0xFF2
  1315                           postinc0	equ	0xFEE
  1316                           wreg	equ	0xFE8
  1317                           postdec1	equ	0xFE5
  1318                           fsr1h	equ	0xFE2
  1319                           fsr1l	equ	0xFE1
  1320                           status	equ	0xFD8
  1321                           
  1322 ;; *************** function _ringbuf_put *****************
  1323 ;; Defined at:
  1324 ;;		line 39 in file "../My_header\My_ringbuf.h"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  1327 ;;		 -> rx_buf(8), tx_buf(8), 
  1328 ;;  asciicode       1   10[BANK0 ] unsigned char 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;		None               void
  1333 ;; Registers used:
  1334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1340 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1342 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1343 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1344 ;;Total ram usage:        7 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    5
  1347 ;; This function calls:
  1348 ;;		_ringbuf_num
  1349 ;; This function is called by:
  1350 ;;		_tx_send
  1351 ;;		_ringbuf_put_num
  1352 ;;		_ringbuf_put_str
  1353 ;;		_tx_sends
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text2
  1358  001722                     __ptext2:
  1359                           	opt stack 0
  1360  001722                     _ringbuf_put:
  1361                           	opt stack 24
  1362                           
  1363                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  1364                           
  1365                           ;incstack = 0
  1366  001722  C0DB  F0D3         	movff	ringbuf_put@rb,ringbuf_num@rb
  1367  001726  C0DC  F0D4         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  1368  00172A  ECAE  F00A         	call	_ringbuf_num	;wreg free
  1369  00172E  0100               	movlb	0	; () banked
  1370  001730  EE20 F002          	lfsr	2,2
  1371  001734  51DB               	movf	ringbuf_put@rb& (0+255),w,b
  1372  001736  26D9               	addwf	fsr2l,f,c
  1373  001738  51DC               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  1374  00173A  22DA               	addwfc	fsr2h,f,c
  1375  00173C  50DE               	movf	postinc2,w,c
  1376  00173E  0100               	movlb	0	; () banked
  1377  001740  5DD3               	subwf	?_ringbuf_num& (0+255),w,b
  1378  001742  50DE               	movf	postinc2,w,c
  1379  001744  0100               	movlb	0	; () banked
  1380  001746  59D4               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  1381  001748  B0D8               	btfsc	status,0,c
  1382  00174A  0012               	return	
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  1386  00174C  0100               	movlb	0	; () banked
  1387  00174E  EE20 F004          	lfsr	2,4
  1388  001752  51DB               	movf	ringbuf_put@rb& (0+255),w,b
  1389  001754  26D9               	addwf	fsr2l,f,c
  1390  001756  51DC               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  1391  001758  22DA               	addwfc	fsr2h,f,c
  1392  00175A  CFDE F0DE          	movff	postinc2,??_ringbuf_put
  1393  00175E  CFDD F0DF          	movff	postdec2,??_ringbuf_put+1
  1394  001762  C0DB  FFD9         	movff	ringbuf_put@rb,fsr2l
  1395  001766  C0DC  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  1396  00176A  CFDE F0E0          	movff	postinc2,??_ringbuf_put+2
  1397  00176E  CFDD F0E1          	movff	postdec2,??_ringbuf_put+3
  1398  001772  0100               	movlb	0	; () banked
  1399  001774  51DE               	movf	??_ringbuf_put& (0+255),w,b
  1400  001776  0100               	movlb	0	; () banked
  1401  001778  25E0               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  1402  00177A  6ED9               	movwf	fsr2l,c
  1403  00177C  0100               	movlb	0	; () banked
  1404  00177E  51DF               	movf	(??_ringbuf_put+1)& (0+255),w,b
  1405  001780  0100               	movlb	0	; () banked
  1406  001782  21E1               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  1407  001784  6EDA               	movwf	fsr2h,c
  1408  001786  C0DD  FFDF         	movff	ringbuf_put@asciicode,indf2
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  1412  00178A  0100               	movlb	0	; () banked
  1413  00178C  EE20 F002          	lfsr	2,2
  1414  001790  51DB               	movf	ringbuf_put@rb& (0+255),w,b
  1415  001792  26D9               	addwf	fsr2l,f,c
  1416  001794  51DC               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  1417  001796  22DA               	addwfc	fsr2h,f,c
  1418  001798  0100               	movlb	0	; () banked
  1419  00179A  EE10 F004          	lfsr	1,4
  1420  00179E  51DB               	movf	ringbuf_put@rb& (0+255),w,b
  1421  0017A0  26E1               	addwf	fsr1l,f,c
  1422  0017A2  51DC               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  1423  0017A4  22E2               	addwfc	fsr1h,f,c
  1424  0017A6  CFE6 F0E0          	movff	postinc1,??_ringbuf_put+2
  1425  0017AA  CFE5 F0E1          	movff	postdec1,??_ringbuf_put+3
  1426  0017AE  0E01               	movlw	1
  1427  0017B0  0100               	movlb	0	; () banked
  1428  0017B2  27E0               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  1429  0017B4  0E00               	movlw	0
  1430  0017B6  23E1               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  1431  0017B8  50DE               	movf	postinc2,w,c
  1432  0017BA  0100               	movlb	0	; () banked
  1433  0017BC  5DE0               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  1434  0017BE  50DE               	movf	postinc2,w,c
  1435  0017C0  0100               	movlb	0	; () banked
  1436  0017C2  59E1               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  1437  0017C4  B0D8               	btfsc	status,0,c
  1438  0017C6  D00B               	goto	l6556
  1439                           
  1440                           ; BSR set to: 0
  1441  0017C8  0100               	movlb	0	; () banked
  1442  0017CA  EE20 F004          	lfsr	2,4
  1443  0017CE  51DB               	movf	ringbuf_put@rb& (0+255),w,b
  1444  0017D0  26D9               	addwf	fsr2l,f,c
  1445  0017D2  51DC               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  1446  0017D4  22DA               	addwfc	fsr2h,f,c
  1447  0017D6  2ADE               	incf	postinc2,f,c
  1448  0017D8  0E00               	movlw	0
  1449  0017DA  22DD               	addwfc	postdec2,f,c
  1450  0017DC  0012               	return	
  1451  0017DE                     l6556:
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  1455  0017DE  0100               	movlb	0	; () banked
  1456  0017E0  EE20 F004          	lfsr	2,4
  1457  0017E4  51DB               	movf	ringbuf_put@rb& (0+255),w,b
  1458  0017E6  26D9               	addwf	fsr2l,f,c
  1459  0017E8  51DC               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  1460  0017EA  22DA               	addwfc	fsr2h,f,c
  1461  0017EC  0E00               	movlw	0
  1462  0017EE  6EDE               	movwf	postinc2,c
  1463  0017F0  0E00               	movlw	0
  1464  0017F2  6EDD               	movwf	postdec2,c
  1465                           
  1466                           ; BSR set to: 0
  1467  0017F4  0012               	return	
  1468  0017F6                     __end_of_ringbuf_put:
  1469                           	opt stack 0
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           postinc1	equ	0xFE6
  1478                           postdec1	equ	0xFE5
  1479                           fsr1h	equ	0xFE2
  1480                           fsr1l	equ	0xFE1
  1481                           indf2	equ	0xFDF
  1482                           postinc2	equ	0xFDE
  1483                           postdec2	equ	0xFDD
  1484                           fsr2h	equ	0xFDA
  1485                           fsr2l	equ	0xFD9
  1486                           status	equ	0xFD8
  1487                           
  1488 ;; *************** function _ringbuf_pop *****************
  1489 ;; Defined at:
  1490 ;;		line 64 in file "../My_header\My_ringbuf.h"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  1493 ;;		 -> rx_buf(8), tx_buf(8), 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  ret             1   31[COMRAM] unsigned char 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      unsigned char 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1507 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1508 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1509 ;;Total ram usage:        7 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    5
  1512 ;; This function calls:
  1513 ;;		_ringbuf_num
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text3
  1520  00199A                     __ptext3:
  1521                           	opt stack 0
  1522  00199A                     _ringbuf_pop:
  1523                           	opt stack 25
  1524                           
  1525                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;incstack = 0
  1529  00199A  C0DB  F0D3         	movff	ringbuf_pop@rb,ringbuf_num@rb
  1530  00199E  C0DC  F0D4         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  1531  0019A2  ECAE  F00A         	call	_ringbuf_num	;wreg free
  1532  0019A6  0100               	movlb	0	; () banked
  1533  0019A8  51D3               	movf	?_ringbuf_num& (0+255),w,b
  1534  0019AA  0100               	movlb	0	; () banked
  1535  0019AC  11D4               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  1536  0019AE  B4D8               	btfsc	status,2,c
  1537  0019B0  D056               	goto	l6694
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  1541  0019B2  0100               	movlb	0	; () banked
  1542  0019B4  EE20 F006          	lfsr	2,6
  1543  0019B8  51DB               	movf	ringbuf_pop@rb& (0+255),w,b
  1544  0019BA  26D9               	addwf	fsr2l,f,c
  1545  0019BC  51DC               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1546  0019BE  22DA               	addwfc	fsr2h,f,c
  1547  0019C0  CFDE F0DD          	movff	postinc2,??_ringbuf_pop
  1548  0019C4  CFDD F0DE          	movff	postdec2,??_ringbuf_pop+1
  1549  0019C8  C0DB  FFD9         	movff	ringbuf_pop@rb,fsr2l
  1550  0019CC  C0DC  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  1551  0019D0  CFDE F0DF          	movff	postinc2,??_ringbuf_pop+2
  1552  0019D4  CFDD F0E0          	movff	postdec2,??_ringbuf_pop+3
  1553  0019D8  0100               	movlb	0	; () banked
  1554  0019DA  51DD               	movf	??_ringbuf_pop& (0+255),w,b
  1555  0019DC  0100               	movlb	0	; () banked
  1556  0019DE  25DF               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  1557  0019E0  6ED9               	movwf	fsr2l,c
  1558  0019E2  0100               	movlb	0	; () banked
  1559  0019E4  51DE               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  1560  0019E6  0100               	movlb	0	; () banked
  1561  0019E8  21E0               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  1562  0019EA  6EDA               	movwf	fsr2h,c
  1563  0019EC  50DF               	movf	indf2,w,c
  1564  0019EE  6E20               	movwf	ringbuf_pop@ret,c
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  1568  0019F0  0100               	movlb	0	; () banked
  1569  0019F2  EE20 F002          	lfsr	2,2
  1570  0019F6  51DB               	movf	ringbuf_pop@rb& (0+255),w,b
  1571  0019F8  26D9               	addwf	fsr2l,f,c
  1572  0019FA  51DC               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1573  0019FC  22DA               	addwfc	fsr2h,f,c
  1574  0019FE  0100               	movlb	0	; () banked
  1575  001A00  EE10 F006          	lfsr	1,6
  1576  001A04  51DB               	movf	ringbuf_pop@rb& (0+255),w,b
  1577  001A06  26E1               	addwf	fsr1l,f,c
  1578  001A08  51DC               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1579  001A0A  22E2               	addwfc	fsr1h,f,c
  1580  001A0C  CFE6 F0DF          	movff	postinc1,??_ringbuf_pop+2
  1581  001A10  CFE5 F0E0          	movff	postdec1,??_ringbuf_pop+3
  1582  001A14  0E01               	movlw	1
  1583  001A16  0100               	movlb	0	; () banked
  1584  001A18  27DF               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  1585  001A1A  0E00               	movlw	0
  1586  001A1C  23E0               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  1587  001A1E  50DE               	movf	postinc2,w,c
  1588  001A20  0100               	movlb	0	; () banked
  1589  001A22  5DDF               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  1590  001A24  50DE               	movf	postinc2,w,c
  1591  001A26  0100               	movlb	0	; () banked
  1592  001A28  59E0               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  1593  001A2A  B0D8               	btfsc	status,0,c
  1594  001A2C  D00B               	goto	l6686
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  1598  001A2E  0100               	movlb	0	; () banked
  1599  001A30  EE20 F006          	lfsr	2,6
  1600  001A34  51DB               	movf	ringbuf_pop@rb& (0+255),w,b
  1601  001A36  26D9               	addwf	fsr2l,f,c
  1602  001A38  51DC               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1603  001A3A  22DA               	addwfc	fsr2h,f,c
  1604  001A3C  2ADE               	incf	postinc2,f,c
  1605  001A3E  0E00               	movlw	0
  1606  001A40  22DD               	addwfc	postdec2,f,c
  1607                           
  1608                           ;My_header\My_ringbuf.h: 69: } else {
  1609  001A42  D00B               	goto	l6688
  1610  001A44                     l6686:
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  1614  001A44  0100               	movlb	0	; () banked
  1615  001A46  EE20 F006          	lfsr	2,6
  1616  001A4A  51DB               	movf	ringbuf_pop@rb& (0+255),w,b
  1617  001A4C  26D9               	addwf	fsr2l,f,c
  1618  001A4E  51DC               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  1619  001A50  22DA               	addwfc	fsr2h,f,c
  1620  001A52  0E00               	movlw	0
  1621  001A54  6EDE               	movwf	postinc2,c
  1622  001A56  0E00               	movlw	0
  1623  001A58  6EDD               	movwf	postdec2,c
  1624  001A5A                     l6688:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;My_header\My_ringbuf.h: 71: }
  1628                           ;My_header\My_ringbuf.h: 72: return ret;
  1629  001A5A  5020               	movf	ringbuf_pop@ret,w,c
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;My_header\My_ringbuf.h: 73: } else {
  1633                           
  1634                           ; BSR set to: 0
  1635  001A5C  0012               	return	
  1636  001A5E                     l6694:
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;My_header\My_ringbuf.h: 74: return 0;
  1640  001A5E  0E00               	movlw	0
  1641                           
  1642                           ; BSR set to: 0
  1643  001A60  0012               	return	
  1644  001A62                     __end_of_ringbuf_pop:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           intcon	equ	0xFF2
  1651                           postinc0	equ	0xFEE
  1652                           wreg	equ	0xFE8
  1653                           postinc1	equ	0xFE6
  1654                           postdec1	equ	0xFE5
  1655                           fsr1h	equ	0xFE2
  1656                           fsr1l	equ	0xFE1
  1657                           indf2	equ	0xFDF
  1658                           postinc2	equ	0xFDE
  1659                           postdec2	equ	0xFDD
  1660                           fsr2h	equ	0xFDA
  1661                           fsr2l	equ	0xFD9
  1662                           status	equ	0xFD8
  1663                           
  1664 ;; *************** function _ringbuf_num *****************
  1665 ;; Defined at:
  1666 ;;		line 31 in file "../My_header\My_ringbuf.h"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  1669 ;;		 -> rx_buf(8), tx_buf(8), 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  2    0[BANK0 ] unsigned int 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1683 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;Total ram usage:        8 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    4
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_ringbuf_put
  1692 ;;		_ringbuf_pop
  1693 ;;		_main
  1694 ;;		_ringbuf_backspace
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text4
  1699  00155C                     __ptext4:
  1700                           	opt stack 0
  1701  00155C                     _ringbuf_num:
  1702                           	opt stack 24
  1703                           
  1704                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;incstack = 0
  1708  00155C  0100               	movlb	0	; () banked
  1709  00155E  EE20 F006          	lfsr	2,6
  1710  001562  51D3               	movf	ringbuf_num@rb& (0+255),w,b
  1711  001564  26D9               	addwf	fsr2l,f,c
  1712  001566  51D4               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1713  001568  22DA               	addwfc	fsr2h,f,c
  1714  00156A  0100               	movlb	0	; () banked
  1715  00156C  EE10 F004          	lfsr	1,4
  1716  001570  51D3               	movf	ringbuf_num@rb& (0+255),w,b
  1717  001572  26E1               	addwf	fsr1l,f,c
  1718  001574  51D4               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1719  001576  22E2               	addwfc	fsr1h,f,c
  1720  001578  50DE               	movf	postinc2,w,c
  1721  00157A  5CE6               	subwf	postinc1,w,c
  1722  00157C  50DE               	movf	postinc2,w,c
  1723  00157E  58E6               	subwfb	postinc1,w,c
  1724  001580  A0D8               	btfss	status,0,c
  1725  001582  D028               	goto	l6446
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  1729  001584  0100               	movlb	0	; () banked
  1730  001586  EE20 F004          	lfsr	2,4
  1731  00158A  51D3               	movf	ringbuf_num@rb& (0+255),w,b
  1732  00158C  26D9               	addwf	fsr2l,f,c
  1733  00158E  51D4               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1734  001590  22DA               	addwfc	fsr2h,f,c
  1735  001592  CFDE F0D5          	movff	postinc2,??_ringbuf_num
  1736  001596  CFDD F0D6          	movff	postdec2,??_ringbuf_num+1
  1737  00159A  0100               	movlb	0	; () banked
  1738  00159C  EE20 F006          	lfsr	2,6
  1739  0015A0  51D3               	movf	ringbuf_num@rb& (0+255),w,b
  1740  0015A2  26D9               	addwf	fsr2l,f,c
  1741  0015A4  51D4               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1742  0015A6  22DA               	addwfc	fsr2h,f,c
  1743  0015A8  CFDE F0D7          	movff	postinc2,??_ringbuf_num+2
  1744  0015AC  CFDD F0D8          	movff	postdec2,??_ringbuf_num+3
  1745  0015B0  0100               	movlb	0	; () banked
  1746  0015B2  1FD7               	comf	(??_ringbuf_num+2)& (0+255),f,b
  1747  0015B4  1FD8               	comf	(??_ringbuf_num+3)& (0+255),f,b
  1748  0015B6  4BD7               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  1749  0015B8  2BD8               	incf	(??_ringbuf_num+3)& (0+255),f,b
  1750  0015BA  0100               	movlb	0	; () banked
  1751  0015BC  51D5               	movf	??_ringbuf_num& (0+255),w,b
  1752  0015BE  0100               	movlb	0	; () banked
  1753  0015C0  25D7               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  1754  0015C2  0100               	movlb	0	; () banked
  1755  0015C4  6FD3               	movwf	?_ringbuf_num& (0+255),b
  1756  0015C6  0100               	movlb	0	; () banked
  1757  0015C8  51D6               	movf	(??_ringbuf_num+1)& (0+255),w,b
  1758  0015CA  0100               	movlb	0	; () banked
  1759  0015CC  21D8               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  1760  0015CE  0100               	movlb	0	; () banked
  1761  0015D0  6FD4               	movwf	(?_ringbuf_num+1)& (0+255),b
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;My_header\My_ringbuf.h: 34: } else {
  1765                           
  1766                           ; BSR set to: 0
  1767  0015D2  0012               	return	
  1768  0015D4                     l6446:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  1772  0015D4  0100               	movlb	0	; () banked
  1773  0015D6  EE20 F004          	lfsr	2,4
  1774  0015DA  51D3               	movf	ringbuf_num@rb& (0+255),w,b
  1775  0015DC  26D9               	addwf	fsr2l,f,c
  1776  0015DE  51D4               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1777  0015E0  22DA               	addwfc	fsr2h,f,c
  1778  0015E2  CFDE F0D5          	movff	postinc2,??_ringbuf_num
  1779  0015E6  CFDD F0D6          	movff	postdec2,??_ringbuf_num+1
  1780  0015EA  0100               	movlb	0	; () banked
  1781  0015EC  EE20 F002          	lfsr	2,2
  1782  0015F0  51D3               	movf	ringbuf_num@rb& (0+255),w,b
  1783  0015F2  26D9               	addwf	fsr2l,f,c
  1784  0015F4  51D4               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1785  0015F6  22DA               	addwfc	fsr2h,f,c
  1786  0015F8  CFDE F0D7          	movff	postinc2,??_ringbuf_num+2
  1787  0015FC  CFDD F0D8          	movff	postdec2,??_ringbuf_num+3
  1788  001600  0100               	movlb	0	; () banked
  1789  001602  EE20 F006          	lfsr	2,6
  1790  001606  51D3               	movf	ringbuf_num@rb& (0+255),w,b
  1791  001608  26D9               	addwf	fsr2l,f,c
  1792  00160A  51D4               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  1793  00160C  22DA               	addwfc	fsr2h,f,c
  1794  00160E  CFDE F0D9          	movff	postinc2,??_ringbuf_num+4
  1795  001612  CFDD F0DA          	movff	postdec2,??_ringbuf_num+5
  1796  001616  0100               	movlb	0	; () banked
  1797  001618  1FD9               	comf	(??_ringbuf_num+4)& (0+255),f,b
  1798  00161A  1FDA               	comf	(??_ringbuf_num+5)& (0+255),f,b
  1799  00161C  4BD9               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  1800  00161E  2BDA               	incf	(??_ringbuf_num+5)& (0+255),f,b
  1801  001620  0100               	movlb	0	; () banked
  1802  001622  51D7               	movf	(??_ringbuf_num+2)& (0+255),w,b
  1803  001624  0100               	movlb	0	; () banked
  1804  001626  27D9               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  1805  001628  0100               	movlb	0	; () banked
  1806  00162A  51D8               	movf	(??_ringbuf_num+3)& (0+255),w,b
  1807  00162C  0100               	movlb	0	; () banked
  1808  00162E  23DA               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  1809  001630  0100               	movlb	0	; () banked
  1810  001632  51D5               	movf	??_ringbuf_num& (0+255),w,b
  1811  001634  0100               	movlb	0	; () banked
  1812  001636  25D9               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  1813  001638  0100               	movlb	0	; () banked
  1814  00163A  6FD3               	movwf	?_ringbuf_num& (0+255),b
  1815  00163C  0100               	movlb	0	; () banked
  1816  00163E  51D6               	movf	(??_ringbuf_num+1)& (0+255),w,b
  1817  001640  0100               	movlb	0	; () banked
  1818  001642  21DA               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  1819  001644  0100               	movlb	0	; () banked
  1820  001646  6FD4               	movwf	(?_ringbuf_num+1)& (0+255),b
  1821                           
  1822                           ; BSR set to: 0
  1823  001648  0012               	return	
  1824  00164A                     __end_of_ringbuf_num:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           intcon	equ	0xFF2
  1831                           postinc0	equ	0xFEE
  1832                           wreg	equ	0xFE8
  1833                           postinc1	equ	0xFE6
  1834                           postdec1	equ	0xFE5
  1835                           fsr1h	equ	0xFE2
  1836                           fsr1l	equ	0xFE1
  1837                           indf2	equ	0xFDF
  1838                           postinc2	equ	0xFDE
  1839                           postdec2	equ	0xFDD
  1840                           fsr2h	equ	0xFDA
  1841                           fsr2l	equ	0xFD9
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function _main_init *****************
  1845 ;; Defined at:
  1846 ;;		line 57 in file "PIC18F27J53-SLEEP01.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;		None               void
  1853 ;; Registers used:
  1854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    9
  1867 ;; This function calls:
  1868 ;;		_ADC_init
  1869 ;;		_I2C_LCD_init
  1870 ;;		_I2C_init
  1871 ;;		_RTCC_init
  1872 ;;		_UART_init
  1873 ;;		_ringbuf_init
  1874 ;;		_timer0_init
  1875 ;;		_timer1_init
  1876 ;;		_timer3_init
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text5
  1883  001F52                     __ptext5:
  1884                           	opt stack 0
  1885  001F52                     _main_init:
  1886                           	opt stack 21
  1887                           
  1888                           ;PIC18F27J53-SLEEP01.c: 58: OSCCONbits.IRCF = 7;
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;incstack = 0
  1892  001F52  88D3               	bsf	4051,4,c	;volatile
  1893  001F54  8AD3               	bsf	4051,5,c	;volatile
  1894  001F56  8CD3               	bsf	4051,6,c	;volatile
  1895                           
  1896                           ;PIC18F27J53-SLEEP01.c: 59: OSCTUNEbits.PLLEN = 1;
  1897  001F58  8C9B               	bsf	3995,6,c	;volatile
  1898                           
  1899                           ;PIC18F27J53-SLEEP01.c: 60: OSCCONbits.SCS = 0;
  1900  001F5A  0EFC               	movlw	-4
  1901  001F5C  16D3               	andwf	4051,f,c	;volatile
  1902                           
  1903                           ;PIC18F27J53-SLEEP01.c: 61: TRISA = 0b00011111;
  1904  001F5E  0E1F               	movlw	31
  1905  001F60  6E92               	movwf	3986,c	;volatile
  1906                           
  1907                           ;PIC18F27J53-SLEEP01.c: 62: TRISB = 0b00110001;
  1908  001F62  0E31               	movlw	49
  1909  001F64  6E93               	movwf	3987,c	;volatile
  1910                           
  1911                           ;PIC18F27J53-SLEEP01.c: 63: TRISC = 0b10111010;
  1912  001F66  0EBA               	movlw	186
  1913  001F68  6E94               	movwf	3988,c	;volatile
  1914                           
  1915                           ;PIC18F27J53-SLEEP01.c: 64: ANCON0 = 0b11111111;
  1916  001F6A  010F               	movlb	15	; () banked
  1917  001F6C  6948               	setf	72,b	;volatile
  1918                           
  1919                           ;PIC18F27J53-SLEEP01.c: 65: ANCON1 = 0b00001111;
  1920  001F6E  0E0F               	movlw	15
  1921  001F70  010F               	movlb	15	; () banked
  1922  001F72  6F49               	movwf	73,b	;volatile
  1923                           
  1924                           ; BSR set to: 15
  1925                           ;PIC18F27J53-SLEEP01.c: 66: INTCON2bits.RBPU = 0;
  1926  001F74  9EF1               	bcf	intcon2,7,c	;volatile
  1927                           
  1928                           ; BSR set to: 15
  1929                           ;PIC18F27J53-SLEEP01.c: 68: timer0_init(8);
  1930  001F76  0E08               	movlw	8
  1931  001F78  EC68  F011         	call	_timer0_init
  1932                           
  1933                           ;PIC18F27J53-SLEEP01.c: 69: timer1_init(0, 2);
  1934  001F7C  0E02               	movlw	2
  1935  001F7E  6E20               	movwf	timer1_init@clock_select,c
  1936  001F80  0E00               	movlw	0
  1937  001F82  EC00  F011         	call	_timer1_init
  1938                           
  1939                           ;PIC18F27J53-SLEEP01.c: 70: timer3_init(3);
  1940  001F86  0E03               	movlw	3
  1941  001F88  ECDD  F011         	call	_timer3_init
  1942                           
  1943                           ;PIC18F27J53-SLEEP01.c: 71: I2C_init();
  1944  001F8C  EC84  F012         	call	_I2C_init	;wreg free
  1945                           
  1946                           ;PIC18F27J53-SLEEP01.c: 72: I2C_LCD_init();
  1947  001F90  ECAA  F010         	call	_I2C_LCD_init	;wreg free
  1948                           
  1949                           ;PIC18F27J53-SLEEP01.c: 73: RTCC_init();
  1950  001F94  EC9B  F011         	call	_RTCC_init	;wreg free
  1951                           
  1952                           ;PIC18F27J53-SLEEP01.c: 74: ADC_init(0);
  1953  001F98  0E00               	movlw	0
  1954  001F9A  EC35  F012         	call	_ADC_init
  1955                           
  1956                           ;PIC18F27J53-SLEEP01.c: 76: UART_init();
  1957  001F9E  EC25  F012         	call	_UART_init	;wreg free
  1958                           
  1959                           ;PIC18F27J53-SLEEP01.c: 77: static uint8_t txbuf[2000];
  1960                           ;PIC18F27J53-SLEEP01.c: 78: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  1961  001FA2  0EB7               	movlw	low _tx_buf
  1962  001FA4  0100               	movlb	0	; () banked
  1963  001FA6  6FD3               	movwf	ringbuf_init@rb& (0+255),b
  1964  001FA8  0E00               	movlw	high _tx_buf
  1965  001FAA  0100               	movlb	0	; () banked
  1966  001FAC  6FD4               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1967  001FAE  0EF2               	movlw	low main_init@txbuf
  1968  001FB0  0100               	movlb	0	; () banked
  1969  001FB2  6FD5               	movwf	ringbuf_init@internal_buf& (0+255),b
  1970  001FB4  0E01               	movlw	high main_init@txbuf
  1971  001FB6  0100               	movlb	0	; () banked
  1972  001FB8  6FD6               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1973  001FBA  0E07               	movlw	7
  1974  001FBC  0100               	movlb	0	; () banked
  1975  001FBE  6FD8               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1976  001FC0  0ED0               	movlw	208
  1977  001FC2  6FD7               	movwf	ringbuf_init@bufsize& (0+255),b
  1978  001FC4  ECD6  F010         	call	_ringbuf_init	;wreg free
  1979                           
  1980                           ;PIC18F27J53-SLEEP01.c: 79: static uint8_t rxbuf[100];
  1981                           ;PIC18F27J53-SLEEP01.c: 80: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  1982  001FC8  0EAF               	movlw	low _rx_buf
  1983  001FCA  0100               	movlb	0	; () banked
  1984  001FCC  6FD3               	movwf	ringbuf_init@rb& (0+255),b
  1985  001FCE  0E00               	movlw	high _rx_buf
  1986  001FD0  0100               	movlb	0	; () banked
  1987  001FD2  6FD4               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1988  001FD4  0E00               	movlw	low main_init@rxbuf
  1989  001FD6  0100               	movlb	0	; () banked
  1990  001FD8  6FD5               	movwf	ringbuf_init@internal_buf& (0+255),b
  1991  001FDA  0E01               	movlw	high main_init@rxbuf
  1992  001FDC  0100               	movlb	0	; () banked
  1993  001FDE  6FD6               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1994  001FE0  0E00               	movlw	0
  1995  001FE2  0100               	movlb	0	; () banked
  1996  001FE4  6FD8               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1997  001FE6  0E64               	movlw	100
  1998  001FE8  6FD7               	movwf	ringbuf_init@bufsize& (0+255),b
  1999  001FEA  ECD6  F010         	call	_ringbuf_init	;wreg free
  2000  001FEE  0012               	return		;funcret
  2001  001FF0                     __end_of_main_init:
  2002                           	opt stack 0
  2003                           tblptru	equ	0xFF8
  2004                           tblptrh	equ	0xFF7
  2005                           tblptrl	equ	0xFF6
  2006                           tablat	equ	0xFF5
  2007                           intcon	equ	0xFF2
  2008                           intcon2	equ	0xFF1
  2009                           postinc0	equ	0xFEE
  2010                           wreg	equ	0xFE8
  2011                           postinc1	equ	0xFE6
  2012                           postdec1	equ	0xFE5
  2013                           fsr1h	equ	0xFE2
  2014                           fsr1l	equ	0xFE1
  2015                           indf2	equ	0xFDF
  2016                           postinc2	equ	0xFDE
  2017                           postdec2	equ	0xFDD
  2018                           fsr2h	equ	0xFDA
  2019                           fsr2l	equ	0xFD9
  2020                           status	equ	0xFD8
  2021                           
  2022 ;; *************** function _timer3_init *****************
  2023 ;; Defined at:
  2024 ;;		line 85 in file "../My_header\My_header.h"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  prescaler       1    wreg     unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  prescaler       1    0[BANK0 ] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;		None               void
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2042 ;;Total ram usage:        2 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    4
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_main_init
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text6
  2053  0023BA                     __ptext6:
  2054                           	opt stack 0
  2055  0023BA                     _timer3_init:
  2056                           	opt stack 25
  2057                           
  2058                           ;incstack = 0
  2059                           ;timer3_init@prescaler stored from wreg
  2060  0023BA  0100               	movlb	0	; () banked
  2061  0023BC  6FD3               	movwf	timer3_init@prescaler& (0+255),b
  2062                           
  2063                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  2064  0023BE  0E3F               	movlw	-193
  2065  0023C0  1679               	andwf	3961,f,c	;volatile
  2066                           
  2067                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  2068  0023C2  9679               	bcf	3961,3,c	;volatile
  2069                           
  2070                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  2071  0023C4  C0D3  F020         	movff	timer3_init@prescaler,??_timer3_init
  2072  0023C8  3A20               	swapf	??_timer3_init,f,c
  2073  0023CA  5079               	movf	3961,w,c	;volatile
  2074  0023CC  1820               	xorwf	??_timer3_init,w,c
  2075  0023CE  0BCF               	andlw	-49
  2076  0023D0  1820               	xorwf	??_timer3_init,w,c
  2077  0023D2  6E79               	movwf	3961,c	;volatile
  2078                           
  2079                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  2080  0023D4  9E79               	bcf	3961,7,c	;volatile
  2081                           
  2082                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  2083  0023D6  8079               	bsf	3961,0,c	;volatile
  2084                           
  2085                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  2086  0023D8  92A2               	bcf	4002,1,c	;volatile
  2087                           
  2088                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  2089  0023DA  92A1               	bcf	4001,1,c	;volatile
  2090                           
  2091                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  2092  0023DC  82A0               	bsf	4000,1,c	;volatile
  2093                           
  2094                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  2095  0023DE  8CF2               	bsf	intcon,6,c	;volatile
  2096  0023E0  0012               	return		;funcret
  2097  0023E2                     __end_of_timer3_init:
  2098                           	opt stack 0
  2099                           tblptru	equ	0xFF8
  2100                           tblptrh	equ	0xFF7
  2101                           tblptrl	equ	0xFF6
  2102                           tablat	equ	0xFF5
  2103                           intcon	equ	0xFF2
  2104                           intcon2	equ	0xFF1
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           postinc1	equ	0xFE6
  2108                           postdec1	equ	0xFE5
  2109                           fsr1h	equ	0xFE2
  2110                           fsr1l	equ	0xFE1
  2111                           indf2	equ	0xFDF
  2112                           postinc2	equ	0xFDE
  2113                           postdec2	equ	0xFDD
  2114                           fsr2h	equ	0xFDA
  2115                           fsr2l	equ	0xFD9
  2116                           status	equ	0xFD8
  2117                           
  2118 ;; *************** function _timer1_init *****************
  2119 ;; Defined at:
  2120 ;;		line 54 in file "../My_header\My_header.h"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  prescaler       1    wreg     unsigned char 
  2123 ;;  clock_select    1   31[COMRAM] unsigned char 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  prescaler       1    1[BANK0 ] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;		None               void
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2135 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2137 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2138 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;Total ram usage:        3 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    4
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_main_init
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text7
  2150  002200                     __ptext7:
  2151                           	opt stack 0
  2152  002200                     _timer1_init:
  2153                           	opt stack 25
  2154                           
  2155                           ;incstack = 0
  2156                           ;timer1_init@prescaler stored from wreg
  2157  002200  0100               	movlb	0	; () banked
  2158  002202  6FD4               	movwf	timer1_init@prescaler& (0+255),b
  2159                           
  2160                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  2161  002204  C020  F0D3         	movff	timer1_init@clock_select,??_timer1_init
  2162  002208  0100               	movlb	0	; () banked
  2163  00220A  3BD3               	swapf	??_timer1_init& (0+255),f,b
  2164  00220C  47D3               	rlncf	??_timer1_init& (0+255),f,b
  2165  00220E  47D3               	rlncf	??_timer1_init& (0+255),f,b
  2166  002210  50CD               	movf	4045,w,c	;volatile
  2167  002212  0100               	movlb	0	; () banked
  2168  002214  19D3               	xorwf	??_timer1_init& (0+255),w,b
  2169  002216  0B3F               	andlw	-193
  2170  002218  19D3               	xorwf	??_timer1_init& (0+255),w,b
  2171  00221A  6ECD               	movwf	4045,c	;volatile
  2172                           
  2173                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  2174  00221C  0E02               	movlw	2
  2175  00221E  1820               	xorwf	timer1_init@clock_select,w,c
  2176  002220  A4D8               	btfss	status,2,c
  2177  002222  D002               	goto	l702
  2178                           
  2179                           ; BSR set to: 0
  2180  002224  86CD               	bsf	4045,3,c	;volatile
  2181  002226  D001               	goto	l6506
  2182  002228                     l702:
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  2186  002228  96CD               	bcf	4045,3,c	;volatile
  2187  00222A                     l6506:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  2191  00222A  C0D4  F0D3         	movff	timer1_init@prescaler,??_timer1_init
  2192  00222E  0100               	movlb	0	; () banked
  2193  002230  3BD3               	swapf	??_timer1_init& (0+255),f,b
  2194  002232  50CD               	movf	4045,w,c	;volatile
  2195  002234  0100               	movlb	0	; () banked
  2196  002236  19D3               	xorwf	??_timer1_init& (0+255),w,b
  2197  002238  0BCF               	andlw	-49
  2198  00223A  19D3               	xorwf	??_timer1_init& (0+255),w,b
  2199  00223C  6ECD               	movwf	4045,c	;volatile
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  2203  00223E  84CD               	bsf	4045,2,c	;volatile
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  2207  002240  92CD               	bcf	4045,1,c	;volatile
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  2211  002242  80CD               	bsf	4045,0,c	;volatile
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  2215  002244  909F               	bcf	3999,0,c	;volatile
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  2219  002246  909E               	bcf	3998,0,c	;volatile
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  2223  002248  809D               	bsf	3997,0,c	;volatile
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  2227  00224A  8CF2               	bsf	intcon,6,c	;volatile
  2228                           
  2229                           ; BSR set to: 0
  2230  00224C  0012               	return		;funcret
  2231  00224E                     __end_of_timer1_init:
  2232                           	opt stack 0
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           intcon	equ	0xFF2
  2238                           intcon2	equ	0xFF1
  2239                           postinc0	equ	0xFEE
  2240                           wreg	equ	0xFE8
  2241                           postinc1	equ	0xFE6
  2242                           postdec1	equ	0xFE5
  2243                           fsr1h	equ	0xFE2
  2244                           fsr1l	equ	0xFE1
  2245                           indf2	equ	0xFDF
  2246                           postinc2	equ	0xFDE
  2247                           postdec2	equ	0xFDD
  2248                           fsr2h	equ	0xFDA
  2249                           fsr2l	equ	0xFD9
  2250                           status	equ	0xFD8
  2251                           
  2252 ;; *************** function _timer0_init *****************
  2253 ;; Defined at:
  2254 ;;		line 15 in file "../My_header\My_header.h"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  prescaler       1    wreg     unsigned char 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  prescaler       1    0[BANK0 ] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;		None               void
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2271 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2272 ;;Total ram usage:        2 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    4
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_main_init
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text8
  2283  0022D0                     __ptext8:
  2284                           	opt stack 0
  2285  0022D0                     _timer0_init:
  2286                           	opt stack 25
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;incstack = 0
  2290                           ;timer0_init@prescaler stored from wreg
  2291  0022D0  0100               	movlb	0	; () banked
  2292  0022D2  6FD3               	movwf	timer0_init@prescaler& (0+255),b
  2293                           
  2294                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
  2295  0022D4  8ED5               	bsf	4053,7,c	;volatile
  2296                           
  2297                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
  2298  0022D6  8CD5               	bsf	4053,6,c	;volatile
  2299                           
  2300                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
  2301  0022D8  9AD5               	bcf	4053,5,c	;volatile
  2302                           
  2303                           ;My_header\My_header.h: 19: if (prescaler == 0) {
  2304  0022DA  0100               	movlb	0	; () banked
  2305  0022DC  51D3               	movf	timer0_init@prescaler& (0+255),w,b
  2306  0022DE  0100               	movlb	0	; () banked
  2307  0022E0  A4D8               	btfss	status,2,c
  2308  0022E2  D002               	goto	l697
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
  2312  0022E4  86D5               	bsf	4053,3,c	;volatile
  2313                           
  2314                           ;My_header\My_header.h: 21: } else {
  2315  0022E6  D00A               	goto	l6494
  2316  0022E8                     l697:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
  2320  0022E8  96D5               	bcf	4053,3,c	;volatile
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
  2324  0022EA  C0D3  F020         	movff	timer0_init@prescaler,??_timer0_init
  2325  0022EE  0EFF               	movlw	255
  2326  0022F0  2620               	addwf	??_timer0_init,f,c
  2327  0022F2  50D5               	movf	4053,w,c	;volatile
  2328  0022F4  1820               	xorwf	??_timer0_init,w,c
  2329  0022F6  0BF8               	andlw	-8
  2330  0022F8  1820               	xorwf	??_timer0_init,w,c
  2331  0022FA  6ED5               	movwf	4053,c	;volatile
  2332  0022FC                     l6494:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;My_header\My_header.h: 24: }
  2336                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
  2337  0022FC  8AF2               	bsf	intcon,5,c	;volatile
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
  2341  0022FE  94F2               	bcf	intcon,2,c	;volatile
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
  2345  002300  94F1               	bcf	intcon2,2,c	;volatile
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
  2349  002302  8CF2               	bsf	intcon,6,c	;volatile
  2350                           
  2351                           ; BSR set to: 0
  2352  002304  0012               	return		;funcret
  2353  002306                     __end_of_timer0_init:
  2354                           	opt stack 0
  2355                           tblptru	equ	0xFF8
  2356                           tblptrh	equ	0xFF7
  2357                           tblptrl	equ	0xFF6
  2358                           tablat	equ	0xFF5
  2359                           intcon	equ	0xFF2
  2360                           intcon2	equ	0xFF1
  2361                           postinc0	equ	0xFEE
  2362                           wreg	equ	0xFE8
  2363                           postinc1	equ	0xFE6
  2364                           postdec1	equ	0xFE5
  2365                           fsr1h	equ	0xFE2
  2366                           fsr1l	equ	0xFE1
  2367                           indf2	equ	0xFDF
  2368                           postinc2	equ	0xFDE
  2369                           postdec2	equ	0xFDD
  2370                           fsr2h	equ	0xFDA
  2371                           fsr2l	equ	0xFD9
  2372                           status	equ	0xFD8
  2373                           
  2374 ;; *************** function _ringbuf_init *****************
  2375 ;; Defined at:
  2376 ;;		line 24 in file "../My_header\My_ringbuf.h"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  2379 ;;		 -> rx_buf(8), tx_buf(8), 
  2380 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  2381 ;;		 -> main_init@rxbuf(100), main_init@txbuf(2000), 
  2382 ;;  bufsize         2    4[BANK0 ] unsigned int 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2394 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2397 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2398 ;;Total ram usage:        6 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    4
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_main_init
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text9
  2409  0021AC                     __ptext9:
  2410                           	opt stack 0
  2411  0021AC                     _ringbuf_init:
  2412                           	opt stack 25
  2413                           
  2414                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;incstack = 0
  2418  0021AC  C0D3  FFD9         	movff	ringbuf_init@rb,fsr2l
  2419  0021B0  C0D4  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  2420  0021B4  C0D5  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  2421  0021B8  C0D6  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  2422                           
  2423                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  2424  0021BC  0100               	movlb	0	; () banked
  2425  0021BE  EE20 F002          	lfsr	2,2
  2426  0021C2  51D3               	movf	ringbuf_init@rb& (0+255),w,b
  2427  0021C4  26D9               	addwf	fsr2l,f,c
  2428  0021C6  51D4               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2429  0021C8  22DA               	addwfc	fsr2h,f,c
  2430  0021CA  C0D7  FFDE         	movff	ringbuf_init@bufsize,postinc2
  2431  0021CE  C0D8  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  2435  0021D2  0100               	movlb	0	; () banked
  2436  0021D4  EE20 F004          	lfsr	2,4
  2437  0021D8  51D3               	movf	ringbuf_init@rb& (0+255),w,b
  2438  0021DA  26D9               	addwf	fsr2l,f,c
  2439  0021DC  51D4               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2440  0021DE  22DA               	addwfc	fsr2h,f,c
  2441  0021E0  0E00               	movlw	0
  2442  0021E2  6EDE               	movwf	postinc2,c
  2443  0021E4  0E00               	movlw	0
  2444  0021E6  6EDD               	movwf	postdec2,c
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  2448  0021E8  0100               	movlb	0	; () banked
  2449  0021EA  EE20 F006          	lfsr	2,6
  2450  0021EE  51D3               	movf	ringbuf_init@rb& (0+255),w,b
  2451  0021F0  26D9               	addwf	fsr2l,f,c
  2452  0021F2  51D4               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2453  0021F4  22DA               	addwfc	fsr2h,f,c
  2454  0021F6  0E00               	movlw	0
  2455  0021F8  6EDE               	movwf	postinc2,c
  2456  0021FA  0E00               	movlw	0
  2457  0021FC  6EDD               	movwf	postdec2,c
  2458                           
  2459                           ; BSR set to: 0
  2460  0021FE  0012               	return		;funcret
  2461  002200                     __end_of_ringbuf_init:
  2462                           	opt stack 0
  2463                           tblptru	equ	0xFF8
  2464                           tblptrh	equ	0xFF7
  2465                           tblptrl	equ	0xFF6
  2466                           tablat	equ	0xFF5
  2467                           intcon	equ	0xFF2
  2468                           intcon2	equ	0xFF1
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           postinc1	equ	0xFE6
  2472                           postdec1	equ	0xFE5
  2473                           fsr1h	equ	0xFE2
  2474                           fsr1l	equ	0xFE1
  2475                           indf2	equ	0xFDF
  2476                           postinc2	equ	0xFDE
  2477                           postdec2	equ	0xFDD
  2478                           fsr2h	equ	0xFDA
  2479                           fsr2l	equ	0xFD9
  2480                           status	equ	0xFD8
  2481                           
  2482 ;; *************** function _UART_init *****************
  2483 ;; Defined at:
  2484 ;;		line 192 in file "../My_header\My_header.h"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;		None               void
  2491 ;; Registers used:
  2492 ;;		wreg, status,2
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2502 ;;Total ram usage:        0 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    4
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_main_init
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text10
  2513  00244A                     __ptext10:
  2514                           	opt stack 0
  2515  00244A                     _UART_init:
  2516                           	opt stack 25
  2517                           
  2518                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;incstack = 0
  2522  00244A  9CAD               	bcf	4013,6,c	;volatile
  2523                           
  2524                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  2525  00244C  8AAD               	bsf	4013,5,c	;volatile
  2526                           
  2527                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  2528  00244E  98AD               	bcf	4013,4,c	;volatile
  2529                           
  2530                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  2531  002450  94AD               	bcf	4013,2,c	;volatile
  2532                           
  2533                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  2534  002452  8EAC               	bsf	4012,7,c	;volatile
  2535                           
  2536                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  2537  002454  9CAC               	bcf	4012,6,c	;volatile
  2538                           
  2539                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  2540  002456  88AC               	bsf	4012,4,c	;volatile
  2541                           
  2542                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  2543  002458  967E               	bcf	3966,3,c	;volatile
  2544                           
  2545                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  2546  00245A  0E4D               	movlw	77
  2547  00245C  6EB0               	movwf	4016,c	;volatile
  2548                           
  2549                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  2550  00245E  0E00               	movlw	0
  2551  002460  6E7F               	movwf	3967,c	;volatile
  2552                           
  2553                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  2554  002462  9A9F               	bcf	3999,5,c	;volatile
  2555                           
  2556                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  2557  002464  8A9D               	bsf	3997,5,c	;volatile
  2558                           
  2559                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  2560  002466  8CF2               	bsf	intcon,6,c	;volatile
  2561  002468  0012               	return		;funcret
  2562  00246A                     __end_of_UART_init:
  2563                           	opt stack 0
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           intcon	equ	0xFF2
  2569                           intcon2	equ	0xFF1
  2570                           postinc0	equ	0xFEE
  2571                           wreg	equ	0xFE8
  2572                           postinc1	equ	0xFE6
  2573                           postdec1	equ	0xFE5
  2574                           fsr1h	equ	0xFE2
  2575                           fsr1l	equ	0xFE1
  2576                           indf2	equ	0xFDF
  2577                           postinc2	equ	0xFDE
  2578                           postdec2	equ	0xFDD
  2579                           fsr2h	equ	0xFDA
  2580                           fsr2l	equ	0xFD9
  2581                           status	equ	0xFD8
  2582                           
  2583 ;; *************** function _RTCC_init *****************
  2584 ;; Defined at:
  2585 ;;		line 56 in file "../My_header\My_RTCC.h"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;		None               void
  2592 ;; Registers used:
  2593 ;;		wreg, status,2
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    4
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_main_init
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text11
  2614  002336                     __ptext11:
  2615                           	opt stack 0
  2616  002336                     _RTCC_init:
  2617                           	opt stack 25
  2618                           
  2619                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
  2620                           
  2621                           ;incstack = 0
  2622  002336  010F               	movlb	15	; () banked
  2623  002338  8B3F               	bsf	63,5,b	;volatile
  2624                           
  2625                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
  2626  00233A  010F               	movlb	15	; () banked
  2627  00233C  BB3F               	btfsc	63,5,b	;volatile
  2628  00233E  D006               	goto	l5042
  2629                           
  2630                           ; BSR set to: 15
  2631                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
  2632  002340  0E55               	movlw	85
  2633  002342  6EA7               	movwf	4007,c	;volatile
  2634                           
  2635                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
  2636  002344  0EAA               	movlw	170
  2637  002346  6EA7               	movwf	4007,c	;volatile
  2638                           
  2639                           ; BSR set to: 15
  2640                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
  2641  002348  010F               	movlb	15	; () banked
  2642  00234A  8B3F               	bsf	63,5,b	;volatile
  2643  00234C                     l5042:
  2644                           
  2645                           ; BSR set to: 15
  2646                           ;My_header\My_RTCC.h: 62: }
  2647                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
  2648  00234C  010F               	movlb	15	; () banked
  2649  00234E  8F3F               	bsf	63,7,b	;volatile
  2650                           
  2651                           ; BSR set to: 15
  2652                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
  2653  002350  010F               	movlb	15	; () banked
  2654  002352  953F               	bcf	63,2,b	;volatile
  2655                           
  2656                           ; BSR set to: 15
  2657                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
  2658  002354  010F               	movlb	15	; () banked
  2659  002356  833C               	bsf	60,1,b	;volatile
  2660                           
  2661                           ; BSR set to: 15
  2662                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
  2663  002358  010F               	movlb	15	; () banked
  2664  00235A  853C               	bsf	60,2,b	;volatile
  2665                           
  2666                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
  2667  00235C  0E00               	movlw	0
  2668  00235E  010F               	movlb	15	; () banked
  2669  002360  6F3E               	movwf	62,b	;volatile
  2670                           
  2671                           ; BSR set to: 15
  2672  002362  0012               	return		;funcret
  2673  002364                     __end_of_RTCC_init:
  2674                           	opt stack 0
  2675                           tblptru	equ	0xFF8
  2676                           tblptrh	equ	0xFF7
  2677                           tblptrl	equ	0xFF6
  2678                           tablat	equ	0xFF5
  2679                           intcon	equ	0xFF2
  2680                           intcon2	equ	0xFF1
  2681                           postinc0	equ	0xFEE
  2682                           wreg	equ	0xFE8
  2683                           postinc1	equ	0xFE6
  2684                           postdec1	equ	0xFE5
  2685                           fsr1h	equ	0xFE2
  2686                           fsr1l	equ	0xFE1
  2687                           indf2	equ	0xFDF
  2688                           postinc2	equ	0xFDE
  2689                           postdec2	equ	0xFDD
  2690                           fsr2h	equ	0xFDA
  2691                           fsr2l	equ	0xFD9
  2692                           status	equ	0xFD8
  2693                           
  2694 ;; *************** function _I2C_init *****************
  2695 ;; Defined at:
  2696 ;;		line 25 in file "../My_header\My_I2C.h"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;		None               void
  2703 ;; Registers used:
  2704 ;;		wreg, status,2
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    4
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_main_init
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text12
  2725  002508                     __ptext12:
  2726                           	opt stack 0
  2727  002508                     _I2C_init:
  2728                           	opt stack 25
  2729                           
  2730                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
  2731                           
  2732                           ; BSR set to: 15
  2733                           ;incstack = 0
  2734  002508  0E80               	movlw	128
  2735  00250A  6EC7               	movwf	4039,c	;volatile
  2736                           
  2737                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
  2738  00250C  0E28               	movlw	40
  2739  00250E  6EC6               	movwf	4038,c	;volatile
  2740                           
  2741                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
  2742  002510  0E13               	movlw	19
  2743  002512  6EC8               	movwf	4040,c	;volatile
  2744                           
  2745                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
  2746  002514  969E               	bcf	3998,3,c	;volatile
  2747                           
  2748                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
  2749  002516  96A1               	bcf	4001,3,c	;volatile
  2750  002518  0012               	return		;funcret
  2751  00251A                     __end_of_I2C_init:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           intcon	equ	0xFF2
  2758                           intcon2	equ	0xFF1
  2759                           postinc0	equ	0xFEE
  2760                           wreg	equ	0xFE8
  2761                           postinc1	equ	0xFE6
  2762                           postdec1	equ	0xFE5
  2763                           fsr1h	equ	0xFE2
  2764                           fsr1l	equ	0xFE1
  2765                           indf2	equ	0xFDF
  2766                           postinc2	equ	0xFDE
  2767                           postdec2	equ	0xFDD
  2768                           fsr2h	equ	0xFDA
  2769                           fsr2l	equ	0xFD9
  2770                           status	equ	0xFD8
  2771                           
  2772 ;; *************** function _I2C_LCD_init *****************
  2773 ;; Defined at:
  2774 ;;		line 164 in file "../My_header\My_I2C.h"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;		None               void
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    8
  2795 ;; This function calls:
  2796 ;;		_Delay_ms
  2797 ;;		_I2C_LCD_Clear
  2798 ;;		_I2C_LCD_Command
  2799 ;; This function is called by:
  2800 ;;		_main_init
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text13
  2805  002154                     __ptext13:
  2806                           	opt stack 0
  2807  002154                     _I2C_LCD_init:
  2808                           	opt stack 21
  2809                           
  2810                           ;My_header\My_I2C.h: 165: Delay_ms(40);
  2811                           
  2812                           ;incstack = 0
  2813  002154  0E00               	movlw	0
  2814  002156  0100               	movlb	0	; () banked
  2815  002158  6FD4               	movwf	(Delay_ms@ms+1)& (0+255),b
  2816  00215A  0E28               	movlw	40
  2817  00215C  6FD3               	movwf	Delay_ms@ms& (0+255),b
  2818  00215E  ECC8  F011         	call	_Delay_ms	;wreg free
  2819                           
  2820                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
  2821  002162  0E38               	movlw	56
  2822  002164  EC4C  F011         	call	_I2C_LCD_Command
  2823                           
  2824                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
  2825  002168  0E39               	movlw	57
  2826  00216A  EC4C  F011         	call	_I2C_LCD_Command
  2827                           
  2828                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
  2829  00216E  0E14               	movlw	20
  2830  002170  EC4C  F011         	call	_I2C_LCD_Command
  2831                           
  2832                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
  2833  002174  0E70               	movlw	112
  2834  002176  EC4C  F011         	call	_I2C_LCD_Command
  2835                           
  2836                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
  2837  00217A  0E56               	movlw	86
  2838  00217C  EC4C  F011         	call	_I2C_LCD_Command
  2839                           
  2840                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
  2841  002180  0E6C               	movlw	108
  2842  002182  EC4C  F011         	call	_I2C_LCD_Command
  2843                           
  2844                           ;My_header\My_I2C.h: 172: Delay_ms(200);
  2845  002186  0E00               	movlw	0
  2846  002188  0100               	movlb	0	; () banked
  2847  00218A  6FD4               	movwf	(Delay_ms@ms+1)& (0+255),b
  2848  00218C  0EC8               	movlw	200
  2849  00218E  6FD3               	movwf	Delay_ms@ms& (0+255),b
  2850  002190  ECC8  F011         	call	_Delay_ms	;wreg free
  2851                           
  2852                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
  2853  002194  0E38               	movlw	56
  2854  002196  EC4C  F011         	call	_I2C_LCD_Command
  2855                           
  2856                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
  2857  00219A  0E0C               	movlw	12
  2858  00219C  EC4C  F011         	call	_I2C_LCD_Command
  2859                           
  2860                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
  2861  0021A0  0E06               	movlw	6
  2862  0021A2  EC4C  F011         	call	_I2C_LCD_Command
  2863                           
  2864                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
  2865  0021A6  EC5E  F012         	call	_I2C_LCD_Clear	;wreg free
  2866  0021AA  0012               	return		;funcret
  2867  0021AC                     __end_of_I2C_LCD_init:
  2868                           	opt stack 0
  2869                           tblptru	equ	0xFF8
  2870                           tblptrh	equ	0xFF7
  2871                           tblptrl	equ	0xFF6
  2872                           tablat	equ	0xFF5
  2873                           intcon	equ	0xFF2
  2874                           intcon2	equ	0xFF1
  2875                           postinc0	equ	0xFEE
  2876                           wreg	equ	0xFE8
  2877                           postinc1	equ	0xFE6
  2878                           postdec1	equ	0xFE5
  2879                           fsr1h	equ	0xFE2
  2880                           fsr1l	equ	0xFE1
  2881                           indf2	equ	0xFDF
  2882                           postinc2	equ	0xFDE
  2883                           postdec2	equ	0xFDD
  2884                           fsr2h	equ	0xFDA
  2885                           fsr2l	equ	0xFD9
  2886                           status	equ	0xFD8
  2887                           
  2888 ;; *************** function _I2C_LCD_Clear *****************
  2889 ;; Defined at:
  2890 ;;		line 107 in file "../My_header\My_I2C.h"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;		None               void
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2908 ;;Total ram usage:        1 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    7
  2911 ;; This function calls:
  2912 ;;		_I2C_LCD_Command
  2913 ;; This function is called by:
  2914 ;;		_I2C_LCD_init
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text14
  2919  0024BC                     __ptext14:
  2920                           	opt stack 0
  2921  0024BC                     _I2C_LCD_Clear:
  2922                           	opt stack 21
  2923                           
  2924                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
  2925                           
  2926                           ;incstack = 0
  2927  0024BC  0E01               	movlw	1
  2928  0024BE  EC4C  F011         	call	_I2C_LCD_Command
  2929                           
  2930                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  2931  0024C2  0E12               	movlw	18
  2932  0024C4  0100               	movlb	0	; () banked
  2933  0024C6  6FD8               	movwf	??_I2C_LCD_Clear& (0+255),b
  2934  0024C8  0E23               	movlw	35
  2935  0024CA                     u7167:
  2936  0024CA  2EE8               	decfsz	wreg,f,c
  2937  0024CC  D7FE               	goto	u7167
  2938  0024CE  2FD8               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  2939  0024D0  D7FC               	goto	u7167
  2940  0024D2  F000               	nop	
  2941  0024D4  0012               	return		;funcret
  2942  0024D6                     __end_of_I2C_LCD_Clear:
  2943                           	opt stack 0
  2944                           tblptru	equ	0xFF8
  2945                           tblptrh	equ	0xFF7
  2946                           tblptrl	equ	0xFF6
  2947                           tablat	equ	0xFF5
  2948                           intcon	equ	0xFF2
  2949                           intcon2	equ	0xFF1
  2950                           postinc0	equ	0xFEE
  2951                           wreg	equ	0xFE8
  2952                           postinc1	equ	0xFE6
  2953                           postdec1	equ	0xFE5
  2954                           fsr1h	equ	0xFE2
  2955                           fsr1l	equ	0xFE1
  2956                           indf2	equ	0xFDF
  2957                           postinc2	equ	0xFDE
  2958                           postdec2	equ	0xFDD
  2959                           fsr2h	equ	0xFDA
  2960                           fsr2l	equ	0xFD9
  2961                           status	equ	0xFD8
  2962                           
  2963 ;; *************** function _Delay_ms *****************
  2964 ;; Defined at:
  2965 ;;		line 333 in file "../My_header\My_header.h"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  ms              2    0[BANK0 ] unsigned int 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;		None               void
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2982 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2983 ;;Total ram usage:        3 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    4
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_I2C_LCD_init
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text15
  2994  002390                     __ptext15:
  2995                           	opt stack 0
  2996  002390                     _Delay_ms:
  2997                           	opt stack 24
  2998                           
  2999                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
  3000                           
  3001                           ;incstack = 0
  3002  002390  D008               	goto	l6454
  3003  002392                     l6452:
  3004  002392  0E10               	movlw	16
  3005  002394  6E20               	movwf	??_Delay_ms& (0+255),c
  3006  002396  0E94               	movlw	148
  3007  002398                     u7177:
  3008  002398  2EE8               	decfsz	wreg,f,c
  3009  00239A  D7FE               	goto	u7177
  3010  00239C  2E20               	decfsz	??_Delay_ms& (0+255),f,c
  3011  00239E  D7FC               	goto	u7177
  3012  0023A0  D000               	nop2	
  3013  0023A2                     l6454:
  3014  0023A2  0100               	movlb	0	; () banked
  3015  0023A4  07D3               	decf	Delay_ms@ms& (0+255),f,b
  3016  0023A6  A0D8               	btfss	status,0,c
  3017  0023A8  07D4               	decf	(Delay_ms@ms+1)& (0+255),f,b
  3018  0023AA  0100               	movlb	0	; () banked
  3019  0023AC  29D3               	incf	Delay_ms@ms& (0+255),w,b
  3020  0023AE  E1F1               	bnz	l6452
  3021  0023B0  0100               	movlb	0	; () banked
  3022  0023B2  29D4               	incf	(Delay_ms@ms+1)& (0+255),w,b
  3023  0023B4  B4D8               	btfsc	status,2,c
  3024  0023B6  0012               	return	
  3025  0023B8  D7EC               	goto	l6452
  3026  0023BA                     __end_of_Delay_ms:
  3027                           	opt stack 0
  3028                           tblptru	equ	0xFF8
  3029                           tblptrh	equ	0xFF7
  3030                           tblptrl	equ	0xFF6
  3031                           tablat	equ	0xFF5
  3032                           intcon	equ	0xFF2
  3033                           intcon2	equ	0xFF1
  3034                           postinc0	equ	0xFEE
  3035                           wreg	equ	0xFE8
  3036                           postinc1	equ	0xFE6
  3037                           postdec1	equ	0xFE5
  3038                           fsr1h	equ	0xFE2
  3039                           fsr1l	equ	0xFE1
  3040                           indf2	equ	0xFDF
  3041                           postinc2	equ	0xFDE
  3042                           postdec2	equ	0xFDD
  3043                           fsr2h	equ	0xFDA
  3044                           fsr2l	equ	0xFD9
  3045                           status	equ	0xFD8
  3046                           
  3047 ;; *************** function _ADC_init *****************
  3048 ;; Defined at:
  3049 ;;		line 149 in file "../My_header\My_header.h"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  p_ref           1    wreg     unsigned char 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  p_ref           1   31[COMRAM] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;		None               void
  3056 ;; Registers used:
  3057 ;;		wreg, status,2
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3067 ;;Total ram usage:        1 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    4
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_main_init
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text16
  3078  00246A                     __ptext16:
  3079                           	opt stack 0
  3080  00246A                     _ADC_init:
  3081                           	opt stack 25
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;incstack = 0
  3085                           ;ADC_init@p_ref stored from wreg
  3086  00246A  6E20               	movwf	ADC_init@p_ref,c
  3087                           
  3088                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  3089  00246C  9EC2               	bcf	4034,7,c	;volatile
  3090                           
  3091                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  3092  00246E  B020               	btfsc	ADC_init@p_ref,0,c
  3093  002470  D002               	bra	u4365
  3094  002472  9CC2               	bcf	4034,6,c	;volatile
  3095  002474  D001               	bra	u4366
  3096  002476                     u4365:
  3097  002476  8CC2               	bsf	4034,6,c	;volatile
  3098  002478                     u4366:
  3099                           
  3100                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  3101  002478  8EC1               	bsf	4033,7,c	;volatile
  3102                           
  3103                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  3104  00247A  9CC1               	bcf	4033,6,c	;volatile
  3105                           
  3106                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  3107  00247C  50C1               	movf	4033,w,c	;volatile
  3108  00247E  0BF8               	andlw	-8
  3109  002480  0906               	iorlw	6
  3110  002482  6EC1               	movwf	4033,c	;volatile
  3111  002484  0012               	return		;funcret
  3112  002486                     __end_of_ADC_init:
  3113                           	opt stack 0
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           intcon	equ	0xFF2
  3119                           intcon2	equ	0xFF1
  3120                           postinc0	equ	0xFEE
  3121                           wreg	equ	0xFE8
  3122                           postinc1	equ	0xFE6
  3123                           postdec1	equ	0xFE5
  3124                           fsr1h	equ	0xFE2
  3125                           fsr1l	equ	0xFE1
  3126                           indf2	equ	0xFDF
  3127                           postinc2	equ	0xFDE
  3128                           postdec2	equ	0xFDD
  3129                           fsr2h	equ	0xFDA
  3130                           fsr2l	equ	0xFD9
  3131                           status	equ	0xFD8
  3132                           
  3133 ;; *************** function _RTCC_from_epoch *****************
  3134 ;; Defined at:
  3135 ;;		line 242 in file "../My_header\My_RTCC.h"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  ct              2   10[BANK1 ] PTR struct .
  3138 ;;		 -> caltime_now(7), 
  3139 ;;  ep              2   12[BANK1 ] PTR unsigned long 
  3140 ;;		 -> epoch_now(4), 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;		None               void
  3145 ;; Registers used:
  3146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3152 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3155 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3156 ;;Total ram usage:        4 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    7
  3159 ;; This function calls:
  3160 ;;		_caltime_to_RTCC
  3161 ;;		_epoch_to_caltime
  3162 ;; This function is called by:
  3163 ;;		_main
  3164 ;;		_RTCC_adjust_time_inc
  3165 ;;		_RTCC_adjust_time_dec
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text17
  3170  002406                     __ptext17:
  3171                           	opt stack 0
  3172  002406                     _RTCC_from_epoch:
  3173                           	opt stack 23
  3174                           
  3175                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  3176                           
  3177                           ;incstack = 0
  3178  002406  C1EE  F0F4         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  3179  00240A  C1EF  F0F5         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  3180  00240E  C1F0  F0F6         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  3181  002412  C1F1  F0F7         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  3182  002416  EC41  F009         	call	_epoch_to_caltime	;wreg free
  3183                           
  3184                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  3185  00241A  C1EE  F0DB         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  3186  00241E  C1EF  F0DC         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  3187  002422  EC65  F00C         	call	_caltime_to_RTCC	;wreg free
  3188  002426  0012               	return		;funcret
  3189  002428                     __end_of_RTCC_from_epoch:
  3190                           	opt stack 0
  3191                           tblptru	equ	0xFF8
  3192                           tblptrh	equ	0xFF7
  3193                           tblptrl	equ	0xFF6
  3194                           tablat	equ	0xFF5
  3195                           intcon	equ	0xFF2
  3196                           intcon2	equ	0xFF1
  3197                           postinc0	equ	0xFEE
  3198                           wreg	equ	0xFE8
  3199                           postinc1	equ	0xFE6
  3200                           postdec1	equ	0xFE5
  3201                           fsr1h	equ	0xFE2
  3202                           fsr1l	equ	0xFE1
  3203                           indf2	equ	0xFDF
  3204                           postinc2	equ	0xFDE
  3205                           postdec2	equ	0xFDD
  3206                           fsr2h	equ	0xFDA
  3207                           fsr2l	equ	0xFD9
  3208                           status	equ	0xFD8
  3209                           
  3210 ;; *************** function _epoch_to_caltime *****************
  3211 ;; Defined at:
  3212 ;;		line 157 in file "../My_header\My_RTCC.h"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  ct              2   33[BANK0 ] PTR struct .
  3215 ;;		 -> caltime_now(7), 
  3216 ;;  ep              2   35[BANK0 ] PTR unsigned long 
  3217 ;;		 -> epoch_now(4), 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  num             4    6[BANK1 ] unsigned long 
  3220 ;;  day             2    2[BANK1 ] unsigned int 
  3221 ;;  day_since_ep    2    0[BANK1 ] unsigned int 
  3222 ;;  month           1    5[BANK1 ] unsigned char 
  3223 ;;  year            1    4[BANK1 ] unsigned char 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;		None               void
  3226 ;; Registers used:
  3227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3233 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3234 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3236 ;;      Totals:         0       6      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3237 ;;Total ram usage:       16 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    6
  3240 ;; This function calls:
  3241 ;;		_get_quot_rem
  3242 ;;		_month_length
  3243 ;; This function is called by:
  3244 ;;		_RTCC_from_epoch
  3245 ;;		_RTCC_from_caltime
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text18
  3250  001282                     __ptext18:
  3251                           	opt stack 0
  3252  001282                     _epoch_to_caltime:
  3253                           	opt stack 23
  3254                           
  3255                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  3256                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  3257                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  3258                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  3259                           ;My_header\My_RTCC.h: 164: uint16_t day;
  3260                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  3261                           
  3262                           ;incstack = 0
  3263  001282  0E00               	movlw	0
  3264  001284  0101               	movlb	1	; () banked
  3265  001286  6FE8               	movwf	epoch_to_caltime@year& (0+255),b
  3266                           
  3267                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  3268  001288  0E01               	movlw	1
  3269  00128A  0101               	movlb	1	; () banked
  3270  00128C  6FE9               	movwf	epoch_to_caltime@month& (0+255),b
  3271                           
  3272                           ; BSR set to: 1
  3273                           ;My_header\My_RTCC.h: 167: epoch_t num;
  3274                           ;My_header\My_RTCC.h: 169: num = *ep;
  3275  00128E  C0F6  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  3276  001292  C0F7  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  3277  001296  CFDE F1EA          	movff	postinc2,epoch_to_caltime@num
  3278  00129A  CFDE F1EB          	movff	postinc2,epoch_to_caltime@num+1
  3279  00129E  CFDE F1EC          	movff	postinc2,epoch_to_caltime@num+2
  3280  0012A2  CFDE F1ED          	movff	postinc2,epoch_to_caltime@num+3
  3281                           
  3282                           ; BSR set to: 1
  3283                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  3284  0012A6  0EEA               	movlw	low epoch_to_caltime@num
  3285  0012A8  0100               	movlb	0	; () banked
  3286  0012AA  6FEC               	movwf	get_quot_rem@quot& (0+255),b
  3287  0012AC  0E01               	movlw	high epoch_to_caltime@num
  3288  0012AE  0100               	movlb	0	; () banked
  3289  0012B0  6FED               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3290  0012B2  0E3C               	movlw	60
  3291  0012B4  0100               	movlb	0	; () banked
  3292  0012B6  6FEE               	movwf	get_quot_rem@div& (0+255),b
  3293  0012B8  ECFB  F00B         	call	_get_quot_rem	;wreg free
  3294  0012BC  0100               	movlb	0	; () banked
  3295  0012BE  51EC               	movf	?_get_quot_rem& (0+255),w,b
  3296  0012C0  C0F4  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  3297  0012C4  C0F5  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  3298  0012C8  6EDF               	movwf	indf2,c
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  3302  0012CA  0EEA               	movlw	low epoch_to_caltime@num
  3303  0012CC  0100               	movlb	0	; () banked
  3304  0012CE  6FEC               	movwf	get_quot_rem@quot& (0+255),b
  3305  0012D0  0E01               	movlw	high epoch_to_caltime@num
  3306  0012D2  0100               	movlb	0	; () banked
  3307  0012D4  6FED               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3308  0012D6  0E3C               	movlw	60
  3309  0012D8  0100               	movlb	0	; () banked
  3310  0012DA  6FEE               	movwf	get_quot_rem@div& (0+255),b
  3311  0012DC  ECFB  F00B         	call	_get_quot_rem	;wreg free
  3312  0012E0  0100               	movlb	0	; () banked
  3313  0012E2  EE20 F001          	lfsr	2,1
  3314  0012E6  51F4               	movf	epoch_to_caltime@ct& (0+255),w,b
  3315  0012E8  26D9               	addwf	fsr2l,f,c
  3316  0012EA  51F5               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3317  0012EC  22DA               	addwfc	fsr2h,f,c
  3318  0012EE  0100               	movlb	0	; () banked
  3319  0012F0  C0EC  FFDF         	movff	?_get_quot_rem,indf2
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  3323  0012F4  0EEA               	movlw	low epoch_to_caltime@num
  3324  0012F6  0100               	movlb	0	; () banked
  3325  0012F8  6FEC               	movwf	get_quot_rem@quot& (0+255),b
  3326  0012FA  0E01               	movlw	high epoch_to_caltime@num
  3327  0012FC  0100               	movlb	0	; () banked
  3328  0012FE  6FED               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3329  001300  0E18               	movlw	24
  3330  001302  0100               	movlb	0	; () banked
  3331  001304  6FEE               	movwf	get_quot_rem@div& (0+255),b
  3332  001306  ECFB  F00B         	call	_get_quot_rem	;wreg free
  3333  00130A  0100               	movlb	0	; () banked
  3334  00130C  EE20 F002          	lfsr	2,2
  3335  001310  51F4               	movf	epoch_to_caltime@ct& (0+255),w,b
  3336  001312  26D9               	addwf	fsr2l,f,c
  3337  001314  51F5               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3338  001316  22DA               	addwfc	fsr2h,f,c
  3339  001318  0100               	movlb	0	; () banked
  3340  00131A  C0EC  FFDF         	movff	?_get_quot_rem,indf2
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;My_header\My_RTCC.h: 173: day = num;
  3344  00131E  C1EA  F1E6         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  3345  001322  C1EB  F1E7         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  3349  001326  C1E6  F1E4         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  3350  00132A  C1E7  F1E5         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;My_header\My_RTCC.h: 176: num += 6;
  3354  00132E  0E06               	movlw	6
  3355  001330  0101               	movlb	1	; () banked
  3356  001332  27EA               	addwf	epoch_to_caltime@num& (0+255),f,b
  3357  001334  0E00               	movlw	0
  3358  001336  23EB               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  3359  001338  23EC               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  3360  00133A  23ED               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  3361                           
  3362                           ; BSR set to: 1
  3363                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  3364  00133C  0EEA               	movlw	low epoch_to_caltime@num
  3365  00133E  0100               	movlb	0	; () banked
  3366  001340  6FEC               	movwf	get_quot_rem@quot& (0+255),b
  3367  001342  0E01               	movlw	high epoch_to_caltime@num
  3368  001344  0100               	movlb	0	; () banked
  3369  001346  6FED               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3370  001348  0E07               	movlw	7
  3371  00134A  0100               	movlb	0	; () banked
  3372  00134C  6FEE               	movwf	get_quot_rem@div& (0+255),b
  3373  00134E  ECFB  F00B         	call	_get_quot_rem	;wreg free
  3374  001352  0100               	movlb	0	; () banked
  3375  001354  EE20 F003          	lfsr	2,3
  3376  001358  51F4               	movf	epoch_to_caltime@ct& (0+255),w,b
  3377  00135A  26D9               	addwf	fsr2l,f,c
  3378  00135C  51F5               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3379  00135E  22DA               	addwfc	fsr2h,f,c
  3380  001360  0100               	movlb	0	; () banked
  3381  001362  C0EC  FFDF         	movff	?_get_quot_rem,indf2
  3382                           
  3383                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  3384  001366  D03F               	goto	l6634
  3385  001368                     l986:
  3386                           
  3387                           ; BSR set to: 1
  3388                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  3389  001368  848A               	bsf	3978,2,c	;volatile
  3390                           
  3391                           ; BSR set to: 1
  3392                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  3393  00136A  C1E9  F020         	movff	epoch_to_caltime@month,month_length@month
  3394  00136E  0101               	movlb	1	; () banked
  3395  001370  51E8               	movf	epoch_to_caltime@year& (0+255),w,b
  3396  001372  EC25  F00B         	call	_month_length
  3397  001376  0100               	movlb	0	; () banked
  3398  001378  6FF8               	movwf	??_epoch_to_caltime& (0+255),b
  3399  00137A  6BF9               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  3400  00137C  0100               	movlb	0	; () banked
  3401  00137E  1FF8               	comf	??_epoch_to_caltime& (0+255),f,b
  3402  001380  1FF9               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3403  001382  4BF8               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3404  001384  2BF9               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3405  001386  0101               	movlb	1	; () banked
  3406  001388  51E6               	movf	epoch_to_caltime@day& (0+255),w,b
  3407  00138A  0100               	movlb	0	; () banked
  3408  00138C  25F8               	addwf	??_epoch_to_caltime& (0+255),w,b
  3409  00138E  0101               	movlb	1	; () banked
  3410  001390  6FE6               	movwf	epoch_to_caltime@day& (0+255),b
  3411  001392  0101               	movlb	1	; () banked
  3412  001394  51E7               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  3413  001396  0100               	movlb	0	; () banked
  3414  001398  21F9               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3415  00139A  0101               	movlb	1	; () banked
  3416  00139C  6FE7               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  3417                           
  3418                           ; BSR set to: 1
  3419                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  3420  00139E  0E0C               	movlw	12
  3421  0013A0  0101               	movlb	1	; () banked
  3422  0013A2  19E9               	xorwf	epoch_to_caltime@month& (0+255),w,b
  3423  0013A4  A4D8               	btfss	status,2,c
  3424  0013A6  D019               	goto	l6628
  3425                           
  3426                           ; BSR set to: 1
  3427                           ;My_header\My_RTCC.h: 190: month = 1;
  3428  0013A8  0E01               	movlw	1
  3429  0013AA  0101               	movlb	1	; () banked
  3430  0013AC  6FE9               	movwf	epoch_to_caltime@month& (0+255),b
  3431                           
  3432                           ; BSR set to: 1
  3433                           ;My_header\My_RTCC.h: 191: year++;
  3434  0013AE  0101               	movlb	1	; () banked
  3435  0013B0  2BE8               	incf	epoch_to_caltime@year& (0+255),f,b
  3436                           
  3437                           ; BSR set to: 1
  3438                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  3439  0013B2  0E63               	movlw	99
  3440  0013B4  0101               	movlb	1	; () banked
  3441  0013B6  65E8               	cpfsgt	epoch_to_caltime@year& (0+255),b
  3442  0013B8  D012               	goto	l6630
  3443                           
  3444                           ; BSR set to: 1
  3445                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  3446  0013BA  C0F6  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  3447  0013BE  C0F7  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  3448  0013C2  0E80               	movlw	128
  3449  0013C4  5EDE               	subwf	postinc2,f,c
  3450  0013C6  0E13               	movlw	19
  3451  0013C8  5ADE               	subwfb	postinc2,f,c
  3452  0013CA  0E19               	movlw	25
  3453  0013CC  5ADE               	subwfb	postinc2,f,c
  3454  0013CE  0EBC               	movlw	188
  3455  0013D0  5ADE               	subwfb	postinc2,f,c
  3456                           
  3457                           ; BSR set to: 1
  3458                           ;My_header\My_RTCC.h: 195: year = 0;
  3459  0013D2  0E00               	movlw	0
  3460  0013D4  0101               	movlb	1	; () banked
  3461  0013D6  6FE8               	movwf	epoch_to_caltime@year& (0+255),b
  3462                           
  3463                           ; BSR set to: 1
  3464                           ;My_header\My_RTCC.h: 196: }
  3465                           ;My_header\My_RTCC.h: 197: } else {
  3466  0013D8  D002               	goto	l6630
  3467  0013DA                     l6628:
  3468                           
  3469                           ; BSR set to: 1
  3470                           ;My_header\My_RTCC.h: 198: month++;
  3471  0013DA  0101               	movlb	1	; () banked
  3472  0013DC  2BE9               	incf	epoch_to_caltime@month& (0+255),f,b
  3473  0013DE                     l6630:
  3474                           
  3475                           ; BSR set to: 1
  3476                           ;My_header\My_RTCC.h: 199: }
  3477                           ;My_header\My_RTCC.h: 200: month_cache = month;
  3478  0013DE  C1E9  F0FE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  3479                           
  3480                           ; BSR set to: 1
  3481                           ;My_header\My_RTCC.h: 201: year_cache = year;
  3482  0013E2  C1E8  F0A6         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  3483  0013E6                     l6634:
  3484  0013E6  C1E9  F020         	movff	epoch_to_caltime@month,month_length@month
  3485  0013EA  0101               	movlb	1	; () banked
  3486  0013EC  51E8               	movf	epoch_to_caltime@year& (0+255),w,b
  3487  0013EE  EC25  F00B         	call	_month_length
  3488  0013F2  0100               	movlb	0	; () banked
  3489  0013F4  6FF8               	movwf	??_epoch_to_caltime& (0+255),b
  3490  0013F6  0100               	movlb	0	; () banked
  3491  0013F8  51F8               	movf	??_epoch_to_caltime& (0+255),w,b
  3492  0013FA  0101               	movlb	1	; () banked
  3493  0013FC  5DE6               	subwf	epoch_to_caltime@day& (0+255),w,b
  3494  0013FE  0E00               	movlw	0
  3495  001400  59E7               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  3496  001402  B0D8               	btfsc	status,0,c
  3497  001404  D7B1               	goto	l986
  3498                           
  3499                           ; BSR set to: 1
  3500                           ;My_header\My_RTCC.h: 202: }
  3501                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  3502                           
  3503                           ; BSR set to: 1
  3504  001406  C1E6  F0F8         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  3505  00140A  C1E7  F0F9         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  3506  00140E  0100               	movlb	0	; () banked
  3507  001410  1FF8               	comf	??_epoch_to_caltime& (0+255),f,b
  3508  001412  1FF9               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3509  001414  4BF8               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3510  001416  2BF9               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3511  001418  0101               	movlb	1	; () banked
  3512  00141A  51E4               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  3513  00141C  0100               	movlb	0	; () banked
  3514  00141E  25F8               	addwf	??_epoch_to_caltime& (0+255),w,b
  3515  001420  0100               	movlb	0	; () banked
  3516  001422  6F96               	movwf	epoch_to_caltime@day_cache& (0+255),b
  3517  001424  0101               	movlb	1	; () banked
  3518  001426  51E5               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  3519  001428  0100               	movlb	0	; () banked
  3520  00142A  21F9               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3521  00142C  0100               	movlb	0	; () banked
  3522  00142E  6F97               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;My_header\My_RTCC.h: 204: day++;
  3526  001430  0101               	movlb	1	; () banked
  3527  001432  4BE6               	infsnz	epoch_to_caltime@day& (0+255),f,b
  3528  001434  2BE7               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  3529                           
  3530                           ; BSR set to: 1
  3531                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  3532  001436  0100               	movlb	0	; () banked
  3533  001438  EE20 F006          	lfsr	2,6
  3534  00143C  51F4               	movf	epoch_to_caltime@ct& (0+255),w,b
  3535  00143E  26D9               	addwf	fsr2l,f,c
  3536  001440  51F5               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3537  001442  22DA               	addwfc	fsr2h,f,c
  3538  001444  C1E8  FFDF         	movff	epoch_to_caltime@year,indf2
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  3542  001448  0100               	movlb	0	; () banked
  3543  00144A  EE20 F005          	lfsr	2,5
  3544  00144E  51F4               	movf	epoch_to_caltime@ct& (0+255),w,b
  3545  001450  26D9               	addwf	fsr2l,f,c
  3546  001452  51F5               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3547  001454  22DA               	addwfc	fsr2h,f,c
  3548  001456  C1E9  FFDF         	movff	epoch_to_caltime@month,indf2
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  3552  00145A  0100               	movlb	0	; () banked
  3553  00145C  EE20 F004          	lfsr	2,4
  3554  001460  51F4               	movf	epoch_to_caltime@ct& (0+255),w,b
  3555  001462  26D9               	addwf	fsr2l,f,c
  3556  001464  51F5               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3557  001466  22DA               	addwfc	fsr2h,f,c
  3558  001468  C1E6  FFDF         	movff	epoch_to_caltime@day,indf2
  3559                           
  3560                           ; BSR set to: 0
  3561  00146C  0012               	return		;funcret
  3562  00146E                     __end_of_epoch_to_caltime:
  3563                           	opt stack 0
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           intcon	equ	0xFF2
  3569                           intcon2	equ	0xFF1
  3570                           postinc0	equ	0xFEE
  3571                           wreg	equ	0xFE8
  3572                           postinc1	equ	0xFE6
  3573                           postdec1	equ	0xFE5
  3574                           fsr1h	equ	0xFE2
  3575                           fsr1l	equ	0xFE1
  3576                           indf2	equ	0xFDF
  3577                           postinc2	equ	0xFDE
  3578                           postdec2	equ	0xFDD
  3579                           fsr2h	equ	0xFDA
  3580                           fsr2l	equ	0xFD9
  3581                           status	equ	0xFD8
  3582                           
  3583 ;; *************** function _get_quot_rem *****************
  3584 ;; Defined at:
  3585 ;;		line 112 in file "../My_header\My_RTCC.h"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  3588 ;;		 -> epoch_to_caltime@num(4), 
  3589 ;;  div             1   27[BANK0 ] unsigned char 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  num             4   29[BANK0 ] unsigned long 
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  4   25[BANK0 ] unsigned long 
  3594 ;; Registers used:
  3595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3602 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3604 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;Total ram usage:        8 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    5
  3608 ;; This function calls:
  3609 ;;		___lldiv
  3610 ;;		___lmul
  3611 ;; This function is called by:
  3612 ;;		_epoch_to_caltime
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text19
  3617  0017F6                     __ptext19:
  3618                           	opt stack 0
  3619  0017F6                     _get_quot_rem:
  3620                           	opt stack 23
  3621                           
  3622                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;incstack = 0
  3626  0017F6  C0EC  FFD9         	movff	get_quot_rem@quot,fsr2l
  3627  0017FA  C0ED  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  3628  0017FE  CFDE F0F0          	movff	postinc2,get_quot_rem@num
  3629  001802  CFDE F0F1          	movff	postinc2,get_quot_rem@num+1
  3630  001806  CFDE F0F2          	movff	postinc2,get_quot_rem@num+2
  3631  00180A  CFDE F0F3          	movff	postinc2,get_quot_rem@num+3
  3632                           
  3633                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
  3634  00180E  0100               	movlb	0	; () banked
  3635  001810  51EE               	movf	get_quot_rem@div& (0+255),w,b
  3636  001812  0100               	movlb	0	; () banked
  3637  001814  6FD7               	movwf	___lldiv@divisor& (0+255),b
  3638  001816  6BD8               	clrf	(___lldiv@divisor+1)& (0+255),b
  3639  001818  6BD9               	clrf	(___lldiv@divisor+2)& (0+255),b
  3640  00181A  6BDA               	clrf	(___lldiv@divisor+3)& (0+255),b
  3641  00181C  C0F0  F0D3         	movff	get_quot_rem@num,___lldiv@dividend
  3642  001820  C0F1  F0D4         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  3643  001824  C0F2  F0D5         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  3644  001828  C0F3  F0D6         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  3645  00182C  EC90  F00D         	call	___lldiv	;wreg free
  3646  001830  C0EC  FFD9         	movff	get_quot_rem@quot,fsr2l
  3647  001834  C0ED  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  3648  001838  0100               	movlb	0	; () banked
  3649  00183A  C0D3  FFDE         	movff	?___lldiv,postinc2
  3650  00183E  0100               	movlb	0	; () banked
  3651  001840  C0D4  FFDE         	movff	?___lldiv+1,postinc2
  3652  001844  0100               	movlb	0	; () banked
  3653  001846  C0D5  FFDE         	movff	?___lldiv+2,postinc2
  3654  00184A  0100               	movlb	0	; () banked
  3655  00184C  C0D6  FFDD         	movff	?___lldiv+3,postdec2
  3656  001850  52DD               	movf	postdec2,f,c
  3657  001852  52DD               	movf	postdec2,f,c
  3658  001854  CFDE F0E0          	movff	postinc2,___lmul@multiplier
  3659  001858  CFDE F0E1          	movff	postinc2,___lmul@multiplier+1
  3660  00185C  CFDE F0E2          	movff	postinc2,___lmul@multiplier+2
  3661  001860  CFDE F0E3          	movff	postinc2,___lmul@multiplier+3
  3662  001864  0100               	movlb	0	; () banked
  3663  001866  51EE               	movf	get_quot_rem@div& (0+255),w,b
  3664  001868  0100               	movlb	0	; () banked
  3665  00186A  6FE4               	movwf	___lmul@multiplicand& (0+255),b
  3666  00186C  6BE5               	clrf	(___lmul@multiplicand+1)& (0+255),b
  3667  00186E  6BE6               	clrf	(___lmul@multiplicand+2)& (0+255),b
  3668  001870  6BE7               	clrf	(___lmul@multiplicand+3)& (0+255),b
  3669  001872  EC3F  F010         	call	___lmul	;wreg free
  3670  001876  0100               	movlb	0	; () banked
  3671  001878  1FE0               	comf	?___lmul& (0+255),f,b
  3672  00187A  0100               	movlb	0	; () banked
  3673  00187C  1FE1               	comf	(?___lmul+1)& (0+255),f,b
  3674  00187E  0100               	movlb	0	; () banked
  3675  001880  1FE2               	comf	(?___lmul+2)& (0+255),f,b
  3676  001882  0100               	movlb	0	; () banked
  3677  001884  1FE3               	comf	(?___lmul+3)& (0+255),f,b
  3678  001886  0100               	movlb	0	; () banked
  3679  001888  2BE0               	incf	?___lmul& (0+255),f,b
  3680  00188A  0E00               	movlw	0
  3681  00188C  0100               	movlb	0	; () banked
  3682  00188E  23E1               	addwfc	(?___lmul+1)& (0+255),f,b
  3683  001890  0100               	movlb	0	; () banked
  3684  001892  23E2               	addwfc	(?___lmul+2)& (0+255),f,b
  3685  001894  0100               	movlb	0	; () banked
  3686  001896  23E3               	addwfc	(?___lmul+3)& (0+255),f,b
  3687  001898  0100               	movlb	0	; () banked
  3688  00189A  51F0               	movf	get_quot_rem@num& (0+255),w,b
  3689  00189C  0100               	movlb	0	; () banked
  3690  00189E  25E0               	addwf	?___lmul& (0+255),w,b
  3691  0018A0  0100               	movlb	0	; () banked
  3692  0018A2  6FEC               	movwf	?_get_quot_rem& (0+255),b
  3693  0018A4  0100               	movlb	0	; () banked
  3694  0018A6  51F1               	movf	(get_quot_rem@num+1)& (0+255),w,b
  3695  0018A8  0100               	movlb	0	; () banked
  3696  0018AA  21E1               	addwfc	(?___lmul+1)& (0+255),w,b
  3697  0018AC  0100               	movlb	0	; () banked
  3698  0018AE  6FED               	movwf	(?_get_quot_rem+1)& (0+255),b
  3699  0018B0  0100               	movlb	0	; () banked
  3700  0018B2  51F2               	movf	(get_quot_rem@num+2)& (0+255),w,b
  3701  0018B4  0100               	movlb	0	; () banked
  3702  0018B6  21E2               	addwfc	(?___lmul+2)& (0+255),w,b
  3703  0018B8  0100               	movlb	0	; () banked
  3704  0018BA  6FEE               	movwf	(?_get_quot_rem+2)& (0+255),b
  3705  0018BC  0100               	movlb	0	; () banked
  3706  0018BE  51F3               	movf	(get_quot_rem@num+3)& (0+255),w,b
  3707  0018C0  0100               	movlb	0	; () banked
  3708  0018C2  21E3               	addwfc	(?___lmul+3)& (0+255),w,b
  3709  0018C4  0100               	movlb	0	; () banked
  3710  0018C6  6FEF               	movwf	(?_get_quot_rem+3)& (0+255),b
  3711  0018C8  0012               	return	
  3712  0018CA                     __end_of_get_quot_rem:
  3713                           	opt stack 0
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           intcon	equ	0xFF2
  3719                           intcon2	equ	0xFF1
  3720                           postinc0	equ	0xFEE
  3721                           wreg	equ	0xFE8
  3722                           postinc1	equ	0xFE6
  3723                           postdec1	equ	0xFE5
  3724                           fsr1h	equ	0xFE2
  3725                           fsr1l	equ	0xFE1
  3726                           indf2	equ	0xFDF
  3727                           postinc2	equ	0xFDE
  3728                           postdec2	equ	0xFDD
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function ___lldiv *****************
  3734 ;; Defined at:
  3735 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  dividend        4    0[BANK0 ] unsigned long 
  3738 ;;  divisor         4    4[BANK0 ] unsigned long 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  quotient        4    8[BANK0 ] unsigned long 
  3741 ;;  counter         1   12[BANK0 ] unsigned char 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  4    0[BANK0 ] unsigned long 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3751 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;Total ram usage:       13 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:    4
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_get_quot_rem
  3762 ;;		_CTMU_read
  3763 ;;		_my_utoa32
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text20
  3768  001B20                     __ptext20:
  3769                           	opt stack 0
  3770  001B20                     ___lldiv:
  3771                           	opt stack 23
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;incstack = 0
  3775  001B20  0E00               	movlw	0
  3776  001B22  0100               	movlb	0	; () banked
  3777  001B24  6FDB               	movwf	___lldiv@quotient& (0+255),b
  3778  001B26  0E00               	movlw	0
  3779  001B28  6FDC               	movwf	(___lldiv@quotient+1)& (0+255),b
  3780  001B2A  0E00               	movlw	0
  3781  001B2C  6FDD               	movwf	(___lldiv@quotient+2)& (0+255),b
  3782  001B2E  0E00               	movlw	0
  3783  001B30  6FDE               	movwf	(___lldiv@quotient+3)& (0+255),b
  3784                           
  3785                           ; BSR set to: 0
  3786  001B32  0100               	movlb	0	; () banked
  3787  001B34  51D7               	movf	___lldiv@divisor& (0+255),w,b
  3788  001B36  0100               	movlb	0	; () banked
  3789  001B38  11D8               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3790  001B3A  0100               	movlb	0	; () banked
  3791  001B3C  11D9               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3792  001B3E  0100               	movlb	0	; () banked
  3793  001B40  11DA               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3794  001B42  B4D8               	btfsc	status,2,c
  3795  001B44  D042               	goto	l1498
  3796                           
  3797                           ; BSR set to: 0
  3798  001B46  0E01               	movlw	1
  3799  001B48  0100               	movlb	0	; () banked
  3800  001B4A  6FDF               	movwf	___lldiv@counter& (0+255),b
  3801  001B4C  D008               	goto	l6424
  3802  001B4E                     l6422:
  3803                           
  3804                           ; BSR set to: 0
  3805  001B4E  0100               	movlb	0	; () banked
  3806  001B50  90D8               	bcf	status,0,c
  3807  001B52  37D7               	rlcf	___lldiv@divisor& (0+255),f,b
  3808  001B54  37D8               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3809  001B56  37D9               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3810  001B58  37DA               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3811  001B5A  0100               	movlb	0	; () banked
  3812  001B5C  2BDF               	incf	___lldiv@counter& (0+255),f,b
  3813  001B5E                     l6424:
  3814                           
  3815                           ; BSR set to: 0
  3816  001B5E  0100               	movlb	0	; () banked
  3817  001B60  AFDA               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  3818  001B62  D7F5               	goto	l6422
  3819  001B64                     l6426:
  3820                           
  3821                           ; BSR set to: 0
  3822  001B64  0100               	movlb	0	; () banked
  3823  001B66  90D8               	bcf	status,0,c
  3824  001B68  37DB               	rlcf	___lldiv@quotient& (0+255),f,b
  3825  001B6A  37DC               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3826  001B6C  37DD               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3827  001B6E  37DE               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3828                           
  3829                           ; BSR set to: 0
  3830  001B70  0100               	movlb	0	; () banked
  3831  001B72  51D7               	movf	___lldiv@divisor& (0+255),w,b
  3832  001B74  0100               	movlb	0	; () banked
  3833  001B76  5DD3               	subwf	___lldiv@dividend& (0+255),w,b
  3834  001B78  0100               	movlb	0	; () banked
  3835  001B7A  51D8               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3836  001B7C  0100               	movlb	0	; () banked
  3837  001B7E  59D4               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3838  001B80  0100               	movlb	0	; () banked
  3839  001B82  51D9               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3840  001B84  0100               	movlb	0	; () banked
  3841  001B86  59D5               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3842  001B88  0100               	movlb	0	; () banked
  3843  001B8A  51DA               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3844  001B8C  0100               	movlb	0	; () banked
  3845  001B8E  59D6               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3846  001B90  A0D8               	btfss	status,0,c
  3847  001B92  D012               	goto	l6434
  3848                           
  3849                           ; BSR set to: 0
  3850  001B94  0100               	movlb	0	; () banked
  3851  001B96  51D7               	movf	___lldiv@divisor& (0+255),w,b
  3852  001B98  0100               	movlb	0	; () banked
  3853  001B9A  5FD3               	subwf	___lldiv@dividend& (0+255),f,b
  3854  001B9C  0100               	movlb	0	; () banked
  3855  001B9E  51D8               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3856  001BA0  0100               	movlb	0	; () banked
  3857  001BA2  5BD4               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3858  001BA4  0100               	movlb	0	; () banked
  3859  001BA6  51D9               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3860  001BA8  0100               	movlb	0	; () banked
  3861  001BAA  5BD5               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3862  001BAC  0100               	movlb	0	; () banked
  3863  001BAE  51DA               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3864  001BB0  0100               	movlb	0	; () banked
  3865  001BB2  5BD6               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3866                           
  3867                           ; BSR set to: 0
  3868  001BB4  0100               	movlb	0	; () banked
  3869  001BB6  81DB               	bsf	___lldiv@quotient& (0+255),0,b
  3870  001BB8                     l6434:
  3871                           
  3872                           ; BSR set to: 0
  3873  001BB8  0100               	movlb	0	; () banked
  3874  001BBA  90D8               	bcf	status,0,c
  3875  001BBC  33DA               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3876  001BBE  33D9               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3877  001BC0  33D8               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3878  001BC2  33D7               	rrcf	___lldiv@divisor& (0+255),f,b
  3879                           
  3880                           ; BSR set to: 0
  3881  001BC4  0100               	movlb	0	; () banked
  3882  001BC6  2FDF               	decfsz	___lldiv@counter& (0+255),f,b
  3883  001BC8  D7CD               	goto	l6426
  3884  001BCA                     l1498:
  3885                           
  3886                           ; BSR set to: 0
  3887  001BCA  C0DB  F0D3         	movff	___lldiv@quotient,?___lldiv
  3888  001BCE  C0DC  F0D4         	movff	___lldiv@quotient+1,?___lldiv+1
  3889  001BD2  C0DD  F0D5         	movff	___lldiv@quotient+2,?___lldiv+2
  3890  001BD6  C0DE  F0D6         	movff	___lldiv@quotient+3,?___lldiv+3
  3891                           
  3892                           ; BSR set to: 0
  3893  001BDA  0012               	return		;funcret
  3894  001BDC                     __end_of___lldiv:
  3895                           	opt stack 0
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           intcon	equ	0xFF2
  3901                           intcon2	equ	0xFF1
  3902                           postinc0	equ	0xFEE
  3903                           wreg	equ	0xFE8
  3904                           postinc1	equ	0xFE6
  3905                           postdec1	equ	0xFE5
  3906                           fsr1h	equ	0xFE2
  3907                           fsr1l	equ	0xFE1
  3908                           indf2	equ	0xFDF
  3909                           postinc2	equ	0xFDE
  3910                           postdec2	equ	0xFDD
  3911                           fsr2h	equ	0xFDA
  3912                           fsr2l	equ	0xFD9
  3913                           status	equ	0xFD8
  3914                           
  3915 ;; *************** function _caltime_to_RTCC *****************
  3916 ;; Defined at:
  3917 ;;		line 137 in file "../My_header\My_RTCC.h"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  ct              2    8[BANK0 ] PTR struct .
  3920 ;;		 -> caltime_now(7), 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;		None               void
  3925 ;; Registers used:
  3926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;Total ram usage:        2 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    6
  3939 ;; This function calls:
  3940 ;;		_d_to_x
  3941 ;; This function is called by:
  3942 ;;		_RTCC_from_epoch
  3943 ;;		_RTCC_from_caltime
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text21
  3948  0018CA                     __ptext21:
  3949                           	opt stack 0
  3950  0018CA                     _caltime_to_RTCC:
  3951                           	opt stack 23
  3952  0018CA                     l973:
  3953  0018CA  010F               	movlb	15	; () banked
  3954  0018CC  B93F               	btfsc	63,4,b	;volatile
  3955  0018CE  D7FD               	goto	l973
  3956                           
  3957                           ; BSR set to: 15
  3958                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
  3959  0018D0  010F               	movlb	15	; () banked
  3960  0018D2  813F               	bsf	63,0,b	;volatile
  3961                           
  3962                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
  3963  0018D4  010F               	movlb	15	; () banked
  3964  0018D6  833F               	bsf	63,1,b	;volatile
  3965                           
  3966                           ; BSR set to: 15
  3967                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
  3968  0018D8  0100               	movlb	0	; () banked
  3969  0018DA  EE20 F006          	lfsr	2,6
  3970  0018DE  51DB               	movf	caltime_to_RTCC@ct& (0+255),w,b
  3971  0018E0  26D9               	addwf	fsr2l,f,c
  3972  0018E2  51DC               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  3973  0018E4  22DA               	addwfc	fsr2h,f,c
  3974  0018E6  50DF               	movf	indf2,w,c
  3975  0018E8  ECF1  F011         	call	_d_to_x
  3976  0018EC  010F               	movlb	15	; () banked
  3977  0018EE  6F3A               	movwf	58,b	;volatile
  3978                           
  3979                           ; BSR set to: 15
  3980                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
  3981  0018F0  0E00               	movlw	0
  3982  0018F2  010F               	movlb	15	; () banked
  3983  0018F4  6F3B               	movwf	59,b	;volatile
  3984                           
  3985                           ; BSR set to: 15
  3986                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
  3987  0018F6  010F               	movlb	15	; () banked
  3988  0018F8  913F               	bcf	63,0,b	;volatile
  3989                           
  3990                           ; BSR set to: 15
  3991                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
  3992  0018FA  010F               	movlb	15	; () banked
  3993  0018FC  833F               	bsf	63,1,b	;volatile
  3994                           
  3995                           ; BSR set to: 15
  3996                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
  3997  0018FE  0100               	movlb	0	; () banked
  3998  001900  EE20 F004          	lfsr	2,4
  3999  001904  51DB               	movf	caltime_to_RTCC@ct& (0+255),w,b
  4000  001906  26D9               	addwf	fsr2l,f,c
  4001  001908  51DC               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  4002  00190A  22DA               	addwfc	fsr2h,f,c
  4003  00190C  50DF               	movf	indf2,w,c
  4004  00190E  ECF1  F011         	call	_d_to_x
  4005  001912  010F               	movlb	15	; () banked
  4006  001914  6F3A               	movwf	58,b	;volatile
  4007                           
  4008                           ; BSR set to: 15
  4009                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
  4010  001916  0100               	movlb	0	; () banked
  4011  001918  EE20 F005          	lfsr	2,5
  4012  00191C  51DB               	movf	caltime_to_RTCC@ct& (0+255),w,b
  4013  00191E  26D9               	addwf	fsr2l,f,c
  4014  001920  51DC               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  4015  001922  22DA               	addwfc	fsr2h,f,c
  4016  001924  50DF               	movf	indf2,w,c
  4017  001926  ECF1  F011         	call	_d_to_x
  4018  00192A  010F               	movlb	15	; () banked
  4019  00192C  6F3B               	movwf	59,b	;volatile
  4020                           
  4021                           ; BSR set to: 15
  4022                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
  4023  00192E  010F               	movlb	15	; () banked
  4024  001930  813F               	bsf	63,0,b	;volatile
  4025                           
  4026                           ; BSR set to: 15
  4027                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
  4028  001932  010F               	movlb	15	; () banked
  4029  001934  933F               	bcf	63,1,b	;volatile
  4030                           
  4031                           ; BSR set to: 15
  4032                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
  4033  001936  0100               	movlb	0	; () banked
  4034  001938  EE20 F002          	lfsr	2,2
  4035  00193C  51DB               	movf	caltime_to_RTCC@ct& (0+255),w,b
  4036  00193E  26D9               	addwf	fsr2l,f,c
  4037  001940  51DC               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  4038  001942  22DA               	addwfc	fsr2h,f,c
  4039  001944  50DF               	movf	indf2,w,c
  4040  001946  ECF1  F011         	call	_d_to_x
  4041  00194A  010F               	movlb	15	; () banked
  4042  00194C  6F3A               	movwf	58,b	;volatile
  4043                           
  4044                           ; BSR set to: 15
  4045                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
  4046  00194E  0100               	movlb	0	; () banked
  4047  001950  EE20 F003          	lfsr	2,3
  4048  001954  51DB               	movf	caltime_to_RTCC@ct& (0+255),w,b
  4049  001956  26D9               	addwf	fsr2l,f,c
  4050  001958  51DC               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  4051  00195A  22DA               	addwfc	fsr2h,f,c
  4052  00195C  50DF               	movf	indf2,w,c
  4053  00195E  ECF1  F011         	call	_d_to_x
  4054  001962  010F               	movlb	15	; () banked
  4055  001964  6F3B               	movwf	59,b	;volatile
  4056                           
  4057                           ; BSR set to: 15
  4058                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
  4059  001966  010F               	movlb	15	; () banked
  4060  001968  913F               	bcf	63,0,b	;volatile
  4061                           
  4062                           ; BSR set to: 15
  4063                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
  4064  00196A  010F               	movlb	15	; () banked
  4065  00196C  933F               	bcf	63,1,b	;volatile
  4066                           
  4067                           ; BSR set to: 15
  4068                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
  4069  00196E  C0DB  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
  4070  001972  C0DC  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
  4071  001976  50DF               	movf	indf2,w,c
  4072  001978  ECF1  F011         	call	_d_to_x
  4073  00197C  010F               	movlb	15	; () banked
  4074  00197E  6F3A               	movwf	58,b	;volatile
  4075                           
  4076                           ; BSR set to: 15
  4077                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
  4078  001980  0100               	movlb	0	; () banked
  4079  001982  EE20 F001          	lfsr	2,1
  4080  001986  51DB               	movf	caltime_to_RTCC@ct& (0+255),w,b
  4081  001988  26D9               	addwf	fsr2l,f,c
  4082  00198A  51DC               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  4083  00198C  22DA               	addwfc	fsr2h,f,c
  4084  00198E  50DF               	movf	indf2,w,c
  4085  001990  ECF1  F011         	call	_d_to_x
  4086  001994  010F               	movlb	15	; () banked
  4087  001996  6F3B               	movwf	59,b	;volatile
  4088                           
  4089                           ; BSR set to: 15
  4090  001998  0012               	return		;funcret
  4091  00199A                     __end_of_caltime_to_RTCC:
  4092                           	opt stack 0
  4093                           tblptru	equ	0xFF8
  4094                           tblptrh	equ	0xFF7
  4095                           tblptrl	equ	0xFF6
  4096                           tablat	equ	0xFF5
  4097                           intcon	equ	0xFF2
  4098                           intcon2	equ	0xFF1
  4099                           postinc0	equ	0xFEE
  4100                           wreg	equ	0xFE8
  4101                           postinc1	equ	0xFE6
  4102                           postdec1	equ	0xFE5
  4103                           fsr1h	equ	0xFE2
  4104                           fsr1l	equ	0xFE1
  4105                           indf2	equ	0xFDF
  4106                           postinc2	equ	0xFDE
  4107                           postdec2	equ	0xFDD
  4108                           fsr2h	equ	0xFDA
  4109                           fsr2l	equ	0xFD9
  4110                           status	equ	0xFD8
  4111                           
  4112 ;; *************** function _d_to_x *****************
  4113 ;; Defined at:
  4114 ;;		line 73 in file "../My_header\My_RTCC.h"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  dec             1    wreg     unsigned char 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  dec             1   31[COMRAM] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      unsigned char 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4132 ;;Total ram usage:        1 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    5
  4135 ;; This function calls:
  4136 ;;		___awdiv
  4137 ;; This function is called by:
  4138 ;;		_caltime_to_RTCC
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text22
  4143  0023E2                     __ptext22:
  4144                           	opt stack 0
  4145  0023E2                     _d_to_x:
  4146                           	opt stack 23
  4147                           
  4148                           ; BSR set to: 15
  4149                           ;incstack = 0
  4150                           ;d_to_x@dec stored from wreg
  4151  0023E2  6E20               	movwf	d_to_x@dec,c
  4152                           
  4153                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
  4154  0023E4  C020  F0D3         	movff	d_to_x@dec,___awdiv@dividend
  4155  0023E8  0100               	movlb	0	; () banked
  4156  0023EA  6BD4               	clrf	(___awdiv@dividend+1)& (0+255),b
  4157  0023EC  0E00               	movlw	0
  4158  0023EE  0100               	movlb	0	; () banked
  4159  0023F0  6FD6               	movwf	(___awdiv@divisor+1)& (0+255),b
  4160  0023F2  0E0A               	movlw	10
  4161  0023F4  6FD5               	movwf	___awdiv@divisor& (0+255),b
  4162  0023F6  EC31  F00D         	call	___awdiv	;wreg free
  4163  0023FA  0100               	movlb	0	; () banked
  4164  0023FC  51D3               	movf	?___awdiv& (0+255),w,b
  4165  0023FE  0D06               	mullw	6
  4166  002400  50F3               	movf	prodl,w,c
  4167  002402  2420               	addwf	d_to_x@dec,w,c
  4168  002404  0012               	return	
  4169  002406                     __end_of_d_to_x:
  4170                           	opt stack 0
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           prodl	equ	0xFF3
  4176                           intcon	equ	0xFF2
  4177                           intcon2	equ	0xFF1
  4178                           postinc0	equ	0xFEE
  4179                           wreg	equ	0xFE8
  4180                           postinc1	equ	0xFE6
  4181                           postdec1	equ	0xFE5
  4182                           fsr1h	equ	0xFE2
  4183                           fsr1l	equ	0xFE1
  4184                           indf2	equ	0xFDF
  4185                           postinc2	equ	0xFDE
  4186                           postdec2	equ	0xFDD
  4187                           fsr2h	equ	0xFDA
  4188                           fsr2l	equ	0xFD9
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function ___awdiv *****************
  4192 ;; Defined at:
  4193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  dividend        2    0[BANK0 ] int 
  4196 ;;  divisor         2    2[BANK0 ] int 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  quotient        2    6[BANK0 ] int 
  4199 ;;  sign            1    5[BANK0 ] unsigned char 
  4200 ;;  counter         1    4[BANK0 ] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  2    0[BANK0 ] int 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4213 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4214 ;;Total ram usage:        8 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    4
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_d_to_x
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text23
  4225  001A62                     __ptext23:
  4226                           	opt stack 0
  4227  001A62                     ___awdiv:
  4228                           	opt stack 23
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;incstack = 0
  4232  001A62  0E00               	movlw	0
  4233  001A64  0100               	movlb	0	; () banked
  4234  001A66  6FD8               	movwf	___awdiv@sign& (0+255),b
  4235                           
  4236                           ; BSR set to: 0
  4237  001A68  0100               	movlb	0	; () banked
  4238  001A6A  AFD6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4239  001A6C  D008               	goto	l6344
  4240                           
  4241                           ; BSR set to: 0
  4242  001A6E  0100               	movlb	0	; () banked
  4243  001A70  6DD5               	negf	___awdiv@divisor& (0+255),b
  4244  001A72  1FD6               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4245  001A74  B0D8               	btfsc	status,0,c
  4246  001A76  2BD6               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4247                           
  4248                           ; BSR set to: 0
  4249  001A78  0E01               	movlw	1
  4250  001A7A  0100               	movlb	0	; () banked
  4251  001A7C  6FD8               	movwf	___awdiv@sign& (0+255),b
  4252  001A7E                     l6344:
  4253                           
  4254                           ; BSR set to: 0
  4255  001A7E  0100               	movlb	0	; () banked
  4256  001A80  AFD4               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4257  001A82  D008               	goto	l6350
  4258                           
  4259                           ; BSR set to: 0
  4260  001A84  0100               	movlb	0	; () banked
  4261  001A86  6DD3               	negf	___awdiv@dividend& (0+255),b
  4262  001A88  1FD4               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4263  001A8A  B0D8               	btfsc	status,0,c
  4264  001A8C  2BD4               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4265                           
  4266                           ; BSR set to: 0
  4267  001A8E  0E01               	movlw	1
  4268  001A90  0100               	movlb	0	; () banked
  4269  001A92  1BD8               	xorwf	___awdiv@sign& (0+255),f,b
  4270  001A94                     l6350:
  4271                           
  4272                           ; BSR set to: 0
  4273  001A94  0E00               	movlw	0
  4274  001A96  0100               	movlb	0	; () banked
  4275  001A98  6FDA               	movwf	(___awdiv@quotient+1)& (0+255),b
  4276  001A9A  0E00               	movlw	0
  4277  001A9C  6FD9               	movwf	___awdiv@quotient& (0+255),b
  4278                           
  4279                           ; BSR set to: 0
  4280  001A9E  0100               	movlb	0	; () banked
  4281  001AA0  51D5               	movf	___awdiv@divisor& (0+255),w,b
  4282  001AA2  0100               	movlb	0	; () banked
  4283  001AA4  11D6               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4284  001AA6  B4D8               	btfsc	status,2,c
  4285  001AA8  D02C               	goto	l6372
  4286                           
  4287                           ; BSR set to: 0
  4288  001AAA  0E01               	movlw	1
  4289  001AAC  0100               	movlb	0	; () banked
  4290  001AAE  6FD7               	movwf	___awdiv@counter& (0+255),b
  4291  001AB0  D006               	goto	l6358
  4292  001AB2                     l6356:
  4293                           
  4294                           ; BSR set to: 0
  4295  001AB2  0100               	movlb	0	; () banked
  4296  001AB4  90D8               	bcf	status,0,c
  4297  001AB6  37D5               	rlcf	___awdiv@divisor& (0+255),f,b
  4298  001AB8  37D6               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4299  001ABA  0100               	movlb	0	; () banked
  4300  001ABC  2BD7               	incf	___awdiv@counter& (0+255),f,b
  4301  001ABE                     l6358:
  4302                           
  4303                           ; BSR set to: 0
  4304  001ABE  0100               	movlb	0	; () banked
  4305  001AC0  AFD6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4306  001AC2  D7F7               	goto	l6356
  4307  001AC4                     l6360:
  4308                           
  4309                           ; BSR set to: 0
  4310  001AC4  0100               	movlb	0	; () banked
  4311  001AC6  90D8               	bcf	status,0,c
  4312  001AC8  37D9               	rlcf	___awdiv@quotient& (0+255),f,b
  4313  001ACA  37DA               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4314                           
  4315                           ; BSR set to: 0
  4316  001ACC  0100               	movlb	0	; () banked
  4317  001ACE  51D5               	movf	___awdiv@divisor& (0+255),w,b
  4318  001AD0  0100               	movlb	0	; () banked
  4319  001AD2  5DD3               	subwf	___awdiv@dividend& (0+255),w,b
  4320  001AD4  0100               	movlb	0	; () banked
  4321  001AD6  51D6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4322  001AD8  0100               	movlb	0	; () banked
  4323  001ADA  59D4               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4324  001ADC  A0D8               	btfss	status,0,c
  4325  001ADE  D00A               	goto	l6368
  4326                           
  4327                           ; BSR set to: 0
  4328  001AE0  0100               	movlb	0	; () banked
  4329  001AE2  51D5               	movf	___awdiv@divisor& (0+255),w,b
  4330  001AE4  0100               	movlb	0	; () banked
  4331  001AE6  5FD3               	subwf	___awdiv@dividend& (0+255),f,b
  4332  001AE8  0100               	movlb	0	; () banked
  4333  001AEA  51D6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4334  001AEC  0100               	movlb	0	; () banked
  4335  001AEE  5BD4               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4336                           
  4337                           ; BSR set to: 0
  4338  001AF0  0100               	movlb	0	; () banked
  4339  001AF2  81D9               	bsf	___awdiv@quotient& (0+255),0,b
  4340  001AF4                     l6368:
  4341                           
  4342                           ; BSR set to: 0
  4343  001AF4  0100               	movlb	0	; () banked
  4344  001AF6  90D8               	bcf	status,0,c
  4345  001AF8  33D6               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4346  001AFA  33D5               	rrcf	___awdiv@divisor& (0+255),f,b
  4347                           
  4348                           ; BSR set to: 0
  4349  001AFC  0100               	movlb	0	; () banked
  4350  001AFE  2FD7               	decfsz	___awdiv@counter& (0+255),f,b
  4351  001B00  D7E1               	goto	l6360
  4352  001B02                     l6372:
  4353                           
  4354                           ; BSR set to: 0
  4355  001B02  0100               	movlb	0	; () banked
  4356  001B04  51D8               	movf	___awdiv@sign& (0+255),w,b
  4357  001B06  0100               	movlb	0	; () banked
  4358  001B08  B4D8               	btfsc	status,2,c
  4359  001B0A  D005               	goto	l6376
  4360                           
  4361                           ; BSR set to: 0
  4362  001B0C  0100               	movlb	0	; () banked
  4363  001B0E  6DD9               	negf	___awdiv@quotient& (0+255),b
  4364  001B10  1FDA               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4365  001B12  B0D8               	btfsc	status,0,c
  4366  001B14  2BDA               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4367  001B16                     l6376:
  4368                           
  4369                           ; BSR set to: 0
  4370  001B16  C0D9  F0D3         	movff	___awdiv@quotient,?___awdiv
  4371  001B1A  C0DA  F0D4         	movff	___awdiv@quotient+1,?___awdiv+1
  4372  001B1E  0012               	return	
  4373  001B20                     __end_of___awdiv:
  4374                           	opt stack 0
  4375                           tblptru	equ	0xFF8
  4376                           tblptrh	equ	0xFF7
  4377                           tblptrl	equ	0xFF6
  4378                           tablat	equ	0xFF5
  4379                           prodl	equ	0xFF3
  4380                           intcon	equ	0xFF2
  4381                           intcon2	equ	0xFF1
  4382                           postinc0	equ	0xFEE
  4383                           wreg	equ	0xFE8
  4384                           postinc1	equ	0xFE6
  4385                           postdec1	equ	0xFE5
  4386                           fsr1h	equ	0xFE2
  4387                           fsr1l	equ	0xFE1
  4388                           indf2	equ	0xFDF
  4389                           postinc2	equ	0xFDE
  4390                           postdec2	equ	0xFDD
  4391                           fsr2h	equ	0xFDA
  4392                           fsr2l	equ	0xFD9
  4393                           status	equ	0xFD8
  4394                           
  4395 ;; *************** function _RTCC_from_RTCC *****************
  4396 ;; Defined at:
  4397 ;;		line 231 in file "../My_header\My_RTCC.h"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  ct              2    0[BANK1 ] PTR struct .
  4400 ;;		 -> caltime_now(7), 
  4401 ;;  ep              2    2[BANK1 ] PTR unsigned long 
  4402 ;;		 -> epoch_now(4), 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;		None               void
  4407 ;; Registers used:
  4408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4414 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4417 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4418 ;;Total ram usage:        4 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    7
  4421 ;; This function calls:
  4422 ;;		_RTCC_to_caltime
  4423 ;;		_caltime_to_epoch
  4424 ;; This function is called by:
  4425 ;;		_main
  4426 ;;		_display_time_0802
  4427 ;;		_display_time_1602
  4428 ;;		_RTCC_adjust_time_inc
  4429 ;;		_RTCC_adjust_time_dec
  4430 ;;		_RTCC_loop
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text24
  4435  002428                     __ptext24:
  4436                           	opt stack 0
  4437  002428                     _RTCC_from_RTCC:
  4438                           	opt stack 23
  4439                           
  4440                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;incstack = 0
  4444  002428  C1E4  F0D4         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  4445  00242C  C1E5  F0D5         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  4446  002430  EC4C  F00E         	call	_RTCC_to_caltime	;wreg free
  4447                           
  4448                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  4449  002434  C1E4  F0EC         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  4450  002438  C1E5  F0ED         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  4451  00243C  C1E6  F0EE         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  4452  002440  C1E7  F0EF         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  4453  002444  ECFD  F007         	call	_caltime_to_epoch	;wreg free
  4454  002448  0012               	return		;funcret
  4455  00244A                     __end_of_RTCC_from_RTCC:
  4456                           	opt stack 0
  4457                           tblptru	equ	0xFF8
  4458                           tblptrh	equ	0xFF7
  4459                           tblptrl	equ	0xFF6
  4460                           tablat	equ	0xFF5
  4461                           prodl	equ	0xFF3
  4462                           intcon	equ	0xFF2
  4463                           intcon2	equ	0xFF1
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           postinc1	equ	0xFE6
  4467                           postdec1	equ	0xFE5
  4468                           fsr1h	equ	0xFE2
  4469                           fsr1l	equ	0xFE1
  4470                           indf2	equ	0xFDF
  4471                           postinc2	equ	0xFDE
  4472                           postdec2	equ	0xFDD
  4473                           fsr2h	equ	0xFDA
  4474                           fsr2l	equ	0xFD9
  4475                           status	equ	0xFD8
  4476                           
  4477 ;; *************** function _caltime_to_epoch *****************
  4478 ;; Defined at:
  4479 ;;		line 211 in file "../My_header\My_RTCC.h"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  ct              2   25[BANK0 ] PTR struct .
  4482 ;;		 -> caltime_now(7), 
  4483 ;;  ep              2   27[BANK0 ] PTR unsigned long 
  4484 ;;		 -> epoch_now(4), 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  month           1   39[BANK0 ] unsigned char 
  4487 ;;  month           1   34[BANK0 ] unsigned char 
  4488 ;;  year            1   33[BANK0 ] unsigned char 
  4489 ;;  epoch           4   35[BANK0 ] unsigned long 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;		None               void
  4492 ;; Registers used:
  4493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4499 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4500 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4501 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4502 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4503 ;;Total ram usage:       15 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    6
  4506 ;; This function calls:
  4507 ;;		___lmul
  4508 ;;		_month_length
  4509 ;; This function is called by:
  4510 ;;		_RTCC_from_RTCC
  4511 ;;		_RTCC_from_caltime
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text25
  4516  000FFA                     __ptext25:
  4517                           	opt stack 0
  4518  000FFA                     _caltime_to_epoch:
  4519                           	opt stack 23
  4520                           
  4521                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  4522                           
  4523                           ;incstack = 0
  4524  000FFA  0E00               	movlw	0
  4525  000FFC  0100               	movlb	0	; () banked
  4526  000FFE  6FF6               	movwf	caltime_to_epoch@epoch& (0+255),b
  4527  001000  0E00               	movlw	0
  4528  001002  6FF7               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  4529  001004  0E00               	movlw	0
  4530  001006  6FF8               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  4531  001008  0E00               	movlw	0
  4532  00100A  6FF9               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  4533                           
  4534                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  4535  00100C  0E00               	movlw	0
  4536  00100E  0100               	movlb	0	; () banked
  4537  001010  6FF4               	movwf	caltime_to_epoch@year& (0+255),b
  4538  001012  D037               	goto	l6662
  4539  001014                     l6648:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  4543  001014  0E01               	movlw	1
  4544  001016  0100               	movlb	0	; () banked
  4545  001018  6FFA               	movwf	caltime_to_epoch@month& (0+255),b
  4546  00101A                     l6650:
  4547                           
  4548                           ; BSR set to: 0
  4549  00101A  0E0C               	movlw	12
  4550  00101C  0100               	movlb	0	; () banked
  4551  00101E  65FA               	cpfsgt	caltime_to_epoch@month& (0+255),b
  4552  001020  D001               	goto	l6654
  4553  001022  D02D               	goto	l6660
  4554  001024                     l6654:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  4558  001024  C0FA  F020         	movff	caltime_to_epoch@month,month_length@month
  4559  001028  0100               	movlb	0	; () banked
  4560  00102A  51F4               	movf	caltime_to_epoch@year& (0+255),w,b
  4561  00102C  EC25  F00B         	call	_month_length
  4562  001030  0100               	movlb	0	; () banked
  4563  001032  6FF0               	movwf	??_caltime_to_epoch& (0+255),b
  4564  001034  0100               	movlb	0	; () banked
  4565  001036  51F0               	movf	??_caltime_to_epoch& (0+255),w,b
  4566  001038  0100               	movlb	0	; () banked
  4567  00103A  6FE0               	movwf	___lmul@multiplier& (0+255),b
  4568  00103C  6BE1               	clrf	(___lmul@multiplier+1)& (0+255),b
  4569  00103E  6BE2               	clrf	(___lmul@multiplier+2)& (0+255),b
  4570  001040  6BE3               	clrf	(___lmul@multiplier+3)& (0+255),b
  4571  001042  0E80               	movlw	128
  4572  001044  0100               	movlb	0	; () banked
  4573  001046  6FE4               	movwf	___lmul@multiplicand& (0+255),b
  4574  001048  0E51               	movlw	81
  4575  00104A  6FE5               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4576  00104C  0E01               	movlw	1
  4577  00104E  6FE6               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4578  001050  0E00               	movlw	0
  4579  001052  6FE7               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4580  001054  EC3F  F010         	call	___lmul	;wreg free
  4581  001058  0100               	movlb	0	; () banked
  4582  00105A  51E0               	movf	?___lmul& (0+255),w,b
  4583  00105C  0100               	movlb	0	; () banked
  4584  00105E  27F6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4585  001060  0100               	movlb	0	; () banked
  4586  001062  51E1               	movf	(?___lmul+1)& (0+255),w,b
  4587  001064  0100               	movlb	0	; () banked
  4588  001066  23F7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4589  001068  0100               	movlb	0	; () banked
  4590  00106A  51E2               	movf	(?___lmul+2)& (0+255),w,b
  4591  00106C  0100               	movlb	0	; () banked
  4592  00106E  23F8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4593  001070  0100               	movlb	0	; () banked
  4594  001072  51E3               	movf	(?___lmul+3)& (0+255),w,b
  4595  001074  0100               	movlb	0	; () banked
  4596  001076  23F9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4597                           
  4598                           ; BSR set to: 0
  4599  001078  0100               	movlb	0	; () banked
  4600  00107A  2BFA               	incf	caltime_to_epoch@month& (0+255),f,b
  4601  00107C  D7CE               	goto	l6650
  4602  00107E                     l6660:
  4603                           
  4604                           ; BSR set to: 0
  4605  00107E  0100               	movlb	0	; () banked
  4606  001080  2BF4               	incf	caltime_to_epoch@year& (0+255),f,b
  4607  001082                     l6662:
  4608                           
  4609                           ; BSR set to: 0
  4610  001082  0100               	movlb	0	; () banked
  4611  001084  EE20 F006          	lfsr	2,6
  4612  001088  51EC               	movf	caltime_to_epoch@ct& (0+255),w,b
  4613  00108A  26D9               	addwf	fsr2l,f,c
  4614  00108C  51ED               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4615  00108E  22DA               	addwfc	fsr2h,f,c
  4616  001090  50DE               	movf	postinc2,w,c
  4617  001092  0100               	movlb	0	; () banked
  4618  001094  5DF4               	subwf	caltime_to_epoch@year& (0+255),w,b
  4619  001096  A0D8               	btfss	status,0,c
  4620  001098  D7BD               	goto	l6648
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;My_header\My_RTCC.h: 216: }
  4624                           ;My_header\My_RTCC.h: 217: }
  4625                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  4626                           
  4627                           ; BSR set to: 0
  4628  00109A  0E01               	movlw	1
  4629  00109C  0100               	movlb	0	; () banked
  4630  00109E  6FF5               	movwf	caltime_to_epoch@month_3890& (0+255),b
  4631  0010A0  D032               	goto	l6670
  4632  0010A2                     l6666:
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  4636  0010A2  C0F5  F020         	movff	caltime_to_epoch@month_3890,month_length@month
  4637  0010A6  0100               	movlb	0	; () banked
  4638  0010A8  EE20 F006          	lfsr	2,6
  4639  0010AC  51EC               	movf	caltime_to_epoch@ct& (0+255),w,b
  4640  0010AE  26D9               	addwf	fsr2l,f,c
  4641  0010B0  51ED               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4642  0010B2  22DA               	addwfc	fsr2h,f,c
  4643  0010B4  50DF               	movf	indf2,w,c
  4644  0010B6  EC25  F00B         	call	_month_length
  4645  0010BA  0100               	movlb	0	; () banked
  4646  0010BC  6FF0               	movwf	??_caltime_to_epoch& (0+255),b
  4647  0010BE  0100               	movlb	0	; () banked
  4648  0010C0  51F0               	movf	??_caltime_to_epoch& (0+255),w,b
  4649  0010C2  0100               	movlb	0	; () banked
  4650  0010C4  6FE0               	movwf	___lmul@multiplier& (0+255),b
  4651  0010C6  6BE1               	clrf	(___lmul@multiplier+1)& (0+255),b
  4652  0010C8  6BE2               	clrf	(___lmul@multiplier+2)& (0+255),b
  4653  0010CA  6BE3               	clrf	(___lmul@multiplier+3)& (0+255),b
  4654  0010CC  0E80               	movlw	128
  4655  0010CE  0100               	movlb	0	; () banked
  4656  0010D0  6FE4               	movwf	___lmul@multiplicand& (0+255),b
  4657  0010D2  0E51               	movlw	81
  4658  0010D4  6FE5               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4659  0010D6  0E01               	movlw	1
  4660  0010D8  6FE6               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4661  0010DA  0E00               	movlw	0
  4662  0010DC  6FE7               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4663  0010DE  EC3F  F010         	call	___lmul	;wreg free
  4664  0010E2  0100               	movlb	0	; () banked
  4665  0010E4  51E0               	movf	?___lmul& (0+255),w,b
  4666  0010E6  0100               	movlb	0	; () banked
  4667  0010E8  27F6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4668  0010EA  0100               	movlb	0	; () banked
  4669  0010EC  51E1               	movf	(?___lmul+1)& (0+255),w,b
  4670  0010EE  0100               	movlb	0	; () banked
  4671  0010F0  23F7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4672  0010F2  0100               	movlb	0	; () banked
  4673  0010F4  51E2               	movf	(?___lmul+2)& (0+255),w,b
  4674  0010F6  0100               	movlb	0	; () banked
  4675  0010F8  23F8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4676  0010FA  0100               	movlb	0	; () banked
  4677  0010FC  51E3               	movf	(?___lmul+3)& (0+255),w,b
  4678  0010FE  0100               	movlb	0	; () banked
  4679  001100  23F9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4680                           
  4681                           ; BSR set to: 0
  4682  001102  0100               	movlb	0	; () banked
  4683  001104  2BF5               	incf	caltime_to_epoch@month_3890& (0+255),f,b
  4684  001106                     l6670:
  4685                           
  4686                           ; BSR set to: 0
  4687  001106  0100               	movlb	0	; () banked
  4688  001108  EE20 F005          	lfsr	2,5
  4689  00110C  51EC               	movf	caltime_to_epoch@ct& (0+255),w,b
  4690  00110E  26D9               	addwf	fsr2l,f,c
  4691  001110  51ED               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4692  001112  22DA               	addwfc	fsr2h,f,c
  4693  001114  50DE               	movf	postinc2,w,c
  4694  001116  0100               	movlb	0	; () banked
  4695  001118  5DF5               	subwf	caltime_to_epoch@month_3890& (0+255),w,b
  4696  00111A  A0D8               	btfss	status,0,c
  4697  00111C  D7C2               	goto	l6666
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;My_header\My_RTCC.h: 220: }
  4701                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  4702                           
  4703                           ; BSR set to: 0
  4704  00111E  0EFF               	movlw	255
  4705  001120  0100               	movlb	0	; () banked
  4706  001122  6FF0               	movwf	??_caltime_to_epoch& (0+255),b
  4707  001124  0EFF               	movlw	255
  4708  001126  0100               	movlb	0	; () banked
  4709  001128  6FF1               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  4710  00112A  0100               	movlb	0	; () banked
  4711  00112C  EE20 F004          	lfsr	2,4
  4712  001130  51EC               	movf	caltime_to_epoch@ct& (0+255),w,b
  4713  001132  26D9               	addwf	fsr2l,f,c
  4714  001134  51ED               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4715  001136  22DA               	addwfc	fsr2h,f,c
  4716  001138  50DF               	movf	indf2,w,c
  4717  00113A  0100               	movlb	0	; () banked
  4718  00113C  6FF2               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  4719  00113E  6BF3               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  4720  001140  0100               	movlb	0	; () banked
  4721  001142  51F0               	movf	??_caltime_to_epoch& (0+255),w,b
  4722  001144  0100               	movlb	0	; () banked
  4723  001146  27F2               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  4724  001148  0100               	movlb	0	; () banked
  4725  00114A  51F1               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  4726  00114C  0100               	movlb	0	; () banked
  4727  00114E  23F3               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  4728  001150  C0F2  F0E0         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  4729  001154  C0F3  F0E1         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  4730  001158  0100               	movlb	0	; () banked
  4731  00115A  0E00               	movlw	0
  4732  00115C  BFE1               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  4733  00115E  0EFF               	movlw	-1
  4734  001160  6FE2               	movwf	(___lmul@multiplier+2)& (0+255),b
  4735  001162  6FE3               	movwf	(___lmul@multiplier+3)& (0+255),b
  4736  001164  0E80               	movlw	128
  4737  001166  0100               	movlb	0	; () banked
  4738  001168  6FE4               	movwf	___lmul@multiplicand& (0+255),b
  4739  00116A  0E51               	movlw	81
  4740  00116C  6FE5               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4741  00116E  0E01               	movlw	1
  4742  001170  6FE6               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4743  001172  0E00               	movlw	0
  4744  001174  6FE7               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4745  001176  EC3F  F010         	call	___lmul	;wreg free
  4746  00117A  0100               	movlb	0	; () banked
  4747  00117C  51E0               	movf	?___lmul& (0+255),w,b
  4748  00117E  0100               	movlb	0	; () banked
  4749  001180  27F6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4750  001182  0100               	movlb	0	; () banked
  4751  001184  51E1               	movf	(?___lmul+1)& (0+255),w,b
  4752  001186  0100               	movlb	0	; () banked
  4753  001188  23F7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4754  00118A  0100               	movlb	0	; () banked
  4755  00118C  51E2               	movf	(?___lmul+2)& (0+255),w,b
  4756  00118E  0100               	movlb	0	; () banked
  4757  001190  23F8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4758  001192  0100               	movlb	0	; () banked
  4759  001194  51E3               	movf	(?___lmul+3)& (0+255),w,b
  4760  001196  0100               	movlb	0	; () banked
  4761  001198  23F9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4762                           
  4763                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  4764  00119A  0100               	movlb	0	; () banked
  4765  00119C  EE20 F002          	lfsr	2,2
  4766  0011A0  51EC               	movf	caltime_to_epoch@ct& (0+255),w,b
  4767  0011A2  26D9               	addwf	fsr2l,f,c
  4768  0011A4  51ED               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4769  0011A6  22DA               	addwfc	fsr2h,f,c
  4770  0011A8  50DF               	movf	indf2,w,c
  4771  0011AA  0100               	movlb	0	; () banked
  4772  0011AC  6FF0               	movwf	??_caltime_to_epoch& (0+255),b
  4773  0011AE  0100               	movlb	0	; () banked
  4774  0011B0  51F0               	movf	??_caltime_to_epoch& (0+255),w,b
  4775  0011B2  0100               	movlb	0	; () banked
  4776  0011B4  6FE0               	movwf	___lmul@multiplier& (0+255),b
  4777  0011B6  6BE1               	clrf	(___lmul@multiplier+1)& (0+255),b
  4778  0011B8  6BE2               	clrf	(___lmul@multiplier+2)& (0+255),b
  4779  0011BA  6BE3               	clrf	(___lmul@multiplier+3)& (0+255),b
  4780  0011BC  0E10               	movlw	16
  4781  0011BE  0100               	movlb	0	; () banked
  4782  0011C0  6FE4               	movwf	___lmul@multiplicand& (0+255),b
  4783  0011C2  0E0E               	movlw	14
  4784  0011C4  6FE5               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4785  0011C6  0E00               	movlw	0
  4786  0011C8  6FE6               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4787  0011CA  0E00               	movlw	0
  4788  0011CC  6FE7               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4789  0011CE  EC3F  F010         	call	___lmul	;wreg free
  4790  0011D2  0100               	movlb	0	; () banked
  4791  0011D4  51E0               	movf	?___lmul& (0+255),w,b
  4792  0011D6  0100               	movlb	0	; () banked
  4793  0011D8  27F6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4794  0011DA  0100               	movlb	0	; () banked
  4795  0011DC  51E1               	movf	(?___lmul+1)& (0+255),w,b
  4796  0011DE  0100               	movlb	0	; () banked
  4797  0011E0  23F7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4798  0011E2  0100               	movlb	0	; () banked
  4799  0011E4  51E2               	movf	(?___lmul+2)& (0+255),w,b
  4800  0011E6  0100               	movlb	0	; () banked
  4801  0011E8  23F8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4802  0011EA  0100               	movlb	0	; () banked
  4803  0011EC  51E3               	movf	(?___lmul+3)& (0+255),w,b
  4804  0011EE  0100               	movlb	0	; () banked
  4805  0011F0  23F9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4806                           
  4807                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  4808  0011F2  0100               	movlb	0	; () banked
  4809  0011F4  EE20 F001          	lfsr	2,1
  4810  0011F8  51EC               	movf	caltime_to_epoch@ct& (0+255),w,b
  4811  0011FA  26D9               	addwf	fsr2l,f,c
  4812  0011FC  51ED               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4813  0011FE  22DA               	addwfc	fsr2h,f,c
  4814  001200  50DF               	movf	indf2,w,c
  4815  001202  0100               	movlb	0	; () banked
  4816  001204  6FF0               	movwf	??_caltime_to_epoch& (0+255),b
  4817  001206  0100               	movlb	0	; () banked
  4818  001208  51F0               	movf	??_caltime_to_epoch& (0+255),w,b
  4819  00120A  0100               	movlb	0	; () banked
  4820  00120C  6FE0               	movwf	___lmul@multiplier& (0+255),b
  4821  00120E  6BE1               	clrf	(___lmul@multiplier+1)& (0+255),b
  4822  001210  6BE2               	clrf	(___lmul@multiplier+2)& (0+255),b
  4823  001212  6BE3               	clrf	(___lmul@multiplier+3)& (0+255),b
  4824  001214  0E3C               	movlw	60
  4825  001216  0100               	movlb	0	; () banked
  4826  001218  6FE4               	movwf	___lmul@multiplicand& (0+255),b
  4827  00121A  0E00               	movlw	0
  4828  00121C  6FE5               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4829  00121E  0E00               	movlw	0
  4830  001220  6FE6               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4831  001222  0E00               	movlw	0
  4832  001224  6FE7               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4833  001226  EC3F  F010         	call	___lmul	;wreg free
  4834  00122A  0100               	movlb	0	; () banked
  4835  00122C  51E0               	movf	?___lmul& (0+255),w,b
  4836  00122E  0100               	movlb	0	; () banked
  4837  001230  27F6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4838  001232  0100               	movlb	0	; () banked
  4839  001234  51E1               	movf	(?___lmul+1)& (0+255),w,b
  4840  001236  0100               	movlb	0	; () banked
  4841  001238  23F7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4842  00123A  0100               	movlb	0	; () banked
  4843  00123C  51E2               	movf	(?___lmul+2)& (0+255),w,b
  4844  00123E  0100               	movlb	0	; () banked
  4845  001240  23F8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4846  001242  0100               	movlb	0	; () banked
  4847  001244  51E3               	movf	(?___lmul+3)& (0+255),w,b
  4848  001246  0100               	movlb	0	; () banked
  4849  001248  23F9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  4853  00124A  C0EC  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  4854  00124E  C0ED  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  4855  001252  50DF               	movf	indf2,w,c
  4856  001254  0100               	movlb	0	; () banked
  4857  001256  6FF0               	movwf	??_caltime_to_epoch& (0+255),b
  4858  001258  0100               	movlb	0	; () banked
  4859  00125A  51F0               	movf	??_caltime_to_epoch& (0+255),w,b
  4860  00125C  0100               	movlb	0	; () banked
  4861  00125E  27F6               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4862  001260  0E00               	movlw	0
  4863  001262  23F7               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4864  001264  23F8               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4865  001266  23F9               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  4869  001268  C0EE  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  4870  00126C  C0EF  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  4871  001270  C0F6  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  4872  001274  C0F7  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  4873  001278  C0F8  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  4874  00127C  C0F9  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  4875                           
  4876                           ; BSR set to: 0
  4877  001280  0012               	return		;funcret
  4878  001282                     __end_of_caltime_to_epoch:
  4879                           	opt stack 0
  4880                           tblptru	equ	0xFF8
  4881                           tblptrh	equ	0xFF7
  4882                           tblptrl	equ	0xFF6
  4883                           tablat	equ	0xFF5
  4884                           prodl	equ	0xFF3
  4885                           intcon	equ	0xFF2
  4886                           intcon2	equ	0xFF1
  4887                           postinc0	equ	0xFEE
  4888                           wreg	equ	0xFE8
  4889                           postinc1	equ	0xFE6
  4890                           postdec1	equ	0xFE5
  4891                           fsr1h	equ	0xFE2
  4892                           fsr1l	equ	0xFE1
  4893                           indf2	equ	0xFDF
  4894                           postinc2	equ	0xFDE
  4895                           postdec2	equ	0xFDD
  4896                           fsr2h	equ	0xFDA
  4897                           fsr2l	equ	0xFD9
  4898                           status	equ	0xFD8
  4899                           
  4900 ;; *************** function _month_length *****************
  4901 ;; Defined at:
  4902 ;;		line 87 in file "../My_header\My_RTCC.h"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  year            1    wreg     unsigned char 
  4905 ;;  month           1   31[COMRAM] unsigned char 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  year            1   10[BANK0 ] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      unsigned char 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4917 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4919 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4920 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4921 ;;Total ram usage:        6 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:    5
  4924 ;; This function calls:
  4925 ;;		___awmod
  4926 ;; This function is called by:
  4927 ;;		_epoch_to_caltime
  4928 ;;		_caltime_to_epoch
  4929 ;;		_RTCC_adjust_time_inc
  4930 ;;		_RTCC_adjust_time_dec
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text26
  4935  00164A                     __ptext26:
  4936                           	opt stack 0
  4937  00164A                     _month_length:
  4938                           	opt stack 23
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;incstack = 0
  4942                           ;month_length@year stored from wreg
  4943  00164A  0100               	movlb	0	; () banked
  4944  00164C  6FDD               	movwf	month_length@year& (0+255),b
  4945                           
  4946                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  4947  00164E  0E02               	movlw	2
  4948  001650  1820               	xorwf	month_length@month,w,c
  4949  001652  A4D8               	btfss	status,2,c
  4950  001654  D03E               	goto	l6476
  4951  001656  C0DD  F0D3         	movff	month_length@year,___awmod@dividend
  4952  00165A  0100               	movlb	0	; () banked
  4953  00165C  6BD4               	clrf	(___awmod@dividend+1)& (0+255),b
  4954  00165E  0E00               	movlw	0
  4955  001660  0100               	movlb	0	; () banked
  4956  001662  6FD6               	movwf	(___awmod@divisor+1)& (0+255),b
  4957  001664  0E64               	movlw	100
  4958  001666  6FD5               	movwf	___awmod@divisor& (0+255),b
  4959  001668  EC58  F00F         	call	___awmod	;wreg free
  4960  00166C  0100               	movlb	0	; () banked
  4961  00166E  51D3               	movf	?___awmod& (0+255),w,b
  4962  001670  0100               	movlb	0	; () banked
  4963  001672  11D4               	iorwf	(?___awmod+1)& (0+255),w,b
  4964  001674  A4D8               	btfss	status,2,c
  4965  001676  D002               	goto	u6370
  4966  001678  0E01               	movlw	1
  4967  00167A  D001               	goto	u6380
  4968  00167C                     u6370:
  4969  00167C  0E00               	movlw	0
  4970  00167E                     u6380:
  4971  00167E  0800               	sublw	0
  4972  001680  0100               	movlb	0	; () banked
  4973  001682  6FD9               	movwf	??_month_length& (0+255),b
  4974  001684  C0DD  F0D3         	movff	month_length@year,___awmod@dividend
  4975  001688  0100               	movlb	0	; () banked
  4976  00168A  6BD4               	clrf	(___awmod@dividend+1)& (0+255),b
  4977  00168C  0E01               	movlw	1
  4978  00168E  0100               	movlb	0	; () banked
  4979  001690  6FD6               	movwf	(___awmod@divisor+1)& (0+255),b
  4980  001692  0E90               	movlw	144
  4981  001694  6FD5               	movwf	___awmod@divisor& (0+255),b
  4982  001696  EC58  F00F         	call	___awmod	;wreg free
  4983  00169A  0100               	movlb	0	; () banked
  4984  00169C  51D3               	movf	?___awmod& (0+255),w,b
  4985  00169E  0100               	movlb	0	; () banked
  4986  0016A0  11D4               	iorwf	(?___awmod+1)& (0+255),w,b
  4987  0016A2  A4D8               	btfss	status,2,c
  4988  0016A4  D004               	goto	u6390
  4989  0016A6  0100               	movlb	0	; () banked
  4990  0016A8  6BDA               	clrf	(??_month_length+1)& (0+255),b
  4991  0016AA  2BDA               	incf	(??_month_length+1)& (0+255),f,b
  4992  0016AC  D002               	goto	u6408
  4993  0016AE                     u6390:
  4994  0016AE  0100               	movlb	0	; () banked
  4995  0016B0  6BDA               	clrf	(??_month_length+1)& (0+255),b
  4996  0016B2                     u6408:
  4997  0016B2  C0DD  F0DB         	movff	month_length@year,??_month_length+2
  4998  0016B6  0E03               	movlw	3
  4999  0016B8  0100               	movlb	0	; () banked
  5000  0016BA  17DB               	andwf	(??_month_length+2)& (0+255),f,b
  5001  0016BC  A4D8               	btfss	status,2,c
  5002  0016BE  D002               	goto	u6410
  5003  0016C0  0E01               	movlw	1
  5004  0016C2  D001               	goto	u6420
  5005  0016C4                     u6410:
  5006  0016C4  0E00               	movlw	0
  5007  0016C6                     u6420:
  5008  0016C6  0100               	movlb	0	; () banked
  5009  0016C8  25DA               	addwf	(??_month_length+1)& (0+255),w,b
  5010  0016CA  0100               	movlb	0	; () banked
  5011  0016CC  25D9               	addwf	??_month_length& (0+255),w,b
  5012  0016CE  0F1C               	addlw	28
  5013                           
  5014                           ; BSR set to: 0
  5015                           
  5016                           ; BSR set to: 0
  5017  0016D0  0012               	return	
  5018  0016D2                     l6476:
  5019                           
  5020                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
  5021  0016D2  5020               	movf	month_length@month,w,c
  5022  0016D4  0B01               	andlw	1
  5023  0016D6  0100               	movlb	0	; () banked
  5024  0016D8  6FD9               	movwf	??_month_length& (0+255),b
  5025  0016DA  6BDA               	clrf	(??_month_length+1)& (0+255),b
  5026  0016DC  0100               	movlb	0	; () banked
  5027  0016DE  1FD9               	comf	??_month_length& (0+255),f,b
  5028  0016E0  1FDA               	comf	(??_month_length+1)& (0+255),f,b
  5029  0016E2  4BD9               	infsnz	??_month_length& (0+255),f,b
  5030  0016E4  2BDA               	incf	(??_month_length+1)& (0+255),f,b
  5031  0016E6  5020               	movf	month_length@month,w,c
  5032  0016E8  0100               	movlb	0	; () banked
  5033  0016EA  6FDB               	movwf	(??_month_length+2)& (0+255),b
  5034  0016EC  6BDC               	clrf	(??_month_length+3)& (0+255),b
  5035  0016EE  0100               	movlb	0	; () banked
  5036  0016F0  51D9               	movf	??_month_length& (0+255),w,b
  5037  0016F2  0100               	movlb	0	; () banked
  5038  0016F4  1BDB               	xorwf	(??_month_length+2)& (0+255),f,b
  5039  0016F6  0100               	movlb	0	; () banked
  5040  0016F8  51DA               	movf	(??_month_length+1)& (0+255),w,b
  5041  0016FA  0100               	movlb	0	; () banked
  5042  0016FC  1BDC               	xorwf	(??_month_length+3)& (0+255),f,b
  5043  0016FE  0E0D               	movlw	13
  5044  001700  0100               	movlb	0	; () banked
  5045  001702  17DB               	andwf	(??_month_length+2)& (0+255),f,b
  5046  001704  0E00               	movlw	0
  5047  001706  17DC               	andwf	(??_month_length+3)& (0+255),f,b
  5048  001708  0E04               	movlw	4
  5049  00170A  0100               	movlb	0	; () banked
  5050  00170C  19DB               	xorwf	(??_month_length+2)& (0+255),w,b
  5051  00170E  0100               	movlb	0	; () banked
  5052  001710  11DC               	iorwf	(??_month_length+3)& (0+255),w,b
  5053  001712  A4D8               	btfss	status,2,c
  5054  001714  D002               	goto	u6430
  5055  001716  0E01               	movlw	1
  5056  001718  D001               	goto	u6440
  5057  00171A                     u6430:
  5058  00171A  0E00               	movlw	0
  5059  00171C                     u6440:
  5060  00171C  0800               	sublw	0
  5061  00171E  0F1F               	addlw	31
  5062                           
  5063                           ; BSR set to: 0
  5064  001720  0012               	return	
  5065  001722                     __end_of_month_length:
  5066                           	opt stack 0
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           prodl	equ	0xFF3
  5072                           intcon	equ	0xFF2
  5073                           intcon2	equ	0xFF1
  5074                           postinc0	equ	0xFEE
  5075                           wreg	equ	0xFE8
  5076                           postinc1	equ	0xFE6
  5077                           postdec1	equ	0xFE5
  5078                           fsr1h	equ	0xFE2
  5079                           fsr1l	equ	0xFE1
  5080                           indf2	equ	0xFDF
  5081                           postinc2	equ	0xFDE
  5082                           postdec2	equ	0xFDD
  5083                           fsr2h	equ	0xFDA
  5084                           fsr2l	equ	0xFD9
  5085                           status	equ	0xFD8
  5086                           
  5087 ;; *************** function ___awmod *****************
  5088 ;; Defined at:
  5089 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  dividend        2    0[BANK0 ] int 
  5092 ;;  divisor         2    2[BANK0 ] int 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  sign            1    5[BANK0 ] unsigned char 
  5095 ;;  counter         1    4[BANK0 ] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  2    0[BANK0 ] int 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5106 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5108 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5109 ;;Total ram usage:        6 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    4
  5112 ;; This function calls:
  5113 ;;		Nothing
  5114 ;; This function is called by:
  5115 ;;		_month_length
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text27
  5120  001EB0                     __ptext27:
  5121                           	opt stack 0
  5122  001EB0                     ___awmod:
  5123                           	opt stack 23
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;incstack = 0
  5127  001EB0  0E00               	movlw	0
  5128  001EB2  0100               	movlb	0	; () banked
  5129  001EB4  6FD8               	movwf	___awmod@sign& (0+255),b
  5130                           
  5131                           ; BSR set to: 0
  5132  001EB6  0100               	movlb	0	; () banked
  5133  001EB8  AFD4               	btfss	(___awmod@dividend+1)& (0+255),7,b
  5134  001EBA  D008               	goto	l6388
  5135                           
  5136                           ; BSR set to: 0
  5137  001EBC  0100               	movlb	0	; () banked
  5138  001EBE  6DD3               	negf	___awmod@dividend& (0+255),b
  5139  001EC0  1FD4               	comf	(___awmod@dividend+1)& (0+255),f,b
  5140  001EC2  B0D8               	btfsc	status,0,c
  5141  001EC4  2BD4               	incf	(___awmod@dividend+1)& (0+255),f,b
  5142                           
  5143                           ; BSR set to: 0
  5144  001EC6  0E01               	movlw	1
  5145  001EC8  0100               	movlb	0	; () banked
  5146  001ECA  6FD8               	movwf	___awmod@sign& (0+255),b
  5147  001ECC                     l6388:
  5148                           
  5149                           ; BSR set to: 0
  5150  001ECC  0100               	movlb	0	; () banked
  5151  001ECE  AFD6               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5152  001ED0  D005               	goto	l6392
  5153                           
  5154                           ; BSR set to: 0
  5155  001ED2  0100               	movlb	0	; () banked
  5156  001ED4  6DD5               	negf	___awmod@divisor& (0+255),b
  5157  001ED6  1FD6               	comf	(___awmod@divisor+1)& (0+255),f,b
  5158  001ED8  B0D8               	btfsc	status,0,c
  5159  001EDA  2BD6               	incf	(___awmod@divisor+1)& (0+255),f,b
  5160  001EDC                     l6392:
  5161                           
  5162                           ; BSR set to: 0
  5163  001EDC  0100               	movlb	0	; () banked
  5164  001EDE  51D5               	movf	___awmod@divisor& (0+255),w,b
  5165  001EE0  0100               	movlb	0	; () banked
  5166  001EE2  11D6               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5167  001EE4  B4D8               	btfsc	status,2,c
  5168  001EE6  D026               	goto	l6408
  5169                           
  5170                           ; BSR set to: 0
  5171  001EE8  0E01               	movlw	1
  5172  001EEA  0100               	movlb	0	; () banked
  5173  001EEC  6FD7               	movwf	___awmod@counter& (0+255),b
  5174  001EEE  D006               	goto	l6398
  5175  001EF0                     l6396:
  5176                           
  5177                           ; BSR set to: 0
  5178  001EF0  0100               	movlb	0	; () banked
  5179  001EF2  90D8               	bcf	status,0,c
  5180  001EF4  37D5               	rlcf	___awmod@divisor& (0+255),f,b
  5181  001EF6  37D6               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5182  001EF8  0100               	movlb	0	; () banked
  5183  001EFA  2BD7               	incf	___awmod@counter& (0+255),f,b
  5184  001EFC                     l6398:
  5185                           
  5186                           ; BSR set to: 0
  5187  001EFC  0100               	movlb	0	; () banked
  5188  001EFE  AFD6               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5189  001F00  D7F7               	goto	l6396
  5190  001F02                     l6400:
  5191                           
  5192                           ; BSR set to: 0
  5193  001F02  0100               	movlb	0	; () banked
  5194  001F04  51D5               	movf	___awmod@divisor& (0+255),w,b
  5195  001F06  0100               	movlb	0	; () banked
  5196  001F08  5DD3               	subwf	___awmod@dividend& (0+255),w,b
  5197  001F0A  0100               	movlb	0	; () banked
  5198  001F0C  51D6               	movf	(___awmod@divisor+1)& (0+255),w,b
  5199  001F0E  0100               	movlb	0	; () banked
  5200  001F10  59D4               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5201  001F12  A0D8               	btfss	status,0,c
  5202  001F14  D008               	goto	l6404
  5203                           
  5204                           ; BSR set to: 0
  5205  001F16  0100               	movlb	0	; () banked
  5206  001F18  51D5               	movf	___awmod@divisor& (0+255),w,b
  5207  001F1A  0100               	movlb	0	; () banked
  5208  001F1C  5FD3               	subwf	___awmod@dividend& (0+255),f,b
  5209  001F1E  0100               	movlb	0	; () banked
  5210  001F20  51D6               	movf	(___awmod@divisor+1)& (0+255),w,b
  5211  001F22  0100               	movlb	0	; () banked
  5212  001F24  5BD4               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5213  001F26                     l6404:
  5214                           
  5215                           ; BSR set to: 0
  5216  001F26  0100               	movlb	0	; () banked
  5217  001F28  90D8               	bcf	status,0,c
  5218  001F2A  33D6               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5219  001F2C  33D5               	rrcf	___awmod@divisor& (0+255),f,b
  5220                           
  5221                           ; BSR set to: 0
  5222  001F2E  0100               	movlb	0	; () banked
  5223  001F30  2FD7               	decfsz	___awmod@counter& (0+255),f,b
  5224  001F32  D7E7               	goto	l6400
  5225  001F34                     l6408:
  5226                           
  5227                           ; BSR set to: 0
  5228  001F34  0100               	movlb	0	; () banked
  5229  001F36  51D8               	movf	___awmod@sign& (0+255),w,b
  5230  001F38  0100               	movlb	0	; () banked
  5231  001F3A  B4D8               	btfsc	status,2,c
  5232  001F3C  D005               	goto	l6412
  5233                           
  5234                           ; BSR set to: 0
  5235  001F3E  0100               	movlb	0	; () banked
  5236  001F40  6DD3               	negf	___awmod@dividend& (0+255),b
  5237  001F42  1FD4               	comf	(___awmod@dividend+1)& (0+255),f,b
  5238  001F44  B0D8               	btfsc	status,0,c
  5239  001F46  2BD4               	incf	(___awmod@dividend+1)& (0+255),f,b
  5240  001F48                     l6412:
  5241                           
  5242                           ; BSR set to: 0
  5243  001F48  C0D3  F0D3         	movff	___awmod@dividend,?___awmod
  5244  001F4C  C0D4  F0D4         	movff	___awmod@dividend+1,?___awmod+1
  5245  001F50  0012               	return	
  5246  001F52                     __end_of___awmod:
  5247                           	opt stack 0
  5248                           tblptru	equ	0xFF8
  5249                           tblptrh	equ	0xFF7
  5250                           tblptrl	equ	0xFF6
  5251                           tablat	equ	0xFF5
  5252                           prodl	equ	0xFF3
  5253                           intcon	equ	0xFF2
  5254                           intcon2	equ	0xFF1
  5255                           postinc0	equ	0xFEE
  5256                           wreg	equ	0xFE8
  5257                           postinc1	equ	0xFE6
  5258                           postdec1	equ	0xFE5
  5259                           fsr1h	equ	0xFE2
  5260                           fsr1l	equ	0xFE1
  5261                           indf2	equ	0xFDF
  5262                           postinc2	equ	0xFDE
  5263                           postdec2	equ	0xFDD
  5264                           fsr2h	equ	0xFDA
  5265                           fsr2l	equ	0xFD9
  5266                           status	equ	0xFD8
  5267                           
  5268 ;; *************** function ___lmul *****************
  5269 ;; Defined at:
  5270 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  multiplier      4   13[BANK0 ] unsigned long 
  5273 ;;  multiplicand    4   17[BANK0 ] unsigned long 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  product         4   21[BANK0 ] unsigned long 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  4   13[BANK0 ] unsigned long 
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5285 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5286 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5288 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5289 ;;Total ram usage:       12 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    4
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_get_quot_rem
  5296 ;;		_caltime_to_epoch
  5297 ;;		_RTCC_adjust_time_inc
  5298 ;;		_RTCC_adjust_time_dec
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text28
  5303  00207E                     __ptext28:
  5304                           	opt stack 0
  5305  00207E                     ___lmul:
  5306                           	opt stack 23
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;incstack = 0
  5310  00207E  0E00               	movlw	0
  5311  002080  0100               	movlb	0	; () banked
  5312  002082  6FE8               	movwf	___lmul@product& (0+255),b
  5313  002084  0E00               	movlw	0
  5314  002086  6FE9               	movwf	(___lmul@product+1)& (0+255),b
  5315  002088  0E00               	movlw	0
  5316  00208A  6FEA               	movwf	(___lmul@product+2)& (0+255),b
  5317  00208C  0E00               	movlw	0
  5318  00208E  6FEB               	movwf	(___lmul@product+3)& (0+255),b
  5319  002090                     l6328:
  5320                           
  5321                           ; BSR set to: 0
  5322  002090  0100               	movlb	0	; () banked
  5323  002092  A1E0               	btfss	___lmul@multiplier& (0+255),0,b
  5324  002094  D010               	goto	l6332
  5325                           
  5326                           ; BSR set to: 0
  5327  002096  0100               	movlb	0	; () banked
  5328  002098  51E4               	movf	___lmul@multiplicand& (0+255),w,b
  5329  00209A  0100               	movlb	0	; () banked
  5330  00209C  27E8               	addwf	___lmul@product& (0+255),f,b
  5331  00209E  0100               	movlb	0	; () banked
  5332  0020A0  51E5               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  5333  0020A2  0100               	movlb	0	; () banked
  5334  0020A4  23E9               	addwfc	(___lmul@product+1)& (0+255),f,b
  5335  0020A6  0100               	movlb	0	; () banked
  5336  0020A8  51E6               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  5337  0020AA  0100               	movlb	0	; () banked
  5338  0020AC  23EA               	addwfc	(___lmul@product+2)& (0+255),f,b
  5339  0020AE  0100               	movlb	0	; () banked
  5340  0020B0  51E7               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  5341  0020B2  0100               	movlb	0	; () banked
  5342  0020B4  23EB               	addwfc	(___lmul@product+3)& (0+255),f,b
  5343  0020B6                     l6332:
  5344                           
  5345                           ; BSR set to: 0
  5346  0020B6  0100               	movlb	0	; () banked
  5347  0020B8  90D8               	bcf	status,0,c
  5348  0020BA  37E4               	rlcf	___lmul@multiplicand& (0+255),f,b
  5349  0020BC  37E5               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  5350  0020BE  37E6               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  5351  0020C0  37E7               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  5352                           
  5353                           ; BSR set to: 0
  5354  0020C2  0100               	movlb	0	; () banked
  5355  0020C4  90D8               	bcf	status,0,c
  5356  0020C6  33E3               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  5357  0020C8  33E2               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  5358  0020CA  33E1               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  5359  0020CC  33E0               	rrcf	___lmul@multiplier& (0+255),f,b
  5360  0020CE  0100               	movlb	0	; () banked
  5361  0020D0  51E0               	movf	___lmul@multiplier& (0+255),w,b
  5362  0020D2  0100               	movlb	0	; () banked
  5363  0020D4  11E1               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  5364  0020D6  0100               	movlb	0	; () banked
  5365  0020D8  11E2               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  5366  0020DA  0100               	movlb	0	; () banked
  5367  0020DC  11E3               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  5368  0020DE  A4D8               	btfss	status,2,c
  5369  0020E0  D7D7               	goto	l6328
  5370                           
  5371                           ; BSR set to: 0
  5372  0020E2  C0E8  F0E0         	movff	___lmul@product,?___lmul
  5373  0020E6  C0E9  F0E1         	movff	___lmul@product+1,?___lmul+1
  5374  0020EA  C0EA  F0E2         	movff	___lmul@product+2,?___lmul+2
  5375  0020EE  C0EB  F0E3         	movff	___lmul@product+3,?___lmul+3
  5376                           
  5377                           ; BSR set to: 0
  5378  0020F2  0012               	return		;funcret
  5379  0020F4                     __end_of___lmul:
  5380                           	opt stack 0
  5381                           tblptru	equ	0xFF8
  5382                           tblptrh	equ	0xFF7
  5383                           tblptrl	equ	0xFF6
  5384                           tablat	equ	0xFF5
  5385                           prodl	equ	0xFF3
  5386                           intcon	equ	0xFF2
  5387                           intcon2	equ	0xFF1
  5388                           postinc0	equ	0xFEE
  5389                           wreg	equ	0xFE8
  5390                           postinc1	equ	0xFE6
  5391                           postdec1	equ	0xFE5
  5392                           fsr1h	equ	0xFE2
  5393                           fsr1l	equ	0xFE1
  5394                           indf2	equ	0xFDF
  5395                           postinc2	equ	0xFDE
  5396                           postdec2	equ	0xFDD
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8
  5400                           
  5401 ;; *************** function _RTCC_to_caltime *****************
  5402 ;; Defined at:
  5403 ;;		line 121 in file "../My_header\My_RTCC.h"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  ct              2    1[BANK0 ] PTR struct .
  5406 ;;		 -> caltime_now(7), 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  dumy            1    3[BANK0 ] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;		None               void
  5411 ;; Registers used:
  5412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5421 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5422 ;;Total ram usage:        3 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    5
  5425 ;; This function calls:
  5426 ;;		_x_to_d
  5427 ;; This function is called by:
  5428 ;;		_RTCC_from_RTCC
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text29
  5433  001C98                     __ptext29:
  5434                           	opt stack 0
  5435  001C98                     _RTCC_to_caltime:
  5436                           	opt stack 24
  5437  001C98                     l967:
  5438  001C98  010F               	movlb	15	; () banked
  5439  001C9A  B93F               	btfsc	63,4,b	;volatile
  5440  001C9C  D7FD               	goto	l967
  5441                           
  5442                           ; BSR set to: 15
  5443                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  5444  001C9E  010F               	movlb	15	; () banked
  5445  001CA0  813F               	bsf	63,0,b	;volatile
  5446                           
  5447                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  5448  001CA2  010F               	movlb	15	; () banked
  5449  001CA4  833F               	bsf	63,1,b	;volatile
  5450                           
  5451                           ; BSR set to: 15
  5452                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  5453  001CA6  0100               	movlb	0	; () banked
  5454  001CA8  EE20 F006          	lfsr	2,6
  5455  001CAC  51D4               	movf	RTCC_to_caltime@ct& (0+255),w,b
  5456  001CAE  26D9               	addwf	fsr2l,f,c
  5457  001CB0  51D5               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  5458  001CB2  22DA               	addwfc	fsr2h,f,c
  5459  001CB4  010F               	movlb	15	; () banked
  5460  001CB6  513A               	movf	58,w,b	;volatile
  5461  001CB8  EC43  F012         	call	_x_to_d
  5462  001CBC  6EDF               	movwf	indf2,c
  5463                           
  5464                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  5465  001CBE  CF3B F0D6          	movff	3899,RTCC_to_caltime@dumy	;volatile
  5466                           
  5467                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  5468  001CC2  0100               	movlb	0	; () banked
  5469  001CC4  EE20 F004          	lfsr	2,4
  5470  001CC8  51D4               	movf	RTCC_to_caltime@ct& (0+255),w,b
  5471  001CCA  26D9               	addwf	fsr2l,f,c
  5472  001CCC  51D5               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  5473  001CCE  22DA               	addwfc	fsr2h,f,c
  5474  001CD0  010F               	movlb	15	; () banked
  5475  001CD2  513A               	movf	58,w,b	;volatile
  5476  001CD4  EC43  F012         	call	_x_to_d
  5477  001CD8  6EDF               	movwf	indf2,c
  5478                           
  5479                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  5480  001CDA  0100               	movlb	0	; () banked
  5481  001CDC  EE20 F005          	lfsr	2,5
  5482  001CE0  51D4               	movf	RTCC_to_caltime@ct& (0+255),w,b
  5483  001CE2  26D9               	addwf	fsr2l,f,c
  5484  001CE4  51D5               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  5485  001CE6  22DA               	addwfc	fsr2h,f,c
  5486  001CE8  010F               	movlb	15	; () banked
  5487  001CEA  513B               	movf	59,w,b	;volatile
  5488  001CEC  EC43  F012         	call	_x_to_d
  5489  001CF0  6EDF               	movwf	indf2,c
  5490                           
  5491                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  5492  001CF2  0100               	movlb	0	; () banked
  5493  001CF4  EE20 F002          	lfsr	2,2
  5494  001CF8  51D4               	movf	RTCC_to_caltime@ct& (0+255),w,b
  5495  001CFA  26D9               	addwf	fsr2l,f,c
  5496  001CFC  51D5               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  5497  001CFE  22DA               	addwfc	fsr2h,f,c
  5498  001D00  010F               	movlb	15	; () banked
  5499  001D02  513A               	movf	58,w,b	;volatile
  5500  001D04  EC43  F012         	call	_x_to_d
  5501  001D08  6EDF               	movwf	indf2,c
  5502                           
  5503                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  5504  001D0A  0100               	movlb	0	; () banked
  5505  001D0C  EE20 F003          	lfsr	2,3
  5506  001D10  51D4               	movf	RTCC_to_caltime@ct& (0+255),w,b
  5507  001D12  26D9               	addwf	fsr2l,f,c
  5508  001D14  51D5               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  5509  001D16  22DA               	addwfc	fsr2h,f,c
  5510  001D18  010F               	movlb	15	; () banked
  5511  001D1A  513B               	movf	59,w,b	;volatile
  5512  001D1C  EC43  F012         	call	_x_to_d
  5513  001D20  6EDF               	movwf	indf2,c
  5514                           
  5515                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  5516  001D22  010F               	movlb	15	; () banked
  5517  001D24  513A               	movf	58,w,b	;volatile
  5518  001D26  EC43  F012         	call	_x_to_d
  5519  001D2A  C0D4  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  5520  001D2E  C0D5  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  5521  001D32  6EDF               	movwf	indf2,c
  5522                           
  5523                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  5524  001D34  0100               	movlb	0	; () banked
  5525  001D36  EE20 F001          	lfsr	2,1
  5526  001D3A  51D4               	movf	RTCC_to_caltime@ct& (0+255),w,b
  5527  001D3C  26D9               	addwf	fsr2l,f,c
  5528  001D3E  51D5               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  5529  001D40  22DA               	addwfc	fsr2h,f,c
  5530  001D42  010F               	movlb	15	; () banked
  5531  001D44  513B               	movf	59,w,b	;volatile
  5532  001D46  EC43  F012         	call	_x_to_d
  5533  001D4A  6EDF               	movwf	indf2,c
  5534  001D4C  0012               	return		;funcret
  5535  001D4E                     __end_of_RTCC_to_caltime:
  5536                           	opt stack 0
  5537                           tblptru	equ	0xFF8
  5538                           tblptrh	equ	0xFF7
  5539                           tblptrl	equ	0xFF6
  5540                           tablat	equ	0xFF5
  5541                           prodl	equ	0xFF3
  5542                           intcon	equ	0xFF2
  5543                           intcon2	equ	0xFF1
  5544                           postinc0	equ	0xFEE
  5545                           wreg	equ	0xFE8
  5546                           postinc1	equ	0xFE6
  5547                           postdec1	equ	0xFE5
  5548                           fsr1h	equ	0xFE2
  5549                           fsr1l	equ	0xFE1
  5550                           indf2	equ	0xFDF
  5551                           postinc2	equ	0xFDE
  5552                           postdec2	equ	0xFDD
  5553                           fsr2h	equ	0xFDA
  5554                           fsr2l	equ	0xFD9
  5555                           status	equ	0xFD8
  5556                           
  5557 ;; *************** function _x_to_d *****************
  5558 ;; Defined at:
  5559 ;;		line 81 in file "../My_header\My_RTCC.h"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  hex             1    wreg     unsigned char 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  hex             1    0[BANK0 ] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      unsigned char 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, prodl, prodh
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5576 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5577 ;;Total ram usage:        2 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    4
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_RTCC_to_caltime
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text30
  5588  002486                     __ptext30:
  5589                           	opt stack 0
  5590  002486                     _x_to_d:
  5591                           	opt stack 24
  5592                           
  5593                           ;incstack = 0
  5594                           ;x_to_d@hex stored from wreg
  5595  002486  0100               	movlb	0	; () banked
  5596  002488  6FD3               	movwf	x_to_d@hex& (0+255),b
  5597                           
  5598                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  5599  00248A  C0D3  F020         	movff	x_to_d@hex,??_x_to_d
  5600  00248E  0E0F               	movlw	15
  5601  002490  1620               	andwf	??_x_to_d,f,c
  5602  002492  0100               	movlb	0	; () banked
  5603  002494  39D3               	swapf	x_to_d@hex& (0+255),w,b
  5604  002496  0B0F               	andlw	15
  5605  002498  0B0F               	andlw	15
  5606  00249A  0D0A               	mullw	10
  5607  00249C  50F3               	movf	prodl,w,c
  5608  00249E  2420               	addwf	??_x_to_d,w,c
  5609  0024A0  0012               	return	
  5610  0024A2                     __end_of_x_to_d:
  5611                           	opt stack 0
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodl	equ	0xFF3
  5617                           intcon	equ	0xFF2
  5618                           intcon2	equ	0xFF1
  5619                           postinc0	equ	0xFEE
  5620                           wreg	equ	0xFE8
  5621                           postinc1	equ	0xFE6
  5622                           postdec1	equ	0xFE5
  5623                           fsr1h	equ	0xFE2
  5624                           fsr1l	equ	0xFE1
  5625                           indf2	equ	0xFDF
  5626                           postinc2	equ	0xFDE
  5627                           postdec2	equ	0xFDD
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function _I2C_LCD_SetCursor *****************
  5633 ;; Defined at:
  5634 ;;		line 112 in file "../My_header\My_I2C.h"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  col             1    wreg     unsigned char 
  5637 ;;  row             1    5[BANK0 ] unsigned char 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  col             1    8[BANK0 ] unsigned char 
  5640 ;;  row_offsets     2    6[BANK0 ] unsigned char [2]
  5641 ;; Return value:  Size  Location     Type
  5642 ;;		None               void
  5643 ;; Registers used:
  5644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5650 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5651 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5653 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;Total ram usage:        4 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    7
  5657 ;; This function calls:
  5658 ;;		_I2C_LCD_Command
  5659 ;; This function is called by:
  5660 ;;		_main
  5661 ;;		_display_time_0802
  5662 ;;		_display_time_1602
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text31
  5667  002364                     __ptext31:
  5668                           	opt stack 0
  5669  002364                     _I2C_LCD_SetCursor:
  5670                           	opt stack 23
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;incstack = 0
  5674                           ;I2C_LCD_SetCursor@col stored from wreg
  5675  002364  0100               	movlb	0	; () banked
  5676  002366  6FDB               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  5677                           
  5678                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
  5679  002368  C0FC  F0D9         	movff	I2C_LCD_SetCursor@F8672,I2C_LCD_SetCursor@row_offsets
  5680  00236C  C0FD  F0DA         	movff	I2C_LCD_SetCursor@F8672+1,I2C_LCD_SetCursor@row_offsets+1
  5681                           
  5682                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  5683  002370  0100               	movlb	0	; () banked
  5684  002372  51D8               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  5685  002374  0D01               	mullw	1
  5686  002376  0ED9               	movlw	low I2C_LCD_SetCursor@row_offsets
  5687  002378  24F3               	addwf	prodl,w,c
  5688  00237A  6ED9               	movwf	fsr2l,c
  5689  00237C  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  5690  00237E  20F4               	addwfc	prodh,w,c
  5691  002380  6EDA               	movwf	fsr2h,c
  5692  002382  50DF               	movf	indf2,w,c
  5693  002384  0100               	movlb	0	; () banked
  5694  002386  25DB               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  5695  002388  0980               	iorlw	128
  5696  00238A  EC4C  F011         	call	_I2C_LCD_Command
  5697  00238E  0012               	return		;funcret
  5698  002390                     __end_of_I2C_LCD_SetCursor:
  5699                           	opt stack 0
  5700                           tblptru	equ	0xFF8
  5701                           tblptrh	equ	0xFF7
  5702                           tblptrl	equ	0xFF6
  5703                           tablat	equ	0xFF5
  5704                           prodh	equ	0xFF4
  5705                           prodl	equ	0xFF3
  5706                           intcon	equ	0xFF2
  5707                           intcon2	equ	0xFF1
  5708                           postinc0	equ	0xFEE
  5709                           wreg	equ	0xFE8
  5710                           postinc1	equ	0xFE6
  5711                           postdec1	equ	0xFE5
  5712                           fsr1h	equ	0xFE2
  5713                           fsr1l	equ	0xFE1
  5714                           indf2	equ	0xFDF
  5715                           postinc2	equ	0xFDE
  5716                           postdec2	equ	0xFDD
  5717                           fsr2h	equ	0xFDA
  5718                           fsr2l	equ	0xFD9
  5719                           status	equ	0xFD8
  5720                           
  5721 ;; *************** function _I2C_LCD_Command *****************
  5722 ;; Defined at:
  5723 ;;		line 94 in file "../My_header\My_I2C.h"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  c               1    wreg     unsigned char 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  c               1    3[BANK0 ] unsigned char 
  5728 ;;  ans             1    4[BANK0 ] unsigned char 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;		None               void
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, status,0, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;Total ram usage:        2 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    6
  5745 ;; This function calls:
  5746 ;;		_I2C_Send
  5747 ;;		_I2C_Start
  5748 ;;		_I2C_Stop
  5749 ;; This function is called by:
  5750 ;;		_I2C_LCD_Clear
  5751 ;;		_I2C_LCD_SetCursor
  5752 ;;		_I2C_LCD_init
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text32
  5757  002298                     __ptext32:
  5758                           	opt stack 0
  5759  002298                     _I2C_LCD_Command:
  5760                           	opt stack 22
  5761                           
  5762                           ;incstack = 0
  5763                           ;I2C_LCD_Command@c stored from wreg
  5764  002298  0100               	movlb	0	; () banked
  5765  00229A  6FD6               	movwf	I2C_LCD_Command@c& (0+255),b
  5766                           
  5767                           ;My_header\My_I2C.h: 95: uint8_t ans;
  5768                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
  5769  00229C  0E00               	movlw	0
  5770  00229E  0100               	movlb	0	; () banked
  5771  0022A0  6FD4               	movwf	I2C_Start@rw& (0+255),b
  5772  0022A2  0E3E               	movlw	62
  5773  0022A4  EC83  F011         	call	_I2C_Start
  5774  0022A8  0100               	movlb	0	; () banked
  5775  0022AA  6FD7               	movwf	I2C_LCD_Command@ans& (0+255),b
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;My_header\My_I2C.h: 98: if (ans == 0) {
  5779  0022AC  0100               	movlb	0	; () banked
  5780  0022AE  51D7               	movf	I2C_LCD_Command@ans& (0+255),w,b
  5781  0022B0  0100               	movlb	0	; () banked
  5782  0022B2  A4D8               	btfss	status,2,c
  5783  0022B4  D007               	goto	l903
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
  5787  0022B6  0E80               	movlw	128
  5788  0022B8  EC78  F012         	call	_I2C_Send
  5789                           
  5790                           ;My_header\My_I2C.h: 101: I2C_Send(c);
  5791  0022BC  0100               	movlb	0	; () banked
  5792  0022BE  51D6               	movf	I2C_LCD_Command@c& (0+255),w,b
  5793  0022C0  EC78  F012         	call	_I2C_Send
  5794  0022C4                     l903:
  5795                           
  5796                           ;My_header\My_I2C.h: 102: }
  5797                           ;My_header\My_I2C.h: 103: I2C_Stop();
  5798  0022C4  EC8D  F012         	call	_I2C_Stop	;wreg free
  5799                           
  5800                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5801  0022C8  0E68               	movlw	104
  5802  0022CA                     u7187:
  5803  0022CA  2EE8               	decfsz	wreg,f,c
  5804  0022CC  D7FE               	goto	u7187
  5805  0022CE  0012               	return		;funcret
  5806  0022D0                     __end_of_I2C_LCD_Command:
  5807                           	opt stack 0
  5808                           tblptru	equ	0xFF8
  5809                           tblptrh	equ	0xFF7
  5810                           tblptrl	equ	0xFF6
  5811                           tablat	equ	0xFF5
  5812                           prodh	equ	0xFF4
  5813                           prodl	equ	0xFF3
  5814                           intcon	equ	0xFF2
  5815                           intcon2	equ	0xFF1
  5816                           postinc0	equ	0xFEE
  5817                           wreg	equ	0xFE8
  5818                           postinc1	equ	0xFE6
  5819                           postdec1	equ	0xFE5
  5820                           fsr1h	equ	0xFE2
  5821                           fsr1l	equ	0xFE1
  5822                           indf2	equ	0xFDF
  5823                           postinc2	equ	0xFDE
  5824                           postdec2	equ	0xFDD
  5825                           fsr2h	equ	0xFDA
  5826                           fsr2l	equ	0xFD9
  5827                           status	equ	0xFD8
  5828                           
  5829 ;; *************** function _I2C_LCD_Puts *****************
  5830 ;; Defined at:
  5831 ;;		line 131 in file "../My_header\My_I2C.h"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  s               2    3[BANK0 ] PTR const unsigned char 
  5834 ;;		 -> STR_3(6), STR_2(9), weekday_3char(28), STR_1(3), 
  5835 ;;		 -> display_dec@str(10), 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  ans             2    6[BANK0 ] int 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;		None               void
  5840 ;; Registers used:
  5841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5847 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5850 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5851 ;;Total ram usage:        5 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    6
  5854 ;; This function calls:
  5855 ;;		_I2C_Send
  5856 ;;		_I2C_Start
  5857 ;;		_I2C_Stop
  5858 ;; This function is called by:
  5859 ;;		_main
  5860 ;;		_display_dec
  5861 ;;		_display_time_0802
  5862 ;;		_display_time_1602
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text33
  5867  001FF0                     __ptext33:
  5868                           	opt stack 0
  5869  001FF0                     _I2C_LCD_Puts:
  5870                           	opt stack 24
  5871                           
  5872                           ;My_header\My_I2C.h: 132: int ans;
  5873                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
  5874                           
  5875                           ;incstack = 0
  5876  001FF0  0E00               	movlw	0
  5877  001FF2  0100               	movlb	0	; () banked
  5878  001FF4  6FD4               	movwf	I2C_Start@rw& (0+255),b
  5879  001FF6  0E3E               	movlw	62
  5880  001FF8  EC83  F011         	call	_I2C_Start
  5881  001FFC  0100               	movlb	0	; () banked
  5882  001FFE  6FD8               	movwf	??_I2C_LCD_Puts& (0+255),b
  5883  002000  0100               	movlb	0	; () banked
  5884  002002  51D8               	movf	??_I2C_LCD_Puts& (0+255),w,b
  5885  002004  0100               	movlb	0	; () banked
  5886  002006  6FD9               	movwf	I2C_LCD_Puts@ans& (0+255),b
  5887  002008  6BDA               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;My_header\My_I2C.h: 135: if (ans == 0) {
  5891  00200A  0100               	movlb	0	; () banked
  5892  00200C  51D9               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  5893  00200E  0100               	movlb	0	; () banked
  5894  002010  11DA               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  5895  002012  A4D8               	btfss	status,2,c
  5896  002014  D031               	goto	l6728
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
  5900  002016  0E40               	movlw	64
  5901  002018  EC78  F012         	call	_I2C_Send
  5902                           
  5903                           ;My_header\My_I2C.h: 137: while (*s) {
  5904  00201C  D019               	goto	l6726
  5905  00201E                     l6720:
  5906                           
  5907                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
  5908  00201E  C0D6  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5909  002022  C0D7  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5910  002026  0E00               	movlw	low (__smallconst shr (0+16))
  5911  002028  6EF8               	movwf	tblptru,c
  5912  00202A  0E0E               	movlw	(high __ramtop+-1)
  5913  00202C  64F7               	cpfsgt	tblptrh,c
  5914  00202E  D003               	bra	u6627
  5915  002030  0008               	tblrd		*
  5916  002032  50F5               	movf	tablat,w,c
  5917  002034  D005               	bra	u6620
  5918  002036                     u6627:
  5919  002036  CFF6 FFE9          	movff	tblptrl,fsr0l
  5920  00203A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5921  00203E  50EF               	movf	indf0,w,c
  5922  002040                     u6620:
  5923  002040  EC78  F012         	call	_I2C_Send
  5924  002044  0100               	movlb	0	; () banked
  5925  002046  4BD6               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  5926  002048  2BD7               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5930  00204A  0E68               	movlw	104
  5931  00204C                     u7197:
  5932  00204C  2EE8               	decfsz	wreg,f,c
  5933  00204E  D7FE               	goto	u7197
  5934  002050                     l6726:
  5935  002050  C0D6  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5936  002054  C0D7  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5937  002058  0E00               	movlw	low (__smallconst shr (0+16))
  5938  00205A  6EF8               	movwf	tblptru,c
  5939  00205C  0E0E               	movlw	(high __ramtop+-1)
  5940  00205E  64F7               	cpfsgt	tblptrh,c
  5941  002060  D003               	bra	u6637
  5942  002062  0008               	tblrd		*
  5943  002064  50F5               	movf	tablat,w,c
  5944  002066  D005               	bra	u6630
  5945  002068                     u6637:
  5946  002068  CFF6 FFE9          	movff	tblptrl,fsr0l
  5947  00206C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5948  002070  50EF               	movf	indf0,w,c
  5949  002072                     u6630:
  5950  002072  0900               	iorlw	0
  5951  002074  A4D8               	btfss	status,2,c
  5952  002076  D7D3               	goto	l6720
  5953  002078                     l6728:
  5954                           
  5955                           ;My_header\My_I2C.h: 140: }
  5956                           ;My_header\My_I2C.h: 141: }
  5957                           ;My_header\My_I2C.h: 142: I2C_Stop();
  5958  002078  EC8D  F012         	call	_I2C_Stop	;wreg free
  5959  00207C  0012               	return		;funcret
  5960  00207E                     __end_of_I2C_LCD_Puts:
  5961                           	opt stack 0
  5962                           tblptru	equ	0xFF8
  5963                           tblptrh	equ	0xFF7
  5964                           tblptrl	equ	0xFF6
  5965                           tablat	equ	0xFF5
  5966                           prodh	equ	0xFF4
  5967                           prodl	equ	0xFF3
  5968                           intcon	equ	0xFF2
  5969                           intcon2	equ	0xFF1
  5970                           indf0	equ	0xFEF
  5971                           postinc0	equ	0xFEE
  5972                           fsr0h	equ	0xFEA
  5973                           fsr0l	equ	0xFE9
  5974                           wreg	equ	0xFE8
  5975                           postinc1	equ	0xFE6
  5976                           postdec1	equ	0xFE5
  5977                           fsr1h	equ	0xFE2
  5978                           fsr1l	equ	0xFE1
  5979                           indf2	equ	0xFDF
  5980                           postinc2	equ	0xFDE
  5981                           postdec2	equ	0xFDD
  5982                           fsr2h	equ	0xFDA
  5983                           fsr2l	equ	0xFD9
  5984                           status	equ	0xFD8
  5985                           
  5986 ;; *************** function _I2C_Stop *****************
  5987 ;; Defined at:
  5988 ;;		line 59 in file "../My_header\My_I2C.h"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;		None
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;		None               void
  5995 ;; Registers used:
  5996 ;;		wreg, status,2, status,0, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6006 ;;Total ram usage:        0 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; Hardware stack levels required when called:    5
  6009 ;; This function calls:
  6010 ;;		_I2C_IdleCheck
  6011 ;; This function is called by:
  6012 ;;		_I2C_LCD_Command
  6013 ;;		_I2C_LCD_Puts
  6014 ;;		_I2C_LCD_Putc
  6015 ;;		_I2C_LCD_CreateChar
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text34
  6020  00251A                     __ptext34:
  6021                           	opt stack 0
  6022  00251A                     _I2C_Stop:
  6023                           	opt stack 22
  6024                           
  6025                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
  6026                           
  6027                           ;incstack = 0
  6028  00251A  0E05               	movlw	5
  6029  00251C  EC6B  F012         	call	_I2C_IdleCheck
  6030                           
  6031                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
  6032  002520  84C5               	bsf	4037,2,c	;volatile
  6033  002522  0012               	return		;funcret
  6034  002524                     __end_of_I2C_Stop:
  6035                           	opt stack 0
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           intcon	equ	0xFF2
  6043                           intcon2	equ	0xFF1
  6044                           indf0	equ	0xFEF
  6045                           postinc0	equ	0xFEE
  6046                           fsr0h	equ	0xFEA
  6047                           fsr0l	equ	0xFE9
  6048                           wreg	equ	0xFE8
  6049                           postinc1	equ	0xFE6
  6050                           postdec1	equ	0xFE5
  6051                           fsr1h	equ	0xFE2
  6052                           fsr1l	equ	0xFE1
  6053                           indf2	equ	0xFDF
  6054                           postinc2	equ	0xFDE
  6055                           postdec2	equ	0xFDD
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function _I2C_Start *****************
  6061 ;; Defined at:
  6062 ;;		line 35 in file "../My_header\My_I2C.h"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  adrs            1    wreg     unsigned char 
  6065 ;;  rw              1    1[BANK0 ] unsigned char 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  adrs            1    2[BANK0 ] unsigned char 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      unsigned char 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6077 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6080 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6081 ;;Total ram usage:        2 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:    5
  6084 ;; This function calls:
  6085 ;;		_I2C_IdleCheck
  6086 ;; This function is called by:
  6087 ;;		_I2C_LCD_Command
  6088 ;;		_I2C_LCD_Puts
  6089 ;;		_I2C_LCD_Putc
  6090 ;;		_I2C_LCD_CreateChar
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text35
  6095  002306                     __ptext35:
  6096                           	opt stack 0
  6097  002306                     _I2C_Start:
  6098                           	opt stack 22
  6099                           
  6100                           ;incstack = 0
  6101                           ;I2C_Start@adrs stored from wreg
  6102  002306  0100               	movlb	0	; () banked
  6103  002308  6FD5               	movwf	I2C_Start@adrs& (0+255),b
  6104                           
  6105                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
  6106  00230A  0E05               	movlw	5
  6107  00230C  EC6B  F012         	call	_I2C_IdleCheck
  6108                           
  6109                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
  6110  002310  80C5               	bsf	4037,0,c	;volatile
  6111                           
  6112                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
  6113  002312  0E05               	movlw	5
  6114  002314  EC6B  F012         	call	_I2C_IdleCheck
  6115                           
  6116                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
  6117  002318  969E               	bcf	3998,3,c	;volatile
  6118                           
  6119                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  6120  00231A  0100               	movlb	0	; () banked
  6121  00231C  51D5               	movf	I2C_Start@adrs& (0+255),w,b
  6122  00231E  25D5               	addwf	I2C_Start@adrs& (0+255),w,b
  6123  002320  0100               	movlb	0	; () banked
  6124  002322  25D4               	addwf	I2C_Start@rw& (0+255),w,b
  6125  002324  6EC9               	movwf	4041,c	;volatile
  6126  002326                     l879:
  6127  002326  A69E               	btfss	3998,3,c	;volatile
  6128  002328  D7FE               	goto	l879
  6129                           
  6130                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
  6131  00232A  ACC5               	btfss	4037,6,c	;volatile
  6132  00232C  D002               	goto	u6140
  6133  00232E  0E01               	movlw	1
  6134  002330  0012               	return	
  6135  002332                     u6140:
  6136  002332  0E00               	movlw	0
  6137  002334  0012               	return	
  6138  002336                     __end_of_I2C_Start:
  6139                           	opt stack 0
  6140                           tblptru	equ	0xFF8
  6141                           tblptrh	equ	0xFF7
  6142                           tblptrl	equ	0xFF6
  6143                           tablat	equ	0xFF5
  6144                           prodh	equ	0xFF4
  6145                           prodl	equ	0xFF3
  6146                           intcon	equ	0xFF2
  6147                           intcon2	equ	0xFF1
  6148                           indf0	equ	0xFEF
  6149                           postinc0	equ	0xFEE
  6150                           fsr0h	equ	0xFEA
  6151                           fsr0l	equ	0xFE9
  6152                           wreg	equ	0xFE8
  6153                           postinc1	equ	0xFE6
  6154                           postdec1	equ	0xFE5
  6155                           fsr1h	equ	0xFE2
  6156                           fsr1l	equ	0xFE1
  6157                           indf2	equ	0xFDF
  6158                           postinc2	equ	0xFDE
  6159                           postdec2	equ	0xFDD
  6160                           fsr2h	equ	0xFDA
  6161                           fsr2l	equ	0xFD9
  6162                           status	equ	0xFD8
  6163                           
  6164 ;; *************** function _I2C_Send *****************
  6165 ;; Defined at:
  6166 ;;		line 65 in file "../My_header\My_I2C.h"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  data            1    wreg     unsigned char 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  data            1    1[BANK0 ] unsigned char 
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1    wreg      unsigned char 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0, cstack
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6183 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6184 ;;Total ram usage:        1 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    5
  6187 ;; This function calls:
  6188 ;;		_I2C_IdleCheck
  6189 ;; This function is called by:
  6190 ;;		_I2C_LCD_Command
  6191 ;;		_I2C_LCD_Puts
  6192 ;;		_I2C_LCD_Putc
  6193 ;;		_I2C_LCD_CreateChar
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text36
  6198  0024F0                     __ptext36:
  6199                           	opt stack 0
  6200  0024F0                     _I2C_Send:
  6201                           	opt stack 22
  6202                           
  6203                           ;incstack = 0
  6204                           ;I2C_Send@data stored from wreg
  6205  0024F0  0100               	movlb	0	; () banked
  6206  0024F2  6FD4               	movwf	I2C_Send@data& (0+255),b
  6207                           
  6208                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
  6209  0024F4  0E05               	movlw	5
  6210  0024F6  EC6B  F012         	call	_I2C_IdleCheck
  6211                           
  6212                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
  6213  0024FA  969E               	bcf	3998,3,c	;volatile
  6214                           
  6215                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
  6216  0024FC  C0D4  FFC9         	movff	I2C_Send@data,4041	;volatile
  6217  002500                     l894:
  6218  002500  A69E               	btfss	3998,3,c	;volatile
  6219  002502  D7FE               	goto	l894
  6220                           
  6221                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
  6222                           ;	Return value of _I2C_Send is never used
  6223  002504  50C5               	movf	4037,w,c	;volatile
  6224  002506  0012               	return	
  6225  002508                     __end_of_I2C_Send:
  6226                           	opt stack 0
  6227                           tblptru	equ	0xFF8
  6228                           tblptrh	equ	0xFF7
  6229                           tblptrl	equ	0xFF6
  6230                           tablat	equ	0xFF5
  6231                           prodh	equ	0xFF4
  6232                           prodl	equ	0xFF3
  6233                           intcon	equ	0xFF2
  6234                           intcon2	equ	0xFF1
  6235                           indf0	equ	0xFEF
  6236                           postinc0	equ	0xFEE
  6237                           fsr0h	equ	0xFEA
  6238                           fsr0l	equ	0xFE9
  6239                           wreg	equ	0xFE8
  6240                           postinc1	equ	0xFE6
  6241                           postdec1	equ	0xFE5
  6242                           fsr1h	equ	0xFE2
  6243                           fsr1l	equ	0xFE1
  6244                           indf2	equ	0xFDF
  6245                           postinc2	equ	0xFDE
  6246                           postdec2	equ	0xFDD
  6247                           fsr2h	equ	0xFDA
  6248                           fsr2l	equ	0xFD9
  6249                           status	equ	0xFD8
  6250                           
  6251 ;; *************** function _I2C_IdleCheck *****************
  6252 ;; Defined at:
  6253 ;;		line 21 in file "../My_header\My_I2C.h"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  mask            1    wreg     unsigned char 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  mask            1    0[BANK0 ] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;		None               void
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6270 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6271 ;;Total ram usage:        2 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    4
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_I2C_Start
  6278 ;;		_I2C_Stop
  6279 ;;		_I2C_Send
  6280 ;;		_I2C_rStart
  6281 ;;		_I2C_Receive
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text37
  6286  0024D6                     __ptext37:
  6287                           	opt stack 0
  6288  0024D6                     _I2C_IdleCheck:
  6289                           	opt stack 22
  6290                           
  6291                           ;incstack = 0
  6292                           ;I2C_IdleCheck@mask stored from wreg
  6293  0024D6  0100               	movlb	0	; () banked
  6294  0024D8  6FD3               	movwf	I2C_IdleCheck@mask& (0+255),b
  6295  0024DA                     l6290:
  6296  0024DA  50C7               	movf	4039,w,c	;volatile
  6297  0024DC  0100               	movlb	0	; () banked
  6298  0024DE  15D3               	andwf	I2C_IdleCheck@mask& (0+255),w,b
  6299  0024E0  6E20               	movwf	??_I2C_IdleCheck& (0+255),c
  6300  0024E2  50C5               	movf	4037,w,c	;volatile
  6301  0024E4  0B1F               	andlw	31
  6302  0024E6  1020               	iorwf	??_I2C_IdleCheck,w,c
  6303  0024E8  0900               	iorlw	0
  6304  0024EA  B4D8               	btfsc	status,2,c
  6305  0024EC  0012               	return	
  6306  0024EE  D7F5               	goto	l6290
  6307  0024F0                     __end_of_I2C_IdleCheck:
  6308                           	opt stack 0
  6309                           tblptru	equ	0xFF8
  6310                           tblptrh	equ	0xFF7
  6311                           tblptrl	equ	0xFF6
  6312                           tablat	equ	0xFF5
  6313                           prodh	equ	0xFF4
  6314                           prodl	equ	0xFF3
  6315                           intcon	equ	0xFF2
  6316                           intcon2	equ	0xFF1
  6317                           indf0	equ	0xFEF
  6318                           postinc0	equ	0xFEE
  6319                           fsr0h	equ	0xFEA
  6320                           fsr0l	equ	0xFE9
  6321                           wreg	equ	0xFE8
  6322                           postinc1	equ	0xFE6
  6323                           postdec1	equ	0xFE5
  6324                           fsr1h	equ	0xFE2
  6325                           fsr1l	equ	0xFE1
  6326                           indf2	equ	0xFDF
  6327                           postinc2	equ	0xFDE
  6328                           postdec2	equ	0xFDD
  6329                           fsr2h	equ	0xFDA
  6330                           fsr2l	equ	0xFD9
  6331                           status	equ	0xFD8
  6332                           
  6333 ;; *************** function _ISR *****************
  6334 ;; Defined at:
  6335 ;;		line 40 in file "PIC18F27J53-SLEEP01.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;		None
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;		None               void
  6342 ;; Registers used:
  6343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6351 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6352 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;Total ram usage:       15 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    3
  6356 ;; This function calls:
  6357 ;;		_UART_ISR
  6358 ;; This function is called by:
  6359 ;;		Interrupt level 2
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	intcode
  6364  000008                     __pintcode:
  6365                           	opt stack 0
  6366  000008                     _ISR:
  6367                           	opt stack 21
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;incstack = 0
  6371  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6372  00000A  CFFA F012          	movff	pclath,??_ISR+1
  6373  00000E  CFFB F013          	movff	pclatu,??_ISR+2
  6374  000012  CFE9 F014          	movff	fsr0l,??_ISR+3
  6375  000016  CFEA F015          	movff	fsr0h,??_ISR+4
  6376  00001A  CFE1 F016          	movff	fsr1l,??_ISR+5
  6377  00001E  CFE2 F017          	movff	fsr1h,??_ISR+6
  6378  000022  CFD9 F018          	movff	fsr2l,??_ISR+7
  6379  000026  CFDA F019          	movff	fsr2h,??_ISR+8
  6380  00002A  CFF3 F01A          	movff	prodl,??_ISR+9
  6381  00002E  CFF4 F01B          	movff	prodh,??_ISR+10
  6382  000032  CFF6 F01C          	movff	tblptrl,??_ISR+11
  6383  000036  CFF7 F01D          	movff	tblptrh,??_ISR+12
  6384  00003A  CFF8 F01E          	movff	tblptru,??_ISR+13
  6385  00003E  CFF5 F01F          	movff	tablat,??_ISR+14
  6386                           
  6387                           ;PIC18F27J53-SLEEP01.c: 41: UART_ISR();
  6388  000042  EC27  F011         	call	_UART_ISR	;wreg free
  6389                           
  6390                           ;PIC18F27J53-SLEEP01.c: 42: if (INTCONbits.T0IF && INTCONbits.T0IE) {
  6391  000046  B4F2               	btfsc	intcon,2,c	;volatile
  6392  000048  AAF2               	btfss	intcon,5,c	;volatile
  6393  00004A  D00E               	goto	i2l6196
  6394                           
  6395                           ;PIC18F27J53-SLEEP01.c: 43: INTCONbits.T0IF = 0;
  6396  00004C  94F2               	bcf	intcon,2,c	;volatile
  6397                           
  6398                           ;PIC18F27J53-SLEEP01.c: 44: LATBbits.LATB7 = !LATBbits.LATB7;
  6399  00004E  BE8A               	btfsc	3978,7,c	;volatile
  6400  000050  D003               	goto	i2u592_40
  6401  000052  6A11               	clrf	??_ISR& (0+255),c
  6402  000054  2A11               	incf	??_ISR& (0+255),f,c
  6403  000056  D001               	goto	i2u593_48
  6404  000058                     i2u592_40:
  6405  000058  6A11               	clrf	??_ISR& (0+255),c
  6406  00005A                     i2u593_48:
  6407  00005A  3211               	rrcf	??_ISR,f,c
  6408  00005C  3211               	rrcf	??_ISR,f,c
  6409  00005E  508A               	movf	3978,w,c	;volatile
  6410  000060  1811               	xorwf	??_ISR,w,c
  6411  000062  0B7F               	andlw	-129
  6412  000064  1811               	xorwf	??_ISR,w,c
  6413  000066  6E8A               	movwf	3978,c	;volatile
  6414  000068                     i2l6196:
  6415                           
  6416                           ;PIC18F27J53-SLEEP01.c: 45: }
  6417                           ;PIC18F27J53-SLEEP01.c: 46: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  6418  000068  B09E               	btfsc	3998,0,c	;volatile
  6419  00006A  A09D               	btfss	3997,0,c	;volatile
  6420  00006C  D011               	goto	i2l6206
  6421                           
  6422                           ;PIC18F27J53-SLEEP01.c: 47: PIR1bits.TMR1IF = 0;
  6423  00006E  909E               	bcf	3998,0,c	;volatile
  6424                           
  6425                           ;PIC18F27J53-SLEEP01.c: 48: TMR1H = 0xC0;
  6426  000070  0EC0               	movlw	192
  6427  000072  6ECF               	movwf	4047,c	;volatile
  6428                           
  6429                           ;PIC18F27J53-SLEEP01.c: 49: LATBbits.LATB6 = !LATBbits.LATB6;
  6430  000074  BC8A               	btfsc	3978,6,c	;volatile
  6431  000076  D003               	goto	i2u596_40
  6432  000078  6A11               	clrf	??_ISR& (0+255),c
  6433  00007A  2A11               	incf	??_ISR& (0+255),f,c
  6434  00007C  D001               	goto	i2u597_48
  6435  00007E                     i2u596_40:
  6436  00007E  6A11               	clrf	??_ISR& (0+255),c
  6437  000080                     i2u597_48:
  6438  000080  3A11               	swapf	??_ISR,f,c
  6439  000082  4611               	rlncf	??_ISR,f,c
  6440  000084  4611               	rlncf	??_ISR,f,c
  6441  000086  508A               	movf	3978,w,c	;volatile
  6442  000088  1811               	xorwf	??_ISR,w,c
  6443  00008A  0BBF               	andlw	-65
  6444  00008C  1811               	xorwf	??_ISR,w,c
  6445  00008E  6E8A               	movwf	3978,c	;volatile
  6446  000090                     i2l6206:
  6447                           
  6448                           ;PIC18F27J53-SLEEP01.c: 50: }
  6449                           ;PIC18F27J53-SLEEP01.c: 51: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
  6450  000090  B2A1               	btfsc	4001,1,c	;volatile
  6451  000092  A2A0               	btfss	4000,1,c	;volatile
  6452  000094  D00F               	goto	i2l1133
  6453                           
  6454                           ;PIC18F27J53-SLEEP01.c: 52: PIR2bits.TMR3IF = 0;
  6455  000096  92A1               	bcf	4001,1,c	;volatile
  6456                           
  6457                           ;PIC18F27J53-SLEEP01.c: 53: LATBbits.LATB3 = !LATBbits.LATB3;
  6458  000098  B68A               	btfsc	3978,3,c	;volatile
  6459  00009A  D003               	goto	i2u600_40
  6460  00009C  6A11               	clrf	??_ISR& (0+255),c
  6461  00009E  2A11               	incf	??_ISR& (0+255),f,c
  6462  0000A0  D001               	goto	i2u601_48
  6463  0000A2                     i2u600_40:
  6464  0000A2  6A11               	clrf	??_ISR& (0+255),c
  6465  0000A4                     i2u601_48:
  6466  0000A4  4611               	rlncf	??_ISR,f,c
  6467  0000A6  4611               	rlncf	??_ISR,f,c
  6468  0000A8  4611               	rlncf	??_ISR,f,c
  6469  0000AA  508A               	movf	3978,w,c	;volatile
  6470  0000AC  1811               	xorwf	??_ISR,w,c
  6471  0000AE  0BF7               	andlw	-9
  6472  0000B0  1811               	xorwf	??_ISR,w,c
  6473  0000B2  6E8A               	movwf	3978,c	;volatile
  6474  0000B4                     i2l1133:
  6475  0000B4  C01F  FFF5         	movff	??_ISR+14,tablat
  6476  0000B8  C01E  FFF8         	movff	??_ISR+13,tblptru
  6477  0000BC  C01D  FFF7         	movff	??_ISR+12,tblptrh
  6478  0000C0  C01C  FFF6         	movff	??_ISR+11,tblptrl
  6479  0000C4  C01B  FFF4         	movff	??_ISR+10,prodh
  6480  0000C8  C01A  FFF3         	movff	??_ISR+9,prodl
  6481  0000CC  C019  FFDA         	movff	??_ISR+8,fsr2h
  6482  0000D0  C018  FFD9         	movff	??_ISR+7,fsr2l
  6483  0000D4  C017  FFE2         	movff	??_ISR+6,fsr1h
  6484  0000D8  C016  FFE1         	movff	??_ISR+5,fsr1l
  6485  0000DC  C015  FFEA         	movff	??_ISR+4,fsr0h
  6486  0000E0  C014  FFE9         	movff	??_ISR+3,fsr0l
  6487  0000E4  C013  FFFB         	movff	??_ISR+2,pclatu
  6488  0000E8  C012  FFFA         	movff	??_ISR+1,pclath
  6489  0000EC  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6490  0000EE  0011               	retfie		f
  6491  0000F0                     __end_of_ISR:
  6492                           	opt stack 0
  6493                           pclatu	equ	0xFFB
  6494                           pclath	equ	0xFFA
  6495                           tblptru	equ	0xFF8
  6496                           tblptrh	equ	0xFF7
  6497                           tblptrl	equ	0xFF6
  6498                           tablat	equ	0xFF5
  6499                           prodh	equ	0xFF4
  6500                           prodl	equ	0xFF3
  6501                           intcon	equ	0xFF2
  6502                           intcon2	equ	0xFF1
  6503                           indf0	equ	0xFEF
  6504                           postinc0	equ	0xFEE
  6505                           fsr0h	equ	0xFEA
  6506                           fsr0l	equ	0xFE9
  6507                           wreg	equ	0xFE8
  6508                           postinc1	equ	0xFE6
  6509                           postdec1	equ	0xFE5
  6510                           fsr1h	equ	0xFE2
  6511                           fsr1l	equ	0xFE1
  6512                           indf2	equ	0xFDF
  6513                           postinc2	equ	0xFDE
  6514                           postdec2	equ	0xFDD
  6515                           fsr2h	equ	0xFDA
  6516                           fsr2l	equ	0xFD9
  6517                           status	equ	0xFD8
  6518                           
  6519 ;; *************** function _UART_ISR *****************
  6520 ;; Defined at:
  6521 ;;		line 208 in file "../My_header\My_header.h"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  ascii           1   15[COMRAM] unsigned char 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;		None               void
  6528 ;; Registers used:
  6529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6539 ;;Total ram usage:        1 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; Hardware stack levels required when called:    2
  6542 ;; This function calls:
  6543 ;;		i2_ringbuf_num
  6544 ;;		i2_ringbuf_pop
  6545 ;;		i2_ringbuf_put
  6546 ;; This function is called by:
  6547 ;;		_ISR
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text39
  6552  00224E                     __ptext39:
  6553                           	opt stack 0
  6554  00224E                     _UART_ISR:
  6555                           	opt stack 21
  6556                           
  6557                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
  6558                           
  6559                           ;incstack = 0
  6560  00224E  B89D               	btfsc	3997,4,c	;volatile
  6561  002250  A89E               	btfss	3998,4,c	;volatile
  6562  002252  D013               	goto	i2l777
  6563                           
  6564                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
  6565  002254  0EB7               	movlw	low _tx_buf
  6566  002256  6E01               	movwf	i2ringbuf_num@rb,c
  6567  002258  0E00               	movlw	high _tx_buf
  6568  00225A  6E02               	movwf	i2ringbuf_num@rb+1,c
  6569  00225C  ECEE  F00D         	call	i2_ringbuf_num	;wreg free
  6570  002260  5001               	movf	?i2_ringbuf_num,w,c
  6571  002262  1002               	iorwf	?i2_ringbuf_num+1,w,c
  6572  002264  B4D8               	btfsc	status,2,c
  6573  002266  D008               	goto	i2l778
  6574                           
  6575                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
  6576  002268  0EB7               	movlw	low _tx_buf
  6577  00226A  6E09               	movwf	i2ringbuf_pop@rb,c
  6578  00226C  0E00               	movlw	high _tx_buf
  6579  00226E  6E0A               	movwf	i2ringbuf_pop@rb+1,c
  6580  002270  EC02  F00F         	call	i2_ringbuf_pop	;wreg free
  6581  002274  6EAE               	movwf	4014,c	;volatile
  6582                           
  6583                           ;My_header\My_header.h: 212: } else {
  6584  002276  D001               	goto	i2l777
  6585  002278                     i2l778:
  6586                           
  6587                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
  6588  002278  989D               	bcf	3997,4,c	;volatile
  6589  00227A                     i2l777:
  6590                           
  6591                           ;My_header\My_header.h: 214: }
  6592                           ;My_header\My_header.h: 215: }
  6593                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
  6594  00227A  AA9E               	btfss	3998,5,c	;volatile
  6595  00227C  0012               	return	
  6596  00227E  AA9D               	btfss	3997,5,c	;volatile
  6597  002280  0012               	return	
  6598                           
  6599                           ;My_header\My_header.h: 217: char ascii = RCREG1;
  6600  002282  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
  6601                           
  6602                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
  6603  002286  0EAF               	movlw	low _rx_buf
  6604  002288  6E09               	movwf	i2ringbuf_put@rb,c
  6605  00228A  0E00               	movlw	high _rx_buf
  6606  00228C  6E0A               	movwf	i2ringbuf_put@rb+1,c
  6607  00228E  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
  6608  002292  ECA7  F00E         	call	i2_ringbuf_put	;wreg free
  6609  002296  0012               	return	
  6610  002298                     __end_of_UART_ISR:
  6611                           	opt stack 0
  6612                           pclatu	equ	0xFFB
  6613                           pclath	equ	0xFFA
  6614                           tblptru	equ	0xFF8
  6615                           tblptrh	equ	0xFF7
  6616                           tblptrl	equ	0xFF6
  6617                           tablat	equ	0xFF5
  6618                           prodh	equ	0xFF4
  6619                           prodl	equ	0xFF3
  6620                           intcon	equ	0xFF2
  6621                           intcon2	equ	0xFF1
  6622                           indf0	equ	0xFEF
  6623                           postinc0	equ	0xFEE
  6624                           fsr0h	equ	0xFEA
  6625                           fsr0l	equ	0xFE9
  6626                           wreg	equ	0xFE8
  6627                           postinc1	equ	0xFE6
  6628                           postdec1	equ	0xFE5
  6629                           fsr1h	equ	0xFE2
  6630                           fsr1l	equ	0xFE1
  6631                           indf2	equ	0xFDF
  6632                           postinc2	equ	0xFDE
  6633                           postdec2	equ	0xFDD
  6634                           fsr2h	equ	0xFDA
  6635                           fsr2l	equ	0xFD9
  6636                           status	equ	0xFD8
  6637                           
  6638 ;; *************** function i2_ringbuf_put *****************
  6639 ;; Defined at:
  6640 ;;		line 39 in file "../My_header\My_ringbuf.h"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  6643 ;;		 -> rx_buf(8), tx_buf(8), 
  6644 ;;  asciicode       1   10[COMRAM] unsigned char 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;		None
  6647 ;; Return value:  Size  Location     Type
  6648 ;;		None               void
  6649 ;; Registers used:
  6650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6656 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6658 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6659 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6660 ;;Total ram usage:        7 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    1
  6663 ;; This function calls:
  6664 ;;		i2_ringbuf_num
  6665 ;; This function is called by:
  6666 ;;		_UART_ISR
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text40
  6671  001D4E                     __ptext40:
  6672                           	opt stack 0
  6673  001D4E                     i2_ringbuf_put:
  6674                           	opt stack 21
  6675                           
  6676                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  6677                           
  6678                           ;incstack = 0
  6679  001D4E  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
  6680  001D52  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
  6681  001D56  ECEE  F00D         	call	i2_ringbuf_num	;wreg free
  6682  001D5A  EE20 F002          	lfsr	2,2
  6683  001D5E  5009               	movf	i2ringbuf_put@rb,w,c
  6684  001D60  26D9               	addwf	fsr2l,f,c
  6685  001D62  500A               	movf	i2ringbuf_put@rb+1,w,c
  6686  001D64  22DA               	addwfc	fsr2h,f,c
  6687  001D66  50DE               	movf	postinc2,w,c
  6688  001D68  5C01               	subwf	?i2_ringbuf_num,w,c
  6689  001D6A  50DE               	movf	postinc2,w,c
  6690  001D6C  5802               	subwfb	?i2_ringbuf_num+1,w,c
  6691  001D6E  B0D8               	btfsc	status,0,c
  6692  001D70  0012               	return	
  6693                           
  6694                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  6695  001D72  EE20 F004          	lfsr	2,4
  6696  001D76  5009               	movf	i2ringbuf_put@rb,w,c
  6697  001D78  26D9               	addwf	fsr2l,f,c
  6698  001D7A  500A               	movf	i2ringbuf_put@rb+1,w,c
  6699  001D7C  22DA               	addwfc	fsr2h,f,c
  6700  001D7E  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
  6701  001D82  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
  6702  001D86  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
  6703  001D8A  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
  6704  001D8E  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
  6705  001D92  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
  6706  001D96  500C               	movf	??i2_ringbuf_put,w,c
  6707  001D98  240E               	addwf	??i2_ringbuf_put+2,w,c
  6708  001D9A  6ED9               	movwf	fsr2l,c
  6709  001D9C  500D               	movf	??i2_ringbuf_put+1,w,c
  6710  001D9E  200F               	addwfc	??i2_ringbuf_put+3,w,c
  6711  001DA0  6EDA               	movwf	fsr2h,c
  6712  001DA2  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
  6713                           
  6714                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  6715  001DA6  EE20 F002          	lfsr	2,2
  6716  001DAA  5009               	movf	i2ringbuf_put@rb,w,c
  6717  001DAC  26D9               	addwf	fsr2l,f,c
  6718  001DAE  500A               	movf	i2ringbuf_put@rb+1,w,c
  6719  001DB0  22DA               	addwfc	fsr2h,f,c
  6720  001DB2  EE10 F004          	lfsr	1,4
  6721  001DB6  5009               	movf	i2ringbuf_put@rb,w,c
  6722  001DB8  26E1               	addwf	fsr1l,f,c
  6723  001DBA  500A               	movf	i2ringbuf_put@rb+1,w,c
  6724  001DBC  22E2               	addwfc	fsr1h,f,c
  6725  001DBE  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
  6726  001DC2  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
  6727  001DC6  0E01               	movlw	1
  6728  001DC8  260E               	addwf	??i2_ringbuf_put+2,f,c
  6729  001DCA  0E00               	movlw	0
  6730  001DCC  220F               	addwfc	??i2_ringbuf_put+3,f,c
  6731  001DCE  50DE               	movf	postinc2,w,c
  6732  001DD0  5C0E               	subwf	??i2_ringbuf_put+2,w,c
  6733  001DD2  50DE               	movf	postinc2,w,c
  6734  001DD4  580F               	subwfb	??i2_ringbuf_put+3,w,c
  6735  001DD6  B0D8               	btfsc	status,0,c
  6736  001DD8  D00A               	goto	i2l5192
  6737  001DDA  EE20 F004          	lfsr	2,4
  6738  001DDE  5009               	movf	i2ringbuf_put@rb,w,c
  6739  001DE0  26D9               	addwf	fsr2l,f,c
  6740  001DE2  500A               	movf	i2ringbuf_put@rb+1,w,c
  6741  001DE4  22DA               	addwfc	fsr2h,f,c
  6742  001DE6  2ADE               	incf	postinc2,f,c
  6743  001DE8  0E00               	movlw	0
  6744  001DEA  22DD               	addwfc	postdec2,f,c
  6745  001DEC  0012               	return	
  6746  001DEE                     i2l5192:
  6747                           
  6748                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  6749  001DEE  EE20 F004          	lfsr	2,4
  6750  001DF2  5009               	movf	i2ringbuf_put@rb,w,c
  6751  001DF4  26D9               	addwf	fsr2l,f,c
  6752  001DF6  500A               	movf	i2ringbuf_put@rb+1,w,c
  6753  001DF8  22DA               	addwfc	fsr2h,f,c
  6754  001DFA  0E00               	movlw	0
  6755  001DFC  6EDE               	movwf	postinc2,c
  6756  001DFE  0E00               	movlw	0
  6757  001E00  6EDD               	movwf	postdec2,c
  6758  001E02  0012               	return	
  6759  001E04                     __end_ofi2_ringbuf_put:
  6760                           	opt stack 0
  6761                           pclatu	equ	0xFFB
  6762                           pclath	equ	0xFFA
  6763                           tblptru	equ	0xFF8
  6764                           tblptrh	equ	0xFF7
  6765                           tblptrl	equ	0xFF6
  6766                           tablat	equ	0xFF5
  6767                           prodh	equ	0xFF4
  6768                           prodl	equ	0xFF3
  6769                           intcon	equ	0xFF2
  6770                           intcon2	equ	0xFF1
  6771                           indf0	equ	0xFEF
  6772                           postinc0	equ	0xFEE
  6773                           fsr0h	equ	0xFEA
  6774                           fsr0l	equ	0xFE9
  6775                           wreg	equ	0xFE8
  6776                           postinc1	equ	0xFE6
  6777                           postdec1	equ	0xFE5
  6778                           fsr1h	equ	0xFE2
  6779                           fsr1l	equ	0xFE1
  6780                           indf2	equ	0xFDF
  6781                           postinc2	equ	0xFDE
  6782                           postdec2	equ	0xFDD
  6783                           fsr2h	equ	0xFDA
  6784                           fsr2l	equ	0xFD9
  6785                           status	equ	0xFD8
  6786                           
  6787 ;; *************** function i2_ringbuf_pop *****************
  6788 ;; Defined at:
  6789 ;;		line 64 in file "../My_header\My_ringbuf.h"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  6792 ;;		 -> rx_buf(8), tx_buf(8), 
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      unsigned char 
  6797 ;; Registers used:
  6798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6806 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6807 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6808 ;;Total ram usage:        7 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    1
  6811 ;; This function calls:
  6812 ;;		i2_ringbuf_num
  6813 ;; This function is called by:
  6814 ;;		_UART_ISR
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text41
  6819  001E04                     __ptext41:
  6820                           	opt stack 0
  6821  001E04                     i2_ringbuf_pop:
  6822                           	opt stack 21
  6823                           
  6824                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  6825                           
  6826                           ;incstack = 0
  6827  001E04  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
  6828  001E08  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
  6829  001E0C  ECEE  F00D         	call	i2_ringbuf_num	;wreg free
  6830  001E10  5001               	movf	?i2_ringbuf_num,w,c
  6831  001E12  1002               	iorwf	?i2_ringbuf_num+1,w,c
  6832  001E14  B4D8               	btfsc	status,2,c
  6833  001E16  D04A               	goto	i2l5210
  6834                           
  6835                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  6836  001E18  EE20 F006          	lfsr	2,6
  6837  001E1C  5009               	movf	i2ringbuf_pop@rb,w,c
  6838  001E1E  26D9               	addwf	fsr2l,f,c
  6839  001E20  500A               	movf	i2ringbuf_pop@rb+1,w,c
  6840  001E22  22DA               	addwfc	fsr2h,f,c
  6841  001E24  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
  6842  001E28  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
  6843  001E2C  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
  6844  001E30  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
  6845  001E34  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
  6846  001E38  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
  6847  001E3C  500B               	movf	??i2_ringbuf_pop,w,c
  6848  001E3E  240D               	addwf	??i2_ringbuf_pop+2,w,c
  6849  001E40  6ED9               	movwf	fsr2l,c
  6850  001E42  500C               	movf	??i2_ringbuf_pop+1,w,c
  6851  001E44  200E               	addwfc	??i2_ringbuf_pop+3,w,c
  6852  001E46  6EDA               	movwf	fsr2h,c
  6853  001E48  50DF               	movf	indf2,w,c
  6854  001E4A  6E0F               	movwf	i2ringbuf_pop@ret,c
  6855                           
  6856                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  6857  001E4C  EE20 F002          	lfsr	2,2
  6858  001E50  5009               	movf	i2ringbuf_pop@rb,w,c
  6859  001E52  26D9               	addwf	fsr2l,f,c
  6860  001E54  500A               	movf	i2ringbuf_pop@rb+1,w,c
  6861  001E56  22DA               	addwfc	fsr2h,f,c
  6862  001E58  EE10 F006          	lfsr	1,6
  6863  001E5C  5009               	movf	i2ringbuf_pop@rb,w,c
  6864  001E5E  26E1               	addwf	fsr1l,f,c
  6865  001E60  500A               	movf	i2ringbuf_pop@rb+1,w,c
  6866  001E62  22E2               	addwfc	fsr1h,f,c
  6867  001E64  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
  6868  001E68  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
  6869  001E6C  0E01               	movlw	1
  6870  001E6E  260D               	addwf	??i2_ringbuf_pop+2,f,c
  6871  001E70  0E00               	movlw	0
  6872  001E72  220E               	addwfc	??i2_ringbuf_pop+3,f,c
  6873  001E74  50DE               	movf	postinc2,w,c
  6874  001E76  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
  6875  001E78  50DE               	movf	postinc2,w,c
  6876  001E7A  580E               	subwfb	??i2_ringbuf_pop+3,w,c
  6877  001E7C  B0D8               	btfsc	status,0,c
  6878  001E7E  D00A               	goto	i2l5202
  6879                           
  6880                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  6881  001E80  EE20 F006          	lfsr	2,6
  6882  001E84  5009               	movf	i2ringbuf_pop@rb,w,c
  6883  001E86  26D9               	addwf	fsr2l,f,c
  6884  001E88  500A               	movf	i2ringbuf_pop@rb+1,w,c
  6885  001E8A  22DA               	addwfc	fsr2h,f,c
  6886  001E8C  2ADE               	incf	postinc2,f,c
  6887  001E8E  0E00               	movlw	0
  6888  001E90  22DD               	addwfc	postdec2,f,c
  6889                           
  6890                           ;My_header\My_ringbuf.h: 69: } else {
  6891  001E92  D00A               	goto	i2l5204
  6892  001E94                     i2l5202:
  6893                           
  6894                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  6895  001E94  EE20 F006          	lfsr	2,6
  6896  001E98  5009               	movf	i2ringbuf_pop@rb,w,c
  6897  001E9A  26D9               	addwf	fsr2l,f,c
  6898  001E9C  500A               	movf	i2ringbuf_pop@rb+1,w,c
  6899  001E9E  22DA               	addwfc	fsr2h,f,c
  6900  001EA0  0E00               	movlw	0
  6901  001EA2  6EDE               	movwf	postinc2,c
  6902  001EA4  0E00               	movlw	0
  6903  001EA6  6EDD               	movwf	postdec2,c
  6904  001EA8                     i2l5204:
  6905                           
  6906                           ;My_header\My_ringbuf.h: 71: }
  6907                           ;My_header\My_ringbuf.h: 72: return ret;
  6908  001EA8  500F               	movf	i2ringbuf_pop@ret,w,c
  6909                           
  6910                           ;My_header\My_ringbuf.h: 73: } else {
  6911  001EAA  0012               	return	
  6912  001EAC                     i2l5210:
  6913                           
  6914                           ;My_header\My_ringbuf.h: 74: return 0;
  6915  001EAC  0E00               	movlw	0
  6916  001EAE  0012               	return	
  6917  001EB0                     __end_ofi2_ringbuf_pop:
  6918                           	opt stack 0
  6919                           pclatu	equ	0xFFB
  6920                           pclath	equ	0xFFA
  6921                           tblptru	equ	0xFF8
  6922                           tblptrh	equ	0xFF7
  6923                           tblptrl	equ	0xFF6
  6924                           tablat	equ	0xFF5
  6925                           prodh	equ	0xFF4
  6926                           prodl	equ	0xFF3
  6927                           intcon	equ	0xFF2
  6928                           intcon2	equ	0xFF1
  6929                           indf0	equ	0xFEF
  6930                           postinc0	equ	0xFEE
  6931                           fsr0h	equ	0xFEA
  6932                           fsr0l	equ	0xFE9
  6933                           wreg	equ	0xFE8
  6934                           postinc1	equ	0xFE6
  6935                           postdec1	equ	0xFE5
  6936                           fsr1h	equ	0xFE2
  6937                           fsr1l	equ	0xFE1
  6938                           indf2	equ	0xFDF
  6939                           postinc2	equ	0xFDE
  6940                           postdec2	equ	0xFDD
  6941                           fsr2h	equ	0xFDA
  6942                           fsr2l	equ	0xFD9
  6943                           status	equ	0xFD8
  6944                           
  6945 ;; *************** function i2_ringbuf_num *****************
  6946 ;; Defined at:
  6947 ;;		line 31 in file "../My_header\My_ringbuf.h"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  6950 ;;		 -> rx_buf(8), tx_buf(8), 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  2    0[COMRAM] unsigned int 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6964 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6965 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6966 ;;Total ram usage:        8 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_UART_ISR
  6972 ;;		i2_ringbuf_put
  6973 ;;		i2_ringbuf_pop
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text42
  6978  001BDC                     __ptext42:
  6979                           	opt stack 0
  6980  001BDC                     i2_ringbuf_num:
  6981                           	opt stack 21
  6982                           
  6983                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  6984                           
  6985                           ;incstack = 0
  6986  001BDC  EE20 F006          	lfsr	2,6
  6987  001BE0  5001               	movf	i2ringbuf_num@rb,w,c
  6988  001BE2  26D9               	addwf	fsr2l,f,c
  6989  001BE4  5002               	movf	i2ringbuf_num@rb+1,w,c
  6990  001BE6  22DA               	addwfc	fsr2h,f,c
  6991  001BE8  EE10 F004          	lfsr	1,4
  6992  001BEC  5001               	movf	i2ringbuf_num@rb,w,c
  6993  001BEE  26E1               	addwf	fsr1l,f,c
  6994  001BF0  5002               	movf	i2ringbuf_num@rb+1,w,c
  6995  001BF2  22E2               	addwfc	fsr1h,f,c
  6996  001BF4  50DE               	movf	postinc2,w,c
  6997  001BF6  5CE6               	subwf	postinc1,w,c
  6998  001BF8  50DE               	movf	postinc2,w,c
  6999  001BFA  58E6               	subwfb	postinc1,w,c
  7000  001BFC  A0D8               	btfss	status,0,c
  7001  001BFE  D01F               	goto	i2l4820
  7002                           
  7003                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  7004  001C00  EE20 F004          	lfsr	2,4
  7005  001C04  5001               	movf	i2ringbuf_num@rb,w,c
  7006  001C06  26D9               	addwf	fsr2l,f,c
  7007  001C08  5002               	movf	i2ringbuf_num@rb+1,w,c
  7008  001C0A  22DA               	addwfc	fsr2h,f,c
  7009  001C0C  CFDE F003          	movff	postinc2,??i2_ringbuf_num
  7010  001C10  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
  7011  001C14  EE20 F006          	lfsr	2,6
  7012  001C18  5001               	movf	i2ringbuf_num@rb,w,c
  7013  001C1A  26D9               	addwf	fsr2l,f,c
  7014  001C1C  5002               	movf	i2ringbuf_num@rb+1,w,c
  7015  001C1E  22DA               	addwfc	fsr2h,f,c
  7016  001C20  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
  7017  001C24  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
  7018  001C28  1E05               	comf	??i2_ringbuf_num+2,f,c
  7019  001C2A  1E06               	comf	??i2_ringbuf_num+3,f,c
  7020  001C2C  4A05               	infsnz	??i2_ringbuf_num+2,f,c
  7021  001C2E  2A06               	incf	??i2_ringbuf_num+3,f,c
  7022  001C30  5003               	movf	??i2_ringbuf_num,w,c
  7023  001C32  2405               	addwf	??i2_ringbuf_num+2,w,c
  7024  001C34  6E01               	movwf	?i2_ringbuf_num,c
  7025  001C36  5004               	movf	??i2_ringbuf_num+1,w,c
  7026  001C38  2006               	addwfc	??i2_ringbuf_num+3,w,c
  7027  001C3A  6E02               	movwf	?i2_ringbuf_num+1,c
  7028                           
  7029                           ;My_header\My_ringbuf.h: 34: } else {
  7030  001C3C  0012               	return	
  7031  001C3E                     i2l4820:
  7032                           
  7033                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  7034  001C3E  EE20 F004          	lfsr	2,4
  7035  001C42  5001               	movf	i2ringbuf_num@rb,w,c
  7036  001C44  26D9               	addwf	fsr2l,f,c
  7037  001C46  5002               	movf	i2ringbuf_num@rb+1,w,c
  7038  001C48  22DA               	addwfc	fsr2h,f,c
  7039  001C4A  CFDE F003          	movff	postinc2,??i2_ringbuf_num
  7040  001C4E  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
  7041  001C52  EE20 F002          	lfsr	2,2
  7042  001C56  5001               	movf	i2ringbuf_num@rb,w,c
  7043  001C58  26D9               	addwf	fsr2l,f,c
  7044  001C5A  5002               	movf	i2ringbuf_num@rb+1,w,c
  7045  001C5C  22DA               	addwfc	fsr2h,f,c
  7046  001C5E  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
  7047  001C62  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
  7048  001C66  EE20 F006          	lfsr	2,6
  7049  001C6A  5001               	movf	i2ringbuf_num@rb,w,c
  7050  001C6C  26D9               	addwf	fsr2l,f,c
  7051  001C6E  5002               	movf	i2ringbuf_num@rb+1,w,c
  7052  001C70  22DA               	addwfc	fsr2h,f,c
  7053  001C72  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
  7054  001C76  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
  7055  001C7A  1E07               	comf	??i2_ringbuf_num+4,f,c
  7056  001C7C  1E08               	comf	??i2_ringbuf_num+5,f,c
  7057  001C7E  4A07               	infsnz	??i2_ringbuf_num+4,f,c
  7058  001C80  2A08               	incf	??i2_ringbuf_num+5,f,c
  7059  001C82  5005               	movf	??i2_ringbuf_num+2,w,c
  7060  001C84  2607               	addwf	??i2_ringbuf_num+4,f,c
  7061  001C86  5006               	movf	??i2_ringbuf_num+3,w,c
  7062  001C88  2208               	addwfc	??i2_ringbuf_num+5,f,c
  7063  001C8A  5003               	movf	??i2_ringbuf_num,w,c
  7064  001C8C  2407               	addwf	??i2_ringbuf_num+4,w,c
  7065  001C8E  6E01               	movwf	?i2_ringbuf_num,c
  7066  001C90  5004               	movf	??i2_ringbuf_num+1,w,c
  7067  001C92  2008               	addwfc	??i2_ringbuf_num+5,w,c
  7068  001C94  6E02               	movwf	?i2_ringbuf_num+1,c
  7069  001C96  0012               	return	
  7070  001C98                     __end_ofi2_ringbuf_num:
  7071                           	opt stack 0
  7072                           pclatu	equ	0xFFB
  7073                           pclath	equ	0xFFA
  7074                           tblptru	equ	0xFF8
  7075                           tblptrh	equ	0xFF7
  7076                           tblptrl	equ	0xFF6
  7077                           tablat	equ	0xFF5
  7078                           prodh	equ	0xFF4
  7079                           prodl	equ	0xFF3
  7080                           intcon	equ	0xFF2
  7081                           intcon2	equ	0xFF1
  7082                           indf0	equ	0xFEF
  7083                           postinc0	equ	0xFEE
  7084                           fsr0h	equ	0xFEA
  7085                           fsr0l	equ	0xFE9
  7086                           wreg	equ	0xFE8
  7087                           postinc1	equ	0xFE6
  7088                           postdec1	equ	0xFE5
  7089                           fsr1h	equ	0xFE2
  7090                           fsr1l	equ	0xFE1
  7091                           indf2	equ	0xFDF
  7092                           postinc2	equ	0xFDE
  7093                           postdec2	equ	0xFDD
  7094                           fsr2h	equ	0xFDA
  7095                           fsr2l	equ	0xFD9
  7096                           status	equ	0xFD8
  7097                           pclatu	equ	0xFFB
  7098                           pclath	equ	0xFFA
  7099                           tblptru	equ	0xFF8
  7100                           tblptrh	equ	0xFF7
  7101                           tblptrl	equ	0xFF6
  7102                           tablat	equ	0xFF5
  7103                           prodh	equ	0xFF4
  7104                           prodl	equ	0xFF3
  7105                           intcon	equ	0xFF2
  7106                           intcon2	equ	0xFF1
  7107                           indf0	equ	0xFEF
  7108                           postinc0	equ	0xFEE
  7109                           fsr0h	equ	0xFEA
  7110                           fsr0l	equ	0xFE9
  7111                           wreg	equ	0xFE8
  7112                           postinc1	equ	0xFE6
  7113                           postdec1	equ	0xFE5
  7114                           fsr1h	equ	0xFE2
  7115                           fsr1l	equ	0xFE1
  7116                           indf2	equ	0xFDF
  7117                           postinc2	equ	0xFDE
  7118                           postdec2	equ	0xFDD
  7119                           fsr2h	equ	0xFDA
  7120                           fsr2l	equ	0xFD9
  7121                           status	equ	0xFD8
  7122                           
  7123                           	psect	rparam
  7124  0000                     pclatu	equ	0xFFB
  7125                           pclath	equ	0xFFA
  7126                           tblptru	equ	0xFF8
  7127                           tblptrh	equ	0xFF7
  7128                           tblptrl	equ	0xFF6
  7129                           tablat	equ	0xFF5
  7130                           prodh	equ	0xFF4
  7131                           prodl	equ	0xFF3
  7132                           intcon	equ	0xFF2
  7133                           intcon2	equ	0xFF1
  7134                           indf0	equ	0xFEF
  7135                           postinc0	equ	0xFEE
  7136                           fsr0h	equ	0xFEA
  7137                           fsr0l	equ	0xFE9
  7138                           wreg	equ	0xFE8
  7139                           postinc1	equ	0xFE6
  7140                           postdec1	equ	0xFE5
  7141                           fsr1h	equ	0xFE2
  7142                           fsr1l	equ	0xFE1
  7143                           indf2	equ	0xFDF
  7144                           postinc2	equ	0xFDE
  7145                           postdec2	equ	0xFDD
  7146                           fsr2h	equ	0xFDA
  7147                           fsr2l	equ	0xFD9
  7148                           status	equ	0xFD8
  7149                           
  7150                           	psect	temp
  7151  000040                     btemp:
  7152                           	opt stack 0
  7153  000040                     	ds	1
  7154  0000                     int$flags	set	btemp
  7155                           pclatu	equ	0xFFB
  7156                           pclath	equ	0xFFA
  7157                           tblptru	equ	0xFF8
  7158                           tblptrh	equ	0xFF7
  7159                           tblptrl	equ	0xFF6
  7160                           tablat	equ	0xFF5
  7161                           prodh	equ	0xFF4
  7162                           prodl	equ	0xFF3
  7163                           intcon	equ	0xFF2
  7164                           intcon2	equ	0xFF1
  7165                           indf0	equ	0xFEF
  7166                           postinc0	equ	0xFEE
  7167                           fsr0h	equ	0xFEA
  7168                           fsr0l	equ	0xFE9
  7169                           wreg	equ	0xFE8
  7170                           postinc1	equ	0xFE6
  7171                           postdec1	equ	0xFE5
  7172                           fsr1h	equ	0xFE2
  7173                           fsr1l	equ	0xFE1
  7174                           indf2	equ	0xFDF
  7175                           postinc2	equ	0xFDE
  7176                           postdec2	equ	0xFDD
  7177                           fsr2h	equ	0xFDA
  7178                           fsr2l	equ	0xFD9
  7179                           status	equ	0xFD8


Data Sizes:
    Strings     18
    Constant    229
    Data        3
    BSS         2374
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160     41     159
    BANK1           256     14     242
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK1[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[6]), STR_2(CODE[9]), weekday_3char(CODE[28]), STR_1(CODE[3]), 
		 -> display_dec@str(COMRAM[10]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK0[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK0[8]), 

    S2787ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK0[8]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_ringbuf_pop
    _main->_tx_send
    _main_init->_ADC_init
    _main_init->_timer0_init
    _main_init->_timer1_init
    _main_init->_timer3_init
    _I2C_LCD_init->_Delay_ms
    _epoch_to_caltime->_month_length
    _caltime_to_RTCC->_d_to_x
    _caltime_to_epoch->_month_length
    ___lmul->_month_length
    _RTCC_to_caltime->_x_to_d
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _main_init->_ringbuf_init
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _d_to_x->___awdiv
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   25102
                                             40 BANK0      1     1      0
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _main_init
                        _ringbuf_num
                        _ringbuf_pop
                            _tx_send
 ---------------------------------------------------------------------------------
 (1) _tx_send                                              1     1      0    1982
                                             31 COMRAM     1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put                                          7     4      3    1951
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ringbuf_pop                                          7     5      2    1126
                                             31 COMRAM     1     1      0
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _ringbuf_num                                          8     6      2     702
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    2695
                           _ADC_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                             31 COMRAM     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6     810
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1573
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     667
                                              5 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     239
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9169
                                             10 BANK1      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (2) _epoch_to_caltime                                    16    12      4    7312
                                             33 BANK0      6     2      4
                                              0 BANK1     10    10      0
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _get_quot_rem                                         8     4      4    3846
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     865
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _caltime_to_RTCC                                      2     0      2    1140
                                              8 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (3) _d_to_x                                               1     1      0     715
                                             31 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_RTCC                                       4     0      4    6713
                                              0 BANK1      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (2) _caltime_to_epoch                                    15    11      4    4986
                                             25 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _month_length                                         6     5      1    2075
                                             31 COMRAM     1     0      1
                                              6 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1960
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (2) _RTCC_to_caltime                                      3     1      2     386
                                              1 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (3) _x_to_d                                               2     2      0      62
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1    1390
                                              5 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              3 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2    1325
                                              3 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                              1 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              1 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0    1172
                                             16 COMRAM    15    15      0
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (8) _UART_ISR                                             1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_put                                        7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _main_init
     _ADC_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _ringbuf_num
   _ringbuf_pop
     _ringbuf_num
   _tx_send
     _ringbuf_put
       _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      E      F2       7       94.5%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D0       8        0.0%
DATA                 0      0     9A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 20:45:08 2015

                     _USB_SD_Ptr 0F01               __size_of_I2C_Start 0030  
                             _d1 0081                     ___awdiv@sign 00D8  
                             _ms 007D                ??_RTCC_from_epoch 0021  
                   __CFG_CP0$OFF 000000                              l702 2228  
                            l903 22C4                              _BDT 000D00  
                            l697 22E8                              l973 18CA  
                            l894 2500                              l879 2326  
                            l967 1C98                              l986 1368  
                            _ISR 0008                              _UIE 000F36  
                            _UIR 000F62                    ?_get_quot_rem 00EC  
             caltime_to_epoch@ep 00EE               caltime_to_epoch@ct 00EC  
                   ___awmod@sign 00D8                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
                 _USBDeviceState 0034                     _I2C_LCD_Puts 1FF0  
              ??_I2C_LCD_Command 0021                             ?_ISR 0001  
                   _I2C_LCD_init 2154                             l1498 1BCA  
                           l5042 234C                             l6400 1F02  
                           l6332 20B6                             l6412 1F48  
                           l6404 1F26                             l6350 1A94  
                           l6422 1B4E                             l6328 2090  
                           l6408 1F34                             l6360 1AC4  
                           l6344 1A7E                             l6424 1B5E  
                           l7152 14C4                             l6290 24DA  
                           l6434 1BB8                             l6426 1B64  
                           l6506 222A                             l7162 14FE  
                           l6356 1AB2                             l6372 1B02  
                           l6452 2392                             l6358 1ABE  
                           l6630 13DE                             l6454 23A2  
                           l6446 15D4                             l6720 201E  
                           l6392 1EDC                             l6376 1B16  
                           l6368 1AF4                             l7176 1558  
             __CFG_WPFP$PAGE_127 000000                             l6650 101A  
                           l6634 13E6                             l6396 1EF0  
                           l6388 1ECC                             l6476 16D2  
                           l6660 107E                             l6628 13DA  
                           l6556 17DE                             l6726 2050  
                           l6398 1EFC                             l6670 1106  
                           l6654 1024                             l6662 1082  
                           l6494 22FC                             l6728 2078  
                           l6648 1014                             l6666 10A2  
                           l6686 1A44                             l6694 1A5E  
                           l6688 1A5A                             STR_1 0FF5  
                           STR_2 0FE6                             STR_3 0FEF  
                           u6140 2332                             u4365 2476  
                           u4366 2478                             u6410 16C4  
                           u6420 16C6                             u7140 1544  
                           u6430 171A                             u6440 171C  
                           u6408 16B2                             u6370 167C  
                           u6620 2040                             u6380 167E  
                           u6630 2072                             u6390 16AE  
                           u7158 1548                             u7167 24CA  
                           u7177 2398                             u6627 2036  
                           u7187 22CA                             u6637 2068  
                           u7197 204C                             _UCFG 000F39  
                           _UEP0 000F26                             _UEP1 000F27  
                           _UEIE 000F37                             _UEIR 000F63  
                           _UCON 000F65                  _CDCDataInHandle 0092  
                           _pDst 0094                             _main 146E  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2h 000FDA                      _BaudRateGen 0079  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                 __end_of_I2C_Send 2508  
                           btemp 0040           __CFG_DSWDTOSC$T1OSCREF 000000  
               __end_of_I2C_Stop 2524                             pclat 000FFA  
               __end_of_I2C_init 251A                             prodh 000FF4  
                           prodl 000FF3                             start 00F0  
               __end_of_ADC_init 2486                    __CFG_IESO$OFF 000000  
                   ___param_bank 000010                    _I2C_LCD_Clear 24BC  
          __end_ofi2_ringbuf_pop 1EB0            __end_ofi2_ringbuf_num 1C98  
          __end_ofi2_ringbuf_put 1E04                    ADC_init@p_ref 0020  
                          ??_ISR 0011           __size_of_I2C_IdleCheck 001A  
              ??_RTCC_to_caltime 0021                    __CFG_PLLDIV$2 000000  
                   _BAUDCON1bits 000F7E                            ?_main 0001  
                 ??_get_quot_rem 0021                  __end_of___awdiv 1B20  
                          _ADRES 000FC3                  __end_of___awmod 1F52  
                __end_of___lldiv 1BDC                  ___awdiv@divisor 00D5  
                          _LATB2 007C52                            i2l777 227A  
                          i2l778 2278                            _UADDR 000F38  
                ___awdiv@counter 00D7                            _TMR1H 000FCF  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _USTAT 000F64  
            ___lmul@multiplicand 00E4                   __CFG_FCMEN$OFF 000000  
               __end_of_UART_ISR 2298                            _sd000 0FE2  
                          _sd001 0F4C                            _sd002 0F80  
           caltime_to_epoch@year 00F4               __size_of_UART_init 0020  
                          _colon 00A3               __size_of_RTCC_init 002E  
              __end_of_I2C_Start 2336                            tablat 000FF5  
                          status 000FD8                  __end_of_tx_send 24BC  
               __end_of_Delay_ms 23BA                month_length@month 0020  
                 ?_I2C_LCD_Clear 0001                  __initialization 20F4  
                   __end_of_main 155C            _control_signal_bitmap 00A4  
            ringbuf_init@bufsize 00D7                 RTCC_from_RTCC@ep 01E6  
               RTCC_from_RTCC@ct 01E4                           ??_main 00FB  
                  __activetblptr 000003                     _cdc_mem_type 00A2  
                         _BCL1IF 007D0B                    _I2C_IdleCheck 24D6  
               _CDCDataOutHandle 002D                _I2C_LCD_SetCursor 2364  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 00D3  
             I2C_LCD_Command@ans 00D7                           i2l1133 00B4  
                 __CFG_WDTEN$OFF 000000                           i2l5202 1E94  
                         i2l5210 1EAC                           i2l5204 1EA8  
                         i2l6206 0090                           i2l5192 1DEE  
                         i2l4820 1C3E                           i2l6196 0068  
             ?_I2C_LCD_SetCursor 00D8                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE                  i2ringbuf_pop@rb 0009  
                i2ringbuf_num@rb 0001                  i2ringbuf_put@rb 0009  
                 __CFG_WPDIS$OFF 000000               epoch_to_caltime@ep 00F6  
             epoch_to_caltime@ct 00F4                _shortPacketStatus 003D  
            ??_I2C_LCD_SetCursor 0021                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 00F4            caltime_to_epoch@epoch 00F6  
                   ?_ringbuf_pop 00DB                     ?_ringbuf_num 00D3  
                   ?_ringbuf_put 00DB            caltime_to_epoch@month 00FA  
                         ___lmul 207E                  _caltime_to_RTCC 18CA  
             ??_epoch_to_caltime 00F8                __end_of_UART_init 246A  
                      ??___awdiv 0020                        ??___awmod 0020  
                         _d_to_x 23E2                        ??___lldiv 0020  
                   ?_timer0_init 0001                __end_of_RTCC_init 2364  
                   ?_timer1_init 0020                     ?_timer3_init 0001  
                         clear_0 20FC                           clear_1 210E  
                         clear_2 211A                           clear_3 2126  
                __CFG_CLKOEC$OFF 000000                 ___awdiv@quotient 00D9  
                ___awmod@divisor 00D5                  ___awmod@counter 00D7  
                         _x_to_d 2486                           _rx_buf 00AF  
                         _tx_buf 00B7        __size_of_caltime_to_epoch 0288  
                      ?_I2C_Send 0001                        ?_I2C_Stop 0001  
                   __mediumconst 0000                        ?_I2C_init 0001  
      __end_of_I2C_LCD_SetCursor 2390                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ?_ADC_init 0001                   ?_I2C_IdleCheck 0001  
                      ??_tx_send 0020                      _CtrlTrfData 000D38  
           _controlTransferState 0039             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 214A  
                   __pbssBIGRAMl 01F2             __end_of_get_quot_rem 18CA  
                  ___rparam_used 000001                  ??_I2C_LCD_Clear 00D8  
                _RTCC_from_epoch 2406             __CFG_WPEND$PAGE_WPFP 000000  
                 __pcstackCOMRAM 0001                    __end_of_sd000 0FE6  
                  __end_of_sd001 0F80                    __end_of_sd002 0FB4  
                   __pidataBANK0 2524                        ?_UART_ISR 0001  
                __CFG_DSWDTPS$G2 000000                  _I2C_LCD_Command 2298  
               I2C_LCD_Command@c 00D6                       ??_I2C_Send 0021  
                     ??_I2C_Stop 0021                       _cdc_notice 0060  
                     _cdc_rx_len 0036                       ??_I2C_init 0020  
                      ?_Delay_ms 00D3                       _cdc_tx_len 0038  
                     ??_ADC_init 0020       caltime_to_epoch@month_3890 00F5  
             __size_of_main_init 009E                       __pbssBANK0 0060  
                     __pbssBANK1 0100          __end_of_caltime_to_RTCC 199A  
                _RTCC_to_caltime 1C98                      _pBDTEntryIn 0027  
          __end_of_weekday_3char 0FD0                          ?___lmul 00E0  
                     ??_UART_ISR 0010                          ?_d_to_x 0001  
           I2C_LCD_SetCursor@col 00DB                   ___lmul@product 00E8  
                     _device_dsc 0FD0             I2C_LCD_SetCursor@row 00D8  
                        ?_x_to_d 0001                     I2C_Send@data 00D4  
                     _ep_data_in 0084                _configDescriptor1 0F09  
             __CFG_OSC$INTOSCPLL 000000                  ??_I2C_IdleCheck 0020  
                     ??_Delay_ms 0020       __size_of_I2C_LCD_SetCursor 002C  
         I2C_LCD_SetCursor@F8672 00FC                  __CFG_WDTPS$1024 000000  
                        _SPBRGH1 000F7F                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A                          _UIEbits 000F36  
        __end_of_RTCC_from_epoch 2428             timer1_init@prescaler 00D4  
                        _UIRbits 000F62                 i2ringbuf_pop@ret 000F  
               __CFG_CFGPLLEN$ON 000000                    _cdc_trf_state 0037  
                  ?_month_length 0020              epoch_to_caltime@day 01E6  
              RTCC_from_epoch@ep 01F0                RTCC_from_epoch@ct 01EE  
            epoch_to_caltime@num 01EA                        _I2C_Start 2306  
                        _pCDCDst 008A                          _pCDCSrc 008D  
                        __Hparam 0000                          __Lparam 0000  
        __end_of_I2C_LCD_Command 22D0                    ?_ringbuf_init 00D3  
                        ___awdiv 1A62                  __size_of___lmul 0076  
                        ___awmod 1EB0                          ___lldiv 1B20  
                __size_of_d_to_x 0024                     __psmallconst 0F00  
           __size_of_ringbuf_pop 00C8             __size_of_ringbuf_num 00EE  
           __size_of_ringbuf_put 00D4                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 1FF0      epoch_to_caltime@month_cache 00FE  
                        __pcinit 20F4        __end_of_configDescriptor1 0F4C  
                        __ramtop 0F00             __size_of_timer0_init 0036  
                        _halfsec 003C             __size_of_timer1_init 004E  
                        __ptext0 146E                          __ptext1 24A2  
                        __ptext2 1722                          __ptext3 199A  
                        __ptext4 155C                          __ptext5 1F52  
                        __ptext6 23BA                          __ptext7 2200  
                        __ptext8 22D0                          __ptext9 21AC  
                        _inPipes 0021             __size_of_timer3_init 0028  
                __size_of_x_to_d 001C                    I2C_LCD_Puts@s 00D6  
    _USBDeferOUTDataStagePackets 009F                        _T0CONbits 000FD5  
               _time_change_flag 00A5                 _caltime_to_epoch 0FFA  
                   __size_of_ISR 00E8                        _T1CONbits 000FCD  
        __size_of_RTCC_from_RTCC 0022                        _T3CONbits 000F79  
               ___awmod@dividend 00D3                        _T5CONbits 000F22  
             __end_of_USB_CD_Ptr 0F09          __end_of_RTCC_to_caltime 1D4E  
                        _tx_send 24A2            __size_of_get_quot_rem 00D4  
           end_of_initialization 214A           __size_ofi2_ringbuf_pop 00AC  
         __size_ofi2_ringbuf_num 00BC           __size_ofi2_ringbuf_put 00B6  
                   _CTMUCONHbits 000FB3               __end_of_USB_SD_Ptr 0F07  
                   _CTMUCONLbits 000FB2              _pBDTEntryEP0OutNext 0031  
                 ??_month_length 00D9  _dummy_encapsulated_cmd_response 00A7  
               ?_caltime_to_RTCC 00DB                       ?_I2C_Start 00D4  
                ___lldiv@divisor 00D7             timer3_init@prescaler 00D3  
                ___lldiv@counter 00DF                   ??_ringbuf_init 0020  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE       _USBStatusStageEnabledFlag1 00A0  
     _USBStatusStageEnabledFlag2 00A1                        _UART_init 244A  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 2336  
      epoch_to_caltime@day_cache 0096           i2ringbuf_put@asciicode 000B  
                   _get_quot_rem 17F6        __size_of_epoch_to_caltime 01EC  
               __CFG_CPUDIV$OSC1 000000               _BothEP0OutUOWNsSet 009B  
              __size_of_I2C_Send 0018                __size_of_I2C_Stop 000A  
              __size_of_I2C_init 0012                __size_of_ADC_init 001C  
               ?_RTCC_from_epoch 01EE                        _USTATcopy 003F  
        timer1_init@clock_select 0020                 __CFG_IOL1WAY$OFF 000000  
            __CFG_MSSP7B_EN$MSK7 000000                 ?_I2C_LCD_Command 0001  
                 ringbuf_init@rb 00D3                   ringbuf_pop@ret 0020  
                  i2_ringbuf_pop 1E04                    i2_ringbuf_num 1BDC  
                  i2_ringbuf_put 1D4E                   __end_of___lmul 20F4  
                 __end_of_d_to_x 2406                __size_of_UART_ISR 004A  
                     ?_UART_init 0001                       ?_RTCC_init 0001  
               __CFG_DSWDTEN$OFF 000000                _USBBusIsSuspended 009D  
                 __end_of_x_to_d 24A2            epoch_to_caltime@month 01E9  
            start_initialization 20F4                 month_length@year 00DD  
                    __end_of_ISR 00F0                    ?_I2C_LCD_Puts 00D6  
                  ?_I2C_LCD_init 0001                      _cdc_data_rx 0164  
                    _cdc_data_tx 01A4                    UART_ISR@ascii 0010  
              __size_of_Delay_ms 002A                 ?_RTCC_to_caltime 00D4  
                    ??_I2C_Start 0021            __end_of_I2C_LCD_Clear 24D6  
         _pBDTEntryEP0OutCurrent 002F                         ??___lmul 0021  
                 ?i2_ringbuf_pop 0009                   ?i2_ringbuf_num 0001  
                 ?i2_ringbuf_put 0009                         ??_d_to_x 0020  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK0 00FC  
                       ??_x_to_d 0020             __end_of_month_length 1722  
                 _RTCC_from_RTCC 2428           _USBActiveConfiguration 003E  
                    __pbssCOMRAM 0021              RTCC_to_caltime@dumy 00D6  
                  __pcstackBANK0 00D3                    __pcstackBANK1 01E4  
                 ??_I2C_LCD_Puts 00D8                   ??_I2C_LCD_init 0021  
                    _caltime_now 00BF             __end_of_ringbuf_init 2200  
               tx_send@asciicode 0020                     _pBDTEntryOut 0073  
       __end_of_caltime_to_epoch 1282                  millis_timer@cnt 0098  
                      _edit_flag 003A                        __pintcode 0008  
                       ?___awdiv 00D3                         ?___awmod 00D3  
                       ?___lldiv 00D3           __end_of_RTCC_from_RTCC 244A  
                I2C_LCD_Puts@ans 00D9                      ??_UART_init 0020  
     USBCBSendResume@delay_count 0090                      ??_RTCC_init 0020  
                    __smallconst 0F00                        _epoch_now 00CD  
                      _main_init 1F52                      I2C_Start@rw 00D4  
               _epoch_to_caltime 1282                         _I2C_Send 24F0  
                       _I2C_Stop 251A             __CFG_RTCOSC$T1OSCREF 000000  
                       _I2C_init 2508                         _ADC_init 246A  
          __end_of_I2C_IdleCheck 24F0                      _PADCFG1bits 000F3C  
                    _ep_data_out 0087                         ?_tx_send 0001  
                      d_to_x@dec 0020                         _CTMUCONH 000FB3  
                       _CTMUCONL 000FB2                         _CTMUICON 000FB1  
       ringbuf_init@internal_buf 00D5                         _LATBbits 000F8A  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
                ??i2_ringbuf_pop 000B                  ??i2_ringbuf_num 0003  
                ??i2_ringbuf_put 000C                         i2u600_40 00A2  
                       _PIR1bits 000F9E                         i2u601_48 00A4  
                       _PIR2bits 000FA1                         _PIR5bits 000F98  
     epoch_to_caltime@year_cache 00A6                         i2u592_40 0058  
                       i2u593_48 005A                         i2u596_40 007E  
                       i2u597_48 0080                    ??_ringbuf_pop 00DD  
                  ??_ringbuf_num 00D5                    ??_ringbuf_put 00DE  
                       _RCONbits 000FD0                         _UEP0bits 000F26  
     _USBDeferINDataStagePackets 009E                         _UART_ISR 224E  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                  ??_timer0_init 0020                    ??_timer1_init 00D3  
                  ??_timer3_init 0020                         _SSP1STAT 000FC7  
                       _UCONbits 000F65                  ?_RTCC_from_RTCC 01E4  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
               __CFG_SOSCSEL$LOW 000000                       ?_main_init 0001  
                   _RemoteWakeup 009C                         _Delay_ms 2390  
                  ringbuf_pop@rb 00DB                    ringbuf_num@rb 00D3  
                  I2C_Start@adrs 00D5                    ringbuf_put@rb 00DB  
              ___lmul@multiplier 00E0                      _INTCON2bits 000FF1  
           epoch_to_caltime@year 01E8               __end_of_device_dsc 0FE2  
                       __Hrparam 0000                         __Lrparam 0000  
           __end_of_I2C_LCD_Puts 207E                         _SetupPkt 000D30  
                  _weekday_3char 0FB4             __end_of_I2C_LCD_init 21AC  
          __size_of_month_length 00D8         __size_of_caltime_to_RTCC 00D0  
               __size_of___awdiv 00BE                 __size_of___awmod 00A2  
              I2C_IdleCheck@mask 00D3                 __size_of___lldiv 00BC  
            __end_of_ringbuf_pop 1A62              __end_of_ringbuf_num 164A  
            __end_of_ringbuf_put 17F6                      _line_coding 00C6  
            __end_of_timer0_init 2306            __size_of_ringbuf_init 0054  
            __end_of_timer1_init 224E              __end_of_timer3_init 23E2  
           timer0_init@prescaler 00D3                         __ptext10 244A  
                       __ptext11 2336                         __ptext20 1B20  
                       __ptext12 2508                         __ptext21 18CA  
                       __ptext13 2154                         __ptext30 2486  
                       __ptext22 23E2                         __ptext14 24BC  
                       __ptext31 2364                         __ptext23 1A62  
                       __ptext15 2390                         __ptext40 1D4E  
                       __ptext32 2298                         __ptext24 2428  
                       __ptext16 246A                         __ptext41 1E04  
                       __ptext33 1FF0                         __ptext25 0FFA  
                       __ptext17 2406                         __ptext42 1BDC  
                       __ptext34 251A                         __ptext26 164A  
                       __ptext18 1282                         __ptext35 2306  
                       __ptext27 1EB0                         __ptext19 17F6  
                       __ptext36 24F0                         __ptext28 207E  
                       __ptext37 24D6                         __ptext29 1C98  
                       __ptext39 224E                     _SSP1CON2bits 000FC5  
          RTCC_loop@prev_halfsec 009A                 __size_of_tx_send 001A  
                  __size_of_main 00EE                     _month_length 164A  
       __size_of_RTCC_from_epoch 0022                         _outPipes 006A  
                       int$flags 0040                     _ringbuf_init 21AC  
                      x_to_d@hex 00D3         __size_of_I2C_LCD_Command 0038  
      _USBDeferStatusStagePacket 0033                   main_init@rxbuf 0100  
                 main_init@txbuf 01F2                      ??_main_init 0021  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
           ringbuf_put@asciicode 00DD     I2C_LCD_SetCursor@row_offsets 00D9  
                     Delay_ms@ms 00D3                 get_quot_rem@quot 00EC  
              RTCC_to_caltime@ct 00D4                         intlevel2 0000  
               ___lldiv@dividend 00D3                       _RCSTA1bits 000FAC  
              ?_caltime_to_epoch 00EC         __end_of_epoch_to_caltime 146E  
       __size_of_RTCC_to_caltime 00B6                       _OSCCONbits 000FD3  
             ??_caltime_to_epoch 00F0                      _ringbuf_pop 199A  
                    _ringbuf_num 155C                      _ringbuf_put 1722  
                    _timer0_init 22D0                      _timer1_init 2200  
                    _timer3_init 23BA                  get_quot_rem@div 00EE  
                get_quot_rem@num 00F0                       _RTCCFGbits 000F3F  
               ___lldiv@quotient 00DB                caltime_to_RTCC@ct 00DB  
              ??_caltime_to_RTCC 0021            _USBAlternateInterface 00D1  
                _endpoint_number 003B           __size_of_I2C_LCD_Clear 001A  
epoch_to_caltime@day_since_epoch 01E4     _USBStatusStageTimeoutCounter 0035  
          __size_of_I2C_LCD_Puts 008E            __size_of_I2C_LCD_init 0058  
                     _USB_CD_Ptr 0F07                 ??_RTCC_from_RTCC 0021  
