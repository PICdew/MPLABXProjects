

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 18:28:16 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	dabs	1,0xD00,48,_BDT
    43                           	dabs	1,0xD38,8,_CtrlTrfData
    44                           	dabs	1,0xD30,8,_SetupPkt
    45  0000                     
    46                           	psect	idataBANK0
    47  01074C                     __pidataBANK0:
    48                           	opt stack 0
    49                           
    50                           ;initializer for ST7032_cursor@F8633
    51  01074C  00                 	db	0
    52  01074D  40                 	db	64
    53                           
    54                           ;initializer for epoch_to_caltime@month_cache
    55  01074E  01                 	db	1
    56                           
    57                           	psect	mediumconst
    58  00FE6E                     __pmediumconst:
    59                           	opt stack 0
    60  00FE6E  00                 	db	0
    61  00FE6F                     _dpowers:
    62                           	opt stack 0
    63  00FE6F  0001               	dw	1
    64  00FE71  000A               	dw	10
    65  00FE73  0064               	dw	100
    66  00FE75  03E8               	dw	1000
    67  00FE77  2710               	dw	10000
    68  00FE79                     __end_of_dpowers:
    69                           	opt stack 0
    70  00FE79                     _USB_SD_Ptr:
    71                           	opt stack 0
    72  00FE79  5A                 	db	low _sd000
    73  00FE7A  FF                 	db	high _sd000
    74  00FE7B  C4                 	db	low _sd001
    75  00FE7C  FE                 	db	high _sd001
    76  00FE7D  F8                 	db	low _sd002
    77  00FE7E  FE                 	db	high _sd002
    78  00FE7F                     __end_of_USB_SD_Ptr:
    79                           	opt stack 0
    80  00FE7F                     _USB_CD_Ptr:
    81                           	opt stack 0
    82  00FE7F  81                 	db	low _configDescriptor1
    83  00FE80  FE                 	db	high _configDescriptor1
    84  00FE81                     __end_of_USB_CD_Ptr:
    85                           	opt stack 0
    86  00FE81                     _configDescriptor1:
    87                           	opt stack 0
    88  00FE81  09                 	db	9
    89  00FE82  02                 	db	2
    90  00FE83  43                 	db	67
    91  00FE84  00                 	db	0
    92  00FE85  02                 	db	2
    93  00FE86  01                 	db	1
    94  00FE87  00                 	db	0
    95  00FE88  C0                 	db	192
    96  00FE89  32                 	db	50
    97  00FE8A  09                 	db	9
    98  00FE8B  04                 	db	4
    99  00FE8C  00                 	db	0
   100  00FE8D  00                 	db	0
   101  00FE8E  01                 	db	1
   102  00FE8F  02                 	db	2
   103  00FE90  02                 	db	2
   104  00FE91  01                 	db	1
   105  00FE92  00                 	db	0
   106  00FE93  05                 	db	5
   107  00FE94  24                 	db	36
   108  00FE95  00                 	db	0
   109  00FE96  10                 	db	16
   110  00FE97  01                 	db	1
   111  00FE98  04                 	db	4
   112  00FE99  24                 	db	36
   113  00FE9A  02                 	db	2
   114  00FE9B  02                 	db	2
   115  00FE9C  05                 	db	5
   116  00FE9D  24                 	db	36
   117  00FE9E  06                 	db	6
   118  00FE9F  00                 	db	0
   119  00FEA0  01                 	db	1
   120  00FEA1  05                 	db	5
   121  00FEA2  24                 	db	36
   122  00FEA3  01                 	db	1
   123  00FEA4  00                 	db	0
   124  00FEA5  01                 	db	1
   125  00FEA6  07                 	db	7
   126  00FEA7  05                 	db	5
   127  00FEA8  81                 	db	129
   128  00FEA9  03                 	db	3
   129  00FEAA  08                 	db	8
   130  00FEAB  00                 	db	0
   131  00FEAC  02                 	db	2
   132  00FEAD  09                 	db	9
   133  00FEAE  04                 	db	4
   134  00FEAF  01                 	db	1
   135  00FEB0  00                 	db	0
   136  00FEB1  02                 	db	2
   137  00FEB2  0A                 	db	10
   138  00FEB3  00                 	db	0
   139  00FEB4  00                 	db	0
   140  00FEB5  00                 	db	0
   141  00FEB6  07                 	db	7
   142  00FEB7  05                 	db	5
   143  00FEB8  02                 	db	2
   144  00FEB9  02                 	db	2
   145  00FEBA  40                 	db	64
   146  00FEBB  00                 	db	0
   147  00FEBC  00                 	db	0
   148  00FEBD  07                 	db	7
   149  00FEBE  05                 	db	5
   150  00FEBF  82                 	db	130
   151  00FEC0  02                 	db	2
   152  00FEC1  40                 	db	64
   153  00FEC2  00                 	db	0
   154  00FEC3  00                 	db	0
   155  00FEC4                     __end_of_configDescriptor1:
   156                           	opt stack 0
   157  00FEC4                     _sd001:
   158                           	opt stack 0
   159  00FEC4  34                 	db	52
   160  00FEC5  03                 	db	3
   161  00FEC6  004D               	dw	77
   162  00FEC8  0069               	dw	105
   163  00FECA  0063               	dw	99
   164  00FECC  0072               	dw	114
   165  00FECE  006F               	dw	111
   166  00FED0  0063               	dw	99
   167  00FED2  0068               	dw	104
   168  00FED4  0069               	dw	105
   169  00FED6  0070               	dw	112
   170  00FED8  0020               	dw	32
   171  00FEDA  0054               	dw	84
   172  00FEDC  0065               	dw	101
   173  00FEDE  0063               	dw	99
   174  00FEE0  0068               	dw	104
   175  00FEE2  006E               	dw	110
   176  00FEE4  006F               	dw	111
   177  00FEE6  006C               	dw	108
   178  00FEE8  006F               	dw	111
   179  00FEEA  0067               	dw	103
   180  00FEEC  0079               	dw	121
   181  00FEEE  0020               	dw	32
   182  00FEF0  0049               	dw	73
   183  00FEF2  006E               	dw	110
   184  00FEF4  0063               	dw	99
   185  00FEF6  002E               	dw	46
   186  00FEF8                     __end_of_sd001:
   187                           	opt stack 0
   188  00FEF8                     _sd002:
   189                           	opt stack 0
   190  00FEF8  34                 	db	52
   191  00FEF9  03                 	db	3
   192  00FEFA  0043               	dw	67
   193  00FEFC  0044               	dw	68
   194  00FEFE  0043               	dw	67
   195  00FF00  0020               	dw	32
   196  00FF02  0052               	dw	82
   197  00FF04  0053               	dw	83
   198  00FF06  002D               	dw	45
   199  00FF08  0032               	dw	50
   200  00FF0A  0033               	dw	51
   201  00FF0C  0032               	dw	50
   202  00FF0E  0020               	dw	32
   203  00FF10  0045               	dw	69
   204  00FF12  006D               	dw	109
   205  00FF14  0075               	dw	117
   206  00FF16  006C               	dw	108
   207  00FF18  0061               	dw	97
   208  00FF1A  0074               	dw	116
   209  00FF1C  0069               	dw	105
   210  00FF1E  006F               	dw	111
   211  00FF20  006E               	dw	110
   212  00FF22  0020               	dw	32
   213  00FF24  0044               	dw	68
   214  00FF26  0065               	dw	101
   215  00FF28  006D               	dw	109
   216  00FF2A  006F               	dw	111
   217  00FF2C                     __end_of_sd002:
   218                           	opt stack 0
   219  00FF2C                     _weekday_3char:
   220                           	opt stack 0
   221  00FF2C  53                 	db	83
   222  00FF2D  55                 	db	85
   223  00FF2E  4E                 	db	78
   224  00FF2F  00                 	db	0
   225  00FF30  4D                 	db	77
   226  00FF31  4F                 	db	79
   227  00FF32  4E                 	db	78
   228  00FF33  00                 	db	0
   229  00FF34  54                 	db	84
   230  00FF35  55                 	db	85
   231  00FF36  45                 	db	69
   232  00FF37  00                 	db	0
   233  00FF38  57                 	db	87
   234  00FF39  45                 	db	69
   235  00FF3A  44                 	db	68
   236  00FF3B  00                 	db	0
   237  00FF3C  54                 	db	84
   238  00FF3D  48                 	db	72
   239  00FF3E  55                 	db	85
   240  00FF3F  00                 	db	0
   241  00FF40  46                 	db	70
   242  00FF41  52                 	db	82
   243  00FF42  49                 	db	73
   244  00FF43  00                 	db	0
   245  00FF44  53                 	db	83
   246  00FF45  41                 	db	65
   247  00FF46  54                 	db	84
   248  00FF47  00                 	db	0
   249  00FF48                     __end_of_weekday_3char:
   250                           	opt stack 0
   251  00FF48                     _device_dsc:
   252                           	opt stack 0
   253  00FF48  12                 	db	18
   254  00FF49  01                 	db	1
   255  00FF4A  0200               	dw	512
   256  00FF4C  02                 	db	2
   257  00FF4D  00                 	db	0
   258  00FF4E  00                 	db	0
   259  00FF4F  08                 	db	8
   260  00FF50  04D8               	dw	1240
   261  00FF52  000A               	dw	10
   262  00FF54  0100               	dw	256
   263  00FF56  01                 	db	1
   264  00FF57  02                 	db	2
   265  00FF58  00                 	db	0
   266  00FF59  01                 	db	1
   267  00FF5A                     __end_of_device_dsc:
   268                           	opt stack 0
   269  00FF5A                     _sd000:
   270                           	opt stack 0
   271  00FF5A  04                 	db	4
   272  00FF5B  03                 	db	3
   273  00FF5C  0409               	dw	1033
   274  00FF5E                     __end_of_sd000:
   275                           	opt stack 0
   276  0000                     _ANCON0	set	3912
   277  0000                     _ANCON1	set	3913
   278  0000                     _PADCFG1bits	set	3900
   279  0000                     _RTCCAL	set	3902
   280  0000                     _RTCCFGbits	set	3903
   281  0000                     _RTCVALH	set	3899
   282  0000                     _RTCVALL	set	3898
   283  0000                     _T5CONbits	set	3874
   284  0000                     _UADDR	set	3896
   285  0000                     _UCFG	set	3897
   286  0000                     _UEIE	set	3895
   287  0000                     _UEP0bits	set	3878
   288  0000                     _UIE	set	3894
   289  0000                     _UIEbits	set	3894
   290  0000                     _UEP0	set	3878
   291  0000                     _UEP1	set	3879
   292  0000                     _ADRES	set	4035
   293  0000                     _ADCON0bits	set	4034
   294  0000                     _ADCON1bits	set	4033
   295  0000                     _BAUDCON1bits	set	3966
   296  0000                     _CTMUCONH	set	4019
   297  0000                     _CTMUCONHbits	set	4019
   298  0000                     _CTMUCONL	set	4018
   299  0000                     _CTMUCONLbits	set	4018
   300  0000                     _CTMUICON	set	4017
   301  0000                     _EECON2	set	4007
   302  0000                     _INTCON2bits	set	4081
   303  0000                     _INTCONbits	set	4082
   304  0000                     _IPR1bits	set	3999
   305  0000                     _IPR2bits	set	4002
   306  0000                     _IPR5bits	set	3993
   307  0000                     _LATAbits	set	3977
   308  0000                     _OSCCONbits	set	4051
   309  0000                     _OSCTUNEbits	set	3995
   310  0000                     _PIE1bits	set	3997
   311  0000                     _PIE2bits	set	4000
   312  0000                     _PIE5bits	set	3985
   313  0000                     _PIR1bits	set	3998
   314  0000                     _PIR2bits	set	4001
   315  0000                     _PIR5bits	set	3992
   316  0000                     _RCONbits	set	4048
   317  0000                     _RCREG1	set	4015
   318  0000                     _RCSTA1bits	set	4012
   319  0000                     _SPBRG1	set	4016
   320  0000                     _SPBRGH1	set	3967
   321  0000                     _SSP1ADD	set	4040
   322  0000                     _SSP1BUF	set	4041
   323  0000                     _SSP1CON1	set	4038
   324  0000                     _SSP1CON1bits	set	4038
   325  0000                     _SSP1CON2	set	4037
   326  0000                     _SSP1CON2bits	set	4037
   327  0000                     _SSP1STAT	set	4039
   328  0000                     _SSP1STATbits	set	4039
   329  0000                     _SSPBUF	set	4041
   330  0000                     _T0CONbits	set	4053
   331  0000                     _T1CONbits	set	4045
   332  0000                     _T3CONbits	set	3961
   333  0000                     _TMR1H	set	4047
   334  0000                     _TRISA	set	3986
   335  0000                     _TRISB	set	3987
   336  0000                     _TRISC	set	3988
   337  0000                     _TXREG1	set	4014
   338  0000                     _TXSTA1bits	set	4013
   339  0000                     _UCON	set	3941
   340  0000                     _UCONbits	set	3941
   341  0000                     _UEIR	set	3939
   342  0000                     _UIR	set	3938
   343  0000                     _UIRbits	set	3938
   344  0000                     _USTAT	set	3940
   345  0000                     _LATB2	set	31826
   346  0000                     _SSP1IF	set	31987
   347  00FF5E  09                 	db	9
   348  00FF5F  32                 	db	50	;'2'
   349  00FF60  30                 	db	48	;'0'
   350  00FF61  25                 	db	37
   351  00FF62  30                 	db	48	;'0'
   352  00FF63  32                 	db	50	;'2'
   353  00FF64  64                 	db	100	;'d'
   354  00FF65  2F                 	db	47
   355  00FF66  25                 	db	37
   356  00FF67  30                 	db	48	;'0'
   357  00FF68  32                 	db	50	;'2'
   358  00FF69  64                 	db	100	;'d'
   359  00FF6A  2F                 	db	47
   360  00FF6B  25                 	db	37
   361  00FF6C  30                 	db	48	;'0'
   362  00FF6D  32                 	db	50	;'2'
   363  00FF6E  64                 	db	100	;'d'
   364  00FF6F  28                 	db	40
   365  00FF70  25                 	db	37
   366  00FF71  73                 	db	115	;'s'
   367  00FF72  29                 	db	41
   368  00FF73  25                 	db	37
   369  00FF74  30                 	db	48	;'0'
   370  00FF75  32                 	db	50	;'2'
   371  00FF76  64                 	db	100	;'d'
   372  00FF77  3A                 	db	58	;':'
   373  00FF78  25                 	db	37
   374  00FF79  30                 	db	48	;'0'
   375  00FF7A  32                 	db	50	;'2'
   376  00FF7B  64                 	db	100	;'d'
   377  00FF7C  2D                 	db	45
   378  00FF7D  25                 	db	37
   379  00FF7E  30                 	db	48	;'0'
   380  00FF7F  32                 	db	50	;'2'
   381  00FF80  64                 	db	100	;'d'
   382  00FF81  0A                 	db	10
   383  00FF82  00                 	db	0
   384  00FF83  61                 	db	97	;'a'
   385  00FF84  64                 	db	100	;'d'
   386  00FF85  6A                 	db	106	;'j'
   387  00FF86  75                 	db	117	;'u'
   388  00FF87  73                 	db	115	;'s'
   389  00FF88  74                 	db	116	;'t'
   390  00FF89  5F                 	db	95	;'_'
   391  00FF8A  74                 	db	116	;'t'
   392  00FF8B  69                 	db	105	;'i'
   393  00FF8C  6D                 	db	109	;'m'
   394  00FF8D  65                 	db	101	;'e'
   395  00FF8E  00                 	db	0
   396  00FF8F  70                 	db	112	;'p'
   397  00FF90  72                 	db	114	;'r'
   398  00FF91  69                 	db	105	;'i'
   399  00FF92  6E                 	db	110	;'n'
   400  00FF93  74                 	db	116	;'t'
   401  00FF94  5F                 	db	95	;'_'
   402  00FF95  74                 	db	116	;'t'
   403  00FF96  69                 	db	105	;'i'
   404  00FF97  6D                 	db	109	;'m'
   405  00FF98  65                 	db	101	;'e'
   406  00FF99  00                 	db	0
   407  00FF9A                     STR_41:
   408  00FF9A  31                 	db	49	;'1'
   409  00FF9B  38                 	db	56	;'8'
   410  00FF9C  46                 	db	70	;'F'
   411  00FF9D  32                 	db	50	;'2'
   412  00FF9E  37                 	db	55	;'7'
   413  00FF9F  4A                 	db	74	;'J'
   414  00FFA0  35                 	db	53	;'5'
   415  00FFA1  33                 	db	51	;'3'
   416  00FFA2  00                 	db	0
   417  00FFA3                     STR_15:
   418  00FFA3  20                 	db	32
   419  00FFA4  20                 	db	32
   420  00FFA5  20                 	db	32
   421  00FFA6  20                 	db	32
   422  00FFA7  20                 	db	32
   423  00FFA8  20                 	db	32
   424  00FFA9  20                 	db	32
   425  00FFAA  20                 	db	32
   426  00FFAB  00                 	db	0
   427  00FFAC                     STR_42:
   428  00FFAC  49                 	db	73	;'I'
   429  00FFAD  32                 	db	50	;'2'
   430  00FFAE  43                 	db	67	;'C'
   431  00FFAF  5F                 	db	95	;'_'
   432  00FFB0  6E                 	db	110	;'n'
   433  00FFB1  65                 	db	101	;'e'
   434  00FFB2  77                 	db	119	;'w'
   435  00FFB3  00                 	db	0
   436  00FFB4  09                 	db	9
   437  00FFB5  65                 	db	101	;'e'
   438  00FFB6  72                 	db	114	;'r'
   439  00FFB7  72                 	db	114	;'r'
   440  00FFB8  6F                 	db	111	;'o'
   441  00FFB9  72                 	db	114	;'r'
   442  00FFBA  0A                 	db	10
   443  00FFBB  00                 	db	0
   444  00FFBC                     STR_43:
   445  00FFBC  28                 	db	40
   446  00FFBD  6E                 	db	110	;'n'
   447  00FFBE  75                 	db	117	;'u'
   448  00FFBF  6C                 	db	108	;'l'
   449  00FFC0  6C                 	db	108	;'l'
   450  00FFC1  29                 	db	41
   451  00FFC2  00                 	db	0
   452  00FFC3  73                 	db	115	;'s'
   453  00FFC4  65                 	db	101	;'e'
   454  00FFC5  63                 	db	99	;'c'
   455  00FFC6  6F                 	db	111	;'o'
   456  00FFC7  6E                 	db	110	;'n'
   457  00FFC8  64                 	db	100	;'d'
   458  00FFC9  00                 	db	0
   459  00FFCA  6D                 	db	109	;'m'
   460  00FFCB  69                 	db	105	;'i'
   461  00FFCC  6E                 	db	110	;'n'
   462  00FFCD  75                 	db	117	;'u'
   463  00FFCE  74                 	db	116	;'t'
   464  00FFCF  65                 	db	101	;'e'
   465  00FFD0  00                 	db	0
   466  00FFD1                     STR_32:
   467  00FFD1  6D                 	db	109	;'m'
   468  00FFD2  6F                 	db	111	;'o'
   469  00FFD3  6E                 	db	110	;'n'
   470  00FFD4  74                 	db	116	;'t'
   471  00FFD5  68                 	db	104	;'h'
   472  00FFD6  00                 	db	0
   473  00FFD7  79                 	db	121	;'y'
   474  00FFD8  65                 	db	101	;'e'
   475  00FFD9  61                 	db	97	;'a'
   476  00FFDA  72                 	db	114	;'r'
   477  00FFDB  00                 	db	0
   478  00FFDC  68                 	db	104	;'h'
   479  00FFDD  6F                 	db	111	;'o'
   480  00FFDE  75                 	db	117	;'u'
   481  00FFDF  72                 	db	114	;'r'
   482  00FFE0  00                 	db	0
   483  00FFE1                     STR_1:
   484  00FFE1  25                 	db	37
   485  00FFE2  30                 	db	48	;'0'
   486  00FFE3  32                 	db	50	;'2'
   487  00FFE4  64                 	db	100	;'d'
   488  00FFE5  00                 	db	0
   489  00FFE6                     STR_19:
   490  00FFE6  08                 	db	8
   491  00FFE7  20                 	db	32
   492  00FFE8  08                 	db	8
   493  00FFE9  00                 	db	0
   494  00FFEA                     STR_34:
   495  00FFEA  64                 	db	100	;'d'
   496  00FFEB  61                 	db	97	;'a'
   497  00FFEC  79                 	db	121	;'y'
   498  00FFED  00                 	db	0
   499  00FFEE                     STR_27:
   500  00FFEE  61                 	db	97	;'a'
   501  00FFEF  74                 	db	116	;'t'
   502  00FFF0  00                 	db	0
   503  00FFF1  4D                 	db	77	;'M'
   504  00FFF2  00                 	db	0
   505  00FFF3  6D                 	db	109	;'m'
   506  00FFF4  00                 	db	0
   507  00FFF5  73                 	db	115	;'s'
   508  00FFF6  00                 	db	0
   509  00FFF7  28                 	db	40
   510  00FFF8  00                 	db	0
   511  00FFF9                     STR_9:
   512  00FFF9  2D                 	db	45
   513  00FFFA  00                 	db	0
   514  00FFFB                     STR_4:
   515  00FFFB  2F                 	db	47
   516  00FFFC  00                 	db	0
   517  00FFFD                     STR_7:
   518  00FFFD  3A                 	db	58	;':'
   519  00FFFE  00                 	db	0
   520  0000                     
   521                           ; #config settings
   522  00FFFF  00                 	db	0	; dummy byte at the end
   523  0000                     
   524                           	psect	cinit
   525  010492                     __pcinit:
   526                           	opt stack 0
   527  010492                     start_initialization:
   528                           	opt stack 0
   529  010492                     __initialization:
   530                           	opt stack 0
   531                           
   532                           ; Clear objects allocated to BANK2 (200 bytes)
   533  010492  EE02  F000         	lfsr	0,__pbssBANK2
   534  010496  0EC8               	movlw	200
   535  010498                     clear_0:
   536  010498  6AEE               	clrf	postinc0,c
   537  01049A  06E8               	decf	wreg,f,c
   538  01049C  E1FD               	bnz	clear_0
   539                           
   540                           ; Clear objects allocated to BANK1 (203 bytes)
   541  01049E  EE01  F000         	lfsr	0,__pbssBANK1
   542  0104A2  0ECB               	movlw	203
   543  0104A4                     clear_1:
   544  0104A4  6AEE               	clrf	postinc0,c
   545  0104A6  06E8               	decf	wreg,f,c
   546  0104A8  E1FD               	bnz	clear_1
   547                           
   548                           ; Clear objects allocated to BANK0 (152 bytes)
   549  0104AA  EE00  F060         	lfsr	0,__pbssBANK0
   550  0104AE  0E98               	movlw	152
   551  0104B0                     clear_2:
   552  0104B0  6AEE               	clrf	postinc0,c
   553  0104B2  06E8               	decf	wreg,f,c
   554  0104B4  E1FD               	bnz	clear_2
   555                           
   556                           ; Clear objects allocated to COMRAM (57 bytes)
   557  0104B6  EE00  F001         	lfsr	0,__pbssCOMRAM
   558  0104BA  0E39               	movlw	57
   559  0104BC                     clear_3:
   560  0104BC  6AEE               	clrf	postinc0,c
   561  0104BE  06E8               	decf	wreg,f,c
   562  0104C0  E1FD               	bnz	clear_3
   563                           
   564                           ; Initialize objects allocated to BANK0 (3 bytes)
   565                           ; load TBLPTR registers with __pidataBANK0
   566  0104C2  0E4C               	movlw	low __pidataBANK0
   567  0104C4  6EF6               	movwf	tblptrl,c
   568  0104C6  0E07               	movlw	high __pidataBANK0
   569  0104C8  6EF7               	movwf	tblptrh,c
   570  0104CA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   571  0104CC  6EF8               	movwf	tblptru,c
   572  0104CE  0009               	tblrd		*+	;fetch initializer
   573  0104D0  CFF5 F0FD          	movff	tablat,__pdataBANK0
   574  0104D4  0009               	tblrd		*+	;fetch initializer
   575  0104D6  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   576  0104DA  0009               	tblrd		*+	;fetch initializer
   577  0104DC  CFF5 F0FF          	movff	tablat,__pdataBANK0+2
   578  0104E0                     end_of_initialization:
   579                           	opt stack 0
   580  0104E0                     __end_of__initialization:
   581                           	opt stack 0
   582  0104E0  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   583  0104E2  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   584  0104E4  0100               	movlb	0
   585  0104E6  EF10  F082         	goto	_main	;jump to C main() function
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           
   593                           	psect	bssCOMRAM
   594  000001                     __pbssCOMRAM:
   595                           	opt stack 0
   596  000001                     _outPipes:
   597                           	opt stack 0
   598  000001                     	ds	9
   599  00000A                     _inPipes:
   600                           	opt stack 0
   601  00000A                     	ds	6
   602  000010                     _pBDTEntryIn:
   603                           	opt stack 0
   604  000010                     	ds	6
   605  000016                     _CDCDataOutHandle:
   606                           	opt stack 0
   607  000016                     	ds	2
   608  000018                     _pBDTEntryEP0OutCurrent:
   609                           	opt stack 0
   610  000018                     	ds	2
   611  00001A                     _pBDTEntryEP0OutNext:
   612                           	opt stack 0
   613  00001A                     	ds	2
   614  00001C                     RTCC_task@prev_halfsec:
   615                           	opt stack 0
   616  00001C                     	ds	1
   617  00001D                     ST7032_task@st7032_state:
   618                           	opt stack 0
   619  00001D                     	ds	1
   620  00001E                     _BothEP0OutUOWNsSet:
   621                           	opt stack 0
   622  00001E                     	ds	1
   623  00001F                     _I2C_sent_flag:
   624                           	opt stack 0
   625  00001F                     	ds	1
   626  000020                     _RemoteWakeup:
   627                           	opt stack 0
   628  000020                     	ds	1
   629  000021                     _USBDeferINDataStagePackets:
   630                           	opt stack 0
   631  000021                     	ds	1
   632  000022                     _USBDeferOUTDataStagePackets:
   633                           	opt stack 0
   634  000022                     	ds	1
   635  000023                     _USBDeferStatusStagePacket:
   636                           	opt stack 0
   637  000023                     	ds	1
   638  000024                     _USBDeviceState:
   639                           	opt stack 0
   640  000024                     	ds	1
   641  000025                     _USBStatusStageEnabledFlag1:
   642                           	opt stack 0
   643  000025                     	ds	1
   644  000026                     _USBStatusStageEnabledFlag2:
   645                           	opt stack 0
   646  000026                     	ds	1
   647  000027                     _USBStatusStageTimeoutCounter:
   648                           	opt stack 0
   649  000027                     	ds	1
   650  000028                     _cdc_mem_type:
   651                           	opt stack 0
   652  000028                     	ds	1
   653  000029                     _cdc_rx_len:
   654                           	opt stack 0
   655  000029                     	ds	1
   656  00002A                     _cdc_trf_state:
   657                           	opt stack 0
   658  00002A                     	ds	1
   659  00002B                     _cdc_tx_len:
   660                           	opt stack 0
   661  00002B                     	ds	1
   662  00002C                     _controlTransferState:
   663                           	opt stack 0
   664  00002C                     	ds	1
   665  00002D                     _endpoint_number:
   666                           	opt stack 0
   667  00002D                     	ds	1
   668  00002E                     _one_second_flag:
   669                           	opt stack 0
   670  00002E                     	ds	1
   671  00002F                     _shortPacketStatus:
   672                           	opt stack 0
   673  00002F                     	ds	1
   674  000030                     _lcd_tx:
   675                           	opt stack 0
   676  000030                     	ds	8
   677  000038                     _USBActiveConfiguration:
   678                           	opt stack 0
   679  000038                     	ds	1
   680  000039                     _USTATcopy:
   681                           	opt stack 0
   682  000039                     	ds	1
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           postinc0	equ	0xFEE
   688                           wreg	equ	0xFE8
   689                           
   690                           	psect	bssBANK0
   691  000060                     __pbssBANK0:
   692                           	opt stack 0
   693  000060                     _cdc_notice:
   694                           	opt stack 0
   695  000060                     	ds	10
   696  00006A                     _pBDTEntryOut:
   697                           	opt stack 0
   698  00006A                     	ds	6
   699  000070                     _BaudRateGen:
   700                           	opt stack 0
   701  000070                     	ds	4
   702  000074                     _ms:
   703                           	opt stack 0
   704  000074                     	ds	4
   705  000078                     _ep_data_in:
   706                           	opt stack 0
   707  000078                     	ds	3
   708  00007B                     _ep_data_out:
   709                           	opt stack 0
   710  00007B                     	ds	3
   711  00007E                     _pCDCDst:
   712                           	opt stack 0
   713  00007E                     	ds	3
   714  000081                     _pCDCSrc:
   715                           	opt stack 0
   716  000081                     	ds	3
   717  000084                     ST7032_task@wait:
   718                           	opt stack 0
   719  000084                     	ds	2
   720  000086                     USBCBSendResume@delay_count:
   721                           	opt stack 0
   722  000086                     	ds	2
   723  000088                     _CDCDataInHandle:
   724                           	opt stack 0
   725  000088                     	ds	2
   726  00008A                     _pDst:
   727                           	opt stack 0
   728  00008A                     	ds	2
   729  00008C                     epoch_to_caltime@day_cache:
   730                           	opt stack 0
   731  00008C                     	ds	2
   732  00008E                     millis_timer@cnt:
   733                           	opt stack 0
   734  00008E                     	ds	2
   735  000090                     _I2C_busy:
   736                           	opt stack 0
   737  000090                     	ds	1
   738  000091                     _I2C_cfct_flag:
   739                           	opt stack 0
   740  000091                     	ds	1
   741  000092                     _USBBusIsSuspended:
   742                           	opt stack 0
   743  000092                     	ds	1
   744  000093                     _control_signal_bitmap:
   745                           	opt stack 0
   746  000093                     	ds	1
   747  000094                     _st7032_state:
   748                           	opt stack 0
   749  000094                     	ds	1
   750  000095                     _time_change_flag:
   751                           	opt stack 0
   752  000095                     	ds	1
   753  000096                     epoch_to_caltime@year_cache:
   754                           	opt stack 0
   755  000096                     	ds	1
   756  000097                     terminal_task@command_init:
   757                           	opt stack 0
   758  000097                     	ds	1
   759  000098                     terminal_task@op0:
   760                           	opt stack 0
   761  000098                     	ds	25
   762  0000B1                     _now:
   763                           	opt stack 0
   764  0000B1                     	ds	14
   765  0000BF                     _dummy_encapsulated_cmd_response:
   766                           	opt stack 0
   767  0000BF                     	ds	8
   768  0000C7                     _uart_rx:
   769                           	opt stack 0
   770  0000C7                     	ds	8
   771  0000CF                     _uart_tx:
   772                           	opt stack 0
   773  0000CF                     	ds	8
   774  0000D7                     _usb_rx:
   775                           	opt stack 0
   776  0000D7                     	ds	8
   777  0000DF                     _usb_tx:
   778                           	opt stack 0
   779  0000DF                     	ds	8
   780  0000E7                     terminal_task@command:
   781                           	opt stack 0
   782  0000E7                     	ds	8
   783  0000EF                     _line_coding:
   784                           	opt stack 0
   785  0000EF                     	ds	7
   786  0000F6                     _USBAlternateInterface:
   787                           	opt stack 0
   788  0000F6                     	ds	2
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           postinc0	equ	0xFEE
   794                           wreg	equ	0xFE8
   795                           
   796                           	psect	dataBANK0
   797  0000FD                     __pdataBANK0:
   798                           	opt stack 0
   799  0000FD                     ST7032_cursor@F8633:
   800                           	opt stack 0
   801  0000FD                     	ds	2
   802  0000FF                     epoch_to_caltime@month_cache:
   803                           	opt stack 0
   804  0000FF                     	ds	1
   805                           tblptru	equ	0xFF8
   806                           tblptrh	equ	0xFF7
   807                           tblptrl	equ	0xFF6
   808                           tablat	equ	0xFF5
   809                           postinc0	equ	0xFEE
   810                           wreg	equ	0xFE8
   811                           
   812                           	psect	bssBANK1
   813  000100                     __pbssBANK1:
   814                           	opt stack 0
   815  000100                     _cdc_data_rx:
   816                           	opt stack 0
   817  000100                     	ds	64
   818  000140                     _cdc_data_tx:
   819                           	opt stack 0
   820  000140                     	ds	64
   821  000180                     terminal_task@op1:
   822                           	opt stack 0
   823  000180                     	ds	25
   824  000199                     terminal_task@op2:
   825                           	opt stack 0
   826  000199                     	ds	25
   827  0001B2                     terminal_task@op3:
   828                           	opt stack 0
   829  0001B2                     	ds	25
   830                           tblptru	equ	0xFF8
   831                           tblptrh	equ	0xFF7
   832                           tblptrl	equ	0xFF6
   833                           tablat	equ	0xFF5
   834                           postinc0	equ	0xFEE
   835                           wreg	equ	0xFE8
   836                           
   837                           	psect	bssBANK2
   838  000200                     __pbssBANK2:
   839                           	opt stack 0
   840  000200                     ST7032_init@buf:
   841                           	opt stack 0
   842  000200                     	ds	200
   843                           tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           postinc0	equ	0xFEE
   848                           wreg	equ	0xFE8
   849                           
   850                           	psect	cstackBANK1
   851  0001CB                     __pcstackBANK1:
   852                           	opt stack 0
   853  0001CB                     ??_ringbuf_num:
   854                           
   855                           ; 0 bytes @ 0x0
   856  0001CB                     	ds	6
   857  0001D1                     ST7032_cursor@row_offsets:
   858                           	opt stack 0
   859  0001D1                     ST7032_puts@s:
   860                           	opt stack 0
   861                           
   862                           ; 2 bytes @ 0x6
   863  0001D1                     	ds	2
   864  0001D3                     ST7032_cursor@col:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x8
   868  0001D3                     	ds	1
   869  0001D4                     ??_main:
   870                           
   871                           ; 0 bytes @ 0x9
   872  0001D4                     	ds	1
   873                           tblptru	equ	0xFF8
   874                           tblptrh	equ	0xFF7
   875                           tblptrl	equ	0xFF6
   876                           tablat	equ	0xFF5
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           
   880                           	psect	cstackBANK0
   881  0000F8                     __pcstackBANK0:
   882                           	opt stack 0
   883  0000F8                     ??_ringbuf_put:
   884  0000F8                     ??_ringbuf_pop:
   885                           
   886                           ; 0 bytes @ 0x0
   887  0000F8                     	ds	4
   888  0000FC                     ST7032_cursor@row:
   889                           	opt stack 0
   890  0000FC                     ST7032_task@data:
   891                           	opt stack 0
   892                           
   893                           ; 1 bytes @ 0x4
   894  0000FC                     	ds	1
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           tblptrl	equ	0xFF6
   898                           tablat	equ	0xFF5
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           
   902                           	psect	cstackCOMRAM
   903  00003A                     __pcstackCOMRAM:
   904                           	opt stack 0
   905  00003A                     ??_ISR:
   906  00003A                     
   907                           ; 2 bytes @ 0x0
   908  00003A                     	ds	15
   909  000049                     ??_I2C_idole_check:
   910  000049                     ??_timer0_init:
   911  000049                     ?_ringbuf_num:
   912                           	opt stack 0
   913  000049                     I2C_send@data:
   914                           	opt stack 0
   915  000049                     timer1_init@clock_select:
   916                           	opt stack 0
   917  000049                     ringbuf_init@rb:
   918                           	opt stack 0
   919  000049                     ringbuf_num@rb:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0xF
   923  000049                     	ds	1
   924  00004A                     ??_timer1_init:
   925  00004A                     I2C_idole_check@mask:
   926                           	opt stack 0
   927  00004A                     timer0_init@prescaler:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x10
   931  00004A                     	ds	1
   932  00004B                     timer1_init@prescaler:
   933                           	opt stack 0
   934  00004B                     ringbuf_init@internal_buf:
   935                           	opt stack 0
   936  00004B                     ringbuf_put@rb:
   937                           	opt stack 0
   938  00004B                     ringbuf_pop@rb:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x11
   942  00004B                     	ds	2
   943  00004D                     ringbuf_put@asciicode:
   944                           	opt stack 0
   945  00004D                     ringbuf_pop@ret:
   946                           	opt stack 0
   947  00004D                     ringbuf_init@bufsize:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x13
   951  00004D                     	ds	1
   952  00004E                     ??_ST7032_task:
   953  00004E                     ST7032_command@wait:
   954                           	opt stack 0
   955  00004E                     ST7032_put@c:
   956                           	opt stack 0
   957                           
   958                           ; 1 bytes @ 0x14
   959  00004E                     	ds	1
   960  00004F                     ST7032_command@command:
   961                           	opt stack 0
   962                           
   963                           ; 1 bytes @ 0x15
   964  00004F                     	ds	1
   965  000050                     tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           
   972                           ; 0 bytes @ 0x16
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   975 ;;
   976 ;; *************** function _main *****************
   977 ;; Defined at:
   978 ;;		line 57 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  2  1338[None  ] int 
   985 ;; Registers used:
   986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   994 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   995 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   996 ;;Total ram usage:        1 bytes
   997 ;; Hardware stack levels required when called:    8
   998 ;; This function calls:
   999 ;;		_ST7032_clear
  1000 ;;		_ST7032_cursor
  1001 ;;		_ST7032_puts
  1002 ;;		_ST7032_task
  1003 ;;		_main_init
  1004 ;; This function is called by:
  1005 ;;		Startup code after reset
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text0
  1010  010420                     __ptext0:
  1011                           	opt stack 0
  1012  010420                     _main:
  1013                           	opt stack 23
  1014                           
  1015                           ;main.c: 58: main_init();
  1016                           
  1017                           ;incstack = 0
  1018  010420  EC2C  F083         	call	_main_init	;wreg free
  1019                           
  1020                           ;main.c: 59: INTCONbits.GIE = 1;
  1021  010424  8EF2               	bsf	intcon,7,c	;volatile
  1022  010426                     l1339:
  1023                           
  1024                           ;main.c: 62: ST7032_task();
  1025  010426  EC00  F080         	call	_ST7032_task	;wreg free
  1026                           
  1027                           ;main.c: 64: LATAbits.LATA1 = !LATAbits.LATA1;
  1028  01042A  B289               	btfsc	3977,1,c	;volatile
  1029  01042C  D004               	goto	u6820
  1030  01042E  0101               	movlb	1	; () banked
  1031  010430  6BD4               	clrf	??_main& (0+255),b
  1032  010432  2BD4               	incf	??_main& (0+255),f,b
  1033  010434  D002               	goto	u6838
  1034  010436                     u6820:
  1035  010436  0101               	movlb	1	; () banked
  1036  010438  6BD4               	clrf	??_main& (0+255),b
  1037  01043A                     u6838:
  1038  01043A  0101               	movlb	1	; () banked
  1039  01043C  47D4               	rlncf	??_main& (0+255),f,b
  1040  01043E  5089               	movf	3977,w,c	;volatile
  1041  010440  0101               	movlb	1	; () banked
  1042  010442  19D4               	xorwf	??_main& (0+255),w,b
  1043  010444  0BFD               	andlw	-3
  1044  010446  19D4               	xorwf	??_main& (0+255),w,b
  1045  010448  6E89               	movwf	3977,c	;volatile
  1046                           
  1047                           ; BSR set to: 1
  1048                           ;main.c: 66: if (one_second_flag) {
  1049  01044A  502E               	movf	_one_second_flag,w,c
  1050  01044C  B4D8               	btfsc	status,2,c
  1051  01044E  D7EB               	goto	l1339
  1052                           
  1053                           ; BSR set to: 1
  1054                           ;main.c: 67: one_second_flag = 0;
  1055  010450  0E00               	movlw	0
  1056  010452  6E2E               	movwf	_one_second_flag,c
  1057                           
  1058                           ; BSR set to: 1
  1059                           ;main.c: 68: ST7032_clear();
  1060  010454  EC9A  F083         	call	_ST7032_clear	;wreg free
  1061                           
  1062                           ;main.c: 69: ST7032_cursor(0, 0);
  1063  010458  0E00               	movlw	0
  1064  01045A  0100               	movlb	0	; () banked
  1065  01045C  6FFC               	movwf	ST7032_cursor@row& (0+255),b
  1066  01045E  0E00               	movlw	0
  1067  010460  EC5D  F083         	call	_ST7032_cursor
  1068                           
  1069                           ;main.c: 70: ST7032_puts("18F27J53");
  1070  010464  0E9A               	movlw	low STR_41
  1071  010466  0101               	movlb	1	; () banked
  1072  010468  6FD1               	movwf	ST7032_puts@s& (0+255),b
  1073  01046A  0EFF               	movlw	high STR_41
  1074  01046C  0101               	movlb	1	; () banked
  1075  01046E  6FD2               	movwf	(ST7032_puts@s+1)& (0+255),b
  1076  010470  EC12  F083         	call	_ST7032_puts	;wreg free
  1077                           
  1078                           ;main.c: 71: ST7032_cursor(0, 1);
  1079  010474  0E01               	movlw	1
  1080  010476  0100               	movlb	0	; () banked
  1081  010478  6FFC               	movwf	ST7032_cursor@row& (0+255),b
  1082  01047A  0E00               	movlw	0
  1083  01047C  EC5D  F083         	call	_ST7032_cursor
  1084                           
  1085                           ;main.c: 72: ST7032_puts("I2C_new");
  1086  010480  0EAC               	movlw	low STR_42
  1087  010482  0101               	movlb	1	; () banked
  1088  010484  6FD1               	movwf	ST7032_puts@s& (0+255),b
  1089  010486  0EFF               	movlw	high STR_42
  1090  010488  0101               	movlb	1	; () banked
  1091  01048A  6FD2               	movwf	(ST7032_puts@s+1)& (0+255),b
  1092  01048C  EC12  F083         	call	_ST7032_puts	;wreg free
  1093  010490  D7CA               	goto	l1339
  1094  010492                     __end_of_main:
  1095                           	opt stack 0
  1096                           tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           intcon	equ	0xFF2
  1101                           postinc0	equ	0xFEE
  1102                           wreg	equ	0xFE8
  1103                           status	equ	0xFD8
  1104                           
  1105 ;; *************** function _main_init *****************
  1106 ;; Defined at:
  1107 ;;		line 43 in file "main.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;		None               void
  1114 ;; Registers used:
  1115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1125 ;;Total ram usage:        0 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    7
  1128 ;; This function calls:
  1129 ;;		_OSC_init
  1130 ;;		_ST7032_init
  1131 ;;		_timer0_init
  1132 ;;		_timer1_init
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text1
  1139  010658                     __ptext1:
  1140                           	opt stack 0
  1141  010658                     _main_init:
  1142                           	opt stack 23
  1143                           
  1144                           ;main.c: 44: OSC_init();
  1145                           
  1146                           ;incstack = 0
  1147  010658  EC04  F008         	call	_OSC_init	;wreg free
  1148                           
  1149                           ;main.c: 45: TRISA = 0b00010000;
  1150  01065C  0E10               	movlw	16
  1151  01065E  6E92               	movwf	3986,c	;volatile
  1152                           
  1153                           ;main.c: 46: TRISB = 0b00110001;
  1154  010660  0E31               	movlw	49
  1155  010662  6E93               	movwf	3987,c	;volatile
  1156                           
  1157                           ;main.c: 47: TRISC = 0b10111010;
  1158  010664  0EBA               	movlw	186
  1159  010666  6E94               	movwf	3988,c	;volatile
  1160                           
  1161                           ;main.c: 48: ANCON0 = 0b11111111;
  1162  010668  010F               	movlb	15	; () banked
  1163  01066A  6948               	setf	72,b	;volatile
  1164                           
  1165                           ; BSR set to: 15
  1166                           ;main.c: 49: ANCON1 = 0b00011111;
  1167  01066C  0E1F               	movlw	31
  1168  01066E  010F               	movlb	15	; () banked
  1169  010670  6F49               	movwf	73,b	;volatile
  1170                           
  1171                           ; BSR set to: 15
  1172                           ;main.c: 50: INTCON2bits.RBPU = 0;
  1173  010672  9EF1               	bcf	intcon2,7,c	;volatile
  1174                           
  1175                           ; BSR set to: 15
  1176                           ;main.c: 52: timer0_init(6);
  1177  010674  0E06               	movlw	6
  1178  010676  EC45  F083         	call	_timer0_init
  1179                           
  1180                           ;main.c: 53: timer1_init(0, 2);
  1181  01067A  0E02               	movlw	2
  1182  01067C  6E49               	movwf	timer1_init@clock_select,c
  1183  01067E  0E00               	movlw	0
  1184  010680  ECF0  F082         	call	_timer1_init
  1185                           
  1186                           ;main.c: 54: ST7032_init();
  1187  010684  ECC0  F081         	call	_ST7032_init	;wreg free
  1188  010688  0012               	return		;funcret
  1189  01068A                     __end_of_main_init:
  1190                           	opt stack 0
  1191                           tblptru	equ	0xFF8
  1192                           tblptrh	equ	0xFF7
  1193                           tblptrl	equ	0xFF6
  1194                           tablat	equ	0xFF5
  1195                           intcon	equ	0xFF2
  1196                           intcon2	equ	0xFF1
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           status	equ	0xFD8
  1200                           
  1201 ;; *************** function _timer1_init *****************
  1202 ;; Defined at:
  1203 ;;		line 70 in file "../My_library/My_PIC.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  prescaler       1    wreg     unsigned char 
  1206 ;;  clock_select    1   15[COMRAM] unsigned char 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  prescaler       1   17[COMRAM] unsigned char 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;		None               void
  1211 ;; Registers used:
  1212 ;;		wreg, status,2, status,0
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1218 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1221 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1222 ;;Total ram usage:        3 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    2
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_main_init
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text2
  1233  0105E0                     __ptext2:
  1234                           	opt stack 0
  1235  0105E0                     _timer1_init:
  1236                           	opt stack 27
  1237                           
  1238                           ;incstack = 0
  1239                           ;timer1_init@prescaler stored from wreg
  1240  0105E0  6E4B               	movwf	timer1_init@prescaler,c
  1241                           
  1242                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  1243  0105E2  C049  F04A         	movff	timer1_init@clock_select,??_timer1_init
  1244  0105E6  3A4A               	swapf	??_timer1_init,f,c
  1245  0105E8  464A               	rlncf	??_timer1_init,f,c
  1246  0105EA  464A               	rlncf	??_timer1_init,f,c
  1247  0105EC  50CD               	movf	4045,w,c	;volatile
  1248  0105EE  184A               	xorwf	??_timer1_init,w,c
  1249  0105F0  0B3F               	andlw	-193
  1250  0105F2  184A               	xorwf	??_timer1_init,w,c
  1251  0105F4  6ECD               	movwf	4045,c	;volatile
  1252                           
  1253                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  1254  0105F6  0E02               	movlw	2
  1255  0105F8  1849               	xorwf	timer1_init@clock_select,w,c
  1256  0105FA  A4D8               	btfss	status,2,c
  1257  0105FC  D002               	goto	l671
  1258  0105FE  86CD               	bsf	4045,3,c	;volatile
  1259  010600  D001               	goto	l5282
  1260  010602                     l671:
  1261                           
  1262                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  1263  010602  96CD               	bcf	4045,3,c	;volatile
  1264  010604                     l5282:
  1265                           
  1266                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  1267  010604  C04B  F04A         	movff	timer1_init@prescaler,??_timer1_init
  1268  010608  3A4A               	swapf	??_timer1_init,f,c
  1269  01060A  50CD               	movf	4045,w,c	;volatile
  1270  01060C  184A               	xorwf	??_timer1_init,w,c
  1271  01060E  0BCF               	andlw	-49
  1272  010610  184A               	xorwf	??_timer1_init,w,c
  1273  010612  6ECD               	movwf	4045,c	;volatile
  1274                           
  1275                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  1276  010614  84CD               	bsf	4045,2,c	;volatile
  1277                           
  1278                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  1279  010616  92CD               	bcf	4045,1,c	;volatile
  1280                           
  1281                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  1282  010618  80CD               	bsf	4045,0,c	;volatile
  1283                           
  1284                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  1285  01061A  909F               	bcf	3999,0,c	;volatile
  1286                           
  1287                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  1288  01061C  909E               	bcf	3998,0,c	;volatile
  1289                           
  1290                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  1291  01061E  809D               	bsf	3997,0,c	;volatile
  1292                           
  1293                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  1294  010620  8CF2               	bsf	intcon,6,c	;volatile
  1295  010622  0012               	return		;funcret
  1296  010624                     __end_of_timer1_init:
  1297                           	opt stack 0
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           intcon	equ	0xFF2
  1303                           intcon2	equ	0xFF1
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           status	equ	0xFD8
  1307                           
  1308 ;; *************** function _timer0_init *****************
  1309 ;; Defined at:
  1310 ;;		line 34 in file "../My_library/My_PIC.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  prescaler       1    wreg     unsigned char 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  prescaler       1   16[COMRAM] unsigned char 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;		None               void
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1328 ;;Total ram usage:        2 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    2
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_main_init
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text3
  1339  01068A                     __ptext3:
  1340                           	opt stack 0
  1341  01068A                     _timer0_init:
  1342                           	opt stack 27
  1343                           
  1344                           ;incstack = 0
  1345                           ;timer0_init@prescaler stored from wreg
  1346  01068A  6E4A               	movwf	timer0_init@prescaler,c
  1347                           
  1348                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  1349  01068C  8ED5               	bsf	4053,7,c	;volatile
  1350                           
  1351                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  1352  01068E  8CD5               	bsf	4053,6,c	;volatile
  1353                           
  1354                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  1355  010690  9AD5               	bcf	4053,5,c	;volatile
  1356                           
  1357                           ;My_PIC.c: 38: if (prescaler == 0) {
  1358  010692  504A               	movf	timer0_init@prescaler,w,c
  1359  010694  A4D8               	btfss	status,2,c
  1360  010696  D002               	goto	l666
  1361                           
  1362                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  1363  010698  86D5               	bsf	4053,3,c	;volatile
  1364                           
  1365                           ;My_PIC.c: 40: } else {
  1366  01069A  D00A               	goto	l3052
  1367  01069C                     l666:
  1368                           
  1369                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  1370  01069C  96D5               	bcf	4053,3,c	;volatile
  1371                           
  1372                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  1373  01069E  C04A  F049         	movff	timer0_init@prescaler,??_timer0_init
  1374  0106A2  0EFF               	movlw	255
  1375  0106A4  2649               	addwf	??_timer0_init,f,c
  1376  0106A6  50D5               	movf	4053,w,c	;volatile
  1377  0106A8  1849               	xorwf	??_timer0_init,w,c
  1378  0106AA  0BF8               	andlw	-8
  1379  0106AC  1849               	xorwf	??_timer0_init,w,c
  1380  0106AE  6ED5               	movwf	4053,c	;volatile
  1381  0106B0                     l3052:
  1382                           
  1383                           ;My_PIC.c: 43: }
  1384                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  1385  0106B0  8AF2               	bsf	intcon,5,c	;volatile
  1386                           
  1387                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  1388  0106B2  94F2               	bcf	intcon,2,c	;volatile
  1389                           
  1390                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  1391  0106B4  94F1               	bcf	intcon2,2,c	;volatile
  1392                           
  1393                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  1394  0106B6  8CF2               	bsf	intcon,6,c	;volatile
  1395  0106B8  0012               	return		;funcret
  1396  0106BA                     __end_of_timer0_init:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           intcon	equ	0xFF2
  1403                           intcon2	equ	0xFF1
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _ST7032_init *****************
  1409 ;; Defined at:
  1410 ;;		line 61 in file "../My_library/My_ST7032.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;		None               void
  1417 ;; Registers used:
  1418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1428 ;;Total ram usage:        0 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    6
  1431 ;; This function calls:
  1432 ;;		_I2C_init_new
  1433 ;;		_ST7032_clear
  1434 ;;		_ST7032_command
  1435 ;;		_ringbuf_init
  1436 ;;		_ringbuf_put
  1437 ;; This function is called by:
  1438 ;;		_main_init
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text4
  1443  010380                     __ptext4:
  1444                           	opt stack 0
  1445  010380                     _ST7032_init:
  1446                           	opt stack 23
  1447                           
  1448                           ;My_ST7032.c: 62: I2C_init_new();
  1449                           
  1450                           ;incstack = 0
  1451  010380  EC84  F083         	call	_I2C_init_new	;wreg free
  1452                           
  1453                           ;My_ST7032.c: 64: static char buf[200];
  1454                           ;My_ST7032.c: 65: ringbuf_init(&lcd_tx, buf, sizeof (buf));
  1455  010384  0E30               	movlw	low _lcd_tx
  1456  010386  6E49               	movwf	ringbuf_init@rb,c
  1457  010388  0E00               	movlw	high _lcd_tx
  1458  01038A  6E4A               	movwf	ringbuf_init@rb+1,c
  1459  01038C  0E00               	movlw	low ST7032_init@buf
  1460  01038E  6E4B               	movwf	ringbuf_init@internal_buf,c
  1461  010390  0E02               	movlw	high ST7032_init@buf
  1462  010392  6E4C               	movwf	ringbuf_init@internal_buf+1,c
  1463  010394  0E00               	movlw	0
  1464  010396  6E4E               	movwf	ringbuf_init@bufsize+1,c
  1465  010398  0EC8               	movlw	200
  1466  01039A  6E4D               	movwf	ringbuf_init@bufsize,c
  1467  01039C  ECC9  F082         	call	_ringbuf_init	;wreg free
  1468                           
  1469                           ;My_ST7032.c: 67: ringbuf_put(&lcd_tx, 0);
  1470  0103A0  0E30               	movlw	low _lcd_tx
  1471  0103A2  6E4B               	movwf	ringbuf_put@rb,c
  1472  0103A4  0E00               	movlw	high _lcd_tx
  1473  0103A6  6E4C               	movwf	ringbuf_put@rb+1,c
  1474  0103A8  0E00               	movlw	0
  1475  0103AA  6E4D               	movwf	ringbuf_put@asciicode,c
  1476  0103AC  EC01  F081         	call	_ringbuf_put	;wreg free
  1477                           
  1478                           ;My_ST7032.c: 68: ringbuf_put(&lcd_tx, 3);
  1479  0103B0  0E30               	movlw	low _lcd_tx
  1480  0103B2  6E4B               	movwf	ringbuf_put@rb,c
  1481  0103B4  0E00               	movlw	high _lcd_tx
  1482  0103B6  6E4C               	movwf	ringbuf_put@rb+1,c
  1483  0103B8  0E03               	movlw	3
  1484  0103BA  6E4D               	movwf	ringbuf_put@asciicode,c
  1485  0103BC  EC01  F081         	call	_ringbuf_put	;wreg free
  1486                           
  1487                           ;My_ST7032.c: 70: ST7032_command(0x38, 1);
  1488  0103C0  0E01               	movlw	1
  1489  0103C2  6E4E               	movwf	ST7032_command@wait,c
  1490  0103C4  0E38               	movlw	56
  1491  0103C6  EC9F  F082         	call	_ST7032_command
  1492                           
  1493                           ;My_ST7032.c: 71: ST7032_command(0x39, 1);
  1494  0103CA  0E01               	movlw	1
  1495  0103CC  6E4E               	movwf	ST7032_command@wait,c
  1496  0103CE  0E39               	movlw	57
  1497  0103D0  EC9F  F082         	call	_ST7032_command
  1498                           
  1499                           ;My_ST7032.c: 72: ST7032_command(0x14, 1);
  1500  0103D4  0E01               	movlw	1
  1501  0103D6  6E4E               	movwf	ST7032_command@wait,c
  1502  0103D8  0E14               	movlw	20
  1503  0103DA  EC9F  F082         	call	_ST7032_command
  1504                           
  1505                           ;My_ST7032.c: 73: ST7032_command(0x70, 1);
  1506  0103DE  0E01               	movlw	1
  1507  0103E0  6E4E               	movwf	ST7032_command@wait,c
  1508  0103E2  0E70               	movlw	112
  1509  0103E4  EC9F  F082         	call	_ST7032_command
  1510                           
  1511                           ;My_ST7032.c: 74: ST7032_command(0x56, 1);
  1512  0103E8  0E01               	movlw	1
  1513  0103EA  6E4E               	movwf	ST7032_command@wait,c
  1514  0103EC  0E56               	movlw	86
  1515  0103EE  EC9F  F082         	call	_ST7032_command
  1516                           
  1517                           ;My_ST7032.c: 75: ST7032_command(0x6C, 3);
  1518  0103F2  0E03               	movlw	3
  1519  0103F4  6E4E               	movwf	ST7032_command@wait,c
  1520  0103F6  0E6C               	movlw	108
  1521  0103F8  EC9F  F082         	call	_ST7032_command
  1522                           
  1523                           ;My_ST7032.c: 76: ST7032_command(0x38, 1);
  1524  0103FC  0E01               	movlw	1
  1525  0103FE  6E4E               	movwf	ST7032_command@wait,c
  1526  010400  0E38               	movlw	56
  1527  010402  EC9F  F082         	call	_ST7032_command
  1528                           
  1529                           ;My_ST7032.c: 77: ST7032_command(0x0C, 1);
  1530  010406  0E01               	movlw	1
  1531  010408  6E4E               	movwf	ST7032_command@wait,c
  1532  01040A  0E0C               	movlw	12
  1533  01040C  EC9F  F082         	call	_ST7032_command
  1534                           
  1535                           ;My_ST7032.c: 78: ST7032_command(0x06, 1);
  1536  010410  0E01               	movlw	1
  1537  010412  6E4E               	movwf	ST7032_command@wait,c
  1538  010414  0E06               	movlw	6
  1539  010416  EC9F  F082         	call	_ST7032_command
  1540                           
  1541                           ;My_ST7032.c: 79: ST7032_clear();
  1542  01041A  EC9A  F083         	call	_ST7032_clear	;wreg free
  1543  01041E  0012               	return		;funcret
  1544  010420                     __end_of_ST7032_init:
  1545                           	opt stack 0
  1546                           tblptru	equ	0xFF8
  1547                           tblptrh	equ	0xFF7
  1548                           tblptrl	equ	0xFF6
  1549                           tablat	equ	0xFF5
  1550                           intcon	equ	0xFF2
  1551                           intcon2	equ	0xFF1
  1552                           postinc0	equ	0xFEE
  1553                           wreg	equ	0xFE8
  1554                           status	equ	0xFD8
  1555                           
  1556 ;; *************** function _ringbuf_init *****************
  1557 ;; Defined at:
  1558 ;;		line 5 in file "../My_library/My_ringbuf.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  rb              2   15[COMRAM] PTR struct ringbuf
  1561 ;;		 -> lcd_tx(8), terminal_task@command(8), 
  1562 ;;  internal_buf    2   17[COMRAM] PTR unsigned char 
  1563 ;;		 -> ST7032_init@buf(200), terminal_task@buf(100), 
  1564 ;;  bufsize         2   19[COMRAM] unsigned int 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;		None               void
  1569 ;; Registers used:
  1570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1576 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1580 ;;Total ram usage:        6 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    2
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_ST7032_init
  1587 ;;		_terminal_task
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text5
  1592  010592                     __ptext5:
  1593                           	opt stack 0
  1594  010592                     _ringbuf_init:
  1595                           	opt stack 26
  1596                           
  1597                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  1598                           
  1599                           ;incstack = 0
  1600  010592  C049  FFD9         	movff	ringbuf_init@rb,fsr2l
  1601  010596  C04A  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  1602  01059A  C04B  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  1603  01059E  C04C  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  1604                           
  1605                           ;My_ringbuf.c: 7: rb->size = bufsize;
  1606  0105A2  EE20 F002          	lfsr	2,2
  1607  0105A6  5049               	movf	ringbuf_init@rb,w,c
  1608  0105A8  26D9               	addwf	fsr2l,f,c
  1609  0105AA  504A               	movf	ringbuf_init@rb+1,w,c
  1610  0105AC  22DA               	addwfc	fsr2h,f,c
  1611  0105AE  C04D  FFDE         	movff	ringbuf_init@bufsize,postinc2
  1612  0105B2  C04E  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  1613                           
  1614                           ;My_ringbuf.c: 8: rb->head = 0;
  1615  0105B6  EE20 F004          	lfsr	2,4
  1616  0105BA  5049               	movf	ringbuf_init@rb,w,c
  1617  0105BC  26D9               	addwf	fsr2l,f,c
  1618  0105BE  504A               	movf	ringbuf_init@rb+1,w,c
  1619  0105C0  22DA               	addwfc	fsr2h,f,c
  1620  0105C2  0E00               	movlw	0
  1621  0105C4  6EDE               	movwf	postinc2,c
  1622  0105C6  0E00               	movlw	0
  1623  0105C8  6EDD               	movwf	postdec2,c
  1624                           
  1625                           ;My_ringbuf.c: 9: rb->tail = 0;
  1626  0105CA  EE20 F006          	lfsr	2,6
  1627  0105CE  5049               	movf	ringbuf_init@rb,w,c
  1628  0105D0  26D9               	addwf	fsr2l,f,c
  1629  0105D2  504A               	movf	ringbuf_init@rb+1,w,c
  1630  0105D4  22DA               	addwfc	fsr2h,f,c
  1631  0105D6  0E00               	movlw	0
  1632  0105D8  6EDE               	movwf	postinc2,c
  1633  0105DA  0E00               	movlw	0
  1634  0105DC  6EDD               	movwf	postdec2,c
  1635  0105DE  0012               	return		;funcret
  1636  0105E0                     __end_of_ringbuf_init:
  1637                           	opt stack 0
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           intcon	equ	0xFF2
  1643                           intcon2	equ	0xFF1
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           postinc2	equ	0xFDE
  1647                           postdec2	equ	0xFDD
  1648                           fsr2h	equ	0xFDA
  1649                           fsr2l	equ	0xFD9
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _ST7032_clear *****************
  1653 ;; Defined at:
  1654 ;;		line 25 in file "../My_library/My_ST7032.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;		None               void
  1661 ;; Registers used:
  1662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    5
  1675 ;; This function calls:
  1676 ;;		_ST7032_command
  1677 ;; This function is called by:
  1678 ;;		_ST7032_init
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text6
  1684  010734                     __ptext6:
  1685                           	opt stack 0
  1686  010734                     _ST7032_clear:
  1687                           	opt stack 23
  1688                           
  1689                           ;My_ST7032.c: 26: ST7032_command(0x01, 2);
  1690                           
  1691                           ;incstack = 0
  1692  010734  0E02               	movlw	2
  1693  010736  6E4E               	movwf	ST7032_command@wait,c
  1694  010738  0E01               	movlw	1
  1695  01073A  EC9F  F082         	call	_ST7032_command
  1696  01073E  0012               	return		;funcret
  1697  010740                     __end_of_ST7032_clear:
  1698                           	opt stack 0
  1699                           tblptru	equ	0xFF8
  1700                           tblptrh	equ	0xFF7
  1701                           tblptrl	equ	0xFF6
  1702                           tablat	equ	0xFF5
  1703                           intcon	equ	0xFF2
  1704                           intcon2	equ	0xFF1
  1705                           postinc0	equ	0xFEE
  1706                           wreg	equ	0xFE8
  1707                           postinc2	equ	0xFDE
  1708                           postdec2	equ	0xFDD
  1709                           fsr2h	equ	0xFDA
  1710                           fsr2l	equ	0xFD9
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _I2C_init_new *****************
  1714 ;; Defined at:
  1715 ;;		line 31 in file "../My_library/My_I2C.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;		None               void
  1722 ;; Registers used:
  1723 ;;		wreg, status,2
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    2
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_ST7032_init
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text7
  1744  010708                     __ptext7:
  1745                           	opt stack 0
  1746  010708                     _I2C_init_new:
  1747                           	opt stack 26
  1748                           
  1749                           ;My_I2C.c: 32: SSP1STAT = 0b10000000;
  1750                           
  1751                           ;incstack = 0
  1752  010708  0E80               	movlw	128
  1753  01070A  6EC7               	movwf	4039,c	;volatile
  1754                           
  1755                           ;My_I2C.c: 33: SSP1CON1 = 0b00101000;
  1756  01070C  0E28               	movlw	40
  1757  01070E  6EC6               	movwf	4038,c	;volatile
  1758                           
  1759                           ;My_I2C.c: 34: SSP1ADD = 0x13;
  1760  010710  0E13               	movlw	19
  1761  010712  6EC8               	movwf	4040,c	;volatile
  1762                           
  1763                           ;My_I2C.c: 35: PIE1bits.SSP1IE = 1;
  1764  010714  869D               	bsf	3997,3,c	;volatile
  1765                           
  1766                           ;My_I2C.c: 36: IPR1bits.SSP1IP = 0;
  1767  010716  969F               	bcf	3999,3,c	;volatile
  1768                           
  1769                           ;My_I2C.c: 37: PIR1bits.SSP1IF = 0;
  1770  010718  969E               	bcf	3998,3,c	;volatile
  1771                           
  1772                           ;My_I2C.c: 38: PIE2bits.BCL1IE = 1;
  1773  01071A  86A0               	bsf	4000,3,c	;volatile
  1774                           
  1775                           ;My_I2C.c: 39: IPR2bits.BCL1IP = 0;
  1776  01071C  96A2               	bcf	4002,3,c	;volatile
  1777                           
  1778                           ;My_I2C.c: 40: PIR2bits.BCL1IF = 0;
  1779  01071E  96A1               	bcf	4001,3,c	;volatile
  1780                           
  1781                           ;My_I2C.c: 41: INTCONbits.PEIE = 1;
  1782  010720  8CF2               	bsf	intcon,6,c	;volatile
  1783  010722  0012               	return		;funcret
  1784  010724                     __end_of_I2C_init_new:
  1785                           	opt stack 0
  1786                           tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           intcon	equ	0xFF2
  1791                           intcon2	equ	0xFF1
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           postinc2	equ	0xFDE
  1795                           postdec2	equ	0xFDD
  1796                           fsr2h	equ	0xFDA
  1797                           fsr2l	equ	0xFD9
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function _OSC_init *****************
  1801 ;; Defined at:
  1802 ;;		line 8 in file "../My_library/My_PIC.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;		None               void
  1809 ;; Registers used:
  1810 ;;		wreg, status,2
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1820 ;;Total ram usage:        0 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    2
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_main_init
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text8
  1831  001008                     __ptext8:
  1832                           	opt stack 0
  1833  001008                     _OSC_init:
  1834                           	opt stack 27
  1835                           
  1836                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  1837                           
  1838                           ;incstack = 0
  1839  001008  88D3               	bsf	4051,4,c	;volatile
  1840  00100A  8AD3               	bsf	4051,5,c	;volatile
  1841  00100C  8CD3               	bsf	4051,6,c	;volatile
  1842                           
  1843                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  1844  00100E  8C9B               	bsf	3995,6,c	;volatile
  1845                           
  1846                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  1847  001010  0EFC               	movlw	-4
  1848  001012  16D3               	andwf	4051,f,c	;volatile
  1849  001014  0012               	return		;funcret
  1850  001016                     __end_of_OSC_init:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           intcon	equ	0xFF2
  1857                           intcon2	equ	0xFF1
  1858                           postinc0	equ	0xFEE
  1859                           wreg	equ	0xFE8
  1860                           postinc2	equ	0xFDE
  1861                           postdec2	equ	0xFDD
  1862                           fsr2h	equ	0xFDA
  1863                           fsr2l	equ	0xFD9
  1864                           status	equ	0xFD8
  1865                           
  1866 ;; *************** function _ST7032_task *****************
  1867 ;; Defined at:
  1868 ;;		line 82 in file "../My_library/My_ST7032.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  data            1    4[BANK0 ] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;		None               void
  1875 ;; Registers used:
  1876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1885 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;Total ram usage:        3 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    4
  1889 ;; This function calls:
  1890 ;;		_I2C_idole_check
  1891 ;;		_I2C_send
  1892 ;;		_I2C_start
  1893 ;;		_I2C_stop
  1894 ;;		_ringbuf_num
  1895 ;;		_ringbuf_pop
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text9
  1902  010000                     __ptext9:
  1903                           	opt stack 0
  1904  010000                     _ST7032_task:
  1905                           	opt stack 26
  1906                           
  1907                           ;My_ST7032.c: 83: if (I2C_idole_check(0x05)) return;
  1908                           
  1909                           ;incstack = 0
  1910  010000  0E05               	movlw	5
  1911  010002  EC92  F083         	call	_I2C_idole_check
  1912  010006  0900               	iorlw	0
  1913  010008  A4D8               	btfss	status,2,c
  1914  01000A  0012               	return	
  1915  01000C  D07D               	goto	l6952
  1916  01000E                     l6900:
  1917                           
  1918                           ;My_ST7032.c: 90: if (ringbuf_num(&lcd_tx)) {
  1919  01000E  0E30               	movlw	low _lcd_tx
  1920  010010  6E49               	movwf	ringbuf_num@rb,c
  1921  010012  0E00               	movlw	high _lcd_tx
  1922  010014  6E4A               	movwf	ringbuf_num@rb+1,c
  1923  010016  EC95  F080         	call	_ringbuf_num	;wreg free
  1924  01001A  5049               	movf	?_ringbuf_num,w,c
  1925  01001C  104A               	iorwf	?_ringbuf_num+1,w,c
  1926  01001E  B4D8               	btfsc	status,2,c
  1927  010020  0012               	return	
  1928                           
  1929                           ;My_ST7032.c: 91: st7032_state = ST7032_START;
  1930  010022  0E01               	movlw	1
  1931  010024  6E1D               	movwf	ST7032_task@st7032_state,c
  1932                           
  1933                           ;My_ST7032.c: 92: }
  1934                           ;My_ST7032.c: 93: break;
  1935  010026  0012               	return	
  1936  010028                     l6904:
  1937                           
  1938                           ;My_ST7032.c: 95: I2C_sent_flag = 1;
  1939  010028  0E01               	movlw	1
  1940  01002A  6E1F               	movwf	_I2C_sent_flag,c
  1941                           
  1942                           ;My_ST7032.c: 96: I2C_start();
  1943  01002C  ECA4  F083         	call	_I2C_start	;wreg free
  1944                           
  1945                           ;My_ST7032.c: 97: st7032_state = ST7032_SEND;
  1946  010030  0E02               	movlw	2
  1947  010032  6E1D               	movwf	ST7032_task@st7032_state,c
  1948                           
  1949                           ;My_ST7032.c: 98: break;
  1950  010034  0012               	return	
  1951  010036                     l6910:
  1952                           
  1953                           ;My_ST7032.c: 100: if (!I2C_sent_flag) return;
  1954  010036  501F               	movf	_I2C_sent_flag,w,c
  1955  010038  B4D8               	btfsc	status,2,c
  1956  01003A  0012               	return	
  1957                           
  1958                           ;My_ST7032.c: 101: uint8_t data = ringbuf_pop(&lcd_tx);
  1959  01003C  0E30               	movlw	low _lcd_tx
  1960  01003E  6E4B               	movwf	ringbuf_pop@rb,c
  1961  010040  0E00               	movlw	high _lcd_tx
  1962  010042  6E4C               	movwf	ringbuf_pop@rb+1,c
  1963  010044  EC63  F081         	call	_ringbuf_pop	;wreg free
  1964  010048  0100               	movlb	0	; () banked
  1965  01004A  6FFC               	movwf	ST7032_task@data& (0+255),b
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;My_ST7032.c: 102: if (data != 0) {
  1969  01004C  0100               	movlb	0	; () banked
  1970  01004E  51FC               	movf	ST7032_task@data& (0+255),w,b
  1971  010050  0100               	movlb	0	; () banked
  1972  010052  B4D8               	btfsc	status,2,c
  1973  010054  D007               	goto	l6922
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;My_ST7032.c: 103: I2C_sent_flag = 0;
  1977  010056  0E00               	movlw	0
  1978  010058  6E1F               	movwf	_I2C_sent_flag,c
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;My_ST7032.c: 104: I2C_send(data);
  1982  01005A  0100               	movlb	0	; () banked
  1983  01005C  51FC               	movf	ST7032_task@data& (0+255),w,b
  1984  01005E  ECA0  F083         	call	_I2C_send
  1985                           
  1986                           ;My_ST7032.c: 105: } else {
  1987  010062  0012               	return	
  1988  010064                     l6922:
  1989                           
  1990                           ;My_ST7032.c: 106: wait = ringbuf_pop(&lcd_tx);
  1991  010064  0E30               	movlw	low _lcd_tx
  1992  010066  6E4B               	movwf	ringbuf_pop@rb,c
  1993  010068  0E00               	movlw	high _lcd_tx
  1994  01006A  6E4C               	movwf	ringbuf_pop@rb+1,c
  1995  01006C  EC63  F081         	call	_ringbuf_pop	;wreg free
  1996  010070  6E4E               	movwf	??_ST7032_task& (0+255),c
  1997  010072  504E               	movf	??_ST7032_task,w,c
  1998  010074  0100               	movlb	0	; () banked
  1999  010076  6F84               	movwf	ST7032_task@wait& (0+255),b
  2000  010078  6B85               	clrf	(ST7032_task@wait+1)& (0+255),b
  2001                           
  2002                           ;My_ST7032.c: 107: switch (wait) {
  2003  01007A  D01A               	goto	l6936
  2004  01007C                     l6924:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;My_ST7032.c: 109: wait = 0;
  2008  01007C  0E00               	movlw	0
  2009  01007E  0100               	movlb	0	; () banked
  2010  010080  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2011  010082  0E00               	movlw	0
  2012  010084  D013               	goto	L4
  2013  010086                     l6926:
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;My_ST7032.c: 112: wait = 2;
  2017  010086  0E00               	movlw	0
  2018  010088  0100               	movlb	0	; () banked
  2019  01008A  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2020  01008C  0E02               	movlw	2
  2021  01008E  D00E               	goto	L4
  2022  010090                     l6928:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;My_ST7032.c: 115: wait = 25;
  2026  010090  0E00               	movlw	0
  2027  010092  0100               	movlb	0	; () banked
  2028  010094  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2029  010096  0E19               	movlw	25
  2030  010098  D009               	goto	L4
  2031  01009A                     l6930:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;My_ST7032.c: 118: wait = 800;
  2035  01009A  0E03               	movlw	3
  2036  01009C  0100               	movlb	0	; () banked
  2037  01009E  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2038  0100A0  0E20               	movlw	32
  2039  0100A2  D004               	goto	L4
  2040  0100A4                     l6932:
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;My_ST7032.c: 121: wait = 1;
  2044  0100A4  0E00               	movlw	0
  2045  0100A6  0100               	movlb	0	; () banked
  2046  0100A8  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2047  0100AA  0E01               	movlw	1
  2048  0100AC                     L4:
  2049  0100AC  6F84               	movwf	ST7032_task@wait& (0+255),b
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;My_ST7032.c: 123: }
  2053                           
  2054                           ;My_ST7032.c: 122: break;
  2055  0100AE  D016               	goto	l6938
  2056  0100B0                     l6936:
  2057                           
  2058                           ; BSR set to: 0
  2059  0100B0  C084  F04E         	movff	ST7032_task@wait,??_ST7032_task
  2060  0100B4  C085  F04F         	movff	ST7032_task@wait+1,??_ST7032_task+1
  2061                           
  2062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2063                           ; Switch size 1, requested type "space"
  2064                           ; Number of cases is 1, Range of values is 0 to 0
  2065                           ; switch strategies available:
  2066                           ; Name         Instructions Cycles
  2067                           ; simple_byte            4     3 (average)
  2068                           ;	Chosen strategy is simple_byte
  2069  0100B8  504F               	movf	??_ST7032_task+1,w,c
  2070  0100BA  0A00               	xorlw	0	; case 0
  2071  0100BC  A4D8               	btfss	status,2,c
  2072  0100BE  D7F2               	goto	l6932
  2073                           
  2074                           ; BSR set to: 0
  2075                           ; Switch size 1, requested type "space"
  2076                           ; Number of cases is 4, Range of values is 0 to 3
  2077                           ; switch strategies available:
  2078                           ; Name         Instructions Cycles
  2079                           ; simple_byte           13     7 (average)
  2080                           ;	Chosen strategy is simple_byte
  2081  0100C0  504E               	movf	??_ST7032_task,w,c
  2082  0100C2  0A00               	xorlw	0	; case 0
  2083  0100C4  B4D8               	btfsc	status,2,c
  2084  0100C6  D7DA               	goto	l6924
  2085  0100C8  0A01               	xorlw	1	; case 1
  2086  0100CA  B4D8               	btfsc	status,2,c
  2087  0100CC  D7DC               	goto	l6926
  2088  0100CE  0A03               	xorlw	3	; case 2
  2089  0100D0  B4D8               	btfsc	status,2,c
  2090  0100D2  D7DE               	goto	l6928
  2091  0100D4  0A01               	xorlw	1	; case 3
  2092  0100D6  B4D8               	btfsc	status,2,c
  2093  0100D8  D7E0               	goto	l6930
  2094  0100DA  D7E4               	goto	l6932
  2095  0100DC                     l6938:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;My_ST7032.c: 124: st7032_state = ST7032_STOP;
  2099  0100DC  0E03               	movlw	3
  2100  0100DE  6E1D               	movwf	ST7032_task@st7032_state,c
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;My_ST7032.c: 125: }
  2104                           ;My_ST7032.c: 126: break;
  2105  0100E0  0012               	return	
  2106  0100E2                     l6940:
  2107                           
  2108                           ;My_ST7032.c: 128: I2C_stop();
  2109  0100E2  EC00  F008         	call	_I2C_stop	;wreg free
  2110                           
  2111                           ;My_ST7032.c: 129: st7032_state = ST7032_WAIT;
  2112  0100E6  0E04               	movlw	4
  2113  0100E8  6E1D               	movwf	ST7032_task@st7032_state,c
  2114                           
  2115                           ;My_ST7032.c: 130: break;
  2116  0100EA  0012               	return	
  2117  0100EC                     l6944:
  2118                           
  2119                           ;My_ST7032.c: 132: if (wait == 0) st7032_state = ST7032_IDOLE;
  2120  0100EC  0100               	movlb	0	; () banked
  2121  0100EE  5184               	movf	ST7032_task@wait& (0+255),w,b
  2122  0100F0  0100               	movlb	0	; () banked
  2123  0100F2  1185               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
  2124  0100F4  A4D8               	btfss	status,2,c
  2125  0100F6  D003               	goto	l6948
  2126                           
  2127                           ; BSR set to: 0
  2128  0100F8  0E00               	movlw	0
  2129  0100FA  6E1D               	movwf	ST7032_task@st7032_state,c
  2130  0100FC  0012               	return	
  2131  0100FE                     l6948:
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;My_ST7032.c: 133: else wait--;
  2135  0100FE  0100               	movlb	0	; () banked
  2136  010100  0784               	decf	ST7032_task@wait& (0+255),f,b
  2137  010102  A0D8               	btfss	status,0,c
  2138  010104  0785               	decf	(ST7032_task@wait+1)& (0+255),f,b
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;My_ST7032.c: 135: }
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;My_ST7032.c: 134: break;
  2145  010106  0012               	return	
  2146  010108                     l6952:
  2147  010108  501D               	movf	ST7032_task@st7032_state,w,c
  2148                           
  2149                           ; Switch size 1, requested type "space"
  2150                           ; Number of cases is 5, Range of values is 0 to 4
  2151                           ; switch strategies available:
  2152                           ; Name         Instructions Cycles
  2153                           ; simple_byte           16     9 (average)
  2154                           ;	Chosen strategy is simple_byte
  2155  01010A  0A00               	xorlw	0	; case 0
  2156  01010C  B4D8               	btfsc	status,2,c
  2157  01010E  D77F               	goto	l6900
  2158  010110  0A01               	xorlw	1	; case 1
  2159  010112  B4D8               	btfsc	status,2,c
  2160  010114  D789               	goto	l6904
  2161  010116  0A03               	xorlw	3	; case 2
  2162  010118  B4D8               	btfsc	status,2,c
  2163  01011A  D78D               	goto	l6910
  2164  01011C  0A01               	xorlw	1	; case 3
  2165  01011E  B4D8               	btfsc	status,2,c
  2166  010120  D7E0               	goto	l6940
  2167  010122  0A07               	xorlw	7	; case 4
  2168  010124  A4D8               	btfss	status,2,c
  2169  010126  0012               	return	
  2170  010128  D7E1               	goto	l6944
  2171  01012A                     __end_of_ST7032_task:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           intcon	equ	0xFF2
  2178                           intcon2	equ	0xFF1
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           postinc2	equ	0xFDE
  2182                           postdec2	equ	0xFDD
  2183                           fsr2h	equ	0xFDA
  2184                           fsr2l	equ	0xFD9
  2185                           status	equ	0xFD8
  2186                           
  2187 ;; *************** function _ringbuf_pop *****************
  2188 ;; Defined at:
  2189 ;;		line 45 in file "../My_library/My_ringbuf.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  rb              2   17[COMRAM] PTR struct ringbuf
  2192 ;;		 -> lcd_tx(8), usb_tx(8), uart_tx(8), terminal_task@command(8), 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  ret             1   19[COMRAM] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      unsigned char 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2206 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2207 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;Total ram usage:        7 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    3
  2211 ;; This function calls:
  2212 ;;		_ringbuf_num
  2213 ;; This function is called by:
  2214 ;;		_ST7032_task
  2215 ;;		_terminal_task
  2216 ;;		_UART_ISR
  2217 ;;		_USB_task
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text10
  2222  0102C6                     __ptext10:
  2223                           	opt stack 0
  2224  0102C6                     _ringbuf_pop:
  2225                           	opt stack 26
  2226                           
  2227                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  2228                           
  2229                           ;incstack = 0
  2230  0102C6  C04B  F049         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2231  0102CA  C04C  F04A         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2232  0102CE  EC95  F080         	call	_ringbuf_num	;wreg free
  2233  0102D2  5049               	movf	?_ringbuf_num,w,c
  2234  0102D4  104A               	iorwf	?_ringbuf_num+1,w,c
  2235  0102D6  B4D8               	btfsc	status,2,c
  2236  0102D8  D051               	goto	l6808
  2237                           
  2238                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  2239  0102DA  EE20 F006          	lfsr	2,6
  2240  0102DE  504B               	movf	ringbuf_pop@rb,w,c
  2241  0102E0  26D9               	addwf	fsr2l,f,c
  2242  0102E2  504C               	movf	ringbuf_pop@rb+1,w,c
  2243  0102E4  22DA               	addwfc	fsr2h,f,c
  2244  0102E6  CFDE F0F8          	movff	postinc2,??_ringbuf_pop
  2245  0102EA  CFDD F0F9          	movff	postdec2,??_ringbuf_pop+1
  2246  0102EE  C04B  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2247  0102F2  C04C  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2248  0102F6  CFDE F0FA          	movff	postinc2,??_ringbuf_pop+2
  2249  0102FA  CFDD F0FB          	movff	postdec2,??_ringbuf_pop+3
  2250  0102FE  0100               	movlb	0	; () banked
  2251  010300  51F8               	movf	??_ringbuf_pop& (0+255),w,b
  2252  010302  0100               	movlb	0	; () banked
  2253  010304  25FA               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2254  010306  6ED9               	movwf	fsr2l,c
  2255  010308  0100               	movlb	0	; () banked
  2256  01030A  51F9               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2257  01030C  0100               	movlb	0	; () banked
  2258  01030E  21FB               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2259  010310  6EDA               	movwf	fsr2h,c
  2260  010312  50DF               	movf	indf2,w,c
  2261  010314  6E4D               	movwf	ringbuf_pop@ret,c
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  2265  010316  EE20 F002          	lfsr	2,2
  2266  01031A  504B               	movf	ringbuf_pop@rb,w,c
  2267  01031C  26D9               	addwf	fsr2l,f,c
  2268  01031E  504C               	movf	ringbuf_pop@rb+1,w,c
  2269  010320  22DA               	addwfc	fsr2h,f,c
  2270  010322  EE10 F006          	lfsr	1,6
  2271  010326  504B               	movf	ringbuf_pop@rb,w,c
  2272  010328  26E1               	addwf	fsr1l,f,c
  2273  01032A  504C               	movf	ringbuf_pop@rb+1,w,c
  2274  01032C  22E2               	addwfc	fsr1h,f,c
  2275  01032E  CFE6 F0FA          	movff	postinc1,??_ringbuf_pop+2
  2276  010332  CFE5 F0FB          	movff	postdec1,??_ringbuf_pop+3
  2277  010336  0E01               	movlw	1
  2278  010338  0100               	movlb	0	; () banked
  2279  01033A  27FA               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2280  01033C  0E00               	movlw	0
  2281  01033E  23FB               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2282  010340  50DE               	movf	postinc2,w,c
  2283  010342  0100               	movlb	0	; () banked
  2284  010344  5DFA               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2285  010346  50DE               	movf	postinc2,w,c
  2286  010348  0100               	movlb	0	; () banked
  2287  01034A  59FB               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2288  01034C  B0D8               	btfsc	status,0,c
  2289  01034E  D00A               	goto	l6800
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;My_ringbuf.c: 49: rb->tail++;
  2293  010350  EE20 F006          	lfsr	2,6
  2294  010354  504B               	movf	ringbuf_pop@rb,w,c
  2295  010356  26D9               	addwf	fsr2l,f,c
  2296  010358  504C               	movf	ringbuf_pop@rb+1,w,c
  2297  01035A  22DA               	addwfc	fsr2h,f,c
  2298  01035C  2ADE               	incf	postinc2,f,c
  2299  01035E  0E00               	movlw	0
  2300  010360  22DD               	addwfc	postdec2,f,c
  2301                           
  2302                           ;My_ringbuf.c: 50: } else {
  2303  010362  D00A               	goto	l6802
  2304  010364                     l6800:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;My_ringbuf.c: 51: rb->tail = 0;
  2308  010364  EE20 F006          	lfsr	2,6
  2309  010368  504B               	movf	ringbuf_pop@rb,w,c
  2310  01036A  26D9               	addwf	fsr2l,f,c
  2311  01036C  504C               	movf	ringbuf_pop@rb+1,w,c
  2312  01036E  22DA               	addwfc	fsr2h,f,c
  2313  010370  0E00               	movlw	0
  2314  010372  6EDE               	movwf	postinc2,c
  2315  010374  0E00               	movlw	0
  2316  010376  6EDD               	movwf	postdec2,c
  2317  010378                     l6802:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;My_ringbuf.c: 52: }
  2321                           ;My_ringbuf.c: 53: return ret;
  2322  010378  504D               	movf	ringbuf_pop@ret,w,c
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;My_ringbuf.c: 54: } else {
  2326                           
  2327                           ; BSR set to: 0
  2328  01037A  0012               	return	
  2329  01037C                     l6808:
  2330                           
  2331                           ;My_ringbuf.c: 55: return 0;
  2332  01037C  0E00               	movlw	0
  2333  01037E  0012               	return	
  2334  010380                     __end_of_ringbuf_pop:
  2335                           	opt stack 0
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           intcon	equ	0xFF2
  2341                           intcon2	equ	0xFF1
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           postinc1	equ	0xFE6
  2345                           postdec1	equ	0xFE5
  2346                           fsr1h	equ	0xFE2
  2347                           fsr1l	equ	0xFE1
  2348                           indf2	equ	0xFDF
  2349                           postinc2	equ	0xFDE
  2350                           postdec2	equ	0xFDD
  2351                           fsr2h	equ	0xFDA
  2352                           fsr2l	equ	0xFD9
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function _I2C_stop *****************
  2356 ;; Defined at:
  2357 ;;		line 19 in file "../My_library/My_I2C.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;		None               void
  2364 ;; Registers used:
  2365 ;;		None
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    2
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_ST7032_task
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text11
  2386  001000                     __ptext11:
  2387                           	opt stack 0
  2388  001000                     _I2C_stop:
  2389                           	opt stack 27
  2390                           
  2391                           ;My_I2C.c: 20: SSP1CON2bits.PEN = 1;
  2392                           
  2393                           ;incstack = 0
  2394  001000  84C5               	bsf	4037,2,c	;volatile
  2395  001002  0012               	return		;funcret
  2396  001004                     __end_of_I2C_stop:
  2397                           	opt stack 0
  2398                           tblptru	equ	0xFF8
  2399                           tblptrh	equ	0xFF7
  2400                           tblptrl	equ	0xFF6
  2401                           tablat	equ	0xFF5
  2402                           intcon	equ	0xFF2
  2403                           intcon2	equ	0xFF1
  2404                           postinc0	equ	0xFEE
  2405                           wreg	equ	0xFE8
  2406                           postinc1	equ	0xFE6
  2407                           postdec1	equ	0xFE5
  2408                           fsr1h	equ	0xFE2
  2409                           fsr1l	equ	0xFE1
  2410                           indf2	equ	0xFDF
  2411                           postinc2	equ	0xFDE
  2412                           postdec2	equ	0xFDD
  2413                           fsr2h	equ	0xFDA
  2414                           fsr2l	equ	0xFD9
  2415                           status	equ	0xFD8
  2416                           
  2417 ;; *************** function _I2C_start *****************
  2418 ;; Defined at:
  2419 ;;		line 11 in file "../My_library/My_I2C.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;		None               void
  2426 ;; Registers used:
  2427 ;;		None
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    2
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_ST7032_task
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text12
  2448  010748                     __ptext12:
  2449                           	opt stack 0
  2450  010748                     _I2C_start:
  2451                           	opt stack 27
  2452                           
  2453                           ;My_I2C.c: 12: SSP1CON2bits.SEN = 1;
  2454                           
  2455                           ;incstack = 0
  2456  010748  80C5               	bsf	4037,0,c	;volatile
  2457  01074A  0012               	return		;funcret
  2458  01074C                     __end_of_I2C_start:
  2459                           	opt stack 0
  2460                           tblptru	equ	0xFF8
  2461                           tblptrh	equ	0xFF7
  2462                           tblptrl	equ	0xFF6
  2463                           tablat	equ	0xFF5
  2464                           intcon	equ	0xFF2
  2465                           intcon2	equ	0xFF1
  2466                           postinc0	equ	0xFEE
  2467                           wreg	equ	0xFE8
  2468                           postinc1	equ	0xFE6
  2469                           postdec1	equ	0xFE5
  2470                           fsr1h	equ	0xFE2
  2471                           fsr1l	equ	0xFE1
  2472                           indf2	equ	0xFDF
  2473                           postinc2	equ	0xFDE
  2474                           postdec2	equ	0xFDD
  2475                           fsr2h	equ	0xFDA
  2476                           fsr2l	equ	0xFD9
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function _I2C_send *****************
  2480 ;; Defined at:
  2481 ;;		line 23 in file "../My_library/My_I2C.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  data            1    wreg     unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  data            1   15[COMRAM] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;		None               void
  2488 ;; Registers used:
  2489 ;;		wreg
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;Total ram usage:        1 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    2
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_ST7032_task
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text13
  2510  010740                     __ptext13:
  2511                           	opt stack 0
  2512  010740                     _I2C_send:
  2513                           	opt stack 27
  2514                           
  2515                           ;incstack = 0
  2516                           ;I2C_send@data stored from wreg
  2517  010740  6E49               	movwf	I2C_send@data,c
  2518                           
  2519                           ;My_I2C.c: 24: SSPBUF = data;
  2520  010742  C049  FFC9         	movff	I2C_send@data,4041	;volatile
  2521  010746  0012               	return		;funcret
  2522  010748                     __end_of_I2C_send:
  2523                           	opt stack 0
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           intcon	equ	0xFF2
  2529                           intcon2	equ	0xFF1
  2530                           postinc0	equ	0xFEE
  2531                           wreg	equ	0xFE8
  2532                           postinc1	equ	0xFE6
  2533                           postdec1	equ	0xFE5
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           indf2	equ	0xFDF
  2537                           postinc2	equ	0xFDE
  2538                           postdec2	equ	0xFDD
  2539                           fsr2h	equ	0xFDA
  2540                           fsr2l	equ	0xFD9
  2541                           status	equ	0xFD8
  2542                           
  2543 ;; *************** function _I2C_idole_check *****************
  2544 ;; Defined at:
  2545 ;;		line 7 in file "../My_library/My_I2C.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  mask            1    wreg     unsigned char 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  mask            1   16[COMRAM] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      unsigned char 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;Total ram usage:        2 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    2
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_ST7032_task
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text14
  2574  010724                     __ptext14:
  2575                           	opt stack 0
  2576  010724                     _I2C_idole_check:
  2577                           	opt stack 27
  2578                           
  2579                           ;incstack = 0
  2580                           ;I2C_idole_check@mask stored from wreg
  2581  010724  6E4A               	movwf	I2C_idole_check@mask,c
  2582                           
  2583                           ;My_I2C.c: 8: return ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  2584  010726  50C7               	movf	4039,w,c	;volatile
  2585  010728  144A               	andwf	I2C_idole_check@mask,w,c
  2586  01072A  6E49               	movwf	??_I2C_idole_check& (0+255),c
  2587  01072C  50C5               	movf	4037,w,c	;volatile
  2588  01072E  0B1F               	andlw	31
  2589  010730  1049               	iorwf	??_I2C_idole_check,w,c
  2590  010732  0012               	return	
  2591  010734                     __end_of_I2C_idole_check:
  2592                           	opt stack 0
  2593                           tblptru	equ	0xFF8
  2594                           tblptrh	equ	0xFF7
  2595                           tblptrl	equ	0xFF6
  2596                           tablat	equ	0xFF5
  2597                           intcon	equ	0xFF2
  2598                           intcon2	equ	0xFF1
  2599                           postinc0	equ	0xFEE
  2600                           wreg	equ	0xFE8
  2601                           postinc1	equ	0xFE6
  2602                           postdec1	equ	0xFE5
  2603                           fsr1h	equ	0xFE2
  2604                           fsr1l	equ	0xFE1
  2605                           indf2	equ	0xFDF
  2606                           postinc2	equ	0xFDE
  2607                           postdec2	equ	0xFDD
  2608                           fsr2h	equ	0xFDA
  2609                           fsr2l	equ	0xFD9
  2610                           status	equ	0xFD8
  2611                           
  2612 ;; *************** function _ST7032_puts *****************
  2613 ;; Defined at:
  2614 ;;		line 42 in file "../My_library/My_ST7032.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  s               2    6[BANK1 ] PTR const unsigned char 
  2617 ;;		 -> STR_42(8), STR_41(9), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;		None               void
  2622 ;; Registers used:
  2623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2629 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;Total ram usage:        2 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    5
  2636 ;; This function calls:
  2637 ;;		_ST7032_put
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text15
  2644  010624                     __ptext15:
  2645                           	opt stack 0
  2646  010624                     _ST7032_puts:
  2647                           	opt stack 25
  2648                           
  2649                           ;My_ST7032.c: 43: while (*s) {
  2650                           
  2651                           ;incstack = 0
  2652  010624  D00D               	goto	l6894
  2653  010626                     l6890:
  2654                           
  2655                           ;My_ST7032.c: 44: ST7032_put(*s++);
  2656  010626  C1D1  FFF6         	movff	ST7032_puts@s,tblptrl
  2657  01062A  C1D2  FFF7         	movff	ST7032_puts@s+1,tblptrh
  2658  01062E                     	if	0	;tblptru may be non-zero
  2659  01062E                     	endif
  2660  01062E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2661  01062E  0E00               	movlw	low (__mediumconst shr (0+16))
  2662  010630  6EF8               	movwf	tblptru,c
  2663  010632                     	endif
  2664  010632  0008               	tblrd		*
  2665  010634  50F5               	movf	tablat,w,c
  2666  010636  EC75  F082         	call	_ST7032_put
  2667  01063A  0101               	movlb	1	; () banked
  2668  01063C  4BD1               	infsnz	ST7032_puts@s& (0+255),f,b
  2669  01063E  2BD2               	incf	(ST7032_puts@s+1)& (0+255),f,b
  2670  010640                     l6894:
  2671  010640  C1D1  FFF6         	movff	ST7032_puts@s,tblptrl
  2672  010644  C1D2  FFF7         	movff	ST7032_puts@s+1,tblptrh
  2673  010648                     	if	0	;tblptru may be non-zero
  2674  010648                     	endif
  2675  010648                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2676  010648  0E00               	movlw	low (__mediumconst shr (0+16))
  2677  01064A  6EF8               	movwf	tblptru,c
  2678  01064C                     	endif
  2679  01064C  0008               	tblrd		*
  2680  01064E  50F5               	movf	tablat,w,c
  2681  010650  0900               	iorlw	0
  2682  010652  B4D8               	btfsc	status,2,c
  2683  010654  0012               	return	
  2684  010656  D7E7               	goto	l6890
  2685  010658                     __end_of_ST7032_puts:
  2686                           	opt stack 0
  2687                           tblptru	equ	0xFF8
  2688                           tblptrh	equ	0xFF7
  2689                           tblptrl	equ	0xFF6
  2690                           tablat	equ	0xFF5
  2691                           intcon	equ	0xFF2
  2692                           intcon2	equ	0xFF1
  2693                           postinc0	equ	0xFEE
  2694                           wreg	equ	0xFE8
  2695                           postinc1	equ	0xFE6
  2696                           postdec1	equ	0xFE5
  2697                           fsr1h	equ	0xFE2
  2698                           fsr1l	equ	0xFE1
  2699                           indf2	equ	0xFDF
  2700                           postinc2	equ	0xFDE
  2701                           postdec2	equ	0xFDD
  2702                           fsr2h	equ	0xFDA
  2703                           fsr2l	equ	0xFD9
  2704                           status	equ	0xFD8
  2705                           
  2706 ;; *************** function _ST7032_put *****************
  2707 ;; Defined at:
  2708 ;;		line 34 in file "../My_library/My_ST7032.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  c               1    wreg     unsigned char 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  c               1   20[COMRAM] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;		None               void
  2715 ;; Registers used:
  2716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2726 ;;Total ram usage:        1 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    4
  2729 ;; This function calls:
  2730 ;;		_ringbuf_put
  2731 ;; This function is called by:
  2732 ;;		_ST7032_puts
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text16
  2737  0104EA                     __ptext16:
  2738                           	opt stack 0
  2739  0104EA                     _ST7032_put:
  2740                           	opt stack 25
  2741                           
  2742                           ;incstack = 0
  2743                           ;ST7032_put@c stored from wreg
  2744  0104EA  6E4E               	movwf	ST7032_put@c,c
  2745                           
  2746                           ;My_ST7032.c: 35: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
  2747  0104EC  0E30               	movlw	low _lcd_tx
  2748  0104EE  6E4B               	movwf	ringbuf_put@rb,c
  2749  0104F0  0E00               	movlw	high _lcd_tx
  2750  0104F2  6E4C               	movwf	ringbuf_put@rb+1,c
  2751  0104F4  0E7C               	movlw	124
  2752  0104F6  6E4D               	movwf	ringbuf_put@asciicode,c
  2753  0104F8  EC01  F081         	call	_ringbuf_put	;wreg free
  2754                           
  2755                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, 0b11000000);
  2756  0104FC  0E30               	movlw	low _lcd_tx
  2757  0104FE  6E4B               	movwf	ringbuf_put@rb,c
  2758  010500  0E00               	movlw	high _lcd_tx
  2759  010502  6E4C               	movwf	ringbuf_put@rb+1,c
  2760  010504  0EC0               	movlw	192
  2761  010506  6E4D               	movwf	ringbuf_put@asciicode,c
  2762  010508  EC01  F081         	call	_ringbuf_put	;wreg free
  2763                           
  2764                           ;My_ST7032.c: 37: ringbuf_put(&lcd_tx, c);
  2765  01050C  0E30               	movlw	low _lcd_tx
  2766  01050E  6E4B               	movwf	ringbuf_put@rb,c
  2767  010510  0E00               	movlw	high _lcd_tx
  2768  010512  6E4C               	movwf	ringbuf_put@rb+1,c
  2769  010514  C04E  F04D         	movff	ST7032_put@c,ringbuf_put@asciicode
  2770  010518  EC01  F081         	call	_ringbuf_put	;wreg free
  2771                           
  2772                           ;My_ST7032.c: 38: ringbuf_put(&lcd_tx, 0);
  2773  01051C  0E30               	movlw	low _lcd_tx
  2774  01051E  6E4B               	movwf	ringbuf_put@rb,c
  2775  010520  0E00               	movlw	high _lcd_tx
  2776  010522  6E4C               	movwf	ringbuf_put@rb+1,c
  2777  010524  0E00               	movlw	0
  2778  010526  6E4D               	movwf	ringbuf_put@asciicode,c
  2779  010528  EC01  F081         	call	_ringbuf_put	;wreg free
  2780                           
  2781                           ;My_ST7032.c: 39: ringbuf_put(&lcd_tx, 1);
  2782  01052C  0E30               	movlw	low _lcd_tx
  2783  01052E  6E4B               	movwf	ringbuf_put@rb,c
  2784  010530  0E00               	movlw	high _lcd_tx
  2785  010532  6E4C               	movwf	ringbuf_put@rb+1,c
  2786  010534  0E01               	movlw	1
  2787  010536  6E4D               	movwf	ringbuf_put@asciicode,c
  2788  010538  EC01  F081         	call	_ringbuf_put	;wreg free
  2789  01053C  0012               	return		;funcret
  2790  01053E                     __end_of_ST7032_put:
  2791                           	opt stack 0
  2792                           tblptru	equ	0xFF8
  2793                           tblptrh	equ	0xFF7
  2794                           tblptrl	equ	0xFF6
  2795                           tablat	equ	0xFF5
  2796                           intcon	equ	0xFF2
  2797                           intcon2	equ	0xFF1
  2798                           postinc0	equ	0xFEE
  2799                           wreg	equ	0xFE8
  2800                           postinc1	equ	0xFE6
  2801                           postdec1	equ	0xFE5
  2802                           fsr1h	equ	0xFE2
  2803                           fsr1l	equ	0xFE1
  2804                           indf2	equ	0xFDF
  2805                           postinc2	equ	0xFDE
  2806                           postdec2	equ	0xFDD
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _ST7032_cursor *****************
  2812 ;; Defined at:
  2813 ;;		line 29 in file "../My_library/My_ST7032.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  col             1    wreg     unsigned char 
  2816 ;;  row             1    4[BANK0 ] unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  col             1    8[BANK1 ] unsigned char 
  2819 ;;  row_offsets     2    6[BANK1 ] unsigned char [2]
  2820 ;; Return value:  Size  Location     Type
  2821 ;;		None               void
  2822 ;; Registers used:
  2823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2829 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2832 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2833 ;;Total ram usage:        4 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    5
  2836 ;; This function calls:
  2837 ;;		_ST7032_command
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text17
  2844  0106BA                     __ptext17:
  2845                           	opt stack 0
  2846  0106BA                     _ST7032_cursor:
  2847                           	opt stack 25
  2848                           
  2849                           ;incstack = 0
  2850                           ;ST7032_cursor@col stored from wreg
  2851  0106BA  0101               	movlb	1	; () banked
  2852  0106BC  6FD3               	movwf	ST7032_cursor@col& (0+255),b
  2853                           
  2854                           ;My_ST7032.c: 30: uint8_t row_offsets[] = {0x00, 0x40};
  2855  0106BE  C0FD  F1D1         	movff	ST7032_cursor@F8633,ST7032_cursor@row_offsets
  2856  0106C2  C0FE  F1D2         	movff	ST7032_cursor@F8633+1,ST7032_cursor@row_offsets+1
  2857                           
  2858                           ;My_ST7032.c: 31: ST7032_command(0x80 | (col + row_offsets[row]), 0);
  2859  0106C6  0E00               	movlw	0
  2860  0106C8  6E4E               	movwf	ST7032_command@wait,c
  2861  0106CA  0100               	movlb	0	; () banked
  2862  0106CC  51FC               	movf	ST7032_cursor@row& (0+255),w,b
  2863  0106CE  0D01               	mullw	1
  2864  0106D0  0ED1               	movlw	low ST7032_cursor@row_offsets
  2865  0106D2  24F3               	addwf	prodl,w,c
  2866  0106D4  6ED9               	movwf	fsr2l,c
  2867  0106D6  0E01               	movlw	high ST7032_cursor@row_offsets
  2868  0106D8  20F4               	addwfc	prodh,w,c
  2869  0106DA  6EDA               	movwf	fsr2h,c
  2870  0106DC  50DF               	movf	indf2,w,c
  2871  0106DE  0101               	movlb	1	; () banked
  2872  0106E0  25D3               	addwf	ST7032_cursor@col& (0+255),w,b
  2873  0106E2  0980               	iorlw	128
  2874  0106E4  EC9F  F082         	call	_ST7032_command
  2875  0106E8  0012               	return		;funcret
  2876  0106EA                     __end_of_ST7032_cursor:
  2877                           	opt stack 0
  2878                           tblptru	equ	0xFF8
  2879                           tblptrh	equ	0xFF7
  2880                           tblptrl	equ	0xFF6
  2881                           tablat	equ	0xFF5
  2882                           prodh	equ	0xFF4
  2883                           prodl	equ	0xFF3
  2884                           intcon	equ	0xFF2
  2885                           intcon2	equ	0xFF1
  2886                           postinc0	equ	0xFEE
  2887                           wreg	equ	0xFE8
  2888                           postinc1	equ	0xFE6
  2889                           postdec1	equ	0xFE5
  2890                           fsr1h	equ	0xFE2
  2891                           fsr1l	equ	0xFE1
  2892                           indf2	equ	0xFDF
  2893                           postinc2	equ	0xFDE
  2894                           postdec2	equ	0xFDD
  2895                           fsr2h	equ	0xFDA
  2896                           fsr2l	equ	0xFD9
  2897                           status	equ	0xFD8
  2898                           
  2899 ;; *************** function _ST7032_command *****************
  2900 ;; Defined at:
  2901 ;;		line 17 in file "../My_library/My_ST7032.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  command         1    wreg     unsigned char 
  2904 ;;  wait            1   20[COMRAM] unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  command         1   21[COMRAM] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;		None               void
  2909 ;; Registers used:
  2910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2916 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2920 ;;Total ram usage:        2 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    4
  2923 ;; This function calls:
  2924 ;;		_ringbuf_put
  2925 ;; This function is called by:
  2926 ;;		_ST7032_clear
  2927 ;;		_ST7032_cursor
  2928 ;;		_ST7032_init
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text18
  2933  01053E                     __ptext18:
  2934                           	opt stack 0
  2935  01053E                     _ST7032_command:
  2936                           	opt stack 24
  2937                           
  2938                           ;incstack = 0
  2939                           ;ST7032_command@command stored from wreg
  2940  01053E  6E4F               	movwf	ST7032_command@command,c
  2941                           
  2942                           ;My_ST7032.c: 18: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
  2943  010540  0E30               	movlw	low _lcd_tx
  2944  010542  6E4B               	movwf	ringbuf_put@rb,c
  2945  010544  0E00               	movlw	high _lcd_tx
  2946  010546  6E4C               	movwf	ringbuf_put@rb+1,c
  2947  010548  0E7C               	movlw	124
  2948  01054A  6E4D               	movwf	ringbuf_put@asciicode,c
  2949  01054C  EC01  F081         	call	_ringbuf_put	;wreg free
  2950                           
  2951                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, 0x80);
  2952  010550  0E30               	movlw	low _lcd_tx
  2953  010552  6E4B               	movwf	ringbuf_put@rb,c
  2954  010554  0E00               	movlw	high _lcd_tx
  2955  010556  6E4C               	movwf	ringbuf_put@rb+1,c
  2956  010558  0E80               	movlw	128
  2957  01055A  6E4D               	movwf	ringbuf_put@asciicode,c
  2958  01055C  EC01  F081         	call	_ringbuf_put	;wreg free
  2959                           
  2960                           ;My_ST7032.c: 20: ringbuf_put(&lcd_tx, command);
  2961  010560  0E30               	movlw	low _lcd_tx
  2962  010562  6E4B               	movwf	ringbuf_put@rb,c
  2963  010564  0E00               	movlw	high _lcd_tx
  2964  010566  6E4C               	movwf	ringbuf_put@rb+1,c
  2965  010568  C04F  F04D         	movff	ST7032_command@command,ringbuf_put@asciicode
  2966  01056C  EC01  F081         	call	_ringbuf_put	;wreg free
  2967                           
  2968                           ;My_ST7032.c: 21: ringbuf_put(&lcd_tx, 0);
  2969  010570  0E30               	movlw	low _lcd_tx
  2970  010572  6E4B               	movwf	ringbuf_put@rb,c
  2971  010574  0E00               	movlw	high _lcd_tx
  2972  010576  6E4C               	movwf	ringbuf_put@rb+1,c
  2973  010578  0E00               	movlw	0
  2974  01057A  6E4D               	movwf	ringbuf_put@asciicode,c
  2975  01057C  EC01  F081         	call	_ringbuf_put	;wreg free
  2976                           
  2977                           ;My_ST7032.c: 22: ringbuf_put(&lcd_tx, wait);
  2978  010580  0E30               	movlw	low _lcd_tx
  2979  010582  6E4B               	movwf	ringbuf_put@rb,c
  2980  010584  0E00               	movlw	high _lcd_tx
  2981  010586  6E4C               	movwf	ringbuf_put@rb+1,c
  2982  010588  C04E  F04D         	movff	ST7032_command@wait,ringbuf_put@asciicode
  2983  01058C  EC01  F081         	call	_ringbuf_put	;wreg free
  2984  010590  0012               	return		;funcret
  2985  010592                     __end_of_ST7032_command:
  2986                           	opt stack 0
  2987                           tblptru	equ	0xFF8
  2988                           tblptrh	equ	0xFF7
  2989                           tblptrl	equ	0xFF6
  2990                           tablat	equ	0xFF5
  2991                           prodh	equ	0xFF4
  2992                           prodl	equ	0xFF3
  2993                           intcon	equ	0xFF2
  2994                           intcon2	equ	0xFF1
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           postinc1	equ	0xFE6
  2998                           postdec1	equ	0xFE5
  2999                           fsr1h	equ	0xFE2
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           postinc2	equ	0xFDE
  3003                           postdec2	equ	0xFDD
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _ringbuf_put *****************
  3009 ;; Defined at:
  3010 ;;		line 20 in file "../My_library/My_ringbuf.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  rb              2   17[COMRAM] PTR struct ringbuf
  3013 ;;		 -> lcd_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
  3014 ;;  asciicode       1   19[COMRAM] unsigned char 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;		None               void
  3019 ;; Registers used:
  3020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3026 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3028 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3029 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3030 ;;Total ram usage:        7 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    3
  3033 ;; This function calls:
  3034 ;;		_ringbuf_num
  3035 ;; This function is called by:
  3036 ;;		_ST7032_command
  3037 ;;		_ST7032_put
  3038 ;;		_ST7032_init
  3039 ;;		_ringbuf_put_num
  3040 ;;		_ringbuf_put_str
  3041 ;;		_terminal_task
  3042 ;;		_UART_ISR
  3043 ;;		_USB_task
  3044 ;;		_ST7032_create_char
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text19
  3049  010202                     __ptext19:
  3050                           	opt stack 0
  3051  010202                     _ringbuf_put:
  3052                           	opt stack 25
  3053                           
  3054                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  3055                           
  3056                           ;incstack = 0
  3057  010202  C04B  F049         	movff	ringbuf_put@rb,ringbuf_num@rb
  3058  010206  C04C  F04A         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  3059  01020A  EC95  F080         	call	_ringbuf_num	;wreg free
  3060  01020E  EE20 F002          	lfsr	2,2
  3061  010212  504B               	movf	ringbuf_put@rb,w,c
  3062  010214  26D9               	addwf	fsr2l,f,c
  3063  010216  504C               	movf	ringbuf_put@rb+1,w,c
  3064  010218  22DA               	addwfc	fsr2h,f,c
  3065  01021A  50DE               	movf	postinc2,w,c
  3066  01021C  5C49               	subwf	?_ringbuf_num,w,c
  3067  01021E  50DE               	movf	postinc2,w,c
  3068  010220  584A               	subwfb	?_ringbuf_num+1,w,c
  3069  010222  B0D8               	btfsc	status,0,c
  3070  010224  0012               	return	
  3071                           
  3072                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  3073  010226  EE20 F004          	lfsr	2,4
  3074  01022A  504B               	movf	ringbuf_put@rb,w,c
  3075  01022C  26D9               	addwf	fsr2l,f,c
  3076  01022E  504C               	movf	ringbuf_put@rb+1,w,c
  3077  010230  22DA               	addwfc	fsr2h,f,c
  3078  010232  CFDE F0F8          	movff	postinc2,??_ringbuf_put
  3079  010236  CFDD F0F9          	movff	postdec2,??_ringbuf_put+1
  3080  01023A  C04B  FFD9         	movff	ringbuf_put@rb,fsr2l
  3081  01023E  C04C  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  3082  010242  CFDE F0FA          	movff	postinc2,??_ringbuf_put+2
  3083  010246  CFDD F0FB          	movff	postdec2,??_ringbuf_put+3
  3084  01024A  0100               	movlb	0	; () banked
  3085  01024C  51F8               	movf	??_ringbuf_put& (0+255),w,b
  3086  01024E  0100               	movlb	0	; () banked
  3087  010250  25FA               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  3088  010252  6ED9               	movwf	fsr2l,c
  3089  010254  0100               	movlb	0	; () banked
  3090  010256  51F9               	movf	(??_ringbuf_put+1)& (0+255),w,b
  3091  010258  0100               	movlb	0	; () banked
  3092  01025A  21FB               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  3093  01025C  6EDA               	movwf	fsr2h,c
  3094  01025E  C04D  FFDF         	movff	ringbuf_put@asciicode,indf2
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  3098  010262  EE20 F002          	lfsr	2,2
  3099  010266  504B               	movf	ringbuf_put@rb,w,c
  3100  010268  26D9               	addwf	fsr2l,f,c
  3101  01026A  504C               	movf	ringbuf_put@rb+1,w,c
  3102  01026C  22DA               	addwfc	fsr2h,f,c
  3103  01026E  EE10 F004          	lfsr	1,4
  3104  010272  504B               	movf	ringbuf_put@rb,w,c
  3105  010274  26E1               	addwf	fsr1l,f,c
  3106  010276  504C               	movf	ringbuf_put@rb+1,w,c
  3107  010278  22E2               	addwfc	fsr1h,f,c
  3108  01027A  CFE6 F0FA          	movff	postinc1,??_ringbuf_put+2
  3109  01027E  CFE5 F0FB          	movff	postdec1,??_ringbuf_put+3
  3110  010282  0E01               	movlw	1
  3111  010284  0100               	movlb	0	; () banked
  3112  010286  27FA               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  3113  010288  0E00               	movlw	0
  3114  01028A  23FB               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  3115  01028C  50DE               	movf	postinc2,w,c
  3116  01028E  0100               	movlb	0	; () banked
  3117  010290  5DFA               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  3118  010292  50DE               	movf	postinc2,w,c
  3119  010294  0100               	movlb	0	; () banked
  3120  010296  59FB               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  3121  010298  B0D8               	btfsc	status,0,c
  3122  01029A  D00A               	goto	l6768
  3123                           
  3124                           ; BSR set to: 0
  3125  01029C  EE20 F004          	lfsr	2,4
  3126  0102A0  504B               	movf	ringbuf_put@rb,w,c
  3127  0102A2  26D9               	addwf	fsr2l,f,c
  3128  0102A4  504C               	movf	ringbuf_put@rb+1,w,c
  3129  0102A6  22DA               	addwfc	fsr2h,f,c
  3130  0102A8  2ADE               	incf	postinc2,f,c
  3131  0102AA  0E00               	movlw	0
  3132  0102AC  22DD               	addwfc	postdec2,f,c
  3133  0102AE  0012               	return	
  3134  0102B0                     l6768:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;My_ringbuf.c: 24: else rb->head = 0;
  3138  0102B0  EE20 F004          	lfsr	2,4
  3139  0102B4  504B               	movf	ringbuf_put@rb,w,c
  3140  0102B6  26D9               	addwf	fsr2l,f,c
  3141  0102B8  504C               	movf	ringbuf_put@rb+1,w,c
  3142  0102BA  22DA               	addwfc	fsr2h,f,c
  3143  0102BC  0E00               	movlw	0
  3144  0102BE  6EDE               	movwf	postinc2,c
  3145  0102C0  0E00               	movlw	0
  3146  0102C2  6EDD               	movwf	postdec2,c
  3147                           
  3148                           ; BSR set to: 0
  3149  0102C4  0012               	return	
  3150  0102C6                     __end_of_ringbuf_put:
  3151                           	opt stack 0
  3152                           tblptru	equ	0xFF8
  3153                           tblptrh	equ	0xFF7
  3154                           tblptrl	equ	0xFF6
  3155                           tablat	equ	0xFF5
  3156                           prodh	equ	0xFF4
  3157                           prodl	equ	0xFF3
  3158                           intcon	equ	0xFF2
  3159                           intcon2	equ	0xFF1
  3160                           postinc0	equ	0xFEE
  3161                           wreg	equ	0xFE8
  3162                           postinc1	equ	0xFE6
  3163                           postdec1	equ	0xFE5
  3164                           fsr1h	equ	0xFE2
  3165                           fsr1l	equ	0xFE1
  3166                           indf2	equ	0xFDF
  3167                           postinc2	equ	0xFDE
  3168                           postdec2	equ	0xFDD
  3169                           fsr2h	equ	0xFDA
  3170                           fsr2l	equ	0xFD9
  3171                           status	equ	0xFD8
  3172                           
  3173 ;; *************** function _ringbuf_num *****************
  3174 ;; Defined at:
  3175 ;;		line 12 in file "../My_library/My_ringbuf.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  rb              2   15[COMRAM] PTR struct ringbuf
  3178 ;;		 -> lcd_tx(8), usb_tx(8), usb_rx(8), uart_rx(8), 
  3179 ;;		 -> uart_tx(8), terminal_task@command(8), 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2   15[COMRAM] unsigned int 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Totals:         2       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;Total ram usage:        8 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    2
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_ringbuf_put
  3202 ;;		_ringbuf_pop
  3203 ;;		_ST7032_task
  3204 ;;		_ringbuf_backspace
  3205 ;;		_terminal_task
  3206 ;;		_UART_ISR
  3207 ;;		_UART_task
  3208 ;;		_USB_task
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text20
  3213  01012A                     __ptext20:
  3214                           	opt stack 0
  3215  01012A                     _ringbuf_num:
  3216                           	opt stack 25
  3217                           
  3218                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  3219                           
  3220                           ;incstack = 0
  3221  01012A  EE20 F006          	lfsr	2,6
  3222  01012E  5049               	movf	ringbuf_num@rb,w,c
  3223  010130  26D9               	addwf	fsr2l,f,c
  3224  010132  504A               	movf	ringbuf_num@rb+1,w,c
  3225  010134  22DA               	addwfc	fsr2h,f,c
  3226  010136  EE10 F004          	lfsr	1,4
  3227  01013A  5049               	movf	ringbuf_num@rb,w,c
  3228  01013C  26E1               	addwf	fsr1l,f,c
  3229  01013E  504A               	movf	ringbuf_num@rb+1,w,c
  3230  010140  22E2               	addwfc	fsr1h,f,c
  3231  010142  50DE               	movf	postinc2,w,c
  3232  010144  5CE6               	subwf	postinc1,w,c
  3233  010146  50DE               	movf	postinc2,w,c
  3234  010148  58E6               	subwfb	postinc1,w,c
  3235  01014A  A0D8               	btfss	status,0,c
  3236  01014C  D024               	goto	l6756
  3237                           
  3238                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  3239  01014E  EE20 F004          	lfsr	2,4
  3240  010152  5049               	movf	ringbuf_num@rb,w,c
  3241  010154  26D9               	addwf	fsr2l,f,c
  3242  010156  504A               	movf	ringbuf_num@rb+1,w,c
  3243  010158  22DA               	addwfc	fsr2h,f,c
  3244  01015A  CFDE F1CB          	movff	postinc2,??_ringbuf_num
  3245  01015E  CFDD F1CC          	movff	postdec2,??_ringbuf_num+1
  3246  010162  EE20 F006          	lfsr	2,6
  3247  010166  5049               	movf	ringbuf_num@rb,w,c
  3248  010168  26D9               	addwf	fsr2l,f,c
  3249  01016A  504A               	movf	ringbuf_num@rb+1,w,c
  3250  01016C  22DA               	addwfc	fsr2h,f,c
  3251  01016E  CFDE F1CD          	movff	postinc2,??_ringbuf_num+2
  3252  010172  CFDD F1CE          	movff	postdec2,??_ringbuf_num+3
  3253  010176  0101               	movlb	1	; () banked
  3254  010178  1FCD               	comf	(??_ringbuf_num+2)& (0+255),f,b
  3255  01017A  1FCE               	comf	(??_ringbuf_num+3)& (0+255),f,b
  3256  01017C  4BCD               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  3257  01017E  2BCE               	incf	(??_ringbuf_num+3)& (0+255),f,b
  3258  010180  0101               	movlb	1	; () banked
  3259  010182  51CB               	movf	??_ringbuf_num& (0+255),w,b
  3260  010184  0101               	movlb	1	; () banked
  3261  010186  25CD               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  3262  010188  6E49               	movwf	?_ringbuf_num,c
  3263  01018A  0101               	movlb	1	; () banked
  3264  01018C  51CC               	movf	(??_ringbuf_num+1)& (0+255),w,b
  3265  01018E  0101               	movlb	1	; () banked
  3266  010190  21CE               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  3267  010192  6E4A               	movwf	?_ringbuf_num+1,c
  3268                           
  3269                           ; BSR set to: 1
  3270                           ;My_ringbuf.c: 15: } else {
  3271                           
  3272                           ; BSR set to: 1
  3273  010194  0012               	return	
  3274  010196                     l6756:
  3275                           
  3276                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  3277  010196  EE20 F004          	lfsr	2,4
  3278  01019A  5049               	movf	ringbuf_num@rb,w,c
  3279  01019C  26D9               	addwf	fsr2l,f,c
  3280  01019E  504A               	movf	ringbuf_num@rb+1,w,c
  3281  0101A0  22DA               	addwfc	fsr2h,f,c
  3282  0101A2  CFDE F1CB          	movff	postinc2,??_ringbuf_num
  3283  0101A6  CFDD F1CC          	movff	postdec2,??_ringbuf_num+1
  3284  0101AA  EE20 F002          	lfsr	2,2
  3285  0101AE  5049               	movf	ringbuf_num@rb,w,c
  3286  0101B0  26D9               	addwf	fsr2l,f,c
  3287  0101B2  504A               	movf	ringbuf_num@rb+1,w,c
  3288  0101B4  22DA               	addwfc	fsr2h,f,c
  3289  0101B6  CFDE F1CD          	movff	postinc2,??_ringbuf_num+2
  3290  0101BA  CFDD F1CE          	movff	postdec2,??_ringbuf_num+3
  3291  0101BE  EE20 F006          	lfsr	2,6
  3292  0101C2  5049               	movf	ringbuf_num@rb,w,c
  3293  0101C4  26D9               	addwf	fsr2l,f,c
  3294  0101C6  504A               	movf	ringbuf_num@rb+1,w,c
  3295  0101C8  22DA               	addwfc	fsr2h,f,c
  3296  0101CA  CFDE F1CF          	movff	postinc2,??_ringbuf_num+4
  3297  0101CE  CFDD F1D0          	movff	postdec2,??_ringbuf_num+5
  3298  0101D2  0101               	movlb	1	; () banked
  3299  0101D4  1FCF               	comf	(??_ringbuf_num+4)& (0+255),f,b
  3300  0101D6  1FD0               	comf	(??_ringbuf_num+5)& (0+255),f,b
  3301  0101D8  4BCF               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  3302  0101DA  2BD0               	incf	(??_ringbuf_num+5)& (0+255),f,b
  3303  0101DC  0101               	movlb	1	; () banked
  3304  0101DE  51CD               	movf	(??_ringbuf_num+2)& (0+255),w,b
  3305  0101E0  0101               	movlb	1	; () banked
  3306  0101E2  27CF               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  3307  0101E4  0101               	movlb	1	; () banked
  3308  0101E6  51CE               	movf	(??_ringbuf_num+3)& (0+255),w,b
  3309  0101E8  0101               	movlb	1	; () banked
  3310  0101EA  23D0               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  3311  0101EC  0101               	movlb	1	; () banked
  3312  0101EE  51CB               	movf	??_ringbuf_num& (0+255),w,b
  3313  0101F0  0101               	movlb	1	; () banked
  3314  0101F2  25CF               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  3315  0101F4  6E49               	movwf	?_ringbuf_num,c
  3316  0101F6  0101               	movlb	1	; () banked
  3317  0101F8  51CC               	movf	(??_ringbuf_num+1)& (0+255),w,b
  3318  0101FA  0101               	movlb	1	; () banked
  3319  0101FC  21D0               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  3320  0101FE  6E4A               	movwf	?_ringbuf_num+1,c
  3321                           
  3322                           ; BSR set to: 1
  3323  010200  0012               	return	
  3324  010202                     __end_of_ringbuf_num:
  3325                           	opt stack 0
  3326                           tblptru	equ	0xFF8
  3327                           tblptrh	equ	0xFF7
  3328                           tblptrl	equ	0xFF6
  3329                           tablat	equ	0xFF5
  3330                           prodh	equ	0xFF4
  3331                           prodl	equ	0xFF3
  3332                           intcon	equ	0xFF2
  3333                           intcon2	equ	0xFF1
  3334                           postinc0	equ	0xFEE
  3335                           wreg	equ	0xFE8
  3336                           postinc1	equ	0xFE6
  3337                           postdec1	equ	0xFE5
  3338                           fsr1h	equ	0xFE2
  3339                           fsr1l	equ	0xFE1
  3340                           indf2	equ	0xFDF
  3341                           postinc2	equ	0xFDE
  3342                           postdec2	equ	0xFDD
  3343                           fsr2h	equ	0xFDA
  3344                           fsr2l	equ	0xFD9
  3345                           status	equ	0xFD8
  3346                           
  3347 ;; *************** function _ISR *****************
  3348 ;; Defined at:
  3349 ;;		line 33 in file "main.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;		None               void
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3365 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3366 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3367 ;;Total ram usage:       15 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    1
  3370 ;; This function calls:
  3371 ;;		_I2C_ISR
  3372 ;; This function is called by:
  3373 ;;		Interrupt level 2
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	intcode
  3378  000008                     __pintcode:
  3379                           	opt stack 0
  3380  000008                     _ISR:
  3381                           	opt stack 23
  3382                           
  3383                           ; BSR set to: 1
  3384                           ;incstack = 0
  3385  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3386  00000A  CFFA F03B          	movff	pclath,??_ISR+1
  3387  00000E  CFFB F03C          	movff	pclatu,??_ISR+2
  3388  000012  CFE9 F03D          	movff	fsr0l,??_ISR+3
  3389  000016  CFEA F03E          	movff	fsr0h,??_ISR+4
  3390  00001A  CFE1 F03F          	movff	fsr1l,??_ISR+5
  3391  00001E  CFE2 F040          	movff	fsr1h,??_ISR+6
  3392  000022  CFD9 F041          	movff	fsr2l,??_ISR+7
  3393  000026  CFDA F042          	movff	fsr2h,??_ISR+8
  3394  00002A  CFF3 F043          	movff	prodl,??_ISR+9
  3395  00002E  CFF4 F044          	movff	prodh,??_ISR+10
  3396  000032  CFF6 F045          	movff	tblptrl,??_ISR+11
  3397  000036  CFF7 F046          	movff	tblptrh,??_ISR+12
  3398  00003A  CFF8 F047          	movff	tblptru,??_ISR+13
  3399  00003E  CFF5 F048          	movff	tablat,??_ISR+14
  3400                           
  3401                           ;main.c: 34: I2C_ISR();
  3402  000042  EC75  F083         	call	_I2C_ISR	;wreg free
  3403                           
  3404                           ;main.c: 35: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  3405  000046  B09E               	btfsc	3998,0,c	;volatile
  3406  000048  A09D               	btfss	3997,0,c	;volatile
  3407  00004A  D010               	goto	i2l1333
  3408                           
  3409                           ;main.c: 36: PIR1bits.TMR1IF = 0;
  3410  00004C  909E               	bcf	3998,0,c	;volatile
  3411                           
  3412                           ;main.c: 37: TMR1H = 0xC0;
  3413  00004E  0EC0               	movlw	192
  3414  000050  6ECF               	movwf	4047,c	;volatile
  3415                           
  3416                           ;main.c: 38: one_second_flag = 1;
  3417  000052  0E01               	movlw	1
  3418  000054  6E2E               	movwf	_one_second_flag,c
  3419                           
  3420                           ;main.c: 39: LATAbits.LATA0 = !LATAbits.LATA0;
  3421  000056  B089               	btfsc	3977,0,c	;volatile
  3422  000058  D003               	goto	i2u597_40
  3423  00005A  6A3A               	clrf	??_ISR& (0+255),c
  3424  00005C  2A3A               	incf	??_ISR& (0+255),f,c
  3425  00005E  D001               	goto	i2u598_48
  3426  000060                     i2u597_40:
  3427  000060  6A3A               	clrf	??_ISR& (0+255),c
  3428  000062                     i2u598_48:
  3429  000062  5089               	movf	3977,w,c	;volatile
  3430  000064  183A               	xorwf	??_ISR,w,c
  3431  000066  0BFE               	andlw	-2
  3432  000068  183A               	xorwf	??_ISR,w,c
  3433  00006A  6E89               	movwf	3977,c	;volatile
  3434  00006C                     i2l1333:
  3435  00006C  C048  FFF5         	movff	??_ISR+14,tablat
  3436  000070  C047  FFF8         	movff	??_ISR+13,tblptru
  3437  000074  C046  FFF7         	movff	??_ISR+12,tblptrh
  3438  000078  C045  FFF6         	movff	??_ISR+11,tblptrl
  3439  00007C  C044  FFF4         	movff	??_ISR+10,prodh
  3440  000080  C043  FFF3         	movff	??_ISR+9,prodl
  3441  000084  C042  FFDA         	movff	??_ISR+8,fsr2h
  3442  000088  C041  FFD9         	movff	??_ISR+7,fsr2l
  3443  00008C  C040  FFE2         	movff	??_ISR+6,fsr1h
  3444  000090  C03F  FFE1         	movff	??_ISR+5,fsr1l
  3445  000094  C03E  FFEA         	movff	??_ISR+4,fsr0h
  3446  000098  C03D  FFE9         	movff	??_ISR+3,fsr0l
  3447  00009C  C03C  FFFB         	movff	??_ISR+2,pclatu
  3448  0000A0  C03B  FFFA         	movff	??_ISR+1,pclath
  3449  0000A4  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3450  0000A6  0011               	retfie		f
  3451  0000A8                     __end_of_ISR:
  3452                           	opt stack 0
  3453                           pclatu	equ	0xFFB
  3454                           pclath	equ	0xFFA
  3455                           tblptru	equ	0xFF8
  3456                           tblptrh	equ	0xFF7
  3457                           tblptrl	equ	0xFF6
  3458                           tablat	equ	0xFF5
  3459                           prodh	equ	0xFF4
  3460                           prodl	equ	0xFF3
  3461                           intcon	equ	0xFF2
  3462                           intcon2	equ	0xFF1
  3463                           postinc0	equ	0xFEE
  3464                           fsr0h	equ	0xFEA
  3465                           fsr0l	equ	0xFE9
  3466                           wreg	equ	0xFE8
  3467                           postinc1	equ	0xFE6
  3468                           postdec1	equ	0xFE5
  3469                           fsr1h	equ	0xFE2
  3470                           fsr1l	equ	0xFE1
  3471                           indf2	equ	0xFDF
  3472                           postinc2	equ	0xFDE
  3473                           postdec2	equ	0xFDD
  3474                           fsr2h	equ	0xFDA
  3475                           fsr2l	equ	0xFD9
  3476                           status	equ	0xFD8
  3477                           
  3478 ;; *************** function _I2C_ISR *****************
  3479 ;; Defined at:
  3480 ;;		line 44 in file "../My_library/My_I2C.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;		None               void
  3487 ;; Registers used:
  3488 ;;		wreg, status,2
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_ISR
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text22
  3508  0106EA                     __ptext22:
  3509                           	opt stack 0
  3510  0106EA                     _I2C_ISR:
  3511                           	opt stack 23
  3512                           
  3513                           ;My_I2C.c: 45: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
  3514                           
  3515                           ;incstack = 0
  3516  0106EA  B69D               	btfsc	3997,3,c	;volatile
  3517  0106EC  A69E               	btfss	3998,3,c	;volatile
  3518  0106EE  D003               	goto	i2l5612
  3519                           
  3520                           ;My_I2C.c: 46: PIR1bits.SSP1IF = 0;
  3521  0106F0  969E               	bcf	3998,3,c	;volatile
  3522                           
  3523                           ;My_I2C.c: 47: I2C_sent_flag = 1;
  3524  0106F2  0E01               	movlw	1
  3525  0106F4  6E1F               	movwf	_I2C_sent_flag,c
  3526  0106F6                     i2l5612:
  3527                           
  3528                           ;My_I2C.c: 48: }
  3529                           ;My_I2C.c: 49: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
  3530  0106F6  A6A0               	btfss	4000,3,c	;volatile
  3531  0106F8  0012               	return	
  3532  0106FA  A6A1               	btfss	4001,3,c	;volatile
  3533  0106FC  0012               	return	
  3534                           
  3535                           ;My_I2C.c: 50: PIR2bits.BCL1IF = 0;
  3536  0106FE  96A1               	bcf	4001,3,c	;volatile
  3537                           
  3538                           ;My_I2C.c: 51: I2C_cfct_flag = 1;
  3539  010700  0E01               	movlw	1
  3540  010702  0100               	movlb	0	; () banked
  3541  010704  6F91               	movwf	_I2C_cfct_flag& (0+255),b
  3542  010706  0012               	return	
  3543  010708                     __end_of_I2C_ISR:
  3544                           	opt stack 0
  3545                           pclatu	equ	0xFFB
  3546                           pclath	equ	0xFFA
  3547                           tblptru	equ	0xFF8
  3548                           tblptrh	equ	0xFF7
  3549                           tblptrl	equ	0xFF6
  3550                           tablat	equ	0xFF5
  3551                           prodh	equ	0xFF4
  3552                           prodl	equ	0xFF3
  3553                           intcon	equ	0xFF2
  3554                           intcon2	equ	0xFF1
  3555                           postinc0	equ	0xFEE
  3556                           fsr0h	equ	0xFEA
  3557                           fsr0l	equ	0xFE9
  3558                           wreg	equ	0xFE8
  3559                           postinc1	equ	0xFE6
  3560                           postdec1	equ	0xFE5
  3561                           fsr1h	equ	0xFE2
  3562                           fsr1l	equ	0xFE1
  3563                           indf2	equ	0xFDF
  3564                           postinc2	equ	0xFDE
  3565                           postdec2	equ	0xFDD
  3566                           fsr2h	equ	0xFDA
  3567                           fsr2l	equ	0xFD9
  3568                           status	equ	0xFD8
  3569                           pclatu	equ	0xFFB
  3570                           pclath	equ	0xFFA
  3571                           tblptru	equ	0xFF8
  3572                           tblptrh	equ	0xFF7
  3573                           tblptrl	equ	0xFF6
  3574                           tablat	equ	0xFF5
  3575                           prodh	equ	0xFF4
  3576                           prodl	equ	0xFF3
  3577                           intcon	equ	0xFF2
  3578                           intcon2	equ	0xFF1
  3579                           postinc0	equ	0xFEE
  3580                           fsr0h	equ	0xFEA
  3581                           fsr0l	equ	0xFE9
  3582                           wreg	equ	0xFE8
  3583                           postinc1	equ	0xFE6
  3584                           postdec1	equ	0xFE5
  3585                           fsr1h	equ	0xFE2
  3586                           fsr1l	equ	0xFE1
  3587                           indf2	equ	0xFDF
  3588                           postinc2	equ	0xFDE
  3589                           postdec2	equ	0xFDD
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594                           	psect	rparam
  3595  0000                     pclatu	equ	0xFFB
  3596                           pclath	equ	0xFFA
  3597                           tblptru	equ	0xFF8
  3598                           tblptrh	equ	0xFF7
  3599                           tblptrl	equ	0xFF6
  3600                           tablat	equ	0xFF5
  3601                           prodh	equ	0xFF4
  3602                           prodl	equ	0xFF3
  3603                           intcon	equ	0xFF2
  3604                           intcon2	equ	0xFF1
  3605                           postinc0	equ	0xFEE
  3606                           fsr0h	equ	0xFEA
  3607                           fsr0l	equ	0xFE9
  3608                           wreg	equ	0xFE8
  3609                           postinc1	equ	0xFE6
  3610                           postdec1	equ	0xFE5
  3611                           fsr1h	equ	0xFE2
  3612                           fsr1l	equ	0xFE1
  3613                           indf2	equ	0xFDF
  3614                           postinc2	equ	0xFDE
  3615                           postdec2	equ	0xFDD
  3616                           fsr2h	equ	0xFDA
  3617                           fsr2l	equ	0xFD9
  3618                           status	equ	0xFD8
  3619                           
  3620                           	psect	temp
  3621  000050                     btemp:
  3622                           	opt stack 0
  3623  000050                     	ds	1
  3624  0000                     int$flags	set	btemp
  3625                           pclatu	equ	0xFFB
  3626                           pclath	equ	0xFFA
  3627                           tblptru	equ	0xFF8
  3628                           tblptrh	equ	0xFF7
  3629                           tblptrl	equ	0xFF6
  3630                           tablat	equ	0xFF5
  3631                           prodh	equ	0xFF4
  3632                           prodl	equ	0xFF3
  3633                           intcon	equ	0xFF2
  3634                           intcon2	equ	0xFF1
  3635                           postinc0	equ	0xFEE
  3636                           fsr0h	equ	0xFEA
  3637                           fsr0l	equ	0xFE9
  3638                           wreg	equ	0xFE8
  3639                           postinc1	equ	0xFE6
  3640                           postdec1	equ	0xFE5
  3641                           fsr1h	equ	0xFE2
  3642                           fsr1l	equ	0xFE1
  3643                           indf2	equ	0xFDF
  3644                           postinc2	equ	0xFDE
  3645                           postdec2	equ	0xFDD
  3646                           fsr2h	equ	0xFDA
  3647                           fsr2l	equ	0xFD9
  3648                           status	equ	0xFD8


Data Sizes:
    Strings     161
    Constant    239
    Data        3
    BSS         612
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      79
    BANK0           160      5     160
    BANK1           256     10     213
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation$4	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK1[25]), 

    terminal_operation$3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_operation$2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation$1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK0[25]), 

    terminal_operation$0	PTR struct ringbuf size(2) Largest target is 0

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_42(CODE[8]), STR_41(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(COMRAM[8]), usb_tx(BANK0[8]), uart_tx(BANK0[8]), terminal_task@command(BANK0[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(COMRAM[8]), usb_rx(BANK0[8]), uart_rx(BANK0[8]), terminal_task@command(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(COMRAM[8]), usb_tx(BANK0[8]), usb_rx(BANK0[8]), uart_rx(BANK0[8]), 
		 -> uart_tx(BANK0[8]), terminal_task@command(BANK0[8]), 

    S3270ringbuf$buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(COMRAM[8]), terminal_task@command(BANK0[8]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    _main->_ST7032_task
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _ST7032_command->_ringbuf_put
    _ringbuf_put->_ringbuf_num

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ST7032_cursor
    _main->_ST7032_task
    _ST7032_init->_ringbuf_put
    _ST7032_task->_ringbuf_pop
    _ST7032_put->_ringbuf_put
    _ST7032_command->_ringbuf_put

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ST7032_cursor
    _ST7032_task->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _ringbuf_put->_ringbuf_num

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   64323
                                              9 BANK1      1     1      0
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                        _ST7032_task
                          _main_init
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   30169
                           _OSC_init
                        _ST7032_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     169
                                             15 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      30
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   29970
                       _I2C_init_new
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_init                                         6     0      6     750
                                             15 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _ST7032_clear                                         0     0      0   10197
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (3) _I2C_init_new                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    4263
                                             20 COMRAM     2     2      0
                                              4 BANK0      1     1      0
                    _I2C_idole_check
                           _I2C_send
                          _I2C_start
                           _I2C_stop
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                             17 COMRAM     3     1      2
                                              0 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_send                                             1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_idole_check                                      2     2      0      31
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ST7032_puts                                          2     0      2    9160
                                              6 BANK1      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (2) _ST7032_put                                           1     1      0    8857
                                             20 COMRAM     1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _ST7032_cursor                                        4     3      1   10534
                                              4 BANK0      1     0      1
                                              6 BANK1      3     3      0
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (3) _ST7032_command                                       2     1      1   10197
                                             20 COMRAM     2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    8826
                                             17 COMRAM     3     0      3
                                              0 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2    1407
                                             15 COMRAM     2     0      2
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0       0
                                              0 COMRAM    15    15      0
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (8) _I2C_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ST7032_clear
     _ST7032_command
       _ringbuf_put
         _ringbuf_num
   _ST7032_cursor
     _ST7032_command
       _ringbuf_put
         _ringbuf_num
   _ST7032_puts
     _ST7032_put
       _ringbuf_put
         _ringbuf_num
   _ST7032_task
     _I2C_idole_check
     _I2C_send
     _I2C_start
     _I2C_stop
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _main_init
     _OSC_init
     _ST7032_init
       _I2C_init_new
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _timer0_init
     _timer1_init

 _ISR (ROOT)
   _I2C_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0       0      36        0.0%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      D5       7       83.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      4F       1       84.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     28C       8        0.0%
DATA                 0      0     28C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 18:28:16 2015

                     _USB_SD_Ptr FE79                               _ms 0074  
                   __CFG_CP0$OFF 000000               __size_of_I2C_start 0004  
                            l671 0602                              l666 069C  
                            _BDT 000D00                              _ISR 0008  
                            _UIE 000F36                              _UIR 000F62  
                __end_of_I2C_ISR 0708                              _now 00B1  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                   _USBDeviceState 0024  
                    ?_ST7032_put 003A                             ?_ISR 003A  
                           l1339 0426                             l3052 06B0  
                           l5282 0604                             l6800 0364  
             __CFG_WPFP$PAGE_127 000000                             l6802 0378  
                           l6900 000E                             l6910 0036  
              ??_I2C_idole_check 0049                             l6808 037C  
                           l6904 0028                             l6930 009A  
                           l6922 0064                             l6756 0196  
                           l6940 00E2                             l6932 00A4  
                           l6924 007C                             l6926 0086  
                           l6768 02B0                             l6944 00EC  
                           l6928 0090                             l6936 00B0  
                           l6952 0108                             l6890 0626  
                           l6938 00DC                             l6948 00FE  
                           l6894 0640                             STR_1 FFE1  
                           STR_4 FFFB                             STR_7 FFFD  
                           STR_9 FFF9                             u6820 0436  
                           _UCFG 000F39                             _UEP0 000F26  
                           _UEP1 000F27                             u6838 043A  
                           _UEIE 000F37                             _UEIR 000F63  
                           _UCON 000F65                  _CDCDataInHandle 0088  
                           _pDst 008A                             _main 0420  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                    _BaudRateGen 0070                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 0050           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                 __end_of_I2C_send 0748  
                           start 00A8                 __end_of_I2C_stop 1004  
                  __CFG_IESO$OFF 000000                     ?_ST7032_init 003A  
                   ?_ST7032_task 003A                     ?_ST7032_puts 01D1  
                   ___param_bank 000010                            ??_ISR 003A  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                          ?_main 003A                            _ADRES 000FC3  
                          STR_13 FFF7                            STR_30 FFD7  
                          STR_31 FFF1                            STR_15 FFA3  
                          STR_23 FF5E                            STR_32 FFD1  
                          STR_40 FFC3                            STR_24 FFB4  
                          STR_41 FF9A                            STR_25 FF8F  
                          STR_34 FFEA                            STR_42 FFAC  
                          STR_27 FFEE                            STR_19 FFE6  
                          STR_43 FFBC                            STR_36 FFDC  
                          STR_28 FF83                            STR_37 FFF3  
                          STR_38 FFCA                            STR_39 FFF5  
                          _LATB2 007C52                            _UADDR 000F38  
        ST7032_task@st7032_state 001D                            _TMR1H 000FCF  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _USTAT 000F64  
                 __CFG_FCMEN$OFF 000000                            _sd000 FF5A  
                          _sd001 FEC4                            _sd002 FEF8  
       ST7032_cursor@row_offsets 01D1           __size_of_ST7032_cursor 0030  
                __end_of_dpowers FE79                 __end_of_OSC_init 1016  
                          tablat 000FF5                            status 000FD8  
              __end_of_I2C_start 074C            __size_of_I2C_init_new 001C  
                  ?_ST7032_clear 003A                  __initialization 0492  
                   __end_of_main 0492              __size_of_ST7032_put 0054  
          _control_signal_bitmap 0093              ringbuf_init@bufsize 004D  
                      ??_I2C_ISR 003A                  _one_second_flag 002E  
                         ??_main 01D4                    __activetblptr 000003  
                   _cdc_mem_type 0028                      ST7032_put@c 004E  
                   _I2C_init_new 0708                 _CDCDataOutHandle 0016  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                           i2l1333 006C  
                 __CFG_WDTEN$OFF 000000                           i2l5612 06F6  
                         _RCREG1 000FAF                           _RTCCAL 000F3E  
                         _SPBRG1 000FB0                           _SSP1IF 007CF3  
                 __CFG_WPCFG$OFF 000000                           _SSPBUF 000FC9  
                         _TXREG1 000FAE                   __CFG_WPDIS$OFF 000000  
                 ??_ST7032_clear 0050                _shortPacketStatus 002F  
                 __CFG_XINST$OFF 000000          __size_of_ST7032_command 0054  
                  _ST7032_cursor 06BA                     ?_ringbuf_pop 004B  
                   ?_ringbuf_num 0049                     ?_ringbuf_put 004B  
                   ?_timer0_init 003A                     ?_timer1_init 0049  
                         _lcd_tx 0030                           clear_0 0498  
                         clear_1 04A4                           clear_2 04B0  
                         clear_3 04BC                  __CFG_CLKOEC$OFF 000000  
                         _usb_rx 00D7                           _usb_tx 00DF  
                   _st7032_state 0094                     __mediumconst FE6E  
                      ?_I2C_send 003A                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ?_I2C_stop 003A                      _CtrlTrfData 000D38  
           _controlTransferState 002C             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 04E0  
                  ___rparam_used 000001             __CFG_WPEND$PAGE_WPFP 000000  
                 ?_ST7032_cursor 00FC                 terminal_task@op0 0098  
               terminal_task@op1 0180                 terminal_task@op2 0199  
               terminal_task@op3 01B2                   __pcstackCOMRAM 003A  
                  __end_of_sd000 FF5E                    __end_of_sd001 FEF8  
                  __end_of_sd002 FF2C                     __pidataBANK0 074C  
           __size_of_ST7032_init 00A0             __size_of_ST7032_task 012A  
           __size_of_ST7032_puts 0034                        ?_OSC_init 003A  
                __CFG_DSWDTPS$G2 000000                  _I2C_idole_check 0724  
           terminal_task@command 00E7                    _I2C_cfct_flag 0091  
                     _cdc_notice 0060                       _cdc_rx_len 0029  
                     ??_I2C_send 0049                       _cdc_tx_len 002B  
                   ??_ST7032_put 004E                       ??_I2C_stop 0049  
             __size_of_main_init 0032                       __pbssBANK0 0060  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
             ST7032_command@wait 004E                      _pBDTEntryIn 0010  
          __end_of_weekday_3char FF48            RTCC_task@prev_halfsec 001C  
                 ST7032_init@buf 0200                     ST7032_puts@s 01D1  
             __end_of_ST7032_put 053E                       ??_OSC_init 0049  
                        _I2C_ISR 06EA                       _device_dsc FF48  
                     _ep_data_in 0078                _configDescriptor1 FE81  
             __CFG_OSC$INTOSCPLL 000000             __end_of_ST7032_clear 0740  
                __CFG_WDTPS$1024 000000                          _SPBRGH1 000F7F  
                  _I2C_sent_flag 001F                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A                          _UIEbits 000F36  
               ST7032_cursor@col 01D3             timer1_init@prescaler 004B  
                        _UIRbits 000F62                 ST7032_cursor@row 00FC  
               __CFG_CFGPLLEN$ON 000000                    _cdc_trf_state 002A  
                ??_ST7032_cursor 0050                          _pCDCDst 007E  
                        _pCDCSrc 0081                          __Hparam 0000  
                 _ST7032_command 053E                          __Lparam 0000  
                      _I2C_start 0748          __end_of_I2C_idole_check 0734  
                  ?_ringbuf_init 0049             __size_of_ringbuf_pop 00BA  
           __size_of_ringbuf_num 00D8             __size_of_ringbuf_put 00C4  
                __CFG_STVREN$OFF 000000                __end_of_main_init 068A  
    epoch_to_caltime@month_cache 00FF                          __pcinit 0492  
      __end_of_configDescriptor1 FEC4                          __ramtop 0F00  
           __size_of_timer0_init 0030             __size_of_timer1_init 0044  
                        __ptext0 0420                          __ptext1 0658  
                        __ptext2 05E0                          __ptext3 068A  
                        __ptext4 0380                          __ptext5 0592  
                        __ptext6 0734                          __ptext7 0708  
                        __ptext8 1008                          __ptext9 0000  
                        _inPipes 000A      _USBDeferOUTDataStagePackets 0022  
                      _T0CONbits 000FD5                 _time_change_flag 0095  
                   __size_of_ISR 00A0                        _T1CONbits 000FCD  
                        _dpowers FE6F                        _T3CONbits 000F79  
                      _T5CONbits 000F22                          _uart_rx 00C7  
                        _uart_tx 00CF               __end_of_USB_CD_Ptr FE81  
           end_of_initialization 04E0                     _CTMUCONHbits 000FB3  
             __end_of_USB_SD_Ptr FE7F                     _CTMUCONLbits 000FB2  
            _pBDTEntryEP0OutNext 001A  _dummy_encapsulated_cmd_response 00BF  
         __end_of_ST7032_command 0592                       ?_I2C_start 003A  
                 ??_ringbuf_init 004F                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
            I2C_idole_check@mask 004A       _USBStatusStageEnabledFlag1 0025  
     _USBStatusStageEnabledFlag2 0026                     I2C_send@data 0049  
               __CFG_DSBOREN$OFF 000000        epoch_to_caltime@day_cache 008C  
             ST7032_cursor@F8633 00FD                 __CFG_CPUDIV$OSC1 000000  
             _BothEP0OutUOWNsSet 001E                __size_of_I2C_send 0008  
              __size_of_I2C_stop 0004                        _USTATcopy 0039  
        timer1_init@clock_select 0049                  ?_ST7032_command 004E  
               __CFG_IOL1WAY$OFF 000000              __CFG_MSSP7B_EN$MSK7 000000  
                 ringbuf_init@rb 0049                 ?_I2C_idole_check 003A  
                 ringbuf_pop@ret 004D            ST7032_command@command 004F  
          __size_of_ST7032_clear 000C                __size_of_OSC_init 000E  
               __CFG_DSWDTEN$OFF 000000                _USBBusIsSuspended 0092  
            start_initialization 0492                      __end_of_ISR 00A8  
                    _cdc_data_rx 0100                      _cdc_data_tx 0140  
                  ??_ST7032_init 0050                     _ST7032_clear 0734  
                  ??_ST7032_task 004E                      ??_I2C_start 0049  
                  ??_ST7032_puts 004F           _pBDTEntryEP0OutCurrent 0018  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK0 00FD  
                       ?_I2C_ISR 003A           _USBActiveConfiguration 0038  
                    __pbssCOMRAM 0001                    __pcstackBANK0 00F8  
                  __pcstackBANK1 01CB             __end_of_ringbuf_init 05E0  
                   _pBDTEntryOut 006A                  millis_timer@cnt 008E  
                      __pintcode 0008                    __pmediumconst FE6E  
            __end_of_ST7032_init 0420              __end_of_ST7032_task 012A  
            __end_of_ST7032_puts 0658       USBCBSendResume@delay_count 0086  
                      _main_init 0658             __CFG_RTCOSC$T1OSCREF 000000  
                       _I2C_busy 0090                         _I2C_send 0740  
                       _I2C_stop 1000                      _PADCFG1bits 000F3C  
                  ?_I2C_init_new 003A                  ST7032_task@data 00FC  
                    _ep_data_out 007B                  ST7032_task@wait 0084  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 004B  
                       _LATAbits 000F89                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                         _IPR5bits 000F99  
                       _PIE5bits 000F91            __end_of_ST7032_cursor 06EA  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       _PIR5bits 000F98       epoch_to_caltime@year_cache 0096  
                       i2u597_40 0060                         i2u598_48 0062  
                  ??_ringbuf_pop 00F8                    ??_ringbuf_num 01CB  
                  ??_ringbuf_put 00F8                         _RCONbits 000FD0  
                       _UEP0bits 000F26       _USBDeferINDataStagePackets 0021  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                  ??_timer0_init 0049                    ??_timer1_init 004A  
                       _SSP1STAT 000FC7                         _UCONbits 000F65  
                       _OSC_init 1008                 __size_of_I2C_ISR 001E  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
               __CFG_SOSCSEL$LOW 000000                       ?_main_init 003A  
                   _RemoteWakeup 0020                   ??_I2C_init_new 0049  
                  ringbuf_pop@rb 004B                    ringbuf_num@rb 0049  
                  ringbuf_put@rb 004B                 ??_ST7032_command 004F  
                    _INTCON2bits 000FF1               __end_of_device_dsc FF5A  
                       __Hrparam 0000                      _ST7032_init 0380  
                       __Lrparam 0000                      _ST7032_task 0000  
                    _ST7032_puts 0624                         _SetupPkt 000D30  
                  _weekday_3char FF2C              __end_of_ringbuf_pop 0380  
            __end_of_ringbuf_num 0202              __end_of_ringbuf_put 02C6  
                    _line_coding 00EF              __end_of_timer0_init 06BA  
          __size_of_ringbuf_init 004E              __end_of_timer1_init 0624  
           timer0_init@prescaler 004A                         __ptext10 02C6  
                       __ptext11 1000                         __ptext20 012A  
                       __ptext12 0748                         __ptext13 0740  
                       __ptext22 06EA                         __ptext14 0724  
                       __ptext15 0624                         __ptext16 04EA  
                       __ptext17 06BA                         __ptext18 053E  
                       __ptext19 0202                     _SSP1CON1bits 000FC6  
                   _SSP1CON2bits 000FC5                    __size_of_main 0072  
                       _outPipes 0001                         int$flags 0050  
                   _ringbuf_init 0592                     _SSP1STATbits 000FC7  
      _USBDeferStatusStagePacket 0023                      ??_main_init 0050  
       __size_of_I2C_idole_check 0010                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 004D  
                     _ST7032_put 04EA        terminal_task@command_init 0097  
                       intlevel2 0000                       _RCSTA1bits 000FAC  
                     _OSCCONbits 000FD3             __end_of_I2C_init_new 0724  
                    _ringbuf_pop 02C6                      _ringbuf_num 012A  
                    _ringbuf_put 0202                      _timer0_init 068A  
                    _timer1_init 05E0                       _RTCCFGbits 000F3F  
          _USBAlternateInterface 00F6                  _endpoint_number 002D  
   _USBStatusStageTimeoutCounter 0027                       _USB_CD_Ptr FE7F  
