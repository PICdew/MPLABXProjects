

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 12 23:48:42 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   122                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   123                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   124                           	dabs	1,0xD00,48,_BDT
   125                           	dabs	1,0xD38,8,_CtrlTrfData
   126                           	dabs	1,0xD30,8,_SetupPkt
   127  0000                     
   128                           	psect	idataBANK1
   129  0145BA                     __pidataBANK1:
   130                           	opt stack 0
   131                           
   132                           ;initializer for I2C_LCD_SetCursor@F8620
   133  0145BA  00                 	db	0
   134  0145BB  40                 	db	64
   135                           
   136                           ;initializer for I2C_LCD_cursor@F8592
   137  0145BC  00                 	db	0
   138  0145BD  40                 	db	64
   139                           
   140                           ;initializer for epoch_to_caltime@month_cache
   141  0145BE  01                 	db	1
   142                           
   143                           	psect	mediumconst
   144  00FD68                     __pmediumconst:
   145                           	opt stack 0
   146  00FD68  00                 	db	0
   147  00FD69                     _dpowers:
   148                           	opt stack 0
   149  00FD69  0001               	dw	1
   150  00FD6B  000A               	dw	10
   151  00FD6D  0064               	dw	100
   152  00FD6F  03E8               	dw	1000
   153  00FD71  2710               	dw	10000
   154  00FD73                     __end_of_dpowers:
   155                           	opt stack 0
   156  00FD73                     _USB_SD_Ptr:
   157                           	opt stack 0
   158  00FD73  54                 	db	low _sd000
   159  00FD74  FE                 	db	high _sd000
   160  00FD75  BE                 	db	low _sd001
   161  00FD76  FD                 	db	high _sd001
   162  00FD77  F2                 	db	low _sd002
   163  00FD78  FD                 	db	high _sd002
   164  00FD79                     __end_of_USB_SD_Ptr:
   165                           	opt stack 0
   166  00FD79                     _USB_CD_Ptr:
   167                           	opt stack 0
   168  00FD79  7B                 	db	low _configDescriptor1
   169  00FD7A  FD                 	db	high _configDescriptor1
   170  00FD7B                     __end_of_USB_CD_Ptr:
   171                           	opt stack 0
   172  00FD7B                     _configDescriptor1:
   173                           	opt stack 0
   174  00FD7B  09                 	db	9
   175  00FD7C  02                 	db	2
   176  00FD7D  43                 	db	67
   177  00FD7E  00                 	db	0
   178  00FD7F  02                 	db	2
   179  00FD80  01                 	db	1
   180  00FD81  00                 	db	0
   181  00FD82  C0                 	db	192
   182  00FD83  32                 	db	50
   183  00FD84  09                 	db	9
   184  00FD85  04                 	db	4
   185  00FD86  00                 	db	0
   186  00FD87  00                 	db	0
   187  00FD88  01                 	db	1
   188  00FD89  02                 	db	2
   189  00FD8A  02                 	db	2
   190  00FD8B  01                 	db	1
   191  00FD8C  00                 	db	0
   192  00FD8D  05                 	db	5
   193  00FD8E  24                 	db	36
   194  00FD8F  00                 	db	0
   195  00FD90  10                 	db	16
   196  00FD91  01                 	db	1
   197  00FD92  04                 	db	4
   198  00FD93  24                 	db	36
   199  00FD94  02                 	db	2
   200  00FD95  02                 	db	2
   201  00FD96  05                 	db	5
   202  00FD97  24                 	db	36
   203  00FD98  06                 	db	6
   204  00FD99  00                 	db	0
   205  00FD9A  01                 	db	1
   206  00FD9B  05                 	db	5
   207  00FD9C  24                 	db	36
   208  00FD9D  01                 	db	1
   209  00FD9E  00                 	db	0
   210  00FD9F  01                 	db	1
   211  00FDA0  07                 	db	7
   212  00FDA1  05                 	db	5
   213  00FDA2  81                 	db	129
   214  00FDA3  03                 	db	3
   215  00FDA4  08                 	db	8
   216  00FDA5  00                 	db	0
   217  00FDA6  02                 	db	2
   218  00FDA7  09                 	db	9
   219  00FDA8  04                 	db	4
   220  00FDA9  01                 	db	1
   221  00FDAA  00                 	db	0
   222  00FDAB  02                 	db	2
   223  00FDAC  0A                 	db	10
   224  00FDAD  00                 	db	0
   225  00FDAE  00                 	db	0
   226  00FDAF  00                 	db	0
   227  00FDB0  07                 	db	7
   228  00FDB1  05                 	db	5
   229  00FDB2  02                 	db	2
   230  00FDB3  02                 	db	2
   231  00FDB4  40                 	db	64
   232  00FDB5  00                 	db	0
   233  00FDB6  00                 	db	0
   234  00FDB7  07                 	db	7
   235  00FDB8  05                 	db	5
   236  00FDB9  82                 	db	130
   237  00FDBA  02                 	db	2
   238  00FDBB  40                 	db	64
   239  00FDBC  00                 	db	0
   240  00FDBD  00                 	db	0
   241  00FDBE                     __end_of_configDescriptor1:
   242                           	opt stack 0
   243  00FDBE                     _sd001:
   244                           	opt stack 0
   245  00FDBE  34                 	db	52
   246  00FDBF  03                 	db	3
   247  00FDC0  004D               	dw	77
   248  00FDC2  0069               	dw	105
   249  00FDC4  0063               	dw	99
   250  00FDC6  0072               	dw	114
   251  00FDC8  006F               	dw	111
   252  00FDCA  0063               	dw	99
   253  00FDCC  0068               	dw	104
   254  00FDCE  0069               	dw	105
   255  00FDD0  0070               	dw	112
   256  00FDD2  0020               	dw	32
   257  00FDD4  0054               	dw	84
   258  00FDD6  0065               	dw	101
   259  00FDD8  0063               	dw	99
   260  00FDDA  0068               	dw	104
   261  00FDDC  006E               	dw	110
   262  00FDDE  006F               	dw	111
   263  00FDE0  006C               	dw	108
   264  00FDE2  006F               	dw	111
   265  00FDE4  0067               	dw	103
   266  00FDE6  0079               	dw	121
   267  00FDE8  0020               	dw	32
   268  00FDEA  0049               	dw	73
   269  00FDEC  006E               	dw	110
   270  00FDEE  0063               	dw	99
   271  00FDF0  002E               	dw	46
   272  00FDF2                     __end_of_sd001:
   273                           	opt stack 0
   274  00FDF2                     _sd002:
   275                           	opt stack 0
   276  00FDF2  34                 	db	52
   277  00FDF3  03                 	db	3
   278  00FDF4  0043               	dw	67
   279  00FDF6  0044               	dw	68
   280  00FDF8  0043               	dw	67
   281  00FDFA  0020               	dw	32
   282  00FDFC  0052               	dw	82
   283  00FDFE  0053               	dw	83
   284  00FE00  002D               	dw	45
   285  00FE02  0032               	dw	50
   286  00FE04  0033               	dw	51
   287  00FE06  0032               	dw	50
   288  00FE08  0020               	dw	32
   289  00FE0A  0045               	dw	69
   290  00FE0C  006D               	dw	109
   291  00FE0E  0075               	dw	117
   292  00FE10  006C               	dw	108
   293  00FE12  0061               	dw	97
   294  00FE14  0074               	dw	116
   295  00FE16  0069               	dw	105
   296  00FE18  006F               	dw	111
   297  00FE1A  006E               	dw	110
   298  00FE1C  0020               	dw	32
   299  00FE1E  0044               	dw	68
   300  00FE20  0065               	dw	101
   301  00FE22  006D               	dw	109
   302  00FE24  006F               	dw	111
   303  00FE26                     __end_of_sd002:
   304                           	opt stack 0
   305  00FE26                     _weekday_3char:
   306                           	opt stack 0
   307  00FE26  53                 	db	83
   308  00FE27  55                 	db	85
   309  00FE28  4E                 	db	78
   310  00FE29  00                 	db	0
   311  00FE2A  4D                 	db	77
   312  00FE2B  4F                 	db	79
   313  00FE2C  4E                 	db	78
   314  00FE2D  00                 	db	0
   315  00FE2E  54                 	db	84
   316  00FE2F  55                 	db	85
   317  00FE30  45                 	db	69
   318  00FE31  00                 	db	0
   319  00FE32  57                 	db	87
   320  00FE33  45                 	db	69
   321  00FE34  44                 	db	68
   322  00FE35  00                 	db	0
   323  00FE36  54                 	db	84
   324  00FE37  48                 	db	72
   325  00FE38  55                 	db	85
   326  00FE39  00                 	db	0
   327  00FE3A  46                 	db	70
   328  00FE3B  52                 	db	82
   329  00FE3C  49                 	db	73
   330  00FE3D  00                 	db	0
   331  00FE3E  53                 	db	83
   332  00FE3F  41                 	db	65
   333  00FE40  54                 	db	84
   334  00FE41  00                 	db	0
   335  00FE42                     __end_of_weekday_3char:
   336                           	opt stack 0
   337  00FE42                     _device_dsc:
   338                           	opt stack 0
   339  00FE42  12                 	db	18
   340  00FE43  01                 	db	1
   341  00FE44  0200               	dw	512
   342  00FE46  02                 	db	2
   343  00FE47  00                 	db	0
   344  00FE48  00                 	db	0
   345  00FE49  08                 	db	8
   346  00FE4A  04D8               	dw	1240
   347  00FE4C  000A               	dw	10
   348  00FE4E  0100               	dw	256
   349  00FE50  01                 	db	1
   350  00FE51  02                 	db	2
   351  00FE52  00                 	db	0
   352  00FE53  01                 	db	1
   353  00FE54                     __end_of_device_dsc:
   354                           	opt stack 0
   355  00FE54                     _sd000:
   356                           	opt stack 0
   357  00FE54  04                 	db	4
   358  00FE55  03                 	db	3
   359  00FE56  0409               	dw	1033
   360  00FE58                     __end_of_sd000:
   361                           	opt stack 0
   362  0000                     _ANCON0	set	3912
   363  0000                     _ANCON1	set	3913
   364  0000                     _PADCFG1bits	set	3900
   365  0000                     _RTCCAL	set	3902
   366  0000                     _RTCCFGbits	set	3903
   367  0000                     _RTCVALH	set	3899
   368  0000                     _RTCVALL	set	3898
   369  0000                     _T5CONbits	set	3874
   370  0000                     _UADDR	set	3896
   371  0000                     _UCFG	set	3897
   372  0000                     _UEIE	set	3895
   373  0000                     _UEP0bits	set	3878
   374  0000                     _UIE	set	3894
   375  0000                     _UIEbits	set	3894
   376  0000                     _UEP0	set	3878
   377  0000                     _UEP1	set	3879
   378  0000                     _ADRES	set	4035
   379  0000                     _ADCON0bits	set	4034
   380  0000                     _ADCON1bits	set	4033
   381  0000                     _BAUDCON1bits	set	3966
   382  0000                     _CTMUCONH	set	4019
   383  0000                     _CTMUCONHbits	set	4019
   384  0000                     _CTMUCONL	set	4018
   385  0000                     _CTMUCONLbits	set	4018
   386  0000                     _CTMUICON	set	4017
   387  0000                     _EECON2	set	4007
   388  0000                     _INTCON2bits	set	4081
   389  0000                     _INTCONbits	set	4082
   390  0000                     _IPR1bits	set	3999
   391  0000                     _IPR2bits	set	4002
   392  0000                     _IPR5bits	set	3993
   393  0000                     _LATAbits	set	3977
   394  0000                     _OSCCONbits	set	4051
   395  0000                     _OSCTUNEbits	set	3995
   396  0000                     _PIE1bits	set	3997
   397  0000                     _PIE2bits	set	4000
   398  0000                     _PIE5bits	set	3985
   399  0000                     _PIR1bits	set	3998
   400  0000                     _PIR2bits	set	4001
   401  0000                     _PIR5bits	set	3992
   402  0000                     _RCONbits	set	4048
   403  0000                     _RCREG1	set	4015
   404  0000                     _RCSTA1bits	set	4012
   405  0000                     _SPBRG1	set	4016
   406  0000                     _SPBRGH1	set	3967
   407  0000                     _SSP1ADD	set	4040
   408  0000                     _SSP1BUF	set	4041
   409  0000                     _SSP1CON1	set	4038
   410  0000                     _SSP1CON1bits	set	4038
   411  0000                     _SSP1CON2	set	4037
   412  0000                     _SSP1CON2bits	set	4037
   413  0000                     _SSP1STAT	set	4039
   414  0000                     _SSP1STATbits	set	4039
   415  0000                     _T0CONbits	set	4053
   416  0000                     _T1CONbits	set	4045
   417  0000                     _T3CONbits	set	3961
   418  0000                     _TMR1H	set	4047
   419  0000                     _TRISA	set	3986
   420  0000                     _TRISB	set	3987
   421  0000                     _TRISC	set	3988
   422  0000                     _TXREG1	set	4014
   423  0000                     _TXSTA1bits	set	4013
   424  0000                     _UCON	set	3941
   425  0000                     _UCONbits	set	3941
   426  0000                     _UEIR	set	3939
   427  0000                     _UIR	set	3938
   428  0000                     _UIRbits	set	3938
   429  0000                     _USTAT	set	3940
   430  0000                     _BCL1IF	set	32011
   431  0000                     _LATB2	set	31826
   432  0000                     _SSP1IF	set	31987
   433  00FE58                     STR_43:
   434  00FE58  09                 	db	9
   435  00FE59  2A                 	db	42
   436  00FE5A  2A                 	db	42
   437  00FE5B  2A                 	db	42
   438  00FE5C  2A                 	db	42
   439  00FE5D  2A                 	db	42
   440  00FE5E  2A                 	db	42
   441  00FE5F  2A                 	db	42
   442  00FE60  2A                 	db	42
   443  00FE61  2A                 	db	42
   444  00FE62  2A                 	db	42
   445  00FE63  2A                 	db	42
   446  00FE64  2A                 	db	42
   447  00FE65  2A                 	db	42
   448  00FE66  2A                 	db	42
   449  00FE67  2A                 	db	42
   450  00FE68  2A                 	db	42
   451  00FE69  2A                 	db	42
   452  00FE6A  2A                 	db	42
   453  00FE6B  2A                 	db	42
   454  00FE6C  2A                 	db	42
   455  00FE6D  2A                 	db	42
   456  00FE6E  2A                 	db	42
   457  00FE6F  2A                 	db	42
   458  00FE70  2A                 	db	42
   459  00FE71  2A                 	db	42
   460  00FE72  2A                 	db	42
   461  00FE73  2A                 	db	42
   462  00FE74  2A                 	db	42
   463  00FE75  2A                 	db	42
   464  00FE76  2A                 	db	42
   465  00FE77  0A                 	db	10
   466  00FE78  09                 	db	9
   467  00FE79  2A                 	db	42
   468  00FE7A  2A                 	db	42
   469  00FE7B  2A                 	db	42
   470  00FE7C  2A                 	db	42
   471  00FE7D  20                 	db	32
   472  00FE7E  50                 	db	80	;'P'
   473  00FE7F  49                 	db	73	;'I'
   474  00FE80  43                 	db	67	;'C'
   475  00FE81  31                 	db	49	;'1'
   476  00FE82  38                 	db	56	;'8'
   477  00FE83  46                 	db	70	;'F'
   478  00FE84  32                 	db	50	;'2'
   479  00FE85  37                 	db	55	;'7'
   480  00FE86  4A                 	db	74	;'J'
   481  00FE87  35                 	db	53	;'5'
   482  00FE88  33                 	db	51	;'3'
   483  00FE89  20                 	db	32
   484  00FE8A  74                 	db	116	;'t'
   485  00FE8B  65                 	db	101	;'e'
   486  00FE8C  6D                 	db	109	;'m'
   487  00FE8D  70                 	db	112	;'p'
   488  00FE8E  6C                 	db	108	;'l'
   489  00FE8F  61                 	db	97	;'a'
   490  00FE90  74                 	db	116	;'t'
   491  00FE91  65                 	db	101	;'e'
   492  00FE92  20                 	db	32
   493  00FE93  2A                 	db	42
   494  00FE94  2A                 	db	42
   495  00FE95  2A                 	db	42
   496  00FE96  2A                 	db	42
   497  00FE97  0A                 	db	10
   498  00FE98  09                 	db	9
   499  00FE99  2A                 	db	42
   500  00FE9A  2A                 	db	42
   501  00FE9B  2A                 	db	42
   502  00FE9C  2A                 	db	42
   503  00FE9D  20                 	db	32
   504  00FE9E  4D                 	db	77	;'M'
   505  00FE9F  61                 	db	97	;'a'
   506  00FEA0  64                 	db	100	;'d'
   507  00FEA1  65                 	db	101	;'e'
   508  00FEA2  20                 	db	32
   509  00FEA3  62                 	db	98	;'b'
   510  00FEA4  79                 	db	121	;'y'
   511  00FEA5  20                 	db	32
   512  00FEA6  40                 	db	64	;'@'
   513  00FEA7  52                 	db	82	;'R'
   514  00FEA8  79                 	db	121	;'y'
   515  00FEA9  6F                 	db	111	;'o'
   516  00FEAA  6B                 	db	107	;'k'
   517  00FEAB  65                 	db	101	;'e'
   518  00FEAC  72                 	db	114	;'r'
   519  00FEAD  69                 	db	105	;'i'
   520  00FEAE  31                 	db	49	;'1'
   521  00FEAF  34                 	db	52	;'4'
   522  00FEB0  20                 	db	32
   523  00FEB1  20                 	db	32
   524  00FEB2  20                 	db	32
   525  00FEB3  2A                 	db	42
   526  00FEB4  2A                 	db	42
   527  00FEB5  2A                 	db	42
   528  00FEB6  2A                 	db	42
   529  00FEB7  0A                 	db	10
   530  00FEB8  09                 	db	9
   531  00FEB9  2A                 	db	42
   532  00FEBA  2A                 	db	42
   533  00FEBB  2A                 	db	42
   534  00FEBC  2A                 	db	42
   535  00FEBD  2A                 	db	42
   536  00FEBE  2A                 	db	42
   537  00FEBF  2A                 	db	42
   538  00FEC0  2A                 	db	42
   539  00FEC1  2A                 	db	42
   540  00FEC2  2A                 	db	42
   541  00FEC3  2A                 	db	42
   542  00FEC4  2A                 	db	42
   543  00FEC5  2A                 	db	42
   544  00FEC6  2A                 	db	42
   545  00FEC7  2A                 	db	42
   546  00FEC8  2A                 	db	42
   547  00FEC9  2A                 	db	42
   548  00FECA  2A                 	db	42
   549  00FECB  2A                 	db	42
   550  00FECC  2A                 	db	42
   551  00FECD  2A                 	db	42
   552  00FECE  2A                 	db	42
   553  00FECF  2A                 	db	42
   554  00FED0  2A                 	db	42
   555  00FED1  2A                 	db	42
   556  00FED2  2A                 	db	42
   557  00FED3  2A                 	db	42
   558  00FED4  2A                 	db	42
   559  00FED5  2A                 	db	42
   560  00FED6  2A                 	db	42
   561  00FED7  0A                 	db	10
   562  00FED8  0A                 	db	10
   563  00FED9  09                 	db	9
   564  00FEDA  70                 	db	112	;'p'
   565  00FEDB  72                 	db	114	;'r'
   566  00FEDC  69                 	db	105	;'i'
   567  00FEDD  6E                 	db	110	;'n'
   568  00FEDE  74                 	db	116	;'t'
   569  00FEDF  5F                 	db	95	;'_'
   570  00FEE0  74                 	db	116	;'t'
   571  00FEE1  69                 	db	105	;'i'
   572  00FEE2  6D                 	db	109	;'m'
   573  00FEE3  65                 	db	101	;'e'
   574  00FEE4  28                 	db	40
   575  00FEE5  74                 	db	116	;'t'
   576  00FEE6  29                 	db	41
   577  00FEE7  0A                 	db	10
   578  00FEE8  09                 	db	9
   579  00FEE9  61                 	db	97	;'a'
   580  00FEEA  64                 	db	100	;'d'
   581  00FEEB  6A                 	db	106	;'j'
   582  00FEEC  75                 	db	117	;'u'
   583  00FEED  73                 	db	115	;'s'
   584  00FEEE  74                 	db	116	;'t'
   585  00FEEF  5F                 	db	95	;'_'
   586  00FEF0  74                 	db	116	;'t'
   587  00FEF1  69                 	db	105	;'i'
   588  00FEF2  6D                 	db	109	;'m'
   589  00FEF3  65                 	db	101	;'e'
   590  00FEF4  28                 	db	40
   591  00FEF5  61                 	db	97	;'a'
   592  00FEF6  74                 	db	116	;'t'
   593  00FEF7  29                 	db	41
   594  00FEF8  20                 	db	32
   595  00FEF9  5B                 	db	91	;'['
   596  00FEFA  68                 	db	104	;'h'
   597  00FEFB  61                 	db	97	;'a'
   598  00FEFC  6E                 	db	110	;'n'
   599  00FEFD  64                 	db	100	;'d'
   600  00FEFE  3A                 	db	58	;':'
   601  00FEFF  79                 	db	121	;'y'
   602  00FF00  2C                 	db	44
   603  00FF01  4D                 	db	77	;'M'
   604  00FF02  2C                 	db	44
   605  00FF03  64                 	db	100	;'d'
   606  00FF04  2C                 	db	44
   607  00FF05  68                 	db	104	;'h'
   608  00FF06  2C                 	db	44
   609  00FF07  6D                 	db	109	;'m'
   610  00FF08  2C                 	db	44
   611  00FF09  73                 	db	115	;'s'
   612  00FF0A  5D                 	db	93	;']'
   613  00FF0B  20                 	db	32
   614  00FF0C  5B                 	db	91	;'['
   615  00FF0D  76                 	db	118	;'v'
   616  00FF0E  61                 	db	97	;'a'
   617  00FF0F  6C                 	db	108	;'l'
   618  00FF10  75                 	db	117	;'u'
   619  00FF11  65                 	db	101	;'e'
   620  00FF12  28                 	db	40
   621  00FF13  64                 	db	100	;'d'
   622  00FF14  65                 	db	101	;'e'
   623  00FF15  63                 	db	99	;'c'
   624  00FF16  69                 	db	105	;'i'
   625  00FF17  6D                 	db	109	;'m'
   626  00FF18  61                 	db	97	;'a'
   627  00FF19  6C                 	db	108	;'l'
   628  00FF1A  29                 	db	41
   629  00FF1B  5D                 	db	93	;']'
   630  00FF1C  0A                 	db	10
   631  00FF1D  0A                 	db	10
   632  00FF1E  09                 	db	9
   633  00FF1F  66                 	db	102	;'f'
   634  00FF20  6F                 	db	111	;'o'
   635  00FF21  72                 	db	114	;'r'
   636  00FF22  20                 	db	32
   637  00FF23  44                 	db	68	;'D'
   638  00FF24  65                 	db	101	;'e'
   639  00FF25  76                 	db	118	;'v'
   640  00FF26  65                 	db	101	;'e'
   641  00FF27  6C                 	db	108	;'l'
   642  00FF28  6F                 	db	111	;'o'
   643  00FF29  70                 	db	112	;'p'
   644  00FF2A  70                 	db	112	;'p'
   645  00FF2B  65                 	db	101	;'e'
   646  00FF2C  72                 	db	114	;'r'
   647  00FF2D  0A                 	db	10
   648  00FF2E  09                 	db	9
   649  00FF2F  52                 	db	82	;'R'
   650  00FF30  45                 	db	69	;'E'
   651  00FF31  53                 	db	83	;'S'
   652  00FF32  45                 	db	69	;'E'
   653  00FF33  54                 	db	84	;'T'
   654  00FF34  28                 	db	40
   655  00FF35  29                 	db	41
   656  00FF36  3B                 	db	59	;';'
   657  00FF37  0A                 	db	10
   658  00FF38  09                 	db	9
   659  00FF39  62                 	db	98	;'b'
   660  00FF3A  6F                 	db	111	;'o'
   661  00FF3B  6F                 	db	111	;'o'
   662  00FF3C  74                 	db	116	;'t'
   663  00FF3D  6C                 	db	108	;'l'
   664  00FF3E  6F                 	db	111	;'o'
   665  00FF3F  61                 	db	97	;'a'
   666  00FF40  64                 	db	100	;'d'
   667  00FF41  0A                 	db	10
   668  00FF42  00                 	db	0
   669  00FF43                     STR_23:
   670  00FF43  09                 	db	9
   671  00FF44  32                 	db	50	;'2'
   672  00FF45  30                 	db	48	;'0'
   673  00FF46  25                 	db	37
   674  00FF47  30                 	db	48	;'0'
   675  00FF48  32                 	db	50	;'2'
   676  00FF49  64                 	db	100	;'d'
   677  00FF4A  2F                 	db	47
   678  00FF4B  25                 	db	37
   679  00FF4C  30                 	db	48	;'0'
   680  00FF4D  32                 	db	50	;'2'
   681  00FF4E  64                 	db	100	;'d'
   682  00FF4F  2F                 	db	47
   683  00FF50  25                 	db	37
   684  00FF51  30                 	db	48	;'0'
   685  00FF52  32                 	db	50	;'2'
   686  00FF53  64                 	db	100	;'d'
   687  00FF54  28                 	db	40
   688  00FF55  25                 	db	37
   689  00FF56  73                 	db	115	;'s'
   690  00FF57  29                 	db	41
   691  00FF58  25                 	db	37
   692  00FF59  30                 	db	48	;'0'
   693  00FF5A  32                 	db	50	;'2'
   694  00FF5B  64                 	db	100	;'d'
   695  00FF5C  3A                 	db	58	;':'
   696  00FF5D  25                 	db	37
   697  00FF5E  30                 	db	48	;'0'
   698  00FF5F  32                 	db	50	;'2'
   699  00FF60  64                 	db	100	;'d'
   700  00FF61  2D                 	db	45
   701  00FF62  25                 	db	37
   702  00FF63  30                 	db	48	;'0'
   703  00FF64  32                 	db	50	;'2'
   704  00FF65  64                 	db	100	;'d'
   705  00FF66  0A                 	db	10
   706  00FF67  00                 	db	0
   707  00FF68                     STR_28:
   708  00FF68  61                 	db	97	;'a'
   709  00FF69  64                 	db	100	;'d'
   710  00FF6A  6A                 	db	106	;'j'
   711  00FF6B  75                 	db	117	;'u'
   712  00FF6C  73                 	db	115	;'s'
   713  00FF6D  74                 	db	116	;'t'
   714  00FF6E  5F                 	db	95	;'_'
   715  00FF6F  74                 	db	116	;'t'
   716  00FF70  69                 	db	105	;'i'
   717  00FF71  6D                 	db	109	;'m'
   718  00FF72  65                 	db	101	;'e'
   719  00FF73  00                 	db	0
   720  00FF74                     STR_25:
   721  00FF74  70                 	db	112	;'p'
   722  00FF75  72                 	db	114	;'r'
   723  00FF76  69                 	db	105	;'i'
   724  00FF77  6E                 	db	110	;'n'
   725  00FF78  74                 	db	116	;'t'
   726  00FF79  5F                 	db	95	;'_'
   727  00FF7A  74                 	db	116	;'t'
   728  00FF7B  69                 	db	105	;'i'
   729  00FF7C  6D                 	db	109	;'m'
   730  00FF7D  65                 	db	101	;'e'
   731  00FF7E  00                 	db	0
   732  00FF7F                     STR_46:
   733  00FF7F  31                 	db	49	;'1'
   734  00FF80  38                 	db	56	;'8'
   735  00FF81  46                 	db	70	;'F'
   736  00FF82  32                 	db	50	;'2'
   737  00FF83  37                 	db	55	;'7'
   738  00FF84  4A                 	db	74	;'J'
   739  00FF85  35                 	db	53	;'5'
   740  00FF86  33                 	db	51	;'3'
   741  00FF87  00                 	db	0
   742  00FF88                     STR_44:
   743  00FF88  52                 	db	82	;'R'
   744  00FF89  45                 	db	69	;'E'
   745  00FF8A  53                 	db	83	;'S'
   746  00FF8B  45                 	db	69	;'E'
   747  00FF8C  54                 	db	84	;'T'
   748  00FF8D  28                 	db	40
   749  00FF8E  29                 	db	41
   750  00FF8F  3B                 	db	59	;';'
   751  00FF90  00                 	db	0
   752  00FF91                     STR_45:
   753  00FF91  62                 	db	98	;'b'
   754  00FF92  6F                 	db	111	;'o'
   755  00FF93  6F                 	db	111	;'o'
   756  00FF94  74                 	db	116	;'t'
   757  00FF95  6C                 	db	108	;'l'
   758  00FF96  6F                 	db	111	;'o'
   759  00FF97  61                 	db	97	;'a'
   760  00FF98  64                 	db	100	;'d'
   761  00FF99  00                 	db	0
   762  00FF9A                     STR_47:
   763  00FF9A  54                 	db	84	;'T'
   764  00FF9B  65                 	db	101	;'e'
   765  00FF9C  6D                 	db	109	;'m'
   766  00FF9D  70                 	db	112	;'p'
   767  00FF9E  6C                 	db	108	;'l'
   768  00FF9F  61                 	db	97	;'a'
   769  00FFA0  74                 	db	116	;'t'
   770  00FFA1  65                 	db	101	;'e'
   771  00FFA2  00                 	db	0
   772  00FFA3                     STR_15:
   773  00FFA3  20                 	db	32
   774  00FFA4  20                 	db	32
   775  00FFA5  20                 	db	32
   776  00FFA6  20                 	db	32
   777  00FFA7  20                 	db	32
   778  00FFA8  20                 	db	32
   779  00FFA9  20                 	db	32
   780  00FFAA  20                 	db	32
   781  00FFAB  00                 	db	0
   782  00FFAC                     STR_24:
   783  00FFAC  09                 	db	9
   784  00FFAD  65                 	db	101	;'e'
   785  00FFAE  72                 	db	114	;'r'
   786  00FFAF  72                 	db	114	;'r'
   787  00FFB0  6F                 	db	111	;'o'
   788  00FFB1  72                 	db	114	;'r'
   789  00FFB2  0A                 	db	10
   790  00FFB3  00                 	db	0
   791  00FFB4                     STR_48:
   792  00FFB4  28                 	db	40
   793  00FFB5  6E                 	db	110	;'n'
   794  00FFB6  75                 	db	117	;'u'
   795  00FFB7  6C                 	db	108	;'l'
   796  00FFB8  6C                 	db	108	;'l'
   797  00FFB9  29                 	db	41
   798  00FFBA  00                 	db	0
   799  00FFBB                     STR_40:
   800  00FFBB  73                 	db	115	;'s'
   801  00FFBC  65                 	db	101	;'e'
   802  00FFBD  63                 	db	99	;'c'
   803  00FFBE  6F                 	db	111	;'o'
   804  00FFBF  6E                 	db	110	;'n'
   805  00FFC0  64                 	db	100	;'d'
   806  00FFC1  00                 	db	0
   807  00FFC2                     STR_38:
   808  00FFC2  6D                 	db	109	;'m'
   809  00FFC3  69                 	db	105	;'i'
   810  00FFC4  6E                 	db	110	;'n'
   811  00FFC5  75                 	db	117	;'u'
   812  00FFC6  74                 	db	116	;'t'
   813  00FFC7  65                 	db	101	;'e'
   814  00FFC8  00                 	db	0
   815  00FFC9                     STR_32:
   816  00FFC9  6D                 	db	109	;'m'
   817  00FFCA  6F                 	db	111	;'o'
   818  00FFCB  6E                 	db	110	;'n'
   819  00FFCC  74                 	db	116	;'t'
   820  00FFCD  68                 	db	104	;'h'
   821  00FFCE  00                 	db	0
   822  00FFCF                     STR_41:
   823  00FFCF  68                 	db	104	;'h'
   824  00FFD0  65                 	db	101	;'e'
   825  00FFD1  6C                 	db	108	;'l'
   826  00FFD2  70                 	db	112	;'p'
   827  00FFD3  00                 	db	0
   828  00FFD4                     STR_30:
   829  00FFD4  79                 	db	121	;'y'
   830  00FFD5  65                 	db	101	;'e'
   831  00FFD6  61                 	db	97	;'a'
   832  00FFD7  72                 	db	114	;'r'
   833  00FFD8  00                 	db	0
   834  00FFD9                     STR_36:
   835  00FFD9  68                 	db	104	;'h'
   836  00FFDA  6F                 	db	111	;'o'
   837  00FFDB  75                 	db	117	;'u'
   838  00FFDC  72                 	db	114	;'r'
   839  00FFDD  00                 	db	0
   840  00FFDE                     STR_1:
   841  00FFDE  25                 	db	37
   842  00FFDF  30                 	db	48	;'0'
   843  00FFE0  32                 	db	50	;'2'
   844  00FFE1  64                 	db	100	;'d'
   845  00FFE2  00                 	db	0
   846  00FFE3                     STR_19:
   847  00FFE3  08                 	db	8
   848  00FFE4  20                 	db	32
   849  00FFE5  08                 	db	8
   850  00FFE6  00                 	db	0
   851  00FFE7                     STR_34:
   852  00FFE7  64                 	db	100	;'d'
   853  00FFE8  61                 	db	97	;'a'
   854  00FFE9  79                 	db	121	;'y'
   855  00FFEA  00                 	db	0
   856  00FFEB                     STR_27:
   857  00FFEB  61                 	db	97	;'a'
   858  00FFEC  74                 	db	116	;'t'
   859  00FFED  00                 	db	0
   860  00FFEE                     STR_42:
   861  00FFEE  3F                 	db	63	;'?'
   862  00FFEF  00                 	db	0
   863  00FFF0                     STR_31:
   864  00FFF0  4D                 	db	77	;'M'
   865  00FFF1  00                 	db	0
   866  00FFF2                     STR_37:
   867  00FFF2  6D                 	db	109	;'m'
   868  00FFF3  00                 	db	0
   869  00FFF4                     STR_39:
   870  00FFF4  73                 	db	115	;'s'
   871  00FFF5  00                 	db	0
   872  00FFF6  28                 	db	40
   873  00FFF7  00                 	db	0
   874  00FFF8                     STR_9:
   875  00FFF8  2D                 	db	45
   876  00FFF9  00                 	db	0
   877  00FFFA                     STR_4:
   878  00FFFA  2F                 	db	47
   879  00FFFB  00                 	db	0
   880  00FFFC                     STR_7:
   881  00FFFC  3A                 	db	58	;':'
   882  00FFFD  00                 	db	0
   883  0000                     
   884                           ; #config settings
   885  00FFFE  00                 	db	0	; dummy byte at the end
   886  0000                     
   887                           	psect	cinit
   888  013872                     __pcinit:
   889                           	opt stack 0
   890  013872                     start_initialization:
   891                           	opt stack 0
   892  013872                     __initialization:
   893                           	opt stack 0
   894                           
   895                           ; Clear objects allocated to BIGRAMl (2000 bytes)
   896  013872  EE04  F0C8         	lfsr	0,__pbssBIGRAMl
   897  013876  EE17 F0D0          	lfsr	1,2000
   898  01387A                     clear_0:
   899  01387A  6AEE               	clrf	postinc0,c
   900  01387C  50E5               	movf	postdec1,w,c
   901  01387E  50E1               	movf	fsr1l,w,c
   902  013880  E1FC               	bnz	clear_0
   903  013882  50E2               	movf	fsr1h,w,c
   904  013884  E1FA               	bnz	clear_0
   905                           
   906                           ; Clear objects allocated to BANK4 (200 bytes)
   907  013886  EE04  F000         	lfsr	0,__pbssBANK4
   908  01388A  0EC8               	movlw	200
   909  01388C                     clear_1:
   910  01388C  6AEE               	clrf	postinc0,c
   911  01388E  06E8               	decf	wreg,f,c
   912  013890  E1FD               	bnz	clear_1
   913                           
   914                           ; Clear objects allocated to BANK3 (200 bytes)
   915  013892  EE03  F000         	lfsr	0,__pbssBANK3
   916  013896  0EC8               	movlw	200
   917  013898                     clear_2:
   918  013898  6AEE               	clrf	postinc0,c
   919  01389A  06E8               	decf	wreg,f,c
   920  01389C  E1FD               	bnz	clear_2
   921                           
   922                           ; Clear objects allocated to BANK2 (228 bytes)
   923  01389E  EE02  F000         	lfsr	0,__pbssBANK2
   924  0138A2  0EE4               	movlw	228
   925  0138A4                     clear_3:
   926  0138A4  6AEE               	clrf	postinc0,c
   927  0138A6  06E8               	decf	wreg,f,c
   928  0138A8  E1FD               	bnz	clear_3
   929                           
   930                           ; Clear objects allocated to BANK1 (124 bytes)
   931  0138AA  EE01  F000         	lfsr	0,__pbssBANK1
   932  0138AE  0E7C               	movlw	124
   933  0138B0                     clear_4:
   934  0138B0  6AEE               	clrf	postinc0,c
   935  0138B2  06E8               	decf	wreg,f,c
   936  0138B4  E1FD               	bnz	clear_4
   937                           
   938                           ; Clear objects allocated to BANK0 (12 bytes)
   939  0138B6  EE00  F0D0         	lfsr	0,__pbssBANK0
   940  0138BA  0E0C               	movlw	12
   941  0138BC                     clear_5:
   942  0138BC  6AEE               	clrf	postinc0,c
   943  0138BE  06E8               	decf	wreg,f,c
   944  0138C0  E1FD               	bnz	clear_5
   945                           
   946                           ; Clear objects allocated to COMRAM (45 bytes)
   947  0138C2  EE00  F001         	lfsr	0,__pbssCOMRAM
   948  0138C6  0E2D               	movlw	45
   949  0138C8                     clear_6:
   950  0138C8  6AEE               	clrf	postinc0,c
   951  0138CA  06E8               	decf	wreg,f,c
   952  0138CC  E1FD               	bnz	clear_6
   953                           
   954                           ; Initialize objects allocated to BANK1 (5 bytes)
   955                           ; load TBLPTR registers with __pidataBANK1
   956  0138CE  0EBA               	movlw	low __pidataBANK1
   957  0138D0  6EF6               	movwf	tblptrl,c
   958  0138D2  0E45               	movlw	high __pidataBANK1
   959  0138D4  6EF7               	movwf	tblptrh,c
   960  0138D6  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   961  0138D8  6EF8               	movwf	tblptru,c
   962  0138DA  EE01  F0E5         	lfsr	0,__pdataBANK1
   963  0138DE  EE10 F005          	lfsr	1,5
   964  0138E2                     copy_data0:
   965  0138E2  0009               	tblrd		*+
   966  0138E4  CFF5 FFEE          	movff	tablat,postinc0
   967  0138E8  50E5               	movf	postdec1,w,c
   968  0138EA  50E1               	movf	fsr1l,w,c
   969  0138EC  E1FA               	bnz	copy_data0
   970  0138EE                     end_of_initialization:
   971                           	opt stack 0
   972  0138EE                     __end_of__initialization:
   973                           	opt stack 0
   974  0138EE  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   975  0138F0  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   976  0138F2  0100               	movlb	0
   977  0138F4  EFB8  F08E         	goto	_main	;jump to C main() function
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           postdec1	equ	0xFE5
   985                           fsr1h	equ	0xFE2
   986                           fsr1l	equ	0xFE1
   987                           
   988                           	psect	bssCOMRAM
   989  000001                     __pbssCOMRAM:
   990                           	opt stack 0
   991  000001                     _outPipes:
   992                           	opt stack 0
   993  000001                     	ds	9
   994  00000A                     _inPipes:
   995                           	opt stack 0
   996  00000A                     	ds	6
   997  000010                     _pBDTEntryIn:
   998                           	opt stack 0
   999  000010                     	ds	6
  1000  000016                     _ep_data_in:
  1001                           	opt stack 0
  1002  000016                     	ds	3
  1003  000019                     _pBDTEntryEP0OutCurrent:
  1004                           	opt stack 0
  1005  000019                     	ds	2
  1006  00001B                     _pBDTEntryEP0OutNext:
  1007                           	opt stack 0
  1008  00001B                     	ds	2
  1009  00001D                     _BothEP0OutUOWNsSet:
  1010                           	opt stack 0
  1011  00001D                     	ds	1
  1012  00001E                     _RemoteWakeup:
  1013                           	opt stack 0
  1014  00001E                     	ds	1
  1015  00001F                     _USBDeferINDataStagePackets:
  1016                           	opt stack 0
  1017  00001F                     	ds	1
  1018  000020                     _USBDeferOUTDataStagePackets:
  1019                           	opt stack 0
  1020  000020                     	ds	1
  1021  000021                     _USBDeferStatusStagePacket:
  1022                           	opt stack 0
  1023  000021                     	ds	1
  1024  000022                     _USBDeviceState:
  1025                           	opt stack 0
  1026  000022                     	ds	1
  1027  000023                     _USBStatusStageEnabledFlag1:
  1028                           	opt stack 0
  1029  000023                     	ds	1
  1030  000024                     _USBStatusStageEnabledFlag2:
  1031                           	opt stack 0
  1032  000024                     	ds	1
  1033  000025                     _USBStatusStageTimeoutCounter:
  1034                           	opt stack 0
  1035  000025                     	ds	1
  1036  000026                     _cdc_mem_type:
  1037                           	opt stack 0
  1038  000026                     	ds	1
  1039  000027                     _cdc_trf_state:
  1040                           	opt stack 0
  1041  000027                     	ds	1
  1042  000028                     _controlTransferState:
  1043                           	opt stack 0
  1044  000028                     	ds	1
  1045  000029                     _endpoint_number:
  1046                           	opt stack 0
  1047  000029                     	ds	1
  1048  00002A                     _i2c_lcd_flag:
  1049                           	opt stack 0
  1050  00002A                     	ds	1
  1051  00002B                     _shortPacketStatus:
  1052                           	opt stack 0
  1053  00002B                     	ds	1
  1054  00002C                     _USBActiveConfiguration:
  1055                           	opt stack 0
  1056  00002C                     	ds	1
  1057  00002D                     _USTATcopy:
  1058                           	opt stack 0
  1059  00002D                     	ds	1
  1060                           tblptru	equ	0xFF8
  1061                           tblptrh	equ	0xFF7
  1062                           tblptrl	equ	0xFF6
  1063                           tablat	equ	0xFF5
  1064                           postinc0	equ	0xFEE
  1065                           wreg	equ	0xFE8
  1066                           postdec1	equ	0xFE5
  1067                           fsr1h	equ	0xFE2
  1068                           fsr1l	equ	0xFE1
  1069                           
  1070                           	psect	bssBANK0
  1071  0000D0                     __pbssBANK0:
  1072                           	opt stack 0
  1073  0000D0                     _CDCDataOutHandle:
  1074                           	opt stack 0
  1075  0000D0                     	ds	2
  1076  0000D2                     _cdc_rx_len:
  1077                           	opt stack 0
  1078  0000D2                     	ds	1
  1079  0000D3                     _cdc_tx_len:
  1080                           	opt stack 0
  1081  0000D3                     	ds	1
  1082  0000D4                     _lcd_tx:
  1083                           	opt stack 0
  1084  0000D4                     	ds	8
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           tblptrl	equ	0xFF6
  1088                           tablat	equ	0xFF5
  1089                           postinc0	equ	0xFEE
  1090                           wreg	equ	0xFE8
  1091                           postdec1	equ	0xFE5
  1092                           fsr1h	equ	0xFE2
  1093                           fsr1l	equ	0xFE1
  1094                           
  1095                           	psect	bssBANK1
  1096  000100                     __pbssBANK1:
  1097                           	opt stack 0
  1098  000100                     _cdc_notice:
  1099                           	opt stack 0
  1100  000100                     	ds	10
  1101  00010A                     _pBDTEntryOut:
  1102                           	opt stack 0
  1103  00010A                     	ds	6
  1104  000110                     _BaudRateGen:
  1105                           	opt stack 0
  1106  000110                     	ds	4
  1107  000114                     _ms:
  1108                           	opt stack 0
  1109  000114                     	ds	4
  1110  000118                     _ep_data_out:
  1111                           	opt stack 0
  1112  000118                     	ds	3
  1113  00011B                     _pCDCDst:
  1114                           	opt stack 0
  1115  00011B                     	ds	3
  1116  00011E                     _pCDCSrc:
  1117                           	opt stack 0
  1118  00011E                     	ds	3
  1119  000121                     I2C_LCD_task@wait:
  1120                           	opt stack 0
  1121  000121                     	ds	2
  1122  000123                     USBCBSendResume@delay_count:
  1123                           	opt stack 0
  1124  000123                     	ds	2
  1125  000125                     _CDCDataInHandle:
  1126                           	opt stack 0
  1127  000125                     	ds	2
  1128  000127                     _pDst:
  1129                           	opt stack 0
  1130  000127                     	ds	2
  1131  000129                     epoch_to_caltime@day_cache:
  1132                           	opt stack 0
  1133  000129                     	ds	2
  1134  00012B                     millis_timer@cnt:
  1135                           	opt stack 0
  1136  00012B                     	ds	2
  1137  00012D                     I2C_LCD_task@i2c_lcd_state:
  1138                           	opt stack 0
  1139  00012D                     	ds	1
  1140  00012E                     RTCC_task@prev_halfsec:
  1141                           	opt stack 0
  1142  00012E                     	ds	1
  1143  00012F                     _USBBusIsSuspended:
  1144                           	opt stack 0
  1145  00012F                     	ds	1
  1146  000130                     _control_signal_bitmap:
  1147                           	opt stack 0
  1148  000130                     	ds	1
  1149  000131                     _i2c_lcd_state:
  1150                           	opt stack 0
  1151  000131                     	ds	1
  1152  000132                     _time_change_flag:
  1153                           	opt stack 0
  1154  000132                     	ds	1
  1155  000133                     epoch_to_caltime@year_cache:
  1156                           	opt stack 0
  1157  000133                     	ds	1
  1158  000134                     terminal_task@command_init:
  1159                           	opt stack 0
  1160  000134                     	ds	1
  1161  000135                     _now:
  1162                           	opt stack 0
  1163  000135                     	ds	14
  1164  000143                     _dummy_encapsulated_cmd_response:
  1165                           	opt stack 0
  1166  000143                     	ds	8
  1167  00014B                     _uart_rx:
  1168                           	opt stack 0
  1169  00014B                     	ds	8
  1170  000153                     _uart_tx:
  1171                           	opt stack 0
  1172  000153                     	ds	8
  1173  00015B                     _usb_rx:
  1174                           	opt stack 0
  1175  00015B                     	ds	8
  1176  000163                     _usb_tx:
  1177                           	opt stack 0
  1178  000163                     	ds	8
  1179  00016B                     terminal_task@command:
  1180                           	opt stack 0
  1181  00016B                     	ds	8
  1182  000173                     _line_coding:
  1183                           	opt stack 0
  1184  000173                     	ds	7
  1185  00017A                     _USBAlternateInterface:
  1186                           	opt stack 0
  1187  00017A                     	ds	2
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           postinc0	equ	0xFEE
  1193                           wreg	equ	0xFE8
  1194                           postdec1	equ	0xFE5
  1195                           fsr1h	equ	0xFE2
  1196                           fsr1l	equ	0xFE1
  1197                           
  1198                           	psect	dataBANK1
  1199  0001E5                     __pdataBANK1:
  1200                           	opt stack 0
  1201  0001E5                     I2C_LCD_SetCursor@F8620:
  1202                           	opt stack 0
  1203  0001E5                     	ds	2
  1204  0001E7                     I2C_LCD_cursor@F8592:
  1205                           	opt stack 0
  1206  0001E7                     	ds	2
  1207  0001E9                     epoch_to_caltime@month_cache:
  1208                           	opt stack 0
  1209  0001E9                     	ds	1
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           postdec1	equ	0xFE5
  1217                           fsr1h	equ	0xFE2
  1218                           fsr1l	equ	0xFE1
  1219                           
  1220                           	psect	bssBANK2
  1221  000200                     __pbssBANK2:
  1222                           	opt stack 0
  1223  000200                     _cdc_data_rx:
  1224                           	opt stack 0
  1225  000200                     	ds	64
  1226  000240                     _cdc_data_tx:
  1227                           	opt stack 0
  1228  000240                     	ds	64
  1229  000280                     terminal_task@op0:
  1230                           	opt stack 0
  1231  000280                     	ds	25
  1232  000299                     terminal_task@op1:
  1233                           	opt stack 0
  1234  000299                     	ds	25
  1235  0002B2                     terminal_task@op2:
  1236                           	opt stack 0
  1237  0002B2                     	ds	25
  1238  0002CB                     terminal_task@op3:
  1239                           	opt stack 0
  1240  0002CB                     	ds	25
  1241                           tblptru	equ	0xFF8
  1242                           tblptrh	equ	0xFF7
  1243                           tblptrl	equ	0xFF6
  1244                           tablat	equ	0xFF5
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           postdec1	equ	0xFE5
  1248                           fsr1h	equ	0xFE2
  1249                           fsr1l	equ	0xFE1
  1250                           
  1251                           	psect	bssBANK3
  1252  000300                     __pbssBANK3:
  1253                           	opt stack 0
  1254  000300                     main_init@uartrx:
  1255                           	opt stack 0
  1256  000300                     	ds	100
  1257  000364                     main_init@usbrx:
  1258                           	opt stack 0
  1259  000364                     	ds	100
  1260                           tblptru	equ	0xFF8
  1261                           tblptrh	equ	0xFF7
  1262                           tblptrl	equ	0xFF6
  1263                           tablat	equ	0xFF5
  1264                           postinc0	equ	0xFEE
  1265                           wreg	equ	0xFE8
  1266                           postdec1	equ	0xFE5
  1267                           fsr1h	equ	0xFE2
  1268                           fsr1l	equ	0xFE1
  1269                           
  1270                           	psect	bssBANK4
  1271  000400                     __pbssBANK4:
  1272                           	opt stack 0
  1273  000400                     I2C_LCD_init@buf:
  1274                           	opt stack 0
  1275  000400                     	ds	200
  1276                           tblptru	equ	0xFF8
  1277                           tblptrh	equ	0xFF7
  1278                           tblptrl	equ	0xFF6
  1279                           tablat	equ	0xFF5
  1280                           postinc0	equ	0xFEE
  1281                           wreg	equ	0xFE8
  1282                           postdec1	equ	0xFE5
  1283                           fsr1h	equ	0xFE2
  1284                           fsr1l	equ	0xFE1
  1285                           
  1286                           	psect	bssBIGRAMl
  1287  0004C8                     __pbssBIGRAMl:
  1288                           	opt stack 0
  1289  0004C8                     main_init@uarttx:
  1290                           	opt stack 0
  1291  0004C8                     	ds	1000
  1292  0008B0                     main_init@usbtx:
  1293                           	opt stack 0
  1294  0008B0                     	ds	1000
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1h	equ	0xFE2
  1303                           fsr1l	equ	0xFE1
  1304                           
  1305                           	psect	cstackBANK3
  1306  0003C8                     __pcstackBANK3:
  1307                           	opt stack 0
  1308  0003C8                     main@s:
  1309                           	opt stack 0
  1310                           
  1311                           ; 40 bytes @ 0x0
  1312  0003C8                     	ds	40
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           tblptrl	equ	0xFF6
  1316                           tablat	equ	0xFF5
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           postdec1	equ	0xFE5
  1320                           fsr1h	equ	0xFE2
  1321                           fsr1l	equ	0xFE1
  1322                           
  1323                           	psect	cstackBANK1
  1324  00017C                     __pcstackBANK1:
  1325                           	opt stack 0
  1326  00017C                     terminal_task@buf:
  1327                           	opt stack 0
  1328                           
  1329                           ; 100 bytes @ 0x0
  1330  00017C                     	ds	100
  1331  0001E0                     _terminal_task$6354:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x64
  1335  0001E0                     	ds	2
  1336  0001E2                     terminal_task@i_4605:
  1337                           	opt stack 0
  1338                           
  1339                           ; 1 bytes @ 0x66
  1340  0001E2                     	ds	1
  1341  0001E3                     terminal_task@ascii:
  1342                           	opt stack 0
  1343                           
  1344                           ; 1 bytes @ 0x67
  1345  0001E3                     	ds	1
  1346  0001E4                     terminal_task@i:
  1347                           	opt stack 0
  1348                           
  1349                           ; 1 bytes @ 0x68
  1350  0001E4                     	ds	1
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           postdec1	equ	0xFE5
  1358                           fsr1h	equ	0xFE2
  1359                           fsr1l	equ	0xFE1
  1360                           
  1361                           	psect	cstackBANK0
  1362  000060                     __pcstackBANK0:
  1363                           	opt stack 0
  1364  000060                     ??_isdigit:
  1365  000060                     ??_timer0_init:
  1366  000060                     ??_timer3_init:
  1367  000060                     ??_x_to_d:
  1368  000060                     ?_ringbuf_num:
  1369                           	opt stack 0
  1370  000060                     ?_strcmp:
  1371                           	opt stack 0
  1372  000060                     ?_USBTransferOnePacket:
  1373                           	opt stack 0
  1374  000060                     ?___wmul:
  1375                           	opt stack 0
  1376  000060                     ?___awdiv:
  1377                           	opt stack 0
  1378  000060                     ?___awmod:
  1379                           	opt stack 0
  1380  000060                     ?___lwdiv:
  1381                           	opt stack 0
  1382  000060                     ?___lldiv:
  1383                           	opt stack 0
  1384  000060                     USBTransferOnePacket@dir:
  1385                           	opt stack 0
  1386  000060                     timer1_init@clock_select:
  1387                           	opt stack 0
  1388  000060                     _is_usb_available$5180:
  1389                           	opt stack 0
  1390  000060                     putUSBUSART@data:
  1391                           	opt stack 0
  1392  000060                     ringbuf_init@rb:
  1393                           	opt stack 0
  1394  000060                     ringbuf_num@rb:
  1395                           	opt stack 0
  1396  000060                     ringbuf_delete@rb:
  1397                           	opt stack 0
  1398  000060                     ___wmul@multiplier:
  1399                           	opt stack 0
  1400  000060                     ___awdiv@dividend:
  1401                           	opt stack 0
  1402  000060                     ___awmod@dividend:
  1403                           	opt stack 0
  1404  000060                     ___lwdiv@dividend:
  1405                           	opt stack 0
  1406  000060                     memset@p1:
  1407                           	opt stack 0
  1408  000060                     strcat@to:
  1409                           	opt stack 0
  1410  000060                     strcmp@s1:
  1411                           	opt stack 0
  1412  000060                     strcpy@to:
  1413                           	opt stack 0
  1414  000060                     ___lldiv@dividend:
  1415                           	opt stack 0
  1416                           
  1417                           ; 4 bytes @ 0x0
  1418  000060                     	ds	1
  1419  000061                     ??_timer1_init:
  1420  000061                     timer0_init@prescaler:
  1421                           	opt stack 0
  1422  000061                     timer3_init@prescaler:
  1423                           	opt stack 0
  1424  000061                     x_to_d@hex:
  1425                           	opt stack 0
  1426  000061                     _isdigit$5795:
  1427                           	opt stack 0
  1428  000061                     USBTransferOnePacket@data:
  1429                           	opt stack 0
  1430                           
  1431                           ; 2 bytes @ 0x1
  1432  000061                     	ds	1
  1433  000062                     ??_ringbuf_num:
  1434  000062                     putUSBUSART@length:
  1435                           	opt stack 0
  1436  000062                     timer1_init@prescaler:
  1437                           	opt stack 0
  1438  000062                     isdigit@c:
  1439                           	opt stack 0
  1440  000062                     ringbuf_init@internal_buf:
  1441                           	opt stack 0
  1442  000062                     RTCC_to_caltime@tm:
  1443                           	opt stack 0
  1444  000062                     ___wmul@multiplicand:
  1445                           	opt stack 0
  1446  000062                     ___awdiv@divisor:
  1447                           	opt stack 0
  1448  000062                     ___awmod@divisor:
  1449                           	opt stack 0
  1450  000062                     ___lwdiv@divisor:
  1451                           	opt stack 0
  1452  000062                     memset@c:
  1453                           	opt stack 0
  1454  000062                     strcat@from:
  1455                           	opt stack 0
  1456  000062                     strcmp@s2:
  1457                           	opt stack 0
  1458  000062                     strcpy@from:
  1459                           	opt stack 0
  1460                           
  1461                           ; 2 bytes @ 0x2
  1462  000062                     	ds	1
  1463  000063                     USBTransferOnePacket@len:
  1464                           	opt stack 0
  1465                           
  1466                           ; 1 bytes @ 0x3
  1467  000063                     	ds	1
  1468  000064                     ??_strcmp:
  1469  000064                     USBTransferOnePacket@ep:
  1470                           	opt stack 0
  1471  000064                     RTCC_to_caltime@dumy:
  1472                           	opt stack 0
  1473  000064                     ___awdiv@counter:
  1474                           	opt stack 0
  1475  000064                     ___awmod@counter:
  1476                           	opt stack 0
  1477  000064                     ___lwdiv@counter:
  1478                           	opt stack 0
  1479  000064                     ringbuf_init@bufsize:
  1480                           	opt stack 0
  1481  000064                     ___wmul@product:
  1482                           	opt stack 0
  1483  000064                     memset@n:
  1484                           	opt stack 0
  1485  000064                     strcat@cp:
  1486                           	opt stack 0
  1487  000064                     strcpy@cp:
  1488                           	opt stack 0
  1489  000064                     ___lldiv@divisor:
  1490                           	opt stack 0
  1491                           
  1492                           ; 4 bytes @ 0x4
  1493  000064                     	ds	1
  1494  000065                     ___awdiv@sign:
  1495                           	opt stack 0
  1496  000065                     ___awmod@sign:
  1497                           	opt stack 0
  1498  000065                     strcmp@r:
  1499                           	opt stack 0
  1500  000065                     USBTransferOnePacket@handle:
  1501                           	opt stack 0
  1502  000065                     ___lwdiv@quotient:
  1503                           	opt stack 0
  1504                           
  1505                           ; 2 bytes @ 0x5
  1506  000065                     	ds	1
  1507  000066                     ?_atoi:
  1508                           	opt stack 0
  1509  000066                     month_length@month:
  1510                           	opt stack 0
  1511  000066                     atoi@s:
  1512                           	opt stack 0
  1513  000066                     ___awdiv@quotient:
  1514                           	opt stack 0
  1515  000066                     memset@p:
  1516                           	opt stack 0
  1517                           
  1518                           ; 2 bytes @ 0x6
  1519  000066                     	ds	1
  1520  000067                     ??_CDCTxService:
  1521  000067                     ??_month_length:
  1522  000067                     ?___lwmod:
  1523                           	opt stack 0
  1524  000067                     getsUSBUSART@buffer:
  1525                           	opt stack 0
  1526  000067                     ___lwmod@dividend:
  1527                           	opt stack 0
  1528                           
  1529                           ; 2 bytes @ 0x7
  1530  000067                     	ds	1
  1531  000068                     ??_atoi:
  1532  000068                     USBDeviceInit@i:
  1533                           	opt stack 0
  1534  000068                     d_to_x@dec:
  1535                           	opt stack 0
  1536  000068                     _CDCTxService$2005:
  1537                           	opt stack 0
  1538  000068                     ringbuf_put@rb:
  1539                           	opt stack 0
  1540  000068                     ringbuf_pop@rb:
  1541                           	opt stack 0
  1542  000068                     ringbuf_backspace@rb:
  1543                           	opt stack 0
  1544  000068                     ___lldiv@quotient:
  1545                           	opt stack 0
  1546                           
  1547                           ; 4 bytes @ 0x8
  1548  000068                     	ds	1
  1549  000069                     getsUSBUSART@len:
  1550                           	opt stack 0
  1551  000069                     caltime_to_RTCC@tm:
  1552                           	opt stack 0
  1553  000069                     ___lwmod@divisor:
  1554                           	opt stack 0
  1555                           
  1556                           ; 2 bytes @ 0x9
  1557  000069                     	ds	1
  1558  00006A                     ??_ringbuf_pop:
  1559  00006A                     ??_getsUSBUSART:
  1560  00006A                     ??_ringbuf_backspace:
  1561  00006A                     CDCTxService@i:
  1562                           	opt stack 0
  1563  00006A                     ringbuf_put@asciicode:
  1564                           	opt stack 0
  1565  00006A                     atoi@sign:
  1566                           	opt stack 0
  1567                           
  1568                           ; 1 bytes @ 0xA
  1569  00006A                     	ds	1
  1570  00006B                     ??_ringbuf_put:
  1571  00006B                     CDCTxService@byte_to_send:
  1572                           	opt stack 0
  1573  00006B                     month_length@year:
  1574                           	opt stack 0
  1575  00006B                     ___lwmod@counter:
  1576                           	opt stack 0
  1577  00006B                     _getsUSBUSART$1957:
  1578                           	opt stack 0
  1579  00006B                     atoi@a:
  1580                           	opt stack 0
  1581                           
  1582                           ; 2 bytes @ 0xB
  1583  00006B                     	ds	1
  1584  00006C                     ?_sprintf:
  1585                           	opt stack 0
  1586  00006C                     ___lldiv@counter:
  1587                           	opt stack 0
  1588  00006C                     put_string_usb@s:
  1589                           	opt stack 0
  1590  00006C                     sprintf@sp:
  1591                           	opt stack 0
  1592                           
  1593                           ; 2 bytes @ 0xC
  1594  00006C                     	ds	1
  1595  00006D                     ?_get_string_usb:
  1596                           	opt stack 0
  1597  00006D                     ?___lmul:
  1598                           	opt stack 0
  1599  00006D                     get_string_usb@s:
  1600                           	opt stack 0
  1601  00006D                     ___lmul@multiplier:
  1602                           	opt stack 0
  1603                           
  1604                           ; 4 bytes @ 0xD
  1605  00006D                     	ds	1
  1606  00006E                     ringbuf_pop@ret:
  1607                           	opt stack 0
  1608  00006E                     put_string_usb@len:
  1609                           	opt stack 0
  1610  00006E                     sprintf@f:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0xE
  1614  00006E                     	ds	1
  1615  00006F                     ??_I2C_LCD_task:
  1616  00006F                     I2C_LCD_command@wait:
  1617                           	opt stack 0
  1618  00006F                     I2C_LCD_put@c:
  1619                           	opt stack 0
  1620  00006F                     ringbuf_put_num@rb:
  1621                           	opt stack 0
  1622  00006F                     ringbuf_put_str@rb:
  1623                           	opt stack 0
  1624  00006F                     get_string_usb@len:
  1625                           	opt stack 0
  1626                           
  1627                           ; 2 bytes @ 0xF
  1628  00006F                     	ds	1
  1629  000070                     I2C_LCD_command@command:
  1630                           	opt stack 0
  1631  000070                     I2C_LCD_puts@s:
  1632                           	opt stack 0
  1633                           
  1634                           ; 2 bytes @ 0x10
  1635  000070                     	ds	1
  1636  000071                     ??_get_string_usb:
  1637  000071                     I2C_LCD_cursor@row:
  1638                           	opt stack 0
  1639  000071                     I2C_LCD_task@data:
  1640                           	opt stack 0
  1641  000071                     ringbuf_put_num@value:
  1642                           	opt stack 0
  1643  000071                     ringbuf_put_str@str:
  1644                           	opt stack 0
  1645  000071                     ___lmul@multiplicand:
  1646                           	opt stack 0
  1647                           
  1648                           ; 4 bytes @ 0x11
  1649  000071                     	ds	1
  1650  000072                     I2C_LCD_cursor@row_offsets:
  1651                           	opt stack 0
  1652  000072                     get_string_usb@rx_len:
  1653                           	opt stack 0
  1654                           
  1655                           ; 2 bytes @ 0x12
  1656  000072                     	ds	1
  1657  000073                     ringbuf_put_num@digits:
  1658                           	opt stack 0
  1659                           
  1660                           ; 1 bytes @ 0x13
  1661  000073                     	ds	1
  1662  000074                     I2C_LCD_cursor@col:
  1663                           	opt stack 0
  1664  000074                     ringbuf_put_num@i:
  1665                           	opt stack 0
  1666  000074                     USB_task@rx_len:
  1667                           	opt stack 0
  1668                           
  1669                           ; 2 bytes @ 0x14
  1670  000074                     	ds	1
  1671  000075                     ringbuf_put_num@temp:
  1672                           	opt stack 0
  1673  000075                     ___lmul@product:
  1674                           	opt stack 0
  1675                           
  1676                           ; 4 bytes @ 0x15
  1677  000075                     	ds	1
  1678  000076                     USB_task@data:
  1679                           	opt stack 0
  1680                           
  1681                           ; 1 bytes @ 0x16
  1682  000076                     	ds	3
  1683  000079                     ?_get_quot_rem:
  1684                           	opt stack 0
  1685  000079                     get_quot_rem@quot:
  1686                           	opt stack 0
  1687  000079                     caltime_to_epoch@tm:
  1688                           	opt stack 0
  1689                           
  1690                           ; 2 bytes @ 0x19
  1691  000079                     	ds	2
  1692  00007B                     ??_caltime_to_epoch:
  1693  00007B                     get_quot_rem@div:
  1694                           	opt stack 0
  1695                           
  1696                           ; 1 bytes @ 0x1B
  1697  00007B                     	ds	2
  1698  00007D                     get_quot_rem@num:
  1699                           	opt stack 0
  1700                           
  1701                           ; 4 bytes @ 0x1D
  1702  00007D                     	ds	1
  1703  00007E                     ??_sprintf:
  1704                           
  1705                           ; 0 bytes @ 0x1E
  1706  00007E                     	ds	1
  1707  00007F                     caltime_to_epoch@year:
  1708                           	opt stack 0
  1709                           
  1710                           ; 1 bytes @ 0x1F
  1711  00007F                     	ds	1
  1712  000080                     caltime_to_epoch@month_3765:
  1713                           	opt stack 0
  1714                           
  1715                           ; 1 bytes @ 0x20
  1716  000080                     	ds	1
  1717  000081                     epoch_to_caltime@tm:
  1718                           	opt stack 0
  1719  000081                     caltime_to_epoch@epoch:
  1720                           	opt stack 0
  1721                           
  1722                           ; 4 bytes @ 0x21
  1723  000081                     	ds	1
  1724  000082                     sprintf@prec:
  1725                           	opt stack 0
  1726                           
  1727                           ; 1 bytes @ 0x22
  1728  000082                     	ds	1
  1729  000083                     ??_epoch_to_caltime:
  1730  000083                     sprintf@ap:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0x23
  1734  000083                     	ds	2
  1735  000085                     caltime_to_epoch@month:
  1736                           	opt stack 0
  1737  000085                     epoch_to_caltime@day_since_epoch:
  1738                           	opt stack 0
  1739  000085                     sprintf@cp:
  1740                           	opt stack 0
  1741                           
  1742                           ; 2 bytes @ 0x25
  1743  000085                     	ds	1
  1744  000086                     RTCC_from_RTCC@tm:
  1745                           	opt stack 0
  1746                           
  1747                           ; 2 bytes @ 0x26
  1748  000086                     	ds	1
  1749  000087                     epoch_to_caltime@day:
  1750                           	opt stack 0
  1751  000087                     sprintf@val:
  1752                           	opt stack 0
  1753                           
  1754                           ; 2 bytes @ 0x27
  1755  000087                     	ds	1
  1756  000088                     
  1757                           ; 0 bytes @ 0x28
  1758  000088                     	ds	1
  1759  000089                     epoch_to_caltime@year:
  1760                           	opt stack 0
  1761  000089                     sprintf@len:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0x29
  1765  000089                     	ds	1
  1766  00008A                     epoch_to_caltime@month:
  1767                           	opt stack 0
  1768                           
  1769                           ; 1 bytes @ 0x2A
  1770  00008A                     	ds	1
  1771  00008B                     sprintf@flag:
  1772                           	opt stack 0
  1773  00008B                     epoch_to_caltime@num:
  1774                           	opt stack 0
  1775                           
  1776                           ; 4 bytes @ 0x2B
  1777  00008B                     	ds	1
  1778  00008C                     sprintf@c:
  1779                           	opt stack 0
  1780                           
  1781                           ; 1 bytes @ 0x2C
  1782  00008C                     	ds	1
  1783  00008D                     sprintf@width:
  1784                           	opt stack 0
  1785                           
  1786                           ; 2 bytes @ 0x2D
  1787  00008D                     	ds	2
  1788  00008F                     RTCC_from_caltime@tm:
  1789                           	opt stack 0
  1790  00008F                     RTCC_from_epoch@tm:
  1791                           	opt stack 0
  1792  00008F                     display_dec@str:
  1793                           	opt stack 0
  1794  00008F                     print_time@tx:
  1795                           	opt stack 0
  1796                           
  1797                           ; 2 bytes @ 0x2F
  1798  00008F                     	ds	2
  1799  000091                     display_dec@dec:
  1800                           	opt stack 0
  1801  000091                     print_time@str:
  1802                           	opt stack 0
  1803                           
  1804                           ; 30 bytes @ 0x31
  1805  000091                     	ds	1
  1806  000092                     display_dec@edit:
  1807                           	opt stack 0
  1808                           
  1809                           ; 1 bytes @ 0x32
  1810  000092                     	ds	1
  1811  000093                     display_dec@s:
  1812                           	opt stack 0
  1813                           
  1814                           ; 4 bytes @ 0x33
  1815  000093                     	ds	4
  1816  000097                     display_time_0802@tm:
  1817                           	opt stack 0
  1818                           
  1819                           ; 2 bytes @ 0x37
  1820  000097                     	ds	2
  1821  000099                     display_time_0802@line0:
  1822                           	opt stack 0
  1823                           
  1824                           ; 2 bytes @ 0x39
  1825  000099                     	ds	2
  1826  00009B                     display_time_0802@line1:
  1827                           	opt stack 0
  1828                           
  1829                           ; 2 bytes @ 0x3B
  1830  00009B                     	ds	2
  1831  00009D                     
  1832                           ; 0 bytes @ 0x3D
  1833  00009D                     	ds	18
  1834  0000AF                     terminal_at_hand@tx:
  1835                           	opt stack 0
  1836                           
  1837                           ; 2 bytes @ 0x4F
  1838  0000AF                     	ds	2
  1839  0000B1                     terminal_at_hand@hand:
  1840                           	opt stack 0
  1841                           
  1842                           ; 2 bytes @ 0x51
  1843  0000B1                     	ds	2
  1844  0000B3                     terminal_at_hand@min:
  1845                           	opt stack 0
  1846                           
  1847                           ; 1 bytes @ 0x53
  1848  0000B3                     	ds	1
  1849  0000B4                     terminal_at_hand@max:
  1850                           	opt stack 0
  1851                           
  1852                           ; 1 bytes @ 0x54
  1853  0000B4                     	ds	1
  1854  0000B5                     terminal_at_hand@value:
  1855                           	opt stack 0
  1856                           
  1857                           ; 1 bytes @ 0x55
  1858  0000B5                     	ds	1
  1859  0000B6                     terminal_time@tx:
  1860                           	opt stack 0
  1861                           
  1862                           ; 2 bytes @ 0x56
  1863  0000B6                     	ds	2
  1864  0000B8                     terminal_time@op0:
  1865                           	opt stack 0
  1866                           
  1867                           ; 2 bytes @ 0x58
  1868  0000B8                     	ds	2
  1869  0000BA                     terminal_time@op1:
  1870                           	opt stack 0
  1871                           
  1872                           ; 2 bytes @ 0x5A
  1873  0000BA                     	ds	2
  1874  0000BC                     terminal_time@op2:
  1875                           	opt stack 0
  1876                           
  1877                           ; 2 bytes @ 0x5C
  1878  0000BC                     	ds	2
  1879  0000BE                     _terminal_time$6355:
  1880                           	opt stack 0
  1881                           
  1882                           ; 1 bytes @ 0x5E
  1883  0000BE                     	ds	1
  1884  0000BF                     terminal_operation@tx:
  1885                           	opt stack 0
  1886                           
  1887                           ; 2 bytes @ 0x5F
  1888  0000BF                     	ds	2
  1889  0000C1                     terminal_operation@op0:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x61
  1893  0000C1                     	ds	2
  1894  0000C3                     terminal_operation@op1:
  1895                           	opt stack 0
  1896                           
  1897                           ; 2 bytes @ 0x63
  1898  0000C3                     	ds	2
  1899  0000C5                     terminal_operation@op2:
  1900                           	opt stack 0
  1901                           
  1902                           ; 2 bytes @ 0x65
  1903  0000C5                     	ds	2
  1904  0000C7                     terminal_operation@op3:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x67
  1908  0000C7                     	ds	2
  1909  0000C9                     terminal_task@tx:
  1910                           	opt stack 0
  1911                           
  1912                           ; 2 bytes @ 0x69
  1913  0000C9                     	ds	2
  1914  0000CB                     terminal_task@rx:
  1915                           	opt stack 0
  1916                           
  1917                           ; 2 bytes @ 0x6B
  1918  0000CB                     	ds	2
  1919  0000CD                     ??_terminal_task:
  1920                           
  1921                           ; 0 bytes @ 0x6D
  1922  0000CD                     	ds	2
  1923  0000CF                     ??_main:
  1924                           
  1925                           ; 0 bytes @ 0x6F
  1926  0000CF                     	ds	1
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           postdec1	equ	0xFE5
  1934                           fsr1h	equ	0xFE2
  1935                           fsr1l	equ	0xFE1
  1936                           
  1937                           	psect	cstackCOMRAM
  1938  00002E                     __pcstackCOMRAM:
  1939                           	opt stack 0
  1940  00002E                     ??_USBStdGetDscHandler:
  1941  00002E                     ??_USBStdGetStatusHandler:
  1942  00002E                     ?i2_USBTransferOnePacket:
  1943                           	opt stack 0
  1944  00002E                     ?i2_ringbuf_num:
  1945                           	opt stack 0
  1946  00002E                     USBConfigureEndpoint@direction:
  1947                           	opt stack 0
  1948  00002E                     USBCtrlTrfTxService@byteToSend:
  1949                           	opt stack 0
  1950  00002E                     USBCtrlTrfRxService@i:
  1951                           	opt stack 0
  1952  00002E                     i2USBTransferOnePacket@dir:
  1953                           	opt stack 0
  1954  00002E                     i2ringbuf_num@rb:
  1955                           	opt stack 0
  1956  00002E                     i2memset@p1:
  1957                           	opt stack 0
  1958                           
  1959                           ; 2 bytes @ 0x0
  1960  00002E                     	ds	1
  1961  00002F                     ??_USBConfigureEndpoint:
  1962  00002F                     USBCtrlTrfRxService@byteToRead:
  1963                           	opt stack 0
  1964  00002F                     USBCtrlTrfInHandler@lastDTS:
  1965                           	opt stack 0
  1966  00002F                     USBStdGetStatusHandler@p:
  1967                           	opt stack 0
  1968  00002F                     i2USBTransferOnePacket@data:
  1969                           	opt stack 0
  1970                           
  1971                           ; 2 bytes @ 0x1
  1972  00002F                     	ds	1
  1973  000030                     ??i2_ringbuf_num:
  1974  000030                     i2memset@c:
  1975                           	opt stack 0
  1976                           
  1977                           ; 2 bytes @ 0x2
  1978  000030                     	ds	1
  1979  000031                     i2USBTransferOnePacket@len:
  1980                           	opt stack 0
  1981                           
  1982                           ; 1 bytes @ 0x3
  1983  000031                     	ds	1
  1984  000032                     i2USBTransferOnePacket@ep:
  1985                           	opt stack 0
  1986  000032                     i2memset@n:
  1987                           	opt stack 0
  1988                           
  1989                           ; 2 bytes @ 0x4
  1990  000032                     	ds	1
  1991  000033                     USBConfigureEndpoint@EPNum:
  1992                           	opt stack 0
  1993  000033                     i2USBTransferOnePacket@handle:
  1994                           	opt stack 0
  1995                           
  1996                           ; 2 bytes @ 0x5
  1997  000033                     	ds	1
  1998  000034                     USBConfigureEndpoint@handle:
  1999                           	opt stack 0
  2000  000034                     i2memset@p:
  2001                           	opt stack 0
  2002                           
  2003                           ; 2 bytes @ 0x6
  2004  000034                     	ds	2
  2005  000036                     USBEnableEndpoint@options:
  2006                           	opt stack 0
  2007  000036                     i2USBDeviceInit@i:
  2008                           	opt stack 0
  2009  000036                     i2ringbuf_put@rb:
  2010                           	opt stack 0
  2011  000036                     i2ringbuf_pop@rb:
  2012                           	opt stack 0
  2013                           
  2014                           ; 2 bytes @ 0x8
  2015  000036                     	ds	1
  2016  000037                     USBEnableEndpoint@p:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0x9
  2020  000037                     	ds	1
  2021  000038                     ??i2_ringbuf_pop:
  2022  000038                     i2ringbuf_put@asciicode:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0xA
  2026  000038                     	ds	1
  2027  000039                     ??i2_ringbuf_put:
  2028  000039                     USBEnableEndpoint@ep:
  2029                           	opt stack 0
  2030                           
  2031                           ; 1 bytes @ 0xB
  2032  000039                     	ds	1
  2033  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2034                           	opt stack 0
  2035                           
  2036                           ; 2 bytes @ 0xC
  2037  00003A                     	ds	2
  2038  00003C                     i2ringbuf_pop@ret:
  2039                           	opt stack 0
  2040  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2041                           	opt stack 0
  2042                           
  2043                           ; 2 bytes @ 0xE
  2044  00003C                     	ds	1
  2045  00003D                     UART_ISR@ascii:
  2046                           	opt stack 0
  2047                           
  2048                           ; 1 bytes @ 0xF
  2049  00003D                     	ds	1
  2050  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2051                           	opt stack 0
  2052                           
  2053                           ; 2 bytes @ 0x10
  2054  00003E                     	ds	2
  2055  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2056                           
  2057                           ; 0 bytes @ 0x12
  2058  000040                     	ds	2
  2059  000042                     ??_USBStdFeatureReqHandler:
  2060  000042                     USBStdSetCfgHandler@i:
  2061                           	opt stack 0
  2062                           
  2063                           ; 1 bytes @ 0x14
  2064  000042                     	ds	1
  2065  000043                     USBStdFeatureReqHandler@pUEP:
  2066                           	opt stack 0
  2067                           
  2068                           ; 2 bytes @ 0x15
  2069  000043                     	ds	2
  2070  000045                     USBStdFeatureReqHandler@current_ep_data:
  2071                           	opt stack 0
  2072                           
  2073                           ; 1 bytes @ 0x17
  2074  000045                     	ds	1
  2075  000046                     USBStdFeatureReqHandler@p:
  2076                           	opt stack 0
  2077                           
  2078                           ; 2 bytes @ 0x18
  2079  000046                     	ds	2
  2080  000048                     ??_USBCtrlEPService:
  2081  000048                     
  2082                           ; 0 bytes @ 0x1A
  2083  000048                     	ds	2
  2084  00004A                     USBCtrlEPService@setup_cnt:
  2085                           	opt stack 0
  2086                           
  2087                           ; 1 bytes @ 0x1C
  2088  00004A                     	ds	1
  2089  00004B                     USBDeviceTasks@i:
  2090                           	opt stack 0
  2091                           
  2092                           ; 1 bytes @ 0x1D
  2093  00004B                     	ds	1
  2094  00004C                     ??_ISR:
  2095                           
  2096                           ; 0 bytes @ 0x1E
  2097  00004C                     	ds	15
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           postinc0	equ	0xFEE
  2103                           wreg	equ	0xFE8
  2104                           postdec1	equ	0xFE5
  2105                           fsr1h	equ	0xFE2
  2106                           fsr1l	equ	0xFE1
  2107                           
  2108 ;;
  2109 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2110 ;;
  2111 ;; *************** function _main *****************
  2112 ;; Defined at:
  2113 ;;		line 107 in file "main.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  s              40    0[BANK3 ] unsigned char [20][2]
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  2  1456[None  ] int 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Locals:         0       0       0       0      40       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Totals:         0       1       0       0      40       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;Total ram usage:       41 bytes
  2132 ;; Hardware stack levels required when called:   20
  2133 ;; This function calls:
  2134 ;;		_I2C_LCD_clear
  2135 ;;		_I2C_LCD_cursor
  2136 ;;		_I2C_LCD_puts
  2137 ;;		_I2C_LCD_task
  2138 ;;		_RTCC_task
  2139 ;;		_UART_task
  2140 ;;		_USB_task
  2141 ;;		_display_time_0802
  2142 ;;		_main_init
  2143 ;;		_terminal_task
  2144 ;; This function is called by:
  2145 ;;		Startup code after reset
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text0
  2150  011D70                     __ptext0:
  2151                           	opt stack 0
  2152  011D70                     _main:
  2153                           	opt stack 11
  2154                           
  2155                           ;main.c: 108: main_init();
  2156                           
  2157                           ;incstack = 0
  2158  011D70  EC1A  F091         	call	_main_init	;wreg free
  2159                           
  2160                           ;main.c: 110: I2C_LCD_clear();
  2161  011D74  ECD3  F0A2         	call	_I2C_LCD_clear	;wreg free
  2162                           
  2163                           ;main.c: 111: I2C_LCD_cursor(0, 0);
  2164  011D78  0E00               	movlw	0
  2165  011D7A  0100               	movlb	0	; () banked
  2166  011D7C  6F71               	movwf	I2C_LCD_cursor@row& (0+255),b
  2167  011D7E  0E00               	movlw	0
  2168  011D80  EC59  F0A1         	call	_I2C_LCD_cursor
  2169                           
  2170                           ;main.c: 112: I2C_LCD_puts("18F27J53");
  2171  011D84  0E7F               	movlw	low STR_46
  2172  011D86  0100               	movlb	0	; () banked
  2173  011D88  6F70               	movwf	I2C_LCD_puts@s& (0+255),b
  2174  011D8A  0EFF               	movlw	high STR_46
  2175  011D8C  0100               	movlb	0	; () banked
  2176  011D8E  6F71               	movwf	(I2C_LCD_puts@s+1)& (0+255),b
  2177  011D90  ECA7  F09F         	call	_I2C_LCD_puts	;wreg free
  2178                           
  2179                           ;main.c: 113: I2C_LCD_cursor(0, 1);
  2180  011D94  0E01               	movlw	1
  2181  011D96  0100               	movlb	0	; () banked
  2182  011D98  6F71               	movwf	I2C_LCD_cursor@row& (0+255),b
  2183  011D9A  0E00               	movlw	0
  2184  011D9C  EC59  F0A1         	call	_I2C_LCD_cursor
  2185                           
  2186                           ;main.c: 114: I2C_LCD_puts("Template");
  2187  011DA0  0E9A               	movlw	low STR_47
  2188  011DA2  0100               	movlb	0	; () banked
  2189  011DA4  6F70               	movwf	I2C_LCD_puts@s& (0+255),b
  2190  011DA6  0EFF               	movlw	high STR_47
  2191  011DA8  0100               	movlb	0	; () banked
  2192  011DAA  6F71               	movwf	(I2C_LCD_puts@s+1)& (0+255),b
  2193  011DAC  ECA7  F09F         	call	_I2C_LCD_puts	;wreg free
  2194  011DB0  D062               	goto	l9768
  2195  011DB2                     l9736:
  2196                           
  2197                           ;main.c: 119: INTCONbits.GIE = 0;
  2198  011DB2  9EF2               	bcf	intcon,7,c	;volatile
  2199                           
  2200                           ;main.c: 120: USB_task();
  2201  011DB4  ECAC  F09B         	call	_USB_task	;wreg free
  2202                           
  2203                           ;main.c: 121: UART_task();
  2204  011DB8  EC6A  F0A2         	call	_UART_task	;wreg free
  2205                           
  2206                           ;main.c: 122: RTCC_task();
  2207  011DBC  EC93  F0A0         	call	_RTCC_task	;wreg free
  2208                           
  2209                           ;main.c: 123: I2C_LCD_task();
  2210  011DC0  ECAE  F08B         	call	_I2C_LCD_task	;wreg free
  2211                           
  2212                           ;main.c: 124: terminal_task(&usb_tx, &usb_rx);
  2213  011DC4  0E63               	movlw	low _usb_tx
  2214  011DC6  0100               	movlb	0	; () banked
  2215  011DC8  6FC9               	movwf	terminal_task@tx& (0+255),b
  2216  011DCA  0E01               	movlw	high _usb_tx
  2217  011DCC  0100               	movlb	0	; () banked
  2218  011DCE  6FCA               	movwf	(terminal_task@tx+1)& (0+255),b
  2219  011DD0  0E5B               	movlw	low _usb_rx
  2220  011DD2  0100               	movlb	0	; () banked
  2221  011DD4  6FCB               	movwf	terminal_task@rx& (0+255),b
  2222  011DD6  0E01               	movlw	high _usb_rx
  2223  011DD8  0100               	movlb	0	; () banked
  2224  011DDA  6FCC               	movwf	(terminal_task@rx+1)& (0+255),b
  2225  011DDC  EC03  F084         	call	_terminal_task	;wreg free
  2226                           
  2227                           ;main.c: 125: INTCONbits.GIE = 1;
  2228  011DE0  8EF2               	bsf	intcon,7,c	;volatile
  2229                           
  2230                           ;main.c: 126: LATAbits.LATA1 = !LATAbits.LATA1;
  2231  011DE2  B289               	btfsc	3977,1,c	;volatile
  2232  011DE4  D004               	goto	u9650
  2233  011DE6  0100               	movlb	0	; () banked
  2234  011DE8  6BCF               	clrf	??_main& (0+255),b
  2235  011DEA  2BCF               	incf	??_main& (0+255),f,b
  2236  011DEC  D002               	goto	u9668
  2237  011DEE                     u9650:
  2238  011DEE  0100               	movlb	0	; () banked
  2239  011DF0  6BCF               	clrf	??_main& (0+255),b
  2240  011DF2                     u9668:
  2241  011DF2  0100               	movlb	0	; () banked
  2242  011DF4  47CF               	rlncf	??_main& (0+255),f,b
  2243  011DF6  5089               	movf	3977,w,c	;volatile
  2244  011DF8  0100               	movlb	0	; () banked
  2245  011DFA  19CF               	xorwf	??_main& (0+255),w,b
  2246  011DFC  0BFD               	andlw	-3
  2247  011DFE  19CF               	xorwf	??_main& (0+255),w,b
  2248  011E00  6E89               	movwf	3977,c	;volatile
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;main.c: 127: INTCONbits.GIE = 0;
  2252  011E02  9EF2               	bcf	intcon,7,c	;volatile
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;main.c: 128: if (time_change_flag) {
  2256  011E04  0101               	movlb	1	; () banked
  2257  011E06  5132               	movf	_time_change_flag& (0+255),w,b
  2258  011E08  B4D8               	btfsc	status,2,c
  2259  011E0A  D035               	goto	l9768
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;main.c: 129: time_change_flag = 0;
  2263  011E0C  0E00               	movlw	0
  2264  011E0E  0101               	movlb	1	; () banked
  2265  011E10  6F32               	movwf	_time_change_flag& (0+255),b
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;main.c: 130: char s[2][20];
  2269                           ;main.c: 131: display_time_0802(&now, s[0], s[1]);
  2270  011E12  0E35               	movlw	low _now
  2271  011E14  0100               	movlb	0	; () banked
  2272  011E16  6F97               	movwf	display_time_0802@tm& (0+255),b
  2273  011E18  0E01               	movlw	high _now
  2274  011E1A  0100               	movlb	0	; () banked
  2275  011E1C  6F98               	movwf	(display_time_0802@tm+1)& (0+255),b
  2276  011E1E  0EC8               	movlw	low main@s
  2277  011E20  0100               	movlb	0	; () banked
  2278  011E22  6F99               	movwf	display_time_0802@line0& (0+255),b
  2279  011E24  0E03               	movlw	high main@s
  2280  011E26  0100               	movlb	0	; () banked
  2281  011E28  6F9A               	movwf	(display_time_0802@line0+1)& (0+255),b
  2282  011E2A  0EDC               	movlw	low (main@s+20)
  2283  011E2C  0100               	movlb	0	; () banked
  2284  011E2E  6F9B               	movwf	display_time_0802@line1& (0+255),b
  2285  011E30  0E03               	movlw	high (main@s+20)
  2286  011E32  0100               	movlb	0	; () banked
  2287  011E34  6F9C               	movwf	(display_time_0802@line1+1)& (0+255),b
  2288  011E36  EC43  F088         	call	_display_time_0802	;wreg free
  2289                           
  2290                           ;main.c: 132: I2C_LCD_clear();
  2291  011E3A  ECD3  F0A2         	call	_I2C_LCD_clear	;wreg free
  2292                           
  2293                           ;main.c: 133: I2C_LCD_cursor(0, 0);
  2294  011E3E  0E00               	movlw	0
  2295  011E40  0100               	movlb	0	; () banked
  2296  011E42  6F71               	movwf	I2C_LCD_cursor@row& (0+255),b
  2297  011E44  0E00               	movlw	0
  2298  011E46  EC59  F0A1         	call	_I2C_LCD_cursor
  2299                           
  2300                           ;main.c: 134: I2C_LCD_puts(s[0]);
  2301  011E4A  0EC8               	movlw	low main@s
  2302  011E4C  0100               	movlb	0	; () banked
  2303  011E4E  6F70               	movwf	I2C_LCD_puts@s& (0+255),b
  2304  011E50  0E03               	movlw	high main@s
  2305  011E52  0100               	movlb	0	; () banked
  2306  011E54  6F71               	movwf	(I2C_LCD_puts@s+1)& (0+255),b
  2307  011E56  ECA7  F09F         	call	_I2C_LCD_puts	;wreg free
  2308                           
  2309                           ;main.c: 135: I2C_LCD_cursor(0, 1);
  2310  011E5A  0E01               	movlw	1
  2311  011E5C  0100               	movlb	0	; () banked
  2312  011E5E  6F71               	movwf	I2C_LCD_cursor@row& (0+255),b
  2313  011E60  0E00               	movlw	0
  2314  011E62  EC59  F0A1         	call	_I2C_LCD_cursor
  2315                           
  2316                           ;main.c: 136: I2C_LCD_puts(s[1]);
  2317  011E66  0EDC               	movlw	low (main@s+20)
  2318  011E68  0100               	movlb	0	; () banked
  2319  011E6A  6F70               	movwf	I2C_LCD_puts@s& (0+255),b
  2320  011E6C  0E03               	movlw	high (main@s+20)
  2321  011E6E  0100               	movlb	0	; () banked
  2322  011E70  6F71               	movwf	(I2C_LCD_puts@s+1)& (0+255),b
  2323  011E72  ECA7  F09F         	call	_I2C_LCD_puts	;wreg free
  2324  011E76                     l9768:
  2325                           
  2326                           ;main.c: 137: }
  2327                           ;main.c: 138: INTCONbits.GIE = 1;
  2328  011E76  8EF2               	bsf	intcon,7,c	;volatile
  2329  011E78  D79C               	goto	l9736
  2330  011E7A                     __end_of_main:
  2331                           	opt stack 0
  2332                           tblptru	equ	0xFF8
  2333                           tblptrh	equ	0xFF7
  2334                           tblptrl	equ	0xFF6
  2335                           tablat	equ	0xFF5
  2336                           intcon	equ	0xFF2
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           postdec1	equ	0xFE5
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           status	equ	0xFD8
  2343                           
  2344 ;; *************** function _terminal_task *****************
  2345 ;; Defined at:
  2346 ;;		line 8 in file "../My_library/My_terminal.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  tx              2  105[BANK0 ] PTR struct ringbuf
  2349 ;;		 -> usb_tx(8), 
  2350 ;;  rx              2  107[BANK0 ] PTR struct ringbuf
  2351 ;;		 -> usb_rx(8), 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  i               1  102[BANK1 ] unsigned char 
  2354 ;;  i               1  104[BANK1 ] unsigned char 
  2355 ;;  ascii           1  103[BANK1 ] unsigned char 
  2356 ;;  buf           100    0[BANK1 ] unsigned char [100]
  2357 ;; Return value:  Size  Location     Type
  2358 ;;		None               void
  2359 ;; Registers used:
  2360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2366 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;      Totals:         0       6     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2370 ;;Total ram usage:      111 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:   19
  2373 ;; This function calls:
  2374 ;;		_ringbuf_backspace
  2375 ;;		_ringbuf_delete
  2376 ;;		_ringbuf_init
  2377 ;;		_ringbuf_num
  2378 ;;		_ringbuf_pop
  2379 ;;		_ringbuf_put
  2380 ;;		_ringbuf_put_num
  2381 ;;		_ringbuf_put_str
  2382 ;;		_terminal_operation
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text1
  2389  010806                     __ptext1:
  2390                           	opt stack 0
  2391  010806                     _terminal_task:
  2392                           	opt stack 11
  2393                           
  2394                           ;My_terminal.c: 9: static ringbuf_t command;
  2395                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2396                           ;My_terminal.c: 11: if (command_init == 0) {
  2397                           
  2398                           ;incstack = 0
  2399  010806  0101               	movlb	1	; () banked
  2400  010808  5134               	movf	terminal_task@command_init& (0+255),w,b
  2401  01080A  0101               	movlb	1	; () banked
  2402  01080C  A4D8               	btfss	status,2,c
  2403  01080E  D016               	goto	l9460
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;My_terminal.c: 12: command_init = 1;
  2407  010810  0E01               	movlw	1
  2408  010812  0101               	movlb	1	; () banked
  2409  010814  6F34               	movwf	terminal_task@command_init& (0+255),b
  2410                           
  2411                           ; BSR set to: 1
  2412                           ;My_terminal.c: 13: char buf[100];
  2413                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2414  010816  0E6B               	movlw	low terminal_task@command
  2415  010818  0100               	movlb	0	; () banked
  2416  01081A  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2417  01081C  0E01               	movlw	high terminal_task@command
  2418  01081E  0100               	movlb	0	; () banked
  2419  010820  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2420  010822  0E7C               	movlw	low terminal_task@buf
  2421  010824  0100               	movlb	0	; () banked
  2422  010826  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2423  010828  0E01               	movlw	high terminal_task@buf
  2424  01082A  0100               	movlb	0	; () banked
  2425  01082C  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2426  01082E  0E00               	movlw	0
  2427  010830  0100               	movlb	0	; () banked
  2428  010832  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2429  010834  0E64               	movlw	100
  2430  010836  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2431  010838  ECD3  F09F         	call	_ringbuf_init	;wreg free
  2432  01083C                     l9460:
  2433                           
  2434                           ;My_terminal.c: 15: }
  2435                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2436  01083C  C0CB  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2437  010840  C0CC  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2438  010844  EC2E  F090         	call	_ringbuf_num	;wreg free
  2439  010848  0100               	movlb	0	; () banked
  2440  01084A  5160               	movf	?_ringbuf_num& (0+255),w,b
  2441  01084C  0100               	movlb	0	; () banked
  2442  01084E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2443  010850  B4D8               	btfsc	status,2,c
  2444  010852  0012               	return	
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2448  010854  C0CB  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2449  010858  C0CC  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2450  01085C  EC26  F096         	call	_ringbuf_pop	;wreg free
  2451  010860  0101               	movlb	1	; () banked
  2452  010862  6FE3               	movwf	terminal_task@ascii& (0+255),b
  2453                           
  2454                           ;My_terminal.c: 18: switch (ascii) {
  2455  010864  D176               	goto	l9524
  2456  010866                     l9464:
  2457                           
  2458                           ; BSR set to: 1
  2459                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2460  010866  0E6B               	movlw	low terminal_task@command
  2461  010868  0100               	movlb	0	; () banked
  2462  01086A  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2463  01086C  0E01               	movlw	high terminal_task@command
  2464  01086E  0100               	movlb	0	; () banked
  2465  010870  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2466  010872  0E00               	movlw	0
  2467  010874  0100               	movlb	0	; () banked
  2468  010876  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2469  010878  EC83  F094         	call	_ringbuf_put	;wreg free
  2470                           
  2471                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2472  01087C  C0C9  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2473  010880  C0CA  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2474  010884  0E09               	movlw	9
  2475  010886  0100               	movlb	0	; () banked
  2476  010888  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2477  01088A  EC83  F094         	call	_ringbuf_put	;wreg free
  2478                           
  2479                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2480  01088E  0E6B               	movlw	low terminal_task@command
  2481  010890  0100               	movlb	0	; () banked
  2482  010892  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2483  010894  0E01               	movlw	high terminal_task@command
  2484  010896  0100               	movlb	0	; () banked
  2485  010898  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2486  01089A  EC2E  F090         	call	_ringbuf_num	;wreg free
  2487  01089E  0EFF               	movlw	255
  2488  0108A0  0100               	movlb	0	; () banked
  2489  0108A2  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2490  0108A4  0101               	movlb	1	; () banked
  2491  0108A6  6FE0               	movwf	_terminal_task$6354& (0+255),b
  2492  0108A8  0EFF               	movlw	255
  2493  0108AA  0100               	movlb	0	; () banked
  2494  0108AC  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2495  0108AE  0101               	movlb	1	; () banked
  2496  0108B0  6FE1               	movwf	(_terminal_task$6354+1)& (0+255),b
  2497                           
  2498                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2499  0108B2  C0C9  F06F         	movff	terminal_task@tx,ringbuf_put_num@rb
  2500  0108B6  C0CA  F070         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2501  0108BA  C1E0  F071         	movff	_terminal_task$6354,ringbuf_put_num@value
  2502  0108BE  C1E1  F072         	movff	_terminal_task$6354+1,ringbuf_put_num@value+1
  2503  0108C2  0E02               	movlw	2
  2504  0108C4  0100               	movlb	0	; () banked
  2505  0108C6  6F73               	movwf	ringbuf_put_num@digits& (0+255),b
  2506  0108C8  EC7C  F09C         	call	_ringbuf_put_num	;wreg free
  2507                           
  2508                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2509  0108CC  C0C9  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2510  0108D0  C0CA  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2511  0108D4  0E0A               	movlw	10
  2512  0108D6  0100               	movlb	0	; () banked
  2513  0108D8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2514  0108DA  EC83  F094         	call	_ringbuf_put	;wreg free
  2515                           
  2516                           ;My_terminal.c: 24: static char op0[25];
  2517                           ;My_terminal.c: 25: static char op1[25];
  2518                           ;My_terminal.c: 26: static char op2[25];
  2519                           ;My_terminal.c: 27: static char op3[25];
  2520                           ;My_terminal.c: 28: uint8_t i;
  2521                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2522  0108DE  0E00               	movlw	0
  2523  0108E0  0101               	movlb	1	; () banked
  2524  0108E2  6FE4               	movwf	terminal_task@i& (0+255),b
  2525  0108E4  D002               	goto	l9470
  2526  0108E6                     l9468:
  2527                           
  2528                           ; BSR set to: 1
  2529  0108E6  0101               	movlb	1	; () banked
  2530  0108E8  2BE4               	incf	terminal_task@i& (0+255),f,b
  2531  0108EA                     l9470:
  2532                           
  2533                           ; BSR set to: 1
  2534  0108EA  0E6B               	movlw	low terminal_task@command
  2535  0108EC  0100               	movlb	0	; () banked
  2536  0108EE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2537  0108F0  0E01               	movlw	high terminal_task@command
  2538  0108F2  0100               	movlb	0	; () banked
  2539  0108F4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2540  0108F6  EC26  F096         	call	_ringbuf_pop	;wreg free
  2541  0108FA  0100               	movlb	0	; () banked
  2542  0108FC  6FCD               	movwf	??_terminal_task& (0+255),b
  2543  0108FE  0101               	movlb	1	; () banked
  2544  010900  51E4               	movf	terminal_task@i& (0+255),w,b
  2545  010902  0D01               	mullw	1
  2546  010904  0E80               	movlw	low terminal_task@op0
  2547  010906  24F3               	addwf	prodl,w,c
  2548  010908  6ED9               	movwf	fsr2l,c
  2549  01090A  0E02               	movlw	high terminal_task@op0
  2550  01090C  20F4               	addwfc	prodh,w,c
  2551  01090E  6EDA               	movwf	fsr2h,c
  2552  010910  C0CD  FFDF         	movff	??_terminal_task,indf2
  2553  010914  50DF               	movf	indf2,w,c
  2554  010916  A4D8               	btfss	status,2,c
  2555  010918  D7E6               	goto	l9468
  2556                           
  2557                           ; BSR set to: 1
  2558                           ;My_terminal.c: 30: op0[i] = '\0';
  2559                           
  2560                           ; BSR set to: 1
  2561  01091A  0101               	movlb	1	; () banked
  2562  01091C  51E4               	movf	terminal_task@i& (0+255),w,b
  2563  01091E  0D01               	mullw	1
  2564  010920  0E80               	movlw	low terminal_task@op0
  2565  010922  24F3               	addwf	prodl,w,c
  2566  010924  6ED9               	movwf	fsr2l,c
  2567  010926  0E02               	movlw	high terminal_task@op0
  2568  010928  20F4               	addwfc	prodh,w,c
  2569  01092A  6EDA               	movwf	fsr2h,c
  2570  01092C  0E00               	movlw	0
  2571  01092E  6EDF               	movwf	indf2,c
  2572                           
  2573                           ; BSR set to: 1
  2574                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2575  010930  0E00               	movlw	0
  2576  010932  0101               	movlb	1	; () banked
  2577  010934  6FE4               	movwf	terminal_task@i& (0+255),b
  2578  010936  D002               	goto	l9478
  2579  010938                     l9476:
  2580                           
  2581                           ; BSR set to: 1
  2582  010938  0101               	movlb	1	; () banked
  2583  01093A  2BE4               	incf	terminal_task@i& (0+255),f,b
  2584  01093C                     l9478:
  2585                           
  2586                           ; BSR set to: 1
  2587  01093C  0E6B               	movlw	low terminal_task@command
  2588  01093E  0100               	movlb	0	; () banked
  2589  010940  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2590  010942  0E01               	movlw	high terminal_task@command
  2591  010944  0100               	movlb	0	; () banked
  2592  010946  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2593  010948  EC26  F096         	call	_ringbuf_pop	;wreg free
  2594  01094C  0100               	movlb	0	; () banked
  2595  01094E  6FCD               	movwf	??_terminal_task& (0+255),b
  2596  010950  0101               	movlb	1	; () banked
  2597  010952  51E4               	movf	terminal_task@i& (0+255),w,b
  2598  010954  0D01               	mullw	1
  2599  010956  0E99               	movlw	low terminal_task@op1
  2600  010958  24F3               	addwf	prodl,w,c
  2601  01095A  6ED9               	movwf	fsr2l,c
  2602  01095C  0E02               	movlw	high terminal_task@op1
  2603  01095E  20F4               	addwfc	prodh,w,c
  2604  010960  6EDA               	movwf	fsr2h,c
  2605  010962  C0CD  FFDF         	movff	??_terminal_task,indf2
  2606  010966  50DF               	movf	indf2,w,c
  2607  010968  A4D8               	btfss	status,2,c
  2608  01096A  D7E6               	goto	l9476
  2609                           
  2610                           ; BSR set to: 1
  2611                           ;My_terminal.c: 32: op1[i] = '\0';
  2612                           
  2613                           ; BSR set to: 1
  2614  01096C  0101               	movlb	1	; () banked
  2615  01096E  51E4               	movf	terminal_task@i& (0+255),w,b
  2616  010970  0D01               	mullw	1
  2617  010972  0E99               	movlw	low terminal_task@op1
  2618  010974  24F3               	addwf	prodl,w,c
  2619  010976  6ED9               	movwf	fsr2l,c
  2620  010978  0E02               	movlw	high terminal_task@op1
  2621  01097A  20F4               	addwfc	prodh,w,c
  2622  01097C  6EDA               	movwf	fsr2h,c
  2623  01097E  0E00               	movlw	0
  2624  010980  6EDF               	movwf	indf2,c
  2625                           
  2626                           ; BSR set to: 1
  2627                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2628  010982  0E00               	movlw	0
  2629  010984  0101               	movlb	1	; () banked
  2630  010986  6FE4               	movwf	terminal_task@i& (0+255),b
  2631  010988  D002               	goto	l9486
  2632  01098A                     l9484:
  2633                           
  2634                           ; BSR set to: 1
  2635  01098A  0101               	movlb	1	; () banked
  2636  01098C  2BE4               	incf	terminal_task@i& (0+255),f,b
  2637  01098E                     l9486:
  2638                           
  2639                           ; BSR set to: 1
  2640  01098E  0E6B               	movlw	low terminal_task@command
  2641  010990  0100               	movlb	0	; () banked
  2642  010992  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2643  010994  0E01               	movlw	high terminal_task@command
  2644  010996  0100               	movlb	0	; () banked
  2645  010998  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2646  01099A  EC26  F096         	call	_ringbuf_pop	;wreg free
  2647  01099E  0100               	movlb	0	; () banked
  2648  0109A0  6FCD               	movwf	??_terminal_task& (0+255),b
  2649  0109A2  0101               	movlb	1	; () banked
  2650  0109A4  51E4               	movf	terminal_task@i& (0+255),w,b
  2651  0109A6  0D01               	mullw	1
  2652  0109A8  0EB2               	movlw	low terminal_task@op2
  2653  0109AA  24F3               	addwf	prodl,w,c
  2654  0109AC  6ED9               	movwf	fsr2l,c
  2655  0109AE  0E02               	movlw	high terminal_task@op2
  2656  0109B0  20F4               	addwfc	prodh,w,c
  2657  0109B2  6EDA               	movwf	fsr2h,c
  2658  0109B4  C0CD  FFDF         	movff	??_terminal_task,indf2
  2659  0109B8  50DF               	movf	indf2,w,c
  2660  0109BA  A4D8               	btfss	status,2,c
  2661  0109BC  D7E6               	goto	l9484
  2662                           
  2663                           ; BSR set to: 1
  2664                           ;My_terminal.c: 34: op2[i] = '\0';
  2665                           
  2666                           ; BSR set to: 1
  2667  0109BE  0101               	movlb	1	; () banked
  2668  0109C0  51E4               	movf	terminal_task@i& (0+255),w,b
  2669  0109C2  0D01               	mullw	1
  2670  0109C4  0EB2               	movlw	low terminal_task@op2
  2671  0109C6  24F3               	addwf	prodl,w,c
  2672  0109C8  6ED9               	movwf	fsr2l,c
  2673  0109CA  0E02               	movlw	high terminal_task@op2
  2674  0109CC  20F4               	addwfc	prodh,w,c
  2675  0109CE  6EDA               	movwf	fsr2h,c
  2676  0109D0  0E00               	movlw	0
  2677  0109D2  6EDF               	movwf	indf2,c
  2678                           
  2679                           ; BSR set to: 1
  2680                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2681  0109D4  0E00               	movlw	0
  2682  0109D6  0101               	movlb	1	; () banked
  2683  0109D8  6FE4               	movwf	terminal_task@i& (0+255),b
  2684  0109DA  D002               	goto	l9494
  2685  0109DC                     l9492:
  2686                           
  2687                           ; BSR set to: 1
  2688  0109DC  0101               	movlb	1	; () banked
  2689  0109DE  2BE4               	incf	terminal_task@i& (0+255),f,b
  2690  0109E0                     l9494:
  2691                           
  2692                           ; BSR set to: 1
  2693  0109E0  0E6B               	movlw	low terminal_task@command
  2694  0109E2  0100               	movlb	0	; () banked
  2695  0109E4  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2696  0109E6  0E01               	movlw	high terminal_task@command
  2697  0109E8  0100               	movlb	0	; () banked
  2698  0109EA  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2699  0109EC  EC26  F096         	call	_ringbuf_pop	;wreg free
  2700  0109F0  0100               	movlb	0	; () banked
  2701  0109F2  6FCD               	movwf	??_terminal_task& (0+255),b
  2702  0109F4  0101               	movlb	1	; () banked
  2703  0109F6  51E4               	movf	terminal_task@i& (0+255),w,b
  2704  0109F8  0D01               	mullw	1
  2705  0109FA  0ECB               	movlw	low terminal_task@op3
  2706  0109FC  24F3               	addwf	prodl,w,c
  2707  0109FE  6ED9               	movwf	fsr2l,c
  2708  010A00  0E02               	movlw	high terminal_task@op3
  2709  010A02  20F4               	addwfc	prodh,w,c
  2710  010A04  6EDA               	movwf	fsr2h,c
  2711  010A06  C0CD  FFDF         	movff	??_terminal_task,indf2
  2712  010A0A  50DF               	movf	indf2,w,c
  2713  010A0C  A4D8               	btfss	status,2,c
  2714  010A0E  D7E6               	goto	l9492
  2715                           
  2716                           ; BSR set to: 1
  2717                           ;My_terminal.c: 36: op3[i] = '\0';
  2718                           
  2719                           ; BSR set to: 1
  2720  010A10  0101               	movlb	1	; () banked
  2721  010A12  51E4               	movf	terminal_task@i& (0+255),w,b
  2722  010A14  0D01               	mullw	1
  2723  010A16  0ECB               	movlw	low terminal_task@op3
  2724  010A18  24F3               	addwf	prodl,w,c
  2725  010A1A  6ED9               	movwf	fsr2l,c
  2726  010A1C  0E02               	movlw	high terminal_task@op3
  2727  010A1E  20F4               	addwfc	prodh,w,c
  2728  010A20  6EDA               	movwf	fsr2h,c
  2729  010A22  0E00               	movlw	0
  2730  010A24  6EDF               	movwf	indf2,c
  2731                           
  2732                           ; BSR set to: 1
  2733                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2734  010A26  C0C9  F0BF         	movff	terminal_task@tx,terminal_operation@tx
  2735  010A2A  C0CA  F0C0         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2736  010A2E  0E80               	movlw	low terminal_task@op0
  2737  010A30  0100               	movlb	0	; () banked
  2738  010A32  6FC1               	movwf	terminal_operation@op0& (0+255),b
  2739  010A34  0E02               	movlw	high terminal_task@op0
  2740  010A36  0100               	movlb	0	; () banked
  2741  010A38  6FC2               	movwf	(terminal_operation@op0+1)& (0+255),b
  2742  010A3A  0E99               	movlw	low terminal_task@op1
  2743  010A3C  0100               	movlb	0	; () banked
  2744  010A3E  6FC3               	movwf	terminal_operation@op1& (0+255),b
  2745  010A40  0E02               	movlw	high terminal_task@op1
  2746  010A42  0100               	movlb	0	; () banked
  2747  010A44  6FC4               	movwf	(terminal_operation@op1+1)& (0+255),b
  2748  010A46  0EB2               	movlw	low terminal_task@op2
  2749  010A48  0100               	movlb	0	; () banked
  2750  010A4A  6FC5               	movwf	terminal_operation@op2& (0+255),b
  2751  010A4C  0E02               	movlw	high terminal_task@op2
  2752  010A4E  0100               	movlb	0	; () banked
  2753  010A50  6FC6               	movwf	(terminal_operation@op2+1)& (0+255),b
  2754  010A52  0ECB               	movlw	low terminal_task@op3
  2755  010A54  0100               	movlb	0	; () banked
  2756  010A56  6FC7               	movwf	terminal_operation@op3& (0+255),b
  2757  010A58  0E02               	movlw	high terminal_task@op3
  2758  010A5A  0100               	movlb	0	; () banked
  2759  010A5C  6FC8               	movwf	(terminal_operation@op3+1)& (0+255),b
  2760  010A5E  ECED  F094         	call	_terminal_operation	;wreg free
  2761                           
  2762                           ;My_terminal.c: 38: break;
  2763  010A62  0012               	return	
  2764  010A64                     l9500:
  2765                           
  2766                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2767  010A64  0E6B               	movlw	low terminal_task@command
  2768  010A66  0100               	movlb	0	; () banked
  2769  010A68  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2770  010A6A  0E01               	movlw	high terminal_task@command
  2771  010A6C  0100               	movlb	0	; () banked
  2772  010A6E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2773  010A70  0E00               	movlw	0
  2774  010A72  0100               	movlb	0	; () banked
  2775  010A74  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2776  010A76  EC83  F094         	call	_ringbuf_put	;wreg free
  2777                           
  2778                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2779  010A7A  C0C9  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2780  010A7E  C0CA  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2781  010A82  0E20               	movlw	32
  2782  010A84  0100               	movlb	0	; () banked
  2783  010A86  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2784  010A88  EC83  F094         	call	_ringbuf_put	;wreg free
  2785                           
  2786                           ;My_terminal.c: 42: break;
  2787  010A8C  0012               	return	
  2788  010A8E                     l9502:
  2789                           
  2790                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2791  010A8E  0E6B               	movlw	low terminal_task@command
  2792  010A90  0100               	movlb	0	; () banked
  2793  010A92  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2794  010A94  0E01               	movlw	high terminal_task@command
  2795  010A96  0100               	movlb	0	; () banked
  2796  010A98  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2797  010A9A  EC65  F09B         	call	_ringbuf_backspace	;wreg free
  2798                           
  2799                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2800  010A9E  C0C9  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2801  010AA2  C0CA  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2802  010AA6  0EE3               	movlw	low STR_19
  2803  010AA8  0100               	movlb	0	; () banked
  2804  010AAA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2805  010AAC  0EFF               	movlw	high STR_19
  2806  010AAE  0100               	movlb	0	; () banked
  2807  010AB0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2808  010AB2  EC87  F09E         	call	_ringbuf_put_str	;wreg free
  2809                           
  2810                           ;My_terminal.c: 46: break;
  2811  010AB6  0012               	return	
  2812  010AB8                     l9506:
  2813                           
  2814                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2815  010AB8  0E00               	movlw	0
  2816  010ABA  0101               	movlb	1	; () banked
  2817  010ABC  6FE2               	movwf	terminal_task@i_4605& (0+255),b
  2818  010ABE  D00E               	goto	l9512
  2819  010AC0                     l9508:
  2820  010AC0  C0C9  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2821  010AC4  C0CA  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2822  010AC8  0EE3               	movlw	low STR_19
  2823  010ACA  0100               	movlb	0	; () banked
  2824  010ACC  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2825  010ACE  0EFF               	movlw	high STR_19
  2826  010AD0  0100               	movlb	0	; () banked
  2827  010AD2  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2828  010AD4  EC87  F09E         	call	_ringbuf_put_str	;wreg free
  2829  010AD8  0101               	movlb	1	; () banked
  2830  010ADA  2BE2               	incf	terminal_task@i_4605& (0+255),f,b
  2831  010ADC                     l9512:
  2832                           
  2833                           ; BSR set to: 1
  2834  010ADC  0E6B               	movlw	low terminal_task@command
  2835  010ADE  0100               	movlb	0	; () banked
  2836  010AE0  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2837  010AE2  0E01               	movlw	high terminal_task@command
  2838  010AE4  0100               	movlb	0	; () banked
  2839  010AE6  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2840  010AE8  EC2E  F090         	call	_ringbuf_num	;wreg free
  2841  010AEC  0101               	movlb	1	; () banked
  2842  010AEE  51E2               	movf	terminal_task@i_4605& (0+255),w,b
  2843  010AF0  0100               	movlb	0	; () banked
  2844  010AF2  6FCD               	movwf	??_terminal_task& (0+255),b
  2845  010AF4  6BCE               	clrf	(??_terminal_task+1)& (0+255),b
  2846  010AF6  0100               	movlb	0	; () banked
  2847  010AF8  5160               	movf	?_ringbuf_num& (0+255),w,b
  2848  010AFA  0100               	movlb	0	; () banked
  2849  010AFC  5DCD               	subwf	??_terminal_task& (0+255),w,b
  2850  010AFE  0100               	movlb	0	; () banked
  2851  010B00  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2852  010B02  0100               	movlb	0	; () banked
  2853  010B04  59CE               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2854  010B06  A0D8               	btfss	status,0,c
  2855  010B08  D7DB               	goto	l9508
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2859                           
  2860                           ; BSR set to: 0
  2861  010B0A  0E6B               	movlw	low terminal_task@command
  2862  010B0C  0100               	movlb	0	; () banked
  2863  010B0E  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2864  010B10  0E01               	movlw	high terminal_task@command
  2865  010B12  0100               	movlb	0	; () banked
  2866  010B14  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2867  010B16  EC36  F0A2         	call	_ringbuf_delete	;wreg free
  2868                           
  2869                           ;My_terminal.c: 50: break;
  2870  010B1A  0012               	return	
  2871  010B1C                     l9516:
  2872                           
  2873                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2874  010B1C  0E1F               	movlw	31
  2875  010B1E  0101               	movlb	1	; () banked
  2876  010B20  65E3               	cpfsgt	terminal_task@ascii& (0+255),b
  2877  010B22  0012               	return	
  2878                           
  2879                           ; BSR set to: 1
  2880  010B24  0E7F               	movlw	127
  2881  010B26  0101               	movlb	1	; () banked
  2882  010B28  61E3               	cpfslt	terminal_task@ascii& (0+255),b
  2883  010B2A  0012               	return	
  2884                           
  2885                           ; BSR set to: 1
  2886                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2887  010B2C  0E6B               	movlw	low terminal_task@command
  2888  010B2E  0100               	movlb	0	; () banked
  2889  010B30  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2890  010B32  0E01               	movlw	high terminal_task@command
  2891  010B34  0100               	movlb	0	; () banked
  2892  010B36  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2893  010B38  C1E3  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2894  010B3C  EC83  F094         	call	_ringbuf_put	;wreg free
  2895                           
  2896                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2897  010B40  C0C9  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2898  010B44  C0CA  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2899  010B48  C1E3  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2900  010B4C  EC83  F094         	call	_ringbuf_put	;wreg free
  2901                           
  2902                           ;My_terminal.c: 57: }
  2903                           
  2904                           ;My_terminal.c: 55: }
  2905                           ;My_terminal.c: 56: break;
  2906  010B50  0012               	return	
  2907  010B52                     l9524:
  2908  010B52  0101               	movlb	1	; () banked
  2909  010B54  51E3               	movf	terminal_task@ascii& (0+255),w,b
  2910                           
  2911                           ; Switch size 1, requested type "space"
  2912                           ; Number of cases is 4, Range of values is 8 to 127
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte           13     7 (average)
  2916                           ;	Chosen strategy is simple_byte
  2917  010B56  0A08               	xorlw	8	; case 8
  2918  010B58  B4D8               	btfsc	status,2,c
  2919  010B5A  D799               	goto	l9502
  2920  010B5C  0A05               	xorlw	5	; case 13
  2921  010B5E  B4D8               	btfsc	status,2,c
  2922  010B60  D682               	goto	l9464
  2923  010B62  0A2D               	xorlw	45	; case 32
  2924  010B64  B4D8               	btfsc	status,2,c
  2925  010B66  D77E               	goto	l9500
  2926  010B68  0A5F               	xorlw	95	; case 127
  2927  010B6A  B4D8               	btfsc	status,2,c
  2928  010B6C  D7A5               	goto	l9506
  2929  010B6E  D7D6               	goto	l9516
  2930  010B70                     __end_of_terminal_task:
  2931                           	opt stack 0
  2932                           tblptru	equ	0xFF8
  2933                           tblptrh	equ	0xFF7
  2934                           tblptrl	equ	0xFF6
  2935                           tablat	equ	0xFF5
  2936                           prodh	equ	0xFF4
  2937                           prodl	equ	0xFF3
  2938                           intcon	equ	0xFF2
  2939                           postinc0	equ	0xFEE
  2940                           wreg	equ	0xFE8
  2941                           postdec1	equ	0xFE5
  2942                           fsr1h	equ	0xFE2
  2943                           fsr1l	equ	0xFE1
  2944                           indf2	equ	0xFDF
  2945                           fsr2h	equ	0xFDA
  2946                           fsr2l	equ	0xFD9
  2947                           status	equ	0xFD8
  2948                           
  2949 ;; *************** function _terminal_operation *****************
  2950 ;; Defined at:
  2951 ;;		line 56 in file "main.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  tx              2   95[BANK0 ] PTR struct ringbuf
  2954 ;;		 -> usb_tx(8), 
  2955 ;;  op0             2   97[BANK0 ] PTR unsigned char 
  2956 ;;		 -> terminal_task@op0(25), 
  2957 ;;  op1             2   99[BANK0 ] PTR unsigned char 
  2958 ;;		 -> terminal_task@op1(25), 
  2959 ;;  op2             2  101[BANK0 ] PTR unsigned char 
  2960 ;;		 -> terminal_task@op2(25), 
  2961 ;;  op3             2  103[BANK0 ] PTR unsigned char 
  2962 ;;		 -> terminal_task@op3(25), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;		None               void
  2967 ;; Registers used:
  2968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2974 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2977 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2978 ;;Total ram usage:       10 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:   18
  2981 ;; This function calls:
  2982 ;;		_ringbuf_put_str
  2983 ;;		_strcmp
  2984 ;;		_terminal_time
  2985 ;; This function is called by:
  2986 ;;		_terminal_task
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text2
  2991  0129DA                     __ptext2:
  2992                           	opt stack 0
  2993  0129DA                     _terminal_operation:
  2994                           	opt stack 11
  2995                           
  2996                           ;main.c: 57: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2997                           
  2998                           ;incstack = 0
  2999  0129DA  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  3000  0129DE  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3001  0129E2  0ECF               	movlw	low STR_41
  3002  0129E4  0100               	movlb	0	; () banked
  3003  0129E6  6F62               	movwf	strcmp@s2& (0+255),b
  3004  0129E8  0EFF               	movlw	high STR_41
  3005  0129EA  0100               	movlb	0	; () banked
  3006  0129EC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3007  0129EE  EC4B  F09F         	call	_strcmp	;wreg free
  3008  0129F2  0100               	movlb	0	; () banked
  3009  0129F4  5160               	movf	?_strcmp& (0+255),w,b
  3010  0129F6  0100               	movlb	0	; () banked
  3011  0129F8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3012  0129FA  B4D8               	btfsc	status,2,c
  3013  0129FC  D012               	goto	l9196
  3014                           
  3015                           ; BSR set to: 0
  3016  0129FE  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  3017  012A02  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3018  012A06  0EEE               	movlw	low STR_42
  3019  012A08  0100               	movlb	0	; () banked
  3020  012A0A  6F62               	movwf	strcmp@s2& (0+255),b
  3021  012A0C  0EFF               	movlw	high STR_42
  3022  012A0E  0100               	movlb	0	; () banked
  3023  012A10  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3024  012A12  EC4B  F09F         	call	_strcmp	;wreg free
  3025  012A16  0100               	movlb	0	; () banked
  3026  012A18  5160               	movf	?_strcmp& (0+255),w,b
  3027  012A1A  0100               	movlb	0	; () banked
  3028  012A1C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3029  012A1E  A4D8               	btfss	status,2,c
  3030  012A20  D00C               	goto	l9198
  3031  012A22                     l9196:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;main.c: 58: ringbuf_put_str(tx,
  3035                           ;main.c: 59: "\t******************************\n"
  3036                           ;main.c: 60: "\t**** PIC18F27J53 template ****\n"
  3037                           ;main.c: 61: "\t**** Made by @Ryokeri14   ****\n"
  3038                           ;main.c: 62: "\t******************************\n\n"
  3039                           ;main.c: 63: "\tprint_time(t)\n"
  3040                           ;main.c: 64: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  3041                           ;main.c: 65: "\n\tfor Developper\n"
  3042                           ;main.c: 66: "\tRESET();\n"
  3043                           ;main.c: 67: "\tbootload\n"
  3044                           ;main.c: 68: );
  3045  012A22  C0BF  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  3046  012A26  C0C0  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  3047  012A2A  0E58               	movlw	low STR_43
  3048  012A2C  0100               	movlb	0	; () banked
  3049  012A2E  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3050  012A30  0EFE               	movlw	high STR_43
  3051  012A32  0100               	movlb	0	; () banked
  3052  012A34  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3053  012A36  EC87  F09E         	call	_ringbuf_put_str	;wreg free
  3054  012A3A                     l9198:
  3055                           
  3056                           ;main.c: 69: }
  3057                           ;main.c: 70: terminal_time(tx, op0, op1, op2);
  3058  012A3A  C0BF  F0B6         	movff	terminal_operation@tx,terminal_time@tx
  3059  012A3E  C0C0  F0B7         	movff	terminal_operation@tx+1,terminal_time@tx+1
  3060  012A42  C0C1  F0B8         	movff	terminal_operation@op0,terminal_time@op0
  3061  012A46  C0C2  F0B9         	movff	terminal_operation@op0+1,terminal_time@op0+1
  3062  012A4A  C0C3  F0BA         	movff	terminal_operation@op1,terminal_time@op1
  3063  012A4E  C0C4  F0BB         	movff	terminal_operation@op1+1,terminal_time@op1+1
  3064  012A52  C0C5  F0BC         	movff	terminal_operation@op2,terminal_time@op2
  3065  012A56  C0C6  F0BD         	movff	terminal_operation@op2+1,terminal_time@op2+1
  3066  012A5A  EC2D  F082         	call	_terminal_time	;wreg free
  3067                           
  3068                           ;main.c: 71: if (!strcmp(op0, "RESET();")) {
  3069  012A5E  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  3070  012A62  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3071  012A66  0E88               	movlw	low STR_44
  3072  012A68  0100               	movlb	0	; () banked
  3073  012A6A  6F62               	movwf	strcmp@s2& (0+255),b
  3074  012A6C  0EFF               	movlw	high STR_44
  3075  012A6E  0100               	movlb	0	; () banked
  3076  012A70  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3077  012A72  EC4B  F09F         	call	_strcmp	;wreg free
  3078  012A76  0100               	movlb	0	; () banked
  3079  012A78  5160               	movf	?_strcmp& (0+255),w,b
  3080  012A7A  0100               	movlb	0	; () banked
  3081  012A7C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3082  012A7E  B4D8               	btfsc	status,2,c
  3083                           
  3084                           ; BSR set to: 0
  3085  012A80  00FF               	reset		;# 
  3086                           
  3087                           ;main.c: 73: }
  3088                           ;main.c: 74: if (!strcmp(op0, "bootload")) {
  3089  012A82  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  3090  012A86  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3091  012A8A  0E91               	movlw	low STR_45
  3092  012A8C  0100               	movlb	0	; () banked
  3093  012A8E  6F62               	movwf	strcmp@s2& (0+255),b
  3094  012A90  0EFF               	movlw	high STR_45
  3095  012A92  0100               	movlb	0	; () banked
  3096  012A94  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3097  012A96  EC4B  F09F         	call	_strcmp	;wreg free
  3098  012A9A  0100               	movlb	0	; () banked
  3099  012A9C  5160               	movf	?_strcmp& (0+255),w,b
  3100  012A9E  0100               	movlb	0	; () banked
  3101  012AA0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3102  012AA2  A4D8               	btfss	status,2,c
  3103  012AA4  0012               	return	
  3104                           
  3105                           ; BSR set to: 0
  3106  012AA6  EF0E F000          	goto	28	;# 
  3107  012AAA  0012               	return	
  3108  012AAC                     __end_of_terminal_operation:
  3109                           	opt stack 0
  3110                           tblptru	equ	0xFF8
  3111                           tblptrh	equ	0xFF7
  3112                           tblptrl	equ	0xFF6
  3113                           tablat	equ	0xFF5
  3114                           prodh	equ	0xFF4
  3115                           prodl	equ	0xFF3
  3116                           intcon	equ	0xFF2
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postdec1	equ	0xFE5
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           indf2	equ	0xFDF
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function _terminal_time *****************
  3128 ;; Defined at:
  3129 ;;		line 93 in file "../My_library/My_terminal.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  tx              2   86[BANK0 ] PTR struct ringbuf
  3132 ;;		 -> usb_tx(8), 
  3133 ;;  op0             2   88[BANK0 ] PTR unsigned char 
  3134 ;;		 -> terminal_task@op0(25), 
  3135 ;;  op1             2   90[BANK0 ] PTR unsigned char 
  3136 ;;		 -> terminal_task@op1(25), 
  3137 ;;  op2             2   92[BANK0 ] PTR unsigned char 
  3138 ;;		 -> terminal_task@op2(25), 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;		None               void
  3143 ;; Registers used:
  3144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3150 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3153 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3154 ;;Total ram usage:        9 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:   17
  3157 ;; This function calls:
  3158 ;;		_atoi
  3159 ;;		_month_length
  3160 ;;		_print_time
  3161 ;;		_strcmp
  3162 ;;		_terminal_at_hand
  3163 ;; This function is called by:
  3164 ;;		_terminal_operation
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text3
  3169  01045A                     __ptext3:
  3170                           	opt stack 0
  3171  01045A                     _terminal_time:
  3172                           	opt stack 11
  3173                           
  3174                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3175                           
  3176                           ;incstack = 0
  3177  01045A  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3178  01045E  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3179  010462  0E74               	movlw	low STR_25
  3180  010464  0100               	movlb	0	; () banked
  3181  010466  6F62               	movwf	strcmp@s2& (0+255),b
  3182  010468  0EFF               	movlw	high STR_25
  3183  01046A  0100               	movlb	0	; () banked
  3184  01046C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3185  01046E  EC4B  F09F         	call	_strcmp	;wreg free
  3186  010472  0100               	movlb	0	; () banked
  3187  010474  5160               	movf	?_strcmp& (0+255),w,b
  3188  010476  0100               	movlb	0	; () banked
  3189  010478  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3190  01047A  B4D8               	btfsc	status,2,c
  3191  01047C  D012               	goto	l8950
  3192                           
  3193                           ; BSR set to: 0
  3194  01047E  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3195  010482  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3196  010486  0EEC               	movlw	low (STR_27+1)
  3197  010488  0100               	movlb	0	; () banked
  3198  01048A  6F62               	movwf	strcmp@s2& (0+255),b
  3199  01048C  0EFF               	movlw	high (STR_27+1)
  3200  01048E  0100               	movlb	0	; () banked
  3201  010490  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3202  010492  EC4B  F09F         	call	_strcmp	;wreg free
  3203  010496  0100               	movlb	0	; () banked
  3204  010498  5160               	movf	?_strcmp& (0+255),w,b
  3205  01049A  0100               	movlb	0	; () banked
  3206  01049C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3207  01049E  A4D8               	btfss	status,2,c
  3208  0104A0  D006               	goto	l8952
  3209  0104A2                     l8950:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;My_terminal.c: 95: print_time(tx);
  3213  0104A2  C0B6  F08F         	movff	terminal_time@tx,print_time@tx
  3214  0104A6  C0B7  F090         	movff	terminal_time@tx+1,print_time@tx+1
  3215  0104AA  ECF3  F09B         	call	_print_time	;wreg free
  3216  0104AE                     l8952:
  3217                           
  3218                           ;My_terminal.c: 96: }
  3219                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3220  0104AE  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3221  0104B2  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3222  0104B6  0EEB               	movlw	low STR_27
  3223  0104B8  0100               	movlb	0	; () banked
  3224  0104BA  6F62               	movwf	strcmp@s2& (0+255),b
  3225  0104BC  0EFF               	movlw	high STR_27
  3226  0104BE  0100               	movlb	0	; () banked
  3227  0104C0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3228  0104C2  EC4B  F09F         	call	_strcmp	;wreg free
  3229  0104C6  0100               	movlb	0	; () banked
  3230  0104C8  5160               	movf	?_strcmp& (0+255),w,b
  3231  0104CA  0100               	movlb	0	; () banked
  3232  0104CC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3233  0104CE  B4D8               	btfsc	status,2,c
  3234  0104D0  D012               	goto	l8956
  3235                           
  3236                           ; BSR set to: 0
  3237  0104D2  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3238  0104D6  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3239  0104DA  0E68               	movlw	low STR_28
  3240  0104DC  0100               	movlb	0	; () banked
  3241  0104DE  6F62               	movwf	strcmp@s2& (0+255),b
  3242  0104E0  0EFF               	movlw	high STR_28
  3243  0104E2  0100               	movlb	0	; () banked
  3244  0104E4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3245  0104E6  EC4B  F09F         	call	_strcmp	;wreg free
  3246  0104EA  0100               	movlb	0	; () banked
  3247  0104EC  5160               	movf	?_strcmp& (0+255),w,b
  3248  0104EE  0100               	movlb	0	; () banked
  3249  0104F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3250  0104F2  A4D8               	btfss	status,2,c
  3251  0104F4  0012               	return	
  3252  0104F6                     l8956:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3256  0104F6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3257  0104FA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3258  0104FE  0EE9               	movlw	low (STR_34+2)
  3259  010500  0100               	movlb	0	; () banked
  3260  010502  6F62               	movwf	strcmp@s2& (0+255),b
  3261  010504  0EFF               	movlw	high (STR_34+2)
  3262  010506  0100               	movlb	0	; () banked
  3263  010508  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3264  01050A  EC4B  F09F         	call	_strcmp	;wreg free
  3265  01050E  0100               	movlb	0	; () banked
  3266  010510  5160               	movf	?_strcmp& (0+255),w,b
  3267  010512  0100               	movlb	0	; () banked
  3268  010514  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3269  010516  B4D8               	btfsc	status,2,c
  3270  010518  D012               	goto	l8960
  3271                           
  3272                           ; BSR set to: 0
  3273  01051A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3274  01051E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3275  010522  0ED4               	movlw	low STR_30
  3276  010524  0100               	movlb	0	; () banked
  3277  010526  6F62               	movwf	strcmp@s2& (0+255),b
  3278  010528  0EFF               	movlw	high STR_30
  3279  01052A  0100               	movlb	0	; () banked
  3280  01052C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3281  01052E  EC4B  F09F         	call	_strcmp	;wreg free
  3282  010532  0100               	movlb	0	; () banked
  3283  010534  5160               	movf	?_strcmp& (0+255),w,b
  3284  010536  0100               	movlb	0	; () banked
  3285  010538  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3286  01053A  A4D8               	btfss	status,2,c
  3287  01053C  D01C               	goto	l8962
  3288  01053E                     l8960:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3292  01053E  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3293  010542  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3294  010546  0E3F               	movlw	low (_now+10)
  3295  010548  0100               	movlb	0	; () banked
  3296  01054A  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3297  01054C  0E01               	movlw	high (_now+10)
  3298  01054E  0100               	movlb	0	; () banked
  3299  010550  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3300  010552  0E00               	movlw	0
  3301  010554  0100               	movlb	0	; () banked
  3302  010556  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3303  010558  0E63               	movlw	99
  3304  01055A  0100               	movlb	0	; () banked
  3305  01055C  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3306  01055E  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3307  010562  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3308  010566  EC3D  F08F         	call	_atoi	;wreg free
  3309  01056A  0100               	movlb	0	; () banked
  3310  01056C  5166               	movf	?_atoi& (0+255),w,b
  3311  01056E  0100               	movlb	0	; () banked
  3312  010570  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3313  010572  ECB9  F09E         	call	_terminal_at_hand	;wreg free
  3314  010576                     l8962:
  3315                           
  3316                           ;My_terminal.c: 100: }
  3317                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3318  010576  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3319  01057A  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3320  01057E  0EF0               	movlw	low STR_31
  3321  010580  0100               	movlb	0	; () banked
  3322  010582  6F62               	movwf	strcmp@s2& (0+255),b
  3323  010584  0EFF               	movlw	high STR_31
  3324  010586  0100               	movlb	0	; () banked
  3325  010588  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3326  01058A  EC4B  F09F         	call	_strcmp	;wreg free
  3327  01058E  0100               	movlb	0	; () banked
  3328  010590  5160               	movf	?_strcmp& (0+255),w,b
  3329  010592  0100               	movlb	0	; () banked
  3330  010594  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3331  010596  B4D8               	btfsc	status,2,c
  3332  010598  D012               	goto	l8966
  3333                           
  3334                           ; BSR set to: 0
  3335  01059A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3336  01059E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3337  0105A2  0EC9               	movlw	low STR_32
  3338  0105A4  0100               	movlb	0	; () banked
  3339  0105A6  6F62               	movwf	strcmp@s2& (0+255),b
  3340  0105A8  0EFF               	movlw	high STR_32
  3341  0105AA  0100               	movlb	0	; () banked
  3342  0105AC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3343  0105AE  EC4B  F09F         	call	_strcmp	;wreg free
  3344  0105B2  0100               	movlb	0	; () banked
  3345  0105B4  5160               	movf	?_strcmp& (0+255),w,b
  3346  0105B6  0100               	movlb	0	; () banked
  3347  0105B8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3348  0105BA  A4D8               	btfss	status,2,c
  3349  0105BC  D01C               	goto	l8968
  3350  0105BE                     l8966:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3354  0105BE  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3355  0105C2  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3356  0105C6  0E3E               	movlw	low (_now+9)
  3357  0105C8  0100               	movlb	0	; () banked
  3358  0105CA  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3359  0105CC  0E01               	movlw	high (_now+9)
  3360  0105CE  0100               	movlb	0	; () banked
  3361  0105D0  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3362  0105D2  0E01               	movlw	1
  3363  0105D4  0100               	movlb	0	; () banked
  3364  0105D6  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3365  0105D8  0E0C               	movlw	12
  3366  0105DA  0100               	movlb	0	; () banked
  3367  0105DC  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3368  0105DE  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3369  0105E2  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3370  0105E6  EC3D  F08F         	call	_atoi	;wreg free
  3371  0105EA  0100               	movlb	0	; () banked
  3372  0105EC  5166               	movf	?_atoi& (0+255),w,b
  3373  0105EE  0100               	movlb	0	; () banked
  3374  0105F0  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3375  0105F2  ECB9  F09E         	call	_terminal_at_hand	;wreg free
  3376  0105F6                     l8968:
  3377                           
  3378                           ;My_terminal.c: 103: }
  3379                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3380  0105F6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3381  0105FA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3382  0105FE  0EE1               	movlw	low (STR_1+3)
  3383  010600  0100               	movlb	0	; () banked
  3384  010602  6F62               	movwf	strcmp@s2& (0+255),b
  3385  010604  0EFF               	movlw	high (STR_1+3)
  3386  010606  0100               	movlb	0	; () banked
  3387  010608  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3388  01060A  EC4B  F09F         	call	_strcmp	;wreg free
  3389  01060E  0100               	movlb	0	; () banked
  3390  010610  5160               	movf	?_strcmp& (0+255),w,b
  3391  010612  0100               	movlb	0	; () banked
  3392  010614  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3393  010616  B4D8               	btfsc	status,2,c
  3394  010618  D012               	goto	l8972
  3395                           
  3396                           ; BSR set to: 0
  3397  01061A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3398  01061E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3399  010622  0EE7               	movlw	low STR_34
  3400  010624  0100               	movlb	0	; () banked
  3401  010626  6F62               	movwf	strcmp@s2& (0+255),b
  3402  010628  0EFF               	movlw	high STR_34
  3403  01062A  0100               	movlb	0	; () banked
  3404  01062C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3405  01062E  EC4B  F09F         	call	_strcmp	;wreg free
  3406  010632  0100               	movlb	0	; () banked
  3407  010634  5160               	movf	?_strcmp& (0+255),w,b
  3408  010636  0100               	movlb	0	; () banked
  3409  010638  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3410  01063A  A4D8               	btfss	status,2,c
  3411  01063C  D023               	goto	l8976
  3412  01063E                     l8972:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3416  01063E  C13E  F066         	movff	_now+9,month_length@month
  3417  010642  0101               	movlb	1	; () banked
  3418  010644  513F               	movf	(_now+10)& (0+255),w,b
  3419  010646  ECF8  F091         	call	_month_length
  3420  01064A  0100               	movlb	0	; () banked
  3421  01064C  6FBE               	movwf	_terminal_time$6355& (0+255),b
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3425  01064E  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3426  010652  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3427  010656  0E3D               	movlw	low (_now+8)
  3428  010658  0100               	movlb	0	; () banked
  3429  01065A  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3430  01065C  0E01               	movlw	high (_now+8)
  3431  01065E  0100               	movlb	0	; () banked
  3432  010660  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3433  010662  0E01               	movlw	1
  3434  010664  0100               	movlb	0	; () banked
  3435  010666  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3436  010668  C0BE  F0B4         	movff	_terminal_time$6355,terminal_at_hand@max
  3437  01066C  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3438  010670  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3439  010674  EC3D  F08F         	call	_atoi	;wreg free
  3440  010678  0100               	movlb	0	; () banked
  3441  01067A  5166               	movf	?_atoi& (0+255),w,b
  3442  01067C  0100               	movlb	0	; () banked
  3443  01067E  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3444  010680  ECB9  F09E         	call	_terminal_at_hand	;wreg free
  3445  010684                     l8976:
  3446                           
  3447                           ;My_terminal.c: 106: }
  3448                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3449  010684  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3450  010688  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3451  01068C  0ECD               	movlw	low (STR_32+4)
  3452  01068E  0100               	movlb	0	; () banked
  3453  010690  6F62               	movwf	strcmp@s2& (0+255),b
  3454  010692  0EFF               	movlw	high (STR_32+4)
  3455  010694  0100               	movlb	0	; () banked
  3456  010696  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3457  010698  EC4B  F09F         	call	_strcmp	;wreg free
  3458  01069C  0100               	movlb	0	; () banked
  3459  01069E  5160               	movf	?_strcmp& (0+255),w,b
  3460  0106A0  0100               	movlb	0	; () banked
  3461  0106A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3462  0106A4  B4D8               	btfsc	status,2,c
  3463  0106A6  D012               	goto	l8980
  3464                           
  3465                           ; BSR set to: 0
  3466  0106A8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3467  0106AC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3468  0106B0  0ED9               	movlw	low STR_36
  3469  0106B2  0100               	movlb	0	; () banked
  3470  0106B4  6F62               	movwf	strcmp@s2& (0+255),b
  3471  0106B6  0EFF               	movlw	high STR_36
  3472  0106B8  0100               	movlb	0	; () banked
  3473  0106BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3474  0106BC  EC4B  F09F         	call	_strcmp	;wreg free
  3475  0106C0  0100               	movlb	0	; () banked
  3476  0106C2  5160               	movf	?_strcmp& (0+255),w,b
  3477  0106C4  0100               	movlb	0	; () banked
  3478  0106C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3479  0106C8  A4D8               	btfss	status,2,c
  3480  0106CA  D01C               	goto	l8982
  3481  0106CC                     l8980:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3485  0106CC  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3486  0106D0  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3487  0106D4  0E3B               	movlw	low (_now+6)
  3488  0106D6  0100               	movlb	0	; () banked
  3489  0106D8  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3490  0106DA  0E01               	movlw	high (_now+6)
  3491  0106DC  0100               	movlb	0	; () banked
  3492  0106DE  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3493  0106E0  0E00               	movlw	0
  3494  0106E2  0100               	movlb	0	; () banked
  3495  0106E4  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3496  0106E6  0E17               	movlw	23
  3497  0106E8  0100               	movlb	0	; () banked
  3498  0106EA  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3499  0106EC  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3500  0106F0  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3501  0106F4  EC3D  F08F         	call	_atoi	;wreg free
  3502  0106F8  0100               	movlb	0	; () banked
  3503  0106FA  5166               	movf	?_atoi& (0+255),w,b
  3504  0106FC  0100               	movlb	0	; () banked
  3505  0106FE  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3506  010700  ECB9  F09E         	call	_terminal_at_hand	;wreg free
  3507  010704                     l8982:
  3508                           
  3509                           ;My_terminal.c: 109: }
  3510                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3511  010704  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3512  010708  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3513  01070C  0EF2               	movlw	low STR_37
  3514  01070E  0100               	movlb	0	; () banked
  3515  010710  6F62               	movwf	strcmp@s2& (0+255),b
  3516  010712  0EFF               	movlw	high STR_37
  3517  010714  0100               	movlb	0	; () banked
  3518  010716  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3519  010718  EC4B  F09F         	call	_strcmp	;wreg free
  3520  01071C  0100               	movlb	0	; () banked
  3521  01071E  5160               	movf	?_strcmp& (0+255),w,b
  3522  010720  0100               	movlb	0	; () banked
  3523  010722  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3524  010724  B4D8               	btfsc	status,2,c
  3525  010726  D012               	goto	l8986
  3526                           
  3527                           ; BSR set to: 0
  3528  010728  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3529  01072C  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3530  010730  0EC2               	movlw	low STR_38
  3531  010732  0100               	movlb	0	; () banked
  3532  010734  6F62               	movwf	strcmp@s2& (0+255),b
  3533  010736  0EFF               	movlw	high STR_38
  3534  010738  0100               	movlb	0	; () banked
  3535  01073A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3536  01073C  EC4B  F09F         	call	_strcmp	;wreg free
  3537  010740  0100               	movlb	0	; () banked
  3538  010742  5160               	movf	?_strcmp& (0+255),w,b
  3539  010744  0100               	movlb	0	; () banked
  3540  010746  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3541  010748  A4D8               	btfss	status,2,c
  3542  01074A  D01C               	goto	l8988
  3543  01074C                     l8986:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3547  01074C  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3548  010750  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3549  010754  0E3A               	movlw	low (_now+5)
  3550  010756  0100               	movlb	0	; () banked
  3551  010758  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3552  01075A  0E01               	movlw	high (_now+5)
  3553  01075C  0100               	movlb	0	; () banked
  3554  01075E  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3555  010760  0E00               	movlw	0
  3556  010762  0100               	movlb	0	; () banked
  3557  010764  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3558  010766  0E3B               	movlw	59
  3559  010768  0100               	movlb	0	; () banked
  3560  01076A  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3561  01076C  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3562  010770  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3563  010774  EC3D  F08F         	call	_atoi	;wreg free
  3564  010778  0100               	movlb	0	; () banked
  3565  01077A  5166               	movf	?_atoi& (0+255),w,b
  3566  01077C  0100               	movlb	0	; () banked
  3567  01077E  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3568  010780  ECB9  F09E         	call	_terminal_at_hand	;wreg free
  3569  010784                     l8988:
  3570                           
  3571                           ;My_terminal.c: 112: }
  3572                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  3573  010784  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3574  010788  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3575  01078C  0EF4               	movlw	low STR_39
  3576  01078E  0100               	movlb	0	; () banked
  3577  010790  6F62               	movwf	strcmp@s2& (0+255),b
  3578  010792  0EFF               	movlw	high STR_39
  3579  010794  0100               	movlb	0	; () banked
  3580  010796  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3581  010798  EC4B  F09F         	call	_strcmp	;wreg free
  3582  01079C  0100               	movlb	0	; () banked
  3583  01079E  5160               	movf	?_strcmp& (0+255),w,b
  3584  0107A0  0100               	movlb	0	; () banked
  3585  0107A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3586  0107A4  B4D8               	btfsc	status,2,c
  3587  0107A6  D012               	goto	l8992
  3588                           
  3589                           ; BSR set to: 0
  3590  0107A8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3591  0107AC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3592  0107B0  0EBB               	movlw	low STR_40
  3593  0107B2  0100               	movlb	0	; () banked
  3594  0107B4  6F62               	movwf	strcmp@s2& (0+255),b
  3595  0107B6  0EFF               	movlw	high STR_40
  3596  0107B8  0100               	movlb	0	; () banked
  3597  0107BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3598  0107BC  EC4B  F09F         	call	_strcmp	;wreg free
  3599  0107C0  0100               	movlb	0	; () banked
  3600  0107C2  5160               	movf	?_strcmp& (0+255),w,b
  3601  0107C4  0100               	movlb	0	; () banked
  3602  0107C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3603  0107C8  A4D8               	btfss	status,2,c
  3604  0107CA  0012               	return	
  3605  0107CC                     l8992:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  3609  0107CC  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3610  0107D0  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3611  0107D4  0E39               	movlw	low (_now+4)
  3612  0107D6  0100               	movlb	0	; () banked
  3613  0107D8  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3614  0107DA  0E01               	movlw	high (_now+4)
  3615  0107DC  0100               	movlb	0	; () banked
  3616  0107DE  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3617  0107E0  0E00               	movlw	0
  3618  0107E2  0100               	movlb	0	; () banked
  3619  0107E4  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3620  0107E6  0E3B               	movlw	59
  3621  0107E8  0100               	movlb	0	; () banked
  3622  0107EA  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3623  0107EC  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3624  0107F0  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3625  0107F4  EC3D  F08F         	call	_atoi	;wreg free
  3626  0107F8  0100               	movlb	0	; () banked
  3627  0107FA  5166               	movf	?_atoi& (0+255),w,b
  3628  0107FC  0100               	movlb	0	; () banked
  3629  0107FE  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3630  010800  ECB9  F09E         	call	_terminal_at_hand	;wreg free
  3631  010804  0012               	return	
  3632  010806                     __end_of_terminal_time:
  3633                           	opt stack 0
  3634                           tblptru	equ	0xFF8
  3635                           tblptrh	equ	0xFF7
  3636                           tblptrl	equ	0xFF6
  3637                           tablat	equ	0xFF5
  3638                           prodh	equ	0xFF4
  3639                           prodl	equ	0xFF3
  3640                           intcon	equ	0xFF2
  3641                           postinc0	equ	0xFEE
  3642                           wreg	equ	0xFE8
  3643                           postdec1	equ	0xFE5
  3644                           fsr1h	equ	0xFE2
  3645                           fsr1l	equ	0xFE1
  3646                           indf2	equ	0xFDF
  3647                           fsr2h	equ	0xFDA
  3648                           fsr2l	equ	0xFD9
  3649                           status	equ	0xFD8
  3650                           
  3651 ;; *************** function _terminal_at_hand *****************
  3652 ;; Defined at:
  3653 ;;		line 82 in file "../My_library/My_terminal.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  tx              2   79[BANK0 ] PTR struct ringbuf
  3656 ;;		 -> usb_tx(8), 
  3657 ;;  hand            2   81[BANK0 ] PTR unsigned char 
  3658 ;;		 -> now(14), 
  3659 ;;  min             1   83[BANK0 ] unsigned char 
  3660 ;;  max             1   84[BANK0 ] unsigned char 
  3661 ;;  value           1   85[BANK0 ] unsigned char 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;		None               void
  3666 ;; Registers used:
  3667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3673 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;Total ram usage:        7 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:   16
  3680 ;; This function calls:
  3681 ;;		_RTCC_from_caltime
  3682 ;;		_print_time
  3683 ;;		_ringbuf_put_str
  3684 ;; This function is called by:
  3685 ;;		_terminal_time
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text4
  3690  013D72                     __ptext4:
  3691                           	opt stack 0
  3692  013D72                     _terminal_at_hand:
  3693                           	opt stack 11
  3694                           
  3695                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  3696                           
  3697                           ;incstack = 0
  3698  013D72  0100               	movlb	0	; () banked
  3699  013D74  51B3               	movf	terminal_at_hand@min& (0+255),w,b
  3700  013D76  0100               	movlb	0	; () banked
  3701  013D78  5DB5               	subwf	terminal_at_hand@value& (0+255),w,b
  3702  013D7A  A0D8               	btfss	status,0,c
  3703  013D7C  D01E               	goto	l8686
  3704                           
  3705                           ; BSR set to: 0
  3706  013D7E  0100               	movlb	0	; () banked
  3707  013D80  51B5               	movf	terminal_at_hand@value& (0+255),w,b
  3708  013D82  0100               	movlb	0	; () banked
  3709  013D84  5DB4               	subwf	terminal_at_hand@max& (0+255),w,b
  3710  013D86  A0D8               	btfss	status,0,c
  3711  013D88  D018               	goto	l8686
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;My_terminal.c: 84: *hand = value;
  3715  013D8A  C0B1  FFD9         	movff	terminal_at_hand@hand,fsr2l
  3716  013D8E  C0B2  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  3717  013D92  C0B5  FFDF         	movff	terminal_at_hand@value,indf2
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  3721  013D96  0E35               	movlw	low _now
  3722  013D98  0100               	movlb	0	; () banked
  3723  013D9A  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  3724  013D9C  0E01               	movlw	high _now
  3725  013D9E  0100               	movlb	0	; () banked
  3726  013DA0  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  3727  013DA2  EC23  F0A2         	call	_RTCC_from_caltime	;wreg free
  3728                           
  3729                           ;My_terminal.c: 86: time_change_flag = 1;
  3730  013DA6  0E01               	movlw	1
  3731  013DA8  0101               	movlb	1	; () banked
  3732  013DAA  6F32               	movwf	_time_change_flag& (0+255),b
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;My_terminal.c: 87: print_time(tx);
  3736  013DAC  C0AF  F08F         	movff	terminal_at_hand@tx,print_time@tx
  3737  013DB0  C0B0  F090         	movff	terminal_at_hand@tx+1,print_time@tx+1
  3738  013DB4  ECF3  F09B         	call	_print_time	;wreg free
  3739                           
  3740                           ;My_terminal.c: 88: } else {
  3741  013DB8  0012               	return	
  3742  013DBA                     l8686:
  3743                           
  3744                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  3745  013DBA  C0AF  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  3746  013DBE  C0B0  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  3747  013DC2  0EAC               	movlw	low STR_24
  3748  013DC4  0100               	movlb	0	; () banked
  3749  013DC6  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3750  013DC8  0EFF               	movlw	high STR_24
  3751  013DCA  0100               	movlb	0	; () banked
  3752  013DCC  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3753  013DCE  EC87  F09E         	call	_ringbuf_put_str	;wreg free
  3754  013DD2  0012               	return	
  3755  013DD4                     __end_of_terminal_at_hand:
  3756                           	opt stack 0
  3757                           tblptru	equ	0xFF8
  3758                           tblptrh	equ	0xFF7
  3759                           tblptrl	equ	0xFF6
  3760                           tablat	equ	0xFF5
  3761                           prodh	equ	0xFF4
  3762                           prodl	equ	0xFF3
  3763                           intcon	equ	0xFF2
  3764                           postinc0	equ	0xFEE
  3765                           wreg	equ	0xFE8
  3766                           postdec1	equ	0xFE5
  3767                           fsr1h	equ	0xFE2
  3768                           fsr1l	equ	0xFE1
  3769                           indf2	equ	0xFDF
  3770                           fsr2h	equ	0xFDA
  3771                           fsr2l	equ	0xFD9
  3772                           status	equ	0xFD8
  3773                           
  3774 ;; *************** function _print_time *****************
  3775 ;; Defined at:
  3776 ;;		line 68 in file "../My_library/My_terminal.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  tx              2   47[BANK0 ] PTR struct ringbuf
  3779 ;;		 -> usb_tx(8), 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  str            30   49[BANK0 ] unsigned char [30]
  3782 ;; Return value:  Size  Location     Type
  3783 ;;		None               void
  3784 ;; Registers used:
  3785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3792 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3794 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3795 ;;Total ram usage:       32 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:   15
  3798 ;; This function calls:
  3799 ;;		_RTCC_from_RTCC
  3800 ;;		_ringbuf_put_str
  3801 ;;		_sprintf
  3802 ;; This function is called by:
  3803 ;;		_terminal_at_hand
  3804 ;;		_terminal_time
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text5
  3809  0137E6                     __ptext5:
  3810                           	opt stack 0
  3811  0137E6                     _print_time:
  3812                           	opt stack 11
  3813                           
  3814                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  3815                           
  3816                           ;incstack = 0
  3817  0137E6  0E35               	movlw	low _now
  3818  0137E8  0100               	movlb	0	; () banked
  3819  0137EA  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3820  0137EC  0E01               	movlw	high _now
  3821  0137EE  0100               	movlb	0	; () banked
  3822  0137F0  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3823  0137F2  ECB3  F0A2         	call	_RTCC_from_RTCC	;wreg free
  3824                           
  3825                           ;My_terminal.c: 70: char str[30];
  3826                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  3827                           ;My_terminal.c: 72: now.YY,
  3828                           ;My_terminal.c: 73: now.MM,
  3829                           ;My_terminal.c: 74: now.DD,
  3830                           ;My_terminal.c: 75: weekday_3char[now.EE],
  3831                           ;My_terminal.c: 76: now.hh,
  3832                           ;My_terminal.c: 77: now.mm,
  3833                           ;My_terminal.c: 78: now.ss);
  3834  0137F6  0E91               	movlw	low print_time@str
  3835  0137F8  0100               	movlb	0	; () banked
  3836  0137FA  6F6C               	movwf	sprintf@sp& (0+255),b
  3837  0137FC  0E00               	movlw	high print_time@str
  3838  0137FE  0100               	movlb	0	; () banked
  3839  013800  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3840  013802  0E43               	movlw	low STR_23
  3841  013804  0100               	movlb	0	; () banked
  3842  013806  6F6E               	movwf	sprintf@f& (0+255),b
  3843  013808  0EFF               	movlw	high STR_23
  3844  01380A  0100               	movlb	0	; () banked
  3845  01380C  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3846  01380E  C13F  F070         	movff	_now+10,?_sprintf+4
  3847  013812  0100               	movlb	0	; () banked
  3848  013814  6B71               	clrf	(?_sprintf+5)& (0+255),b
  3849  013816  C13E  F072         	movff	_now+9,?_sprintf+6
  3850  01381A  0100               	movlb	0	; () banked
  3851  01381C  6B73               	clrf	(?_sprintf+7)& (0+255),b
  3852  01381E  C13D  F074         	movff	_now+8,?_sprintf+8
  3853  013822  0100               	movlb	0	; () banked
  3854  013824  6B75               	clrf	(?_sprintf+9)& (0+255),b
  3855  013826  0101               	movlb	1	; () banked
  3856  013828  513C               	movf	(_now+7)& (0+255),w,b
  3857  01382A  0D04               	mullw	4
  3858  01382C  0E26               	movlw	low _weekday_3char
  3859  01382E  24F3               	addwf	prodl,w,c
  3860  013830  0100               	movlb	0	; () banked
  3861  013832  6F76               	movwf	(?_sprintf+10)& (0+255),b
  3862  013834  0EFE               	movlw	high _weekday_3char
  3863  013836  20F4               	addwfc	prodh,w,c
  3864  013838  0100               	movlb	0	; () banked
  3865  01383A  6F77               	movwf	(?_sprintf+11)& (0+255),b
  3866  01383C  C13B  F078         	movff	_now+6,?_sprintf+12
  3867  013840  0100               	movlb	0	; () banked
  3868  013842  6B79               	clrf	(?_sprintf+13)& (0+255),b
  3869  013844  C13A  F07A         	movff	_now+5,?_sprintf+14
  3870  013848  0100               	movlb	0	; () banked
  3871  01384A  6B7B               	clrf	(?_sprintf+15)& (0+255),b
  3872  01384C  C139  F07C         	movff	_now+4,?_sprintf+16
  3873  013850  0100               	movlb	0	; () banked
  3874  013852  6B7D               	clrf	(?_sprintf+17)& (0+255),b
  3875  013854  EC00  F080         	call	_sprintf	;wreg free
  3876                           
  3877                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  3878  013858  C08F  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  3879  01385C  C090  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  3880  013860  0E91               	movlw	low print_time@str
  3881  013862  0100               	movlb	0	; () banked
  3882  013864  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3883  013866  0E00               	movlw	high print_time@str
  3884  013868  0100               	movlb	0	; () banked
  3885  01386A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3886  01386C  EC87  F09E         	call	_ringbuf_put_str	;wreg free
  3887  013870  0012               	return		;funcret
  3888  013872                     __end_of_print_time:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           intcon	equ	0xFF2
  3897                           postinc0	equ	0xFEE
  3898                           wreg	equ	0xFE8
  3899                           postdec1	equ	0xFE5
  3900                           fsr1h	equ	0xFE2
  3901                           fsr1l	equ	0xFE1
  3902                           indf2	equ	0xFDF
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _ringbuf_put_str *****************
  3908 ;; Defined at:
  3909 ;;		line 39 in file "../My_library/My_ringbuf.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  3912 ;;		 -> usb_tx(8), 
  3913 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  3914 ;;		 -> STR_43(235), STR_24(8), print_time@str(30), STR_22(3), 
  3915 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3930 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3931 ;;Total ram usage:        4 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:   13
  3934 ;; This function calls:
  3935 ;;		_ringbuf_put
  3936 ;; This function is called by:
  3937 ;;		_terminal_task
  3938 ;;		_print_time
  3939 ;;		_terminal_at_hand
  3940 ;;		_terminal_operation
  3941 ;;		_print_time_dec
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text6
  3946  013D0E                     __ptext6:
  3947                           	opt stack 0
  3948  013D0E                     _ringbuf_put_str:
  3949                           	opt stack 13
  3950                           
  3951                           ;My_ringbuf.c: 40: while (*str) {
  3952                           
  3953                           ;incstack = 0
  3954  013D0E  D01C               	goto	l8390
  3955  013D10                     l8386:
  3956                           
  3957                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  3958  013D10  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  3959  013D14  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  3960  013D18  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  3961  013D1C  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  3962  013D20  0E00               	movlw	low (__mediumconst shr (0+16))
  3963  013D22  6EF8               	movwf	tblptru,c
  3964  013D24  0E0E               	movlw	(high __ramtop+-1)
  3965  013D26  64F7               	cpfsgt	tblptrh,c
  3966  013D28  D003               	bra	u8047
  3967  013D2A  0008               	tblrd		*
  3968  013D2C  50F5               	movf	tablat,w,c
  3969  013D2E  D005               	bra	u8040
  3970  013D30                     u8047:
  3971  013D30  CFF6 FFE1          	movff	tblptrl,fsr1l
  3972  013D34  CFF7 FFE2          	movff	tblptrh,fsr1h
  3973  013D38  50E7               	movf	indf1,w,c
  3974  013D3A                     u8040:
  3975  013D3A  0100               	movlb	0	; () banked
  3976  013D3C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3977  013D3E  EC83  F094         	call	_ringbuf_put	;wreg free
  3978  013D42  0100               	movlb	0	; () banked
  3979  013D44  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  3980  013D46  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  3981  013D48                     l8390:
  3982  013D48  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  3983  013D4C  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  3984  013D50  0E00               	movlw	low (__mediumconst shr (0+16))
  3985  013D52  6EF8               	movwf	tblptru,c
  3986  013D54  0E0E               	movlw	(high __ramtop+-1)
  3987  013D56  64F7               	cpfsgt	tblptrh,c
  3988  013D58  D003               	bra	u8057
  3989  013D5A  0008               	tblrd		*
  3990  013D5C  50F5               	movf	tablat,w,c
  3991  013D5E  D005               	bra	u8050
  3992  013D60                     u8057:
  3993  013D60  CFF6 FFE1          	movff	tblptrl,fsr1l
  3994  013D64  CFF7 FFE2          	movff	tblptrh,fsr1h
  3995  013D68  50E7               	movf	indf1,w,c
  3996  013D6A                     u8050:
  3997  013D6A  0900               	iorlw	0
  3998  013D6C  B4D8               	btfsc	status,2,c
  3999  013D6E  0012               	return	
  4000  013D70  D7CF               	goto	l8386
  4001  013D72                     __end_of_ringbuf_put_str:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           prodh	equ	0xFF4
  4008                           prodl	equ	0xFF3
  4009                           intcon	equ	0xFF2
  4010                           postinc0	equ	0xFEE
  4011                           wreg	equ	0xFE8
  4012                           indf1	equ	0xFE7
  4013                           postdec1	equ	0xFE5
  4014                           fsr1h	equ	0xFE2
  4015                           fsr1l	equ	0xFE1
  4016                           indf2	equ	0xFDF
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _RTCC_from_caltime *****************
  4022 ;; Defined at:
  4023 ;;		line 205 in file "../My_library/My_RTCC.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  tm              2   47[BANK0 ] PTR struct .
  4026 ;;		 -> now(14), 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;		None               void
  4031 ;; Registers used:
  4032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4042 ;;Total ram usage:        2 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:   14
  4045 ;; This function calls:
  4046 ;;		_caltime_to_RTCC
  4047 ;;		_caltime_to_epoch
  4048 ;;		_epoch_to_caltime
  4049 ;; This function is called by:
  4050 ;;		_terminal_at_hand
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text7
  4055  014446                     __ptext7:
  4056                           	opt stack 0
  4057  014446                     _RTCC_from_caltime:
  4058                           	opt stack 12
  4059                           
  4060                           ;My_RTCC.c: 206: caltime_to_epoch(tm);
  4061                           
  4062                           ;incstack = 0
  4063  014446  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  4064  01444A  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  4065  01444E  ECB8  F085         	call	_caltime_to_epoch	;wreg free
  4066                           
  4067                           ;My_RTCC.c: 207: epoch_to_caltime(tm);
  4068  014452  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  4069  014456  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  4070  01445A  EC4D  F089         	call	_epoch_to_caltime	;wreg free
  4071                           
  4072                           ;My_RTCC.c: 208: caltime_to_RTCC(tm);
  4073  01445E  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  4074  014462  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  4075  014466  ECAE  F093         	call	_caltime_to_RTCC	;wreg free
  4076  01446A  0012               	return		;funcret
  4077  01446C                     __end_of_RTCC_from_caltime:
  4078                           	opt stack 0
  4079                           tblptru	equ	0xFF8
  4080                           tblptrh	equ	0xFF7
  4081                           tblptrl	equ	0xFF6
  4082                           tablat	equ	0xFF5
  4083                           prodh	equ	0xFF4
  4084                           prodl	equ	0xFF3
  4085                           intcon	equ	0xFF2
  4086                           postinc0	equ	0xFEE
  4087                           wreg	equ	0xFE8
  4088                           indf1	equ	0xFE7
  4089                           postdec1	equ	0xFE5
  4090                           fsr1h	equ	0xFE2
  4091                           fsr1l	equ	0xFE1
  4092                           indf2	equ	0xFDF
  4093                           fsr2h	equ	0xFDA
  4094                           fsr2l	equ	0xFD9
  4095                           status	equ	0xFD8
  4096                           
  4097 ;; *************** function _strcmp *****************
  4098 ;; Defined at:
  4099 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  4102 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  4103 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  4104 ;;		 -> STR_45(9), STR_44(9), STR_42(2), STR_41(5), 
  4105 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  4106 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  4107 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  4108 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  r               1    5[BANK0 ] char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  2    0[BANK0 ] int 
  4113 ;; Registers used:
  4114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4120 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4123 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;Total ram usage:        6 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:   11
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_terminal_time
  4131 ;;		_terminal_operation
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text8
  4136  013E96                     __ptext8:
  4137                           	opt stack 0
  4138  013E96                     _strcmp:
  4139                           	opt stack 16
  4140                           
  4141                           ;incstack = 0
  4142  013E96  D006               	goto	l8692
  4143  013E98                     l8690:
  4144  013E98  0100               	movlb	0	; () banked
  4145  013E9A  4B60               	infsnz	strcmp@s1& (0+255),f,b
  4146  013E9C  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  4147  013E9E  0100               	movlb	0	; () banked
  4148  013EA0  4B62               	infsnz	strcmp@s2& (0+255),f,b
  4149  013EA2  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  4150  013EA4                     l8692:
  4151  013EA4  C060  FFD9         	movff	strcmp@s1,fsr2l
  4152  013EA8  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4153  013EAC  50DF               	movf	indf2,w,c
  4154  013EAE  0100               	movlb	0	; () banked
  4155  013EB0  6F64               	movwf	??_strcmp& (0+255),b
  4156  013EB2  C062  FFF6         	movff	strcmp@s2,tblptrl
  4157  013EB6  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  4158  013EBA                     	if	0	;tblptru may be non-zero
  4159  013EBA                     	endif
  4160  013EBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4161  013EBA  0E00               	movlw	low (__mediumconst shr (0+16))
  4162  013EBC  6EF8               	movwf	tblptru,c
  4163  013EBE                     	endif
  4164  013EBE  0008               	tblrd		*
  4165  013EC0  50F5               	movf	tablat,w,c
  4166  013EC2  0800               	sublw	0
  4167  013EC4  0100               	movlb	0	; () banked
  4168  013EC6  2564               	addwf	??_strcmp& (0+255),w,b
  4169  013EC8  0100               	movlb	0	; () banked
  4170  013ECA  6F65               	movwf	strcmp@r& (0+255),b
  4171  013ECC  0100               	movlb	0	; () banked
  4172  013ECE  5165               	movf	strcmp@r& (0+255),w,b
  4173  013ED0  A4D8               	btfss	status,2,c
  4174  013ED2  D007               	goto	l8696
  4175                           
  4176                           ; BSR set to: 0
  4177  013ED4  C060  FFD9         	movff	strcmp@s1,fsr2l
  4178  013ED8  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4179  013EDC  50DF               	movf	indf2,w,c
  4180  013EDE  A4D8               	btfss	status,2,c
  4181  013EE0  D7DB               	goto	l8690
  4182  013EE2                     l8696:
  4183                           
  4184                           ; BSR set to: 0
  4185  013EE2  0100               	movlb	0	; () banked
  4186  013EE4  5165               	movf	strcmp@r& (0+255),w,b
  4187  013EE6  0100               	movlb	0	; () banked
  4188  013EE8  6F60               	movwf	?_strcmp& (0+255),b
  4189  013EEA  6B61               	clrf	(?_strcmp+1)& (0+255),b
  4190  013EEC  BF60               	btfsc	?_strcmp& (0+255),7,b
  4191  013EEE  0761               	decf	(?_strcmp+1)& (0+255),f,b
  4192  013EF0  0012               	return	
  4193  013EF2                     __end_of_strcmp:
  4194                           	opt stack 0
  4195                           tblptru	equ	0xFF8
  4196                           tblptrh	equ	0xFF7
  4197                           tblptrl	equ	0xFF6
  4198                           tablat	equ	0xFF5
  4199                           prodh	equ	0xFF4
  4200                           prodl	equ	0xFF3
  4201                           intcon	equ	0xFF2
  4202                           postinc0	equ	0xFEE
  4203                           wreg	equ	0xFE8
  4204                           indf1	equ	0xFE7
  4205                           postdec1	equ	0xFE5
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           indf2	equ	0xFDF
  4209                           fsr2h	equ	0xFDA
  4210                           fsr2l	equ	0xFD9
  4211                           status	equ	0xFD8
  4212                           
  4213 ;; *************** function _atoi *****************
  4214 ;; Defined at:
  4215 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4218 ;;		 -> terminal_task@op2(25), 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  a               2   11[BANK0 ] int 
  4221 ;;  sign            1   10[BANK0 ] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2    6[BANK0 ] int 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4232 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4234 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4235 ;;Total ram usage:        7 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:   12
  4238 ;; This function calls:
  4239 ;;		___wmul
  4240 ;;		_isdigit
  4241 ;; This function is called by:
  4242 ;;		_terminal_time
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text9
  4247  011E7A                     __ptext9:
  4248                           	opt stack 0
  4249  011E7A                     _atoi:
  4250                           	opt stack 15
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;incstack = 0
  4254  011E7A  D003               	goto	l8704
  4255  011E7C                     l8702:
  4256  011E7C  0100               	movlb	0	; () banked
  4257  011E7E  4B66               	infsnz	atoi@s& (0+255),f,b
  4258  011E80  2B67               	incf	(atoi@s+1)& (0+255),f,b
  4259  011E82                     l8704:
  4260  011E82  C066  FFD9         	movff	atoi@s,fsr2l
  4261  011E86  C067  FFDA         	movff	atoi@s+1,fsr2h
  4262  011E8A  0E20               	movlw	32
  4263  011E8C  18DE               	xorwf	postinc2,w,c
  4264  011E8E  B4D8               	btfsc	status,2,c
  4265  011E90  D7F5               	goto	l8702
  4266  011E92  C066  FFD9         	movff	atoi@s,fsr2l
  4267  011E96  C067  FFDA         	movff	atoi@s+1,fsr2h
  4268  011E9A  0E09               	movlw	9
  4269  011E9C  18DE               	xorwf	postinc2,w,c
  4270  011E9E  B4D8               	btfsc	status,2,c
  4271  011EA0  D7ED               	goto	l8702
  4272  011EA2  0E00               	movlw	0
  4273  011EA4  0100               	movlb	0	; () banked
  4274  011EA6  6F6C               	movwf	(atoi@a+1)& (0+255),b
  4275  011EA8  0E00               	movlw	0
  4276  011EAA  6F6B               	movwf	atoi@a& (0+255),b
  4277  011EAC  0E00               	movlw	0
  4278  011EAE  0100               	movlb	0	; () banked
  4279  011EB0  6F6A               	movwf	atoi@sign& (0+255),b
  4280                           
  4281                           ; BSR set to: 0
  4282  011EB2  C066  FFD9         	movff	atoi@s,fsr2l
  4283  011EB6  C067  FFDA         	movff	atoi@s+1,fsr2h
  4284  011EBA  0E2D               	movlw	45
  4285  011EBC  18DE               	xorwf	postinc2,w,c
  4286  011EBE  A4D8               	btfss	status,2,c
  4287  011EC0  D003               	goto	l8714
  4288                           
  4289                           ; BSR set to: 0
  4290  011EC2  0100               	movlb	0	; () banked
  4291  011EC4  2B6A               	incf	atoi@sign& (0+255),f,b
  4292  011EC6  D02E               	goto	l8720
  4293  011EC8                     l8714:
  4294                           
  4295                           ; BSR set to: 0
  4296  011EC8  C066  FFD9         	movff	atoi@s,fsr2l
  4297  011ECC  C067  FFDA         	movff	atoi@s+1,fsr2h
  4298  011ED0  0E2B               	movlw	43
  4299  011ED2  18DE               	xorwf	postinc2,w,c
  4300  011ED4  A4D8               	btfss	status,2,c
  4301  011ED6  D029               	goto	l8722
  4302  011ED8  D025               	goto	l8720
  4303  011EDA                     l8718:
  4304  011EDA  C06B  F060         	movff	atoi@a,___wmul@multiplier
  4305  011EDE  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  4306  011EE2  0E00               	movlw	0
  4307  011EE4  0100               	movlb	0	; () banked
  4308  011EE6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4309  011EE8  0E0A               	movlw	10
  4310  011EEA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4311  011EEC  EC24  F0A1         	call	___wmul	;wreg free
  4312  011EF0  C066  FFD9         	movff	atoi@s,fsr2l
  4313  011EF4  C067  FFDA         	movff	atoi@s+1,fsr2h
  4314  011EF8  50DF               	movf	indf2,w,c
  4315  011EFA  0100               	movlb	0	; () banked
  4316  011EFC  6F68               	movwf	??_atoi& (0+255),b
  4317  011EFE  6B69               	clrf	(??_atoi+1)& (0+255),b
  4318  011F00  0100               	movlb	0	; () banked
  4319  011F02  5160               	movf	?___wmul& (0+255),w,b
  4320  011F04  0100               	movlb	0	; () banked
  4321  011F06  2768               	addwf	??_atoi& (0+255),f,b
  4322  011F08  0100               	movlb	0	; () banked
  4323  011F0A  5161               	movf	(?___wmul+1)& (0+255),w,b
  4324  011F0C  0100               	movlb	0	; () banked
  4325  011F0E  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  4326  011F10  0ED0               	movlw	208
  4327  011F12  0100               	movlb	0	; () banked
  4328  011F14  2568               	addwf	??_atoi& (0+255),w,b
  4329  011F16  0100               	movlb	0	; () banked
  4330  011F18  6F6B               	movwf	atoi@a& (0+255),b
  4331  011F1A  0EFF               	movlw	255
  4332  011F1C  0100               	movlb	0	; () banked
  4333  011F1E  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  4334  011F20  0100               	movlb	0	; () banked
  4335  011F22  6F6C               	movwf	(atoi@a+1)& (0+255),b
  4336  011F24                     l8720:
  4337                           
  4338                           ; BSR set to: 0
  4339  011F24  0100               	movlb	0	; () banked
  4340  011F26  4B66               	infsnz	atoi@s& (0+255),f,b
  4341  011F28  2B67               	incf	(atoi@s+1)& (0+255),f,b
  4342  011F2A                     l8722:
  4343                           
  4344                           ; BSR set to: 0
  4345  011F2A  C066  FFD9         	movff	atoi@s,fsr2l
  4346  011F2E  C067  FFDA         	movff	atoi@s+1,fsr2h
  4347  011F32  50DF               	movf	indf2,w,c
  4348  011F34  ECFA  F0A1         	call	_isdigit
  4349  011F38  B0D8               	btfsc	status,0,c
  4350  011F3A  D7CF               	goto	l8718
  4351  011F3C  0100               	movlb	0	; () banked
  4352  011F3E  516A               	movf	atoi@sign& (0+255),w,b
  4353  011F40  0100               	movlb	0	; () banked
  4354  011F42  B4D8               	btfsc	status,2,c
  4355  011F44  D00E               	goto	l1698
  4356                           
  4357                           ; BSR set to: 0
  4358  011F46  C06B  F068         	movff	atoi@a,??_atoi
  4359  011F4A  C06C  F069         	movff	atoi@a+1,??_atoi+1
  4360  011F4E  0100               	movlb	0	; () banked
  4361  011F50  1F68               	comf	??_atoi& (0+255),f,b
  4362  011F52  1F69               	comf	(??_atoi+1)& (0+255),f,b
  4363  011F54  4B68               	infsnz	??_atoi& (0+255),f,b
  4364  011F56  2B69               	incf	(??_atoi+1)& (0+255),f,b
  4365  011F58  C068  F066         	movff	??_atoi,?_atoi
  4366  011F5C  C069  F067         	movff	??_atoi+1,?_atoi+1
  4367  011F60  0012               	return	
  4368  011F62                     l1698:
  4369                           
  4370                           ; BSR set to: 0
  4371  011F62  C06B  F066         	movff	atoi@a,?_atoi
  4372  011F66  C06C  F067         	movff	atoi@a+1,?_atoi+1
  4373                           
  4374                           ; BSR set to: 0
  4375  011F6A  0012               	return		;funcret
  4376  011F6C                     __end_of_atoi:
  4377                           	opt stack 0
  4378                           tblptru	equ	0xFF8
  4379                           tblptrh	equ	0xFF7
  4380                           tblptrl	equ	0xFF6
  4381                           tablat	equ	0xFF5
  4382                           prodh	equ	0xFF4
  4383                           prodl	equ	0xFF3
  4384                           intcon	equ	0xFF2
  4385                           postinc0	equ	0xFEE
  4386                           wreg	equ	0xFE8
  4387                           indf1	equ	0xFE7
  4388                           postdec1	equ	0xFE5
  4389                           fsr1h	equ	0xFE2
  4390                           fsr1l	equ	0xFE1
  4391                           indf2	equ	0xFDF
  4392                           postinc2	equ	0xFDE
  4393                           fsr2h	equ	0xFDA
  4394                           fsr2l	equ	0xFD9
  4395                           status	equ	0xFD8
  4396                           
  4397 ;; *************** function _ringbuf_put_num *****************
  4398 ;; Defined at:
  4399 ;;		line 28 in file "../My_library/My_ringbuf.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  4402 ;;		 -> usb_tx(8), 
  4403 ;;  value           2   17[BANK0 ] const unsigned int 
  4404 ;;  digits          1   19[BANK0 ] unsigned char 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  i               1   20[BANK0 ] unsigned char 
  4407 ;;  temp            2   21[BANK0 ] unsigned int 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;		None               void
  4410 ;; Registers used:
  4411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4417 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4418 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4420 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4421 ;;Total ram usage:        8 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:   13
  4424 ;; This function calls:
  4425 ;;		___lwdiv
  4426 ;;		___lwmod
  4427 ;;		_ringbuf_put
  4428 ;; This function is called by:
  4429 ;;		_terminal_task
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text10
  4434  0138F8                     __ptext10:
  4435                           	opt stack 0
  4436  0138F8                     _ringbuf_put_num:
  4437                           	opt stack 16
  4438                           
  4439                           ;My_ringbuf.c: 29: while (digits--) {
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;incstack = 0
  4443  0138F8  D039               	goto	l9140
  4444  0138FA                     l829:
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;My_ringbuf.c: 30: uint16_t temp = value;
  4448  0138FA  C071  F075         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  4449  0138FE  C072  F076         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  4453  013902  0E00               	movlw	0
  4454  013904  0100               	movlb	0	; () banked
  4455  013906  6F74               	movwf	ringbuf_put_num@i& (0+255),b
  4456  013908  D011               	goto	l9134
  4457  01390A                     l9130:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;My_ringbuf.c: 32: temp /= 10;
  4461  01390A  C075  F060         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  4462  01390E  C076  F061         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  4463  013912  0E00               	movlw	0
  4464  013914  0100               	movlb	0	; () banked
  4465  013916  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4466  013918  0E0A               	movlw	10
  4467  01391A  6F62               	movwf	___lwdiv@divisor& (0+255),b
  4468  01391C  ECFE  F09C         	call	___lwdiv	;wreg free
  4469  013920  C060  F075         	movff	?___lwdiv,ringbuf_put_num@temp
  4470  013924  C061  F076         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  4471  013928  0100               	movlb	0	; () banked
  4472  01392A  2B74               	incf	ringbuf_put_num@i& (0+255),f,b
  4473  01392C                     l9134:
  4474                           
  4475                           ; BSR set to: 0
  4476  01392C  0100               	movlb	0	; () banked
  4477  01392E  5173               	movf	ringbuf_put_num@digits& (0+255),w,b
  4478  013930  0100               	movlb	0	; () banked
  4479  013932  5D74               	subwf	ringbuf_put_num@i& (0+255),w,b
  4480  013934  A0D8               	btfss	status,0,c
  4481  013936  D7E9               	goto	l9130
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;My_ringbuf.c: 33: }
  4485                           ;My_ringbuf.c: 34: temp %= 10;
  4486                           
  4487                           ; BSR set to: 0
  4488  013938  C075  F067         	movff	ringbuf_put_num@temp,___lwmod@dividend
  4489  01393C  C076  F068         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  4490  013940  0E00               	movlw	0
  4491  013942  0100               	movlb	0	; () banked
  4492  013944  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  4493  013946  0E0A               	movlw	10
  4494  013948  6F69               	movwf	___lwmod@divisor& (0+255),b
  4495  01394A  ECEA  F09E         	call	___lwmod	;wreg free
  4496  01394E  C067  F075         	movff	?___lwmod,ringbuf_put_num@temp
  4497  013952  C068  F076         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  4498                           
  4499                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  4500  013956  C06F  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  4501  01395A  C070  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  4502  01395E  0100               	movlb	0	; () banked
  4503  013960  5175               	movf	ringbuf_put_num@temp& (0+255),w,b
  4504  013962  0F30               	addlw	48
  4505  013964  0100               	movlb	0	; () banked
  4506  013966  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  4507  013968  EC83  F094         	call	_ringbuf_put	;wreg free
  4508  01396C                     l9140:
  4509  01396C  0100               	movlb	0	; () banked
  4510  01396E  0773               	decf	ringbuf_put_num@digits& (0+255),f,b
  4511  013970  0100               	movlb	0	; () banked
  4512  013972  2973               	incf	ringbuf_put_num@digits& (0+255),w,b
  4513  013974  B4D8               	btfsc	status,2,c
  4514  013976  0012               	return	
  4515  013978  D7C0               	goto	l829
  4516  01397A                     __end_of_ringbuf_put_num:
  4517                           	opt stack 0
  4518                           tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           prodh	equ	0xFF4
  4523                           prodl	equ	0xFF3
  4524                           intcon	equ	0xFF2
  4525                           postinc0	equ	0xFEE
  4526                           wreg	equ	0xFE8
  4527                           indf1	equ	0xFE7
  4528                           postdec1	equ	0xFE5
  4529                           fsr1h	equ	0xFE2
  4530                           fsr1l	equ	0xFE1
  4531                           indf2	equ	0xFDF
  4532                           postinc2	equ	0xFDE
  4533                           fsr2h	equ	0xFDA
  4534                           fsr2l	equ	0xFD9
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function _ringbuf_delete *****************
  4538 ;; Defined at:
  4539 ;;		line 66 in file "../My_library/My_ringbuf.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  4542 ;;		 -> terminal_task@command(8), 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;		None               void
  4547 ;; Registers used:
  4548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4554 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4558 ;;Total ram usage:        2 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:   11
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_terminal_task
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text11
  4569  01446C                     __ptext11:
  4570                           	opt stack 0
  4571  01446C                     _ringbuf_delete:
  4572                           	opt stack 18
  4573                           
  4574                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;incstack = 0
  4578  01446C  0100               	movlb	0	; () banked
  4579  01446E  EE20 F006          	lfsr	2,6
  4580  014472  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  4581  014474  26D9               	addwf	fsr2l,f,c
  4582  014476  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  4583  014478  22DA               	addwfc	fsr2h,f,c
  4584  01447A  0100               	movlb	0	; () banked
  4585  01447C  EE10 F004          	lfsr	1,4
  4586  014480  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  4587  014482  26E1               	addwf	fsr1l,f,c
  4588  014484  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  4589  014486  22E2               	addwfc	fsr1h,f,c
  4590  014488  CFDE FFE6          	movff	postinc2,postinc1
  4591  01448C  CFDD FFE5          	movff	postdec2,postdec1
  4592                           
  4593                           ; BSR set to: 0
  4594  014490  0012               	return		;funcret
  4595  014492                     __end_of_ringbuf_delete:
  4596                           	opt stack 0
  4597                           tblptru	equ	0xFF8
  4598                           tblptrh	equ	0xFF7
  4599                           tblptrl	equ	0xFF6
  4600                           tablat	equ	0xFF5
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           intcon	equ	0xFF2
  4604                           postinc0	equ	0xFEE
  4605                           wreg	equ	0xFE8
  4606                           indf1	equ	0xFE7
  4607                           postinc1	equ	0xFE6
  4608                           postdec1	equ	0xFE5
  4609                           fsr1h	equ	0xFE2
  4610                           fsr1l	equ	0xFE1
  4611                           indf2	equ	0xFDF
  4612                           postinc2	equ	0xFDE
  4613                           postdec2	equ	0xFDD
  4614                           fsr2h	equ	0xFDA
  4615                           fsr2l	equ	0xFD9
  4616                           status	equ	0xFD8
  4617                           
  4618 ;; *************** function _ringbuf_backspace *****************
  4619 ;; Defined at:
  4620 ;;		line 59 in file "../My_library/My_ringbuf.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  4623 ;;		 -> terminal_task@command(8), 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;		None               void
  4628 ;; Registers used:
  4629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4637 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4639 ;;Total ram usage:        6 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:   12
  4642 ;; This function calls:
  4643 ;;		_ringbuf_num
  4644 ;; This function is called by:
  4645 ;;		_terminal_task
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text12
  4650  0136CA                     __ptext12:
  4651                           	opt stack 0
  4652  0136CA                     _ringbuf_backspace:
  4653                           	opt stack 17
  4654                           
  4655                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;incstack = 0
  4659  0136CA  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  4660  0136CE  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  4661  0136D2  EC2E  F090         	call	_ringbuf_num	;wreg free
  4662  0136D6  0100               	movlb	0	; () banked
  4663  0136D8  5160               	movf	?_ringbuf_num& (0+255),w,b
  4664  0136DA  0100               	movlb	0	; () banked
  4665  0136DC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  4666  0136DE  B4D8               	btfsc	status,2,c
  4667  0136E0  0012               	return	
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  4671  0136E2  0100               	movlb	0	; () banked
  4672  0136E4  EE20 F004          	lfsr	2,4
  4673  0136E8  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  4674  0136EA  26D9               	addwf	fsr2l,f,c
  4675  0136EC  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4676  0136EE  22DA               	addwfc	fsr2h,f,c
  4677  0136F0  50DE               	movf	postinc2,w,c
  4678  0136F2  10DE               	iorwf	postinc2,w,c
  4679  0136F4  B4D8               	btfsc	status,2,c
  4680  0136F6  D00B               	goto	l9148
  4681                           
  4682                           ; BSR set to: 0
  4683  0136F8  0100               	movlb	0	; () banked
  4684  0136FA  EE20 F004          	lfsr	2,4
  4685  0136FE  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  4686  013700  26D9               	addwf	fsr2l,f,c
  4687  013702  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4688  013704  22DA               	addwfc	fsr2h,f,c
  4689  013706  06DE               	decf	postinc2,f,c
  4690  013708  0E00               	movlw	0
  4691  01370A  5ADD               	subwfb	postdec2,f,c
  4692  01370C  0012               	return	
  4693  01370E                     l9148:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  4697  01370E  0EFF               	movlw	255
  4698  013710  0100               	movlb	0	; () banked
  4699  013712  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  4700  013714  0EFF               	movlw	255
  4701  013716  0100               	movlb	0	; () banked
  4702  013718  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  4703  01371A  0100               	movlb	0	; () banked
  4704  01371C  EE20 F002          	lfsr	2,2
  4705  013720  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  4706  013722  26D9               	addwf	fsr2l,f,c
  4707  013724  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4708  013726  22DA               	addwfc	fsr2h,f,c
  4709  013728  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  4710  01372C  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  4711  013730  0100               	movlb	0	; () banked
  4712  013732  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  4713  013734  0100               	movlb	0	; () banked
  4714  013736  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  4715  013738  0100               	movlb	0	; () banked
  4716  01373A  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  4717  01373C  0100               	movlb	0	; () banked
  4718  01373E  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  4719  013740  0100               	movlb	0	; () banked
  4720  013742  EE20 F004          	lfsr	2,4
  4721  013746  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  4722  013748  26D9               	addwf	fsr2l,f,c
  4723  01374A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4724  01374C  22DA               	addwfc	fsr2h,f,c
  4725  01374E  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  4726  013752  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  4727                           
  4728                           ; BSR set to: 0
  4729  013756  0012               	return	
  4730  013758                     __end_of_ringbuf_backspace:
  4731                           	opt stack 0
  4732                           tblptru	equ	0xFF8
  4733                           tblptrh	equ	0xFF7
  4734                           tblptrl	equ	0xFF6
  4735                           tablat	equ	0xFF5
  4736                           prodh	equ	0xFF4
  4737                           prodl	equ	0xFF3
  4738                           intcon	equ	0xFF2
  4739                           postinc0	equ	0xFEE
  4740                           wreg	equ	0xFE8
  4741                           indf1	equ	0xFE7
  4742                           postinc1	equ	0xFE6
  4743                           postdec1	equ	0xFE5
  4744                           fsr1h	equ	0xFE2
  4745                           fsr1l	equ	0xFE1
  4746                           indf2	equ	0xFDF
  4747                           postinc2	equ	0xFDE
  4748                           postdec2	equ	0xFDD
  4749                           fsr2h	equ	0xFDA
  4750                           fsr2l	equ	0xFD9
  4751                           status	equ	0xFD8
  4752                           
  4753 ;; *************** function _main_init *****************
  4754 ;; Defined at:
  4755 ;;		line 79 in file "main.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;		None               void
  4762 ;; Registers used:
  4763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4773 ;;Total ram usage:        0 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:   16
  4776 ;; This function calls:
  4777 ;;		_I2C_LCD_init
  4778 ;;		_OSC_init
  4779 ;;		_RTCC_init
  4780 ;;		_UART_init
  4781 ;;		_USB_init
  4782 ;;		_ringbuf_init
  4783 ;;		_timer0_init
  4784 ;;		_timer1_init
  4785 ;;		_timer3_init
  4786 ;; This function is called by:
  4787 ;;		_main
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text13
  4792  012234                     __ptext13:
  4793                           	opt stack 0
  4794  012234                     _main_init:
  4795                           	opt stack 14
  4796                           
  4797                           ;main.c: 80: OSC_init();
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;incstack = 0
  4801  012234  ECCC  F0A2         	call	_OSC_init	;wreg free
  4802                           
  4803                           ;main.c: 81: TRISA = 0b00010000;
  4804  012238  0E10               	movlw	16
  4805  01223A  6E92               	movwf	3986,c	;volatile
  4806                           
  4807                           ;main.c: 82: TRISB = 0b00110001;
  4808  01223C  0E31               	movlw	49
  4809  01223E  6E93               	movwf	3987,c	;volatile
  4810                           
  4811                           ;main.c: 83: TRISC = 0b10111010;
  4812  012240  0EBA               	movlw	186
  4813  012242  6E94               	movwf	3988,c	;volatile
  4814                           
  4815                           ;main.c: 84: ANCON0 = 0b11111111;
  4816  012244  010F               	movlb	15	; () banked
  4817  012246  6948               	setf	72,b	;volatile
  4818                           
  4819                           ; BSR set to: 15
  4820                           ;main.c: 85: ANCON1 = 0b00011111;
  4821  012248  0E1F               	movlw	31
  4822  01224A  010F               	movlb	15	; () banked
  4823  01224C  6F49               	movwf	73,b	;volatile
  4824                           
  4825                           ; BSR set to: 15
  4826                           ;main.c: 86: INTCON2bits.RBPU = 0;
  4827  01224E  9EF1               	bcf	intcon2,7,c	;volatile
  4828                           
  4829                           ; BSR set to: 15
  4830                           ;main.c: 88: timer0_init(6);
  4831  012250  0E06               	movlw	6
  4832  012252  ECCF  F0A0         	call	_timer0_init
  4833                           
  4834                           ;main.c: 89: timer1_init(0, 2);
  4835  012256  0E02               	movlw	2
  4836  012258  0100               	movlb	0	; () banked
  4837  01225A  6F60               	movwf	timer1_init@clock_select& (0+255),b
  4838  01225C  0E00               	movlw	0
  4839  01225E  ECFD  F09F         	call	_timer1_init
  4840                           
  4841                           ;main.c: 90: timer3_init(2);
  4842  012262  0E02               	movlw	2
  4843  012264  ECA2  F0A1         	call	_timer3_init
  4844                           
  4845                           ;main.c: 91: I2C_LCD_init();
  4846  012268  EC89  F091         	call	_I2C_LCD_init	;wreg free
  4847                           
  4848                           ;main.c: 92: RTCC_init();
  4849  01226C  EC1D  F09E         	call	_RTCC_init	;wreg free
  4850                           
  4851                           ;main.c: 94: USB_init();
  4852  012270  EC8A  F0A2         	call	_USB_init	;wreg free
  4853                           
  4854                           ;main.c: 95: static uint8_t usbtx[1000];
  4855                           ;main.c: 96: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
  4856  012274  0E63               	movlw	low _usb_tx
  4857  012276  0100               	movlb	0	; () banked
  4858  012278  6F60               	movwf	ringbuf_init@rb& (0+255),b
  4859  01227A  0E01               	movlw	high _usb_tx
  4860  01227C  0100               	movlb	0	; () banked
  4861  01227E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  4862  012280  0EB0               	movlw	low main_init@usbtx
  4863  012282  0100               	movlb	0	; () banked
  4864  012284  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  4865  012286  0E08               	movlw	high main_init@usbtx
  4866  012288  0100               	movlb	0	; () banked
  4867  01228A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4868  01228C  0E03               	movlw	3
  4869  01228E  0100               	movlb	0	; () banked
  4870  012290  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  4871  012292  0EE8               	movlw	232
  4872  012294  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4873  012296  ECD3  F09F         	call	_ringbuf_init	;wreg free
  4874                           
  4875                           ;main.c: 97: static uint8_t usbrx[100];
  4876                           ;main.c: 98: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
  4877  01229A  0E5B               	movlw	low _usb_rx
  4878  01229C  0100               	movlb	0	; () banked
  4879  01229E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  4880  0122A0  0E01               	movlw	high _usb_rx
  4881  0122A2  0100               	movlb	0	; () banked
  4882  0122A4  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  4883  0122A6  0E64               	movlw	low main_init@usbrx
  4884  0122A8  0100               	movlb	0	; () banked
  4885  0122AA  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  4886  0122AC  0E03               	movlw	high main_init@usbrx
  4887  0122AE  0100               	movlb	0	; () banked
  4888  0122B0  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4889  0122B2  0E00               	movlw	0
  4890  0122B4  0100               	movlb	0	; () banked
  4891  0122B6  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  4892  0122B8  0E64               	movlw	100
  4893  0122BA  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4894  0122BC  ECD3  F09F         	call	_ringbuf_init	;wreg free
  4895                           
  4896                           ;main.c: 100: UART_init();
  4897  0122C0  EC49  F0A2         	call	_UART_init	;wreg free
  4898                           
  4899                           ;main.c: 101: static uint8_t uarttx[1000];
  4900                           ;main.c: 102: ringbuf_init(&uart_tx, uarttx, sizeof (uarttx));
  4901  0122C4  0E53               	movlw	low _uart_tx
  4902  0122C6  0100               	movlb	0	; () banked
  4903  0122C8  6F60               	movwf	ringbuf_init@rb& (0+255),b
  4904  0122CA  0E01               	movlw	high _uart_tx
  4905  0122CC  0100               	movlb	0	; () banked
  4906  0122CE  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  4907  0122D0  0EC8               	movlw	low main_init@uarttx
  4908  0122D2  0100               	movlb	0	; () banked
  4909  0122D4  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  4910  0122D6  0E04               	movlw	high main_init@uarttx
  4911  0122D8  0100               	movlb	0	; () banked
  4912  0122DA  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4913  0122DC  0E03               	movlw	3
  4914  0122DE  0100               	movlb	0	; () banked
  4915  0122E0  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  4916  0122E2  0EE8               	movlw	232
  4917  0122E4  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4918  0122E6  ECD3  F09F         	call	_ringbuf_init	;wreg free
  4919                           
  4920                           ;main.c: 103: static uint8_t uartrx[100];
  4921                           ;main.c: 104: ringbuf_init(&uart_rx, uartrx, sizeof (uartrx));
  4922  0122EA  0E4B               	movlw	low _uart_rx
  4923  0122EC  0100               	movlb	0	; () banked
  4924  0122EE  6F60               	movwf	ringbuf_init@rb& (0+255),b
  4925  0122F0  0E01               	movlw	high _uart_rx
  4926  0122F2  0100               	movlb	0	; () banked
  4927  0122F4  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  4928  0122F6  0E00               	movlw	low main_init@uartrx
  4929  0122F8  0100               	movlb	0	; () banked
  4930  0122FA  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  4931  0122FC  0E03               	movlw	high main_init@uartrx
  4932  0122FE  0100               	movlb	0	; () banked
  4933  012300  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4934  012302  0E00               	movlw	0
  4935  012304  0100               	movlb	0	; () banked
  4936  012306  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  4937  012308  0E64               	movlw	100
  4938  01230A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4939  01230C  ECD3  F09F         	call	_ringbuf_init	;wreg free
  4940  012310  0012               	return		;funcret
  4941  012312                     __end_of_main_init:
  4942                           	opt stack 0
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           prodh	equ	0xFF4
  4948                           prodl	equ	0xFF3
  4949                           intcon	equ	0xFF2
  4950                           intcon2	equ	0xFF1
  4951                           postinc0	equ	0xFEE
  4952                           wreg	equ	0xFE8
  4953                           indf1	equ	0xFE7
  4954                           postinc1	equ	0xFE6
  4955                           postdec1	equ	0xFE5
  4956                           fsr1h	equ	0xFE2
  4957                           fsr1l	equ	0xFE1
  4958                           indf2	equ	0xFDF
  4959                           postinc2	equ	0xFDE
  4960                           postdec2	equ	0xFDD
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _timer3_init *****************
  4966 ;; Defined at:
  4967 ;;		line 101 in file "../My_library/My_PIC.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  prescaler       1    wreg     unsigned char 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  prescaler       1    1[BANK0 ] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;Total ram usage:        2 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:   11
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_main_init
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text14
  4996  014344                     __ptext14:
  4997                           	opt stack 0
  4998  014344                     _timer3_init:
  4999                           	opt stack 18
  5000                           
  5001                           ;incstack = 0
  5002                           ;timer3_init@prescaler stored from wreg
  5003  014344  0100               	movlb	0	; () banked
  5004  014346  6F61               	movwf	timer3_init@prescaler& (0+255),b
  5005                           
  5006                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  5007  014348  0E3F               	movlw	-193
  5008  01434A  1679               	andwf	3961,f,c	;volatile
  5009                           
  5010                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  5011  01434C  9679               	bcf	3961,3,c	;volatile
  5012                           
  5013                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  5014  01434E  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  5015  014352  0100               	movlb	0	; () banked
  5016  014354  3B60               	swapf	??_timer3_init& (0+255),f,b
  5017  014356  5079               	movf	3961,w,c	;volatile
  5018  014358  0100               	movlb	0	; () banked
  5019  01435A  1960               	xorwf	??_timer3_init& (0+255),w,b
  5020  01435C  0BCF               	andlw	-49
  5021  01435E  1960               	xorwf	??_timer3_init& (0+255),w,b
  5022  014360  6E79               	movwf	3961,c	;volatile
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  5026  014362  9E79               	bcf	3961,7,c	;volatile
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  5030  014364  8079               	bsf	3961,0,c	;volatile
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  5034  014366  92A2               	bcf	4002,1,c	;volatile
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  5038  014368  92A1               	bcf	4001,1,c	;volatile
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  5042  01436A  82A0               	bsf	4000,1,c	;volatile
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  5046  01436C  8CF2               	bsf	intcon,6,c	;volatile
  5047                           
  5048                           ; BSR set to: 0
  5049  01436E  0012               	return		;funcret
  5050  014370                     __end_of_timer3_init:
  5051                           	opt stack 0
  5052                           tblptru	equ	0xFF8
  5053                           tblptrh	equ	0xFF7
  5054                           tblptrl	equ	0xFF6
  5055                           tablat	equ	0xFF5
  5056                           prodh	equ	0xFF4
  5057                           prodl	equ	0xFF3
  5058                           intcon	equ	0xFF2
  5059                           intcon2	equ	0xFF1
  5060                           postinc0	equ	0xFEE
  5061                           wreg	equ	0xFE8
  5062                           indf1	equ	0xFE7
  5063                           postinc1	equ	0xFE6
  5064                           postdec1	equ	0xFE5
  5065                           fsr1h	equ	0xFE2
  5066                           fsr1l	equ	0xFE1
  5067                           indf2	equ	0xFDF
  5068                           postinc2	equ	0xFDE
  5069                           postdec2	equ	0xFDD
  5070                           fsr2h	equ	0xFDA
  5071                           fsr2l	equ	0xFD9
  5072                           status	equ	0xFD8
  5073                           
  5074 ;; *************** function _timer1_init *****************
  5075 ;; Defined at:
  5076 ;;		line 70 in file "../My_library/My_PIC.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  prescaler       1    wreg     unsigned char 
  5079 ;;  clock_select    1    0[BANK0 ] unsigned char 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  prescaler       1    2[BANK0 ] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;		None               void
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5091 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5093 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5094 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;Total ram usage:        3 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:   11
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_main_init
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text15
  5106  013FFA                     __ptext15:
  5107                           	opt stack 0
  5108  013FFA                     _timer1_init:
  5109                           	opt stack 18
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;incstack = 0
  5113                           ;timer1_init@prescaler stored from wreg
  5114  013FFA  0100               	movlb	0	; () banked
  5115  013FFC  6F62               	movwf	timer1_init@prescaler& (0+255),b
  5116                           
  5117                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  5118  013FFE  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  5119  014002  0100               	movlb	0	; () banked
  5120  014004  3B61               	swapf	??_timer1_init& (0+255),f,b
  5121  014006  4761               	rlncf	??_timer1_init& (0+255),f,b
  5122  014008  4761               	rlncf	??_timer1_init& (0+255),f,b
  5123  01400A  50CD               	movf	4045,w,c	;volatile
  5124  01400C  0100               	movlb	0	; () banked
  5125  01400E  1961               	xorwf	??_timer1_init& (0+255),w,b
  5126  014010  0B3F               	andlw	-193
  5127  014012  1961               	xorwf	??_timer1_init& (0+255),w,b
  5128  014014  6ECD               	movwf	4045,c	;volatile
  5129                           
  5130                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  5131  014016  0E02               	movlw	2
  5132  014018  0100               	movlb	0	; () banked
  5133  01401A  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  5134  01401C  A4D8               	btfss	status,2,c
  5135  01401E  D002               	goto	l765
  5136                           
  5137                           ; BSR set to: 0
  5138  014020  86CD               	bsf	4045,3,c	;volatile
  5139  014022  D001               	goto	l9092
  5140  014024                     l765:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  5144  014024  96CD               	bcf	4045,3,c	;volatile
  5145  014026                     l9092:
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  5149  014026  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  5150  01402A  0100               	movlb	0	; () banked
  5151  01402C  3B61               	swapf	??_timer1_init& (0+255),f,b
  5152  01402E  50CD               	movf	4045,w,c	;volatile
  5153  014030  0100               	movlb	0	; () banked
  5154  014032  1961               	xorwf	??_timer1_init& (0+255),w,b
  5155  014034  0BCF               	andlw	-49
  5156  014036  1961               	xorwf	??_timer1_init& (0+255),w,b
  5157  014038  6ECD               	movwf	4045,c	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  5161  01403A  84CD               	bsf	4045,2,c	;volatile
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  5165  01403C  92CD               	bcf	4045,1,c	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  5169  01403E  80CD               	bsf	4045,0,c	;volatile
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  5173  014040  909F               	bcf	3999,0,c	;volatile
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  5177  014042  909E               	bcf	3998,0,c	;volatile
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  5181  014044  809D               	bsf	3997,0,c	;volatile
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  5185  014046  8CF2               	bsf	intcon,6,c	;volatile
  5186                           
  5187                           ; BSR set to: 0
  5188  014048  0012               	return		;funcret
  5189  01404A                     __end_of_timer1_init:
  5190                           	opt stack 0
  5191                           tblptru	equ	0xFF8
  5192                           tblptrh	equ	0xFF7
  5193                           tblptrl	equ	0xFF6
  5194                           tablat	equ	0xFF5
  5195                           prodh	equ	0xFF4
  5196                           prodl	equ	0xFF3
  5197                           intcon	equ	0xFF2
  5198                           intcon2	equ	0xFF1
  5199                           postinc0	equ	0xFEE
  5200                           wreg	equ	0xFE8
  5201                           indf1	equ	0xFE7
  5202                           postinc1	equ	0xFE6
  5203                           postdec1	equ	0xFE5
  5204                           fsr1h	equ	0xFE2
  5205                           fsr1l	equ	0xFE1
  5206                           indf2	equ	0xFDF
  5207                           postinc2	equ	0xFDE
  5208                           postdec2	equ	0xFDD
  5209                           fsr2h	equ	0xFDA
  5210                           fsr2l	equ	0xFD9
  5211                           status	equ	0xFD8
  5212                           
  5213 ;; *************** function _timer0_init *****************
  5214 ;; Defined at:
  5215 ;;		line 34 in file "../My_library/My_PIC.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  prescaler       1    wreg     unsigned char 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  prescaler       1    1[BANK0 ] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;		None               void
  5222 ;; Registers used:
  5223 ;;		wreg, status,2, status,0
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5231 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5233 ;;Total ram usage:        2 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:   11
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_main_init
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text16
  5244  01419E                     __ptext16:
  5245                           	opt stack 0
  5246  01419E                     _timer0_init:
  5247                           	opt stack 18
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;incstack = 0
  5251                           ;timer0_init@prescaler stored from wreg
  5252  01419E  0100               	movlb	0	; () banked
  5253  0141A0  6F61               	movwf	timer0_init@prescaler& (0+255),b
  5254                           
  5255                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  5256  0141A2  8ED5               	bsf	4053,7,c	;volatile
  5257                           
  5258                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  5259  0141A4  8CD5               	bsf	4053,6,c	;volatile
  5260                           
  5261                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  5262  0141A6  9AD5               	bcf	4053,5,c	;volatile
  5263                           
  5264                           ;My_PIC.c: 38: if (prescaler == 0) {
  5265  0141A8  0100               	movlb	0	; () banked
  5266  0141AA  5161               	movf	timer0_init@prescaler& (0+255),w,b
  5267  0141AC  0100               	movlb	0	; () banked
  5268  0141AE  A4D8               	btfss	status,2,c
  5269  0141B0  D002               	goto	l760
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  5273  0141B2  86D5               	bsf	4053,3,c	;volatile
  5274                           
  5275                           ;My_PIC.c: 40: } else {
  5276  0141B4  D00C               	goto	l9080
  5277  0141B6                     l760:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  5281  0141B6  96D5               	bcf	4053,3,c	;volatile
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  5285  0141B8  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  5286  0141BC  0EFF               	movlw	255
  5287  0141BE  0100               	movlb	0	; () banked
  5288  0141C0  2760               	addwf	??_timer0_init& (0+255),f,b
  5289  0141C2  50D5               	movf	4053,w,c	;volatile
  5290  0141C4  0100               	movlb	0	; () banked
  5291  0141C6  1960               	xorwf	??_timer0_init& (0+255),w,b
  5292  0141C8  0BF8               	andlw	-8
  5293  0141CA  1960               	xorwf	??_timer0_init& (0+255),w,b
  5294  0141CC  6ED5               	movwf	4053,c	;volatile
  5295  0141CE                     l9080:
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;My_PIC.c: 43: }
  5299                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  5300  0141CE  8AF2               	bsf	intcon,5,c	;volatile
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  5304  0141D0  94F2               	bcf	intcon,2,c	;volatile
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  5308  0141D2  94F1               	bcf	intcon2,2,c	;volatile
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  5312  0141D4  8CF2               	bsf	intcon,6,c	;volatile
  5313                           
  5314                           ; BSR set to: 0
  5315  0141D6  0012               	return		;funcret
  5316  0141D8                     __end_of_timer0_init:
  5317                           	opt stack 0
  5318                           tblptru	equ	0xFF8
  5319                           tblptrh	equ	0xFF7
  5320                           tblptrl	equ	0xFF6
  5321                           tablat	equ	0xFF5
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           intcon	equ	0xFF2
  5325                           intcon2	equ	0xFF1
  5326                           postinc0	equ	0xFEE
  5327                           wreg	equ	0xFE8
  5328                           indf1	equ	0xFE7
  5329                           postinc1	equ	0xFE6
  5330                           postdec1	equ	0xFE5
  5331                           fsr1h	equ	0xFE2
  5332                           fsr1l	equ	0xFE1
  5333                           indf2	equ	0xFDF
  5334                           postinc2	equ	0xFDE
  5335                           postdec2	equ	0xFDD
  5336                           fsr2h	equ	0xFDA
  5337                           fsr2l	equ	0xFD9
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _USB_init *****************
  5341 ;; Defined at:
  5342 ;;		line 11 in file "../My_library/My_usb_cdc.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;		None               void
  5349 ;; Registers used:
  5350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;Total ram usage:        0 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:   13
  5363 ;; This function calls:
  5364 ;;		_USBDeviceAttach
  5365 ;;		_USBDeviceInit
  5366 ;; This function is called by:
  5367 ;;		_main_init
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text17
  5372  014514                     __ptext17:
  5373                           	opt stack 0
  5374  014514                     _USB_init:
  5375                           	opt stack 16
  5376                           
  5377                           ;My_usb_cdc.c: 12: USBDeviceInit();
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;incstack = 0
  5381  014514  EC02  F08B         	call	_USBDeviceInit	;wreg free
  5382                           
  5383                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  5384  014518  ECEC  F0A0         	call	_USBDeviceAttach	;wreg free
  5385                           
  5386                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
  5387  01451C  0E00               	movlw	0
  5388  01451E  0101               	movlb	1	; () banked
  5389  014520  6F73               	movwf	_line_coding& (0+255),b
  5390  014522  0EC2               	movlw	194
  5391  014524  6F74               	movwf	(_line_coding+1)& (0+255),b
  5392  014526  0E01               	movlw	1
  5393  014528  6F75               	movwf	(_line_coding+2)& (0+255),b
  5394  01452A  0E00               	movlw	0
  5395  01452C  6F76               	movwf	(_line_coding+3)& (0+255),b
  5396                           
  5397                           ; BSR set to: 1
  5398  01452E  0012               	return		;funcret
  5399  014530                     __end_of_USB_init:
  5400                           	opt stack 0
  5401                           tblptru	equ	0xFF8
  5402                           tblptrh	equ	0xFF7
  5403                           tblptrl	equ	0xFF6
  5404                           tablat	equ	0xFF5
  5405                           prodh	equ	0xFF4
  5406                           prodl	equ	0xFF3
  5407                           intcon	equ	0xFF2
  5408                           intcon2	equ	0xFF1
  5409                           postinc0	equ	0xFEE
  5410                           wreg	equ	0xFE8
  5411                           indf1	equ	0xFE7
  5412                           postinc1	equ	0xFE6
  5413                           postdec1	equ	0xFE5
  5414                           fsr1h	equ	0xFE2
  5415                           fsr1l	equ	0xFE1
  5416                           indf2	equ	0xFDF
  5417                           postinc2	equ	0xFDE
  5418                           postdec2	equ	0xFDD
  5419                           fsr2h	equ	0xFDA
  5420                           fsr2l	equ	0xFD9
  5421                           status	equ	0xFD8
  5422                           
  5423 ;; *************** function _USBDeviceInit *****************
  5424 ;; Defined at:
  5425 ;;		line 298 in file "../My_library/usb/usb_device.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;		None
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;  i               1    8[BANK0 ] unsigned char 
  5430 ;; Return value:  Size  Location     Type
  5431 ;;		None               void
  5432 ;; Registers used:
  5433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5442 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5443 ;;Total ram usage:        1 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:   12
  5446 ;; This function calls:
  5447 ;;		_memset
  5448 ;; This function is called by:
  5449 ;;		_USB_init
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text18
  5454  011604                     __ptext18:
  5455                           	opt stack 0
  5456  011604                     _USBDeviceInit:
  5457                           	opt stack 16
  5458                           
  5459                           ;usb_device.c: 300: uint8_t i;
  5460                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  5461                           
  5462                           ; BSR set to: 1
  5463                           ;incstack = 0
  5464  011604  98A0               	bcf	4000,4,c	;volatile
  5465                           
  5466                           ;usb_device.c: 305: {UEIR = 0;};
  5467  011606  0E00               	movlw	0
  5468  011608  6E63               	movwf	3939,c	;volatile
  5469                           
  5470                           ;usb_device.c: 308: {UIR = 0;};
  5471  01160A  0E00               	movlw	0
  5472  01160C  6E62               	movwf	3938,c	;volatile
  5473                           
  5474                           ;usb_device.c: 311: UEP0 = 0;
  5475  01160E  0E00               	movlw	0
  5476  011610  010F               	movlb	15	; () banked
  5477  011612  6F26               	movwf	38,b	;volatile
  5478                           
  5479                           ; BSR set to: 15
  5480                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  5481  011614  0E27               	movlw	39
  5482  011616  0100               	movlb	0	; () banked
  5483  011618  6F60               	movwf	memset@p1& (0+255),b
  5484  01161A  0E0F               	movlw	15
  5485  01161C  0100               	movlb	0	; () banked
  5486  01161E  6F61               	movwf	(memset@p1+1)& (0+255),b
  5487  011620  0E00               	movlw	0
  5488  011622  0100               	movlb	0	; () banked
  5489  011624  6F63               	movwf	(memset@c+1)& (0+255),b
  5490  011626  0E00               	movlw	0
  5491  011628  6F62               	movwf	memset@c& (0+255),b
  5492  01162A  0E00               	movlw	0
  5493  01162C  0100               	movlb	0	; () banked
  5494  01162E  6F65               	movwf	(memset@n+1)& (0+255),b
  5495  011630  0E02               	movlw	2
  5496  011632  6F64               	movwf	memset@n& (0+255),b
  5497  011634  EC3F  F0A1         	call	_memset	;wreg free
  5498                           
  5499                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5500  011638  0E16               	movlw	22
  5501  01163A  010F               	movlb	15	; () banked
  5502  01163C  6F39               	movwf	57,b	;volatile
  5503                           
  5504                           ; BSR set to: 15
  5505  01163E  0E9F               	movlw	159
  5506  011640  010F               	movlb	15	; () banked
  5507  011642  6F37               	movwf	55,b	;volatile
  5508                           
  5509                           ; BSR set to: 15
  5510  011644  0E7B               	movlw	123
  5511  011646  010F               	movlb	15	; () banked
  5512  011648  6F36               	movwf	54,b	;volatile
  5513                           
  5514                           ; BSR set to: 15
  5515                           ;usb_device.c: 318: ;
  5516                           ;usb_device.c: 321: ;
  5517                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  5518  01164A  0E00               	movlw	0
  5519  01164C  0100               	movlb	0	; () banked
  5520  01164E  6F68               	movwf	USBDeviceInit@i& (0+255),b
  5521  011650                     l8742:
  5522                           
  5523                           ; BSR set to: 0
  5524  011650  0E0B               	movlw	11
  5525  011652  0100               	movlb	0	; () banked
  5526  011654  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  5527  011656  D001               	goto	l8746
  5528  011658  D010               	goto	l146
  5529  01165A                     l8746:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;usb_device.c: 325: {
  5533                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  5534  01165A  0100               	movlb	0	; () banked
  5535  01165C  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5536  01165E  0D04               	mullw	4
  5537  011660  0E00               	movlw	0
  5538  011662  24F3               	addwf	prodl,w,c
  5539  011664  6ED9               	movwf	fsr2l,c
  5540  011666  0E0D               	movlw	13
  5541  011668  20F4               	addwfc	prodh,w,c
  5542  01166A  6EDA               	movwf	fsr2h,c
  5543  01166C  6ADE               	clrf	postinc2,c
  5544  01166E  6ADE               	clrf	postinc2,c
  5545  011670  6ADE               	clrf	postinc2,c
  5546  011672  6ADD               	clrf	postdec2,c
  5547                           
  5548                           ; BSR set to: 0
  5549  011674  0100               	movlb	0	; () banked
  5550  011676  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  5551  011678  D7EB               	goto	l8742
  5552  01167A                     l146:
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;usb_device.c: 327: }
  5556                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  5557  01167A  8C65               	bsf	3941,6,c	;volatile
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;usb_device.c: 333: UADDR = 0x00;
  5561  01167C  0E00               	movlw	0
  5562  01167E  010F               	movlb	15	; () banked
  5563  011680  6F38               	movwf	56,b	;volatile
  5564                           
  5565                           ; BSR set to: 15
  5566                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  5567  011682  9865               	bcf	3941,4,c	;volatile
  5568                           
  5569                           ; BSR set to: 15
  5570                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  5571  011684  9C65               	bcf	3941,6,c	;volatile
  5572                           
  5573                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  5574  011686  D009               	goto	l8766
  5575  011688                     l8758:
  5576                           
  5577                           ;usb_device.c: 343: {
  5578                           ;usb_device.c: 344: (UIR &= 0xF7);
  5579  011688  9662               	bcf	3938,3,c	;volatile
  5580                           
  5581                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  5582  01168A  0E00               	movlw	0
  5583  01168C  6E0D               	movwf	_inPipes+3,c	;volatile
  5584                           
  5585                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  5586  01168E  0E00               	movlw	0
  5587  011690  6E04               	movwf	_outPipes+3,c	;volatile
  5588                           
  5589                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  5590  011692  0E00               	movlw	0
  5591  011694  6E06               	movwf	_outPipes+5,c	;volatile
  5592  011696  0E00               	movlw	0
  5593  011698  6E05               	movwf	_outPipes+4,c	;volatile
  5594  01169A                     l8766:
  5595  01169A  B662               	btfsc	3938,3,c	;volatile
  5596  01169C  D7F5               	goto	l8758
  5597                           
  5598                           ;usb_device.c: 349: }
  5599                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  5600  01169E  0E01               	movlw	1
  5601  0116A0  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5602                           
  5603                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  5604  0116A2  0E01               	movlw	1
  5605  0116A4  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5606                           
  5607                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  5608  0116A6  0E00               	movlw	0
  5609  0116A8  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
  5610                           
  5611                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  5612  0116AA  0E00               	movlw	0
  5613  0116AC  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  5614                           
  5615                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  5616  0116AE  0E00               	movlw	0
  5617  0116B0  0101               	movlb	1	; () banked
  5618  0116B2  6F2F               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  5619                           
  5620                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  5621  0116B4  0E00               	movlw	0
  5622  0116B6  0100               	movlb	0	; () banked
  5623  0116B8  6F68               	movwf	USBDeviceInit@i& (0+255),b
  5624  0116BA                     l8770:
  5625                           
  5626                           ; BSR set to: 0
  5627  0116BA  0E02               	movlw	2
  5628  0116BC  0100               	movlb	0	; () banked
  5629  0116BE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  5630  0116C0  D001               	goto	l8774
  5631  0116C2  D033               	goto	l8780
  5632  0116C4                     l8774:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;usb_device.c: 363: {
  5636                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  5637  0116C4  0100               	movlb	0	; () banked
  5638  0116C6  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5639  0116C8  0D02               	mullw	2
  5640  0116CA  0E10               	movlw	low _pBDTEntryIn
  5641  0116CC  24F3               	addwf	prodl,w,c
  5642  0116CE  6ED9               	movwf	fsr2l,c
  5643  0116D0  0E00               	movlw	high _pBDTEntryIn
  5644  0116D2  20F4               	addwfc	prodh,w,c
  5645  0116D4  6EDA               	movwf	fsr2h,c
  5646  0116D6  0E00               	movlw	0
  5647  0116D8  6EDE               	movwf	postinc2,c
  5648  0116DA  0E00               	movlw	0
  5649  0116DC  6EDD               	movwf	postdec2,c
  5650                           
  5651                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  5652  0116DE  0100               	movlb	0	; () banked
  5653  0116E0  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5654  0116E2  0D02               	mullw	2
  5655  0116E4  0E0A               	movlw	low _pBDTEntryOut
  5656  0116E6  24F3               	addwf	prodl,w,c
  5657  0116E8  6ED9               	movwf	fsr2l,c
  5658  0116EA  0E01               	movlw	high _pBDTEntryOut
  5659  0116EC  20F4               	addwfc	prodh,w,c
  5660  0116EE  6EDA               	movwf	fsr2h,c
  5661  0116F0  0E00               	movlw	0
  5662  0116F2  6EDE               	movwf	postinc2,c
  5663  0116F4  0E00               	movlw	0
  5664  0116F6  6EDD               	movwf	postdec2,c
  5665                           
  5666                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  5667  0116F8  0100               	movlb	0	; () banked
  5668  0116FA  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5669  0116FC  0D01               	mullw	1
  5670  0116FE  0E16               	movlw	low _ep_data_in
  5671  011700  24F3               	addwf	prodl,w,c
  5672  011702  6ED9               	movwf	fsr2l,c
  5673  011704  0E00               	movlw	high _ep_data_in
  5674  011706  20F4               	addwfc	prodh,w,c
  5675  011708  6EDA               	movwf	fsr2h,c
  5676  01170A  0E00               	movlw	0
  5677  01170C  6EDF               	movwf	indf2,c
  5678                           
  5679                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  5680  01170E  0100               	movlb	0	; () banked
  5681  011710  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5682  011712  0D01               	mullw	1
  5683  011714  0E18               	movlw	low _ep_data_out
  5684  011716  24F3               	addwf	prodl,w,c
  5685  011718  6ED9               	movwf	fsr2l,c
  5686  01171A  0E01               	movlw	high _ep_data_out
  5687  01171C  20F4               	addwfc	prodh,w,c
  5688  01171E  6EDA               	movwf	fsr2h,c
  5689  011720  0E00               	movlw	0
  5690  011722  6EDF               	movwf	indf2,c
  5691                           
  5692                           ; BSR set to: 0
  5693  011724  0100               	movlb	0	; () banked
  5694  011726  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  5695  011728  D7C8               	goto	l8770
  5696  01172A                     l8780:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;usb_device.c: 368: }
  5700                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5701  01172A  0E08               	movlw	8
  5702  01172C  6E10               	movwf	_pBDTEntryIn,c
  5703  01172E  0E0D               	movlw	13
  5704  011730  6E11               	movwf	_pBDTEntryIn+1,c
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  5708  011732  0E16               	movlw	22
  5709  011734  010F               	movlb	15	; () banked
  5710  011736  6F26               	movwf	38,b	;volatile
  5711                           
  5712                           ; BSR set to: 15
  5713                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  5714  011738  0E0D               	movlw	13
  5715  01173A  010D               	movlb	13	; () banked
  5716  01173C  6F03               	movwf	3,b	;volatile
  5717  01173E  0E30               	movlw	48
  5718  011740  6F02               	movwf	2,b	;volatile
  5719                           
  5720                           ; BSR set to: 13
  5721                           ;usb_device.c: 376: BDT[0].CNT = 8;
  5722  011742  0E08               	movlw	8
  5723  011744  010D               	movlb	13	; () banked
  5724  011746  6F01               	movwf	1,b	;volatile
  5725                           
  5726                           ; BSR set to: 13
  5727                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  5728  011748  0E04               	movlw	4
  5729  01174A  010D               	movlb	13	; () banked
  5730  01174C  6F00               	movwf	0,b	;volatile
  5731                           
  5732                           ; BSR set to: 13
  5733                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  5734  01174E  010D               	movlb	13	; () banked
  5735  011750  8F00               	bsf	0,7,b	;volatile
  5736                           
  5737                           ; BSR set to: 13
  5738                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  5739  011752  0E00               	movlw	0
  5740  011754  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  5741                           
  5742                           ; BSR set to: 13
  5743                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  5744  011756  0E00               	movlw	0
  5745  011758  6E22               	movwf	_USBDeviceState,c	;volatile
  5746                           
  5747                           ; BSR set to: 13
  5748  01175A  0012               	return		;funcret
  5749  01175C                     __end_of_USBDeviceInit:
  5750                           	opt stack 0
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           prodh	equ	0xFF4
  5756                           prodl	equ	0xFF3
  5757                           intcon	equ	0xFF2
  5758                           intcon2	equ	0xFF1
  5759                           postinc0	equ	0xFEE
  5760                           wreg	equ	0xFE8
  5761                           indf1	equ	0xFE7
  5762                           postinc1	equ	0xFE6
  5763                           postdec1	equ	0xFE5
  5764                           fsr1h	equ	0xFE2
  5765                           fsr1l	equ	0xFE1
  5766                           indf2	equ	0xFDF
  5767                           postinc2	equ	0xFDE
  5768                           postdec2	equ	0xFDD
  5769                           fsr2h	equ	0xFDA
  5770                           fsr2l	equ	0xFD9
  5771                           status	equ	0xFD8
  5772                           
  5773 ;; *************** function _memset *****************
  5774 ;; Defined at:
  5775 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  p1              2    0[BANK0 ] PTR void 
  5778 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  5779 ;;  c               2    2[BANK0 ] int 
  5780 ;;  n               2    4[BANK0 ] unsigned int 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  p               2    6[BANK0 ] PTR unsigned char 
  5783 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  2    0[BANK0 ] PTR void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5793 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5796 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5797 ;;Total ram usage:        8 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:   11
  5800 ;; This function calls:
  5801 ;;		Nothing
  5802 ;; This function is called by:
  5803 ;;		_USBDeviceInit
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text19
  5808  01427E                     __ptext19:
  5809                           	opt stack 0
  5810  01427E                     _memset:
  5811                           	opt stack 16
  5812                           
  5813                           ; BSR set to: 13
  5814                           ;incstack = 0
  5815  01427E  C060  F066         	movff	memset@p1,memset@p
  5816  014282  C061  F067         	movff	memset@p1+1,memset@p+1
  5817  014286  D009               	goto	l8640
  5818  014288                     l8636:
  5819  014288  C066  FFD9         	movff	memset@p,fsr2l
  5820  01428C  C067  FFDA         	movff	memset@p+1,fsr2h
  5821  014290  C062  FFDF         	movff	memset@c,indf2
  5822  014294  0100               	movlb	0	; () banked
  5823  014296  4B66               	infsnz	memset@p& (0+255),f,b
  5824  014298  2B67               	incf	(memset@p+1)& (0+255),f,b
  5825  01429A                     l8640:
  5826  01429A  0100               	movlb	0	; () banked
  5827  01429C  0764               	decf	memset@n& (0+255),f,b
  5828  01429E  A0D8               	btfss	status,0,c
  5829  0142A0  0765               	decf	(memset@n+1)& (0+255),f,b
  5830  0142A2  0100               	movlb	0	; () banked
  5831  0142A4  2964               	incf	memset@n& (0+255),w,b
  5832  0142A6  E1F0               	bnz	l8636
  5833  0142A8  0100               	movlb	0	; () banked
  5834  0142AA  2965               	incf	(memset@n+1)& (0+255),w,b
  5835  0142AC  B4D8               	btfsc	status,2,c
  5836  0142AE  0012               	return	
  5837  0142B0  D7EB               	goto	l8636
  5838  0142B2                     __end_of_memset:
  5839                           	opt stack 0
  5840                           tblptru	equ	0xFF8
  5841                           tblptrh	equ	0xFF7
  5842                           tblptrl	equ	0xFF6
  5843                           tablat	equ	0xFF5
  5844                           prodh	equ	0xFF4
  5845                           prodl	equ	0xFF3
  5846                           intcon	equ	0xFF2
  5847                           intcon2	equ	0xFF1
  5848                           postinc0	equ	0xFEE
  5849                           wreg	equ	0xFE8
  5850                           indf1	equ	0xFE7
  5851                           postinc1	equ	0xFE6
  5852                           postdec1	equ	0xFE5
  5853                           fsr1h	equ	0xFE2
  5854                           fsr1l	equ	0xFE1
  5855                           indf2	equ	0xFDF
  5856                           postinc2	equ	0xFDE
  5857                           postdec2	equ	0xFDD
  5858                           fsr2h	equ	0xFDA
  5859                           fsr2l	equ	0xFD9
  5860                           status	equ	0xFD8
  5861                           
  5862 ;; *************** function _USBDeviceAttach *****************
  5863 ;; Defined at:
  5864 ;;		line 1352 in file "../My_library/usb/usb_device.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;		None               void
  5871 ;; Registers used:
  5872 ;;		wreg, status,2
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5882 ;;Total ram usage:        0 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:   11
  5885 ;; This function calls:
  5886 ;;		Nothing
  5887 ;; This function is called by:
  5888 ;;		_USB_init
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text20
  5893  0141D8                     __ptext20:
  5894                           	opt stack 0
  5895  0141D8                     _USBDeviceAttach:
  5896                           	opt stack 17
  5897                           
  5898                           ;usb_device.c: 1356: {
  5899                           ;usb_device.c: 1357: if(1 == 1)
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;incstack = 0
  5903  0141D8  5022               	movf	_USBDeviceState,w,c	;volatile
  5904  0141DA  A4D8               	btfss	status,2,c
  5905  0141DC  0012               	return	
  5906                           
  5907                           ;usb_device.c: 1358: {
  5908                           ;usb_device.c: 1360: UCON = 0;
  5909  0141DE  0E00               	movlw	0
  5910  0141E0  6E65               	movwf	3941,c	;volatile
  5911                           
  5912                           ;usb_device.c: 1363: UIE = 0;
  5913  0141E2  0E00               	movlw	0
  5914  0141E4  010F               	movlb	15	; () banked
  5915  0141E6  6F36               	movwf	54,b	;volatile
  5916                           
  5917                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  5918  0141E8  0E16               	movlw	22
  5919  0141EA  010F               	movlb	15	; () banked
  5920  0141EC  6F39               	movwf	57,b	;volatile
  5921  0141EE  0E9F               	movlw	159
  5922  0141F0  010F               	movlb	15	; () banked
  5923  0141F2  6F37               	movwf	55,b	;volatile
  5924  0141F4  0E7B               	movlw	123
  5925  0141F6  010F               	movlb	15	; () banked
  5926  0141F8  6F36               	movwf	54,b	;volatile
  5927                           
  5928                           ; BSR set to: 15
  5929                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  5930  0141FA  8ED0               	bsf	4048,7,c	;volatile
  5931                           
  5932                           ; BSR set to: 15
  5933  0141FC  88A2               	bsf	4002,4,c	;volatile
  5934                           
  5935                           ; BSR set to: 15
  5936  0141FE  88A0               	bsf	4000,4,c	;volatile
  5937                           
  5938                           ; BSR set to: 15
  5939  014200  8EF2               	bsf	intcon,7,c	;volatile
  5940                           
  5941                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  5942  014202  D001               	goto	l207
  5943  014204                     l208:
  5944  014204  8665               	bsf	3941,3,c	;volatile
  5945  014206                     l207:
  5946  014206  A665               	btfss	3941,3,c	;volatile
  5947  014208  D7FD               	goto	l208
  5948                           
  5949                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  5950  01420A  0E01               	movlw	1
  5951  01420C  6E22               	movwf	_USBDeviceState,c	;volatile
  5952  01420E  0012               	return	
  5953  014210                     __end_of_USBDeviceAttach:
  5954                           	opt stack 0
  5955                           tblptru	equ	0xFF8
  5956                           tblptrh	equ	0xFF7
  5957                           tblptrl	equ	0xFF6
  5958                           tablat	equ	0xFF5
  5959                           prodh	equ	0xFF4
  5960                           prodl	equ	0xFF3
  5961                           intcon	equ	0xFF2
  5962                           intcon2	equ	0xFF1
  5963                           postinc0	equ	0xFEE
  5964                           wreg	equ	0xFE8
  5965                           indf1	equ	0xFE7
  5966                           postinc1	equ	0xFE6
  5967                           postdec1	equ	0xFE5
  5968                           fsr1h	equ	0xFE2
  5969                           fsr1l	equ	0xFE1
  5970                           indf2	equ	0xFDF
  5971                           postinc2	equ	0xFDE
  5972                           postdec2	equ	0xFDD
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8
  5976                           
  5977 ;; *************** function _UART_init *****************
  5978 ;; Defined at:
  5979 ;;		line 10 in file "../My_library/My_UART.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;		None               void
  5986 ;; Registers used:
  5987 ;;		wreg, status,2
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;Total ram usage:        0 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:   11
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_main_init
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text21
  6008  014492                     __ptext21:
  6009                           	opt stack 0
  6010  014492                     _UART_init:
  6011                           	opt stack 18
  6012                           
  6013                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  6014                           
  6015                           ;incstack = 0
  6016  014492  9CAD               	bcf	4013,6,c	;volatile
  6017                           
  6018                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  6019  014494  8AAD               	bsf	4013,5,c	;volatile
  6020                           
  6021                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  6022  014496  98AD               	bcf	4013,4,c	;volatile
  6023                           
  6024                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  6025  014498  94AD               	bcf	4013,2,c	;volatile
  6026                           
  6027                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  6028  01449A  8EAC               	bsf	4012,7,c	;volatile
  6029                           
  6030                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  6031  01449C  9CAC               	bcf	4012,6,c	;volatile
  6032                           
  6033                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  6034  01449E  88AC               	bsf	4012,4,c	;volatile
  6035                           
  6036                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  6037  0144A0  867E               	bsf	3966,3,c	;volatile
  6038                           
  6039                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  6040  0144A2  0E19               	movlw	25
  6041  0144A4  6EB0               	movwf	4016,c	;volatile
  6042                           
  6043                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  6044  0144A6  0E00               	movlw	0
  6045  0144A8  6E7F               	movwf	3967,c	;volatile
  6046                           
  6047                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  6048  0144AA  9A9F               	bcf	3999,5,c	;volatile
  6049                           
  6050                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  6051  0144AC  989F               	bcf	3999,4,c	;volatile
  6052                           
  6053                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  6054  0144AE  8A9D               	bsf	3997,5,c	;volatile
  6055                           
  6056                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  6057  0144B0  8CF2               	bsf	intcon,6,c	;volatile
  6058  0144B2  0012               	return		;funcret
  6059  0144B4                     __end_of_UART_init:
  6060                           	opt stack 0
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon	equ	0xFF2
  6068                           intcon2	equ	0xFF1
  6069                           postinc0	equ	0xFEE
  6070                           wreg	equ	0xFE8
  6071                           indf1	equ	0xFE7
  6072                           postinc1	equ	0xFE6
  6073                           postdec1	equ	0xFE5
  6074                           fsr1h	equ	0xFE2
  6075                           fsr1l	equ	0xFE1
  6076                           indf2	equ	0xFDF
  6077                           postinc2	equ	0xFDE
  6078                           postdec2	equ	0xFDD
  6079                           fsr2h	equ	0xFDA
  6080                           fsr2l	equ	0xFD9
  6081                           status	equ	0xFD8
  6082                           
  6083 ;; *************** function _RTCC_init *****************
  6084 ;; Defined at:
  6085 ;;		line 22 in file "../My_library/My_RTCC.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;		None
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;		None               void
  6092 ;; Registers used:
  6093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;Total ram usage:        0 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:   15
  6106 ;; This function calls:
  6107 ;;		_RTCC_from_RTCC
  6108 ;;		_RTCC_from_epoch
  6109 ;; This function is called by:
  6110 ;;		_main_init
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text22
  6115  013C3A                     __ptext22:
  6116                           	opt stack 0
  6117  013C3A                     _RTCC_init:
  6118                           	opt stack 14
  6119                           
  6120                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  6121                           
  6122                           ;incstack = 0
  6123  013C3A  010F               	movlb	15	; () banked
  6124  013C3C  8B3F               	bsf	63,5,b	;volatile
  6125                           
  6126                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  6127  013C3E  010F               	movlb	15	; () banked
  6128  013C40  BB3F               	btfsc	63,5,b	;volatile
  6129  013C42  D006               	goto	l9158
  6130                           
  6131                           ; BSR set to: 15
  6132                           ;My_RTCC.c: 25: EECON2 = 0x55;
  6133  013C44  0E55               	movlw	85
  6134  013C46  6EA7               	movwf	4007,c	;volatile
  6135                           
  6136                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  6137  013C48  0EAA               	movlw	170
  6138  013C4A  6EA7               	movwf	4007,c	;volatile
  6139                           
  6140                           ; BSR set to: 15
  6141                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  6142  013C4C  010F               	movlb	15	; () banked
  6143  013C4E  8B3F               	bsf	63,5,b	;volatile
  6144  013C50                     l9158:
  6145                           
  6146                           ; BSR set to: 15
  6147                           ;My_RTCC.c: 28: }
  6148                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  6149  013C50  010F               	movlb	15	; () banked
  6150  013C52  8F3F               	bsf	63,7,b	;volatile
  6151                           
  6152                           ; BSR set to: 15
  6153                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  6154  013C54  010F               	movlb	15	; () banked
  6155  013C56  953F               	bcf	63,2,b	;volatile
  6156                           
  6157                           ; BSR set to: 15
  6158                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  6159  013C58  010F               	movlb	15	; () banked
  6160  013C5A  833C               	bsf	60,1,b	;volatile
  6161                           
  6162                           ; BSR set to: 15
  6163                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  6164  013C5C  010F               	movlb	15	; () banked
  6165  013C5E  853C               	bsf	60,2,b	;volatile
  6166                           
  6167                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  6168  013C60  0E00               	movlw	0
  6169  013C62  010F               	movlb	15	; () banked
  6170  013C64  6F3E               	movwf	62,b	;volatile
  6171                           
  6172                           ; BSR set to: 15
  6173                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  6174  013C66  86CD               	bsf	4045,3,c	;volatile
  6175                           
  6176                           ; BSR set to: 15
  6177                           ;My_RTCC.c: 37: RTCC_from_RTCC(&now);
  6178  013C68  0E35               	movlw	low _now
  6179  013C6A  0100               	movlb	0	; () banked
  6180  013C6C  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  6181  013C6E  0E01               	movlw	high _now
  6182  013C70  0100               	movlb	0	; () banked
  6183  013C72  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  6184  013C74  ECB3  F0A2         	call	_RTCC_from_RTCC	;wreg free
  6185                           
  6186                           ;My_RTCC.c: 38: if (now.DD == 0) {
  6187  013C78  0101               	movlb	1	; () banked
  6188  013C7A  513D               	movf	(_now+8)& (0+255),w,b
  6189  013C7C  A4D8               	btfss	status,2,c
  6190  013C7E  0012               	return	
  6191                           
  6192                           ; BSR set to: 1
  6193                           ;My_RTCC.c: 39: now.epoch = 0;
  6194  013C80  0E00               	movlw	0
  6195  013C82  0101               	movlb	1	; () banked
  6196  013C84  6F35               	movwf	_now& (0+255),b
  6197  013C86  0E00               	movlw	0
  6198  013C88  6F36               	movwf	(_now+1)& (0+255),b
  6199  013C8A  0E00               	movlw	0
  6200  013C8C  6F37               	movwf	(_now+2)& (0+255),b
  6201  013C8E  0E00               	movlw	0
  6202  013C90  6F38               	movwf	(_now+3)& (0+255),b
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;My_RTCC.c: 40: RTCC_from_epoch(&now);
  6206  013C92  0E35               	movlw	low _now
  6207  013C94  0100               	movlb	0	; () banked
  6208  013C96  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  6209  013C98  0E01               	movlw	high _now
  6210  013C9A  0100               	movlb	0	; () banked
  6211  013C9C  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  6212  013C9E  ECA6  F0A2         	call	_RTCC_from_epoch	;wreg free
  6213  013CA2  0012               	return	
  6214  013CA4                     __end_of_RTCC_init:
  6215                           	opt stack 0
  6216                           tblptru	equ	0xFF8
  6217                           tblptrh	equ	0xFF7
  6218                           tblptrl	equ	0xFF6
  6219                           tablat	equ	0xFF5
  6220                           prodh	equ	0xFF4
  6221                           prodl	equ	0xFF3
  6222                           intcon	equ	0xFF2
  6223                           intcon2	equ	0xFF1
  6224                           postinc0	equ	0xFEE
  6225                           wreg	equ	0xFE8
  6226                           indf1	equ	0xFE7
  6227                           postinc1	equ	0xFE6
  6228                           postdec1	equ	0xFE5
  6229                           fsr1h	equ	0xFE2
  6230                           fsr1l	equ	0xFE1
  6231                           indf2	equ	0xFDF
  6232                           postinc2	equ	0xFDE
  6233                           postdec2	equ	0xFDD
  6234                           fsr2h	equ	0xFDA
  6235                           fsr2l	equ	0xFD9
  6236                           status	equ	0xFD8
  6237                           
  6238 ;; *************** function _RTCC_from_epoch *****************
  6239 ;; Defined at:
  6240 ;;		line 211 in file "../My_library/My_RTCC.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  tm              2   47[BANK0 ] PTR struct .
  6243 ;;		 -> now(14), 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;		None               void
  6248 ;; Registers used:
  6249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6258 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6259 ;;Total ram usage:        2 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:   14
  6262 ;; This function calls:
  6263 ;;		_caltime_to_RTCC
  6264 ;;		_epoch_to_caltime
  6265 ;; This function is called by:
  6266 ;;		_RTCC_init
  6267 ;;		_RTCC_adjust_time_inc
  6268 ;;		_RTCC_adjust_time_dec
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text23
  6273  01454C                     __ptext23:
  6274                           	opt stack 0
  6275  01454C                     _RTCC_from_epoch:
  6276                           	opt stack 14
  6277                           
  6278                           ;My_RTCC.c: 212: epoch_to_caltime(tm);
  6279                           
  6280                           ;incstack = 0
  6281  01454C  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  6282  014550  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  6283  014554  EC4D  F089         	call	_epoch_to_caltime	;wreg free
  6284                           
  6285                           ;My_RTCC.c: 213: caltime_to_RTCC(tm);
  6286  014558  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  6287  01455C  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  6288  014560  ECAE  F093         	call	_caltime_to_RTCC	;wreg free
  6289  014564  0012               	return		;funcret
  6290  014566                     __end_of_RTCC_from_epoch:
  6291                           	opt stack 0
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           prodh	equ	0xFF4
  6297                           prodl	equ	0xFF3
  6298                           intcon	equ	0xFF2
  6299                           intcon2	equ	0xFF1
  6300                           postinc0	equ	0xFEE
  6301                           wreg	equ	0xFE8
  6302                           indf1	equ	0xFE7
  6303                           postinc1	equ	0xFE6
  6304                           postdec1	equ	0xFE5
  6305                           fsr1h	equ	0xFE2
  6306                           fsr1l	equ	0xFE1
  6307                           indf2	equ	0xFDF
  6308                           postinc2	equ	0xFDE
  6309                           postdec2	equ	0xFDD
  6310                           fsr2h	equ	0xFDA
  6311                           fsr2l	equ	0xFD9
  6312                           status	equ	0xFD8
  6313                           
  6314 ;; *************** function _epoch_to_caltime *****************
  6315 ;; Defined at:
  6316 ;;		line 126 in file "../My_library/My_RTCC.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  tm              2   33[BANK0 ] PTR struct .
  6319 ;;		 -> now(14), 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  num             4   43[BANK0 ] unsigned long 
  6322 ;;  day             2   39[BANK0 ] unsigned int 
  6323 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  6324 ;;  month           1   42[BANK0 ] unsigned char 
  6325 ;;  year            1   41[BANK0 ] unsigned char 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;		None               void
  6328 ;; Registers used:
  6329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6335 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6337 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6338 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6339 ;;Total ram usage:       14 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:   13
  6342 ;; This function calls:
  6343 ;;		_get_quot_rem
  6344 ;;		_month_length
  6345 ;; This function is called by:
  6346 ;;		_RTCC_from_caltime
  6347 ;;		_RTCC_from_epoch
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text24
  6352  01129A                     __ptext24:
  6353                           	opt stack 0
  6354  01129A                     _epoch_to_caltime:
  6355                           	opt stack 12
  6356                           
  6357                           ;My_RTCC.c: 129: static uint16_t day_cache = 0;
  6358                           ;My_RTCC.c: 130: static uint8_t month_cache = 1;
  6359                           ;My_RTCC.c: 131: static uint8_t year_cache = 0;
  6360                           ;My_RTCC.c: 132: uint16_t day_since_epoch;
  6361                           ;My_RTCC.c: 133: uint16_t day;
  6362                           ;My_RTCC.c: 134: uint8_t year = 0;
  6363                           
  6364                           ;incstack = 0
  6365  01129A  0E00               	movlw	0
  6366  01129C  0100               	movlb	0	; () banked
  6367  01129E  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  6368                           
  6369                           ;My_RTCC.c: 135: uint8_t month = 1;
  6370  0112A0  0E01               	movlw	1
  6371  0112A2  0100               	movlb	0	; () banked
  6372  0112A4  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;My_RTCC.c: 136: epoch_t num;
  6376                           ;My_RTCC.c: 138: num = tm->epoch;
  6377  0112A6  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  6378  0112AA  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  6379  0112AE  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  6380  0112B2  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  6381  0112B6  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  6382  0112BA  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;My_RTCC.c: 139: tm->ss = get_quot_rem(&num, 60);
  6386  0112BE  0E8B               	movlw	low epoch_to_caltime@num
  6387  0112C0  0100               	movlb	0	; () banked
  6388  0112C2  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6389  0112C4  0E00               	movlw	high epoch_to_caltime@num
  6390  0112C6  0100               	movlb	0	; () banked
  6391  0112C8  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6392  0112CA  0E3C               	movlw	60
  6393  0112CC  0100               	movlb	0	; () banked
  6394  0112CE  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6395  0112D0  EC19  F094         	call	_get_quot_rem	;wreg free
  6396  0112D4  0100               	movlb	0	; () banked
  6397  0112D6  EE20 F004          	lfsr	2,4
  6398  0112DA  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6399  0112DC  26D9               	addwf	fsr2l,f,c
  6400  0112DE  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6401  0112E0  22DA               	addwfc	fsr2h,f,c
  6402  0112E2  0100               	movlb	0	; () banked
  6403  0112E4  C079  FFDF         	movff	?_get_quot_rem,indf2
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;My_RTCC.c: 140: tm->mm = get_quot_rem(&num, 60);
  6407  0112E8  0E8B               	movlw	low epoch_to_caltime@num
  6408  0112EA  0100               	movlb	0	; () banked
  6409  0112EC  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6410  0112EE  0E00               	movlw	high epoch_to_caltime@num
  6411  0112F0  0100               	movlb	0	; () banked
  6412  0112F2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6413  0112F4  0E3C               	movlw	60
  6414  0112F6  0100               	movlb	0	; () banked
  6415  0112F8  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6416  0112FA  EC19  F094         	call	_get_quot_rem	;wreg free
  6417  0112FE  0100               	movlb	0	; () banked
  6418  011300  EE20 F005          	lfsr	2,5
  6419  011304  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6420  011306  26D9               	addwf	fsr2l,f,c
  6421  011308  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6422  01130A  22DA               	addwfc	fsr2h,f,c
  6423  01130C  0100               	movlb	0	; () banked
  6424  01130E  C079  FFDF         	movff	?_get_quot_rem,indf2
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;My_RTCC.c: 141: tm->hh = get_quot_rem(&num, 24);
  6428  011312  0E8B               	movlw	low epoch_to_caltime@num
  6429  011314  0100               	movlb	0	; () banked
  6430  011316  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6431  011318  0E00               	movlw	high epoch_to_caltime@num
  6432  01131A  0100               	movlb	0	; () banked
  6433  01131C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6434  01131E  0E18               	movlw	24
  6435  011320  0100               	movlb	0	; () banked
  6436  011322  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6437  011324  EC19  F094         	call	_get_quot_rem	;wreg free
  6438  011328  0100               	movlb	0	; () banked
  6439  01132A  EE20 F006          	lfsr	2,6
  6440  01132E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6441  011330  26D9               	addwf	fsr2l,f,c
  6442  011332  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6443  011334  22DA               	addwfc	fsr2h,f,c
  6444  011336  0100               	movlb	0	; () banked
  6445  011338  C079  FFDF         	movff	?_get_quot_rem,indf2
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;My_RTCC.c: 142: day = num;
  6449  01133C  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  6450  011340  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;My_RTCC.c: 143: day_since_epoch = day;
  6454  011344  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  6455  011348  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;My_RTCC.c: 145: num += 6;
  6459  01134C  0E06               	movlw	6
  6460  01134E  0100               	movlb	0	; () banked
  6461  011350  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  6462  011352  0E00               	movlw	0
  6463  011354  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  6464  011356  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  6465  011358  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;My_RTCC.c: 146: tm->EE = get_quot_rem(&num, 7);
  6469  01135A  0E8B               	movlw	low epoch_to_caltime@num
  6470  01135C  0100               	movlb	0	; () banked
  6471  01135E  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6472  011360  0E00               	movlw	high epoch_to_caltime@num
  6473  011362  0100               	movlb	0	; () banked
  6474  011364  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6475  011366  0E07               	movlw	7
  6476  011368  0100               	movlb	0	; () banked
  6477  01136A  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6478  01136C  EC19  F094         	call	_get_quot_rem	;wreg free
  6479  011370  0100               	movlb	0	; () banked
  6480  011372  EE20 F007          	lfsr	2,7
  6481  011376  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6482  011378  26D9               	addwf	fsr2l,f,c
  6483  01137A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6484  01137C  22DA               	addwfc	fsr2h,f,c
  6485  01137E  0100               	movlb	0	; () banked
  6486  011380  C079  FFDF         	movff	?_get_quot_rem,indf2
  6487                           
  6488                           ;My_RTCC.c: 155: while (day >= month_length(year, month)) {
  6489  011384  D03F               	goto	l8464
  6490  011386                     l929:
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;My_RTCC.c: 156: LATB2 = 1;
  6494  011386  848A               	bsf	3978,2,c	;volatile
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;My_RTCC.c: 157: day = day - month_length(year, month);
  6498  011388  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  6499  01138C  0100               	movlb	0	; () banked
  6500  01138E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  6501  011390  ECF8  F091         	call	_month_length
  6502  011394  0100               	movlb	0	; () banked
  6503  011396  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  6504  011398  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  6505  01139A  0100               	movlb	0	; () banked
  6506  01139C  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  6507  01139E  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  6508  0113A0  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  6509  0113A2  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  6510  0113A4  0100               	movlb	0	; () banked
  6511  0113A6  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  6512  0113A8  0100               	movlb	0	; () banked
  6513  0113AA  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  6514  0113AC  0100               	movlb	0	; () banked
  6515  0113AE  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  6516  0113B0  0100               	movlb	0	; () banked
  6517  0113B2  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  6518  0113B4  0100               	movlb	0	; () banked
  6519  0113B6  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  6520  0113B8  0100               	movlb	0	; () banked
  6521  0113BA  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;My_RTCC.c: 158: if (month == 12) {
  6525  0113BC  0E0C               	movlw	12
  6526  0113BE  0100               	movlb	0	; () banked
  6527  0113C0  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  6528  0113C2  A4D8               	btfss	status,2,c
  6529  0113C4  D019               	goto	l8458
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;My_RTCC.c: 159: month = 1;
  6533  0113C6  0E01               	movlw	1
  6534  0113C8  0100               	movlb	0	; () banked
  6535  0113CA  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;My_RTCC.c: 160: year++;
  6539  0113CC  0100               	movlb	0	; () banked
  6540  0113CE  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;My_RTCC.c: 162: if (year >= 100) {
  6544  0113D0  0E63               	movlw	99
  6545  0113D2  0100               	movlb	0	; () banked
  6546  0113D4  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  6547  0113D6  D012               	goto	l8460
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;My_RTCC.c: 163: tm->epoch -= 3155760000;
  6551  0113D8  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  6552  0113DC  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  6553  0113E0  0E80               	movlw	128
  6554  0113E2  5EDE               	subwf	postinc2,f,c
  6555  0113E4  0E13               	movlw	19
  6556  0113E6  5ADE               	subwfb	postinc2,f,c
  6557  0113E8  0E19               	movlw	25
  6558  0113EA  5ADE               	subwfb	postinc2,f,c
  6559  0113EC  0EBC               	movlw	188
  6560  0113EE  5ADE               	subwfb	postinc2,f,c
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;My_RTCC.c: 164: year = 0;
  6564  0113F0  0E00               	movlw	0
  6565  0113F2  0100               	movlb	0	; () banked
  6566  0113F4  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;My_RTCC.c: 165: }
  6570                           ;My_RTCC.c: 166: } else {
  6571  0113F6  D002               	goto	l8460
  6572  0113F8                     l8458:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;My_RTCC.c: 167: month++;
  6576  0113F8  0100               	movlb	0	; () banked
  6577  0113FA  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  6578  0113FC                     l8460:
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;My_RTCC.c: 168: }
  6582                           ;My_RTCC.c: 169: month_cache = month;
  6583  0113FC  C08A  F1E9         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;My_RTCC.c: 170: year_cache = year;
  6587  011400  C089  F133         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  6588  011404                     l8464:
  6589                           
  6590                           ; BSR set to: 0
  6591  011404  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  6592  011408  0100               	movlb	0	; () banked
  6593  01140A  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  6594  01140C  ECF8  F091         	call	_month_length
  6595  011410  0100               	movlb	0	; () banked
  6596  011412  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  6597  011414  0100               	movlb	0	; () banked
  6598  011416  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  6599  011418  0100               	movlb	0	; () banked
  6600  01141A  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  6601  01141C  0E00               	movlw	0
  6602  01141E  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  6603  011420  B0D8               	btfsc	status,0,c
  6604  011422  D7B1               	goto	l929
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;My_RTCC.c: 171: }
  6608                           ;My_RTCC.c: 172: day_cache = day_since_epoch - day;
  6609                           
  6610                           ; BSR set to: 0
  6611  011424  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  6612  011428  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  6613  01142C  0100               	movlb	0	; () banked
  6614  01142E  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  6615  011430  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  6616  011432  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  6617  011434  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  6618  011436  0100               	movlb	0	; () banked
  6619  011438  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  6620  01143A  0100               	movlb	0	; () banked
  6621  01143C  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  6622  01143E  0101               	movlb	1	; () banked
  6623  011440  6F29               	movwf	epoch_to_caltime@day_cache& (0+255),b
  6624  011442  0100               	movlb	0	; () banked
  6625  011444  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  6626  011446  0100               	movlb	0	; () banked
  6627  011448  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  6628  01144A  0101               	movlb	1	; () banked
  6629  01144C  6F2A               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  6630                           
  6631                           ; BSR set to: 1
  6632                           ;My_RTCC.c: 173: day++;
  6633  01144E  0100               	movlb	0	; () banked
  6634  011450  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  6635  011452  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;My_RTCC.c: 175: tm->YY = year;
  6639  011454  0100               	movlb	0	; () banked
  6640  011456  EE20 F00A          	lfsr	2,10
  6641  01145A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6642  01145C  26D9               	addwf	fsr2l,f,c
  6643  01145E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6644  011460  22DA               	addwfc	fsr2h,f,c
  6645  011462  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;My_RTCC.c: 176: tm->MM = month;
  6649  011466  0100               	movlb	0	; () banked
  6650  011468  EE20 F009          	lfsr	2,9
  6651  01146C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6652  01146E  26D9               	addwf	fsr2l,f,c
  6653  011470  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6654  011472  22DA               	addwfc	fsr2h,f,c
  6655  011474  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;My_RTCC.c: 177: tm->DD = day;
  6659  011478  0100               	movlb	0	; () banked
  6660  01147A  EE20 F008          	lfsr	2,8
  6661  01147E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6662  011480  26D9               	addwf	fsr2l,f,c
  6663  011482  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6664  011484  22DA               	addwfc	fsr2h,f,c
  6665  011486  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  6666                           
  6667                           ; BSR set to: 0
  6668  01148A  0012               	return		;funcret
  6669  01148C                     __end_of_epoch_to_caltime:
  6670                           	opt stack 0
  6671                           tblptru	equ	0xFF8
  6672                           tblptrh	equ	0xFF7
  6673                           tblptrl	equ	0xFF6
  6674                           tablat	equ	0xFF5
  6675                           prodh	equ	0xFF4
  6676                           prodl	equ	0xFF3
  6677                           intcon	equ	0xFF2
  6678                           intcon2	equ	0xFF1
  6679                           postinc0	equ	0xFEE
  6680                           wreg	equ	0xFE8
  6681                           indf1	equ	0xFE7
  6682                           postinc1	equ	0xFE6
  6683                           postdec1	equ	0xFE5
  6684                           fsr1h	equ	0xFE2
  6685                           fsr1l	equ	0xFE1
  6686                           indf2	equ	0xFDF
  6687                           postinc2	equ	0xFDE
  6688                           postdec2	equ	0xFDD
  6689                           fsr2h	equ	0xFDA
  6690                           fsr2l	equ	0xFD9
  6691                           status	equ	0xFD8
  6692                           
  6693 ;; *************** function _get_quot_rem *****************
  6694 ;; Defined at:
  6695 ;;		line 81 in file "../My_library/My_RTCC.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  6698 ;;		 -> epoch_to_caltime@num(4), 
  6699 ;;  div             1   27[BANK0 ] unsigned char 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  num             4   29[BANK0 ] unsigned long 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  4   25[BANK0 ] unsigned long 
  6704 ;; Registers used:
  6705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6711 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6712 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6714 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6715 ;;Total ram usage:        8 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:   12
  6718 ;; This function calls:
  6719 ;;		___lldiv
  6720 ;;		___lmul
  6721 ;; This function is called by:
  6722 ;;		_epoch_to_caltime
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text25
  6727  012832                     __ptext25:
  6728                           	opt stack 0
  6729  012832                     _get_quot_rem:
  6730                           	opt stack 12
  6731                           
  6732                           ;My_RTCC.c: 84: epoch_t num = *quot;
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;incstack = 0
  6736  012832  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  6737  012836  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  6738  01283A  CFDE F07D          	movff	postinc2,get_quot_rem@num
  6739  01283E  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  6740  012842  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  6741  012846  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  6742                           
  6743                           ;My_RTCC.c: 85: return num - (*quot = num / div) * div;
  6744  01284A  0100               	movlb	0	; () banked
  6745  01284C  517B               	movf	get_quot_rem@div& (0+255),w,b
  6746  01284E  0100               	movlb	0	; () banked
  6747  012850  6F64               	movwf	___lldiv@divisor& (0+255),b
  6748  012852  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  6749  012854  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  6750  012856  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  6751  012858  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  6752  01285C  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  6753  012860  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  6754  012864  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  6755  012868  EC4C  F097         	call	___lldiv	;wreg free
  6756  01286C  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  6757  012870  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  6758  012874  0100               	movlb	0	; () banked
  6759  012876  C060  FFDE         	movff	?___lldiv,postinc2
  6760  01287A  0100               	movlb	0	; () banked
  6761  01287C  C061  FFDE         	movff	?___lldiv+1,postinc2
  6762  012880  0100               	movlb	0	; () banked
  6763  012882  C062  FFDE         	movff	?___lldiv+2,postinc2
  6764  012886  0100               	movlb	0	; () banked
  6765  012888  C063  FFDD         	movff	?___lldiv+3,postdec2
  6766  01288C  52DD               	movf	postdec2,f,c
  6767  01288E  52DD               	movf	postdec2,f,c
  6768  012890  CFDE F06D          	movff	postinc2,___lmul@multiplier
  6769  012894  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  6770  012898  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  6771  01289C  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  6772  0128A0  0100               	movlb	0	; () banked
  6773  0128A2  517B               	movf	get_quot_rem@div& (0+255),w,b
  6774  0128A4  0100               	movlb	0	; () banked
  6775  0128A6  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6776  0128A8  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  6777  0128AA  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  6778  0128AC  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  6779  0128AE  EC3A  F09D         	call	___lmul	;wreg free
  6780  0128B2  0100               	movlb	0	; () banked
  6781  0128B4  1F6D               	comf	?___lmul& (0+255),f,b
  6782  0128B6  0100               	movlb	0	; () banked
  6783  0128B8  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  6784  0128BA  0100               	movlb	0	; () banked
  6785  0128BC  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  6786  0128BE  0100               	movlb	0	; () banked
  6787  0128C0  1F70               	comf	(?___lmul+3)& (0+255),f,b
  6788  0128C2  0100               	movlb	0	; () banked
  6789  0128C4  2B6D               	incf	?___lmul& (0+255),f,b
  6790  0128C6  0E00               	movlw	0
  6791  0128C8  0100               	movlb	0	; () banked
  6792  0128CA  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  6793  0128CC  0100               	movlb	0	; () banked
  6794  0128CE  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  6795  0128D0  0100               	movlb	0	; () banked
  6796  0128D2  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  6797  0128D4  0100               	movlb	0	; () banked
  6798  0128D6  517D               	movf	get_quot_rem@num& (0+255),w,b
  6799  0128D8  0100               	movlb	0	; () banked
  6800  0128DA  256D               	addwf	?___lmul& (0+255),w,b
  6801  0128DC  0100               	movlb	0	; () banked
  6802  0128DE  6F79               	movwf	?_get_quot_rem& (0+255),b
  6803  0128E0  0100               	movlb	0	; () banked
  6804  0128E2  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  6805  0128E4  0100               	movlb	0	; () banked
  6806  0128E6  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  6807  0128E8  0100               	movlb	0	; () banked
  6808  0128EA  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  6809  0128EC  0100               	movlb	0	; () banked
  6810  0128EE  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  6811  0128F0  0100               	movlb	0	; () banked
  6812  0128F2  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  6813  0128F4  0100               	movlb	0	; () banked
  6814  0128F6  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  6815  0128F8  0100               	movlb	0	; () banked
  6816  0128FA  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  6817  0128FC  0100               	movlb	0	; () banked
  6818  0128FE  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  6819  012900  0100               	movlb	0	; () banked
  6820  012902  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  6821  012904  0012               	return	
  6822  012906                     __end_of_get_quot_rem:
  6823                           	opt stack 0
  6824                           tblptru	equ	0xFF8
  6825                           tblptrh	equ	0xFF7
  6826                           tblptrl	equ	0xFF6
  6827                           tablat	equ	0xFF5
  6828                           prodh	equ	0xFF4
  6829                           prodl	equ	0xFF3
  6830                           intcon	equ	0xFF2
  6831                           intcon2	equ	0xFF1
  6832                           postinc0	equ	0xFEE
  6833                           wreg	equ	0xFE8
  6834                           indf1	equ	0xFE7
  6835                           postinc1	equ	0xFE6
  6836                           postdec1	equ	0xFE5
  6837                           fsr1h	equ	0xFE2
  6838                           fsr1l	equ	0xFE1
  6839                           indf2	equ	0xFDF
  6840                           postinc2	equ	0xFDE
  6841                           postdec2	equ	0xFDD
  6842                           fsr2h	equ	0xFDA
  6843                           fsr2l	equ	0xFD9
  6844                           status	equ	0xFD8
  6845                           
  6846 ;; *************** function ___lldiv *****************
  6847 ;; Defined at:
  6848 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  dividend        4    0[BANK0 ] unsigned long 
  6851 ;;  divisor         4    4[BANK0 ] unsigned long 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;  quotient        4    8[BANK0 ] unsigned long 
  6854 ;;  counter         1   12[BANK0 ] unsigned char 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  4    0[BANK0 ] unsigned long 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6864 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6865 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6867 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6868 ;;Total ram usage:       13 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:   11
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_get_quot_rem
  6875 ;;		_CTMU_read
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878                           
  6879                           	psect	text26
  6880  012E98                     __ptext26:
  6881                           	opt stack 0
  6882  012E98                     ___lldiv:
  6883                           	opt stack 12
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;incstack = 0
  6887  012E98  0E00               	movlw	0
  6888  012E9A  0100               	movlb	0	; () banked
  6889  012E9C  6F68               	movwf	___lldiv@quotient& (0+255),b
  6890  012E9E  0E00               	movlw	0
  6891  012EA0  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  6892  012EA2  0E00               	movlw	0
  6893  012EA4  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  6894  012EA6  0E00               	movlw	0
  6895  012EA8  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  6896                           
  6897                           ; BSR set to: 0
  6898  012EAA  0100               	movlb	0	; () banked
  6899  012EAC  5164               	movf	___lldiv@divisor& (0+255),w,b
  6900  012EAE  0100               	movlb	0	; () banked
  6901  012EB0  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6902  012EB2  0100               	movlb	0	; () banked
  6903  012EB4  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6904  012EB6  0100               	movlb	0	; () banked
  6905  012EB8  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6906  012EBA  B4D8               	btfsc	status,2,c
  6907  012EBC  D042               	goto	l1895
  6908                           
  6909                           ; BSR set to: 0
  6910  012EBE  0E01               	movlw	1
  6911  012EC0  0100               	movlb	0	; () banked
  6912  012EC2  6F6C               	movwf	___lldiv@counter& (0+255),b
  6913  012EC4  D008               	goto	l8256
  6914  012EC6                     l8254:
  6915                           
  6916                           ; BSR set to: 0
  6917  012EC6  0100               	movlb	0	; () banked
  6918  012EC8  90D8               	bcf	status,0,c
  6919  012ECA  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  6920  012ECC  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6921  012ECE  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6922  012ED0  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6923  012ED2  0100               	movlb	0	; () banked
  6924  012ED4  2B6C               	incf	___lldiv@counter& (0+255),f,b
  6925  012ED6                     l8256:
  6926                           
  6927                           ; BSR set to: 0
  6928  012ED6  0100               	movlb	0	; () banked
  6929  012ED8  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6930  012EDA  D7F5               	goto	l8254
  6931  012EDC                     l8258:
  6932                           
  6933                           ; BSR set to: 0
  6934  012EDC  0100               	movlb	0	; () banked
  6935  012EDE  90D8               	bcf	status,0,c
  6936  012EE0  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  6937  012EE2  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6938  012EE4  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6939  012EE6  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6940                           
  6941                           ; BSR set to: 0
  6942  012EE8  0100               	movlb	0	; () banked
  6943  012EEA  5164               	movf	___lldiv@divisor& (0+255),w,b
  6944  012EEC  0100               	movlb	0	; () banked
  6945  012EEE  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  6946  012EF0  0100               	movlb	0	; () banked
  6947  012EF2  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6948  012EF4  0100               	movlb	0	; () banked
  6949  012EF6  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6950  012EF8  0100               	movlb	0	; () banked
  6951  012EFA  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6952  012EFC  0100               	movlb	0	; () banked
  6953  012EFE  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6954  012F00  0100               	movlb	0	; () banked
  6955  012F02  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6956  012F04  0100               	movlb	0	; () banked
  6957  012F06  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6958  012F08  A0D8               	btfss	status,0,c
  6959  012F0A  D012               	goto	l8266
  6960                           
  6961                           ; BSR set to: 0
  6962  012F0C  0100               	movlb	0	; () banked
  6963  012F0E  5164               	movf	___lldiv@divisor& (0+255),w,b
  6964  012F10  0100               	movlb	0	; () banked
  6965  012F12  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  6966  012F14  0100               	movlb	0	; () banked
  6967  012F16  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6968  012F18  0100               	movlb	0	; () banked
  6969  012F1A  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6970  012F1C  0100               	movlb	0	; () banked
  6971  012F1E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6972  012F20  0100               	movlb	0	; () banked
  6973  012F22  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6974  012F24  0100               	movlb	0	; () banked
  6975  012F26  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6976  012F28  0100               	movlb	0	; () banked
  6977  012F2A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6978                           
  6979                           ; BSR set to: 0
  6980  012F2C  0100               	movlb	0	; () banked
  6981  012F2E  8168               	bsf	___lldiv@quotient& (0+255),0,b
  6982  012F30                     l8266:
  6983                           
  6984                           ; BSR set to: 0
  6985  012F30  0100               	movlb	0	; () banked
  6986  012F32  90D8               	bcf	status,0,c
  6987  012F34  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6988  012F36  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6989  012F38  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6990  012F3A  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  6991                           
  6992                           ; BSR set to: 0
  6993  012F3C  0100               	movlb	0	; () banked
  6994  012F3E  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  6995  012F40  D7CD               	goto	l8258
  6996  012F42                     l1895:
  6997                           
  6998                           ; BSR set to: 0
  6999  012F42  C068  F060         	movff	___lldiv@quotient,?___lldiv
  7000  012F46  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  7001  012F4A  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  7002  012F4E  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  7003                           
  7004                           ; BSR set to: 0
  7005  012F52  0012               	return		;funcret
  7006  012F54                     __end_of___lldiv:
  7007                           	opt stack 0
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon	equ	0xFF2
  7015                           intcon2	equ	0xFF1
  7016                           postinc0	equ	0xFEE
  7017                           wreg	equ	0xFE8
  7018                           indf1	equ	0xFE7
  7019                           postinc1	equ	0xFE6
  7020                           postdec1	equ	0xFE5
  7021                           fsr1h	equ	0xFE2
  7022                           fsr1l	equ	0xFE1
  7023                           indf2	equ	0xFDF
  7024                           postinc2	equ	0xFDE
  7025                           postdec2	equ	0xFDD
  7026                           fsr2h	equ	0xFDA
  7027                           fsr2l	equ	0xFD9
  7028                           status	equ	0xFD8
  7029                           
  7030 ;; *************** function _caltime_to_RTCC *****************
  7031 ;; Defined at:
  7032 ;;		line 106 in file "../My_library/My_RTCC.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  tm              2    9[BANK0 ] PTR struct .
  7035 ;;		 -> now(14), 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;		None
  7038 ;; Return value:  Size  Location     Type
  7039 ;;		None               void
  7040 ;; Registers used:
  7041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7047 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;Total ram usage:        2 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:   13
  7054 ;; This function calls:
  7055 ;;		_d_to_x
  7056 ;; This function is called by:
  7057 ;;		_RTCC_from_caltime
  7058 ;;		_RTCC_from_epoch
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text27
  7063  01275C                     __ptext27:
  7064                           	opt stack 0
  7065  01275C                     _caltime_to_RTCC:
  7066                           	opt stack 12
  7067  01275C                     l916:
  7068  01275C  010F               	movlb	15	; () banked
  7069  01275E  B93F               	btfsc	63,4,b	;volatile
  7070  012760  D7FD               	goto	l916
  7071                           
  7072                           ; BSR set to: 15
  7073                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR0 = 1;
  7074  012762  010F               	movlb	15	; () banked
  7075  012764  813F               	bsf	63,0,b	;volatile
  7076                           
  7077                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR1 = 1;
  7078  012766  010F               	movlb	15	; () banked
  7079  012768  833F               	bsf	63,1,b	;volatile
  7080                           
  7081                           ; BSR set to: 15
  7082                           ;My_RTCC.c: 110: RTCVALL = d_to_x(tm->YY);
  7083  01276A  0100               	movlb	0	; () banked
  7084  01276C  EE20 F00A          	lfsr	2,10
  7085  012770  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7086  012772  26D9               	addwf	fsr2l,f,c
  7087  012774  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7088  012776  22DA               	addwfc	fsr2h,f,c
  7089  012778  50DF               	movf	indf2,w,c
  7090  01277A  EC0F  F0A2         	call	_d_to_x
  7091  01277E  010F               	movlb	15	; () banked
  7092  012780  6F3A               	movwf	58,b	;volatile
  7093                           
  7094                           ; BSR set to: 15
  7095                           ;My_RTCC.c: 111: RTCVALH = 0x00;
  7096  012782  0E00               	movlw	0
  7097  012784  010F               	movlb	15	; () banked
  7098  012786  6F3B               	movwf	59,b	;volatile
  7099                           
  7100                           ; BSR set to: 15
  7101                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR0 = 0;
  7102  012788  010F               	movlb	15	; () banked
  7103  01278A  913F               	bcf	63,0,b	;volatile
  7104                           
  7105                           ; BSR set to: 15
  7106                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR1 = 1;
  7107  01278C  010F               	movlb	15	; () banked
  7108  01278E  833F               	bsf	63,1,b	;volatile
  7109                           
  7110                           ; BSR set to: 15
  7111                           ;My_RTCC.c: 114: RTCVALL = d_to_x(tm->DD);
  7112  012790  0100               	movlb	0	; () banked
  7113  012792  EE20 F008          	lfsr	2,8
  7114  012796  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7115  012798  26D9               	addwf	fsr2l,f,c
  7116  01279A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7117  01279C  22DA               	addwfc	fsr2h,f,c
  7118  01279E  50DF               	movf	indf2,w,c
  7119  0127A0  EC0F  F0A2         	call	_d_to_x
  7120  0127A4  010F               	movlb	15	; () banked
  7121  0127A6  6F3A               	movwf	58,b	;volatile
  7122                           
  7123                           ; BSR set to: 15
  7124                           ;My_RTCC.c: 115: RTCVALH = d_to_x(tm->MM);
  7125  0127A8  0100               	movlb	0	; () banked
  7126  0127AA  EE20 F009          	lfsr	2,9
  7127  0127AE  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7128  0127B0  26D9               	addwf	fsr2l,f,c
  7129  0127B2  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7130  0127B4  22DA               	addwfc	fsr2h,f,c
  7131  0127B6  50DF               	movf	indf2,w,c
  7132  0127B8  EC0F  F0A2         	call	_d_to_x
  7133  0127BC  010F               	movlb	15	; () banked
  7134  0127BE  6F3B               	movwf	59,b	;volatile
  7135                           
  7136                           ; BSR set to: 15
  7137                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR0 = 1;
  7138  0127C0  010F               	movlb	15	; () banked
  7139  0127C2  813F               	bsf	63,0,b	;volatile
  7140                           
  7141                           ; BSR set to: 15
  7142                           ;My_RTCC.c: 117: RTCCFGbits.RTCPTR1 = 0;
  7143  0127C4  010F               	movlb	15	; () banked
  7144  0127C6  933F               	bcf	63,1,b	;volatile
  7145                           
  7146                           ; BSR set to: 15
  7147                           ;My_RTCC.c: 118: RTCVALL = d_to_x(tm->hh);
  7148  0127C8  0100               	movlb	0	; () banked
  7149  0127CA  EE20 F006          	lfsr	2,6
  7150  0127CE  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7151  0127D0  26D9               	addwf	fsr2l,f,c
  7152  0127D2  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7153  0127D4  22DA               	addwfc	fsr2h,f,c
  7154  0127D6  50DF               	movf	indf2,w,c
  7155  0127D8  EC0F  F0A2         	call	_d_to_x
  7156  0127DC  010F               	movlb	15	; () banked
  7157  0127DE  6F3A               	movwf	58,b	;volatile
  7158                           
  7159                           ; BSR set to: 15
  7160                           ;My_RTCC.c: 119: RTCVALH = d_to_x(tm->EE);
  7161  0127E0  0100               	movlb	0	; () banked
  7162  0127E2  EE20 F007          	lfsr	2,7
  7163  0127E6  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7164  0127E8  26D9               	addwf	fsr2l,f,c
  7165  0127EA  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7166  0127EC  22DA               	addwfc	fsr2h,f,c
  7167  0127EE  50DF               	movf	indf2,w,c
  7168  0127F0  EC0F  F0A2         	call	_d_to_x
  7169  0127F4  010F               	movlb	15	; () banked
  7170  0127F6  6F3B               	movwf	59,b	;volatile
  7171                           
  7172                           ; BSR set to: 15
  7173                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR0 = 0;
  7174  0127F8  010F               	movlb	15	; () banked
  7175  0127FA  913F               	bcf	63,0,b	;volatile
  7176                           
  7177                           ; BSR set to: 15
  7178                           ;My_RTCC.c: 121: RTCCFGbits.RTCPTR1 = 0;
  7179  0127FC  010F               	movlb	15	; () banked
  7180  0127FE  933F               	bcf	63,1,b	;volatile
  7181                           
  7182                           ; BSR set to: 15
  7183                           ;My_RTCC.c: 122: RTCVALL = d_to_x(tm->ss);
  7184  012800  0100               	movlb	0	; () banked
  7185  012802  EE20 F004          	lfsr	2,4
  7186  012806  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7187  012808  26D9               	addwf	fsr2l,f,c
  7188  01280A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7189  01280C  22DA               	addwfc	fsr2h,f,c
  7190  01280E  50DF               	movf	indf2,w,c
  7191  012810  EC0F  F0A2         	call	_d_to_x
  7192  012814  010F               	movlb	15	; () banked
  7193  012816  6F3A               	movwf	58,b	;volatile
  7194                           
  7195                           ; BSR set to: 15
  7196                           ;My_RTCC.c: 123: RTCVALH = d_to_x(tm->mm);
  7197  012818  0100               	movlb	0	; () banked
  7198  01281A  EE20 F005          	lfsr	2,5
  7199  01281E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7200  012820  26D9               	addwf	fsr2l,f,c
  7201  012822  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7202  012824  22DA               	addwfc	fsr2h,f,c
  7203  012826  50DF               	movf	indf2,w,c
  7204  012828  EC0F  F0A2         	call	_d_to_x
  7205  01282C  010F               	movlb	15	; () banked
  7206  01282E  6F3B               	movwf	59,b	;volatile
  7207                           
  7208                           ; BSR set to: 15
  7209  012830  0012               	return		;funcret
  7210  012832                     __end_of_caltime_to_RTCC:
  7211                           	opt stack 0
  7212                           tblptru	equ	0xFF8
  7213                           tblptrh	equ	0xFF7
  7214                           tblptrl	equ	0xFF6
  7215                           tablat	equ	0xFF5
  7216                           prodh	equ	0xFF4
  7217                           prodl	equ	0xFF3
  7218                           intcon	equ	0xFF2
  7219                           intcon2	equ	0xFF1
  7220                           postinc0	equ	0xFEE
  7221                           wreg	equ	0xFE8
  7222                           indf1	equ	0xFE7
  7223                           postinc1	equ	0xFE6
  7224                           postdec1	equ	0xFE5
  7225                           fsr1h	equ	0xFE2
  7226                           fsr1l	equ	0xFE1
  7227                           indf2	equ	0xFDF
  7228                           postinc2	equ	0xFDE
  7229                           postdec2	equ	0xFDD
  7230                           fsr2h	equ	0xFDA
  7231                           fsr2l	equ	0xFD9
  7232                           status	equ	0xFD8
  7233                           
  7234 ;; *************** function _d_to_x *****************
  7235 ;; Defined at:
  7236 ;;		line 46 in file "../My_library/My_RTCC.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  dec             1    wreg     unsigned char 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;  dec             1    8[BANK0 ] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      unsigned char 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7253 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7254 ;;Total ram usage:        1 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:   12
  7257 ;; This function calls:
  7258 ;;		___awdiv
  7259 ;; This function is called by:
  7260 ;;		_caltime_to_RTCC
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text28
  7265  01441E                     __ptext28:
  7266                           	opt stack 0
  7267  01441E                     _d_to_x:
  7268                           	opt stack 12
  7269                           
  7270                           ; BSR set to: 15
  7271                           ;incstack = 0
  7272                           ;d_to_x@dec stored from wreg
  7273  01441E  0100               	movlb	0	; () banked
  7274  014420  6F68               	movwf	d_to_x@dec& (0+255),b
  7275                           
  7276                           ;My_RTCC.c: 49: return dec / 10 * 6 + dec;
  7277  014422  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  7278  014426  0100               	movlb	0	; () banked
  7279  014428  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7280  01442A  0E00               	movlw	0
  7281  01442C  0100               	movlb	0	; () banked
  7282  01442E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7283  014430  0E0A               	movlw	10
  7284  014432  6F62               	movwf	___awdiv@divisor& (0+255),b
  7285  014434  ECED  F096         	call	___awdiv	;wreg free
  7286  014438  0100               	movlb	0	; () banked
  7287  01443A  5160               	movf	?___awdiv& (0+255),w,b
  7288  01443C  0D06               	mullw	6
  7289  01443E  50F3               	movf	prodl,w,c
  7290  014440  0100               	movlb	0	; () banked
  7291  014442  2568               	addwf	d_to_x@dec& (0+255),w,b
  7292  014444  0012               	return	
  7293  014446                     __end_of_d_to_x:
  7294                           	opt stack 0
  7295                           tblptru	equ	0xFF8
  7296                           tblptrh	equ	0xFF7
  7297                           tblptrl	equ	0xFF6
  7298                           tablat	equ	0xFF5
  7299                           prodh	equ	0xFF4
  7300                           prodl	equ	0xFF3
  7301                           intcon	equ	0xFF2
  7302                           intcon2	equ	0xFF1
  7303                           postinc0	equ	0xFEE
  7304                           wreg	equ	0xFE8
  7305                           indf1	equ	0xFE7
  7306                           postinc1	equ	0xFE6
  7307                           postdec1	equ	0xFE5
  7308                           fsr1h	equ	0xFE2
  7309                           fsr1l	equ	0xFE1
  7310                           indf2	equ	0xFDF
  7311                           postinc2	equ	0xFDE
  7312                           postdec2	equ	0xFDD
  7313                           fsr2h	equ	0xFDA
  7314                           fsr2l	equ	0xFD9
  7315                           status	equ	0xFD8
  7316                           
  7317 ;; *************** function ___awdiv *****************
  7318 ;; Defined at:
  7319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  dividend        2    0[BANK0 ] int 
  7322 ;;  divisor         2    2[BANK0 ] int 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;  quotient        2    6[BANK0 ] int 
  7325 ;;  sign            1    5[BANK0 ] unsigned char 
  7326 ;;  counter         1    4[BANK0 ] unsigned char 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  2    0[BANK0 ] int 
  7329 ;; Registers used:
  7330 ;;		wreg, status,2, status,0
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7336 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7337 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7339 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7340 ;;Total ram usage:        8 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:   11
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_d_to_x
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text29
  7351  012DDA                     __ptext29:
  7352                           	opt stack 0
  7353  012DDA                     ___awdiv:
  7354                           	opt stack 12
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;incstack = 0
  7358  012DDA  0E00               	movlw	0
  7359  012DDC  0100               	movlb	0	; () banked
  7360  012DDE  6F65               	movwf	___awdiv@sign& (0+255),b
  7361                           
  7362                           ; BSR set to: 0
  7363  012DE0  0100               	movlb	0	; () banked
  7364  012DE2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7365  012DE4  D008               	goto	l8212
  7366                           
  7367                           ; BSR set to: 0
  7368  012DE6  0100               	movlb	0	; () banked
  7369  012DE8  6D62               	negf	___awdiv@divisor& (0+255),b
  7370  012DEA  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7371  012DEC  B0D8               	btfsc	status,0,c
  7372  012DEE  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7373                           
  7374                           ; BSR set to: 0
  7375  012DF0  0E01               	movlw	1
  7376  012DF2  0100               	movlb	0	; () banked
  7377  012DF4  6F65               	movwf	___awdiv@sign& (0+255),b
  7378  012DF6                     l8212:
  7379                           
  7380                           ; BSR set to: 0
  7381  012DF6  0100               	movlb	0	; () banked
  7382  012DF8  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7383  012DFA  D008               	goto	l8218
  7384                           
  7385                           ; BSR set to: 0
  7386  012DFC  0100               	movlb	0	; () banked
  7387  012DFE  6D60               	negf	___awdiv@dividend& (0+255),b
  7388  012E00  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7389  012E02  B0D8               	btfsc	status,0,c
  7390  012E04  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7391                           
  7392                           ; BSR set to: 0
  7393  012E06  0E01               	movlw	1
  7394  012E08  0100               	movlb	0	; () banked
  7395  012E0A  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7396  012E0C                     l8218:
  7397                           
  7398                           ; BSR set to: 0
  7399  012E0C  0E00               	movlw	0
  7400  012E0E  0100               	movlb	0	; () banked
  7401  012E10  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7402  012E12  0E00               	movlw	0
  7403  012E14  6F66               	movwf	___awdiv@quotient& (0+255),b
  7404                           
  7405                           ; BSR set to: 0
  7406  012E16  0100               	movlb	0	; () banked
  7407  012E18  5162               	movf	___awdiv@divisor& (0+255),w,b
  7408  012E1A  0100               	movlb	0	; () banked
  7409  012E1C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7410  012E1E  B4D8               	btfsc	status,2,c
  7411  012E20  D02C               	goto	l8240
  7412                           
  7413                           ; BSR set to: 0
  7414  012E22  0E01               	movlw	1
  7415  012E24  0100               	movlb	0	; () banked
  7416  012E26  6F64               	movwf	___awdiv@counter& (0+255),b
  7417  012E28  D006               	goto	l8226
  7418  012E2A                     l8224:
  7419                           
  7420                           ; BSR set to: 0
  7421  012E2A  0100               	movlb	0	; () banked
  7422  012E2C  90D8               	bcf	status,0,c
  7423  012E2E  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7424  012E30  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7425  012E32  0100               	movlb	0	; () banked
  7426  012E34  2B64               	incf	___awdiv@counter& (0+255),f,b
  7427  012E36                     l8226:
  7428                           
  7429                           ; BSR set to: 0
  7430  012E36  0100               	movlb	0	; () banked
  7431  012E38  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7432  012E3A  D7F7               	goto	l8224
  7433  012E3C                     l8228:
  7434                           
  7435                           ; BSR set to: 0
  7436  012E3C  0100               	movlb	0	; () banked
  7437  012E3E  90D8               	bcf	status,0,c
  7438  012E40  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7439  012E42  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7440                           
  7441                           ; BSR set to: 0
  7442  012E44  0100               	movlb	0	; () banked
  7443  012E46  5162               	movf	___awdiv@divisor& (0+255),w,b
  7444  012E48  0100               	movlb	0	; () banked
  7445  012E4A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7446  012E4C  0100               	movlb	0	; () banked
  7447  012E4E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7448  012E50  0100               	movlb	0	; () banked
  7449  012E52  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7450  012E54  A0D8               	btfss	status,0,c
  7451  012E56  D00A               	goto	l8236
  7452                           
  7453                           ; BSR set to: 0
  7454  012E58  0100               	movlb	0	; () banked
  7455  012E5A  5162               	movf	___awdiv@divisor& (0+255),w,b
  7456  012E5C  0100               	movlb	0	; () banked
  7457  012E5E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7458  012E60  0100               	movlb	0	; () banked
  7459  012E62  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7460  012E64  0100               	movlb	0	; () banked
  7461  012E66  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7462                           
  7463                           ; BSR set to: 0
  7464  012E68  0100               	movlb	0	; () banked
  7465  012E6A  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7466  012E6C                     l8236:
  7467                           
  7468                           ; BSR set to: 0
  7469  012E6C  0100               	movlb	0	; () banked
  7470  012E6E  90D8               	bcf	status,0,c
  7471  012E70  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7472  012E72  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7473                           
  7474                           ; BSR set to: 0
  7475  012E74  0100               	movlb	0	; () banked
  7476  012E76  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7477  012E78  D7E1               	goto	l8228
  7478  012E7A                     l8240:
  7479                           
  7480                           ; BSR set to: 0
  7481  012E7A  0100               	movlb	0	; () banked
  7482  012E7C  5165               	movf	___awdiv@sign& (0+255),w,b
  7483  012E7E  0100               	movlb	0	; () banked
  7484  012E80  B4D8               	btfsc	status,2,c
  7485  012E82  D005               	goto	l8244
  7486                           
  7487                           ; BSR set to: 0
  7488  012E84  0100               	movlb	0	; () banked
  7489  012E86  6D66               	negf	___awdiv@quotient& (0+255),b
  7490  012E88  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7491  012E8A  B0D8               	btfsc	status,0,c
  7492  012E8C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7493  012E8E                     l8244:
  7494                           
  7495                           ; BSR set to: 0
  7496  012E8E  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7497  012E92  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7498  012E96  0012               	return	
  7499  012E98                     __end_of___awdiv:
  7500                           	opt stack 0
  7501                           tblptru	equ	0xFF8
  7502                           tblptrh	equ	0xFF7
  7503                           tblptrl	equ	0xFF6
  7504                           tablat	equ	0xFF5
  7505                           prodh	equ	0xFF4
  7506                           prodl	equ	0xFF3
  7507                           intcon	equ	0xFF2
  7508                           intcon2	equ	0xFF1
  7509                           postinc0	equ	0xFEE
  7510                           wreg	equ	0xFE8
  7511                           indf1	equ	0xFE7
  7512                           postinc1	equ	0xFE6
  7513                           postdec1	equ	0xFE5
  7514                           fsr1h	equ	0xFE2
  7515                           fsr1l	equ	0xFE1
  7516                           indf2	equ	0xFDF
  7517                           postinc2	equ	0xFDE
  7518                           postdec2	equ	0xFDD
  7519                           fsr2h	equ	0xFDA
  7520                           fsr2l	equ	0xFD9
  7521                           status	equ	0xFD8
  7522                           
  7523 ;; *************** function _OSC_init *****************
  7524 ;; Defined at:
  7525 ;;		line 8 in file "../My_library/My_PIC.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;		None
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;		None               void
  7532 ;; Registers used:
  7533 ;;		wreg, status,2
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7543 ;;Total ram usage:        0 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:   11
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_main_init
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text30
  7554  014598                     __ptext30:
  7555                           	opt stack 0
  7556  014598                     _OSC_init:
  7557                           	opt stack 18
  7558                           
  7559                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;incstack = 0
  7563  014598  88D3               	bsf	4051,4,c	;volatile
  7564  01459A  8AD3               	bsf	4051,5,c	;volatile
  7565  01459C  8CD3               	bsf	4051,6,c	;volatile
  7566                           
  7567                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  7568  01459E  8C9B               	bsf	3995,6,c	;volatile
  7569                           
  7570                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  7571  0145A0  0EFC               	movlw	-4
  7572  0145A2  16D3               	andwf	4051,f,c	;volatile
  7573  0145A4  0012               	return		;funcret
  7574  0145A6                     __end_of_OSC_init:
  7575                           	opt stack 0
  7576                           tblptru	equ	0xFF8
  7577                           tblptrh	equ	0xFF7
  7578                           tblptrl	equ	0xFF6
  7579                           tablat	equ	0xFF5
  7580                           prodh	equ	0xFF4
  7581                           prodl	equ	0xFF3
  7582                           intcon	equ	0xFF2
  7583                           intcon2	equ	0xFF1
  7584                           postinc0	equ	0xFEE
  7585                           wreg	equ	0xFE8
  7586                           indf1	equ	0xFE7
  7587                           postinc1	equ	0xFE6
  7588                           postdec1	equ	0xFE5
  7589                           fsr1h	equ	0xFE2
  7590                           fsr1l	equ	0xFE1
  7591                           indf2	equ	0xFDF
  7592                           postinc2	equ	0xFDE
  7593                           postdec2	equ	0xFDD
  7594                           fsr2h	equ	0xFDA
  7595                           fsr2l	equ	0xFD9
  7596                           status	equ	0xFD8
  7597                           
  7598 ;; *************** function _I2C_LCD_init *****************
  7599 ;; Defined at:
  7600 ;;		line 62 in file "../My_library/My_I2C_LCD.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;		None
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;		None
  7605 ;; Return value:  Size  Location     Type
  7606 ;;		None               void
  7607 ;; Registers used:
  7608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7618 ;;Total ram usage:        0 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:   15
  7621 ;; This function calls:
  7622 ;;		_I2C_LCD_clear
  7623 ;;		_I2C_LCD_command
  7624 ;;		_ringbuf_init
  7625 ;;		_ringbuf_put
  7626 ;; This function is called by:
  7627 ;;		_main_init
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text31
  7632  012312                     __ptext31:
  7633                           	opt stack 0
  7634  012312                     _I2C_LCD_init:
  7635                           	opt stack 14
  7636                           
  7637                           ;My_I2C_LCD.c: 63: SSP1STAT = 0b10000000;
  7638                           
  7639                           ;incstack = 0
  7640  012312  0E80               	movlw	128
  7641  012314  6EC7               	movwf	4039,c	;volatile
  7642                           
  7643                           ;My_I2C_LCD.c: 64: SSP1CON1 = 0b00101000;
  7644  012316  0E28               	movlw	40
  7645  012318  6EC6               	movwf	4038,c	;volatile
  7646                           
  7647                           ;My_I2C_LCD.c: 65: SSP1ADD = 0x13;
  7648  01231A  0E13               	movlw	19
  7649  01231C  6EC8               	movwf	4040,c	;volatile
  7650                           
  7651                           ;My_I2C_LCD.c: 66: PIE1bits.SSP1IE = 1;
  7652  01231E  869D               	bsf	3997,3,c	;volatile
  7653                           
  7654                           ;My_I2C_LCD.c: 67: IPR1bits.SSP1IP = 0;
  7655  012320  969F               	bcf	3999,3,c	;volatile
  7656                           
  7657                           ;My_I2C_LCD.c: 68: PIR1bits.SSP1IF = 0;
  7658  012322  969E               	bcf	3998,3,c	;volatile
  7659                           
  7660                           ;My_I2C_LCD.c: 69: PIE2bits.BCL1IE = 1;
  7661  012324  86A0               	bsf	4000,3,c	;volatile
  7662                           
  7663                           ;My_I2C_LCD.c: 70: IPR2bits.BCL1IP = 0;
  7664  012326  96A2               	bcf	4002,3,c	;volatile
  7665                           
  7666                           ;My_I2C_LCD.c: 71: PIR2bits.BCL1IF = 0;
  7667  012328  96A1               	bcf	4001,3,c	;volatile
  7668                           
  7669                           ;My_I2C_LCD.c: 72: INTCONbits.PEIE = 1;
  7670  01232A  8CF2               	bsf	intcon,6,c	;volatile
  7671                           
  7672                           ;My_I2C_LCD.c: 74: static char buf[200];
  7673                           ;My_I2C_LCD.c: 75: ringbuf_init(&lcd_tx, buf, sizeof (buf));
  7674  01232C  0ED4               	movlw	low _lcd_tx
  7675  01232E  0100               	movlb	0	; () banked
  7676  012330  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7677  012332  0E00               	movlw	high _lcd_tx
  7678  012334  0100               	movlb	0	; () banked
  7679  012336  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7680  012338  0E00               	movlw	low I2C_LCD_init@buf
  7681  01233A  0100               	movlb	0	; () banked
  7682  01233C  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7683  01233E  0E04               	movlw	high I2C_LCD_init@buf
  7684  012340  0100               	movlb	0	; () banked
  7685  012342  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7686  012344  0E00               	movlw	0
  7687  012346  0100               	movlb	0	; () banked
  7688  012348  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7689  01234A  0EC8               	movlw	200
  7690  01234C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7691  01234E  ECD3  F09F         	call	_ringbuf_init	;wreg free
  7692                           
  7693                           ;My_I2C_LCD.c: 77: ringbuf_put(&lcd_tx, 0);
  7694  012352  0ED4               	movlw	low _lcd_tx
  7695  012354  0100               	movlb	0	; () banked
  7696  012356  6F68               	movwf	ringbuf_put@rb& (0+255),b
  7697  012358  0E00               	movlw	high _lcd_tx
  7698  01235A  0100               	movlb	0	; () banked
  7699  01235C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  7700  01235E  0E00               	movlw	0
  7701  012360  0100               	movlb	0	; () banked
  7702  012362  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  7703  012364  EC83  F094         	call	_ringbuf_put	;wreg free
  7704                           
  7705                           ;My_I2C_LCD.c: 78: ringbuf_put(&lcd_tx, 3);
  7706  012368  0ED4               	movlw	low _lcd_tx
  7707  01236A  0100               	movlb	0	; () banked
  7708  01236C  6F68               	movwf	ringbuf_put@rb& (0+255),b
  7709  01236E  0E00               	movlw	high _lcd_tx
  7710  012370  0100               	movlb	0	; () banked
  7711  012372  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  7712  012374  0E03               	movlw	3
  7713  012376  0100               	movlb	0	; () banked
  7714  012378  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  7715  01237A  EC83  F094         	call	_ringbuf_put	;wreg free
  7716                           
  7717                           ;My_I2C_LCD.c: 80: I2C_LCD_command(0x38, 1);
  7718  01237E  0E01               	movlw	1
  7719  012380  0100               	movlb	0	; () banked
  7720  012382  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
  7721  012384  0E38               	movlw	56
  7722  012386  ECAE  F09D         	call	_I2C_LCD_command
  7723                           
  7724                           ;My_I2C_LCD.c: 81: I2C_LCD_command(0x39, 1);
  7725  01238A  0E01               	movlw	1
  7726  01238C  0100               	movlb	0	; () banked
  7727  01238E  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
  7728  012390  0E39               	movlw	57
  7729  012392  ECAE  F09D         	call	_I2C_LCD_command
  7730                           
  7731                           ;My_I2C_LCD.c: 82: I2C_LCD_command(0x14, 1);
  7732  012396  0E01               	movlw	1
  7733  012398  0100               	movlb	0	; () banked
  7734  01239A  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
  7735  01239C  0E14               	movlw	20
  7736  01239E  ECAE  F09D         	call	_I2C_LCD_command
  7737                           
  7738                           ;My_I2C_LCD.c: 83: I2C_LCD_command(0x70, 1);
  7739  0123A2  0E01               	movlw	1
  7740  0123A4  0100               	movlb	0	; () banked
  7741  0123A6  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
  7742  0123A8  0E70               	movlw	112
  7743  0123AA  ECAE  F09D         	call	_I2C_LCD_command
  7744                           
  7745                           ;My_I2C_LCD.c: 84: I2C_LCD_command(0x56, 1);
  7746  0123AE  0E01               	movlw	1
  7747  0123B0  0100               	movlb	0	; () banked
  7748  0123B2  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
  7749  0123B4  0E56               	movlw	86
  7750  0123B6  ECAE  F09D         	call	_I2C_LCD_command
  7751                           
  7752                           ;My_I2C_LCD.c: 85: I2C_LCD_command(0x6C, 3);
  7753  0123BA  0E03               	movlw	3
  7754  0123BC  0100               	movlb	0	; () banked
  7755  0123BE  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
  7756  0123C0  0E6C               	movlw	108
  7757  0123C2  ECAE  F09D         	call	_I2C_LCD_command
  7758                           
  7759                           ;My_I2C_LCD.c: 86: I2C_LCD_command(0x38, 1);
  7760  0123C6  0E01               	movlw	1
  7761  0123C8  0100               	movlb	0	; () banked
  7762  0123CA  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
  7763  0123CC  0E38               	movlw	56
  7764  0123CE  ECAE  F09D         	call	_I2C_LCD_command
  7765                           
  7766                           ;My_I2C_LCD.c: 87: I2C_LCD_command(0x0C, 1);
  7767  0123D2  0E01               	movlw	1
  7768  0123D4  0100               	movlb	0	; () banked
  7769  0123D6  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
  7770  0123D8  0E0C               	movlw	12
  7771  0123DA  ECAE  F09D         	call	_I2C_LCD_command
  7772                           
  7773                           ;My_I2C_LCD.c: 88: I2C_LCD_command(0x06, 1);
  7774  0123DE  0E01               	movlw	1
  7775  0123E0  0100               	movlb	0	; () banked
  7776  0123E2  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
  7777  0123E4  0E06               	movlw	6
  7778  0123E6  ECAE  F09D         	call	_I2C_LCD_command
  7779                           
  7780                           ;My_I2C_LCD.c: 89: I2C_LCD_clear();
  7781  0123EA  ECD3  F0A2         	call	_I2C_LCD_clear	;wreg free
  7782  0123EE  0012               	return		;funcret
  7783  0123F0                     __end_of_I2C_LCD_init:
  7784                           	opt stack 0
  7785                           tblptru	equ	0xFF8
  7786                           tblptrh	equ	0xFF7
  7787                           tblptrl	equ	0xFF6
  7788                           tablat	equ	0xFF5
  7789                           prodh	equ	0xFF4
  7790                           prodl	equ	0xFF3
  7791                           intcon	equ	0xFF2
  7792                           intcon2	equ	0xFF1
  7793                           postinc0	equ	0xFEE
  7794                           wreg	equ	0xFE8
  7795                           indf1	equ	0xFE7
  7796                           postinc1	equ	0xFE6
  7797                           postdec1	equ	0xFE5
  7798                           fsr1h	equ	0xFE2
  7799                           fsr1l	equ	0xFE1
  7800                           indf2	equ	0xFDF
  7801                           postinc2	equ	0xFDE
  7802                           postdec2	equ	0xFDD
  7803                           fsr2h	equ	0xFDA
  7804                           fsr2l	equ	0xFD9
  7805                           status	equ	0xFD8
  7806                           
  7807 ;; *************** function _ringbuf_init *****************
  7808 ;; Defined at:
  7809 ;;		line 5 in file "../My_library/My_ringbuf.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7812 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  7813 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  7814 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7815 ;;		 -> main_init@uartrx(100), main_init@uarttx(1000), main_init@usbrx(100), main_init@usbtx(1000), 
  7816 ;;		 -> terminal_task@buf(100), I2C_LCD_init@buf(200), 
  7817 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;		None               void
  7822 ;; Registers used:
  7823 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7829 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7832 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;Total ram usage:        6 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:   11
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_I2C_LCD_init
  7840 ;;		_terminal_task
  7841 ;;		_main_init
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text32
  7846  013FA6                     __ptext32:
  7847                           	opt stack 0
  7848  013FA6                     _ringbuf_init:
  7849                           	opt stack 18
  7850                           
  7851                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  7852                           
  7853                           ;incstack = 0
  7854  013FA6  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7855  013FAA  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7856  013FAE  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7857  013FB2  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7858                           
  7859                           ;My_ringbuf.c: 7: rb->size = bufsize;
  7860  013FB6  0100               	movlb	0	; () banked
  7861  013FB8  EE20 F002          	lfsr	2,2
  7862  013FBC  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7863  013FBE  26D9               	addwf	fsr2l,f,c
  7864  013FC0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7865  013FC2  22DA               	addwfc	fsr2h,f,c
  7866  013FC4  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7867  013FC8  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;My_ringbuf.c: 8: rb->head = 0;
  7871  013FCC  0100               	movlb	0	; () banked
  7872  013FCE  EE20 F004          	lfsr	2,4
  7873  013FD2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7874  013FD4  26D9               	addwf	fsr2l,f,c
  7875  013FD6  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7876  013FD8  22DA               	addwfc	fsr2h,f,c
  7877  013FDA  0E00               	movlw	0
  7878  013FDC  6EDE               	movwf	postinc2,c
  7879  013FDE  0E00               	movlw	0
  7880  013FE0  6EDD               	movwf	postdec2,c
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;My_ringbuf.c: 9: rb->tail = 0;
  7884  013FE2  0100               	movlb	0	; () banked
  7885  013FE4  EE20 F006          	lfsr	2,6
  7886  013FE8  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7887  013FEA  26D9               	addwf	fsr2l,f,c
  7888  013FEC  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7889  013FEE  22DA               	addwfc	fsr2h,f,c
  7890  013FF0  0E00               	movlw	0
  7891  013FF2  6EDE               	movwf	postinc2,c
  7892  013FF4  0E00               	movlw	0
  7893  013FF6  6EDD               	movwf	postdec2,c
  7894                           
  7895                           ; BSR set to: 0
  7896  013FF8  0012               	return		;funcret
  7897  013FFA                     __end_of_ringbuf_init:
  7898                           	opt stack 0
  7899                           tblptru	equ	0xFF8
  7900                           tblptrh	equ	0xFF7
  7901                           tblptrl	equ	0xFF6
  7902                           tablat	equ	0xFF5
  7903                           prodh	equ	0xFF4
  7904                           prodl	equ	0xFF3
  7905                           intcon	equ	0xFF2
  7906                           intcon2	equ	0xFF1
  7907                           postinc0	equ	0xFEE
  7908                           wreg	equ	0xFE8
  7909                           indf1	equ	0xFE7
  7910                           postinc1	equ	0xFE6
  7911                           postdec1	equ	0xFE5
  7912                           fsr1h	equ	0xFE2
  7913                           fsr1l	equ	0xFE1
  7914                           indf2	equ	0xFDF
  7915                           postinc2	equ	0xFDE
  7916                           postdec2	equ	0xFDD
  7917                           fsr2h	equ	0xFDA
  7918                           fsr2l	equ	0xFD9
  7919                           status	equ	0xFD8
  7920                           
  7921 ;; *************** function _I2C_LCD_clear *****************
  7922 ;; Defined at:
  7923 ;;		line 26 in file "../My_library/My_I2C_LCD.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;		None
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;		None
  7928 ;; Return value:  Size  Location     Type
  7929 ;;		None               void
  7930 ;; Registers used:
  7931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7941 ;;Total ram usage:        0 bytes
  7942 ;; Hardware stack levels used:    1
  7943 ;; Hardware stack levels required when called:   14
  7944 ;; This function calls:
  7945 ;;		_I2C_LCD_command
  7946 ;; This function is called by:
  7947 ;;		_I2C_LCD_init
  7948 ;;		_main
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           	psect	text33
  7953  0145A6                     __ptext33:
  7954                           	opt stack 0
  7955  0145A6                     _I2C_LCD_clear:
  7956                           	opt stack 14
  7957                           
  7958                           ;My_I2C_LCD.c: 27: I2C_LCD_command(0x01, 2);
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;incstack = 0
  7962  0145A6  0E02               	movlw	2
  7963  0145A8  0100               	movlb	0	; () banked
  7964  0145AA  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
  7965  0145AC  0E01               	movlw	1
  7966  0145AE  ECAE  F09D         	call	_I2C_LCD_command
  7967  0145B2  0012               	return		;funcret
  7968  0145B4                     __end_of_I2C_LCD_clear:
  7969                           	opt stack 0
  7970                           tblptru	equ	0xFF8
  7971                           tblptrh	equ	0xFF7
  7972                           tblptrl	equ	0xFF6
  7973                           tablat	equ	0xFF5
  7974                           prodh	equ	0xFF4
  7975                           prodl	equ	0xFF3
  7976                           intcon	equ	0xFF2
  7977                           intcon2	equ	0xFF1
  7978                           postinc0	equ	0xFEE
  7979                           wreg	equ	0xFE8
  7980                           indf1	equ	0xFE7
  7981                           postinc1	equ	0xFE6
  7982                           postdec1	equ	0xFE5
  7983                           fsr1h	equ	0xFE2
  7984                           fsr1l	equ	0xFE1
  7985                           indf2	equ	0xFDF
  7986                           postinc2	equ	0xFDE
  7987                           postdec2	equ	0xFDD
  7988                           fsr2h	equ	0xFDA
  7989                           fsr2l	equ	0xFD9
  7990                           status	equ	0xFD8
  7991                           
  7992 ;; *************** function _display_time_0802 *****************
  7993 ;; Defined at:
  7994 ;;		line 225 in file "../My_library/My_RTCC.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;  tm              2   55[BANK0 ] PTR struct .
  7997 ;;		 -> now(14), 
  7998 ;;  line0           2   57[BANK0 ] PTR unsigned char 
  7999 ;;		 -> main@s(40), 
  8000 ;;  line1           2   59[BANK0 ] PTR unsigned char 
  8001 ;;		 -> main@s(40), 
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;		None
  8004 ;; Return value:  Size  Location     Type
  8005 ;;		None               void
  8006 ;; Registers used:
  8007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8013 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8016 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8017 ;;Total ram usage:        6 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:   15
  8020 ;; This function calls:
  8021 ;;		_RTCC_from_RTCC
  8022 ;;		_display_dec
  8023 ;;		_strcat
  8024 ;;		_strcpy
  8025 ;; This function is called by:
  8026 ;;		_main
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text34
  8031  011086                     __ptext34:
  8032                           	opt stack 0
  8033  011086                     _display_time_0802:
  8034                           	opt stack 15
  8035                           
  8036                           ;My_RTCC.c: 226: RTCC_from_RTCC(&now);
  8037                           
  8038                           ;incstack = 0
  8039  011086  0E35               	movlw	low _now
  8040  011088  0100               	movlb	0	; () banked
  8041  01108A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  8042  01108C  0E01               	movlw	high _now
  8043  01108E  0100               	movlb	0	; () banked
  8044  011090  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  8045  011092  ECB3  F0A2         	call	_RTCC_from_RTCC	;wreg free
  8046                           
  8047                           ;My_RTCC.c: 228: strcpy(line0, "");
  8048  011096  C099  F060         	movff	display_time_0802@line0,strcpy@to
  8049  01109A  C09A  F061         	movff	display_time_0802@line0+1,strcpy@to+1
  8050  01109E  0EE6               	movlw	low (STR_19+3)
  8051  0110A0  0100               	movlb	0	; () banked
  8052  0110A2  6F62               	movwf	strcpy@from& (0+255),b
  8053  0110A4  0EFF               	movlw	high (STR_19+3)
  8054  0110A6  0100               	movlb	0	; () banked
  8055  0110A8  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8056  0110AA  EC08  F0A1         	call	_strcpy	;wreg free
  8057                           
  8058                           ;My_RTCC.c: 229: display_dec(line0, tm->YY, tm->edit.flag.YY);
  8059  0110AE  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  8060  0110B2  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  8061  0110B6  0100               	movlb	0	; () banked
  8062  0110B8  EE20 F00A          	lfsr	2,10
  8063  0110BC  5197               	movf	display_time_0802@tm& (0+255),w,b
  8064  0110BE  26D9               	addwf	fsr2l,f,c
  8065  0110C0  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8066  0110C2  22DA               	addwfc	fsr2h,f,c
  8067  0110C4  50DF               	movf	indf2,w,c
  8068  0110C6  0100               	movlb	0	; () banked
  8069  0110C8  6F91               	movwf	display_dec@dec& (0+255),b
  8070  0110CA  0100               	movlb	0	; () banked
  8071  0110CC  EE20 F00D          	lfsr	2,13
  8072  0110D0  5197               	movf	display_time_0802@tm& (0+255),w,b
  8073  0110D2  26D9               	addwf	fsr2l,f,c
  8074  0110D4  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8075  0110D6  22DA               	addwfc	fsr2h,f,c
  8076  0110D8  0E00               	movlw	0
  8077  0110DA  BADF               	btfsc	indf2,5,c
  8078  0110DC  0E01               	movlw	1
  8079  0110DE  0100               	movlb	0	; () banked
  8080  0110E0  6F92               	movwf	display_dec@edit& (0+255),b
  8081  0110E2  EC52  F09E         	call	_display_dec	;wreg free
  8082                           
  8083                           ;My_RTCC.c: 230: strcat(line0, "/");
  8084  0110E6  C099  F060         	movff	display_time_0802@line0,strcat@to
  8085  0110EA  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  8086  0110EE  0EFA               	movlw	low STR_4
  8087  0110F0  0100               	movlb	0	; () banked
  8088  0110F2  6F62               	movwf	strcat@from& (0+255),b
  8089  0110F4  0EFF               	movlw	high STR_4
  8090  0110F6  0100               	movlb	0	; () banked
  8091  0110F8  6F63               	movwf	(strcat@from+1)& (0+255),b
  8092  0110FA  EC1B  F09F         	call	_strcat	;wreg free
  8093                           
  8094                           ;My_RTCC.c: 231: display_dec(line0, tm->MM, tm->edit.flag.MM);
  8095  0110FE  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  8096  011102  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  8097  011106  0100               	movlb	0	; () banked
  8098  011108  EE20 F009          	lfsr	2,9
  8099  01110C  5197               	movf	display_time_0802@tm& (0+255),w,b
  8100  01110E  26D9               	addwf	fsr2l,f,c
  8101  011110  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8102  011112  22DA               	addwfc	fsr2h,f,c
  8103  011114  50DF               	movf	indf2,w,c
  8104  011116  0100               	movlb	0	; () banked
  8105  011118  6F91               	movwf	display_dec@dec& (0+255),b
  8106  01111A  0100               	movlb	0	; () banked
  8107  01111C  EE20 F00D          	lfsr	2,13
  8108  011120  5197               	movf	display_time_0802@tm& (0+255),w,b
  8109  011122  26D9               	addwf	fsr2l,f,c
  8110  011124  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8111  011126  22DA               	addwfc	fsr2h,f,c
  8112  011128  0E00               	movlw	0
  8113  01112A  B8DF               	btfsc	indf2,4,c
  8114  01112C  0E01               	movlw	1
  8115  01112E  0100               	movlb	0	; () banked
  8116  011130  6F92               	movwf	display_dec@edit& (0+255),b
  8117  011132  EC52  F09E         	call	_display_dec	;wreg free
  8118                           
  8119                           ;My_RTCC.c: 232: strcat(line0, "/");
  8120  011136  C099  F060         	movff	display_time_0802@line0,strcat@to
  8121  01113A  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  8122  01113E  0EFA               	movlw	low STR_4
  8123  011140  0100               	movlb	0	; () banked
  8124  011142  6F62               	movwf	strcat@from& (0+255),b
  8125  011144  0EFF               	movlw	high STR_4
  8126  011146  0100               	movlb	0	; () banked
  8127  011148  6F63               	movwf	(strcat@from+1)& (0+255),b
  8128  01114A  EC1B  F09F         	call	_strcat	;wreg free
  8129                           
  8130                           ;My_RTCC.c: 233: display_dec(line0, tm->DD, tm->edit.flag.DD);
  8131  01114E  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  8132  011152  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  8133  011156  0100               	movlb	0	; () banked
  8134  011158  EE20 F008          	lfsr	2,8
  8135  01115C  5197               	movf	display_time_0802@tm& (0+255),w,b
  8136  01115E  26D9               	addwf	fsr2l,f,c
  8137  011160  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8138  011162  22DA               	addwfc	fsr2h,f,c
  8139  011164  50DF               	movf	indf2,w,c
  8140  011166  0100               	movlb	0	; () banked
  8141  011168  6F91               	movwf	display_dec@dec& (0+255),b
  8142  01116A  0100               	movlb	0	; () banked
  8143  01116C  EE20 F00D          	lfsr	2,13
  8144  011170  5197               	movf	display_time_0802@tm& (0+255),w,b
  8145  011172  26D9               	addwf	fsr2l,f,c
  8146  011174  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8147  011176  22DA               	addwfc	fsr2h,f,c
  8148  011178  0E00               	movlw	0
  8149  01117A  B6DF               	btfsc	indf2,3,c
  8150  01117C  0E01               	movlw	1
  8151  01117E  0100               	movlb	0	; () banked
  8152  011180  6F92               	movwf	display_dec@edit& (0+255),b
  8153  011182  EC52  F09E         	call	_display_dec	;wreg free
  8154                           
  8155                           ;My_RTCC.c: 235: strcpy(line1, "");
  8156  011186  C09B  F060         	movff	display_time_0802@line1,strcpy@to
  8157  01118A  C09C  F061         	movff	display_time_0802@line1+1,strcpy@to+1
  8158  01118E  0EE6               	movlw	low (STR_19+3)
  8159  011190  0100               	movlb	0	; () banked
  8160  011192  6F62               	movwf	strcpy@from& (0+255),b
  8161  011194  0EFF               	movlw	high (STR_19+3)
  8162  011196  0100               	movlb	0	; () banked
  8163  011198  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8164  01119A  EC08  F0A1         	call	_strcpy	;wreg free
  8165                           
  8166                           ;My_RTCC.c: 236: display_dec(line1, tm->hh, tm->edit.flag.hh);
  8167  01119E  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  8168  0111A2  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  8169  0111A6  0100               	movlb	0	; () banked
  8170  0111A8  EE20 F006          	lfsr	2,6
  8171  0111AC  5197               	movf	display_time_0802@tm& (0+255),w,b
  8172  0111AE  26D9               	addwf	fsr2l,f,c
  8173  0111B0  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8174  0111B2  22DA               	addwfc	fsr2h,f,c
  8175  0111B4  50DF               	movf	indf2,w,c
  8176  0111B6  0100               	movlb	0	; () banked
  8177  0111B8  6F91               	movwf	display_dec@dec& (0+255),b
  8178  0111BA  0100               	movlb	0	; () banked
  8179  0111BC  EE20 F00D          	lfsr	2,13
  8180  0111C0  5197               	movf	display_time_0802@tm& (0+255),w,b
  8181  0111C2  26D9               	addwf	fsr2l,f,c
  8182  0111C4  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8183  0111C6  22DA               	addwfc	fsr2h,f,c
  8184  0111C8  0E00               	movlw	0
  8185  0111CA  B4DF               	btfsc	indf2,2,c
  8186  0111CC  0E01               	movlw	1
  8187  0111CE  0100               	movlb	0	; () banked
  8188  0111D0  6F92               	movwf	display_dec@edit& (0+255),b
  8189  0111D2  EC52  F09E         	call	_display_dec	;wreg free
  8190                           
  8191                           ;My_RTCC.c: 237: if (now.colon) strcat(line1, ":");
  8192  0111D6  0101               	movlb	1	; () banked
  8193  0111D8  5140               	movf	(_now+11)& (0+255),w,b
  8194  0111DA  B4D8               	btfsc	status,2,c
  8195  0111DC  D00D               	goto	l9350
  8196                           
  8197                           ; BSR set to: 1
  8198  0111DE  C09B  F060         	movff	display_time_0802@line1,strcat@to
  8199  0111E2  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  8200  0111E6  0EFC               	movlw	low STR_7
  8201  0111E8  0100               	movlb	0	; () banked
  8202  0111EA  6F62               	movwf	strcat@from& (0+255),b
  8203  0111EC  0EFF               	movlw	high STR_7
  8204  0111EE  0100               	movlb	0	; () banked
  8205  0111F0  6F63               	movwf	(strcat@from+1)& (0+255),b
  8206  0111F2  EC1B  F09F         	call	_strcat	;wreg free
  8207  0111F6  D00C               	goto	l9352
  8208  0111F8                     l9350:
  8209                           
  8210                           ;My_RTCC.c: 238: else strcat(line1, " ");
  8211  0111F8  C09B  F060         	movff	display_time_0802@line1,strcat@to
  8212  0111FC  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  8213  011200  0EAA               	movlw	low (STR_15+7)
  8214  011202  0100               	movlb	0	; () banked
  8215  011204  6F62               	movwf	strcat@from& (0+255),b
  8216  011206  0EFF               	movlw	high (STR_15+7)
  8217  011208  0100               	movlb	0	; () banked
  8218  01120A  6F63               	movwf	(strcat@from+1)& (0+255),b
  8219  01120C  EC1B  F09F         	call	_strcat	;wreg free
  8220  011210                     l9352:
  8221                           
  8222                           ;My_RTCC.c: 239: display_dec(line1, tm->mm, tm->edit.flag.mm);
  8223  011210  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  8224  011214  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  8225  011218  0100               	movlb	0	; () banked
  8226  01121A  EE20 F005          	lfsr	2,5
  8227  01121E  5197               	movf	display_time_0802@tm& (0+255),w,b
  8228  011220  26D9               	addwf	fsr2l,f,c
  8229  011222  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8230  011224  22DA               	addwfc	fsr2h,f,c
  8231  011226  50DF               	movf	indf2,w,c
  8232  011228  0100               	movlb	0	; () banked
  8233  01122A  6F91               	movwf	display_dec@dec& (0+255),b
  8234  01122C  0100               	movlb	0	; () banked
  8235  01122E  EE20 F00D          	lfsr	2,13
  8236  011232  5197               	movf	display_time_0802@tm& (0+255),w,b
  8237  011234  26D9               	addwf	fsr2l,f,c
  8238  011236  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8239  011238  22DA               	addwfc	fsr2h,f,c
  8240  01123A  0E00               	movlw	0
  8241  01123C  B2DF               	btfsc	indf2,1,c
  8242  01123E  0E01               	movlw	1
  8243  011240  0100               	movlb	0	; () banked
  8244  011242  6F92               	movwf	display_dec@edit& (0+255),b
  8245  011244  EC52  F09E         	call	_display_dec	;wreg free
  8246                           
  8247                           ;My_RTCC.c: 240: strcat(line1, "-");
  8248  011248  C09B  F060         	movff	display_time_0802@line1,strcat@to
  8249  01124C  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  8250  011250  0EF8               	movlw	low STR_9
  8251  011252  0100               	movlb	0	; () banked
  8252  011254  6F62               	movwf	strcat@from& (0+255),b
  8253  011256  0EFF               	movlw	high STR_9
  8254  011258  0100               	movlb	0	; () banked
  8255  01125A  6F63               	movwf	(strcat@from+1)& (0+255),b
  8256  01125C  EC1B  F09F         	call	_strcat	;wreg free
  8257                           
  8258                           ;My_RTCC.c: 241: display_dec(line1, tm->ss, tm->edit.flag.ss);
  8259  011260  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  8260  011264  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  8261  011268  0100               	movlb	0	; () banked
  8262  01126A  EE20 F004          	lfsr	2,4
  8263  01126E  5197               	movf	display_time_0802@tm& (0+255),w,b
  8264  011270  26D9               	addwf	fsr2l,f,c
  8265  011272  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8266  011274  22DA               	addwfc	fsr2h,f,c
  8267  011276  50DF               	movf	indf2,w,c
  8268  011278  0100               	movlb	0	; () banked
  8269  01127A  6F91               	movwf	display_dec@dec& (0+255),b
  8270  01127C  0100               	movlb	0	; () banked
  8271  01127E  EE20 F00D          	lfsr	2,13
  8272  011282  5197               	movf	display_time_0802@tm& (0+255),w,b
  8273  011284  26D9               	addwf	fsr2l,f,c
  8274  011286  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8275  011288  22DA               	addwfc	fsr2h,f,c
  8276  01128A  0E00               	movlw	0
  8277  01128C  B0DF               	btfsc	indf2,0,c
  8278  01128E  0E01               	movlw	1
  8279  011290  0100               	movlb	0	; () banked
  8280  011292  6F92               	movwf	display_dec@edit& (0+255),b
  8281  011294  EC52  F09E         	call	_display_dec	;wreg free
  8282  011298  0012               	return		;funcret
  8283  01129A                     __end_of_display_time_0802:
  8284                           	opt stack 0
  8285                           tblptru	equ	0xFF8
  8286                           tblptrh	equ	0xFF7
  8287                           tblptrl	equ	0xFF6
  8288                           tablat	equ	0xFF5
  8289                           prodh	equ	0xFF4
  8290                           prodl	equ	0xFF3
  8291                           intcon	equ	0xFF2
  8292                           intcon2	equ	0xFF1
  8293                           postinc0	equ	0xFEE
  8294                           wreg	equ	0xFE8
  8295                           indf1	equ	0xFE7
  8296                           postinc1	equ	0xFE6
  8297                           postdec1	equ	0xFE5
  8298                           fsr1h	equ	0xFE2
  8299                           fsr1l	equ	0xFE1
  8300                           indf2	equ	0xFDF
  8301                           postinc2	equ	0xFDE
  8302                           postdec2	equ	0xFDD
  8303                           fsr2h	equ	0xFDA
  8304                           fsr2l	equ	0xFD9
  8305                           status	equ	0xFD8
  8306                           
  8307 ;; *************** function _strcpy *****************
  8308 ;; Defined at:
  8309 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;  to              2    0[BANK0 ] PTR unsigned char 
  8312 ;;		 -> main@s(40), 
  8313 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  8314 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  8317 ;;		 -> main@s(40), 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  2    0[BANK0 ] PTR unsigned char 
  8320 ;; Registers used:
  8321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8328 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;Total ram usage:        6 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; Hardware stack levels required when called:   11
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_display_time_0802
  8338 ;;		_display_time_1602
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342                           	psect	text35
  8343  014210                     __ptext35:
  8344                           	opt stack 0
  8345  014210                     _strcpy:
  8346                           	opt stack 18
  8347                           
  8348                           ;incstack = 0
  8349  014210  C060  F064         	movff	strcpy@to,strcpy@cp
  8350  014214  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  8351  014218  D006               	goto	l9190
  8352  01421A                     l9188:
  8353  01421A  0100               	movlb	0	; () banked
  8354  01421C  4B64               	infsnz	strcpy@cp& (0+255),f,b
  8355  01421E  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  8356  014220  0100               	movlb	0	; () banked
  8357  014222  4B62               	infsnz	strcpy@from& (0+255),f,b
  8358  014224  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  8359  014226                     l9190:
  8360  014226  C062  FFF6         	movff	strcpy@from,tblptrl
  8361  01422A  C063  FFF7         	movff	strcpy@from+1,tblptrh
  8362  01422E                     	if	0	;tblptru may be non-zero
  8363  01422E                     	endif
  8364  01422E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8365  01422E  0E00               	movlw	low (__mediumconst shr (0+16))
  8366  014230  6EF8               	movwf	tblptru,c
  8367  014232                     	endif
  8368  014232  C064  FFD9         	movff	strcpy@cp,fsr2l
  8369  014236  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  8370  01423A  0008               	tblrd		*
  8371  01423C  CFF5 FFDF          	movff	tablat,indf2
  8372  014240  50DF               	movf	indf2,w,c
  8373  014242  B4D8               	btfsc	status,2,c
  8374  014244  0012               	return	
  8375  014246  D7E9               	goto	l9188
  8376  014248                     __end_of_strcpy:
  8377                           	opt stack 0
  8378                           tblptru	equ	0xFF8
  8379                           tblptrh	equ	0xFF7
  8380                           tblptrl	equ	0xFF6
  8381                           tablat	equ	0xFF5
  8382                           prodh	equ	0xFF4
  8383                           prodl	equ	0xFF3
  8384                           intcon	equ	0xFF2
  8385                           intcon2	equ	0xFF1
  8386                           postinc0	equ	0xFEE
  8387                           wreg	equ	0xFE8
  8388                           indf1	equ	0xFE7
  8389                           postinc1	equ	0xFE6
  8390                           postdec1	equ	0xFE5
  8391                           fsr1h	equ	0xFE2
  8392                           fsr1l	equ	0xFE1
  8393                           indf2	equ	0xFDF
  8394                           postinc2	equ	0xFDE
  8395                           postdec2	equ	0xFDD
  8396                           fsr2h	equ	0xFDA
  8397                           fsr2l	equ	0xFD9
  8398                           status	equ	0xFD8
  8399                           
  8400 ;; *************** function _display_dec *****************
  8401 ;; Defined at:
  8402 ;;		line 218 in file "../My_library/My_RTCC.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  str             2   47[BANK0 ] PTR unsigned char 
  8405 ;;		 -> main@s(40), 
  8406 ;;  dec             1   49[BANK0 ] unsigned char 
  8407 ;;  edit            1   50[BANK0 ] unsigned char 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  s               4   51[BANK0 ] unsigned char [4]
  8410 ;; Return value:  Size  Location     Type
  8411 ;;		None               void
  8412 ;; Registers used:
  8413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8420 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8422 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8423 ;;Total ram usage:        8 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:   13
  8426 ;; This function calls:
  8427 ;;		_sprintf
  8428 ;;		_strcat
  8429 ;; This function is called by:
  8430 ;;		_display_time_0802
  8431 ;;		_display_time_1602
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           	psect	text36
  8436  013CA4                     __ptext36:
  8437                           	opt stack 0
  8438  013CA4                     _display_dec:
  8439                           	opt stack 16
  8440                           
  8441                           ;My_RTCC.c: 219: char s[4];
  8442                           ;My_RTCC.c: 220: sprintf(s, "%02d", dec);
  8443                           
  8444                           ;incstack = 0
  8445  013CA4  0E93               	movlw	low display_dec@s
  8446  013CA6  0100               	movlb	0	; () banked
  8447  013CA8  6F6C               	movwf	sprintf@sp& (0+255),b
  8448  013CAA  0E00               	movlw	high display_dec@s
  8449  013CAC  0100               	movlb	0	; () banked
  8450  013CAE  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  8451  013CB0  0EDE               	movlw	low STR_1
  8452  013CB2  0100               	movlb	0	; () banked
  8453  013CB4  6F6E               	movwf	sprintf@f& (0+255),b
  8454  013CB6  0EFF               	movlw	high STR_1
  8455  013CB8  0100               	movlb	0	; () banked
  8456  013CBA  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  8457  013CBC  C091  F070         	movff	display_dec@dec,?_sprintf+4
  8458  013CC0  0100               	movlb	0	; () banked
  8459  013CC2  6B71               	clrf	(?_sprintf+5)& (0+255),b
  8460  013CC4  EC00  F080         	call	_sprintf	;wreg free
  8461                           
  8462                           ;My_RTCC.c: 221: if (edit && now.halfsec)strcat(str, "  ");
  8463  013CC8  0100               	movlb	0	; () banked
  8464  013CCA  5192               	movf	display_dec@edit& (0+255),w,b
  8465  013CCC  0100               	movlb	0	; () banked
  8466  013CCE  B4D8               	btfsc	status,2,c
  8467  013CD0  D011               	goto	l9184
  8468                           
  8469                           ; BSR set to: 0
  8470  013CD2  0101               	movlb	1	; () banked
  8471  013CD4  5141               	movf	(_now+12)& (0+255),w,b
  8472  013CD6  B4D8               	btfsc	status,2,c
  8473  013CD8  D00D               	goto	l9184
  8474                           
  8475                           ; BSR set to: 1
  8476  013CDA  C08F  F060         	movff	display_dec@str,strcat@to
  8477  013CDE  C090  F061         	movff	display_dec@str+1,strcat@to+1
  8478  013CE2  0EA9               	movlw	low (STR_15+6)
  8479  013CE4  0100               	movlb	0	; () banked
  8480  013CE6  6F62               	movwf	strcat@from& (0+255),b
  8481  013CE8  0EFF               	movlw	high (STR_15+6)
  8482  013CEA  0100               	movlb	0	; () banked
  8483  013CEC  6F63               	movwf	(strcat@from+1)& (0+255),b
  8484  013CEE  EC1B  F09F         	call	_strcat	;wreg free
  8485  013CF2  0012               	return	
  8486  013CF4                     l9184:
  8487                           
  8488                           ;My_RTCC.c: 222: else strcat(str, s);
  8489  013CF4  C08F  F060         	movff	display_dec@str,strcat@to
  8490  013CF8  C090  F061         	movff	display_dec@str+1,strcat@to+1
  8491  013CFC  0E93               	movlw	low display_dec@s
  8492  013CFE  0100               	movlb	0	; () banked
  8493  013D00  6F62               	movwf	strcat@from& (0+255),b
  8494  013D02  0E00               	movlw	high display_dec@s
  8495  013D04  0100               	movlb	0	; () banked
  8496  013D06  6F63               	movwf	(strcat@from+1)& (0+255),b
  8497  013D08  EC1B  F09F         	call	_strcat	;wreg free
  8498  013D0C  0012               	return	
  8499  013D0E                     __end_of_display_dec:
  8500                           	opt stack 0
  8501                           tblptru	equ	0xFF8
  8502                           tblptrh	equ	0xFF7
  8503                           tblptrl	equ	0xFF6
  8504                           tablat	equ	0xFF5
  8505                           prodh	equ	0xFF4
  8506                           prodl	equ	0xFF3
  8507                           intcon	equ	0xFF2
  8508                           intcon2	equ	0xFF1
  8509                           postinc0	equ	0xFEE
  8510                           wreg	equ	0xFE8
  8511                           indf1	equ	0xFE7
  8512                           postinc1	equ	0xFE6
  8513                           postdec1	equ	0xFE5
  8514                           fsr1h	equ	0xFE2
  8515                           fsr1l	equ	0xFE1
  8516                           indf2	equ	0xFDF
  8517                           postinc2	equ	0xFDE
  8518                           postdec2	equ	0xFDD
  8519                           fsr2h	equ	0xFDA
  8520                           fsr2l	equ	0xFD9
  8521                           status	equ	0xFD8
  8522                           
  8523 ;; *************** function _strcat *****************
  8524 ;; Defined at:
  8525 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  to              2    0[BANK0 ] PTR unsigned char 
  8528 ;;		 -> main@s(40), 
  8529 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  8530 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
  8531 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
  8532 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
  8533 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  8536 ;;		 -> main@s(40), 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  2    0[BANK0 ] PTR unsigned char 
  8539 ;; Registers used:
  8540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;Total ram usage:        6 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:   11
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		_display_dec
  8557 ;;		_display_time_0802
  8558 ;;		_display_time_1602
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           	psect	text37
  8563  013E36                     __ptext37:
  8564                           	opt stack 0
  8565  013E36                     _strcat:
  8566                           	opt stack 18
  8567                           
  8568                           ;incstack = 0
  8569  013E36  C060  F064         	movff	strcat@to,strcat@cp
  8570  013E3A  C061  F065         	movff	strcat@to+1,strcat@cp+1
  8571  013E3E  D003               	goto	l8940
  8572  013E40                     l8938:
  8573  013E40  0100               	movlb	0	; () banked
  8574  013E42  4B64               	infsnz	strcat@cp& (0+255),f,b
  8575  013E44  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8576  013E46                     l8940:
  8577  013E46  C064  FFD9         	movff	strcat@cp,fsr2l
  8578  013E4A  C065  FFDA         	movff	strcat@cp+1,fsr2h
  8579  013E4E  50DF               	movf	indf2,w,c
  8580  013E50  B4D8               	btfsc	status,2,c
  8581  013E52  D007               	goto	l8944
  8582  013E54  D7F5               	goto	l8938
  8583  013E56                     l8942:
  8584  013E56  0100               	movlb	0	; () banked
  8585  013E58  4B64               	infsnz	strcat@cp& (0+255),f,b
  8586  013E5A  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8587  013E5C  0100               	movlb	0	; () banked
  8588  013E5E  4B62               	infsnz	strcat@from& (0+255),f,b
  8589  013E60  2B63               	incf	(strcat@from+1)& (0+255),f,b
  8590  013E62                     l8944:
  8591  013E62  C062  FFF6         	movff	strcat@from,tblptrl
  8592  013E66  C063  FFF7         	movff	strcat@from+1,tblptrh
  8593  013E6A  0E00               	movlw	low (__mediumconst shr (0+16))
  8594  013E6C  6EF8               	movwf	tblptru,c
  8595  013E6E  C064  FFD9         	movff	strcat@cp,fsr2l
  8596  013E72  C065  FFDA         	movff	strcat@cp+1,fsr2h
  8597  013E76  0E0E               	movlw	(high __ramtop+-1)
  8598  013E78  64F7               	cpfsgt	tblptrh,c
  8599  013E7A  D003               	bra	u8767
  8600  013E7C  0008               	tblrd		*
  8601  013E7E  50F5               	movf	tablat,w,c
  8602  013E80  D005               	bra	u8760
  8603  013E82                     u8767:
  8604  013E82  CFF6 FFE1          	movff	tblptrl,fsr1l
  8605  013E86  CFF7 FFE2          	movff	tblptrh,fsr1h
  8606  013E8A  50E7               	movf	indf1,w,c
  8607  013E8C                     u8760:
  8608  013E8C  6EDF               	movwf	indf2,c
  8609  013E8E  50DF               	movf	indf2,w,c
  8610  013E90  B4D8               	btfsc	status,2,c
  8611  013E92  0012               	return	
  8612  013E94  D7E0               	goto	l8942
  8613  013E96                     __end_of_strcat:
  8614                           	opt stack 0
  8615                           tblptru	equ	0xFF8
  8616                           tblptrh	equ	0xFF7
  8617                           tblptrl	equ	0xFF6
  8618                           tablat	equ	0xFF5
  8619                           prodh	equ	0xFF4
  8620                           prodl	equ	0xFF3
  8621                           intcon	equ	0xFF2
  8622                           intcon2	equ	0xFF1
  8623                           postinc0	equ	0xFEE
  8624                           wreg	equ	0xFE8
  8625                           indf1	equ	0xFE7
  8626                           postinc1	equ	0xFE6
  8627                           postdec1	equ	0xFE5
  8628                           fsr1h	equ	0xFE2
  8629                           fsr1l	equ	0xFE1
  8630                           indf2	equ	0xFDF
  8631                           postinc2	equ	0xFDE
  8632                           postdec2	equ	0xFDD
  8633                           fsr2h	equ	0xFDA
  8634                           fsr2l	equ	0xFD9
  8635                           status	equ	0xFD8
  8636                           
  8637 ;; *************** function _sprintf *****************
  8638 ;; Defined at:
  8639 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  8642 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  8643 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  8644 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  tmpval          4    0        struct .
  8647 ;;  width           2   45[BANK0 ] int 
  8648 ;;  len             2   41[BANK0 ] unsigned int 
  8649 ;;  val             2   39[BANK0 ] unsigned int 
  8650 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  8651 ;;		 -> STR_48(7), weekday_3char(28), 
  8652 ;;  ap              2   35[BANK0 ] PTR void [1]
  8653 ;;		 -> ?_sprintf(2), 
  8654 ;;  c               1   44[BANK0 ] char 
  8655 ;;  flag            1   43[BANK0 ] unsigned char 
  8656 ;;  prec            1   34[BANK0 ] char 
  8657 ;; Return value:  Size  Location     Type
  8658 ;;                  2   12[BANK0 ] int 
  8659 ;; Registers used:
  8660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8661 ;; Tracked objects:
  8662 ;;		On entry : 0/0
  8663 ;;		On exit  : 0/0
  8664 ;;		Unchanged: 0/0
  8665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8666 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8667 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8668 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8669 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8670 ;;Total ram usage:       35 bytes
  8671 ;; Hardware stack levels used:    1
  8672 ;; Hardware stack levels required when called:   12
  8673 ;; This function calls:
  8674 ;;		___lwdiv
  8675 ;;		___lwmod
  8676 ;;		___wmul
  8677 ;;		_isdigit
  8678 ;; This function is called by:
  8679 ;;		_display_dec
  8680 ;;		_print_time
  8681 ;;		_print_time_dec
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text38
  8686  010000                     __ptext38:
  8687                           	opt stack 0
  8688  010000                     _sprintf:
  8689                           	opt stack 13
  8690                           
  8691                           ;doprnt.c: 494: va_list ap;
  8692                           ;doprnt.c: 499: signed char c;
  8693                           ;doprnt.c: 501: int width;
  8694                           ;doprnt.c: 506: signed char prec;
  8695                           ;doprnt.c: 508: unsigned char flag;
  8696                           ;doprnt.c: 523: union {
  8697                           ;doprnt.c: 524: unsigned long vd;
  8698                           ;doprnt.c: 525: double integ;
  8699                           ;doprnt.c: 526: } tmpval;
  8700                           ;doprnt.c: 528: unsigned int val;
  8701                           ;doprnt.c: 529: unsigned len;
  8702                           ;doprnt.c: 530: const char * cp;
  8703                           ;doprnt.c: 533: *ap = __va_start();
  8704                           
  8705                           ;incstack = 0
  8706  010000  0E70               	movlw	low (?_sprintf+4)
  8707  010002  0100               	movlb	0	; () banked
  8708  010004  6F83               	movwf	sprintf@ap& (0+255),b
  8709  010006  0E00               	movlw	high (?_sprintf+4)
  8710  010008  0100               	movlb	0	; () banked
  8711  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  8712                           
  8713                           ;doprnt.c: 536: while(c = *f++) {
  8714  01000C  D20F               	goto	l8618
  8715  01000E                     l8478:
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;doprnt.c: 538: if(c != '%')
  8719  01000E  0E25               	movlw	37
  8720  010010  0100               	movlb	0	; () banked
  8721  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  8722  010014  B4D8               	btfsc	status,2,c
  8723  010016  D00A               	goto	l8484
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;doprnt.c: 540: {
  8727                           ;doprnt.c: 541: ((*sp++ = (c)));
  8728  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  8729  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  8730  010020  C08C  FFDF         	movff	sprintf@c,indf2
  8731                           
  8732                           ; BSR set to: 0
  8733  010024  0100               	movlb	0	; () banked
  8734  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  8735  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  8736                           
  8737                           ;doprnt.c: 542: continue;
  8738  01002A  D200               	goto	l8618
  8739  01002C                     l8484:
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;doprnt.c: 543: }
  8743                           ;doprnt.c: 546: width = 0;
  8744  01002C  0E00               	movlw	0
  8745  01002E  0100               	movlb	0	; () banked
  8746  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  8747  010032  0E00               	movlw	0
  8748  010034  6F8D               	movwf	sprintf@width& (0+255),b
  8749                           
  8750                           ;doprnt.c: 548: flag = 0;
  8751  010036  0E00               	movlw	0
  8752  010038  0100               	movlb	0	; () banked
  8753  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;doprnt.c: 551: switch(*f) {
  8757                           
  8758                           ;doprnt.c: 550: for(;;) {
  8759  01003C  D005               	goto	l8490
  8760  01003E                     l8486:
  8761                           
  8762                           ;doprnt.c: 580: flag |= 0x04;
  8763  01003E  0100               	movlb	0	; () banked
  8764  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  8765                           
  8766                           ;doprnt.c: 581: f++;
  8767  010042  0100               	movlb	0	; () banked
  8768  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  8769  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  8770  010048                     l8490:
  8771  010048  C06E  FFF6         	movff	sprintf@f,tblptrl
  8772  01004C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  8773  010050                     	if	0	;tblptru may be non-zero
  8774  010050                     	endif
  8775  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8776  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  8777  010052  6EF8               	movwf	tblptru,c
  8778  010054                     	endif
  8779  010054  0008               	tblrd		*
  8780  010056  50F5               	movf	tablat,w,c
  8781                           
  8782                           ; Switch size 1, requested type "space"
  8783                           ; Number of cases is 1, Range of values is 48 to 48
  8784                           ; switch strategies available:
  8785                           ; Name         Instructions Cycles
  8786                           ; simple_byte            4     3 (average)
  8787                           ;	Chosen strategy is simple_byte
  8788  010058  0A30               	xorlw	48	; case 48
  8789  01005A  B4D8               	btfsc	status,2,c
  8790  01005C  D7F0               	goto	l8486
  8791                           
  8792                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8793                           
  8794                           ;doprnt.c: 586: }
  8795                           
  8796                           ;doprnt.c: 585: break;
  8797  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
  8798  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  8799  010066                     	if	0	;tblptru may be non-zero
  8800  010066                     	endif
  8801  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8802  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  8803  010068  6EF8               	movwf	tblptru,c
  8804  01006A                     	endif
  8805  01006A  0008               	tblrd		*
  8806  01006C  50F5               	movf	tablat,w,c
  8807  01006E  ECFA  F0A1         	call	_isdigit
  8808  010072  A0D8               	btfss	status,0,c
  8809  010074  D0CB               	goto	l8540
  8810                           
  8811                           ;doprnt.c: 598: width = 0;
  8812  010076  0E00               	movlw	0
  8813  010078  0100               	movlb	0	; () banked
  8814  01007A  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  8815  01007C  0E00               	movlw	0
  8816  01007E  6F8D               	movwf	sprintf@width& (0+255),b
  8817  010080                     l8496:
  8818                           
  8819                           ;doprnt.c: 600: width *= 10;
  8820  010080  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  8821  010084  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  8822  010088  0E00               	movlw	0
  8823  01008A  0100               	movlb	0	; () banked
  8824  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8825  01008E  0E0A               	movlw	10
  8826  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  8827  010092  EC24  F0A1         	call	___wmul	;wreg free
  8828  010096  C060  F08D         	movff	?___wmul,sprintf@width
  8829  01009A  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  8830                           
  8831                           ;doprnt.c: 601: width += *f++ - '0';
  8832  01009E  0ED0               	movlw	208
  8833  0100A0  0100               	movlb	0	; () banked
  8834  0100A2  6F7E               	movwf	??_sprintf& (0+255),b
  8835  0100A4  0EFF               	movlw	255
  8836  0100A6  0100               	movlb	0	; () banked
  8837  0100A8  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  8838  0100AA  C06E  FFF6         	movff	sprintf@f,tblptrl
  8839  0100AE  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  8840  0100B2                     	if	0	;tblptru may be non-zero
  8841  0100B2                     	endif
  8842  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8843  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8844  0100B4  6EF8               	movwf	tblptru,c
  8845  0100B6                     	endif
  8846  0100B6  0008               	tblrd		*
  8847  0100B8  50F5               	movf	tablat,w,c
  8848  0100BA  0100               	movlb	0	; () banked
  8849  0100BC  6F80               	movwf	(??_sprintf+2)& (0+255),b
  8850  0100BE  6B81               	clrf	(??_sprintf+3)& (0+255),b
  8851  0100C0  0100               	movlb	0	; () banked
  8852  0100C2  517E               	movf	??_sprintf& (0+255),w,b
  8853  0100C4  0100               	movlb	0	; () banked
  8854  0100C6  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  8855  0100C8  0100               	movlb	0	; () banked
  8856  0100CA  517F               	movf	(??_sprintf+1)& (0+255),w,b
  8857  0100CC  0100               	movlb	0	; () banked
  8858  0100CE  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  8859  0100D0  0100               	movlb	0	; () banked
  8860  0100D2  5180               	movf	(??_sprintf+2)& (0+255),w,b
  8861  0100D4  0100               	movlb	0	; () banked
  8862  0100D6  278D               	addwf	sprintf@width& (0+255),f,b
  8863  0100D8  0100               	movlb	0	; () banked
  8864  0100DA  5181               	movf	(??_sprintf+3)& (0+255),w,b
  8865  0100DC  0100               	movlb	0	; () banked
  8866  0100DE  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  8867                           
  8868                           ; BSR set to: 0
  8869  0100E0  0100               	movlb	0	; () banked
  8870  0100E2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  8871  0100E4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8875  0100E6  C06E  FFF6         	movff	sprintf@f,tblptrl
  8876  0100EA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  8877  0100EE                     	if	0	;tblptru may be non-zero
  8878  0100EE                     	endif
  8879  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8880  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  8881  0100F0  6EF8               	movwf	tblptru,c
  8882  0100F2                     	endif
  8883  0100F2  0008               	tblrd		*
  8884  0100F4  50F5               	movf	tablat,w,c
  8885  0100F6  ECFA  F0A1         	call	_isdigit
  8886  0100FA  A0D8               	btfss	status,0,c
  8887  0100FC  D087               	goto	l8540
  8888  0100FE  D7C0               	goto	l8496
  8889  010100                     l8504:
  8890                           
  8891                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  8892  010100  C083  FFD9         	movff	sprintf@ap,fsr2l
  8893  010104  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  8894  010108  CFDE F085          	movff	postinc2,sprintf@cp
  8895  01010C  CFDD F086          	movff	postdec2,sprintf@cp+1
  8896  010110  0E02               	movlw	2
  8897  010112  0100               	movlb	0	; () banked
  8898  010114  2783               	addwf	sprintf@ap& (0+255),f,b
  8899  010116  0E00               	movlw	0
  8900  010118  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;doprnt.c: 740: if(!cp)
  8904  01011A  0100               	movlb	0	; () banked
  8905  01011C  5185               	movf	sprintf@cp& (0+255),w,b
  8906  01011E  0100               	movlb	0	; () banked
  8907  010120  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  8908  010122  A4D8               	btfss	status,2,c
  8909  010124  D006               	goto	l8512
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;doprnt.c: 741: cp = "(null)";
  8913  010126  0EB4               	movlw	low STR_48
  8914  010128  0100               	movlb	0	; () banked
  8915  01012A  6F85               	movwf	sprintf@cp& (0+255),b
  8916  01012C  0EFF               	movlw	high STR_48
  8917  01012E  0100               	movlb	0	; () banked
  8918  010130  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  8919  010132                     l8512:
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;doprnt.c: 745: len = 0;
  8923  010132  0E00               	movlw	0
  8924  010134  0100               	movlb	0	; () banked
  8925  010136  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  8926  010138  0E00               	movlw	0
  8927  01013A  6F89               	movwf	sprintf@len& (0+255),b
  8928                           
  8929                           ;doprnt.c: 746: while(cp[len])
  8930  01013C  D003               	goto	l8516
  8931  01013E                     l8514:
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;doprnt.c: 747: len++;
  8935  01013E  0100               	movlb	0	; () banked
  8936  010140  4B89               	infsnz	sprintf@len& (0+255),f,b
  8937  010142  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  8938  010144                     l8516:
  8939                           
  8940                           ; BSR set to: 0
  8941  010144  0100               	movlb	0	; () banked
  8942  010146  5189               	movf	sprintf@len& (0+255),w,b
  8943  010148  0100               	movlb	0	; () banked
  8944  01014A  2585               	addwf	sprintf@cp& (0+255),w,b
  8945  01014C  0100               	movlb	0	; () banked
  8946  01014E  6F7E               	movwf	??_sprintf& (0+255),b
  8947  010150  0100               	movlb	0	; () banked
  8948  010152  518A               	movf	(sprintf@len+1)& (0+255),w,b
  8949  010154  0100               	movlb	0	; () banked
  8950  010156  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  8951  010158  0100               	movlb	0	; () banked
  8952  01015A  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  8953  01015C  C07E  FFF6         	movff	??_sprintf,tblptrl
  8954  010160  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  8955  010164                     	if	0	;tblptru may be non-zero
  8956  010164                     	endif
  8957  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8958  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  8959  010166  6EF8               	movwf	tblptru,c
  8960  010168                     	endif
  8961  010168  0008               	tblrd		*
  8962  01016A  50F5               	movf	tablat,w,c
  8963  01016C  0900               	iorlw	0
  8964  01016E  A4D8               	btfss	status,2,c
  8965  010170  D7E6               	goto	l8514
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;doprnt.c: 757: if(width > len)
  8969                           
  8970                           ; BSR set to: 0
  8971  010172  0100               	movlb	0	; () banked
  8972  010174  518D               	movf	sprintf@width& (0+255),w,b
  8973  010176  0100               	movlb	0	; () banked
  8974  010178  5D89               	subwf	sprintf@len& (0+255),w,b
  8975  01017A  0100               	movlb	0	; () banked
  8976  01017C  518E               	movf	(sprintf@width+1)& (0+255),w,b
  8977  01017E  0100               	movlb	0	; () banked
  8978  010180  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  8979  010182  B0D8               	btfsc	status,0,c
  8980  010184  D009               	goto	l8522
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;doprnt.c: 758: width -= len;
  8984  010186  0100               	movlb	0	; () banked
  8985  010188  5189               	movf	sprintf@len& (0+255),w,b
  8986  01018A  0100               	movlb	0	; () banked
  8987  01018C  5F8D               	subwf	sprintf@width& (0+255),f,b
  8988  01018E  0100               	movlb	0	; () banked
  8989  010190  518A               	movf	(sprintf@len+1)& (0+255),w,b
  8990  010192  0100               	movlb	0	; () banked
  8991  010194  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  8992  010196  D00F               	goto	l8528
  8993  010198                     l8522:
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;doprnt.c: 759: else
  8997                           ;doprnt.c: 760: width = 0;
  8998  010198  0E00               	movlw	0
  8999  01019A  0100               	movlb	0	; () banked
  9000  01019C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  9001  01019E  0E00               	movlw	0
  9002  0101A0  6F8D               	movwf	sprintf@width& (0+255),b
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;doprnt.c: 764: while(width--)
  9006  0101A2  D009               	goto	l8528
  9007  0101A4                     l8524:
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;doprnt.c: 765: ((*sp++ = (' ')));
  9011  0101A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9012  0101A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9013  0101AC  0E20               	movlw	32
  9014  0101AE  6EDF               	movwf	indf2,c
  9015                           
  9016                           ; BSR set to: 0
  9017  0101B0  0100               	movlb	0	; () banked
  9018  0101B2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9019  0101B4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9020  0101B6                     l8528:
  9021                           
  9022                           ; BSR set to: 0
  9023  0101B6  0100               	movlb	0	; () banked
  9024  0101B8  078D               	decf	sprintf@width& (0+255),f,b
  9025  0101BA  A0D8               	btfss	status,0,c
  9026  0101BC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  9027  0101BE  0100               	movlb	0	; () banked
  9028  0101C0  298D               	incf	sprintf@width& (0+255),w,b
  9029  0101C2  E1F0               	bnz	l8524
  9030  0101C4  0100               	movlb	0	; () banked
  9031  0101C6  298E               	incf	(sprintf@width+1)& (0+255),w,b
  9032  0101C8  B4D8               	btfsc	status,2,c
  9033  0101CA  D014               	goto	l8536
  9034  0101CC  D7EB               	goto	l8524
  9035  0101CE                     l8530:
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  9039  0101CE  C085  FFF6         	movff	sprintf@cp,tblptrl
  9040  0101D2  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  9041  0101D6                     	if	0	;tblptru may be non-zero
  9042  0101D6                     	endif
  9043  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9044  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  9045  0101D8  6EF8               	movwf	tblptru,c
  9046  0101DA                     	endif
  9047  0101DA  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9048  0101DE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9049  0101E2  0008               	tblrd		*
  9050  0101E4  CFF5 FFDF          	movff	tablat,indf2
  9051                           
  9052                           ; BSR set to: 0
  9053  0101E8  0100               	movlb	0	; () banked
  9054  0101EA  4B85               	infsnz	sprintf@cp& (0+255),f,b
  9055  0101EC  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  9056                           
  9057                           ; BSR set to: 0
  9058  0101EE  0100               	movlb	0	; () banked
  9059  0101F0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9060  0101F2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9061  0101F4                     l8536:
  9062                           
  9063                           ; BSR set to: 0
  9064  0101F4  0100               	movlb	0	; () banked
  9065  0101F6  0789               	decf	sprintf@len& (0+255),f,b
  9066  0101F8  A0D8               	btfss	status,0,c
  9067  0101FA  078A               	decf	(sprintf@len+1)& (0+255),f,b
  9068  0101FC  0100               	movlb	0	; () banked
  9069  0101FE  2989               	incf	sprintf@len& (0+255),w,b
  9070  010200  E1E6               	bnz	l8530
  9071  010202  0100               	movlb	0	; () banked
  9072  010204  298A               	incf	(sprintf@len+1)& (0+255),w,b
  9073  010206  B4D8               	btfsc	status,2,c
  9074  010208  D111               	goto	l8618
  9075  01020A  D7E1               	goto	l8530
  9076  01020C                     l8540:
  9077  01020C  C06E  FFF6         	movff	sprintf@f,tblptrl
  9078  010210  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  9079  010214  0100               	movlb	0	; () banked
  9080  010216  4B6E               	infsnz	sprintf@f& (0+255),f,b
  9081  010218  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  9082  01021A                     	if	0	;tblptru may be non-zero
  9083  01021A                     	endif
  9084  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9085  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  9086  01021C  6EF8               	movwf	tblptru,c
  9087  01021E                     	endif
  9088  01021E  0008               	tblrd		*
  9089  010220  CFF5 F08C          	movff	tablat,sprintf@c
  9090  010224  0100               	movlb	0	; () banked
  9091  010226  518C               	movf	sprintf@c& (0+255),w,b
  9092                           
  9093                           ; Switch size 1, requested type "space"
  9094                           ; Number of cases is 4, Range of values is 0 to 115
  9095                           ; switch strategies available:
  9096                           ; Name         Instructions Cycles
  9097                           ; simple_byte           13     7 (average)
  9098                           ;	Chosen strategy is simple_byte
  9099  010228  0A00               	xorlw	0	; case 0
  9100  01022A  B4D8               	btfsc	status,2,c
  9101  01022C  D10F               	goto	l8620
  9102  01022E  0A64               	xorlw	100	; case 100
  9103  010230  B4D8               	btfsc	status,2,c
  9104  010232  D007               	goto	l8542
  9105  010234  0A0D               	xorlw	13	; case 105
  9106  010236  B4D8               	btfsc	status,2,c
  9107  010238  D004               	goto	l8542
  9108  01023A  0A1A               	xorlw	26	; case 115
  9109  01023C  B4D8               	btfsc	status,2,c
  9110  01023E  D760               	goto	l8504
  9111  010240  D0F5               	goto	l8618
  9112  010242                     l8542:
  9113                           
  9114                           ;doprnt.c: 1253: {
  9115                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9116  010242  C083  FFD9         	movff	sprintf@ap,fsr2l
  9117  010246  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  9118  01024A  CFDE F087          	movff	postinc2,sprintf@val
  9119  01024E  CFDD F088          	movff	postdec2,sprintf@val+1
  9120  010252  0E02               	movlw	2
  9121  010254  0100               	movlb	0	; () banked
  9122  010256  2783               	addwf	sprintf@ap& (0+255),f,b
  9123  010258  0E00               	movlw	0
  9124  01025A  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;doprnt.c: 1261: if((int)val < 0) {
  9128  01025C  0100               	movlb	0	; () banked
  9129  01025E  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  9130  010260  D008               	goto	l8552
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;doprnt.c: 1262: flag |= 0x03;
  9134  010262  0E03               	movlw	3
  9135  010264  0100               	movlb	0	; () banked
  9136  010266  138B               	iorwf	sprintf@flag& (0+255),f,b
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;doprnt.c: 1263: val = -val;
  9140  010268  0100               	movlb	0	; () banked
  9141  01026A  6D87               	negf	sprintf@val& (0+255),b
  9142  01026C  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  9143  01026E  B0D8               	btfsc	status,0,c
  9144  010270  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  9145  010272                     l8552:
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;doprnt.c: 1264: }
  9149                           ;doprnt.c: 1266: }
  9150                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9151  010272  0E01               	movlw	1
  9152  010274  0100               	movlb	0	; () banked
  9153  010276  6F8C               	movwf	sprintf@c& (0+255),b
  9154  010278                     l8554:
  9155                           
  9156                           ; BSR set to: 0
  9157  010278  0E05               	movlw	5
  9158  01027A  0100               	movlb	0	; () banked
  9159  01027C  198C               	xorwf	sprintf@c& (0+255),w,b
  9160  01027E  B4D8               	btfsc	status,2,c
  9161  010280  D019               	goto	l8566
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;doprnt.c: 1306: if(val < dpowers[c])
  9165                           
  9166                           ; BSR set to: 0
  9167                           
  9168                           ; BSR set to: 0
  9169  010282  0100               	movlb	0	; () banked
  9170  010284  518C               	movf	sprintf@c& (0+255),w,b
  9171  010286  0D02               	mullw	2
  9172  010288  0E69               	movlw	low _dpowers
  9173  01028A  24F3               	addwf	prodl,w,c
  9174  01028C  6EF6               	movwf	tblptrl,c
  9175  01028E  0EFD               	movlw	high _dpowers
  9176  010290  20F4               	addwfc	prodh,w,c
  9177  010292  6EF7               	movwf	tblptrh,c
  9178  010294                     	if	1	;There are 3 active tblptr bytes
  9179  010294  6AF8               	clrf	tblptru,c
  9180  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  9181  010298  22F8               	addwfc	tblptru,f,c
  9182  01029A                     	endif
  9183  01029A  0009               	tblrd		*+
  9184  01029C  50F5               	movf	tablat,w,c
  9185  01029E  0100               	movlb	0	; () banked
  9186  0102A0  5D87               	subwf	sprintf@val& (0+255),w,b
  9187  0102A2  0009               	tblrd		*+
  9188  0102A4  50F5               	movf	tablat,w,c
  9189  0102A6  0100               	movlb	0	; () banked
  9190  0102A8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  9191  0102AA  A0D8               	btfss	status,0,c
  9192  0102AC  D003               	goto	l8566
  9193                           
  9194                           ; BSR set to: 0
  9195                           
  9196                           ; BSR set to: 0
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;doprnt.c: 1307: break;
  9200  0102AE  0100               	movlb	0	; () banked
  9201  0102B0  2B8C               	incf	sprintf@c& (0+255),f,b
  9202  0102B2  D7E2               	goto	l8554
  9203  0102B4                     l8566:
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9207  0102B4  0100               	movlb	0	; () banked
  9208  0102B6  518D               	movf	sprintf@width& (0+255),w,b
  9209  0102B8  0100               	movlb	0	; () banked
  9210  0102BA  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  9211  0102BC  B4D8               	btfsc	status,2,c
  9212  0102BE  D00B               	goto	l8572
  9213                           
  9214                           ; BSR set to: 0
  9215  0102C0  C08B  F07E         	movff	sprintf@flag,??_sprintf
  9216  0102C4  0E03               	movlw	3
  9217  0102C6  0100               	movlb	0	; () banked
  9218  0102C8  177E               	andwf	??_sprintf& (0+255),f,b
  9219  0102CA  B4D8               	btfsc	status,2,c
  9220  0102CC  D004               	goto	l8572
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;doprnt.c: 1346: width--;
  9224  0102CE  0100               	movlb	0	; () banked
  9225  0102D0  078D               	decf	sprintf@width& (0+255),f,b
  9226  0102D2  A0D8               	btfss	status,0,c
  9227  0102D4  078E               	decf	(sprintf@width+1)& (0+255),f,b
  9228  0102D6                     l8572:
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;doprnt.c: 1381: if(width > c)
  9232  0102D6  0E80               	movlw	128
  9233  0102D8  0100               	movlb	0	; () banked
  9234  0102DA  BF8C               	btfsc	sprintf@c& (0+255),7,b
  9235  0102DC  0E7F               	movlw	127
  9236  0102DE  0100               	movlb	0	; () banked
  9237  0102E0  6F7E               	movwf	??_sprintf& (0+255),b
  9238  0102E2  0100               	movlb	0	; () banked
  9239  0102E4  518D               	movf	sprintf@width& (0+255),w,b
  9240  0102E6  0100               	movlb	0	; () banked
  9241  0102E8  5D8C               	subwf	sprintf@c& (0+255),w,b
  9242  0102EA  0100               	movlb	0	; () banked
  9243  0102EC  518E               	movf	(sprintf@width+1)& (0+255),w,b
  9244  0102EE  0A80               	xorlw	128
  9245  0102F0  0100               	movlb	0	; () banked
  9246  0102F2  597E               	subwfb	??_sprintf& (0+255),w,b
  9247  0102F4  B0D8               	btfsc	status,0,c
  9248  0102F6  D00B               	goto	l8576
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;doprnt.c: 1382: width -= c;
  9252  0102F8  0100               	movlb	0	; () banked
  9253  0102FA  518C               	movf	sprintf@c& (0+255),w,b
  9254  0102FC  0100               	movlb	0	; () banked
  9255  0102FE  5F8D               	subwf	sprintf@width& (0+255),f,b
  9256  010300  0E00               	movlw	0
  9257  010302  0100               	movlb	0	; () banked
  9258  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  9259  010306  0EFF               	movlw	255
  9260  010308  0100               	movlb	0	; () banked
  9261  01030A  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  9262  01030C  D005               	goto	l8578
  9263  01030E                     l8576:
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;doprnt.c: 1383: else
  9267                           ;doprnt.c: 1384: width = 0;
  9268  01030E  0E00               	movlw	0
  9269  010310  0100               	movlb	0	; () banked
  9270  010312  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  9271  010314  0E00               	movlw	0
  9272  010316  6F8D               	movwf	sprintf@width& (0+255),b
  9273  010318                     l8578:
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;doprnt.c: 1387: if(flag & 0x04) {
  9277  010318  0100               	movlb	0	; () banked
  9278  01031A  A58B               	btfss	sprintf@flag& (0+255),2,b
  9279  01031C  D024               	goto	l8594
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;doprnt.c: 1392: if(flag & 0x03)
  9283  01031E  C08B  F07E         	movff	sprintf@flag,??_sprintf
  9284  010322  0E03               	movlw	3
  9285  010324  0100               	movlb	0	; () banked
  9286  010326  177E               	andwf	??_sprintf& (0+255),f,b
  9287  010328  B4D8               	btfsc	status,2,c
  9288  01032A  D009               	goto	l8586
  9289                           
  9290                           ; BSR set to: 0
  9291                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  9292  01032C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9293  010330  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9294  010334  0E2D               	movlw	45
  9295  010336  6EDF               	movwf	indf2,c
  9296                           
  9297                           ; BSR set to: 0
  9298  010338  0100               	movlb	0	; () banked
  9299  01033A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9300  01033C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9301  01033E                     l8586:
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;doprnt.c: 1415: if(width)
  9305  01033E  0100               	movlb	0	; () banked
  9306  010340  518D               	movf	sprintf@width& (0+255),w,b
  9307  010342  0100               	movlb	0	; () banked
  9308  010344  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  9309  010346  B4D8               	btfsc	status,2,c
  9310  010348  D037               	goto	l8608
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  9314                           
  9315                           ; BSR set to: 0
  9316                           
  9317                           ;doprnt.c: 1416: do
  9318  01034A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9319  01034E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9320  010352  0E30               	movlw	48
  9321  010354  6EDF               	movwf	indf2,c
  9322                           
  9323                           ; BSR set to: 0
  9324  010356  0100               	movlb	0	; () banked
  9325  010358  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9326  01035A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;doprnt.c: 1418: while(--width);
  9330  01035C  0100               	movlb	0	; () banked
  9331  01035E  078D               	decf	sprintf@width& (0+255),f,b
  9332  010360  A0D8               	btfss	status,0,c
  9333  010362  078E               	decf	(sprintf@width+1)& (0+255),f,b
  9334  010364  D7EC               	goto	l8586
  9335  010366                     l8594:
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;doprnt.c: 1422: {
  9339                           ;doprnt.c: 1424: if(width
  9340                           ;doprnt.c: 1428: )
  9341  010366  0100               	movlb	0	; () banked
  9342  010368  518D               	movf	sprintf@width& (0+255),w,b
  9343  01036A  0100               	movlb	0	; () banked
  9344  01036C  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  9345  01036E  B4D8               	btfsc	status,2,c
  9346  010370  D013               	goto	l8602
  9347  010372                     l8596:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9351  010372  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9352  010376  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9353  01037A  0E20               	movlw	32
  9354  01037C  6EDF               	movwf	indf2,c
  9355                           
  9356                           ; BSR set to: 0
  9357  01037E  0100               	movlb	0	; () banked
  9358  010380  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9359  010382  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;doprnt.c: 1431: while(--width);
  9363  010384  0100               	movlb	0	; () banked
  9364  010386  078D               	decf	sprintf@width& (0+255),f,b
  9365  010388  A0D8               	btfss	status,0,c
  9366  01038A  078E               	decf	(sprintf@width+1)& (0+255),f,b
  9367  01038C  0100               	movlb	0	; () banked
  9368  01038E  518D               	movf	sprintf@width& (0+255),w,b
  9369  010390  0100               	movlb	0	; () banked
  9370  010392  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  9371  010394  A4D8               	btfss	status,2,c
  9372  010396  D7ED               	goto	l8596
  9373  010398                     l8602:
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;doprnt.c: 1438: if(flag & 0x03)
  9377  010398  C08B  F07E         	movff	sprintf@flag,??_sprintf
  9378  01039C  0E03               	movlw	3
  9379  01039E  0100               	movlb	0	; () banked
  9380  0103A0  177E               	andwf	??_sprintf& (0+255),f,b
  9381  0103A2  B4D8               	btfsc	status,2,c
  9382  0103A4  D009               	goto	l8608
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9386  0103A6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9387  0103AA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9388  0103AE  0E2D               	movlw	45
  9389  0103B0  6EDF               	movwf	indf2,c
  9390                           
  9391                           ; BSR set to: 0
  9392  0103B2  0100               	movlb	0	; () banked
  9393  0103B4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9394  0103B6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9395  0103B8                     l8608:
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;doprnt.c: 1469: }
  9399                           ;doprnt.c: 1472: prec = c;
  9400  0103B8  C08C  F082         	movff	sprintf@c,sprintf@prec
  9401                           
  9402                           ;doprnt.c: 1474: while(prec--) {
  9403  0103BC  D031               	goto	l8616
  9404  0103BE                     l8610:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;doprnt.c: 1478: {
  9408                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9409  0103BE  0100               	movlb	0	; () banked
  9410  0103C0  5182               	movf	sprintf@prec& (0+255),w,b
  9411  0103C2  0D02               	mullw	2
  9412  0103C4  0E69               	movlw	low _dpowers
  9413  0103C6  24F3               	addwf	prodl,w,c
  9414  0103C8  6EF6               	movwf	tblptrl,c
  9415  0103CA  0EFD               	movlw	high _dpowers
  9416  0103CC  20F4               	addwfc	prodh,w,c
  9417  0103CE  6EF7               	movwf	tblptrh,c
  9418  0103D0                     	if	1	;There are 3 active tblptr bytes
  9419  0103D0  6AF8               	clrf	tblptru,c
  9420  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  9421  0103D4  22F8               	addwfc	tblptru,f,c
  9422  0103D6                     	endif
  9423  0103D6  0009               	tblrd		*+
  9424  0103D8  CFF5 F062          	movff	tablat,___lwdiv@divisor
  9425  0103DC  000A               	tblrd		*-
  9426  0103DE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  9427  0103E2  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  9428  0103E6  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  9429  0103EA  ECFE  F09C         	call	___lwdiv	;wreg free
  9430  0103EE  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  9431  0103F2  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  9432  0103F6  0E00               	movlw	0
  9433  0103F8  0100               	movlb	0	; () banked
  9434  0103FA  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  9435  0103FC  0E0A               	movlw	10
  9436  0103FE  6F69               	movwf	___lwmod@divisor& (0+255),b
  9437  010400  ECEA  F09E         	call	___lwmod	;wreg free
  9438  010404  0100               	movlb	0	; () banked
  9439  010406  5167               	movf	?___lwmod& (0+255),w,b
  9440  010408  0F30               	addlw	48
  9441  01040A  0100               	movlb	0	; () banked
  9442  01040C  6F8C               	movwf	sprintf@c& (0+255),b
  9443                           
  9444                           ; BSR set to: 0
  9445                           ;doprnt.c: 1523: }
  9446                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9447  01040E  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9448  010412  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9449  010416  C08C  FFDF         	movff	sprintf@c,indf2
  9450                           
  9451                           ; BSR set to: 0
  9452  01041A  0100               	movlb	0	; () banked
  9453  01041C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9454  01041E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9455  010420                     l8616:
  9456                           
  9457                           ; BSR set to: 0
  9458  010420  0100               	movlb	0	; () banked
  9459  010422  0782               	decf	sprintf@prec& (0+255),f,b
  9460  010424  0100               	movlb	0	; () banked
  9461  010426  2982               	incf	sprintf@prec& (0+255),w,b
  9462  010428  A4D8               	btfss	status,2,c
  9463  01042A  D7C9               	goto	l8610
  9464  01042C                     l8618:
  9465                           
  9466                           ; BSR set to: 0
  9467  01042C  C06E  FFF6         	movff	sprintf@f,tblptrl
  9468  010430  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  9469  010434  0100               	movlb	0	; () banked
  9470  010436  4B6E               	infsnz	sprintf@f& (0+255),f,b
  9471  010438  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  9472  01043A                     	if	0	;tblptru may be non-zero
  9473  01043A                     	endif
  9474  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9475  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  9476  01043C  6EF8               	movwf	tblptru,c
  9477  01043E                     	endif
  9478  01043E  0008               	tblrd		*
  9479  010440  CFF5 F08C          	movff	tablat,sprintf@c
  9480  010444  0100               	movlb	0	; () banked
  9481  010446  518C               	movf	sprintf@c& (0+255),w,b
  9482  010448  A4D8               	btfss	status,2,c
  9483  01044A  D5E1               	goto	l8478
  9484  01044C                     l8620:
  9485                           
  9486                           ;doprnt.c: 1538: *sp = 0;
  9487  01044C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9488  010450  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9489  010454  0E00               	movlw	0
  9490  010456  6EDF               	movwf	indf2,c
  9491  010458  0012               	return	
  9492  01045A                     __end_of_sprintf:
  9493                           	opt stack 0
  9494                           tblptru	equ	0xFF8
  9495                           tblptrh	equ	0xFF7
  9496                           tblptrl	equ	0xFF6
  9497                           tablat	equ	0xFF5
  9498                           prodh	equ	0xFF4
  9499                           prodl	equ	0xFF3
  9500                           intcon	equ	0xFF2
  9501                           intcon2	equ	0xFF1
  9502                           postinc0	equ	0xFEE
  9503                           wreg	equ	0xFE8
  9504                           indf1	equ	0xFE7
  9505                           postinc1	equ	0xFE6
  9506                           postdec1	equ	0xFE5
  9507                           fsr1h	equ	0xFE2
  9508                           fsr1l	equ	0xFE1
  9509                           indf2	equ	0xFDF
  9510                           postinc2	equ	0xFDE
  9511                           postdec2	equ	0xFDD
  9512                           fsr2h	equ	0xFDA
  9513                           fsr2l	equ	0xFD9
  9514                           status	equ	0xFD8
  9515                           
  9516 ;; *************** function _isdigit *****************
  9517 ;; Defined at:
  9518 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;  c               1    wreg     unsigned char 
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;  c               1    2[BANK0 ] unsigned char 
  9523 ;; Return value:  Size  Location     Type
  9524 ;;		None               void
  9525 ;; Registers used:
  9526 ;;		wreg, status,2, status,0
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/0
  9529 ;;		On exit  : 0/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9533 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9534 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9535 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9536 ;;Total ram usage:        3 bytes
  9537 ;; Hardware stack levels used:    1
  9538 ;; Hardware stack levels required when called:   11
  9539 ;; This function calls:
  9540 ;;		Nothing
  9541 ;; This function is called by:
  9542 ;;		_sprintf
  9543 ;;		_atoi
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547                           	psect	text39
  9548  0143F4                     __ptext39:
  9549                           	opt stack 0
  9550  0143F4                     _isdigit:
  9551                           	opt stack 13
  9552                           
  9553                           ;incstack = 0
  9554                           ;isdigit@c stored from wreg
  9555  0143F4  0100               	movlb	0	; () banked
  9556  0143F6  6F62               	movwf	isdigit@c& (0+255),b
  9557  0143F8  0E00               	movlw	0
  9558  0143FA  0100               	movlb	0	; () banked
  9559  0143FC  6F61               	movwf	_isdigit$5795& (0+255),b
  9560                           
  9561                           ; BSR set to: 0
  9562  0143FE  0E3A               	movlw	58
  9563  014400  0100               	movlb	0	; () banked
  9564  014402  6162               	cpfslt	isdigit@c& (0+255),b
  9565  014404  D007               	goto	l8336
  9566                           
  9567                           ; BSR set to: 0
  9568  014406  0E2F               	movlw	47
  9569  014408  0100               	movlb	0	; () banked
  9570  01440A  6562               	cpfsgt	isdigit@c& (0+255),b
  9571  01440C  D003               	goto	l8336
  9572                           
  9573                           ; BSR set to: 0
  9574  01440E  0E01               	movlw	1
  9575  014410  0100               	movlb	0	; () banked
  9576  014412  6F61               	movwf	_isdigit$5795& (0+255),b
  9577  014414                     l8336:
  9578                           
  9579                           ; BSR set to: 0
  9580  014414  C061  F060         	movff	_isdigit$5795,??_isdigit
  9581  014418  0100               	movlb	0	; () banked
  9582  01441A  3160               	rrcf	??_isdigit& (0+255),w,b
  9583  01441C  0012               	return	
  9584  01441E                     __end_of_isdigit:
  9585                           	opt stack 0
  9586                           tblptru	equ	0xFF8
  9587                           tblptrh	equ	0xFF7
  9588                           tblptrl	equ	0xFF6
  9589                           tablat	equ	0xFF5
  9590                           prodh	equ	0xFF4
  9591                           prodl	equ	0xFF3
  9592                           intcon	equ	0xFF2
  9593                           intcon2	equ	0xFF1
  9594                           postinc0	equ	0xFEE
  9595                           wreg	equ	0xFE8
  9596                           indf1	equ	0xFE7
  9597                           postinc1	equ	0xFE6
  9598                           postdec1	equ	0xFE5
  9599                           fsr1h	equ	0xFE2
  9600                           fsr1l	equ	0xFE1
  9601                           indf2	equ	0xFDF
  9602                           postinc2	equ	0xFDE
  9603                           postdec2	equ	0xFDD
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608 ;; *************** function ___wmul *****************
  9609 ;; Defined at:
  9610 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9613 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;  product         2    4[BANK0 ] unsigned int 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  2    0[BANK0 ] unsigned int 
  9618 ;; Registers used:
  9619 ;;		wreg, status,2, status,0, prodl, prodh
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9625 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9626 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9628 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9629 ;;Total ram usage:        6 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:   11
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_sprintf
  9636 ;;		_atoi
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text40
  9641  014248                     __ptext40:
  9642                           	opt stack 0
  9643  014248                     ___wmul:
  9644                           	opt stack 13
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;incstack = 0
  9648  014248  0100               	movlb	0	; () banked
  9649  01424A  5160               	movf	___wmul@multiplier& (0+255),w,b
  9650  01424C  0100               	movlb	0	; () banked
  9651  01424E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9652  014250  CFF3 F064          	movff	prodl,___wmul@product
  9653  014254  CFF4 F065          	movff	prodh,___wmul@product+1
  9654  014258  0100               	movlb	0	; () banked
  9655  01425A  5160               	movf	___wmul@multiplier& (0+255),w,b
  9656  01425C  0100               	movlb	0	; () banked
  9657  01425E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9658  014260  50F3               	movf	prodl,w,c
  9659  014262  0100               	movlb	0	; () banked
  9660  014264  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9661  014266  0100               	movlb	0	; () banked
  9662  014268  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9663  01426A  0100               	movlb	0	; () banked
  9664  01426C  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9665  01426E  50F3               	movf	prodl,w,c
  9666  014270  0100               	movlb	0	; () banked
  9667  014272  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9668                           
  9669                           ; BSR set to: 0
  9670  014274  C064  F060         	movff	___wmul@product,?___wmul
  9671  014278  C065  F061         	movff	___wmul@product+1,?___wmul+1
  9672  01427C  0012               	return	
  9673  01427E                     __end_of___wmul:
  9674                           	opt stack 0
  9675                           tblptru	equ	0xFF8
  9676                           tblptrh	equ	0xFF7
  9677                           tblptrl	equ	0xFF6
  9678                           tablat	equ	0xFF5
  9679                           prodh	equ	0xFF4
  9680                           prodl	equ	0xFF3
  9681                           intcon	equ	0xFF2
  9682                           intcon2	equ	0xFF1
  9683                           postinc0	equ	0xFEE
  9684                           wreg	equ	0xFE8
  9685                           indf1	equ	0xFE7
  9686                           postinc1	equ	0xFE6
  9687                           postdec1	equ	0xFE5
  9688                           fsr1h	equ	0xFE2
  9689                           fsr1l	equ	0xFE1
  9690                           indf2	equ	0xFDF
  9691                           postinc2	equ	0xFDE
  9692                           postdec2	equ	0xFDD
  9693                           fsr2h	equ	0xFDA
  9694                           fsr2l	equ	0xFD9
  9695                           status	equ	0xFD8
  9696                           
  9697 ;; *************** function ___lwmod *****************
  9698 ;; Defined at:
  9699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  dividend        2    7[BANK0 ] unsigned int 
  9702 ;;  divisor         2    9[BANK0 ] unsigned int 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  counter         1   11[BANK0 ] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  2    7[BANK0 ] unsigned int 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9717 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9718 ;;Total ram usage:        5 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:   11
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		_ringbuf_put_num
  9725 ;;		_sprintf
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           	psect	text41
  9730  013DD4                     __ptext41:
  9731                           	opt stack 0
  9732  013DD4                     ___lwmod:
  9733                           	opt stack 13
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;incstack = 0
  9737  013DD4  0100               	movlb	0	; () banked
  9738  013DD6  5169               	movf	___lwmod@divisor& (0+255),w,b
  9739  013DD8  0100               	movlb	0	; () banked
  9740  013DDA  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  9741  013DDC  B4D8               	btfsc	status,2,c
  9742  013DDE  D026               	goto	l1958
  9743                           
  9744                           ; BSR set to: 0
  9745  013DE0  0E01               	movlw	1
  9746  013DE2  0100               	movlb	0	; () banked
  9747  013DE4  6F6B               	movwf	___lwmod@counter& (0+255),b
  9748  013DE6  D006               	goto	l8374
  9749  013DE8                     l8372:
  9750                           
  9751                           ; BSR set to: 0
  9752  013DE8  0100               	movlb	0	; () banked
  9753  013DEA  90D8               	bcf	status,0,c
  9754  013DEC  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  9755  013DEE  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9756  013DF0  0100               	movlb	0	; () banked
  9757  013DF2  2B6B               	incf	___lwmod@counter& (0+255),f,b
  9758  013DF4                     l8374:
  9759                           
  9760                           ; BSR set to: 0
  9761  013DF4  0100               	movlb	0	; () banked
  9762  013DF6  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9763  013DF8  D7F7               	goto	l8372
  9764  013DFA                     l8376:
  9765                           
  9766                           ; BSR set to: 0
  9767  013DFA  0100               	movlb	0	; () banked
  9768  013DFC  5169               	movf	___lwmod@divisor& (0+255),w,b
  9769  013DFE  0100               	movlb	0	; () banked
  9770  013E00  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  9771  013E02  0100               	movlb	0	; () banked
  9772  013E04  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9773  013E06  0100               	movlb	0	; () banked
  9774  013E08  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9775  013E0A  A0D8               	btfss	status,0,c
  9776  013E0C  D008               	goto	l8380
  9777                           
  9778                           ; BSR set to: 0
  9779  013E0E  0100               	movlb	0	; () banked
  9780  013E10  5169               	movf	___lwmod@divisor& (0+255),w,b
  9781  013E12  0100               	movlb	0	; () banked
  9782  013E14  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  9783  013E16  0100               	movlb	0	; () banked
  9784  013E18  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9785  013E1A  0100               	movlb	0	; () banked
  9786  013E1C  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9787  013E1E                     l8380:
  9788                           
  9789                           ; BSR set to: 0
  9790  013E1E  0100               	movlb	0	; () banked
  9791  013E20  90D8               	bcf	status,0,c
  9792  013E22  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9793  013E24  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 0
  9796  013E26  0100               	movlb	0	; () banked
  9797  013E28  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  9798  013E2A  D7E7               	goto	l8376
  9799  013E2C                     l1958:
  9800                           
  9801                           ; BSR set to: 0
  9802  013E2C  C067  F067         	movff	___lwmod@dividend,?___lwmod
  9803  013E30  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  9804                           
  9805                           ; BSR set to: 0
  9806  013E34  0012               	return		;funcret
  9807  013E36                     __end_of___lwmod:
  9808                           	opt stack 0
  9809                           tblptru	equ	0xFF8
  9810                           tblptrh	equ	0xFF7
  9811                           tblptrl	equ	0xFF6
  9812                           tablat	equ	0xFF5
  9813                           prodh	equ	0xFF4
  9814                           prodl	equ	0xFF3
  9815                           intcon	equ	0xFF2
  9816                           intcon2	equ	0xFF1
  9817                           postinc0	equ	0xFEE
  9818                           wreg	equ	0xFE8
  9819                           indf1	equ	0xFE7
  9820                           postinc1	equ	0xFE6
  9821                           postdec1	equ	0xFE5
  9822                           fsr1h	equ	0xFE2
  9823                           fsr1l	equ	0xFE1
  9824                           indf2	equ	0xFDF
  9825                           postinc2	equ	0xFDE
  9826                           postdec2	equ	0xFDD
  9827                           fsr2h	equ	0xFDA
  9828                           fsr2l	equ	0xFD9
  9829                           status	equ	0xFD8
  9830                           
  9831 ;; *************** function ___lwdiv *****************
  9832 ;; Defined at:
  9833 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  dividend        2    0[BANK0 ] unsigned int 
  9836 ;;  divisor         2    2[BANK0 ] unsigned int 
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;  quotient        2    5[BANK0 ] unsigned int 
  9839 ;;  counter         1    4[BANK0 ] unsigned char 
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  2    0[BANK0 ] unsigned int 
  9842 ;; Registers used:
  9843 ;;		wreg, status,2, status,0
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9849 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9850 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9853 ;;Total ram usage:        7 bytes
  9854 ;; Hardware stack levels used:    1
  9855 ;; Hardware stack levels required when called:   11
  9856 ;; This function calls:
  9857 ;;		Nothing
  9858 ;; This function is called by:
  9859 ;;		_ringbuf_put_num
  9860 ;;		_sprintf
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text42
  9865  0139FC                     __ptext42:
  9866                           	opt stack 0
  9867  0139FC                     ___lwdiv:
  9868                           	opt stack 13
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;incstack = 0
  9872  0139FC  0E00               	movlw	0
  9873  0139FE  0100               	movlb	0	; () banked
  9874  013A00  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9875  013A02  0E00               	movlw	0
  9876  013A04  6F65               	movwf	___lwdiv@quotient& (0+255),b
  9877                           
  9878                           ; BSR set to: 0
  9879  013A06  0100               	movlb	0	; () banked
  9880  013A08  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9881  013A0A  0100               	movlb	0	; () banked
  9882  013A0C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9883  013A0E  B4D8               	btfsc	status,2,c
  9884  013A10  D02C               	goto	l1948
  9885                           
  9886                           ; BSR set to: 0
  9887  013A12  0E01               	movlw	1
  9888  013A14  0100               	movlb	0	; () banked
  9889  013A16  6F64               	movwf	___lwdiv@counter& (0+255),b
  9890  013A18  D006               	goto	l8354
  9891  013A1A                     l8352:
  9892                           
  9893                           ; BSR set to: 0
  9894  013A1A  0100               	movlb	0	; () banked
  9895  013A1C  90D8               	bcf	status,0,c
  9896  013A1E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  9897  013A20  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9898  013A22  0100               	movlb	0	; () banked
  9899  013A24  2B64               	incf	___lwdiv@counter& (0+255),f,b
  9900  013A26                     l8354:
  9901                           
  9902                           ; BSR set to: 0
  9903  013A26  0100               	movlb	0	; () banked
  9904  013A28  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9905  013A2A  D7F7               	goto	l8352
  9906  013A2C                     l8356:
  9907                           
  9908                           ; BSR set to: 0
  9909  013A2C  0100               	movlb	0	; () banked
  9910  013A2E  90D8               	bcf	status,0,c
  9911  013A30  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  9912  013A32  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9913                           
  9914                           ; BSR set to: 0
  9915  013A34  0100               	movlb	0	; () banked
  9916  013A36  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9917  013A38  0100               	movlb	0	; () banked
  9918  013A3A  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  9919  013A3C  0100               	movlb	0	; () banked
  9920  013A3E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9921  013A40  0100               	movlb	0	; () banked
  9922  013A42  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9923  013A44  A0D8               	btfss	status,0,c
  9924  013A46  D00A               	goto	l8364
  9925                           
  9926                           ; BSR set to: 0
  9927  013A48  0100               	movlb	0	; () banked
  9928  013A4A  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9929  013A4C  0100               	movlb	0	; () banked
  9930  013A4E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  9931  013A50  0100               	movlb	0	; () banked
  9932  013A52  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9933  013A54  0100               	movlb	0	; () banked
  9934  013A56  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9935                           
  9936                           ; BSR set to: 0
  9937  013A58  0100               	movlb	0	; () banked
  9938  013A5A  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  9939  013A5C                     l8364:
  9940                           
  9941                           ; BSR set to: 0
  9942  013A5C  0100               	movlb	0	; () banked
  9943  013A5E  90D8               	bcf	status,0,c
  9944  013A60  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9945  013A62  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  9946                           
  9947                           ; BSR set to: 0
  9948  013A64  0100               	movlb	0	; () banked
  9949  013A66  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  9950  013A68  D7E1               	goto	l8356
  9951  013A6A                     l1948:
  9952                           
  9953                           ; BSR set to: 0
  9954  013A6A  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  9955  013A6E  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9956                           
  9957                           ; BSR set to: 0
  9958  013A72  0012               	return		;funcret
  9959  013A74                     __end_of___lwdiv:
  9960                           	opt stack 0
  9961                           tblptru	equ	0xFF8
  9962                           tblptrh	equ	0xFF7
  9963                           tblptrl	equ	0xFF6
  9964                           tablat	equ	0xFF5
  9965                           prodh	equ	0xFF4
  9966                           prodl	equ	0xFF3
  9967                           intcon	equ	0xFF2
  9968                           intcon2	equ	0xFF1
  9969                           postinc0	equ	0xFEE
  9970                           wreg	equ	0xFE8
  9971                           indf1	equ	0xFE7
  9972                           postinc1	equ	0xFE6
  9973                           postdec1	equ	0xFE5
  9974                           fsr1h	equ	0xFE2
  9975                           fsr1l	equ	0xFE1
  9976                           indf2	equ	0xFDF
  9977                           postinc2	equ	0xFDE
  9978                           postdec2	equ	0xFDD
  9979                           fsr2h	equ	0xFDA
  9980                           fsr2l	equ	0xFD9
  9981                           status	equ	0xFD8
  9982                           
  9983 ;; *************** function _USB_task *****************
  9984 ;; Defined at:
  9985 ;;		line 66 in file "../My_library/My_usb_cdc.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;		None
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  rx_len          2   20[BANK0 ] int 
  9990 ;;  data            1   22[BANK0 ] unsigned char 
  9991 ;; Return value:  Size  Location     Type
  9992 ;;		None               void
  9993 ;; Registers used:
  9994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10001 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10003 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10004 ;;Total ram usage:        3 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:   14
 10007 ;; This function calls:
 10008 ;;		_get_string_usb
 10009 ;;		_put_string_usb
 10010 ;;		_ringbuf_num
 10011 ;;		_ringbuf_pop
 10012 ;;		_ringbuf_put
 10013 ;; This function is called by:
 10014 ;;		_main
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           	psect	text43
 10019  013758                     __ptext43:
 10020                           	opt stack 0
 10021  013758                     _USB_task:
 10022                           	opt stack 16
 10023                           
 10024                           ;My_usb_cdc.c: 67: char data;
 10025                           ;My_usb_cdc.c: 68: int rx_len;
 10026                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;incstack = 0
 10030  013758  0E76               	movlw	low USB_task@data
 10031  01375A  0100               	movlb	0	; () banked
 10032  01375C  6F6D               	movwf	get_string_usb@s& (0+255),b
 10033  01375E  0E00               	movlw	high USB_task@data
 10034  013760  0100               	movlb	0	; () banked
 10035  013762  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 10036  013764  0E00               	movlw	0
 10037  013766  0100               	movlb	0	; () banked
 10038  013768  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 10039  01376A  0E01               	movlw	1
 10040  01376C  6F6F               	movwf	get_string_usb@len& (0+255),b
 10041  01376E  EC25  F0A0         	call	_get_string_usb	;wreg free
 10042  013772  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 10043  013776  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 10044                           
 10045                           ;My_usb_cdc.c: 70: if (rx_len) {
 10046  01377A  0100               	movlb	0	; () banked
 10047  01377C  5174               	movf	USB_task@rx_len& (0+255),w,b
 10048  01377E  0100               	movlb	0	; () banked
 10049  013780  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 10050  013782  B4D8               	btfsc	status,2,c
 10051  013784  D00A               	goto	l1341
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 10055  013786  0E5B               	movlw	low _usb_rx
 10056  013788  0100               	movlb	0	; () banked
 10057  01378A  6F68               	movwf	ringbuf_put@rb& (0+255),b
 10058  01378C  0E01               	movlw	high _usb_rx
 10059  01378E  0100               	movlb	0	; () banked
 10060  013790  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10061  013792  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 10062  013796  EC83  F094         	call	_ringbuf_put	;wreg free
 10063  01379A                     l1341:
 10064                           
 10065                           ;My_usb_cdc.c: 72: }
 10066                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 10067  01379A  0E63               	movlw	low _usb_tx
 10068  01379C  0100               	movlb	0	; () banked
 10069  01379E  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10070  0137A0  0E01               	movlw	high _usb_tx
 10071  0137A2  0100               	movlb	0	; () banked
 10072  0137A4  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10073  0137A6  EC2E  F090         	call	_ringbuf_num	;wreg free
 10074  0137AA  0100               	movlb	0	; () banked
 10075  0137AC  5160               	movf	?_ringbuf_num& (0+255),w,b
 10076  0137AE  0100               	movlb	0	; () banked
 10077  0137B0  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10078  0137B2  B4D8               	btfsc	status,2,c
 10079  0137B4  0012               	return	
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 10083  0137B6  0E63               	movlw	low _usb_tx
 10084  0137B8  0100               	movlb	0	; () banked
 10085  0137BA  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10086  0137BC  0E01               	movlw	high _usb_tx
 10087  0137BE  0100               	movlb	0	; () banked
 10088  0137C0  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10089  0137C2  EC26  F096         	call	_ringbuf_pop	;wreg free
 10090  0137C6  0100               	movlb	0	; () banked
 10091  0137C8  6F76               	movwf	USB_task@data& (0+255),b
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 10095  0137CA  0E76               	movlw	low USB_task@data
 10096  0137CC  0100               	movlb	0	; () banked
 10097  0137CE  6F6C               	movwf	put_string_usb@s& (0+255),b
 10098  0137D0  0E00               	movlw	high USB_task@data
 10099  0137D2  0100               	movlb	0	; () banked
 10100  0137D4  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 10101  0137D6  0E00               	movlw	0
 10102  0137D8  0100               	movlb	0	; () banked
 10103  0137DA  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 10104  0137DC  0E01               	movlw	1
 10105  0137DE  6F6E               	movwf	put_string_usb@len& (0+255),b
 10106  0137E0  ECB8  F0A1         	call	_put_string_usb	;wreg free
 10107  0137E4  0012               	return	
 10108  0137E6                     __end_of_USB_task:
 10109                           	opt stack 0
 10110                           tblptru	equ	0xFF8
 10111                           tblptrh	equ	0xFF7
 10112                           tblptrl	equ	0xFF6
 10113                           tablat	equ	0xFF5
 10114                           prodh	equ	0xFF4
 10115                           prodl	equ	0xFF3
 10116                           intcon	equ	0xFF2
 10117                           intcon2	equ	0xFF1
 10118                           postinc0	equ	0xFEE
 10119                           wreg	equ	0xFE8
 10120                           indf1	equ	0xFE7
 10121                           postinc1	equ	0xFE6
 10122                           postdec1	equ	0xFE5
 10123                           fsr1h	equ	0xFE2
 10124                           fsr1l	equ	0xFE1
 10125                           indf2	equ	0xFDF
 10126                           postinc2	equ	0xFDE
 10127                           postdec2	equ	0xFDD
 10128                           fsr2h	equ	0xFDA
 10129                           fsr2l	equ	0xFD9
 10130                           status	equ	0xFD8
 10131                           
 10132 ;; *************** function _put_string_usb *****************
 10133 ;; Defined at:
 10134 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;  s               2   12[BANK0 ] PTR unsigned char 
 10137 ;;		 -> USB_task@data(1), 
 10138 ;;  len             2   14[BANK0 ] int 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;		None
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  2   12[BANK0 ] int 
 10143 ;; Registers used:
 10144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10150 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10153 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10154 ;;Total ram usage:        4 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; Hardware stack levels required when called:   13
 10157 ;; This function calls:
 10158 ;;		_CDCTxService
 10159 ;;		_is_usb_available
 10160 ;;		_putUSBUSART
 10161 ;; This function is called by:
 10162 ;;		_USB_task
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           	psect	text44
 10167  014370                     __ptext44:
 10168                           	opt stack 0
 10169  014370                     _put_string_usb:
 10170                           	opt stack 16
 10171                           
 10172                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 10173                           
 10174                           ;incstack = 0
 10175  014370  EC98  F0A2         	call	_is_usb_available	;wreg free
 10176  014374  0900               	iorlw	0
 10177  014376  B4D8               	btfsc	status,2,c
 10178  014378  0012               	return	
 10179  01437A  D002               	goto	l9232
 10180  01437C                     l9230:
 10181  01437C  EC46  F08A         	call	_CDCTxService	;wreg free
 10182  014380                     l9232:
 10183  014380  5027               	movf	_cdc_trf_state,w,c
 10184  014382  A4D8               	btfss	status,2,c
 10185  014384  D7FB               	goto	l9230
 10186                           
 10187                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 10188  014386  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 10189  01438A  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 10190  01438E  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 10191  014392  EC5A  F0A2         	call	_putUSBUSART	;wreg free
 10192                           
 10193                           ;My_usb_cdc.c: 28: CDCTxService();
 10194  014396  EC46  F08A         	call	_CDCTxService	;wreg free
 10195  01439A  0012               	return	
 10196  01439C                     __end_of_put_string_usb:
 10197                           	opt stack 0
 10198                           tblptru	equ	0xFF8
 10199                           tblptrh	equ	0xFF7
 10200                           tblptrl	equ	0xFF6
 10201                           tablat	equ	0xFF5
 10202                           prodh	equ	0xFF4
 10203                           prodl	equ	0xFF3
 10204                           intcon	equ	0xFF2
 10205                           intcon2	equ	0xFF1
 10206                           postinc0	equ	0xFEE
 10207                           wreg	equ	0xFE8
 10208                           indf1	equ	0xFE7
 10209                           postinc1	equ	0xFE6
 10210                           postdec1	equ	0xFE5
 10211                           fsr1h	equ	0xFE2
 10212                           fsr1l	equ	0xFE1
 10213                           indf2	equ	0xFDF
 10214                           postinc2	equ	0xFDE
 10215                           postdec2	equ	0xFDD
 10216                           fsr2h	equ	0xFDA
 10217                           fsr2l	equ	0xFD9
 10218                           status	equ	0xFD8
 10219                           
 10220 ;; *************** function _putUSBUSART *****************
 10221 ;; Defined at:
 10222 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  data            2    0[BANK0 ] PTR unsigned char 
 10225 ;;		 -> USB_task@data(1), 
 10226 ;;  length          1    2[BANK0 ] unsigned char 
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;		None               void
 10231 ;; Registers used:
 10232 ;;		wreg, status,2, status,0
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10238 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10242 ;;Total ram usage:        3 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:   11
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_put_string_usb
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text45
 10253  0144B4                     __ptext45:
 10254                           	opt stack 0
 10255  0144B4                     _putUSBUSART:
 10256                           	opt stack 17
 10257                           
 10258                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 10259                           
 10260                           ;incstack = 0
 10261  0144B4  98A0               	bcf	4000,4,c	;volatile
 10262                           
 10263                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 10264  0144B6  5027               	movf	_cdc_trf_state,w,c
 10265  0144B8  A4D8               	btfss	status,2,c
 10266  0144BA  D00A               	goto	l8850
 10267                           
 10268                           ;usb_device_cdc.c: 640: {
 10269                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 10270  0144BC  C060  F11E         	movff	putUSBUSART@data,_pCDCSrc
 10271  0144C0  C061  F11F         	movff	putUSBUSART@data+1,_pCDCSrc+1
 10272  0144C4  C062  F0D3         	movff	putUSBUSART@length,_cdc_tx_len
 10273  0144C8  0E01               	movlw	1
 10274  0144CA  6E26               	movwf	_cdc_mem_type,c
 10275  0144CC  0E01               	movlw	1
 10276  0144CE  6E27               	movwf	_cdc_trf_state,c
 10277  0144D0                     l8850:
 10278                           
 10279                           ;usb_device_cdc.c: 642: }
 10280                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 10281  0144D0  88A0               	bsf	4000,4,c	;volatile
 10282  0144D2  0012               	return		;funcret
 10283  0144D4                     __end_of_putUSBUSART:
 10284                           	opt stack 0
 10285                           tblptru	equ	0xFF8
 10286                           tblptrh	equ	0xFF7
 10287                           tblptrl	equ	0xFF6
 10288                           tablat	equ	0xFF5
 10289                           prodh	equ	0xFF4
 10290                           prodl	equ	0xFF3
 10291                           intcon	equ	0xFF2
 10292                           intcon2	equ	0xFF1
 10293                           postinc0	equ	0xFEE
 10294                           wreg	equ	0xFE8
 10295                           indf1	equ	0xFE7
 10296                           postinc1	equ	0xFE6
 10297                           postdec1	equ	0xFE5
 10298                           fsr1h	equ	0xFE2
 10299                           fsr1l	equ	0xFE1
 10300                           indf2	equ	0xFDF
 10301                           postinc2	equ	0xFDE
 10302                           postdec2	equ	0xFDD
 10303                           fsr2h	equ	0xFDA
 10304                           fsr2l	equ	0xFD9
 10305                           status	equ	0xFD8
 10306                           
 10307 ;; *************** function _get_string_usb *****************
 10308 ;; Defined at:
 10309 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  s               2   13[BANK0 ] PTR unsigned char 
 10312 ;;		 -> USB_task@data(1), 
 10313 ;;  len             2   15[BANK0 ] int 
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;  rx_len          2   18[BANK0 ] int 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  2   13[BANK0 ] int 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10325 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10326 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10327 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10328 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10329 ;;Total ram usage:        7 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:   13
 10332 ;; This function calls:
 10333 ;;		_CDCTxService
 10334 ;;		_getsUSBUSART
 10335 ;;		_is_usb_available
 10336 ;; This function is called by:
 10337 ;;		_USB_task
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text46
 10342  01404A                     __ptext46:
 10343                           	opt stack 0
 10344  01404A                     _get_string_usb:
 10345                           	opt stack 16
 10346                           
 10347                           ;My_usb_cdc.c: 33: int rx_len;
 10348                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 10349                           
 10350                           ;incstack = 0
 10351  01404A  EC98  F0A2         	call	_is_usb_available	;wreg free
 10352  01404E  0900               	iorlw	0
 10353  014050  A4D8               	btfss	status,2,c
 10354  014052  D008               	goto	l9248
 10355                           
 10356                           ;My_usb_cdc.c: 36: return 0;
 10357  014054  0E00               	movlw	0
 10358  014056  0100               	movlb	0	; () banked
 10359  014058  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 10360  01405A  0E00               	movlw	0
 10361  01405C  6F6D               	movwf	?_get_string_usb& (0+255),b
 10362                           
 10363                           ; BSR set to: 0
 10364  01405E  0012               	return	
 10365  014060                     l9246:
 10366  014060  EC46  F08A         	call	_CDCTxService	;wreg free
 10367  014064                     l9248:
 10368  014064  5027               	movf	_cdc_trf_state,w,c
 10369  014066  A4D8               	btfss	status,2,c
 10370  014068  D7FB               	goto	l9246
 10371                           
 10372                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 10373  01406A  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 10374  01406E  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 10375  014072  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 10376  014076  ECA5  F090         	call	_getsUSBUSART	;wreg free
 10377  01407A  0100               	movlb	0	; () banked
 10378  01407C  6F71               	movwf	??_get_string_usb& (0+255),b
 10379  01407E  0100               	movlb	0	; () banked
 10380  014080  5171               	movf	??_get_string_usb& (0+255),w,b
 10381  014082  0100               	movlb	0	; () banked
 10382  014084  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 10383  014086  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 10384                           
 10385                           ;My_usb_cdc.c: 40: CDCTxService();
 10386  014088  EC46  F08A         	call	_CDCTxService	;wreg free
 10387                           
 10388                           ;My_usb_cdc.c: 41: return rx_len;
 10389  01408C  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 10390  014090  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 10391  014094  0012               	return	
 10392  014096                     __end_of_get_string_usb:
 10393                           	opt stack 0
 10394                           tblptru	equ	0xFF8
 10395                           tblptrh	equ	0xFF7
 10396                           tblptrl	equ	0xFF6
 10397                           tablat	equ	0xFF5
 10398                           prodh	equ	0xFF4
 10399                           prodl	equ	0xFF3
 10400                           intcon	equ	0xFF2
 10401                           intcon2	equ	0xFF1
 10402                           postinc0	equ	0xFEE
 10403                           wreg	equ	0xFE8
 10404                           indf1	equ	0xFE7
 10405                           postinc1	equ	0xFE6
 10406                           postdec1	equ	0xFE5
 10407                           fsr1h	equ	0xFE2
 10408                           fsr1l	equ	0xFE1
 10409                           indf2	equ	0xFDF
 10410                           postinc2	equ	0xFDE
 10411                           postdec2	equ	0xFDD
 10412                           fsr2h	equ	0xFDA
 10413                           fsr2l	equ	0xFD9
 10414                           status	equ	0xFD8
 10415                           
 10416 ;; *************** function _is_usb_available *****************
 10417 ;; Defined at:
 10418 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;		None
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;		None
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      unsigned char 
 10425 ;; Registers used:
 10426 ;;		wreg, status,2, status,0
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10433 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10435 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10436 ;;Total ram usage:        1 bytes
 10437 ;; Hardware stack levels used:    1
 10438 ;; Hardware stack levels required when called:   11
 10439 ;; This function calls:
 10440 ;;		Nothing
 10441 ;; This function is called by:
 10442 ;;		_put_string_usb
 10443 ;;		_get_string_usb
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           	psect	text47
 10448  014530                     __ptext47:
 10449                           	opt stack 0
 10450  014530                     _is_usb_available:
 10451                           	opt stack 17
 10452                           
 10453                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 10454                           
 10455                           ;incstack = 0
 10456  014530  0E00               	movlw	0
 10457  014532  0100               	movlb	0	; () banked
 10458  014534  6F60               	movwf	_is_usb_available$5180& (0+255),b
 10459                           
 10460                           ; BSR set to: 0
 10461  014536  0E1F               	movlw	31
 10462  014538  6422               	cpfsgt	_USBDeviceState,c	;volatile
 10463  01453A  D005               	goto	l1309
 10464                           
 10465                           ; BSR set to: 0
 10466  01453C  B265               	btfsc	3941,1,c	;volatile
 10467  01453E  D003               	goto	l1309
 10468                           
 10469                           ; BSR set to: 0
 10470  014540  0E01               	movlw	1
 10471  014542  0100               	movlb	0	; () banked
 10472  014544  6F60               	movwf	_is_usb_available$5180& (0+255),b
 10473  014546                     l1309:
 10474                           
 10475                           ; BSR set to: 0
 10476  014546  0100               	movlb	0	; () banked
 10477  014548  5160               	movf	_is_usb_available$5180& (0+255),w,b
 10478  01454A  0012               	return	
 10479  01454C                     __end_of_is_usb_available:
 10480                           	opt stack 0
 10481                           tblptru	equ	0xFF8
 10482                           tblptrh	equ	0xFF7
 10483                           tblptrl	equ	0xFF6
 10484                           tablat	equ	0xFF5
 10485                           prodh	equ	0xFF4
 10486                           prodl	equ	0xFF3
 10487                           intcon	equ	0xFF2
 10488                           intcon2	equ	0xFF1
 10489                           postinc0	equ	0xFEE
 10490                           wreg	equ	0xFE8
 10491                           indf1	equ	0xFE7
 10492                           postinc1	equ	0xFE6
 10493                           postdec1	equ	0xFE5
 10494                           fsr1h	equ	0xFE2
 10495                           fsr1l	equ	0xFE1
 10496                           indf2	equ	0xFDF
 10497                           postinc2	equ	0xFDE
 10498                           postdec2	equ	0xFDD
 10499                           fsr2h	equ	0xFDA
 10500                           fsr2l	equ	0xFD9
 10501                           status	equ	0xFD8
 10502                           
 10503 ;; *************** function _getsUSBUSART *****************
 10504 ;; Defined at:
 10505 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 10508 ;;		 -> USB_task@data(1), 
 10509 ;;  len             1    9[BANK0 ] unsigned char 
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;		None
 10512 ;; Return value:  Size  Location     Type
 10513 ;;                  1    wreg      unsigned char 
 10514 ;; Registers used:
 10515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10516 ;; Tracked objects:
 10517 ;;		On entry : 0/0
 10518 ;;		On exit  : 0/0
 10519 ;;		Unchanged: 0/0
 10520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10521 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10523 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10524 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10525 ;;Total ram usage:        6 bytes
 10526 ;; Hardware stack levels used:    1
 10527 ;; Hardware stack levels required when called:   12
 10528 ;; This function calls:
 10529 ;;		_USBTransferOnePacket
 10530 ;; This function is called by:
 10531 ;;		_get_string_usb
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           	psect	text48
 10536  01214A                     __ptext48:
 10537                           	opt stack 0
 10538  01214A                     _getsUSBUSART:
 10539                           	opt stack 16
 10540                           
 10541                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;incstack = 0
 10545  01214A  0E00               	movlw	0
 10546  01214C  0100               	movlb	0	; () banked
 10547  01214E  6FD2               	movwf	_cdc_rx_len& (0+255),b
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 10551  012150  0100               	movlb	0	; () banked
 10552  012152  51D0               	movf	_CDCDataOutHandle& (0+255),w,b
 10553  012154  0100               	movlb	0	; () banked
 10554  012156  11D1               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 10555  012158  B4D8               	btfsc	status,2,c
 10556  01215A  D013               	goto	l8816
 10557                           
 10558                           ; BSR set to: 0
 10559  01215C  C0D0  FFD9         	movff	_CDCDataOutHandle,fsr2l
 10560  012160  C0D1  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 10561  012164  0100               	movlb	0	; () banked
 10562  012166  AEDF               	btfss	indf2,7,c
 10563  012168  D004               	goto	u8570
 10564  01216A  0100               	movlb	0	; () banked
 10565  01216C  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10566  01216E  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 10567  012170  D002               	goto	u8578
 10568  012172                     u8570:
 10569  012172  0100               	movlb	0	; () banked
 10570  012174  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10571  012176                     u8578:
 10572  012176  0100               	movlb	0	; () banked
 10573  012178  516A               	movf	??_getsUSBUSART& (0+255),w,b
 10574  01217A  0100               	movlb	0	; () banked
 10575  01217C  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 10576  01217E  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 10577  012180  D005               	goto	l8818
 10578  012182                     l8816:
 10579                           
 10580                           ; BSR set to: 0
 10581  012182  0E00               	movlw	0
 10582  012184  0100               	movlb	0	; () banked
 10583  012186  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 10584  012188  0E00               	movlw	0
 10585  01218A  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 10586  01218C                     l8818:
 10587                           
 10588                           ; BSR set to: 0
 10589  01218C  0100               	movlb	0	; () banked
 10590  01218E  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 10591  012190  0100               	movlb	0	; () banked
 10592  012192  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 10593  012194  A4D8               	btfss	status,2,c
 10594  012196  D04B               	goto	l8834
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;usb_device_cdc.c: 547: {
 10598                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 10599  012198  0100               	movlb	0	; () banked
 10600  01219A  EE20 F001          	lfsr	2,1
 10601  01219E  51D0               	movf	_CDCDataOutHandle& (0+255),w,b
 10602  0121A0  26D9               	addwf	fsr2l,f,c
 10603  0121A2  51D1               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10604  0121A4  22DA               	addwfc	fsr2h,f,c
 10605  0121A6  0100               	movlb	0	; () banked
 10606  0121A8  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10607  0121AA  5CDE               	subwf	postinc2,w,c
 10608  0121AC  B0D8               	btfsc	status,0,c
 10609  0121AE  D00A               	goto	l8824
 10610                           
 10611                           ; BSR set to: 0
 10612                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 10613  0121B0  0100               	movlb	0	; () banked
 10614  0121B2  EE20 F001          	lfsr	2,1
 10615  0121B6  51D0               	movf	_CDCDataOutHandle& (0+255),w,b
 10616  0121B8  26D9               	addwf	fsr2l,f,c
 10617  0121BA  51D1               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10618  0121BC  22DA               	addwfc	fsr2h,f,c
 10619  0121BE  50DF               	movf	indf2,w,c
 10620  0121C0  0100               	movlb	0	; () banked
 10621  0121C2  6F69               	movwf	getsUSBUSART@len& (0+255),b
 10622  0121C4                     l8824:
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 10626  0121C4  0E00               	movlw	0
 10627  0121C6  0100               	movlb	0	; () banked
 10628  0121C8  6FD2               	movwf	_cdc_rx_len& (0+255),b
 10629  0121CA  D018               	goto	l8830
 10630  0121CC                     l8826:
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 10634  0121CC  0100               	movlb	0	; () banked
 10635  0121CE  51D2               	movf	_cdc_rx_len& (0+255),w,b
 10636  0121D0  0D01               	mullw	1
 10637  0121D2  0E00               	movlw	low _cdc_data_rx
 10638  0121D4  24F3               	addwf	prodl,w,c
 10639  0121D6  6ED9               	movwf	fsr2l,c
 10640  0121D8  0E02               	movlw	high _cdc_data_rx
 10641  0121DA  20F4               	addwfc	prodh,w,c
 10642  0121DC  6EDA               	movwf	fsr2h,c
 10643  0121DE  0100               	movlb	0	; () banked
 10644  0121E0  51D2               	movf	_cdc_rx_len& (0+255),w,b
 10645  0121E2  0D01               	mullw	1
 10646  0121E4  50F3               	movf	prodl,w,c
 10647  0121E6  0100               	movlb	0	; () banked
 10648  0121E8  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 10649  0121EA  6EE1               	movwf	fsr1l,c
 10650  0121EC  50F4               	movf	prodh,w,c
 10651  0121EE  0100               	movlb	0	; () banked
 10652  0121F0  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 10653  0121F2  6EE2               	movwf	fsr1h,c
 10654  0121F4  CFDF FFE7          	movff	indf2,indf1
 10655                           
 10656                           ; BSR set to: 0
 10657  0121F8  0100               	movlb	0	; () banked
 10658  0121FA  2BD2               	incf	_cdc_rx_len& (0+255),f,b
 10659  0121FC                     l8830:
 10660                           
 10661                           ; BSR set to: 0
 10662  0121FC  0100               	movlb	0	; () banked
 10663  0121FE  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10664  012200  0100               	movlb	0	; () banked
 10665  012202  5DD2               	subwf	_cdc_rx_len& (0+255),w,b
 10666  012204  A0D8               	btfss	status,0,c
 10667  012206  D7E2               	goto	l8826
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10671                           
 10672                           ; BSR set to: 0
 10673  012208  0E00               	movlw	0
 10674  01220A  0100               	movlb	0	; () banked
 10675  01220C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10676  01220E  0E00               	movlw	low _cdc_data_rx
 10677  012210  0100               	movlb	0	; () banked
 10678  012212  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10679  012214  0E02               	movlw	high _cdc_data_rx
 10680  012216  0100               	movlb	0	; () banked
 10681  012218  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10682  01221A  0E40               	movlw	64
 10683  01221C  0100               	movlb	0	; () banked
 10684  01221E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10685  012220  0E02               	movlw	2
 10686  012222  EC42  F093         	call	_USBTransferOnePacket
 10687  012226  C060  F0D0         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10688  01222A  C061  F0D1         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10689  01222E                     l8834:
 10690                           
 10691                           ;usb_device_cdc.c: 567: }
 10692                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 10693  01222E  0100               	movlb	0	; () banked
 10694  012230  51D2               	movf	_cdc_rx_len& (0+255),w,b
 10695  012232  0012               	return	
 10696  012234                     __end_of_getsUSBUSART:
 10697                           	opt stack 0
 10698                           tblptru	equ	0xFF8
 10699                           tblptrh	equ	0xFF7
 10700                           tblptrl	equ	0xFF6
 10701                           tablat	equ	0xFF5
 10702                           prodh	equ	0xFF4
 10703                           prodl	equ	0xFF3
 10704                           intcon	equ	0xFF2
 10705                           intcon2	equ	0xFF1
 10706                           postinc0	equ	0xFEE
 10707                           wreg	equ	0xFE8
 10708                           indf1	equ	0xFE7
 10709                           postinc1	equ	0xFE6
 10710                           postdec1	equ	0xFE5
 10711                           fsr1h	equ	0xFE2
 10712                           fsr1l	equ	0xFE1
 10713                           indf2	equ	0xFDF
 10714                           postinc2	equ	0xFDE
 10715                           postdec2	equ	0xFDD
 10716                           fsr2h	equ	0xFDA
 10717                           fsr2l	equ	0xFD9
 10718                           status	equ	0xFD8
 10719                           
 10720 ;; *************** function _CDCTxService *****************
 10721 ;; Defined at:
 10722 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;		None
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 10727 ;;  i               1   10[BANK0 ] unsigned char 
 10728 ;; Return value:  Size  Location     Type
 10729 ;;		None               void
 10730 ;; Registers used:
 10731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10738 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10740 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10741 ;;Total ram usage:        5 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:   12
 10744 ;; This function calls:
 10745 ;;		_USBTransferOnePacket
 10746 ;; This function is called by:
 10747 ;;		_put_string_usb
 10748 ;;		_get_string_usb
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text49
 10753  01148C                     __ptext49:
 10754                           	opt stack 0
 10755  01148C                     _CDCTxService:
 10756                           	opt stack 16
 10757                           
 10758                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 10759                           ;usb_device_cdc.c: 896: uint8_t i;
 10760                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;incstack = 0
 10764  01148C  98A0               	bcf	4000,4,c	;volatile
 10765                           
 10766                           ;usb_device_cdc.c: 900: {};
 10767                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 10768  01148E  0101               	movlb	1	; () banked
 10769  011490  5125               	movf	_CDCDataInHandle& (0+255),w,b
 10770  011492  0101               	movlb	1	; () banked
 10771  011494  1126               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 10772  011496  B4D8               	btfsc	status,2,c
 10773  011498  D013               	goto	l8858
 10774                           
 10775                           ; BSR set to: 1
 10776  01149A  C125  FFD9         	movff	_CDCDataInHandle,fsr2l
 10777  01149E  C126  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 10778  0114A2  0101               	movlb	1	; () banked
 10779  0114A4  AEDF               	btfss	indf2,7,c
 10780  0114A6  D004               	goto	u8630
 10781  0114A8  0100               	movlb	0	; () banked
 10782  0114AA  6B67               	clrf	??_CDCTxService& (0+255),b
 10783  0114AC  2B67               	incf	??_CDCTxService& (0+255),f,b
 10784  0114AE  D002               	goto	u8638
 10785  0114B0                     u8630:
 10786  0114B0  0100               	movlb	0	; () banked
 10787  0114B2  6B67               	clrf	??_CDCTxService& (0+255),b
 10788  0114B4                     u8638:
 10789  0114B4  0100               	movlb	0	; () banked
 10790  0114B6  5167               	movf	??_CDCTxService& (0+255),w,b
 10791  0114B8  0100               	movlb	0	; () banked
 10792  0114BA  6F68               	movwf	_CDCTxService$2005& (0+255),b
 10793  0114BC  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 10794  0114BE  D005               	goto	l8860
 10795  0114C0                     l8858:
 10796  0114C0  0E00               	movlw	0
 10797  0114C2  0100               	movlb	0	; () banked
 10798  0114C4  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 10799  0114C6  0E00               	movlw	0
 10800  0114C8  6F68               	movwf	_CDCTxService$2005& (0+255),b
 10801  0114CA                     l8860:
 10802                           
 10803                           ; BSR set to: 0
 10804  0114CA  0100               	movlb	0	; () banked
 10805  0114CC  5168               	movf	_CDCTxService$2005& (0+255),w,b
 10806  0114CE  0100               	movlb	0	; () banked
 10807  0114D0  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 10808  0114D2  B4D8               	btfsc	status,2,c
 10809  0114D4  D002               	goto	l8864
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;usb_device_cdc.c: 903: {
 10813                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 10814  0114D6  88A0               	bsf	4000,4,c	;volatile
 10815                           
 10816                           ;usb_device_cdc.c: 905: return;
 10817  0114D8  0012               	return	
 10818  0114DA                     l8864:
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;usb_device_cdc.c: 906: }
 10822                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 10823  0114DA  0E03               	movlw	3
 10824  0114DC  1827               	xorwf	_cdc_trf_state,w,c
 10825  0114DE  A4D8               	btfss	status,2,c
 10826  0114E0  D002               	goto	l504
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 10830  0114E2  0E00               	movlw	0
 10831  0114E4  6E27               	movwf	_cdc_trf_state,c
 10832  0114E6                     l504:
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 10836  0114E6  5027               	movf	_cdc_trf_state,w,c
 10837  0114E8  A4D8               	btfss	status,2,c
 10838  0114EA  D002               	goto	l8870
 10839                           
 10840                           ; BSR set to: 0
 10841                           ;usb_device_cdc.c: 920: {
 10842                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 10843  0114EC  88A0               	bsf	4000,4,c	;volatile
 10844                           
 10845                           ;usb_device_cdc.c: 922: return;
 10846  0114EE  0012               	return	
 10847  0114F0                     l8870:
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;usb_device_cdc.c: 923: }
 10851                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 10852  0114F0  0E02               	movlw	2
 10853  0114F2  1827               	xorwf	_cdc_trf_state,w,c
 10854  0114F4  A4D8               	btfss	status,2,c
 10855  0114F6  D016               	goto	l8876
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;usb_device_cdc.c: 929: {
 10859                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 10860  0114F8  0E01               	movlw	1
 10861  0114FA  0100               	movlb	0	; () banked
 10862  0114FC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10863  0114FE  0E00               	movlw	0
 10864  011500  0100               	movlb	0	; () banked
 10865  011502  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10866  011504  0E00               	movlw	0
 10867  011506  0100               	movlb	0	; () banked
 10868  011508  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10869  01150A  0E00               	movlw	0
 10870  01150C  0100               	movlb	0	; () banked
 10871  01150E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10872  011510  0E02               	movlw	2
 10873  011512  EC42  F093         	call	_USBTransferOnePacket
 10874  011516  C060  F125         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 10875  01151A  C061  F126         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 10876                           
 10877                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 10878  01151E  0E03               	movlw	3
 10879  011520  6E27               	movwf	_cdc_trf_state,c
 10880                           
 10881                           ;usb_device_cdc.c: 933: }
 10882  011522  D06E               	goto	l8920
 10883  011524                     l8876:
 10884                           
 10885                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 10886  011524  0427               	decf	_cdc_trf_state,w,c
 10887  011526  A4D8               	btfss	status,2,c
 10888  011528  D06B               	goto	l8920
 10889                           
 10890                           ;usb_device_cdc.c: 935: {
 10891                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 10892  01152A  0E40               	movlw	64
 10893  01152C  0100               	movlb	0	; () banked
 10894  01152E  65D3               	cpfsgt	_cdc_tx_len& (0+255),b
 10895  011530  D004               	goto	l509
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 10899  011532  0E40               	movlw	64
 10900  011534  0100               	movlb	0	; () banked
 10901  011536  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 10902  011538  D002               	goto	l8882
 10903  01153A                     l509:
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;usb_device_cdc.c: 941: else
 10907                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 10908  01153A  C0D3  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 10909  01153E                     l8882:
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 10913  01153E  0100               	movlb	0	; () banked
 10914  011540  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 10915  011542  0800               	sublw	0
 10916  011544  0100               	movlb	0	; () banked
 10917  011546  25D3               	addwf	_cdc_tx_len& (0+255),w,b
 10918  011548  0100               	movlb	0	; () banked
 10919  01154A  6FD3               	movwf	_cdc_tx_len& (0+255),b
 10920                           
 10921                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 10922  01154C  0E40               	movlw	low _cdc_data_tx
 10923  01154E  0101               	movlb	1	; () banked
 10924  011550  6F1B               	movwf	_pCDCDst& (0+255),b
 10925  011552  0E02               	movlw	high _cdc_data_tx
 10926  011554  0101               	movlb	1	; () banked
 10927  011556  6F1C               	movwf	(_pCDCDst+1)& (0+255),b
 10928                           
 10929                           ; BSR set to: 1
 10930                           ;usb_device_cdc.c: 951: i = byte_to_send;
 10931  011558  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 10932                           
 10933                           ; BSR set to: 1
 10934                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 10935  01155C  5026               	movf	_cdc_mem_type,w,c
 10936  01155E  B4D8               	btfsc	status,2,c
 10937  011560  D013               	goto	l8898
 10938  011562  D02A               	goto	l8908
 10939  011564                     l8890:
 10940                           
 10941                           ;usb_device_cdc.c: 955: {
 10942                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 10943  011564  C11E  FFD9         	movff	_pCDCSrc,fsr2l
 10944  011568  C11F  FFDA         	movff	_pCDCSrc+1,fsr2h
 10945  01156C  C11B  FFE1         	movff	_pCDCDst,fsr1l
 10946  011570  C11C  FFE2         	movff	_pCDCDst+1,fsr1h
 10947  011574  CFDF FFE7          	movff	indf2,indf1
 10948                           
 10949                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 10950  011578  0101               	movlb	1	; () banked
 10951  01157A  4B1B               	infsnz	_pCDCDst& (0+255),f,b
 10952  01157C  2B1C               	incf	(_pCDCDst+1)& (0+255),f,b
 10953                           
 10954                           ; BSR set to: 1
 10955                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 10956  01157E  0101               	movlb	1	; () banked
 10957  011580  4B1E               	infsnz	_pCDCSrc& (0+255),f,b
 10958  011582  2B1F               	incf	(_pCDCSrc+1)& (0+255),f,b
 10959                           
 10960                           ; BSR set to: 1
 10961                           ;usb_device_cdc.c: 959: i--;
 10962  011584  0100               	movlb	0	; () banked
 10963  011586  076A               	decf	CDCTxService@i& (0+255),f,b
 10964  011588                     l8898:
 10965  011588  0100               	movlb	0	; () banked
 10966  01158A  516A               	movf	CDCTxService@i& (0+255),w,b
 10967  01158C  0100               	movlb	0	; () banked
 10968  01158E  B4D8               	btfsc	status,2,c
 10969  011590  D018               	goto	l8910
 10970  011592  D7E8               	goto	l8890
 10971  011594                     l8900:
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;usb_device_cdc.c: 965: {
 10975                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 10976  011594  C11E  FFD9         	movff	_pCDCSrc,fsr2l
 10977  011598  C11F  FFDA         	movff	_pCDCSrc+1,fsr2h
 10978  01159C  C11B  FFE1         	movff	_pCDCDst,fsr1l
 10979  0115A0  C11C  FFE2         	movff	_pCDCDst+1,fsr1h
 10980  0115A4  CFDF FFE7          	movff	indf2,indf1
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 10984  0115A8  0101               	movlb	1	; () banked
 10985  0115AA  4B1B               	infsnz	_pCDCDst& (0+255),f,b
 10986  0115AC  2B1C               	incf	(_pCDCDst+1)& (0+255),f,b
 10987                           
 10988                           ; BSR set to: 1
 10989                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 10990  0115AE  0101               	movlb	1	; () banked
 10991  0115B0  4B1E               	infsnz	_pCDCSrc& (0+255),f,b
 10992  0115B2  2B1F               	incf	(_pCDCSrc+1)& (0+255),f,b
 10993                           
 10994                           ; BSR set to: 1
 10995                           ;usb_device_cdc.c: 969: i--;
 10996  0115B4  0100               	movlb	0	; () banked
 10997  0115B6  076A               	decf	CDCTxService@i& (0+255),f,b
 10998  0115B8                     l8908:
 10999  0115B8  0100               	movlb	0	; () banked
 11000  0115BA  516A               	movf	CDCTxService@i& (0+255),w,b
 11001  0115BC  0100               	movlb	0	; () banked
 11002  0115BE  A4D8               	btfss	status,2,c
 11003  0115C0  D7E9               	goto	l8900
 11004  0115C2                     l8910:
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;usb_device_cdc.c: 970: }
 11008                           ;usb_device_cdc.c: 971: }
 11009                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 11010  0115C2  0100               	movlb	0	; () banked
 11011  0115C4  51D3               	movf	_cdc_tx_len& (0+255),w,b
 11012  0115C6  A4D8               	btfss	status,2,c
 11013  0115C8  D009               	goto	l8918
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;usb_device_cdc.c: 978: {
 11017                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 11018  0115CA  0E40               	movlw	64
 11019  0115CC  0100               	movlb	0	; () banked
 11020  0115CE  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 11021  0115D0  A4D8               	btfss	status,2,c
 11022  0115D2  D002               	goto	l8916
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 11026  0115D4  0E02               	movlw	2
 11027  0115D6  D001               	goto	L1
 11028  0115D8                     l8916:
 11029                           
 11030                           ; BSR set to: 0
 11031                           ;usb_device_cdc.c: 981: else
 11032                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 11033  0115D8  0E03               	movlw	3
 11034  0115DA                     L1:
 11035  0115DA  6E27               	movwf	_cdc_trf_state,c
 11036  0115DC                     l8918:
 11037                           
 11038                           ; BSR set to: 0
 11039                           ;usb_device_cdc.c: 983: }
 11040                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 11041  0115DC  0E01               	movlw	1
 11042  0115DE  0100               	movlb	0	; () banked
 11043  0115E0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11044  0115E2  0E40               	movlw	low _cdc_data_tx
 11045  0115E4  0100               	movlb	0	; () banked
 11046  0115E6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11047  0115E8  0E02               	movlw	high _cdc_data_tx
 11048  0115EA  0100               	movlb	0	; () banked
 11049  0115EC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11050  0115EE  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 11051  0115F2  0E02               	movlw	2
 11052  0115F4  EC42  F093         	call	_USBTransferOnePacket
 11053  0115F8  C060  F125         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11054  0115FC  C061  F126         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11055  011600                     l8920:
 11056                           
 11057                           ;usb_device_cdc.c: 986: }
 11058                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 11059  011600  88A0               	bsf	4000,4,c	;volatile
 11060  011602  0012               	return		;funcret
 11061  011604                     __end_of_CDCTxService:
 11062                           	opt stack 0
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           prodh	equ	0xFF4
 11068                           prodl	equ	0xFF3
 11069                           intcon	equ	0xFF2
 11070                           intcon2	equ	0xFF1
 11071                           postinc0	equ	0xFEE
 11072                           wreg	equ	0xFE8
 11073                           indf1	equ	0xFE7
 11074                           postinc1	equ	0xFE6
 11075                           postdec1	equ	0xFE5
 11076                           fsr1h	equ	0xFE2
 11077                           fsr1l	equ	0xFE1
 11078                           indf2	equ	0xFDF
 11079                           postinc2	equ	0xFDE
 11080                           postdec2	equ	0xFDD
 11081                           fsr2h	equ	0xFDA
 11082                           fsr2l	equ	0xFD9
 11083                           status	equ	0xFD8
 11084                           
 11085 ;; *************** function _USBTransferOnePacket *****************
 11086 ;; Defined at:
 11087 ;;		line 995 in file "../My_library/usb/usb_device.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;  ep              1    wreg     unsigned char 
 11090 ;;  dir             1    0[BANK0 ] unsigned char 
 11091 ;;  data            2    1[BANK0 ] PTR unsigned char 
 11092 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 11093 ;;  len             1    3[BANK0 ] unsigned char 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;  ep              1    4[BANK0 ] unsigned char 
 11096 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 11097 ;;		 -> NULL(0), BDT(48), 
 11098 ;; Return value:  Size  Location     Type
 11099 ;;                  2    0[BANK0 ] PTR void 
 11100 ;; Registers used:
 11101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11102 ;; Tracked objects:
 11103 ;;		On entry : 0/0
 11104 ;;		On exit  : 0/0
 11105 ;;		Unchanged: 0/0
 11106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11107 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11110 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11111 ;;Total ram usage:        7 bytes
 11112 ;; Hardware stack levels used:    1
 11113 ;; Hardware stack levels required when called:   11
 11114 ;; This function calls:
 11115 ;;		Nothing
 11116 ;; This function is called by:
 11117 ;;		_getsUSBUSART
 11118 ;;		_CDCTxService
 11119 ;;		_USBCDCEventHandler
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           	psect	text50
 11124  012684                     __ptext50:
 11125                           	opt stack 0
 11126  012684                     _USBTransferOnePacket:
 11127                           	opt stack 16
 11128                           
 11129                           ;incstack = 0
 11130                           ;USBTransferOnePacket@ep stored from wreg
 11131  012684  0100               	movlb	0	; () banked
 11132  012686  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 11133                           
 11134                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 11135                           ;usb_device.c: 1000: if(dir != 0)
 11136  012688  0100               	movlb	0	; () banked
 11137  01268A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11138  01268C  0100               	movlb	0	; () banked
 11139  01268E  B4D8               	btfsc	status,2,c
 11140  012690  D008               	goto	l8646
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;usb_device.c: 1001: {
 11144                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 11145  012692  0100               	movlb	0	; () banked
 11146  012694  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11147  012696  0D02               	mullw	2
 11148  012698  0E10               	movlw	low _pBDTEntryIn
 11149  01269A  24F3               	addwf	prodl,w,c
 11150  01269C  6ED9               	movwf	fsr2l,c
 11151  01269E  0E00               	movlw	high _pBDTEntryIn
 11152  0126A0  D007               	goto	L2
 11153  0126A2                     l8646:
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;usb_device.c: 1005: else
 11157                           ;usb_device.c: 1006: {
 11158                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 11159  0126A2  0100               	movlb	0	; () banked
 11160  0126A4  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11161  0126A6  0D02               	mullw	2
 11162  0126A8  0E0A               	movlw	low _pBDTEntryOut
 11163  0126AA  24F3               	addwf	prodl,w,c
 11164  0126AC  6ED9               	movwf	fsr2l,c
 11165  0126AE  0E01               	movlw	high _pBDTEntryOut
 11166  0126B0                     L2:
 11167  0126B0  20F4               	addwfc	prodh,w,c
 11168  0126B2  6EDA               	movwf	fsr2h,c
 11169  0126B4  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 11170  0126B8  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;usb_device.c: 1009: }
 11174                           ;usb_device.c: 1013: if(handle == 0)
 11175                           
 11176                           ; BSR set to: 0
 11177  0126BC  0100               	movlb	0	; () banked
 11178  0126BE  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11179  0126C0  0100               	movlb	0	; () banked
 11180  0126C2  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11181  0126C4  A4D8               	btfss	status,2,c
 11182  0126C6  D007               	goto	l8654
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;usb_device.c: 1014: {
 11186                           ;usb_device.c: 1015: return 0;
 11187  0126C8  0E00               	movlw	0
 11188  0126CA  0100               	movlb	0	; () banked
 11189  0126CC  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 11190  0126CE  0E00               	movlw	0
 11191  0126D0  0100               	movlb	0	; () banked
 11192  0126D2  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 11193                           
 11194                           ; BSR set to: 0
 11195  0126D4  0012               	return	
 11196  0126D6                     l8654:
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;usb_device.c: 1016: }
 11200                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 11201  0126D6  0100               	movlb	0	; () banked
 11202  0126D8  EE20 F002          	lfsr	2,2
 11203  0126DC  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11204  0126DE  26D9               	addwf	fsr2l,f,c
 11205  0126E0  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11206  0126E2  22DA               	addwfc	fsr2h,f,c
 11207  0126E4  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 11208  0126E8  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 11209                           
 11210                           ;usb_device.c: 1030: handle->CNT = len;
 11211  0126EC  0100               	movlb	0	; () banked
 11212  0126EE  EE20 F001          	lfsr	2,1
 11213  0126F2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11214  0126F4  26D9               	addwf	fsr2l,f,c
 11215  0126F6  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11216  0126F8  22DA               	addwfc	fsr2h,f,c
 11217  0126FA  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 11221  0126FE  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11222  012702  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11223  012706  0E40               	movlw	64
 11224  012708  16DF               	andwf	indf2,f,c
 11225                           
 11226                           ; BSR set to: 0
 11227                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 11228  01270A  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11229  01270E  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11230  012712  0E00               	movlw	0
 11231  012714  86DB               	bsf	plusw2,3,c
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 11235  012716  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11236  01271A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11237  01271E  0E00               	movlw	0
 11238  012720  8EDB               	bsf	plusw2,7,c
 11239                           
 11240                           ; BSR set to: 0
 11241                           ;usb_device.c: 1036: if(dir != 0)
 11242  012722  0100               	movlb	0	; () banked
 11243  012724  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11244  012726  0100               	movlb	0	; () banked
 11245  012728  B4D8               	btfsc	status,2,c
 11246  01272A  D008               	goto	l8666
 11247                           
 11248                           ; BSR set to: 0
 11249                           ;usb_device.c: 1037: {
 11250                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 11251  01272C  0100               	movlb	0	; () banked
 11252  01272E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11253  012730  0D02               	mullw	2
 11254  012732  0E10               	movlw	low _pBDTEntryIn
 11255  012734  24F3               	addwf	prodl,w,c
 11256  012736  6ED9               	movwf	fsr2l,c
 11257  012738  0E00               	movlw	high _pBDTEntryIn
 11258  01273A  D007               	goto	L3
 11259  01273C                     l8666:
 11260                           
 11261                           ; BSR set to: 0
 11262                           ;usb_device.c: 1041: else
 11263                           ;usb_device.c: 1042: {
 11264                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 11265  01273C  0100               	movlb	0	; () banked
 11266  01273E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11267  012740  0D02               	mullw	2
 11268  012742  0E0A               	movlw	low _pBDTEntryOut
 11269  012744  24F3               	addwf	prodl,w,c
 11270  012746  6ED9               	movwf	fsr2l,c
 11271  012748  0E01               	movlw	high _pBDTEntryOut
 11272  01274A                     L3:
 11273  01274A  20F4               	addwfc	prodh,w,c
 11274  01274C  6EDA               	movwf	fsr2h,c
 11275  01274E  0E04               	movlw	4
 11276  012750  1ADF               	xorwf	indf2,f,c
 11277                           
 11278                           ; BSR set to: 0
 11279                           ;usb_device.c: 1045: }
 11280                           ;usb_device.c: 1046: return (void*)handle;
 11281                           
 11282                           ; BSR set to: 0
 11283  012752  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 11284  012756  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 11285  01275A  0012               	return	
 11286  01275C                     __end_of_USBTransferOnePacket:
 11287                           	opt stack 0
 11288                           tblptru	equ	0xFF8
 11289                           tblptrh	equ	0xFF7
 11290                           tblptrl	equ	0xFF6
 11291                           tablat	equ	0xFF5
 11292                           prodh	equ	0xFF4
 11293                           prodl	equ	0xFF3
 11294                           intcon	equ	0xFF2
 11295                           intcon2	equ	0xFF1
 11296                           postinc0	equ	0xFEE
 11297                           wreg	equ	0xFE8
 11298                           indf1	equ	0xFE7
 11299                           postinc1	equ	0xFE6
 11300                           postdec1	equ	0xFE5
 11301                           fsr1h	equ	0xFE2
 11302                           fsr1l	equ	0xFE1
 11303                           indf2	equ	0xFDF
 11304                           postinc2	equ	0xFDE
 11305                           postdec2	equ	0xFDD
 11306                           plusw2	equ	0xFDB
 11307                           fsr2h	equ	0xFDA
 11308                           fsr2l	equ	0xFD9
 11309                           status	equ	0xFD8
 11310                           
 11311 ;; *************** function _UART_task *****************
 11312 ;; Defined at:
 11313 ;;		line 43 in file "../My_library/My_UART.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;		None
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;		None
 11318 ;; Return value:  Size  Location     Type
 11319 ;;		None               void
 11320 ;; Registers used:
 11321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11331 ;;Total ram usage:        0 bytes
 11332 ;; Hardware stack levels used:    1
 11333 ;; Hardware stack levels required when called:   12
 11334 ;; This function calls:
 11335 ;;		_ringbuf_num
 11336 ;; This function is called by:
 11337 ;;		_main
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text51
 11342  0144D4                     __ptext51:
 11343                           	opt stack 0
 11344  0144D4                     _UART_task:
 11345                           	opt stack 18
 11346                           
 11347                           ;My_UART.c: 44: if (ringbuf_num(&uart_tx)) {
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;incstack = 0
 11351  0144D4  0E53               	movlw	low _uart_tx
 11352  0144D6  0100               	movlb	0	; () banked
 11353  0144D8  6F60               	movwf	ringbuf_num@rb& (0+255),b
 11354  0144DA  0E01               	movlw	high _uart_tx
 11355  0144DC  0100               	movlb	0	; () banked
 11356  0144DE  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 11357  0144E0  EC2E  F090         	call	_ringbuf_num	;wreg free
 11358  0144E4  0100               	movlb	0	; () banked
 11359  0144E6  5160               	movf	?_ringbuf_num& (0+255),w,b
 11360  0144E8  0100               	movlb	0	; () banked
 11361  0144EA  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11362  0144EC  B4D8               	btfsc	status,2,c
 11363  0144EE  0012               	return	
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
 11367  0144F0  889D               	bsf	3997,4,c	;volatile
 11368  0144F2  0012               	return	
 11369  0144F4                     __end_of_UART_task:
 11370                           	opt stack 0
 11371                           tblptru	equ	0xFF8
 11372                           tblptrh	equ	0xFF7
 11373                           tblptrl	equ	0xFF6
 11374                           tablat	equ	0xFF5
 11375                           prodh	equ	0xFF4
 11376                           prodl	equ	0xFF3
 11377                           intcon	equ	0xFF2
 11378                           intcon2	equ	0xFF1
 11379                           postinc0	equ	0xFEE
 11380                           wreg	equ	0xFE8
 11381                           indf1	equ	0xFE7
 11382                           postinc1	equ	0xFE6
 11383                           postdec1	equ	0xFE5
 11384                           fsr1h	equ	0xFE2
 11385                           fsr1l	equ	0xFE1
 11386                           indf2	equ	0xFDF
 11387                           postinc2	equ	0xFDE
 11388                           postdec2	equ	0xFDD
 11389                           plusw2	equ	0xFDB
 11390                           fsr2h	equ	0xFDA
 11391                           fsr2l	equ	0xFD9
 11392                           status	equ	0xFD8
 11393                           
 11394 ;; *************** function _RTCC_task *****************
 11395 ;; Defined at:
 11396 ;;		line 353 in file "../My_library/My_RTCC.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;		None
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;		None
 11401 ;; Return value:  Size  Location     Type
 11402 ;;		None               void
 11403 ;; Registers used:
 11404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11414 ;;Total ram usage:        0 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:   15
 11417 ;; This function calls:
 11418 ;;		_RTCC_from_RTCC
 11419 ;; This function is called by:
 11420 ;;		_main
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           	psect	text52
 11425  014126                     __ptext52:
 11426                           	opt stack 0
 11427  014126                     _RTCC_task:
 11428                           	opt stack 15
 11429                           
 11430                           ;My_RTCC.c: 354: static uint8_t prev_halfsec;
 11431                           ;My_RTCC.c: 355: if (RTCCFGbits.RTCSYNC)return;
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;incstack = 0
 11435  014126  010F               	movlb	15	; () banked
 11436  014128  B93F               	btfsc	63,4,b	;volatile
 11437  01412A  0012               	return	
 11438                           
 11439                           ; BSR set to: 15
 11440                           ;My_RTCC.c: 356: now.halfsec = RTCCFGbits.HALFSEC;
 11441                           
 11442                           ; BSR set to: 15
 11443                           
 11444                           ; BSR set to: 15
 11445  01412C  0E00               	movlw	0
 11446  01412E  B73F               	btfsc	63,3,b	;volatile
 11447  014130  0E01               	movlw	1
 11448  014132  0101               	movlb	1	; () banked
 11449  014134  6F41               	movwf	(_now+12)& (0+255),b
 11450                           
 11451                           ; BSR set to: 1
 11452                           ;My_RTCC.c: 357: if (prev_halfsec != now.halfsec) {
 11453  014136  0101               	movlb	1	; () banked
 11454  014138  512E               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 11455  01413A  0101               	movlb	1	; () banked
 11456  01413C  1941               	xorwf	(_now+12)& (0+255),w,b
 11457  01413E  B4D8               	btfsc	status,2,c
 11458  014140  0012               	return	
 11459                           
 11460                           ; BSR set to: 1
 11461                           ;My_RTCC.c: 358: prev_halfsec = now.halfsec;
 11462  014142  C141  F12E         	movff	_now+12,RTCC_task@prev_halfsec
 11463                           
 11464                           ;My_RTCC.c: 359: now.colon = now.halfsec;
 11465  014146  C141  F140         	movff	_now+12,_now+11
 11466                           
 11467                           ; BSR set to: 1
 11468                           ;My_RTCC.c: 360: time_change_flag = 1;
 11469  01414A  0E01               	movlw	1
 11470  01414C  0101               	movlb	1	; () banked
 11471  01414E  6F32               	movwf	_time_change_flag& (0+255),b
 11472                           
 11473                           ; BSR set to: 1
 11474                           ;My_RTCC.c: 361: RTCC_from_RTCC(&now);
 11475  014150  0E35               	movlw	low _now
 11476  014152  0100               	movlb	0	; () banked
 11477  014154  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 11478  014156  0E01               	movlw	high _now
 11479  014158  0100               	movlb	0	; () banked
 11480  01415A  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 11481  01415C  ECB3  F0A2         	call	_RTCC_from_RTCC	;wreg free
 11482  014160  0012               	return	
 11483  014162                     __end_of_RTCC_task:
 11484                           	opt stack 0
 11485                           tblptru	equ	0xFF8
 11486                           tblptrh	equ	0xFF7
 11487                           tblptrl	equ	0xFF6
 11488                           tablat	equ	0xFF5
 11489                           prodh	equ	0xFF4
 11490                           prodl	equ	0xFF3
 11491                           intcon	equ	0xFF2
 11492                           intcon2	equ	0xFF1
 11493                           postinc0	equ	0xFEE
 11494                           wreg	equ	0xFE8
 11495                           indf1	equ	0xFE7
 11496                           postinc1	equ	0xFE6
 11497                           postdec1	equ	0xFE5
 11498                           fsr1h	equ	0xFE2
 11499                           fsr1l	equ	0xFE1
 11500                           indf2	equ	0xFDF
 11501                           postinc2	equ	0xFDE
 11502                           postdec2	equ	0xFDD
 11503                           plusw2	equ	0xFDB
 11504                           fsr2h	equ	0xFDA
 11505                           fsr2l	equ	0xFD9
 11506                           status	equ	0xFD8
 11507                           
 11508 ;; *************** function _RTCC_from_RTCC *****************
 11509 ;; Defined at:
 11510 ;;		line 200 in file "../My_library/My_RTCC.c"
 11511 ;; Parameters:    Size  Location     Type
 11512 ;;  tm              2   38[BANK0 ] PTR struct .
 11513 ;;		 -> now(14), 
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;		None
 11516 ;; Return value:  Size  Location     Type
 11517 ;;		None               void
 11518 ;; Registers used:
 11519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11525 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11528 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11529 ;;Total ram usage:        2 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:   14
 11532 ;; This function calls:
 11533 ;;		_RTCC_to_caltime
 11534 ;;		_caltime_to_epoch
 11535 ;; This function is called by:
 11536 ;;		_RTCC_init
 11537 ;;		_display_time_0802
 11538 ;;		_RTCC_task
 11539 ;;		_print_time
 11540 ;;		_display_time_1602
 11541 ;;		_RTCC_adjust_time_inc
 11542 ;;		_RTCC_adjust_time_dec
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           	psect	text53
 11547  014566                     __ptext53:
 11548                           	opt stack 0
 11549  014566                     _RTCC_from_RTCC:
 11550                           	opt stack 11
 11551                           
 11552                           ;My_RTCC.c: 201: RTCC_to_caltime(tm);
 11553                           
 11554                           ;incstack = 0
 11555  014566  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 11556  01456A  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 11557  01456E  ECAA  F097         	call	_RTCC_to_caltime	;wreg free
 11558                           
 11559                           ;My_RTCC.c: 202: caltime_to_epoch(tm);
 11560  014572  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 11561  014576  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 11562  01457A  ECB8  F085         	call	_caltime_to_epoch	;wreg free
 11563  01457E  0012               	return		;funcret
 11564  014580                     __end_of_RTCC_from_RTCC:
 11565                           	opt stack 0
 11566                           tblptru	equ	0xFF8
 11567                           tblptrh	equ	0xFF7
 11568                           tblptrl	equ	0xFF6
 11569                           tablat	equ	0xFF5
 11570                           prodh	equ	0xFF4
 11571                           prodl	equ	0xFF3
 11572                           intcon	equ	0xFF2
 11573                           intcon2	equ	0xFF1
 11574                           postinc0	equ	0xFEE
 11575                           wreg	equ	0xFE8
 11576                           indf1	equ	0xFE7
 11577                           postinc1	equ	0xFE6
 11578                           postdec1	equ	0xFE5
 11579                           fsr1h	equ	0xFE2
 11580                           fsr1l	equ	0xFE1
 11581                           indf2	equ	0xFDF
 11582                           postinc2	equ	0xFDE
 11583                           postdec2	equ	0xFDD
 11584                           plusw2	equ	0xFDB
 11585                           fsr2h	equ	0xFDA
 11586                           fsr2l	equ	0xFD9
 11587                           status	equ	0xFD8
 11588                           
 11589 ;; *************** function _caltime_to_epoch *****************
 11590 ;; Defined at:
 11591 ;;		line 180 in file "../My_library/My_RTCC.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;  tm              2   25[BANK0 ] PTR struct .
 11594 ;;		 -> now(14), 
 11595 ;; Auto vars:     Size  Location     Type
 11596 ;;  month           1   37[BANK0 ] unsigned char 
 11597 ;;  month           1   32[BANK0 ] unsigned char 
 11598 ;;  year            1   31[BANK0 ] unsigned char 
 11599 ;;  epoch           4   33[BANK0 ] unsigned long 
 11600 ;; Return value:  Size  Location     Type
 11601 ;;		None               void
 11602 ;; Registers used:
 11603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11609 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11610 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11611 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11612 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11613 ;;Total ram usage:       13 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; Hardware stack levels required when called:   13
 11616 ;; This function calls:
 11617 ;;		___lmul
 11618 ;;		_month_length
 11619 ;; This function is called by:
 11620 ;;		_RTCC_from_RTCC
 11621 ;;		_RTCC_from_caltime
 11622 ;; This function uses a non-reentrant model
 11623 ;;
 11624                           
 11625                           	psect	text54
 11626  010B70                     __ptext54:
 11627                           	opt stack 0
 11628  010B70                     _caltime_to_epoch:
 11629                           	opt stack 11
 11630                           
 11631                           ;My_RTCC.c: 181: epoch_t epoch = 0;
 11632                           
 11633                           ;incstack = 0
 11634  010B70  0E00               	movlw	0
 11635  010B72  0100               	movlb	0	; () banked
 11636  010B74  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 11637  010B76  0E00               	movlw	0
 11638  010B78  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 11639  010B7A  0E00               	movlw	0
 11640  010B7C  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 11641  010B7E  0E00               	movlw	0
 11642  010B80  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 11643                           
 11644                           ;My_RTCC.c: 182: for (uint8_t year = 0; year < tm->YY; year++) {
 11645  010B82  0E00               	movlw	0
 11646  010B84  0100               	movlb	0	; () banked
 11647  010B86  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 11648  010B88  D037               	goto	l8312
 11649  010B8A                     l8298:
 11650                           
 11651                           ; BSR set to: 0
 11652                           ;My_RTCC.c: 183: for (uint8_t month = 1; month <= 12; month++) {
 11653  010B8A  0E01               	movlw	1
 11654  010B8C  0100               	movlb	0	; () banked
 11655  010B8E  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 11656  010B90                     l8300:
 11657                           
 11658                           ; BSR set to: 0
 11659  010B90  0E0C               	movlw	12
 11660  010B92  0100               	movlb	0	; () banked
 11661  010B94  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 11662  010B96  D001               	goto	l8304
 11663  010B98  D02D               	goto	l8310
 11664  010B9A                     l8304:
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 11668  010B9A  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 11669  010B9E  0100               	movlb	0	; () banked
 11670  010BA0  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 11671  010BA2  ECF8  F091         	call	_month_length
 11672  010BA6  0100               	movlb	0	; () banked
 11673  010BA8  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11674  010BAA  0100               	movlb	0	; () banked
 11675  010BAC  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11676  010BAE  0100               	movlb	0	; () banked
 11677  010BB0  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11678  010BB2  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11679  010BB4  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11680  010BB6  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11681  010BB8  0E80               	movlw	128
 11682  010BBA  0100               	movlb	0	; () banked
 11683  010BBC  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11684  010BBE  0E51               	movlw	81
 11685  010BC0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11686  010BC2  0E01               	movlw	1
 11687  010BC4  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11688  010BC6  0E00               	movlw	0
 11689  010BC8  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11690  010BCA  EC3A  F09D         	call	___lmul	;wreg free
 11691  010BCE  0100               	movlb	0	; () banked
 11692  010BD0  516D               	movf	?___lmul& (0+255),w,b
 11693  010BD2  0100               	movlb	0	; () banked
 11694  010BD4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11695  010BD6  0100               	movlb	0	; () banked
 11696  010BD8  516E               	movf	(?___lmul+1)& (0+255),w,b
 11697  010BDA  0100               	movlb	0	; () banked
 11698  010BDC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11699  010BDE  0100               	movlb	0	; () banked
 11700  010BE0  516F               	movf	(?___lmul+2)& (0+255),w,b
 11701  010BE2  0100               	movlb	0	; () banked
 11702  010BE4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11703  010BE6  0100               	movlb	0	; () banked
 11704  010BE8  5170               	movf	(?___lmul+3)& (0+255),w,b
 11705  010BEA  0100               	movlb	0	; () banked
 11706  010BEC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11707                           
 11708                           ; BSR set to: 0
 11709  010BEE  0100               	movlb	0	; () banked
 11710  010BF0  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 11711  010BF2  D7CE               	goto	l8300
 11712  010BF4                     l8310:
 11713                           
 11714                           ; BSR set to: 0
 11715  010BF4  0100               	movlb	0	; () banked
 11716  010BF6  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 11717  010BF8                     l8312:
 11718                           
 11719                           ; BSR set to: 0
 11720  010BF8  0100               	movlb	0	; () banked
 11721  010BFA  EE20 F00A          	lfsr	2,10
 11722  010BFE  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11723  010C00  26D9               	addwf	fsr2l,f,c
 11724  010C02  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11725  010C04  22DA               	addwfc	fsr2h,f,c
 11726  010C06  50DE               	movf	postinc2,w,c
 11727  010C08  0100               	movlb	0	; () banked
 11728  010C0A  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 11729  010C0C  A0D8               	btfss	status,0,c
 11730  010C0E  D7BD               	goto	l8298
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;My_RTCC.c: 185: }
 11734                           ;My_RTCC.c: 186: }
 11735                           ;My_RTCC.c: 187: for (uint8_t month = 1; month < tm->MM; month++) {
 11736                           
 11737                           ; BSR set to: 0
 11738  010C10  0E01               	movlw	1
 11739  010C12  0100               	movlb	0	; () banked
 11740  010C14  6F80               	movwf	caltime_to_epoch@month_3765& (0+255),b
 11741  010C16  D032               	goto	l8320
 11742  010C18                     l8316:
 11743                           
 11744                           ; BSR set to: 0
 11745                           ;My_RTCC.c: 188: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 11746  010C18  C080  F066         	movff	caltime_to_epoch@month_3765,month_length@month
 11747  010C1C  0100               	movlb	0	; () banked
 11748  010C1E  EE20 F00A          	lfsr	2,10
 11749  010C22  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11750  010C24  26D9               	addwf	fsr2l,f,c
 11751  010C26  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11752  010C28  22DA               	addwfc	fsr2h,f,c
 11753  010C2A  50DF               	movf	indf2,w,c
 11754  010C2C  ECF8  F091         	call	_month_length
 11755  010C30  0100               	movlb	0	; () banked
 11756  010C32  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11757  010C34  0100               	movlb	0	; () banked
 11758  010C36  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11759  010C38  0100               	movlb	0	; () banked
 11760  010C3A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11761  010C3C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11762  010C3E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11763  010C40  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11764  010C42  0E80               	movlw	128
 11765  010C44  0100               	movlb	0	; () banked
 11766  010C46  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11767  010C48  0E51               	movlw	81
 11768  010C4A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11769  010C4C  0E01               	movlw	1
 11770  010C4E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11771  010C50  0E00               	movlw	0
 11772  010C52  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11773  010C54  EC3A  F09D         	call	___lmul	;wreg free
 11774  010C58  0100               	movlb	0	; () banked
 11775  010C5A  516D               	movf	?___lmul& (0+255),w,b
 11776  010C5C  0100               	movlb	0	; () banked
 11777  010C5E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11778  010C60  0100               	movlb	0	; () banked
 11779  010C62  516E               	movf	(?___lmul+1)& (0+255),w,b
 11780  010C64  0100               	movlb	0	; () banked
 11781  010C66  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11782  010C68  0100               	movlb	0	; () banked
 11783  010C6A  516F               	movf	(?___lmul+2)& (0+255),w,b
 11784  010C6C  0100               	movlb	0	; () banked
 11785  010C6E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11786  010C70  0100               	movlb	0	; () banked
 11787  010C72  5170               	movf	(?___lmul+3)& (0+255),w,b
 11788  010C74  0100               	movlb	0	; () banked
 11789  010C76  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11790                           
 11791                           ; BSR set to: 0
 11792  010C78  0100               	movlb	0	; () banked
 11793  010C7A  2B80               	incf	caltime_to_epoch@month_3765& (0+255),f,b
 11794  010C7C                     l8320:
 11795                           
 11796                           ; BSR set to: 0
 11797  010C7C  0100               	movlb	0	; () banked
 11798  010C7E  EE20 F009          	lfsr	2,9
 11799  010C82  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11800  010C84  26D9               	addwf	fsr2l,f,c
 11801  010C86  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11802  010C88  22DA               	addwfc	fsr2h,f,c
 11803  010C8A  50DE               	movf	postinc2,w,c
 11804  010C8C  0100               	movlb	0	; () banked
 11805  010C8E  5D80               	subwf	caltime_to_epoch@month_3765& (0+255),w,b
 11806  010C90  A0D8               	btfss	status,0,c
 11807  010C92  D7C2               	goto	l8316
 11808                           
 11809                           ; BSR set to: 0
 11810                           ;My_RTCC.c: 189: }
 11811                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 11812                           
 11813                           ; BSR set to: 0
 11814  010C94  0EFF               	movlw	255
 11815  010C96  0100               	movlb	0	; () banked
 11816  010C98  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11817  010C9A  0EFF               	movlw	255
 11818  010C9C  0100               	movlb	0	; () banked
 11819  010C9E  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 11820  010CA0  0100               	movlb	0	; () banked
 11821  010CA2  EE20 F008          	lfsr	2,8
 11822  010CA6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11823  010CA8  26D9               	addwf	fsr2l,f,c
 11824  010CAA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11825  010CAC  22DA               	addwfc	fsr2h,f,c
 11826  010CAE  50DF               	movf	indf2,w,c
 11827  010CB0  0100               	movlb	0	; () banked
 11828  010CB2  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 11829  010CB4  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 11830  010CB6  0100               	movlb	0	; () banked
 11831  010CB8  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11832  010CBA  0100               	movlb	0	; () banked
 11833  010CBC  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 11834  010CBE  0100               	movlb	0	; () banked
 11835  010CC0  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 11836  010CC2  0100               	movlb	0	; () banked
 11837  010CC4  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 11838  010CC6  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 11839  010CCA  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 11840  010CCE  0100               	movlb	0	; () banked
 11841  010CD0  0E00               	movlw	0
 11842  010CD2  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 11843  010CD4  0EFF               	movlw	-1
 11844  010CD6  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 11845  010CD8  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 11846  010CDA  0E80               	movlw	128
 11847  010CDC  0100               	movlb	0	; () banked
 11848  010CDE  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11849  010CE0  0E51               	movlw	81
 11850  010CE2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11851  010CE4  0E01               	movlw	1
 11852  010CE6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11853  010CE8  0E00               	movlw	0
 11854  010CEA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11855  010CEC  EC3A  F09D         	call	___lmul	;wreg free
 11856  010CF0  0100               	movlb	0	; () banked
 11857  010CF2  516D               	movf	?___lmul& (0+255),w,b
 11858  010CF4  0100               	movlb	0	; () banked
 11859  010CF6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11860  010CF8  0100               	movlb	0	; () banked
 11861  010CFA  516E               	movf	(?___lmul+1)& (0+255),w,b
 11862  010CFC  0100               	movlb	0	; () banked
 11863  010CFE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11864  010D00  0100               	movlb	0	; () banked
 11865  010D02  516F               	movf	(?___lmul+2)& (0+255),w,b
 11866  010D04  0100               	movlb	0	; () banked
 11867  010D06  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11868  010D08  0100               	movlb	0	; () banked
 11869  010D0A  5170               	movf	(?___lmul+3)& (0+255),w,b
 11870  010D0C  0100               	movlb	0	; () banked
 11871  010D0E  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11872                           
 11873                           ;My_RTCC.c: 191: epoch += ((epoch_t)60*60) * tm->hh;
 11874  010D10  0100               	movlb	0	; () banked
 11875  010D12  EE20 F006          	lfsr	2,6
 11876  010D16  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11877  010D18  26D9               	addwf	fsr2l,f,c
 11878  010D1A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11879  010D1C  22DA               	addwfc	fsr2h,f,c
 11880  010D1E  50DF               	movf	indf2,w,c
 11881  010D20  0100               	movlb	0	; () banked
 11882  010D22  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11883  010D24  0100               	movlb	0	; () banked
 11884  010D26  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11885  010D28  0100               	movlb	0	; () banked
 11886  010D2A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11887  010D2C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11888  010D2E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11889  010D30  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11890  010D32  0E10               	movlw	16
 11891  010D34  0100               	movlb	0	; () banked
 11892  010D36  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11893  010D38  0E0E               	movlw	14
 11894  010D3A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11895  010D3C  0E00               	movlw	0
 11896  010D3E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11897  010D40  0E00               	movlw	0
 11898  010D42  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11899  010D44  EC3A  F09D         	call	___lmul	;wreg free
 11900  010D48  0100               	movlb	0	; () banked
 11901  010D4A  516D               	movf	?___lmul& (0+255),w,b
 11902  010D4C  0100               	movlb	0	; () banked
 11903  010D4E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11904  010D50  0100               	movlb	0	; () banked
 11905  010D52  516E               	movf	(?___lmul+1)& (0+255),w,b
 11906  010D54  0100               	movlb	0	; () banked
 11907  010D56  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11908  010D58  0100               	movlb	0	; () banked
 11909  010D5A  516F               	movf	(?___lmul+2)& (0+255),w,b
 11910  010D5C  0100               	movlb	0	; () banked
 11911  010D5E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11912  010D60  0100               	movlb	0	; () banked
 11913  010D62  5170               	movf	(?___lmul+3)& (0+255),w,b
 11914  010D64  0100               	movlb	0	; () banked
 11915  010D66  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11916                           
 11917                           ;My_RTCC.c: 192: epoch += ((epoch_t)60) * tm->mm;
 11918  010D68  0100               	movlb	0	; () banked
 11919  010D6A  EE20 F005          	lfsr	2,5
 11920  010D6E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11921  010D70  26D9               	addwf	fsr2l,f,c
 11922  010D72  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11923  010D74  22DA               	addwfc	fsr2h,f,c
 11924  010D76  50DF               	movf	indf2,w,c
 11925  010D78  0100               	movlb	0	; () banked
 11926  010D7A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11927  010D7C  0100               	movlb	0	; () banked
 11928  010D7E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11929  010D80  0100               	movlb	0	; () banked
 11930  010D82  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11931  010D84  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11932  010D86  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11933  010D88  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11934  010D8A  0E3C               	movlw	60
 11935  010D8C  0100               	movlb	0	; () banked
 11936  010D8E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11937  010D90  0E00               	movlw	0
 11938  010D92  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11939  010D94  0E00               	movlw	0
 11940  010D96  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11941  010D98  0E00               	movlw	0
 11942  010D9A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11943  010D9C  EC3A  F09D         	call	___lmul	;wreg free
 11944  010DA0  0100               	movlb	0	; () banked
 11945  010DA2  516D               	movf	?___lmul& (0+255),w,b
 11946  010DA4  0100               	movlb	0	; () banked
 11947  010DA6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11948  010DA8  0100               	movlb	0	; () banked
 11949  010DAA  516E               	movf	(?___lmul+1)& (0+255),w,b
 11950  010DAC  0100               	movlb	0	; () banked
 11951  010DAE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11952  010DB0  0100               	movlb	0	; () banked
 11953  010DB2  516F               	movf	(?___lmul+2)& (0+255),w,b
 11954  010DB4  0100               	movlb	0	; () banked
 11955  010DB6  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11956  010DB8  0100               	movlb	0	; () banked
 11957  010DBA  5170               	movf	(?___lmul+3)& (0+255),w,b
 11958  010DBC  0100               	movlb	0	; () banked
 11959  010DBE  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11960                           
 11961                           ; BSR set to: 0
 11962                           ;My_RTCC.c: 193: epoch += tm->ss;
 11963  010DC0  0100               	movlb	0	; () banked
 11964  010DC2  EE20 F004          	lfsr	2,4
 11965  010DC6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11966  010DC8  26D9               	addwf	fsr2l,f,c
 11967  010DCA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11968  010DCC  22DA               	addwfc	fsr2h,f,c
 11969  010DCE  50DF               	movf	indf2,w,c
 11970  010DD0  0100               	movlb	0	; () banked
 11971  010DD2  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11972  010DD4  0100               	movlb	0	; () banked
 11973  010DD6  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11974  010DD8  0100               	movlb	0	; () banked
 11975  010DDA  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11976  010DDC  0E00               	movlw	0
 11977  010DDE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11978  010DE0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11979  010DE2  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;My_RTCC.c: 195: tm->epoch = epoch;
 11983  010DE4  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 11984  010DE8  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 11985  010DEC  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 11986  010DF0  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 11987  010DF4  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 11988  010DF8  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 11989                           
 11990                           ; BSR set to: 0
 11991  010DFC  0012               	return		;funcret
 11992  010DFE                     __end_of_caltime_to_epoch:
 11993                           	opt stack 0
 11994                           tblptru	equ	0xFF8
 11995                           tblptrh	equ	0xFF7
 11996                           tblptrl	equ	0xFF6
 11997                           tablat	equ	0xFF5
 11998                           prodh	equ	0xFF4
 11999                           prodl	equ	0xFF3
 12000                           intcon	equ	0xFF2
 12001                           intcon2	equ	0xFF1
 12002                           postinc0	equ	0xFEE
 12003                           wreg	equ	0xFE8
 12004                           indf1	equ	0xFE7
 12005                           postinc1	equ	0xFE6
 12006                           postdec1	equ	0xFE5
 12007                           fsr1h	equ	0xFE2
 12008                           fsr1l	equ	0xFE1
 12009                           indf2	equ	0xFDF
 12010                           postinc2	equ	0xFDE
 12011                           postdec2	equ	0xFDD
 12012                           plusw2	equ	0xFDB
 12013                           fsr2h	equ	0xFDA
 12014                           fsr2l	equ	0xFD9
 12015                           status	equ	0xFD8
 12016                           
 12017 ;; *************** function _month_length *****************
 12018 ;; Defined at:
 12019 ;;		line 56 in file "../My_library/My_RTCC.c"
 12020 ;; Parameters:    Size  Location     Type
 12021 ;;  year            1    wreg     unsigned char 
 12022 ;;  month           1    6[BANK0 ] unsigned char 
 12023 ;; Auto vars:     Size  Location     Type
 12024 ;;  year            1   11[BANK0 ] unsigned char 
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  1    wreg      unsigned char 
 12027 ;; Registers used:
 12028 ;;		wreg, status,2, status,0, cstack
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/0
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12034 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12036 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12037 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12038 ;;Total ram usage:        6 bytes
 12039 ;; Hardware stack levels used:    1
 12040 ;; Hardware stack levels required when called:   12
 12041 ;; This function calls:
 12042 ;;		___awmod
 12043 ;; This function is called by:
 12044 ;;		_epoch_to_caltime
 12045 ;;		_caltime_to_epoch
 12046 ;;		_terminal_time
 12047 ;;		_RTCC_adjust_time_inc
 12048 ;;		_RTCC_adjust_time_dec
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text55
 12053  0123F0                     __ptext55:
 12054                           	opt stack 0
 12055  0123F0                     _month_length:
 12056                           	opt stack 11
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;incstack = 0
 12060                           ;month_length@year stored from wreg
 12061  0123F0  0100               	movlb	0	; () banked
 12062  0123F2  6F6B               	movwf	month_length@year& (0+255),b
 12063                           
 12064                           ;My_RTCC.c: 57: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 12065  0123F4  0E02               	movlw	2
 12066  0123F6  0100               	movlb	0	; () banked
 12067  0123F8  1966               	xorwf	month_length@month& (0+255),w,b
 12068  0123FA  A4D8               	btfss	status,2,c
 12069  0123FC  D03E               	goto	l8190
 12070                           
 12071                           ; BSR set to: 0
 12072  0123FE  C06B  F060         	movff	month_length@year,___awmod@dividend
 12073  012402  0100               	movlb	0	; () banked
 12074  012404  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12075  012406  0E00               	movlw	0
 12076  012408  0100               	movlb	0	; () banked
 12077  01240A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12078  01240C  0E64               	movlw	100
 12079  01240E  6F62               	movwf	___awmod@divisor& (0+255),b
 12080  012410  EC7E  F09A         	call	___awmod	;wreg free
 12081  012414  0100               	movlb	0	; () banked
 12082  012416  5160               	movf	?___awmod& (0+255),w,b
 12083  012418  0100               	movlb	0	; () banked
 12084  01241A  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12085  01241C  A4D8               	btfss	status,2,c
 12086  01241E  D002               	goto	u7700
 12087  012420  0E01               	movlw	1
 12088  012422  D001               	goto	u7710
 12089  012424                     u7700:
 12090  012424  0E00               	movlw	0
 12091  012426                     u7710:
 12092  012426  0800               	sublw	0
 12093  012428  0100               	movlb	0	; () banked
 12094  01242A  6F67               	movwf	??_month_length& (0+255),b
 12095  01242C  C06B  F060         	movff	month_length@year,___awmod@dividend
 12096  012430  0100               	movlb	0	; () banked
 12097  012432  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12098  012434  0E01               	movlw	1
 12099  012436  0100               	movlb	0	; () banked
 12100  012438  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12101  01243A  0E90               	movlw	144
 12102  01243C  6F62               	movwf	___awmod@divisor& (0+255),b
 12103  01243E  EC7E  F09A         	call	___awmod	;wreg free
 12104  012442  0100               	movlb	0	; () banked
 12105  012444  5160               	movf	?___awmod& (0+255),w,b
 12106  012446  0100               	movlb	0	; () banked
 12107  012448  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12108  01244A  A4D8               	btfss	status,2,c
 12109  01244C  D004               	goto	u7720
 12110  01244E  0100               	movlb	0	; () banked
 12111  012450  6B68               	clrf	(??_month_length+1)& (0+255),b
 12112  012452  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12113  012454  D002               	goto	u7738
 12114  012456                     u7720:
 12115  012456  0100               	movlb	0	; () banked
 12116  012458  6B68               	clrf	(??_month_length+1)& (0+255),b
 12117  01245A                     u7738:
 12118  01245A  C06B  F069         	movff	month_length@year,??_month_length+2
 12119  01245E  0E03               	movlw	3
 12120  012460  0100               	movlb	0	; () banked
 12121  012462  1769               	andwf	(??_month_length+2)& (0+255),f,b
 12122  012464  A4D8               	btfss	status,2,c
 12123  012466  D002               	goto	u7740
 12124  012468  0E01               	movlw	1
 12125  01246A  D001               	goto	u7750
 12126  01246C                     u7740:
 12127  01246C  0E00               	movlw	0
 12128  01246E                     u7750:
 12129  01246E  0100               	movlb	0	; () banked
 12130  012470  2568               	addwf	(??_month_length+1)& (0+255),w,b
 12131  012472  0100               	movlb	0	; () banked
 12132  012474  2567               	addwf	??_month_length& (0+255),w,b
 12133  012476  0F1C               	addlw	28
 12134                           
 12135                           ; BSR set to: 0
 12136                           
 12137                           ; BSR set to: 0
 12138  012478  0012               	return	
 12139  01247A                     l8190:
 12140                           
 12141                           ; BSR set to: 0
 12142                           ;My_RTCC.c: 58: else return 31 - (((-(month & 1)^month)&13) == 4);
 12143  01247A  0100               	movlb	0	; () banked
 12144  01247C  5166               	movf	month_length@month& (0+255),w,b
 12145  01247E  0B01               	andlw	1
 12146  012480  0100               	movlb	0	; () banked
 12147  012482  6F67               	movwf	??_month_length& (0+255),b
 12148  012484  6B68               	clrf	(??_month_length+1)& (0+255),b
 12149  012486  0100               	movlb	0	; () banked
 12150  012488  1F67               	comf	??_month_length& (0+255),f,b
 12151  01248A  1F68               	comf	(??_month_length+1)& (0+255),f,b
 12152  01248C  4B67               	infsnz	??_month_length& (0+255),f,b
 12153  01248E  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12154  012490  0100               	movlb	0	; () banked
 12155  012492  5166               	movf	month_length@month& (0+255),w,b
 12156  012494  0100               	movlb	0	; () banked
 12157  012496  6F69               	movwf	(??_month_length+2)& (0+255),b
 12158  012498  6B6A               	clrf	(??_month_length+3)& (0+255),b
 12159  01249A  0100               	movlb	0	; () banked
 12160  01249C  5167               	movf	??_month_length& (0+255),w,b
 12161  01249E  0100               	movlb	0	; () banked
 12162  0124A0  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 12163  0124A2  0100               	movlb	0	; () banked
 12164  0124A4  5168               	movf	(??_month_length+1)& (0+255),w,b
 12165  0124A6  0100               	movlb	0	; () banked
 12166  0124A8  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 12167  0124AA  0E0D               	movlw	13
 12168  0124AC  0100               	movlb	0	; () banked
 12169  0124AE  1769               	andwf	(??_month_length+2)& (0+255),f,b
 12170  0124B0  0E00               	movlw	0
 12171  0124B2  176A               	andwf	(??_month_length+3)& (0+255),f,b
 12172  0124B4  0E04               	movlw	4
 12173  0124B6  0100               	movlb	0	; () banked
 12174  0124B8  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 12175  0124BA  0100               	movlb	0	; () banked
 12176  0124BC  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 12177  0124BE  A4D8               	btfss	status,2,c
 12178  0124C0  D002               	goto	u7760
 12179  0124C2  0E01               	movlw	1
 12180  0124C4  D001               	goto	u7770
 12181  0124C6                     u7760:
 12182  0124C6  0E00               	movlw	0
 12183  0124C8                     u7770:
 12184  0124C8  0800               	sublw	0
 12185  0124CA  0F1F               	addlw	31
 12186                           
 12187                           ; BSR set to: 0
 12188  0124CC  0012               	return	
 12189  0124CE                     __end_of_month_length:
 12190                           	opt stack 0
 12191                           tblptru	equ	0xFF8
 12192                           tblptrh	equ	0xFF7
 12193                           tblptrl	equ	0xFF6
 12194                           tablat	equ	0xFF5
 12195                           prodh	equ	0xFF4
 12196                           prodl	equ	0xFF3
 12197                           intcon	equ	0xFF2
 12198                           intcon2	equ	0xFF1
 12199                           postinc0	equ	0xFEE
 12200                           wreg	equ	0xFE8
 12201                           indf1	equ	0xFE7
 12202                           postinc1	equ	0xFE6
 12203                           postdec1	equ	0xFE5
 12204                           fsr1h	equ	0xFE2
 12205                           fsr1l	equ	0xFE1
 12206                           indf2	equ	0xFDF
 12207                           postinc2	equ	0xFDE
 12208                           postdec2	equ	0xFDD
 12209                           plusw2	equ	0xFDB
 12210                           fsr2h	equ	0xFDA
 12211                           fsr2l	equ	0xFD9
 12212                           status	equ	0xFD8
 12213                           
 12214 ;; *************** function ___awmod *****************
 12215 ;; Defined at:
 12216 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;  dividend        2    0[BANK0 ] int 
 12219 ;;  divisor         2    2[BANK0 ] int 
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;  sign            1    5[BANK0 ] unsigned char 
 12222 ;;  counter         1    4[BANK0 ] unsigned char 
 12223 ;; Return value:  Size  Location     Type
 12224 ;;                  2    0[BANK0 ] int 
 12225 ;; Registers used:
 12226 ;;		wreg, status,2, status,0
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12232 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12233 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12235 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12236 ;;Total ram usage:        6 bytes
 12237 ;; Hardware stack levels used:    1
 12238 ;; Hardware stack levels required when called:   11
 12239 ;; This function calls:
 12240 ;;		Nothing
 12241 ;; This function is called by:
 12242 ;;		_month_length
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           	psect	text56
 12247  0134FC                     __ptext56:
 12248                           	opt stack 0
 12249  0134FC                     ___awmod:
 12250                           	opt stack 11
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;incstack = 0
 12254  0134FC  0E00               	movlw	0
 12255  0134FE  0100               	movlb	0	; () banked
 12256  013500  6F65               	movwf	___awmod@sign& (0+255),b
 12257                           
 12258                           ; BSR set to: 0
 12259  013502  0100               	movlb	0	; () banked
 12260  013504  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12261  013506  D008               	goto	l8138
 12262                           
 12263                           ; BSR set to: 0
 12264  013508  0100               	movlb	0	; () banked
 12265  01350A  6D60               	negf	___awmod@dividend& (0+255),b
 12266  01350C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12267  01350E  B0D8               	btfsc	status,0,c
 12268  013510  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12269                           
 12270                           ; BSR set to: 0
 12271  013512  0E01               	movlw	1
 12272  013514  0100               	movlb	0	; () banked
 12273  013516  6F65               	movwf	___awmod@sign& (0+255),b
 12274  013518                     l8138:
 12275                           
 12276                           ; BSR set to: 0
 12277  013518  0100               	movlb	0	; () banked
 12278  01351A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12279  01351C  D005               	goto	l8142
 12280                           
 12281                           ; BSR set to: 0
 12282  01351E  0100               	movlb	0	; () banked
 12283  013520  6D62               	negf	___awmod@divisor& (0+255),b
 12284  013522  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 12285  013524  B0D8               	btfsc	status,0,c
 12286  013526  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 12287  013528                     l8142:
 12288                           
 12289                           ; BSR set to: 0
 12290  013528  0100               	movlb	0	; () banked
 12291  01352A  5162               	movf	___awmod@divisor& (0+255),w,b
 12292  01352C  0100               	movlb	0	; () banked
 12293  01352E  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12294  013530  B4D8               	btfsc	status,2,c
 12295  013532  D026               	goto	l8158
 12296                           
 12297                           ; BSR set to: 0
 12298  013534  0E01               	movlw	1
 12299  013536  0100               	movlb	0	; () banked
 12300  013538  6F64               	movwf	___awmod@counter& (0+255),b
 12301  01353A  D006               	goto	l8148
 12302  01353C                     l8146:
 12303                           
 12304                           ; BSR set to: 0
 12305  01353C  0100               	movlb	0	; () banked
 12306  01353E  90D8               	bcf	status,0,c
 12307  013540  3762               	rlcf	___awmod@divisor& (0+255),f,b
 12308  013542  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12309  013544  0100               	movlb	0	; () banked
 12310  013546  2B64               	incf	___awmod@counter& (0+255),f,b
 12311  013548                     l8148:
 12312                           
 12313                           ; BSR set to: 0
 12314  013548  0100               	movlb	0	; () banked
 12315  01354A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12316  01354C  D7F7               	goto	l8146
 12317  01354E                     l8150:
 12318                           
 12319                           ; BSR set to: 0
 12320  01354E  0100               	movlb	0	; () banked
 12321  013550  5162               	movf	___awmod@divisor& (0+255),w,b
 12322  013552  0100               	movlb	0	; () banked
 12323  013554  5D60               	subwf	___awmod@dividend& (0+255),w,b
 12324  013556  0100               	movlb	0	; () banked
 12325  013558  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12326  01355A  0100               	movlb	0	; () banked
 12327  01355C  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12328  01355E  A0D8               	btfss	status,0,c
 12329  013560  D008               	goto	l8154
 12330                           
 12331                           ; BSR set to: 0
 12332  013562  0100               	movlb	0	; () banked
 12333  013564  5162               	movf	___awmod@divisor& (0+255),w,b
 12334  013566  0100               	movlb	0	; () banked
 12335  013568  5F60               	subwf	___awmod@dividend& (0+255),f,b
 12336  01356A  0100               	movlb	0	; () banked
 12337  01356C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 12338  01356E  0100               	movlb	0	; () banked
 12339  013570  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12340  013572                     l8154:
 12341                           
 12342                           ; BSR set to: 0
 12343  013572  0100               	movlb	0	; () banked
 12344  013574  90D8               	bcf	status,0,c
 12345  013576  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12346  013578  3362               	rrcf	___awmod@divisor& (0+255),f,b
 12347                           
 12348                           ; BSR set to: 0
 12349  01357A  0100               	movlb	0	; () banked
 12350  01357C  2F64               	decfsz	___awmod@counter& (0+255),f,b
 12351  01357E  D7E7               	goto	l8150
 12352  013580                     l8158:
 12353                           
 12354                           ; BSR set to: 0
 12355  013580  0100               	movlb	0	; () banked
 12356  013582  5165               	movf	___awmod@sign& (0+255),w,b
 12357  013584  0100               	movlb	0	; () banked
 12358  013586  B4D8               	btfsc	status,2,c
 12359  013588  D005               	goto	l8162
 12360                           
 12361                           ; BSR set to: 0
 12362  01358A  0100               	movlb	0	; () banked
 12363  01358C  6D60               	negf	___awmod@dividend& (0+255),b
 12364  01358E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12365  013590  B0D8               	btfsc	status,0,c
 12366  013592  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12367  013594                     l8162:
 12368                           
 12369                           ; BSR set to: 0
 12370  013594  C060  F060         	movff	___awmod@dividend,?___awmod
 12371  013598  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 12372  01359C  0012               	return	
 12373  01359E                     __end_of___awmod:
 12374                           	opt stack 0
 12375                           tblptru	equ	0xFF8
 12376                           tblptrh	equ	0xFF7
 12377                           tblptrl	equ	0xFF6
 12378                           tablat	equ	0xFF5
 12379                           prodh	equ	0xFF4
 12380                           prodl	equ	0xFF3
 12381                           intcon	equ	0xFF2
 12382                           intcon2	equ	0xFF1
 12383                           postinc0	equ	0xFEE
 12384                           wreg	equ	0xFE8
 12385                           indf1	equ	0xFE7
 12386                           postinc1	equ	0xFE6
 12387                           postdec1	equ	0xFE5
 12388                           fsr1h	equ	0xFE2
 12389                           fsr1l	equ	0xFE1
 12390                           indf2	equ	0xFDF
 12391                           postinc2	equ	0xFDE
 12392                           postdec2	equ	0xFDD
 12393                           plusw2	equ	0xFDB
 12394                           fsr2h	equ	0xFDA
 12395                           fsr2l	equ	0xFD9
 12396                           status	equ	0xFD8
 12397                           
 12398 ;; *************** function ___lmul *****************
 12399 ;; Defined at:
 12400 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  multiplier      4   13[BANK0 ] unsigned long 
 12403 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;  product         4   21[BANK0 ] unsigned long 
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  4   13[BANK0 ] unsigned long 
 12408 ;; Registers used:
 12409 ;;		wreg, status,2, status,0
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12415 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12416 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12418 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12419 ;;Total ram usage:       12 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:   11
 12422 ;; This function calls:
 12423 ;;		Nothing
 12424 ;; This function is called by:
 12425 ;;		_get_quot_rem
 12426 ;;		_caltime_to_epoch
 12427 ;;		_RTCC_adjust_time_inc
 12428 ;;		_RTCC_adjust_time_dec
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           
 12432                           	psect	text57
 12433  013A74                     __ptext57:
 12434                           	opt stack 0
 12435  013A74                     ___lmul:
 12436                           	opt stack 12
 12437                           
 12438                           ; BSR set to: 0
 12439                           ;incstack = 0
 12440  013A74  0E00               	movlw	0
 12441  013A76  0100               	movlb	0	; () banked
 12442  013A78  6F75               	movwf	___lmul@product& (0+255),b
 12443  013A7A  0E00               	movlw	0
 12444  013A7C  6F76               	movwf	(___lmul@product+1)& (0+255),b
 12445  013A7E  0E00               	movlw	0
 12446  013A80  6F77               	movwf	(___lmul@product+2)& (0+255),b
 12447  013A82  0E00               	movlw	0
 12448  013A84  6F78               	movwf	(___lmul@product+3)& (0+255),b
 12449  013A86                     l8196:
 12450                           
 12451                           ; BSR set to: 0
 12452  013A86  0100               	movlb	0	; () banked
 12453  013A88  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 12454  013A8A  D010               	goto	l8200
 12455                           
 12456                           ; BSR set to: 0
 12457  013A8C  0100               	movlb	0	; () banked
 12458  013A8E  5171               	movf	___lmul@multiplicand& (0+255),w,b
 12459  013A90  0100               	movlb	0	; () banked
 12460  013A92  2775               	addwf	___lmul@product& (0+255),f,b
 12461  013A94  0100               	movlb	0	; () banked
 12462  013A96  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 12463  013A98  0100               	movlb	0	; () banked
 12464  013A9A  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 12465  013A9C  0100               	movlb	0	; () banked
 12466  013A9E  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 12467  013AA0  0100               	movlb	0	; () banked
 12468  013AA2  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 12469  013AA4  0100               	movlb	0	; () banked
 12470  013AA6  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 12471  013AA8  0100               	movlb	0	; () banked
 12472  013AAA  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 12473  013AAC                     l8200:
 12474                           
 12475                           ; BSR set to: 0
 12476  013AAC  0100               	movlb	0	; () banked
 12477  013AAE  90D8               	bcf	status,0,c
 12478  013AB0  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 12479  013AB2  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 12480  013AB4  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 12481  013AB6  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 12482                           
 12483                           ; BSR set to: 0
 12484  013AB8  0100               	movlb	0	; () banked
 12485  013ABA  90D8               	bcf	status,0,c
 12486  013ABC  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 12487  013ABE  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 12488  013AC0  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 12489  013AC2  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 12490  013AC4  0100               	movlb	0	; () banked
 12491  013AC6  516D               	movf	___lmul@multiplier& (0+255),w,b
 12492  013AC8  0100               	movlb	0	; () banked
 12493  013ACA  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 12494  013ACC  0100               	movlb	0	; () banked
 12495  013ACE  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 12496  013AD0  0100               	movlb	0	; () banked
 12497  013AD2  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 12498  013AD4  A4D8               	btfss	status,2,c
 12499  013AD6  D7D7               	goto	l8196
 12500                           
 12501                           ; BSR set to: 0
 12502  013AD8  C075  F06D         	movff	___lmul@product,?___lmul
 12503  013ADC  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 12504  013AE0  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 12505  013AE4  C078  F070         	movff	___lmul@product+3,?___lmul+3
 12506                           
 12507                           ; BSR set to: 0
 12508  013AE8  0012               	return		;funcret
 12509  013AEA                     __end_of___lmul:
 12510                           	opt stack 0
 12511                           tblptru	equ	0xFF8
 12512                           tblptrh	equ	0xFF7
 12513                           tblptrl	equ	0xFF6
 12514                           tablat	equ	0xFF5
 12515                           prodh	equ	0xFF4
 12516                           prodl	equ	0xFF3
 12517                           intcon	equ	0xFF2
 12518                           intcon2	equ	0xFF1
 12519                           postinc0	equ	0xFEE
 12520                           wreg	equ	0xFE8
 12521                           indf1	equ	0xFE7
 12522                           postinc1	equ	0xFE6
 12523                           postdec1	equ	0xFE5
 12524                           fsr1h	equ	0xFE2
 12525                           fsr1l	equ	0xFE1
 12526                           indf2	equ	0xFDF
 12527                           postinc2	equ	0xFDE
 12528                           postdec2	equ	0xFDD
 12529                           plusw2	equ	0xFDB
 12530                           fsr2h	equ	0xFDA
 12531                           fsr2l	equ	0xFD9
 12532                           status	equ	0xFD8
 12533                           
 12534 ;; *************** function _RTCC_to_caltime *****************
 12535 ;; Defined at:
 12536 ;;		line 90 in file "../My_library/My_RTCC.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;  tm              2    2[BANK0 ] PTR struct .
 12539 ;;		 -> now(14), 
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;  dumy            1    4[BANK0 ] unsigned char 
 12542 ;; Return value:  Size  Location     Type
 12543 ;;		None               void
 12544 ;; Registers used:
 12545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12554 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12555 ;;Total ram usage:        3 bytes
 12556 ;; Hardware stack levels used:    1
 12557 ;; Hardware stack levels required when called:   12
 12558 ;; This function calls:
 12559 ;;		_x_to_d
 12560 ;; This function is called by:
 12561 ;;		_RTCC_from_RTCC
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text58
 12566  012F54                     __ptext58:
 12567                           	opt stack 0
 12568  012F54                     _RTCC_to_caltime:
 12569                           	opt stack 12
 12570  012F54                     l910:
 12571  012F54  010F               	movlb	15	; () banked
 12572  012F56  B93F               	btfsc	63,4,b	;volatile
 12573  012F58  D7FD               	goto	l910
 12574                           
 12575                           ; BSR set to: 15
 12576                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR0 = 1;
 12577  012F5A  010F               	movlb	15	; () banked
 12578  012F5C  813F               	bsf	63,0,b	;volatile
 12579                           
 12580                           ;My_RTCC.c: 94: RTCCFGbits.RTCPTR1 = 1;
 12581  012F5E  010F               	movlb	15	; () banked
 12582  012F60  833F               	bsf	63,1,b	;volatile
 12583                           
 12584                           ; BSR set to: 15
 12585                           ;My_RTCC.c: 96: tm->YY = x_to_d(RTCVALL);
 12586  012F62  0100               	movlb	0	; () banked
 12587  012F64  EE20 F00A          	lfsr	2,10
 12588  012F68  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12589  012F6A  26D9               	addwf	fsr2l,f,c
 12590  012F6C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12591  012F6E  22DA               	addwfc	fsr2h,f,c
 12592  012F70  010F               	movlb	15	; () banked
 12593  012F72  513A               	movf	58,w,b	;volatile
 12594  012F74  EC7A  F0A2         	call	_x_to_d
 12595  012F78  6EDF               	movwf	indf2,c
 12596                           
 12597                           ;My_RTCC.c: 97: uint8_t dumy = RTCVALH;
 12598  012F7A  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 12599                           
 12600                           ;My_RTCC.c: 98: tm->DD = x_to_d(RTCVALL);
 12601  012F7E  0100               	movlb	0	; () banked
 12602  012F80  EE20 F008          	lfsr	2,8
 12603  012F84  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12604  012F86  26D9               	addwf	fsr2l,f,c
 12605  012F88  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12606  012F8A  22DA               	addwfc	fsr2h,f,c
 12607  012F8C  010F               	movlb	15	; () banked
 12608  012F8E  513A               	movf	58,w,b	;volatile
 12609  012F90  EC7A  F0A2         	call	_x_to_d
 12610  012F94  6EDF               	movwf	indf2,c
 12611                           
 12612                           ;My_RTCC.c: 99: tm->MM = x_to_d(RTCVALH);
 12613  012F96  0100               	movlb	0	; () banked
 12614  012F98  EE20 F009          	lfsr	2,9
 12615  012F9C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12616  012F9E  26D9               	addwf	fsr2l,f,c
 12617  012FA0  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12618  012FA2  22DA               	addwfc	fsr2h,f,c
 12619  012FA4  010F               	movlb	15	; () banked
 12620  012FA6  513B               	movf	59,w,b	;volatile
 12621  012FA8  EC7A  F0A2         	call	_x_to_d
 12622  012FAC  6EDF               	movwf	indf2,c
 12623                           
 12624                           ;My_RTCC.c: 100: tm->hh = x_to_d(RTCVALL);
 12625  012FAE  0100               	movlb	0	; () banked
 12626  012FB0  EE20 F006          	lfsr	2,6
 12627  012FB4  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12628  012FB6  26D9               	addwf	fsr2l,f,c
 12629  012FB8  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12630  012FBA  22DA               	addwfc	fsr2h,f,c
 12631  012FBC  010F               	movlb	15	; () banked
 12632  012FBE  513A               	movf	58,w,b	;volatile
 12633  012FC0  EC7A  F0A2         	call	_x_to_d
 12634  012FC4  6EDF               	movwf	indf2,c
 12635                           
 12636                           ;My_RTCC.c: 101: tm->EE = x_to_d(RTCVALH);
 12637  012FC6  0100               	movlb	0	; () banked
 12638  012FC8  EE20 F007          	lfsr	2,7
 12639  012FCC  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12640  012FCE  26D9               	addwf	fsr2l,f,c
 12641  012FD0  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12642  012FD2  22DA               	addwfc	fsr2h,f,c
 12643  012FD4  010F               	movlb	15	; () banked
 12644  012FD6  513B               	movf	59,w,b	;volatile
 12645  012FD8  EC7A  F0A2         	call	_x_to_d
 12646  012FDC  6EDF               	movwf	indf2,c
 12647                           
 12648                           ;My_RTCC.c: 102: tm->ss = x_to_d(RTCVALL);
 12649  012FDE  0100               	movlb	0	; () banked
 12650  012FE0  EE20 F004          	lfsr	2,4
 12651  012FE4  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12652  012FE6  26D9               	addwf	fsr2l,f,c
 12653  012FE8  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12654  012FEA  22DA               	addwfc	fsr2h,f,c
 12655  012FEC  010F               	movlb	15	; () banked
 12656  012FEE  513A               	movf	58,w,b	;volatile
 12657  012FF0  EC7A  F0A2         	call	_x_to_d
 12658  012FF4  6EDF               	movwf	indf2,c
 12659                           
 12660                           ;My_RTCC.c: 103: tm->mm = x_to_d(RTCVALH);
 12661  012FF6  0100               	movlb	0	; () banked
 12662  012FF8  EE20 F005          	lfsr	2,5
 12663  012FFC  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12664  012FFE  26D9               	addwf	fsr2l,f,c
 12665  013000  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12666  013002  22DA               	addwfc	fsr2h,f,c
 12667  013004  010F               	movlb	15	; () banked
 12668  013006  513B               	movf	59,w,b	;volatile
 12669  013008  EC7A  F0A2         	call	_x_to_d
 12670  01300C  6EDF               	movwf	indf2,c
 12671  01300E  0012               	return		;funcret
 12672  013010                     __end_of_RTCC_to_caltime:
 12673                           	opt stack 0
 12674                           tblptru	equ	0xFF8
 12675                           tblptrh	equ	0xFF7
 12676                           tblptrl	equ	0xFF6
 12677                           tablat	equ	0xFF5
 12678                           prodh	equ	0xFF4
 12679                           prodl	equ	0xFF3
 12680                           intcon	equ	0xFF2
 12681                           intcon2	equ	0xFF1
 12682                           postinc0	equ	0xFEE
 12683                           wreg	equ	0xFE8
 12684                           indf1	equ	0xFE7
 12685                           postinc1	equ	0xFE6
 12686                           postdec1	equ	0xFE5
 12687                           fsr1h	equ	0xFE2
 12688                           fsr1l	equ	0xFE1
 12689                           indf2	equ	0xFDF
 12690                           postinc2	equ	0xFDE
 12691                           postdec2	equ	0xFDD
 12692                           plusw2	equ	0xFDB
 12693                           fsr2h	equ	0xFDA
 12694                           fsr2l	equ	0xFD9
 12695                           status	equ	0xFD8
 12696                           
 12697 ;; *************** function _x_to_d *****************
 12698 ;; Defined at:
 12699 ;;		line 52 in file "../My_library/My_RTCC.c"
 12700 ;; Parameters:    Size  Location     Type
 12701 ;;  hex             1    wreg     unsigned char 
 12702 ;; Auto vars:     Size  Location     Type
 12703 ;;  hex             1    1[BANK0 ] unsigned char 
 12704 ;; Return value:  Size  Location     Type
 12705 ;;                  1    wreg      unsigned char 
 12706 ;; Registers used:
 12707 ;;		wreg, status,2, status,0, prodl, prodh
 12708 ;; Tracked objects:
 12709 ;;		On entry : 0/0
 12710 ;;		On exit  : 0/0
 12711 ;;		Unchanged: 0/0
 12712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12715 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12717 ;;Total ram usage:        2 bytes
 12718 ;; Hardware stack levels used:    1
 12719 ;; Hardware stack levels required when called:   11
 12720 ;; This function calls:
 12721 ;;		Nothing
 12722 ;; This function is called by:
 12723 ;;		_RTCC_to_caltime
 12724 ;; This function uses a non-reentrant model
 12725 ;;
 12726                           
 12727                           	psect	text59
 12728  0144F4                     __ptext59:
 12729                           	opt stack 0
 12730  0144F4                     _x_to_d:
 12731                           	opt stack 12
 12732                           
 12733                           ;incstack = 0
 12734                           ;x_to_d@hex stored from wreg
 12735  0144F4  0100               	movlb	0	; () banked
 12736  0144F6  6F61               	movwf	x_to_d@hex& (0+255),b
 12737                           
 12738                           ;My_RTCC.c: 53: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 12739  0144F8  C061  F060         	movff	x_to_d@hex,??_x_to_d
 12740  0144FC  0E0F               	movlw	15
 12741  0144FE  0100               	movlb	0	; () banked
 12742  014500  1760               	andwf	??_x_to_d& (0+255),f,b
 12743  014502  0100               	movlb	0	; () banked
 12744  014504  3961               	swapf	x_to_d@hex& (0+255),w,b
 12745  014506  0B0F               	andlw	15
 12746  014508  0B0F               	andlw	15
 12747  01450A  0D0A               	mullw	10
 12748  01450C  50F3               	movf	prodl,w,c
 12749  01450E  0100               	movlb	0	; () banked
 12750  014510  2560               	addwf	??_x_to_d& (0+255),w,b
 12751  014512  0012               	return	
 12752  014514                     __end_of_x_to_d:
 12753                           	opt stack 0
 12754                           tblptru	equ	0xFF8
 12755                           tblptrh	equ	0xFF7
 12756                           tblptrl	equ	0xFF6
 12757                           tablat	equ	0xFF5
 12758                           prodh	equ	0xFF4
 12759                           prodl	equ	0xFF3
 12760                           intcon	equ	0xFF2
 12761                           intcon2	equ	0xFF1
 12762                           postinc0	equ	0xFEE
 12763                           wreg	equ	0xFE8
 12764                           indf1	equ	0xFE7
 12765                           postinc1	equ	0xFE6
 12766                           postdec1	equ	0xFE5
 12767                           fsr1h	equ	0xFE2
 12768                           fsr1l	equ	0xFE1
 12769                           indf2	equ	0xFDF
 12770                           postinc2	equ	0xFDE
 12771                           postdec2	equ	0xFDD
 12772                           plusw2	equ	0xFDB
 12773                           fsr2h	equ	0xFDA
 12774                           fsr2l	equ	0xFD9
 12775                           status	equ	0xFD8
 12776                           
 12777 ;; *************** function _I2C_LCD_task *****************
 12778 ;; Defined at:
 12779 ;;		line 102 in file "../My_library/My_I2C_LCD.c"
 12780 ;; Parameters:    Size  Location     Type
 12781 ;;		None
 12782 ;; Auto vars:     Size  Location     Type
 12783 ;;  data            1   17[BANK0 ] unsigned char 
 12784 ;; Return value:  Size  Location     Type
 12785 ;;		None               void
 12786 ;; Registers used:
 12787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/0
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12795 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12796 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12797 ;;Total ram usage:        3 bytes
 12798 ;; Hardware stack levels used:    1
 12799 ;; Hardware stack levels required when called:   13
 12800 ;; This function calls:
 12801 ;;		_ringbuf_num
 12802 ;;		_ringbuf_pop
 12803 ;; This function is called by:
 12804 ;;		_main
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           	psect	text60
 12809  01175C                     __ptext60:
 12810                           	opt stack 0
 12811  01175C                     _I2C_LCD_task:
 12812                           	opt stack 17
 12813                           
 12814                           ;My_I2C_LCD.c: 103: if ((SSP1CON2 & 0x1F) | (SSP1STAT & 0x05)) {
 12815                           
 12816                           ; BSR set to: 0
 12817                           ;incstack = 0
 12818  01175C  CFC7 F06F          	movff	4039,??_I2C_LCD_task	;volatile
 12819  011760  0E05               	movlw	5
 12820  011762  0100               	movlb	0	; () banked
 12821  011764  176F               	andwf	??_I2C_LCD_task& (0+255),f,b
 12822  011766  50C5               	movf	4037,w,c	;volatile
 12823  011768  0B1F               	andlw	31
 12824  01176A  0100               	movlb	0	; () banked
 12825  01176C  116F               	iorwf	??_I2C_LCD_task& (0+255),w,b
 12826  01176E  0900               	iorlw	0
 12827  011770  A4D8               	btfss	status,2,c
 12828  011772  0012               	return	
 12829  011774  D08A               	goto	l9320
 12830  011776                     l9272:
 12831                           
 12832                           ;My_I2C_LCD.c: 112: if (ringbuf_num(&lcd_tx)) {
 12833  011776  0ED4               	movlw	low _lcd_tx
 12834  011778  0100               	movlb	0	; () banked
 12835  01177A  6F60               	movwf	ringbuf_num@rb& (0+255),b
 12836  01177C  0E00               	movlw	high _lcd_tx
 12837  01177E  0100               	movlb	0	; () banked
 12838  011780  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 12839  011782  EC2E  F090         	call	_ringbuf_num	;wreg free
 12840  011786  0100               	movlb	0	; () banked
 12841  011788  5160               	movf	?_ringbuf_num& (0+255),w,b
 12842  01178A  0100               	movlb	0	; () banked
 12843  01178C  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 12844  01178E  B4D8               	btfsc	status,2,c
 12845  011790  0012               	return	
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;My_I2C_LCD.c: 113: i2c_lcd_state = I2C_LCD_START;
 12849  011792  0E01               	movlw	1
 12850  011794  0101               	movlb	1	; () banked
 12851  011796  6F2D               	movwf	I2C_LCD_task@i2c_lcd_state& (0+255),b
 12852                           
 12853                           ; BSR set to: 1
 12854                           ;My_I2C_LCD.c: 114: }
 12855                           ;My_I2C_LCD.c: 115: break;
 12856  011798  0012               	return	
 12857  01179A                     l9276:
 12858                           
 12859                           ; BSR set to: 1
 12860                           ;My_I2C_LCD.c: 117: i2c_lcd_flag = 1;
 12861  01179A  0E01               	movlw	1
 12862  01179C  6E2A               	movwf	_i2c_lcd_flag,c
 12863                           
 12864                           ; BSR set to: 1
 12865                           ;My_I2C_LCD.c: 118: SSP1CON2bits.SEN = 1;
 12866  01179E  80C5               	bsf	4037,0,c	;volatile
 12867                           
 12868                           ;My_I2C_LCD.c: 119: i2c_lcd_state = I2C_LCD_SEND;
 12869  0117A0  0E02               	movlw	2
 12870  0117A2  0101               	movlb	1	; () banked
 12871  0117A4  6F2D               	movwf	I2C_LCD_task@i2c_lcd_state& (0+255),b
 12872                           
 12873                           ;My_I2C_LCD.c: 120: break;
 12874  0117A6  0012               	return	
 12875  0117A8                     l9280:
 12876                           
 12877                           ; BSR set to: 1
 12878                           ;My_I2C_LCD.c: 122: if (!i2c_lcd_flag) {
 12879  0117A8  502A               	movf	_i2c_lcd_flag,w,c
 12880  0117AA  B4D8               	btfsc	status,2,c
 12881  0117AC  0012               	return	
 12882                           
 12883                           ; BSR set to: 1
 12884                           ;My_I2C_LCD.c: 125: }
 12885                           ;My_I2C_LCD.c: 126: char data = ringbuf_pop(&lcd_tx);
 12886                           
 12887                           ; BSR set to: 1
 12888                           
 12889                           ; BSR set to: 1
 12890                           ;My_I2C_LCD.c: 124: return;
 12891  0117AE  0ED4               	movlw	low _lcd_tx
 12892  0117B0  0100               	movlb	0	; () banked
 12893  0117B2  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 12894  0117B4  0E00               	movlw	high _lcd_tx
 12895  0117B6  0100               	movlb	0	; () banked
 12896  0117B8  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 12897  0117BA  EC26  F096         	call	_ringbuf_pop	;wreg free
 12898  0117BE  0100               	movlb	0	; () banked
 12899  0117C0  6F71               	movwf	I2C_LCD_task@data& (0+255),b
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;My_I2C_LCD.c: 127: if (data != 0) {
 12903  0117C2  0100               	movlb	0	; () banked
 12904  0117C4  5171               	movf	I2C_LCD_task@data& (0+255),w,b
 12905  0117C6  0100               	movlb	0	; () banked
 12906  0117C8  B4D8               	btfsc	status,2,c
 12907  0117CA  D005               	goto	l9292
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;My_I2C_LCD.c: 128: i2c_lcd_flag = 0;
 12911  0117CC  0E00               	movlw	0
 12912  0117CE  6E2A               	movwf	_i2c_lcd_flag,c
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;My_I2C_LCD.c: 129: SSP1BUF = data;
 12916  0117D0  C071  FFC9         	movff	I2C_LCD_task@data,4041	;volatile
 12917                           
 12918                           ;My_I2C_LCD.c: 130: } else {
 12919  0117D4  0012               	return	
 12920  0117D6                     l9292:
 12921                           
 12922                           ; BSR set to: 0
 12923                           ;My_I2C_LCD.c: 131: wait = ringbuf_pop(&lcd_tx);
 12924  0117D6  0ED4               	movlw	low _lcd_tx
 12925  0117D8  0100               	movlb	0	; () banked
 12926  0117DA  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 12927  0117DC  0E00               	movlw	high _lcd_tx
 12928  0117DE  0100               	movlb	0	; () banked
 12929  0117E0  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 12930  0117E2  EC26  F096         	call	_ringbuf_pop	;wreg free
 12931  0117E6  0100               	movlb	0	; () banked
 12932  0117E8  6F6F               	movwf	??_I2C_LCD_task& (0+255),b
 12933  0117EA  0100               	movlb	0	; () banked
 12934  0117EC  516F               	movf	??_I2C_LCD_task& (0+255),w,b
 12935  0117EE  0101               	movlb	1	; () banked
 12936  0117F0  6F21               	movwf	I2C_LCD_task@wait& (0+255),b
 12937  0117F2  6B22               	clrf	(I2C_LCD_task@wait+1)& (0+255),b
 12938                           
 12939                           ;My_I2C_LCD.c: 132: switch (wait) {
 12940  0117F4  D01A               	goto	l9306
 12941  0117F6                     l9294:
 12942                           
 12943                           ;My_I2C_LCD.c: 134: wait = 0;
 12944  0117F6  0E00               	movlw	0
 12945  0117F8  0101               	movlb	1	; () banked
 12946  0117FA  6F22               	movwf	(I2C_LCD_task@wait+1)& (0+255),b
 12947  0117FC  0E00               	movlw	0
 12948  0117FE  D013               	goto	L7
 12949  011800                     l9296:
 12950                           
 12951                           ;My_I2C_LCD.c: 137: wait = 2;
 12952  011800  0E00               	movlw	0
 12953  011802  0101               	movlb	1	; () banked
 12954  011804  6F22               	movwf	(I2C_LCD_task@wait+1)& (0+255),b
 12955  011806  0E02               	movlw	2
 12956  011808  D00E               	goto	L7
 12957  01180A                     l9298:
 12958                           
 12959                           ;My_I2C_LCD.c: 140: wait = 25;
 12960  01180A  0E00               	movlw	0
 12961  01180C  0101               	movlb	1	; () banked
 12962  01180E  6F22               	movwf	(I2C_LCD_task@wait+1)& (0+255),b
 12963  011810  0E19               	movlw	25
 12964  011812  D009               	goto	L7
 12965  011814                     l9300:
 12966                           
 12967                           ;My_I2C_LCD.c: 143: wait = 800;
 12968  011814  0E03               	movlw	3
 12969  011816  0101               	movlb	1	; () banked
 12970  011818  6F22               	movwf	(I2C_LCD_task@wait+1)& (0+255),b
 12971  01181A  0E20               	movlw	32
 12972  01181C  D004               	goto	L7
 12973  01181E                     l9302:
 12974                           
 12975                           ;My_I2C_LCD.c: 146: wait = 1;
 12976  01181E  0E00               	movlw	0
 12977  011820  0101               	movlb	1	; () banked
 12978  011822  6F22               	movwf	(I2C_LCD_task@wait+1)& (0+255),b
 12979  011824  0E01               	movlw	1
 12980  011826                     L7:
 12981  011826  6F21               	movwf	I2C_LCD_task@wait& (0+255),b
 12982                           
 12983                           ; BSR set to: 1
 12984                           ;My_I2C_LCD.c: 148: }
 12985                           
 12986                           ;My_I2C_LCD.c: 147: break;
 12987  011828  D018               	goto	l9308
 12988  01182A                     l9306:
 12989                           
 12990                           ; BSR set to: 1
 12991  01182A  C121  F06F         	movff	I2C_LCD_task@wait,??_I2C_LCD_task
 12992  01182E  C122  F070         	movff	I2C_LCD_task@wait+1,??_I2C_LCD_task+1
 12993                           
 12994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12995                           ; Switch size 1, requested type "space"
 12996                           ; Number of cases is 1, Range of values is 0 to 0
 12997                           ; switch strategies available:
 12998                           ; Name         Instructions Cycles
 12999                           ; simple_byte            4     3 (average)
 13000                           ;	Chosen strategy is simple_byte
 13001  011832  0100               	movlb	0	; () banked
 13002  011834  5170               	movf	(??_I2C_LCD_task+1)& (0+255),w,b
 13003  011836  0A00               	xorlw	0	; case 0
 13004  011838  A4D8               	btfss	status,2,c
 13005  01183A  D7F1               	goto	l9302
 13006                           
 13007                           ; BSR set to: 0
 13008                           ; Switch size 1, requested type "space"
 13009                           ; Number of cases is 4, Range of values is 0 to 3
 13010                           ; switch strategies available:
 13011                           ; Name         Instructions Cycles
 13012                           ; simple_byte           13     7 (average)
 13013                           ;	Chosen strategy is simple_byte
 13014  01183C  0100               	movlb	0	; () banked
 13015  01183E  516F               	movf	??_I2C_LCD_task& (0+255),w,b
 13016  011840  0A00               	xorlw	0	; case 0
 13017  011842  B4D8               	btfsc	status,2,c
 13018  011844  D7D8               	goto	l9294
 13019  011846  0A01               	xorlw	1	; case 1
 13020  011848  B4D8               	btfsc	status,2,c
 13021  01184A  D7DA               	goto	l9296
 13022  01184C  0A03               	xorlw	3	; case 2
 13023  01184E  B4D8               	btfsc	status,2,c
 13024  011850  D7DC               	goto	l9298
 13025  011852  0A01               	xorlw	1	; case 3
 13026  011854  B4D8               	btfsc	status,2,c
 13027  011856  D7DE               	goto	l9300
 13028  011858  D7E2               	goto	l9302
 13029  01185A                     l9308:
 13030                           
 13031                           ;My_I2C_LCD.c: 149: i2c_lcd_state = I2C_LCD_STOP;
 13032  01185A  0E03               	movlw	3
 13033  01185C  0101               	movlb	1	; () banked
 13034  01185E  6F2D               	movwf	I2C_LCD_task@i2c_lcd_state& (0+255),b
 13035                           
 13036                           ; BSR set to: 1
 13037                           ;My_I2C_LCD.c: 150: }
 13038                           ;My_I2C_LCD.c: 151: break;
 13039  011860  0012               	return	
 13040  011862                     l699:
 13041                           
 13042                           ; BSR set to: 1
 13043                           ;My_I2C_LCD.c: 153: SSP1CON2bits.PEN = 1;
 13044  011862  84C5               	bsf	4037,2,c	;volatile
 13045                           
 13046                           ; BSR set to: 1
 13047                           ;My_I2C_LCD.c: 154: i2c_lcd_state = I2C_LCD_WAIT;
 13048  011864  0E04               	movlw	4
 13049  011866  0101               	movlb	1	; () banked
 13050  011868  6F2D               	movwf	I2C_LCD_task@i2c_lcd_state& (0+255),b
 13051                           
 13052                           ;My_I2C_LCD.c: 155: break;
 13053  01186A  0012               	return	
 13054  01186C                     l9312:
 13055                           
 13056                           ; BSR set to: 1
 13057                           ;My_I2C_LCD.c: 157: if (wait == 0) i2c_lcd_state = I2C_LCD_IDOLE;
 13058  01186C  0101               	movlb	1	; () banked
 13059  01186E  5121               	movf	I2C_LCD_task@wait& (0+255),w,b
 13060  011870  0101               	movlb	1	; () banked
 13061  011872  1122               	iorwf	(I2C_LCD_task@wait+1)& (0+255),w,b
 13062  011874  A4D8               	btfss	status,2,c
 13063  011876  D004               	goto	l9316
 13064                           
 13065                           ; BSR set to: 1
 13066  011878  0E00               	movlw	0
 13067  01187A  0101               	movlb	1	; () banked
 13068  01187C  6F2D               	movwf	I2C_LCD_task@i2c_lcd_state& (0+255),b
 13069  01187E  0012               	return	
 13070  011880                     l9316:
 13071                           
 13072                           ; BSR set to: 1
 13073                           ;My_I2C_LCD.c: 158: else wait--;
 13074  011880  0101               	movlb	1	; () banked
 13075  011882  0721               	decf	I2C_LCD_task@wait& (0+255),f,b
 13076  011884  A0D8               	btfss	status,0,c
 13077  011886  0722               	decf	(I2C_LCD_task@wait+1)& (0+255),f,b
 13078                           
 13079                           ; BSR set to: 1
 13080                           ;My_I2C_LCD.c: 160: }
 13081                           
 13082                           ; BSR set to: 1
 13083                           ;My_I2C_LCD.c: 159: break;
 13084  011888  0012               	return	
 13085  01188A                     l9320:
 13086  01188A  0101               	movlb	1	; () banked
 13087  01188C  512D               	movf	I2C_LCD_task@i2c_lcd_state& (0+255),w,b
 13088                           
 13089                           ; Switch size 1, requested type "space"
 13090                           ; Number of cases is 5, Range of values is 0 to 4
 13091                           ; switch strategies available:
 13092                           ; Name         Instructions Cycles
 13093                           ; simple_byte           16     9 (average)
 13094                           ;	Chosen strategy is simple_byte
 13095  01188E  0A00               	xorlw	0	; case 0
 13096  011890  B4D8               	btfsc	status,2,c
 13097  011892  D771               	goto	l9272
 13098  011894  0A01               	xorlw	1	; case 1
 13099  011896  B4D8               	btfsc	status,2,c
 13100  011898  D780               	goto	l9276
 13101  01189A  0A03               	xorlw	3	; case 2
 13102  01189C  B4D8               	btfsc	status,2,c
 13103  01189E  D784               	goto	l9280
 13104  0118A0  0A01               	xorlw	1	; case 3
 13105  0118A2  B4D8               	btfsc	status,2,c
 13106  0118A4  D7DE               	goto	l699
 13107  0118A6  0A07               	xorlw	7	; case 4
 13108  0118A8  A4D8               	btfss	status,2,c
 13109  0118AA  0012               	return	
 13110  0118AC  D7DF               	goto	l9312
 13111  0118AE                     __end_of_I2C_LCD_task:
 13112                           	opt stack 0
 13113                           tblptru	equ	0xFF8
 13114                           tblptrh	equ	0xFF7
 13115                           tblptrl	equ	0xFF6
 13116                           tablat	equ	0xFF5
 13117                           prodh	equ	0xFF4
 13118                           prodl	equ	0xFF3
 13119                           intcon	equ	0xFF2
 13120                           intcon2	equ	0xFF1
 13121                           postinc0	equ	0xFEE
 13122                           wreg	equ	0xFE8
 13123                           indf1	equ	0xFE7
 13124                           postinc1	equ	0xFE6
 13125                           postdec1	equ	0xFE5
 13126                           fsr1h	equ	0xFE2
 13127                           fsr1l	equ	0xFE1
 13128                           indf2	equ	0xFDF
 13129                           postinc2	equ	0xFDE
 13130                           postdec2	equ	0xFDD
 13131                           plusw2	equ	0xFDB
 13132                           fsr2h	equ	0xFDA
 13133                           fsr2l	equ	0xFD9
 13134                           status	equ	0xFD8
 13135                           
 13136 ;; *************** function _ringbuf_pop *****************
 13137 ;; Defined at:
 13138 ;;		line 45 in file "../My_library/My_ringbuf.c"
 13139 ;; Parameters:    Size  Location     Type
 13140 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 13141 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 13142 ;;		 -> lcd_tx(8), 
 13143 ;; Auto vars:     Size  Location     Type
 13144 ;;  ret             1   14[BANK0 ] unsigned char 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  1    wreg      unsigned char 
 13147 ;; Registers used:
 13148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13156 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13157 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13158 ;;Total ram usage:        7 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:   12
 13161 ;; This function calls:
 13162 ;;		_ringbuf_num
 13163 ;; This function is called by:
 13164 ;;		_I2C_LCD_task
 13165 ;;		_terminal_task
 13166 ;;		_USB_task
 13167 ;; This function uses a non-reentrant model
 13168 ;;
 13169                           
 13170                           	psect	text61
 13171  012C4C                     __ptext61:
 13172                           	opt stack 0
 13173  012C4C                     _ringbuf_pop:
 13174                           	opt stack 17
 13175                           
 13176                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 13177                           
 13178                           ;incstack = 0
 13179  012C4C  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 13180  012C50  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 13181  012C54  EC2E  F090         	call	_ringbuf_num	;wreg free
 13182  012C58  0100               	movlb	0	; () banked
 13183  012C5A  5160               	movf	?_ringbuf_num& (0+255),w,b
 13184  012C5C  0100               	movlb	0	; () banked
 13185  012C5E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 13186  012C60  B4D8               	btfsc	status,2,c
 13187  012C62  D058               	goto	l9064
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 13191  012C64  0100               	movlb	0	; () banked
 13192  012C66  EE20 F006          	lfsr	2,6
 13193  012C6A  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 13194  012C6C  26D9               	addwf	fsr2l,f,c
 13195  012C6E  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 13196  012C70  22DA               	addwfc	fsr2h,f,c
 13197  012C72  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 13198  012C76  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 13199  012C7A  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 13200  012C7E  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 13201  012C82  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 13202  012C86  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 13203  012C8A  0100               	movlb	0	; () banked
 13204  012C8C  516A               	movf	??_ringbuf_pop& (0+255),w,b
 13205  012C8E  0100               	movlb	0	; () banked
 13206  012C90  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 13207  012C92  6ED9               	movwf	fsr2l,c
 13208  012C94  0100               	movlb	0	; () banked
 13209  012C96  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 13210  012C98  0100               	movlb	0	; () banked
 13211  012C9A  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 13212  012C9C  6EDA               	movwf	fsr2h,c
 13213  012C9E  50DF               	movf	indf2,w,c
 13214  012CA0  0100               	movlb	0	; () banked
 13215  012CA2  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 13216                           
 13217                           ; BSR set to: 0
 13218                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 13219  012CA4  0100               	movlb	0	; () banked
 13220  012CA6  EE20 F002          	lfsr	2,2
 13221  012CAA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 13222  012CAC  26D9               	addwf	fsr2l,f,c
 13223  012CAE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 13224  012CB0  22DA               	addwfc	fsr2h,f,c
 13225  012CB2  0100               	movlb	0	; () banked
 13226  012CB4  EE10 F006          	lfsr	1,6
 13227  012CB8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 13228  012CBA  26E1               	addwf	fsr1l,f,c
 13229  012CBC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 13230  012CBE  22E2               	addwfc	fsr1h,f,c
 13231  012CC0  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 13232  012CC4  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 13233  012CC8  0E01               	movlw	1
 13234  012CCA  0100               	movlb	0	; () banked
 13235  012CCC  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 13236  012CCE  0E00               	movlw	0
 13237  012CD0  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 13238  012CD2  50DE               	movf	postinc2,w,c
 13239  012CD4  0100               	movlb	0	; () banked
 13240  012CD6  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 13241  012CD8  50DE               	movf	postinc2,w,c
 13242  012CDA  0100               	movlb	0	; () banked
 13243  012CDC  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 13244  012CDE  B0D8               	btfsc	status,0,c
 13245  012CE0  D00B               	goto	l9056
 13246                           
 13247                           ; BSR set to: 0
 13248                           ;My_ringbuf.c: 49: rb->tail++;
 13249  012CE2  0100               	movlb	0	; () banked
 13250  012CE4  EE20 F006          	lfsr	2,6
 13251  012CE8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 13252  012CEA  26D9               	addwf	fsr2l,f,c
 13253  012CEC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 13254  012CEE  22DA               	addwfc	fsr2h,f,c
 13255  012CF0  2ADE               	incf	postinc2,f,c
 13256  012CF2  0E00               	movlw	0
 13257  012CF4  22DD               	addwfc	postdec2,f,c
 13258                           
 13259                           ;My_ringbuf.c: 50: } else {
 13260  012CF6  D00B               	goto	l9058
 13261  012CF8                     l9056:
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;My_ringbuf.c: 51: rb->tail = 0;
 13265  012CF8  0100               	movlb	0	; () banked
 13266  012CFA  EE20 F006          	lfsr	2,6
 13267  012CFE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 13268  012D00  26D9               	addwf	fsr2l,f,c
 13269  012D02  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 13270  012D04  22DA               	addwfc	fsr2h,f,c
 13271  012D06  0E00               	movlw	0
 13272  012D08  6EDE               	movwf	postinc2,c
 13273  012D0A  0E00               	movlw	0
 13274  012D0C  6EDD               	movwf	postdec2,c
 13275  012D0E                     l9058:
 13276                           
 13277                           ; BSR set to: 0
 13278                           ;My_ringbuf.c: 52: }
 13279                           ;My_ringbuf.c: 53: return ret;
 13280  012D0E  0100               	movlb	0	; () banked
 13281  012D10  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;My_ringbuf.c: 54: } else {
 13285                           
 13286                           ; BSR set to: 0
 13287  012D12  0012               	return	
 13288  012D14                     l9064:
 13289                           
 13290                           ; BSR set to: 0
 13291                           ;My_ringbuf.c: 55: return 0;
 13292  012D14  0E00               	movlw	0
 13293                           
 13294                           ; BSR set to: 0
 13295  012D16  0012               	return	
 13296  012D18                     __end_of_ringbuf_pop:
 13297                           	opt stack 0
 13298                           tblptru	equ	0xFF8
 13299                           tblptrh	equ	0xFF7
 13300                           tblptrl	equ	0xFF6
 13301                           tablat	equ	0xFF5
 13302                           prodh	equ	0xFF4
 13303                           prodl	equ	0xFF3
 13304                           intcon	equ	0xFF2
 13305                           intcon2	equ	0xFF1
 13306                           postinc0	equ	0xFEE
 13307                           wreg	equ	0xFE8
 13308                           indf1	equ	0xFE7
 13309                           postinc1	equ	0xFE6
 13310                           postdec1	equ	0xFE5
 13311                           fsr1h	equ	0xFE2
 13312                           fsr1l	equ	0xFE1
 13313                           indf2	equ	0xFDF
 13314                           postinc2	equ	0xFDE
 13315                           postdec2	equ	0xFDD
 13316                           plusw2	equ	0xFDB
 13317                           fsr2h	equ	0xFDA
 13318                           fsr2l	equ	0xFD9
 13319                           status	equ	0xFD8
 13320                           
 13321 ;; *************** function _I2C_LCD_puts *****************
 13322 ;; Defined at:
 13323 ;;		line 43 in file "../My_library/My_I2C_LCD.c"
 13324 ;; Parameters:    Size  Location     Type
 13325 ;;  s               2   16[BANK0 ] PTR const unsigned char 
 13326 ;;		 -> main@s(40), STR_47(9), STR_46(9), 
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;		None
 13329 ;; Return value:  Size  Location     Type
 13330 ;;		None               void
 13331 ;; Registers used:
 13332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13333 ;; Tracked objects:
 13334 ;;		On entry : 0/0
 13335 ;;		On exit  : 0/0
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13341 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13342 ;;Total ram usage:        2 bytes
 13343 ;; Hardware stack levels used:    1
 13344 ;; Hardware stack levels required when called:   14
 13345 ;; This function calls:
 13346 ;;		_I2C_LCD_put
 13347 ;; This function is called by:
 13348 ;;		_main
 13349 ;; This function uses a non-reentrant model
 13350 ;;
 13351                           
 13352                           	psect	text62
 13353  013F4E                     __ptext62:
 13354                           	opt stack 0
 13355  013F4E                     _I2C_LCD_puts:
 13356                           	opt stack 16
 13357                           
 13358                           ;My_I2C_LCD.c: 44: while (*s) {
 13359                           
 13360                           ; BSR set to: 0
 13361                           ;incstack = 0
 13362  013F4E  D016               	goto	l9266
 13363  013F50                     l9262:
 13364                           
 13365                           ;My_I2C_LCD.c: 45: I2C_LCD_put(*s++);
 13366  013F50  C070  FFF6         	movff	I2C_LCD_puts@s,tblptrl
 13367  013F54  C071  FFF7         	movff	I2C_LCD_puts@s+1,tblptrh
 13368  013F58  0E00               	movlw	low (__mediumconst shr (0+16))
 13369  013F5A  6EF8               	movwf	tblptru,c
 13370  013F5C  0E0E               	movlw	(high __ramtop+-1)
 13371  013F5E  64F7               	cpfsgt	tblptrh,c
 13372  013F60  D003               	bra	u9177
 13373  013F62  0008               	tblrd		*
 13374  013F64  50F5               	movf	tablat,w,c
 13375  013F66  D005               	bra	u9170
 13376  013F68                     u9177:
 13377  013F68  CFF6 FFE1          	movff	tblptrl,fsr1l
 13378  013F6C  CFF7 FFE2          	movff	tblptrh,fsr1h
 13379  013F70  50E7               	movf	indf1,w,c
 13380  013F72                     u9170:
 13381  013F72  EC75  F09D         	call	_I2C_LCD_put
 13382  013F76  0100               	movlb	0	; () banked
 13383  013F78  4B70               	infsnz	I2C_LCD_puts@s& (0+255),f,b
 13384  013F7A  2B71               	incf	(I2C_LCD_puts@s+1)& (0+255),f,b
 13385  013F7C                     l9266:
 13386  013F7C  C070  FFF6         	movff	I2C_LCD_puts@s,tblptrl
 13387  013F80  C071  FFF7         	movff	I2C_LCD_puts@s+1,tblptrh
 13388  013F84  0E00               	movlw	low (__mediumconst shr (0+16))
 13389  013F86  6EF8               	movwf	tblptru,c
 13390  013F88  0E0E               	movlw	(high __ramtop+-1)
 13391  013F8A  64F7               	cpfsgt	tblptrh,c
 13392  013F8C  D003               	bra	u9187
 13393  013F8E  0008               	tblrd		*
 13394  013F90  50F5               	movf	tablat,w,c
 13395  013F92  D005               	bra	u9180
 13396  013F94                     u9187:
 13397  013F94  CFF6 FFE1          	movff	tblptrl,fsr1l
 13398  013F98  CFF7 FFE2          	movff	tblptrh,fsr1h
 13399  013F9C  50E7               	movf	indf1,w,c
 13400  013F9E                     u9180:
 13401  013F9E  0900               	iorlw	0
 13402  013FA0  B4D8               	btfsc	status,2,c
 13403  013FA2  0012               	return	
 13404  013FA4  D7D5               	goto	l9262
 13405  013FA6                     __end_of_I2C_LCD_puts:
 13406                           	opt stack 0
 13407                           tblptru	equ	0xFF8
 13408                           tblptrh	equ	0xFF7
 13409                           tblptrl	equ	0xFF6
 13410                           tablat	equ	0xFF5
 13411                           prodh	equ	0xFF4
 13412                           prodl	equ	0xFF3
 13413                           intcon	equ	0xFF2
 13414                           intcon2	equ	0xFF1
 13415                           postinc0	equ	0xFEE
 13416                           wreg	equ	0xFE8
 13417                           indf1	equ	0xFE7
 13418                           postinc1	equ	0xFE6
 13419                           postdec1	equ	0xFE5
 13420                           fsr1h	equ	0xFE2
 13421                           fsr1l	equ	0xFE1
 13422                           indf2	equ	0xFDF
 13423                           postinc2	equ	0xFDE
 13424                           postdec2	equ	0xFDD
 13425                           plusw2	equ	0xFDB
 13426                           fsr2h	equ	0xFDA
 13427                           fsr2l	equ	0xFD9
 13428                           status	equ	0xFD8
 13429                           
 13430 ;; *************** function _I2C_LCD_put *****************
 13431 ;; Defined at:
 13432 ;;		line 35 in file "../My_library/My_I2C_LCD.c"
 13433 ;; Parameters:    Size  Location     Type
 13434 ;;  c               1    wreg     unsigned char 
 13435 ;; Auto vars:     Size  Location     Type
 13436 ;;  c               1   15[BANK0 ] unsigned char 
 13437 ;; Return value:  Size  Location     Type
 13438 ;;		None               void
 13439 ;; Registers used:
 13440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13441 ;; Tracked objects:
 13442 ;;		On entry : 0/0
 13443 ;;		On exit  : 0/0
 13444 ;;		Unchanged: 0/0
 13445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13447 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13449 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13450 ;;Total ram usage:        1 bytes
 13451 ;; Hardware stack levels used:    1
 13452 ;; Hardware stack levels required when called:   13
 13453 ;; This function calls:
 13454 ;;		_ringbuf_put
 13455 ;; This function is called by:
 13456 ;;		_I2C_LCD_puts
 13457 ;; This function uses a non-reentrant model
 13458 ;;
 13459                           
 13460                           	psect	text63
 13461  013AEA                     __ptext63:
 13462                           	opt stack 0
 13463  013AEA                     _I2C_LCD_put:
 13464                           	opt stack 16
 13465                           
 13466                           ;incstack = 0
 13467                           ;I2C_LCD_put@c stored from wreg
 13468  013AEA  0100               	movlb	0	; () banked
 13469  013AEC  6F6F               	movwf	I2C_LCD_put@c& (0+255),b
 13470                           
 13471                           ;My_I2C_LCD.c: 36: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 13472  013AEE  0ED4               	movlw	low _lcd_tx
 13473  013AF0  0100               	movlb	0	; () banked
 13474  013AF2  6F68               	movwf	ringbuf_put@rb& (0+255),b
 13475  013AF4  0E00               	movlw	high _lcd_tx
 13476  013AF6  0100               	movlb	0	; () banked
 13477  013AF8  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13478  013AFA  0E7C               	movlw	124
 13479  013AFC  0100               	movlb	0	; () banked
 13480  013AFE  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 13481  013B00  EC83  F094         	call	_ringbuf_put	;wreg free
 13482                           
 13483                           ;My_I2C_LCD.c: 37: ringbuf_put(&lcd_tx, 0b11000000);
 13484  013B04  0ED4               	movlw	low _lcd_tx
 13485  013B06  0100               	movlb	0	; () banked
 13486  013B08  6F68               	movwf	ringbuf_put@rb& (0+255),b
 13487  013B0A  0E00               	movlw	high _lcd_tx
 13488  013B0C  0100               	movlb	0	; () banked
 13489  013B0E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13490  013B10  0EC0               	movlw	192
 13491  013B12  0100               	movlb	0	; () banked
 13492  013B14  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 13493  013B16  EC83  F094         	call	_ringbuf_put	;wreg free
 13494                           
 13495                           ;My_I2C_LCD.c: 38: ringbuf_put(&lcd_tx, c);
 13496  013B1A  0ED4               	movlw	low _lcd_tx
 13497  013B1C  0100               	movlb	0	; () banked
 13498  013B1E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 13499  013B20  0E00               	movlw	high _lcd_tx
 13500  013B22  0100               	movlb	0	; () banked
 13501  013B24  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13502  013B26  C06F  F06A         	movff	I2C_LCD_put@c,ringbuf_put@asciicode
 13503  013B2A  EC83  F094         	call	_ringbuf_put	;wreg free
 13504                           
 13505                           ;My_I2C_LCD.c: 39: ringbuf_put(&lcd_tx, 0);
 13506  013B2E  0ED4               	movlw	low _lcd_tx
 13507  013B30  0100               	movlb	0	; () banked
 13508  013B32  6F68               	movwf	ringbuf_put@rb& (0+255),b
 13509  013B34  0E00               	movlw	high _lcd_tx
 13510  013B36  0100               	movlb	0	; () banked
 13511  013B38  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13512  013B3A  0E00               	movlw	0
 13513  013B3C  0100               	movlb	0	; () banked
 13514  013B3E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 13515  013B40  EC83  F094         	call	_ringbuf_put	;wreg free
 13516                           
 13517                           ;My_I2C_LCD.c: 40: ringbuf_put(&lcd_tx, 1);
 13518  013B44  0ED4               	movlw	low _lcd_tx
 13519  013B46  0100               	movlb	0	; () banked
 13520  013B48  6F68               	movwf	ringbuf_put@rb& (0+255),b
 13521  013B4A  0E00               	movlw	high _lcd_tx
 13522  013B4C  0100               	movlb	0	; () banked
 13523  013B4E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13524  013B50  0E01               	movlw	1
 13525  013B52  0100               	movlb	0	; () banked
 13526  013B54  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 13527  013B56  EC83  F094         	call	_ringbuf_put	;wreg free
 13528  013B5A  0012               	return		;funcret
 13529  013B5C                     __end_of_I2C_LCD_put:
 13530                           	opt stack 0
 13531                           tblptru	equ	0xFF8
 13532                           tblptrh	equ	0xFF7
 13533                           tblptrl	equ	0xFF6
 13534                           tablat	equ	0xFF5
 13535                           prodh	equ	0xFF4
 13536                           prodl	equ	0xFF3
 13537                           intcon	equ	0xFF2
 13538                           intcon2	equ	0xFF1
 13539                           postinc0	equ	0xFEE
 13540                           wreg	equ	0xFE8
 13541                           indf1	equ	0xFE7
 13542                           postinc1	equ	0xFE6
 13543                           postdec1	equ	0xFE5
 13544                           fsr1h	equ	0xFE2
 13545                           fsr1l	equ	0xFE1
 13546                           indf2	equ	0xFDF
 13547                           postinc2	equ	0xFDE
 13548                           postdec2	equ	0xFDD
 13549                           plusw2	equ	0xFDB
 13550                           fsr2h	equ	0xFDA
 13551                           fsr2l	equ	0xFD9
 13552                           status	equ	0xFD8
 13553                           
 13554 ;; *************** function _I2C_LCD_cursor *****************
 13555 ;; Defined at:
 13556 ;;		line 30 in file "../My_library/My_I2C_LCD.c"
 13557 ;; Parameters:    Size  Location     Type
 13558 ;;  col             1    wreg     unsigned char 
 13559 ;;  row             1   17[BANK0 ] unsigned char 
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;  col             1   20[BANK0 ] unsigned char 
 13562 ;;  row_offsets     2   18[BANK0 ] unsigned char [2]
 13563 ;; Return value:  Size  Location     Type
 13564 ;;		None               void
 13565 ;; Registers used:
 13566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13567 ;; Tracked objects:
 13568 ;;		On entry : 0/0
 13569 ;;		On exit  : 0/0
 13570 ;;		Unchanged: 0/0
 13571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13572 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13573 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13575 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13576 ;;Total ram usage:        4 bytes
 13577 ;; Hardware stack levels used:    1
 13578 ;; Hardware stack levels required when called:   14
 13579 ;; This function calls:
 13580 ;;		_I2C_LCD_command
 13581 ;; This function is called by:
 13582 ;;		_main
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586                           	psect	text64
 13587  0142B2                     __ptext64:
 13588                           	opt stack 0
 13589  0142B2                     _I2C_LCD_cursor:
 13590                           	opt stack 16
 13591                           
 13592                           ;incstack = 0
 13593                           ;I2C_LCD_cursor@col stored from wreg
 13594  0142B2  0100               	movlb	0	; () banked
 13595  0142B4  6F74               	movwf	I2C_LCD_cursor@col& (0+255),b
 13596                           
 13597                           ;My_I2C_LCD.c: 31: uint8_t row_offsets[] = {0x00, 0x40};
 13598  0142B6  C1E7  F072         	movff	I2C_LCD_cursor@F8592,I2C_LCD_cursor@row_offsets
 13599  0142BA  C1E8  F073         	movff	I2C_LCD_cursor@F8592+1,I2C_LCD_cursor@row_offsets+1
 13600                           
 13601                           ;My_I2C_LCD.c: 32: I2C_LCD_command(0x80 | (col + row_offsets[row]), 0);
 13602  0142BE  0E00               	movlw	0
 13603  0142C0  0100               	movlb	0	; () banked
 13604  0142C2  6F6F               	movwf	I2C_LCD_command@wait& (0+255),b
 13605  0142C4  0100               	movlb	0	; () banked
 13606  0142C6  5171               	movf	I2C_LCD_cursor@row& (0+255),w,b
 13607  0142C8  0D01               	mullw	1
 13608  0142CA  0E72               	movlw	low I2C_LCD_cursor@row_offsets
 13609  0142CC  24F3               	addwf	prodl,w,c
 13610  0142CE  6ED9               	movwf	fsr2l,c
 13611  0142D0  0E00               	movlw	high I2C_LCD_cursor@row_offsets
 13612  0142D2  20F4               	addwfc	prodh,w,c
 13613  0142D4  6EDA               	movwf	fsr2h,c
 13614  0142D6  50DF               	movf	indf2,w,c
 13615  0142D8  0100               	movlb	0	; () banked
 13616  0142DA  2574               	addwf	I2C_LCD_cursor@col& (0+255),w,b
 13617  0142DC  0980               	iorlw	128
 13618  0142DE  ECAE  F09D         	call	_I2C_LCD_command
 13619  0142E2  0012               	return		;funcret
 13620  0142E4                     __end_of_I2C_LCD_cursor:
 13621                           	opt stack 0
 13622                           tblptru	equ	0xFF8
 13623                           tblptrh	equ	0xFF7
 13624                           tblptrl	equ	0xFF6
 13625                           tablat	equ	0xFF5
 13626                           prodh	equ	0xFF4
 13627                           prodl	equ	0xFF3
 13628                           intcon	equ	0xFF2
 13629                           intcon2	equ	0xFF1
 13630                           postinc0	equ	0xFEE
 13631                           wreg	equ	0xFE8
 13632                           indf1	equ	0xFE7
 13633                           postinc1	equ	0xFE6
 13634                           postdec1	equ	0xFE5
 13635                           fsr1h	equ	0xFE2
 13636                           fsr1l	equ	0xFE1
 13637                           indf2	equ	0xFDF
 13638                           postinc2	equ	0xFDE
 13639                           postdec2	equ	0xFDD
 13640                           plusw2	equ	0xFDB
 13641                           fsr2h	equ	0xFDA
 13642                           fsr2l	equ	0xFD9
 13643                           status	equ	0xFD8
 13644                           
 13645 ;; *************** function _I2C_LCD_command *****************
 13646 ;; Defined at:
 13647 ;;		line 18 in file "../My_library/My_I2C_LCD.c"
 13648 ;; Parameters:    Size  Location     Type
 13649 ;;  command         1    wreg     unsigned char 
 13650 ;;  wait            1   15[BANK0 ] unsigned char 
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;  command         1   16[BANK0 ] unsigned char 
 13653 ;; Return value:  Size  Location     Type
 13654 ;;		None               void
 13655 ;; Registers used:
 13656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 0/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13662 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13666 ;;Total ram usage:        2 bytes
 13667 ;; Hardware stack levels used:    1
 13668 ;; Hardware stack levels required when called:   13
 13669 ;; This function calls:
 13670 ;;		_ringbuf_put
 13671 ;; This function is called by:
 13672 ;;		_I2C_LCD_clear
 13673 ;;		_I2C_LCD_cursor
 13674 ;;		_I2C_LCD_init
 13675 ;; This function uses a non-reentrant model
 13676 ;;
 13677                           
 13678                           	psect	text65
 13679  013B5C                     __ptext65:
 13680                           	opt stack 0
 13681  013B5C                     _I2C_LCD_command:
 13682                           	opt stack 15
 13683                           
 13684                           ;incstack = 0
 13685                           ;I2C_LCD_command@command stored from wreg
 13686  013B5C  0100               	movlb	0	; () banked
 13687  013B5E  6F70               	movwf	I2C_LCD_command@command& (0+255),b
 13688                           
 13689                           ;My_I2C_LCD.c: 19: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 13690  013B60  0ED4               	movlw	low _lcd_tx
 13691  013B62  0100               	movlb	0	; () banked
 13692  013B64  6F68               	movwf	ringbuf_put@rb& (0+255),b
 13693  013B66  0E00               	movlw	high _lcd_tx
 13694  013B68  0100               	movlb	0	; () banked
 13695  013B6A  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13696  013B6C  0E7C               	movlw	124
 13697  013B6E  0100               	movlb	0	; () banked
 13698  013B70  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 13699  013B72  EC83  F094         	call	_ringbuf_put	;wreg free
 13700                           
 13701                           ;My_I2C_LCD.c: 20: ringbuf_put(&lcd_tx, 0x80);
 13702  013B76  0ED4               	movlw	low _lcd_tx
 13703  013B78  0100               	movlb	0	; () banked
 13704  013B7A  6F68               	movwf	ringbuf_put@rb& (0+255),b
 13705  013B7C  0E00               	movlw	high _lcd_tx
 13706  013B7E  0100               	movlb	0	; () banked
 13707  013B80  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13708  013B82  0E80               	movlw	128
 13709  013B84  0100               	movlb	0	; () banked
 13710  013B86  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 13711  013B88  EC83  F094         	call	_ringbuf_put	;wreg free
 13712                           
 13713                           ;My_I2C_LCD.c: 21: ringbuf_put(&lcd_tx, command);
 13714  013B8C  0ED4               	movlw	low _lcd_tx
 13715  013B8E  0100               	movlb	0	; () banked
 13716  013B90  6F68               	movwf	ringbuf_put@rb& (0+255),b
 13717  013B92  0E00               	movlw	high _lcd_tx
 13718  013B94  0100               	movlb	0	; () banked
 13719  013B96  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13720  013B98  C070  F06A         	movff	I2C_LCD_command@command,ringbuf_put@asciicode
 13721  013B9C  EC83  F094         	call	_ringbuf_put	;wreg free
 13722                           
 13723                           ;My_I2C_LCD.c: 22: ringbuf_put(&lcd_tx, 0);
 13724  013BA0  0ED4               	movlw	low _lcd_tx
 13725  013BA2  0100               	movlb	0	; () banked
 13726  013BA4  6F68               	movwf	ringbuf_put@rb& (0+255),b
 13727  013BA6  0E00               	movlw	high _lcd_tx
 13728  013BA8  0100               	movlb	0	; () banked
 13729  013BAA  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13730  013BAC  0E00               	movlw	0
 13731  013BAE  0100               	movlb	0	; () banked
 13732  013BB0  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 13733  013BB2  EC83  F094         	call	_ringbuf_put	;wreg free
 13734                           
 13735                           ;My_I2C_LCD.c: 23: ringbuf_put(&lcd_tx, wait);
 13736  013BB6  0ED4               	movlw	low _lcd_tx
 13737  013BB8  0100               	movlb	0	; () banked
 13738  013BBA  6F68               	movwf	ringbuf_put@rb& (0+255),b
 13739  013BBC  0E00               	movlw	high _lcd_tx
 13740  013BBE  0100               	movlb	0	; () banked
 13741  013BC0  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13742  013BC2  C06F  F06A         	movff	I2C_LCD_command@wait,ringbuf_put@asciicode
 13743  013BC6  EC83  F094         	call	_ringbuf_put	;wreg free
 13744  013BCA  0012               	return		;funcret
 13745  013BCC                     __end_of_I2C_LCD_command:
 13746                           	opt stack 0
 13747                           tblptru	equ	0xFF8
 13748                           tblptrh	equ	0xFF7
 13749                           tblptrl	equ	0xFF6
 13750                           tablat	equ	0xFF5
 13751                           prodh	equ	0xFF4
 13752                           prodl	equ	0xFF3
 13753                           intcon	equ	0xFF2
 13754                           intcon2	equ	0xFF1
 13755                           postinc0	equ	0xFEE
 13756                           wreg	equ	0xFE8
 13757                           indf1	equ	0xFE7
 13758                           postinc1	equ	0xFE6
 13759                           postdec1	equ	0xFE5
 13760                           fsr1h	equ	0xFE2
 13761                           fsr1l	equ	0xFE1
 13762                           indf2	equ	0xFDF
 13763                           postinc2	equ	0xFDE
 13764                           postdec2	equ	0xFDD
 13765                           plusw2	equ	0xFDB
 13766                           fsr2h	equ	0xFDA
 13767                           fsr2l	equ	0xFD9
 13768                           status	equ	0xFD8
 13769                           
 13770 ;; *************** function _ringbuf_put *****************
 13771 ;; Defined at:
 13772 ;;		line 20 in file "../My_library/My_ringbuf.c"
 13773 ;; Parameters:    Size  Location     Type
 13774 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 13775 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 13776 ;;		 -> lcd_tx(8), 
 13777 ;;  asciicode       1   10[BANK0 ] unsigned char 
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;		None
 13780 ;; Return value:  Size  Location     Type
 13781 ;;		None               void
 13782 ;; Registers used:
 13783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13784 ;; Tracked objects:
 13785 ;;		On entry : 0/0
 13786 ;;		On exit  : 0/0
 13787 ;;		Unchanged: 0/0
 13788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13789 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13791 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13792 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13793 ;;Total ram usage:        7 bytes
 13794 ;; Hardware stack levels used:    1
 13795 ;; Hardware stack levels required when called:   12
 13796 ;; This function calls:
 13797 ;;		_ringbuf_num
 13798 ;; This function is called by:
 13799 ;;		_I2C_LCD_command
 13800 ;;		_I2C_LCD_put
 13801 ;;		_I2C_LCD_init
 13802 ;;		_ringbuf_put_num
 13803 ;;		_ringbuf_put_str
 13804 ;;		_terminal_task
 13805 ;;		_USB_task
 13806 ;;		_I2C_LCD_create_char
 13807 ;; This function uses a non-reentrant model
 13808 ;;
 13809                           
 13810                           	psect	text66
 13811  012906                     __ptext66:
 13812                           	opt stack 0
 13813  012906                     _ringbuf_put:
 13814                           	opt stack 13
 13815                           
 13816                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 13817                           
 13818                           ;incstack = 0
 13819  012906  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 13820  01290A  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 13821  01290E  EC2E  F090         	call	_ringbuf_num	;wreg free
 13822  012912  0100               	movlb	0	; () banked
 13823  012914  EE20 F002          	lfsr	2,2
 13824  012918  5168               	movf	ringbuf_put@rb& (0+255),w,b
 13825  01291A  26D9               	addwf	fsr2l,f,c
 13826  01291C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 13827  01291E  22DA               	addwfc	fsr2h,f,c
 13828  012920  50DE               	movf	postinc2,w,c
 13829  012922  0100               	movlb	0	; () banked
 13830  012924  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 13831  012926  50DE               	movf	postinc2,w,c
 13832  012928  0100               	movlb	0	; () banked
 13833  01292A  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 13834  01292C  B0D8               	btfsc	status,0,c
 13835  01292E  0012               	return	
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 13839  012930  0100               	movlb	0	; () banked
 13840  012932  EE20 F004          	lfsr	2,4
 13841  012936  5168               	movf	ringbuf_put@rb& (0+255),w,b
 13842  012938  26D9               	addwf	fsr2l,f,c
 13843  01293A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 13844  01293C  22DA               	addwfc	fsr2h,f,c
 13845  01293E  CFDE F06B          	movff	postinc2,??_ringbuf_put
 13846  012942  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 13847  012946  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 13848  01294A  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 13849  01294E  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 13850  012952  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 13851  012956  0100               	movlb	0	; () banked
 13852  012958  516B               	movf	??_ringbuf_put& (0+255),w,b
 13853  01295A  0100               	movlb	0	; () banked
 13854  01295C  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 13855  01295E  6ED9               	movwf	fsr2l,c
 13856  012960  0100               	movlb	0	; () banked
 13857  012962  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 13858  012964  0100               	movlb	0	; () banked
 13859  012966  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 13860  012968  6EDA               	movwf	fsr2h,c
 13861  01296A  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 13862                           
 13863                           ; BSR set to: 0
 13864                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 13865  01296E  0100               	movlb	0	; () banked
 13866  012970  EE20 F002          	lfsr	2,2
 13867  012974  5168               	movf	ringbuf_put@rb& (0+255),w,b
 13868  012976  26D9               	addwf	fsr2l,f,c
 13869  012978  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 13870  01297A  22DA               	addwfc	fsr2h,f,c
 13871  01297C  0100               	movlb	0	; () banked
 13872  01297E  EE10 F004          	lfsr	1,4
 13873  012982  5168               	movf	ringbuf_put@rb& (0+255),w,b
 13874  012984  26E1               	addwf	fsr1l,f,c
 13875  012986  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 13876  012988  22E2               	addwfc	fsr1h,f,c
 13877  01298A  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 13878  01298E  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 13879  012992  0E01               	movlw	1
 13880  012994  0100               	movlb	0	; () banked
 13881  012996  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 13882  012998  0E00               	movlw	0
 13883  01299A  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 13884  01299C  50DE               	movf	postinc2,w,c
 13885  01299E  0100               	movlb	0	; () banked
 13886  0129A0  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 13887  0129A2  50DE               	movf	postinc2,w,c
 13888  0129A4  0100               	movlb	0	; () banked
 13889  0129A6  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 13890  0129A8  B0D8               	btfsc	status,0,c
 13891  0129AA  D00B               	goto	l8278
 13892                           
 13893                           ; BSR set to: 0
 13894  0129AC  0100               	movlb	0	; () banked
 13895  0129AE  EE20 F004          	lfsr	2,4
 13896  0129B2  5168               	movf	ringbuf_put@rb& (0+255),w,b
 13897  0129B4  26D9               	addwf	fsr2l,f,c
 13898  0129B6  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 13899  0129B8  22DA               	addwfc	fsr2h,f,c
 13900  0129BA  2ADE               	incf	postinc2,f,c
 13901  0129BC  0E00               	movlw	0
 13902  0129BE  22DD               	addwfc	postdec2,f,c
 13903  0129C0  0012               	return	
 13904  0129C2                     l8278:
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;My_ringbuf.c: 24: else rb->head = 0;
 13908  0129C2  0100               	movlb	0	; () banked
 13909  0129C4  EE20 F004          	lfsr	2,4
 13910  0129C8  5168               	movf	ringbuf_put@rb& (0+255),w,b
 13911  0129CA  26D9               	addwf	fsr2l,f,c
 13912  0129CC  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 13913  0129CE  22DA               	addwfc	fsr2h,f,c
 13914  0129D0  0E00               	movlw	0
 13915  0129D2  6EDE               	movwf	postinc2,c
 13916  0129D4  0E00               	movlw	0
 13917  0129D6  6EDD               	movwf	postdec2,c
 13918                           
 13919                           ; BSR set to: 0
 13920  0129D8  0012               	return	
 13921  0129DA                     __end_of_ringbuf_put:
 13922                           	opt stack 0
 13923                           tblptru	equ	0xFF8
 13924                           tblptrh	equ	0xFF7
 13925                           tblptrl	equ	0xFF6
 13926                           tablat	equ	0xFF5
 13927                           prodh	equ	0xFF4
 13928                           prodl	equ	0xFF3
 13929                           intcon	equ	0xFF2
 13930                           intcon2	equ	0xFF1
 13931                           postinc0	equ	0xFEE
 13932                           wreg	equ	0xFE8
 13933                           indf1	equ	0xFE7
 13934                           postinc1	equ	0xFE6
 13935                           postdec1	equ	0xFE5
 13936                           fsr1h	equ	0xFE2
 13937                           fsr1l	equ	0xFE1
 13938                           indf2	equ	0xFDF
 13939                           postinc2	equ	0xFDE
 13940                           postdec2	equ	0xFDD
 13941                           plusw2	equ	0xFDB
 13942                           fsr2h	equ	0xFDA
 13943                           fsr2l	equ	0xFD9
 13944                           status	equ	0xFD8
 13945                           
 13946 ;; *************** function _ringbuf_num *****************
 13947 ;; Defined at:
 13948 ;;		line 12 in file "../My_library/My_ringbuf.c"
 13949 ;; Parameters:    Size  Location     Type
 13950 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 13951 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 13952 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 13953 ;; Auto vars:     Size  Location     Type
 13954 ;;		None
 13955 ;; Return value:  Size  Location     Type
 13956 ;;                  2    0[BANK0 ] unsigned int 
 13957 ;; Registers used:
 13958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13959 ;; Tracked objects:
 13960 ;;		On entry : 0/0
 13961 ;;		On exit  : 0/0
 13962 ;;		Unchanged: 0/0
 13963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13966 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13967 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13968 ;;Total ram usage:        8 bytes
 13969 ;; Hardware stack levels used:    1
 13970 ;; Hardware stack levels required when called:   11
 13971 ;; This function calls:
 13972 ;;		Nothing
 13973 ;; This function is called by:
 13974 ;;		_I2C_LCD_task
 13975 ;;		_ringbuf_put
 13976 ;;		_ringbuf_pop
 13977 ;;		_ringbuf_backspace
 13978 ;;		_terminal_task
 13979 ;;		_UART_task
 13980 ;;		_USB_task
 13981 ;; This function uses a non-reentrant model
 13982 ;;
 13983                           
 13984                           	psect	text67
 13985  01205C                     __ptext67:
 13986                           	opt stack 0
 13987  01205C                     _ringbuf_num:
 13988                           	opt stack 13
 13989                           
 13990                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 13991                           
 13992                           ; BSR set to: 0
 13993                           ;incstack = 0
 13994  01205C  0100               	movlb	0	; () banked
 13995  01205E  EE20 F006          	lfsr	2,6
 13996  012062  5160               	movf	ringbuf_num@rb& (0+255),w,b
 13997  012064  26D9               	addwf	fsr2l,f,c
 13998  012066  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 13999  012068  22DA               	addwfc	fsr2h,f,c
 14000  01206A  0100               	movlb	0	; () banked
 14001  01206C  EE10 F004          	lfsr	1,4
 14002  012070  5160               	movf	ringbuf_num@rb& (0+255),w,b
 14003  012072  26E1               	addwf	fsr1l,f,c
 14004  012074  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14005  012076  22E2               	addwfc	fsr1h,f,c
 14006  012078  50DE               	movf	postinc2,w,c
 14007  01207A  5CE6               	subwf	postinc1,w,c
 14008  01207C  50DE               	movf	postinc2,w,c
 14009  01207E  58E6               	subwfb	postinc1,w,c
 14010  012080  A0D8               	btfss	status,0,c
 14011  012082  D028               	goto	l8174
 14012                           
 14013                           ; BSR set to: 0
 14014                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 14015  012084  0100               	movlb	0	; () banked
 14016  012086  EE20 F004          	lfsr	2,4
 14017  01208A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 14018  01208C  26D9               	addwf	fsr2l,f,c
 14019  01208E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14020  012090  22DA               	addwfc	fsr2h,f,c
 14021  012092  CFDE F062          	movff	postinc2,??_ringbuf_num
 14022  012096  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 14023  01209A  0100               	movlb	0	; () banked
 14024  01209C  EE20 F006          	lfsr	2,6
 14025  0120A0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 14026  0120A2  26D9               	addwf	fsr2l,f,c
 14027  0120A4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14028  0120A6  22DA               	addwfc	fsr2h,f,c
 14029  0120A8  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 14030  0120AC  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 14031  0120B0  0100               	movlb	0	; () banked
 14032  0120B2  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 14033  0120B4  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 14034  0120B6  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 14035  0120B8  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 14036  0120BA  0100               	movlb	0	; () banked
 14037  0120BC  5162               	movf	??_ringbuf_num& (0+255),w,b
 14038  0120BE  0100               	movlb	0	; () banked
 14039  0120C0  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 14040  0120C2  0100               	movlb	0	; () banked
 14041  0120C4  6F60               	movwf	?_ringbuf_num& (0+255),b
 14042  0120C6  0100               	movlb	0	; () banked
 14043  0120C8  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 14044  0120CA  0100               	movlb	0	; () banked
 14045  0120CC  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 14046  0120CE  0100               	movlb	0	; () banked
 14047  0120D0  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 14048                           
 14049                           ; BSR set to: 0
 14050                           ;My_ringbuf.c: 15: } else {
 14051                           
 14052                           ; BSR set to: 0
 14053  0120D2  0012               	return	
 14054  0120D4                     l8174:
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 14058  0120D4  0100               	movlb	0	; () banked
 14059  0120D6  EE20 F004          	lfsr	2,4
 14060  0120DA  5160               	movf	ringbuf_num@rb& (0+255),w,b
 14061  0120DC  26D9               	addwf	fsr2l,f,c
 14062  0120DE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14063  0120E0  22DA               	addwfc	fsr2h,f,c
 14064  0120E2  CFDE F062          	movff	postinc2,??_ringbuf_num
 14065  0120E6  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 14066  0120EA  0100               	movlb	0	; () banked
 14067  0120EC  EE20 F002          	lfsr	2,2
 14068  0120F0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 14069  0120F2  26D9               	addwf	fsr2l,f,c
 14070  0120F4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14071  0120F6  22DA               	addwfc	fsr2h,f,c
 14072  0120F8  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 14073  0120FC  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 14074  012100  0100               	movlb	0	; () banked
 14075  012102  EE20 F006          	lfsr	2,6
 14076  012106  5160               	movf	ringbuf_num@rb& (0+255),w,b
 14077  012108  26D9               	addwf	fsr2l,f,c
 14078  01210A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 14079  01210C  22DA               	addwfc	fsr2h,f,c
 14080  01210E  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 14081  012112  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 14082  012116  0100               	movlb	0	; () banked
 14083  012118  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 14084  01211A  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 14085  01211C  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 14086  01211E  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 14087  012120  0100               	movlb	0	; () banked
 14088  012122  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 14089  012124  0100               	movlb	0	; () banked
 14090  012126  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 14091  012128  0100               	movlb	0	; () banked
 14092  01212A  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 14093  01212C  0100               	movlb	0	; () banked
 14094  01212E  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 14095  012130  0100               	movlb	0	; () banked
 14096  012132  5162               	movf	??_ringbuf_num& (0+255),w,b
 14097  012134  0100               	movlb	0	; () banked
 14098  012136  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 14099  012138  0100               	movlb	0	; () banked
 14100  01213A  6F60               	movwf	?_ringbuf_num& (0+255),b
 14101  01213C  0100               	movlb	0	; () banked
 14102  01213E  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 14103  012140  0100               	movlb	0	; () banked
 14104  012142  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 14105  012144  0100               	movlb	0	; () banked
 14106  012146  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 14107                           
 14108                           ; BSR set to: 0
 14109  012148  0012               	return	
 14110  01214A                     __end_of_ringbuf_num:
 14111                           	opt stack 0
 14112                           tblptru	equ	0xFF8
 14113                           tblptrh	equ	0xFF7
 14114                           tblptrl	equ	0xFF6
 14115                           tablat	equ	0xFF5
 14116                           prodh	equ	0xFF4
 14117                           prodl	equ	0xFF3
 14118                           intcon	equ	0xFF2
 14119                           intcon2	equ	0xFF1
 14120                           postinc0	equ	0xFEE
 14121                           wreg	equ	0xFE8
 14122                           indf1	equ	0xFE7
 14123                           postinc1	equ	0xFE6
 14124                           postdec1	equ	0xFE5
 14125                           fsr1h	equ	0xFE2
 14126                           fsr1l	equ	0xFE1
 14127                           indf2	equ	0xFDF
 14128                           postinc2	equ	0xFDE
 14129                           postdec2	equ	0xFDD
 14130                           plusw2	equ	0xFDB
 14131                           fsr2h	equ	0xFDA
 14132                           fsr2l	equ	0xFD9
 14133                           status	equ	0xFD8
 14134                           
 14135 ;; *************** function _ISR *****************
 14136 ;; Defined at:
 14137 ;;		line 39 in file "main.c"
 14138 ;; Parameters:    Size  Location     Type
 14139 ;;		None
 14140 ;; Auto vars:     Size  Location     Type
 14141 ;;		None
 14142 ;; Return value:  Size  Location     Type
 14143 ;;		None               void
 14144 ;; Registers used:
 14145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14146 ;; Tracked objects:
 14147 ;;		On entry : 0/0
 14148 ;;		On exit  : 0/0
 14149 ;;		Unchanged: 0/0
 14150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14153 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14155 ;;Total ram usage:       15 bytes
 14156 ;; Hardware stack levels used:    1
 14157 ;; Hardware stack levels required when called:   10
 14158 ;; This function calls:
 14159 ;;		_I2C_LCD_ISR
 14160 ;;		_UART_ISR
 14161 ;;		_USB_ISR
 14162 ;; This function is called by:
 14163 ;;		Interrupt level 2
 14164 ;; This function uses a non-reentrant model
 14165 ;;
 14166                           
 14167                           	psect	intcode
 14168  001008                     __pintcode:
 14169                           	opt stack 0
 14170  001008                     _ISR:
 14171                           	opt stack 11
 14172                           
 14173                           ; BSR set to: 0
 14174                           ;incstack = 0
 14175  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14176  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 14177  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 14178  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 14179  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 14180  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 14181  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 14182  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 14183  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 14184  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 14185  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 14186  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 14187  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 14188  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 14189  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 14190                           
 14191                           ;main.c: 40: USB_ISR();
 14192  001042  ECDA  F0A2         	call	_USB_ISR	;wreg free
 14193                           
 14194                           ;main.c: 41: UART_ISR();
 14195  001046  EC4B  F0A0         	call	_UART_ISR	;wreg free
 14196                           
 14197                           ;main.c: 42: I2C_LCD_ISR();
 14198  00104A  ECC0  F0A2         	call	_I2C_LCD_ISR	;wreg free
 14199                           
 14200                           ;main.c: 43: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 14201  00104E  B4F2               	btfsc	intcon,2,c	;volatile
 14202  001050  AAF2               	btfss	intcon,5,c	;volatile
 14203  001052  D001               	goto	i2l1432
 14204                           
 14205                           ;main.c: 44: INTCONbits.T0IF = 0;
 14206  001054  94F2               	bcf	intcon,2,c	;volatile
 14207  001056                     i2l1432:
 14208                           
 14209                           ;main.c: 45: }
 14210                           ;main.c: 46: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 14211  001056  B09E               	btfsc	3998,0,c	;volatile
 14212  001058  A09D               	btfss	3997,0,c	;volatile
 14213  00105A  D00E               	goto	i2l8026
 14214                           
 14215                           ;main.c: 47: PIR1bits.TMR1IF = 0;
 14216  00105C  909E               	bcf	3998,0,c	;volatile
 14217                           
 14218                           ;main.c: 48: TMR1H = 0xC0;
 14219  00105E  0EC0               	movlw	192
 14220  001060  6ECF               	movwf	4047,c	;volatile
 14221                           
 14222                           ;main.c: 49: LATAbits.LATA0 = !LATAbits.LATA0;
 14223  001062  B089               	btfsc	3977,0,c	;volatile
 14224  001064  D003               	goto	i2u755_40
 14225  001066  6A4C               	clrf	??_ISR& (0+255),c
 14226  001068  2A4C               	incf	??_ISR& (0+255),f,c
 14227  00106A  D001               	goto	i2u756_48
 14228  00106C                     i2u755_40:
 14229  00106C  6A4C               	clrf	??_ISR& (0+255),c
 14230  00106E                     i2u756_48:
 14231  00106E  5089               	movf	3977,w,c	;volatile
 14232  001070  184C               	xorwf	??_ISR,w,c
 14233  001072  0BFE               	andlw	-2
 14234  001074  184C               	xorwf	??_ISR,w,c
 14235  001076  6E89               	movwf	3977,c	;volatile
 14236  001078                     i2l8026:
 14237                           
 14238                           ;main.c: 50: }
 14239                           ;main.c: 51: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 14240  001078  B2A1               	btfsc	4001,1,c	;volatile
 14241  00107A  A2A0               	btfss	4000,1,c	;volatile
 14242  00107C  D001               	goto	i2l1435
 14243                           
 14244                           ;main.c: 52: PIR2bits.TMR3IF = 0;
 14245  00107E  92A1               	bcf	4001,1,c	;volatile
 14246  001080                     i2l1435:
 14247  001080  C05A  FFF5         	movff	??_ISR+14,tablat
 14248  001084  C059  FFF8         	movff	??_ISR+13,tblptru
 14249  001088  C058  FFF7         	movff	??_ISR+12,tblptrh
 14250  00108C  C057  FFF6         	movff	??_ISR+11,tblptrl
 14251  001090  C056  FFF4         	movff	??_ISR+10,prodh
 14252  001094  C055  FFF3         	movff	??_ISR+9,prodl
 14253  001098  C054  FFDA         	movff	??_ISR+8,fsr2h
 14254  00109C  C053  FFD9         	movff	??_ISR+7,fsr2l
 14255  0010A0  C052  FFE2         	movff	??_ISR+6,fsr1h
 14256  0010A4  C051  FFE1         	movff	??_ISR+5,fsr1l
 14257  0010A8  C050  FFEA         	movff	??_ISR+4,fsr0h
 14258  0010AC  C04F  FFE9         	movff	??_ISR+3,fsr0l
 14259  0010B0  C04E  FFFB         	movff	??_ISR+2,pclatu
 14260  0010B4  C04D  FFFA         	movff	??_ISR+1,pclath
 14261  0010B8  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14262  0010BA  0011               	retfie		f
 14263  0010BC                     __end_of_ISR:
 14264                           	opt stack 0
 14265                           pclatu	equ	0xFFB
 14266                           pclath	equ	0xFFA
 14267                           tblptru	equ	0xFF8
 14268                           tblptrh	equ	0xFF7
 14269                           tblptrl	equ	0xFF6
 14270                           tablat	equ	0xFF5
 14271                           prodh	equ	0xFF4
 14272                           prodl	equ	0xFF3
 14273                           intcon	equ	0xFF2
 14274                           intcon2	equ	0xFF1
 14275                           postinc0	equ	0xFEE
 14276                           fsr0h	equ	0xFEA
 14277                           fsr0l	equ	0xFE9
 14278                           wreg	equ	0xFE8
 14279                           indf1	equ	0xFE7
 14280                           postinc1	equ	0xFE6
 14281                           postdec1	equ	0xFE5
 14282                           fsr1h	equ	0xFE2
 14283                           fsr1l	equ	0xFE1
 14284                           indf2	equ	0xFDF
 14285                           postinc2	equ	0xFDE
 14286                           postdec2	equ	0xFDD
 14287                           plusw2	equ	0xFDB
 14288                           fsr2h	equ	0xFDA
 14289                           fsr2l	equ	0xFD9
 14290                           status	equ	0xFD8
 14291                           
 14292 ;; *************** function _USB_ISR *****************
 14293 ;; Defined at:
 14294 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 14295 ;; Parameters:    Size  Location     Type
 14296 ;;		None
 14297 ;; Auto vars:     Size  Location     Type
 14298 ;;		None
 14299 ;; Return value:  Size  Location     Type
 14300 ;;		None               void
 14301 ;; Registers used:
 14302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14303 ;; Tracked objects:
 14304 ;;		On entry : 0/0
 14305 ;;		On exit  : 0/0
 14306 ;;		Unchanged: 0/0
 14307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14312 ;;Total ram usage:        0 bytes
 14313 ;; Hardware stack levels used:    1
 14314 ;; Hardware stack levels required when called:    9
 14315 ;; This function calls:
 14316 ;;		_USBDeviceTasks
 14317 ;; This function is called by:
 14318 ;;		_ISR
 14319 ;; This function uses a non-reentrant model
 14320 ;;
 14321                           
 14322                           	psect	text69
 14323  0145B4                     __ptext69:
 14324                           	opt stack 0
 14325  0145B4                     _USB_ISR:
 14326                           	opt stack 11
 14327                           
 14328                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 14329                           
 14330                           ;incstack = 0
 14331  0145B4  EC57  F08C         	call	_USBDeviceTasks	;wreg free
 14332  0145B8  0012               	return		;funcret
 14333  0145BA                     __end_of_USB_ISR:
 14334                           	opt stack 0
 14335                           pclatu	equ	0xFFB
 14336                           pclath	equ	0xFFA
 14337                           tblptru	equ	0xFF8
 14338                           tblptrh	equ	0xFF7
 14339                           tblptrl	equ	0xFF6
 14340                           tablat	equ	0xFF5
 14341                           prodh	equ	0xFF4
 14342                           prodl	equ	0xFF3
 14343                           intcon	equ	0xFF2
 14344                           intcon2	equ	0xFF1
 14345                           postinc0	equ	0xFEE
 14346                           fsr0h	equ	0xFEA
 14347                           fsr0l	equ	0xFE9
 14348                           wreg	equ	0xFE8
 14349                           indf1	equ	0xFE7
 14350                           postinc1	equ	0xFE6
 14351                           postdec1	equ	0xFE5
 14352                           fsr1h	equ	0xFE2
 14353                           fsr1l	equ	0xFE1
 14354                           indf2	equ	0xFDF
 14355                           postinc2	equ	0xFDE
 14356                           postdec2	equ	0xFDD
 14357                           plusw2	equ	0xFDB
 14358                           fsr2h	equ	0xFDA
 14359                           fsr2l	equ	0xFD9
 14360                           status	equ	0xFD8
 14361                           
 14362 ;; *************** function _USBDeviceTasks *****************
 14363 ;; Defined at:
 14364 ;;		line 489 in file "../My_library/usb/usb_device.c"
 14365 ;; Parameters:    Size  Location     Type
 14366 ;;		None
 14367 ;; Auto vars:     Size  Location     Type
 14368 ;;  i               1   29[COMRAM] unsigned char 
 14369 ;; Return value:  Size  Location     Type
 14370 ;;		None               void
 14371 ;; Registers used:
 14372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14373 ;; Tracked objects:
 14374 ;;		On entry : 0/0
 14375 ;;		On exit  : 0/0
 14376 ;;		Unchanged: 0/0
 14377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14382 ;;Total ram usage:        1 bytes
 14383 ;; Hardware stack levels used:    1
 14384 ;; Hardware stack levels required when called:    8
 14385 ;; This function calls:
 14386 ;;		_USBCtrlEPAllowStatusStage
 14387 ;;		_USBCtrlEPService
 14388 ;;		_USBStallHandler
 14389 ;;		_USBSuspend
 14390 ;;		_USBWakeFromSuspend
 14391 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14392 ;;		i2_USBDeviceInit
 14393 ;; This function is called by:
 14394 ;;		_USB_ISR
 14395 ;; This function uses a non-reentrant model
 14396 ;;
 14397                           
 14398                           	psect	text70
 14399  0118AE                     __ptext70:
 14400                           	opt stack 0
 14401  0118AE                     _USBDeviceTasks:
 14402                           	opt stack 11
 14403                           
 14404                           ;usb_device.c: 491: uint8_t i;
 14405                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 14406                           
 14407                           ;incstack = 0
 14408  0118AE  0422               	decf	_USBDeviceState,w,c	;volatile
 14409  0118B0  B4D8               	btfsc	status,2,c
 14410                           
 14411                           ;usb_device.c: 603: {
 14412                           ;usb_device.c: 613: if(!UCONbits.SE0)
 14413  0118B2  BA65               	btfsc	3941,5,c	;volatile
 14414  0118B4  D008               	goto	i2l6962
 14415                           
 14416                           ;usb_device.c: 614: {
 14417                           ;usb_device.c: 615: {UIR = 0;};
 14418  0118B6  0E00               	movlw	0
 14419  0118B8  6E62               	movwf	3938,c	;volatile
 14420                           
 14421                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 14422  0118BA  010F               	movlb	15	; () banked
 14423  0118BC  8136               	bsf	54,0,b	;volatile
 14424                           
 14425                           ; BSR set to: 15
 14426                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 14427  0118BE  010F               	movlb	15	; () banked
 14428  0118C0  8936               	bsf	54,4,b	;volatile
 14429                           
 14430                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 14431  0118C2  0E02               	movlw	2
 14432  0118C4  6E22               	movwf	_USBDeviceState,c	;volatile
 14433  0118C6                     i2l6962:
 14434                           
 14435                           ;usb_device.c: 622: }
 14436                           ;usb_device.c: 623: }
 14437                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 14438  0118C6  A462               	btfss	3938,2,c	;volatile
 14439  0118C8  D006               	goto	i2l6970
 14440  0118CA  010F               	movlb	15	; () banked
 14441  0118CC  A536               	btfss	54,2,b	;volatile
 14442  0118CE  D003               	goto	i2l6970
 14443                           
 14444                           ; BSR set to: 15
 14445                           ;usb_device.c: 640: {
 14446                           ;usb_device.c: 641: (UIR &= 0xFB);
 14447  0118D0  9462               	bcf	3938,2,c	;volatile
 14448                           
 14449                           ; BSR set to: 15
 14450                           ;usb_device.c: 645: USBWakeFromSuspend();
 14451  0118D2  EC72  F0A1         	call	_USBWakeFromSuspend	;wreg free
 14452  0118D6                     i2l6970:
 14453                           
 14454                           ;usb_device.c: 647: }
 14455                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 14456  0118D6  A265               	btfss	3941,1,c	;volatile
 14457  0118D8  D002               	goto	i2l158
 14458                           
 14459                           ;usb_device.c: 653: {
 14460                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 14461  0118DA  98A1               	bcf	4001,4,c	;volatile
 14462                           
 14463                           ;usb_device.c: 655: return;
 14464  0118DC  0012               	return	
 14465  0118DE                     i2l158:
 14466                           
 14467                           ;usb_device.c: 656: }
 14468                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 14469  0118DE  A062               	btfss	3938,0,c	;volatile
 14470  0118E0  D009               	goto	i2l6984
 14471  0118E2  010F               	movlb	15	; () banked
 14472  0118E4  A136               	btfss	54,0,b	;volatile
 14473  0118E6  D006               	goto	i2l6984
 14474                           
 14475                           ; BSR set to: 15
 14476                           ;usb_device.c: 669: {
 14477                           ;usb_device.c: 670: USBDeviceInit();
 14478  0118E8  ECFC  F08C         	call	i2_USBDeviceInit	;wreg free
 14479                           
 14480                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 14481  0118EC  88A0               	bsf	4000,4,c	;volatile
 14482                           
 14483                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 14484  0118EE  0E04               	movlw	4
 14485  0118F0  6E22               	movwf	_USBDeviceState,c	;volatile
 14486                           
 14487                           ;usb_device.c: 686: (UIR &= 0xFE);
 14488  0118F2  9062               	bcf	3938,0,c	;volatile
 14489  0118F4                     i2l6984:
 14490                           
 14491                           ;usb_device.c: 687: }
 14492                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 14493  0118F4  A862               	btfss	3938,4,c	;volatile
 14494  0118F6  D006               	goto	i2l6992
 14495  0118F8  010F               	movlb	15	; () banked
 14496  0118FA  A936               	btfss	54,4,b	;volatile
 14497  0118FC  D003               	goto	i2l6992
 14498                           
 14499                           ; BSR set to: 15
 14500                           ;usb_device.c: 693: {
 14501                           ;usb_device.c: 698: USBSuspend();
 14502  0118FE  ECCE  F0A1         	call	_USBSuspend	;wreg free
 14503                           
 14504                           ;usb_device.c: 701: (UIR &= 0xEF);
 14505  011902  9862               	bcf	3938,4,c	;volatile
 14506  011904                     i2l6992:
 14507                           
 14508                           ;usb_device.c: 702: }
 14509                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 14510  011904  AC62               	btfss	3938,6,c	;volatile
 14511  011906  D019               	goto	i2l7008
 14512                           
 14513                           ;usb_device.c: 705: {
 14514                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 14515  011908  010F               	movlb	15	; () banked
 14516  01190A  AD36               	btfss	54,6,b	;volatile
 14517  01190C  D00E               	goto	i2l6998
 14518                           
 14519                           ; BSR set to: 15
 14520                           ;usb_device.c: 707: {
 14521                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 14522  01190E  0E00               	movlw	0
 14523  011910  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14524  011912  0E73               	movlw	115
 14525  011914  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14526  011916  0E00               	movlw	0
 14527  011918  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14528  01191A  0E00               	movlw	0
 14529  01191C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14530  01191E  0E00               	movlw	0
 14531  011920  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14532  011922  0E01               	movlw	1
 14533  011924  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14534  011926  EC8B  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14535  01192A                     i2l6998:
 14536                           
 14537                           ;usb_device.c: 709: }
 14538                           ;usb_device.c: 710: (UIR &= 0xBF);
 14539  01192A  9C62               	bcf	3938,6,c	;volatile
 14540                           
 14541                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 14542  01192C  5025               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14543  01192E  A4D8               	btfss	status,2,c
 14544                           
 14545                           ;usb_device.c: 736: {
 14546                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 14547  011930  0625               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 14548                           
 14549                           ;usb_device.c: 738: }
 14550                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 14551  011932  5025               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14552  011934  B4D8               	btfsc	status,2,c
 14553                           
 14554                           ;usb_device.c: 745: {
 14555                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 14556  011936  EC8C  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14557  01193A                     i2l7008:
 14558                           
 14559                           ;usb_device.c: 747: }
 14560                           ;usb_device.c: 749: }
 14561                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 14562  01193A  AA62               	btfss	3938,5,c	;volatile
 14563  01193C  D004               	goto	i2l7014
 14564  01193E  010F               	movlb	15	; () banked
 14565  011940  BB36               	btfsc	54,5,b	;volatile
 14566                           
 14567                           ; BSR set to: 15
 14568                           ;usb_device.c: 752: {
 14569                           ;usb_device.c: 753: USBStallHandler();
 14570  011942  EC70  F0A0         	call	_USBStallHandler	;wreg free
 14571  011946                     i2l7014:
 14572                           
 14573                           ;usb_device.c: 754: }
 14574                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 14575  011946  A262               	btfss	3938,1,c	;volatile
 14576  011948  D012               	goto	i2l7022
 14577  01194A  010F               	movlb	15	; () banked
 14578  01194C  A336               	btfss	54,1,b	;volatile
 14579  01194E  D00F               	goto	i2l7022
 14580                           
 14581                           ; BSR set to: 15
 14582                           ;usb_device.c: 757: {
 14583                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 14584  011950  0E7F               	movlw	127
 14585  011952  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14586  011954  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14587  011956  0E00               	movlw	0
 14588  011958  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14589  01195A  0E00               	movlw	0
 14590  01195C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14591  01195E  0E00               	movlw	0
 14592  011960  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14593  011962  0E01               	movlw	1
 14594  011964  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14595  011966  EC8B  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14596                           
 14597                           ;usb_device.c: 759: {UEIR = 0;};
 14598  01196A  0E00               	movlw	0
 14599  01196C  6E63               	movwf	3939,c	;volatile
 14600  01196E                     i2l7022:
 14601                           
 14602                           ;usb_device.c: 767: }
 14603                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 14604  01196E  0E04               	movlw	4
 14605  011970  6022               	cpfslt	_USBDeviceState,c	;volatile
 14606  011972  D002               	goto	i2l168
 14607                           
 14608                           ;usb_device.c: 775: {
 14609                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 14610  011974  98A1               	bcf	4001,4,c	;volatile
 14611                           
 14612                           ;usb_device.c: 777: return;
 14613  011976  0012               	return	
 14614  011978                     i2l168:
 14615                           
 14616                           ;usb_device.c: 778: }
 14617                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 14618  011978  010F               	movlb	15	; () banked
 14619  01197A  A736               	btfss	54,3,b	;volatile
 14620  01197C  D03B               	goto	i2l169
 14621                           
 14622                           ; BSR set to: 15
 14623                           ;usb_device.c: 784: {
 14624                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 14625  01197E  0E00               	movlw	0
 14626  011980  6E4B               	movwf	USBDeviceTasks@i,c
 14627  011982                     i2l7028:
 14628                           
 14629                           ; BSR set to: 15
 14630  011982  0E03               	movlw	3
 14631  011984  644B               	cpfsgt	USBDeviceTasks@i,c
 14632  011986  D001               	goto	i2l170
 14633  011988  D035               	goto	i2l169
 14634  01198A                     i2l170:
 14635                           
 14636                           ;usb_device.c: 786: {
 14637                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 14638  01198A  A662               	btfss	3938,3,c	;volatile
 14639  01198C  D033               	goto	i2l169
 14640                           
 14641                           ;usb_device.c: 788: {
 14642                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 14643  01198E  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 14644                           
 14645                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 14646  011992  302D               	rrcf	_USTATcopy,w,c	;volatile
 14647  011994  32E8               	rrcf	wreg,f,c
 14648  011996  32E8               	rrcf	wreg,f,c
 14649  011998  0B0F               	andlw	15
 14650  01199A  6E29               	movwf	_endpoint_number,c	;volatile
 14651                           
 14652                           ;usb_device.c: 793: (UIR &= 0xF7);
 14653  01199C  9662               	bcf	3938,3,c	;volatile
 14654                           
 14655                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 14656  01199E  B42D               	btfsc	_USTATcopy,2,c	;volatile
 14657  0119A0  D00A               	goto	i2l7042
 14658                           
 14659                           ;usb_device.c: 799: {
 14660                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 14661  0119A2  5029               	movf	_endpoint_number,w,c	;volatile
 14662  0119A4  0D01               	mullw	1
 14663  0119A6  0E18               	movlw	low _ep_data_out
 14664  0119A8  24F3               	addwf	prodl,w,c
 14665  0119AA  6ED9               	movwf	fsr2l,c
 14666  0119AC  0E01               	movlw	high _ep_data_out
 14667  0119AE  20F4               	addwfc	prodh,w,c
 14668  0119B0  6EDA               	movwf	fsr2h,c
 14669  0119B2  0101               	movlb	1	; () banked
 14670  0119B4  D008               	goto	L8
 14671  0119B6                     i2l7042:
 14672                           
 14673                           ;usb_device.c: 802: else
 14674                           ;usb_device.c: 803: {
 14675                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 14676  0119B6  5029               	movf	_endpoint_number,w,c	;volatile
 14677  0119B8  0D01               	mullw	1
 14678  0119BA  0E16               	movlw	low _ep_data_in
 14679  0119BC  24F3               	addwf	prodl,w,c
 14680  0119BE  6ED9               	movwf	fsr2l,c
 14681  0119C0  0E00               	movlw	high _ep_data_in
 14682  0119C2  20F4               	addwfc	prodh,w,c
 14683  0119C4  6EDA               	movwf	fsr2h,c
 14684  0119C6                     L8:
 14685  0119C6  70DF               	btg	indf2,0,c
 14686                           
 14687                           ;usb_device.c: 805: }
 14688                           ;usb_device.c: 810: if(endpoint_number == 0)
 14689  0119C8  5029               	movf	_endpoint_number,w,c	;volatile
 14690  0119CA  A4D8               	btfss	status,2,c
 14691  0119CC  D003               	goto	i2l7048
 14692                           
 14693                           ;usb_device.c: 811: {
 14694                           ;usb_device.c: 812: USBCtrlEPService();
 14695  0119CE  ECBF  F095         	call	_USBCtrlEPService	;wreg free
 14696                           
 14697                           ;usb_device.c: 813: }
 14698  0119D2  D00E               	goto	i2l7050
 14699  0119D4                     i2l7048:
 14700                           
 14701                           ;usb_device.c: 814: else
 14702                           ;usb_device.c: 815: {
 14703                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 14704  0119D4  0E00               	movlw	0
 14705  0119D6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14706  0119D8  0E72               	movlw	114
 14707  0119DA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14708  0119DC  0E2D               	movlw	low _USTATcopy
 14709  0119DE  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14710  0119E0  0E00               	movlw	high _USTATcopy
 14711  0119E2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14712  0119E4  0E00               	movlw	0
 14713  0119E6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14714  0119E8  0E00               	movlw	0
 14715  0119EA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14716  0119EC  EC8B  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14717  0119F0                     i2l7050:
 14718  0119F0  2A4B               	incf	USBDeviceTasks@i,f,c
 14719  0119F2  D7C7               	goto	i2l7028
 14720  0119F4                     i2l169:
 14721                           
 14722                           ;usb_device.c: 822: }
 14723                           ;usb_device.c: 823: }
 14724                           ;usb_device.c: 824: }
 14725                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 14726  0119F4  98A1               	bcf	4001,4,c	;volatile
 14727  0119F6  0012               	return		;funcret
 14728  0119F8                     __end_of_USBDeviceTasks:
 14729                           	opt stack 0
 14730                           pclatu	equ	0xFFB
 14731                           pclath	equ	0xFFA
 14732                           tblptru	equ	0xFF8
 14733                           tblptrh	equ	0xFF7
 14734                           tblptrl	equ	0xFF6
 14735                           tablat	equ	0xFF5
 14736                           prodh	equ	0xFF4
 14737                           prodl	equ	0xFF3
 14738                           intcon	equ	0xFF2
 14739                           intcon2	equ	0xFF1
 14740                           postinc0	equ	0xFEE
 14741                           fsr0h	equ	0xFEA
 14742                           fsr0l	equ	0xFE9
 14743                           wreg	equ	0xFE8
 14744                           indf1	equ	0xFE7
 14745                           postinc1	equ	0xFE6
 14746                           postdec1	equ	0xFE5
 14747                           fsr1h	equ	0xFE2
 14748                           fsr1l	equ	0xFE1
 14749                           indf2	equ	0xFDF
 14750                           postinc2	equ	0xFDE
 14751                           postdec2	equ	0xFDD
 14752                           plusw2	equ	0xFDB
 14753                           fsr2h	equ	0xFDA
 14754                           fsr2l	equ	0xFD9
 14755                           status	equ	0xFD8
 14756                           
 14757 ;; *************** function i2_USBDeviceInit *****************
 14758 ;; Defined at:
 14759 ;;		line 298 in file "../My_library/usb/usb_device.c"
 14760 ;; Parameters:    Size  Location     Type
 14761 ;;		None
 14762 ;; Auto vars:     Size  Location     Type
 14763 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 14764 ;; Return value:  Size  Location     Type
 14765 ;;		None               void
 14766 ;; Registers used:
 14767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14768 ;; Tracked objects:
 14769 ;;		On entry : 0/0
 14770 ;;		On exit  : 0/0
 14771 ;;		Unchanged: 0/0
 14772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14777 ;;Total ram usage:        1 bytes
 14778 ;; Hardware stack levels used:    1
 14779 ;; Hardware stack levels required when called:    1
 14780 ;; This function calls:
 14781 ;;		i2_memset
 14782 ;; This function is called by:
 14783 ;;		_USBDeviceTasks
 14784 ;; This function uses a non-reentrant model
 14785 ;;
 14786                           
 14787                           	psect	text71
 14788  0119F8                     __ptext71:
 14789                           	opt stack 0
 14790  0119F8                     i2_USBDeviceInit:
 14791                           	opt stack 17
 14792                           
 14793                           ;usb_device.c: 300: uint8_t i;
 14794                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 14795                           
 14796                           ;incstack = 0
 14797  0119F8  98A0               	bcf	4000,4,c	;volatile
 14798                           
 14799                           ;usb_device.c: 305: {UEIR = 0;};
 14800  0119FA  0E00               	movlw	0
 14801  0119FC  6E63               	movwf	3939,c	;volatile
 14802                           
 14803                           ;usb_device.c: 308: {UIR = 0;};
 14804  0119FE  0E00               	movlw	0
 14805  011A00  6E62               	movwf	3938,c	;volatile
 14806                           
 14807                           ;usb_device.c: 311: UEP0 = 0;
 14808  011A02  0E00               	movlw	0
 14809  011A04  010F               	movlb	15	; () banked
 14810  011A06  6F26               	movwf	38,b	;volatile
 14811                           
 14812                           ; BSR set to: 15
 14813                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 14814  011A08  0E27               	movlw	39
 14815  011A0A  6E2E               	movwf	i2memset@p1,c
 14816  011A0C  0E0F               	movlw	15
 14817  011A0E  6E2F               	movwf	i2memset@p1+1,c
 14818  011A10  0E00               	movlw	0
 14819  011A12  6E31               	movwf	i2memset@c+1,c
 14820  011A14  0E00               	movlw	0
 14821  011A16  6E30               	movwf	i2memset@c,c
 14822  011A18  0E00               	movlw	0
 14823  011A1A  6E33               	movwf	i2memset@n+1,c
 14824  011A1C  0E02               	movlw	2
 14825  011A1E  6E32               	movwf	i2memset@n,c
 14826  011A20  ECE4  F0A1         	call	i2_memset	;wreg free
 14827                           
 14828                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14829  011A24  0E16               	movlw	22
 14830  011A26  010F               	movlb	15	; () banked
 14831  011A28  6F39               	movwf	57,b	;volatile
 14832                           
 14833                           ; BSR set to: 15
 14834  011A2A  0E9F               	movlw	159
 14835  011A2C  010F               	movlb	15	; () banked
 14836  011A2E  6F37               	movwf	55,b	;volatile
 14837                           
 14838                           ; BSR set to: 15
 14839  011A30  0E7B               	movlw	123
 14840  011A32  010F               	movlb	15	; () banked
 14841  011A34  6F36               	movwf	54,b	;volatile
 14842                           
 14843                           ; BSR set to: 15
 14844                           ;usb_device.c: 318: ;
 14845                           ;usb_device.c: 321: ;
 14846                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14847  011A36  0E00               	movlw	0
 14848  011A38  6E36               	movwf	i2USBDeviceInit@i,c
 14849  011A3A                     i2l6886:
 14850                           
 14851                           ; BSR set to: 15
 14852  011A3A  0E0B               	movlw	11
 14853  011A3C  6436               	cpfsgt	i2USBDeviceInit@i,c
 14854  011A3E  D001               	goto	i2l6890
 14855  011A40  D00E               	goto	i2l146
 14856  011A42                     i2l6890:
 14857                           
 14858                           ;usb_device.c: 325: {
 14859                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 14860  011A42  5036               	movf	i2USBDeviceInit@i,w,c
 14861  011A44  0D04               	mullw	4
 14862  011A46  0E00               	movlw	0
 14863  011A48  24F3               	addwf	prodl,w,c
 14864  011A4A  6ED9               	movwf	fsr2l,c
 14865  011A4C  0E0D               	movlw	13
 14866  011A4E  20F4               	addwfc	prodh,w,c
 14867  011A50  6EDA               	movwf	fsr2h,c
 14868  011A52  6ADE               	clrf	postinc2,c
 14869  011A54  6ADE               	clrf	postinc2,c
 14870  011A56  6ADE               	clrf	postinc2,c
 14871  011A58  6ADD               	clrf	postdec2,c
 14872  011A5A  2A36               	incf	i2USBDeviceInit@i,f,c
 14873  011A5C  D7EE               	goto	i2l6886
 14874  011A5E                     i2l146:
 14875                           
 14876                           ;usb_device.c: 327: }
 14877                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 14878  011A5E  8C65               	bsf	3941,6,c	;volatile
 14879                           
 14880                           ;usb_device.c: 333: UADDR = 0x00;
 14881  011A60  0E00               	movlw	0
 14882  011A62  010F               	movlb	15	; () banked
 14883  011A64  6F38               	movwf	56,b	;volatile
 14884                           
 14885                           ; BSR set to: 15
 14886                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 14887  011A66  9865               	bcf	3941,4,c	;volatile
 14888                           
 14889                           ; BSR set to: 15
 14890                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 14891  011A68  9C65               	bcf	3941,6,c	;volatile
 14892                           
 14893                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 14894  011A6A  D009               	goto	i2l6910
 14895  011A6C                     i2l6902:
 14896                           
 14897                           ;usb_device.c: 343: {
 14898                           ;usb_device.c: 344: (UIR &= 0xF7);
 14899  011A6C  9662               	bcf	3938,3,c	;volatile
 14900                           
 14901                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 14902  011A6E  0E00               	movlw	0
 14903  011A70  6E0D               	movwf	_inPipes+3,c	;volatile
 14904                           
 14905                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 14906  011A72  0E00               	movlw	0
 14907  011A74  6E04               	movwf	_outPipes+3,c	;volatile
 14908                           
 14909                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 14910  011A76  0E00               	movlw	0
 14911  011A78  6E06               	movwf	_outPipes+5,c	;volatile
 14912  011A7A  0E00               	movlw	0
 14913  011A7C  6E05               	movwf	_outPipes+4,c	;volatile
 14914  011A7E                     i2l6910:
 14915  011A7E  B662               	btfsc	3938,3,c	;volatile
 14916  011A80  D7F5               	goto	i2l6902
 14917                           
 14918                           ;usb_device.c: 349: }
 14919                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 14920  011A82  0E01               	movlw	1
 14921  011A84  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14922                           
 14923                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 14924  011A86  0E01               	movlw	1
 14925  011A88  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14926                           
 14927                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 14928  011A8A  0E00               	movlw	0
 14929  011A8C  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14930                           
 14931                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 14932  011A8E  0E00               	movlw	0
 14933  011A90  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14934                           
 14935                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 14936  011A92  0E00               	movlw	0
 14937  011A94  0101               	movlb	1	; () banked
 14938  011A96  6F2F               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14939                           
 14940                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 14941  011A98  0E00               	movlw	0
 14942  011A9A  6E36               	movwf	i2USBDeviceInit@i,c
 14943  011A9C                     i2l6914:
 14944                           
 14945                           ; BSR set to: 1
 14946  011A9C  0E02               	movlw	2
 14947  011A9E  6436               	cpfsgt	i2USBDeviceInit@i,c
 14948  011AA0  D001               	goto	i2l6918
 14949  011AA2  D02E               	goto	i2l6924
 14950  011AA4                     i2l6918:
 14951                           
 14952                           ;usb_device.c: 363: {
 14953                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 14954  011AA4  5036               	movf	i2USBDeviceInit@i,w,c
 14955  011AA6  0D02               	mullw	2
 14956  011AA8  0E10               	movlw	low _pBDTEntryIn
 14957  011AAA  24F3               	addwf	prodl,w,c
 14958  011AAC  6ED9               	movwf	fsr2l,c
 14959  011AAE  0E00               	movlw	high _pBDTEntryIn
 14960  011AB0  20F4               	addwfc	prodh,w,c
 14961  011AB2  6EDA               	movwf	fsr2h,c
 14962  011AB4  0E00               	movlw	0
 14963  011AB6  6EDE               	movwf	postinc2,c
 14964  011AB8  0E00               	movlw	0
 14965  011ABA  6EDD               	movwf	postdec2,c
 14966                           
 14967                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 14968  011ABC  5036               	movf	i2USBDeviceInit@i,w,c
 14969  011ABE  0D02               	mullw	2
 14970  011AC0  0E0A               	movlw	low _pBDTEntryOut
 14971  011AC2  24F3               	addwf	prodl,w,c
 14972  011AC4  6ED9               	movwf	fsr2l,c
 14973  011AC6  0E01               	movlw	high _pBDTEntryOut
 14974  011AC8  20F4               	addwfc	prodh,w,c
 14975  011ACA  6EDA               	movwf	fsr2h,c
 14976  011ACC  0E00               	movlw	0
 14977  011ACE  6EDE               	movwf	postinc2,c
 14978  011AD0  0E00               	movlw	0
 14979  011AD2  6EDD               	movwf	postdec2,c
 14980                           
 14981                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 14982  011AD4  5036               	movf	i2USBDeviceInit@i,w,c
 14983  011AD6  0D01               	mullw	1
 14984  011AD8  0E16               	movlw	low _ep_data_in
 14985  011ADA  24F3               	addwf	prodl,w,c
 14986  011ADC  6ED9               	movwf	fsr2l,c
 14987  011ADE  0E00               	movlw	high _ep_data_in
 14988  011AE0  20F4               	addwfc	prodh,w,c
 14989  011AE2  6EDA               	movwf	fsr2h,c
 14990  011AE4  0E00               	movlw	0
 14991  011AE6  6EDF               	movwf	indf2,c
 14992                           
 14993                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 14994  011AE8  5036               	movf	i2USBDeviceInit@i,w,c
 14995  011AEA  0D01               	mullw	1
 14996  011AEC  0E18               	movlw	low _ep_data_out
 14997  011AEE  24F3               	addwf	prodl,w,c
 14998  011AF0  6ED9               	movwf	fsr2l,c
 14999  011AF2  0E01               	movlw	high _ep_data_out
 15000  011AF4  20F4               	addwfc	prodh,w,c
 15001  011AF6  6EDA               	movwf	fsr2h,c
 15002  011AF8  0E00               	movlw	0
 15003  011AFA  6EDF               	movwf	indf2,c
 15004  011AFC  2A36               	incf	i2USBDeviceInit@i,f,c
 15005  011AFE  D7CE               	goto	i2l6914
 15006  011B00                     i2l6924:
 15007                           
 15008                           ;usb_device.c: 368: }
 15009                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15010  011B00  0E08               	movlw	8
 15011  011B02  6E10               	movwf	_pBDTEntryIn,c
 15012  011B04  0E0D               	movlw	13
 15013  011B06  6E11               	movwf	_pBDTEntryIn+1,c
 15014                           
 15015                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 15016  011B08  0E16               	movlw	22
 15017  011B0A  010F               	movlb	15	; () banked
 15018  011B0C  6F26               	movwf	38,b	;volatile
 15019                           
 15020                           ; BSR set to: 15
 15021                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15022  011B0E  0E0D               	movlw	13
 15023  011B10  010D               	movlb	13	; () banked
 15024  011B12  6F03               	movwf	3,b	;volatile
 15025  011B14  0E30               	movlw	48
 15026  011B16  6F02               	movwf	2,b	;volatile
 15027                           
 15028                           ; BSR set to: 13
 15029                           ;usb_device.c: 376: BDT[0].CNT = 8;
 15030  011B18  0E08               	movlw	8
 15031  011B1A  010D               	movlb	13	; () banked
 15032  011B1C  6F01               	movwf	1,b	;volatile
 15033                           
 15034                           ; BSR set to: 13
 15035                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 15036  011B1E  0E04               	movlw	4
 15037  011B20  010D               	movlb	13	; () banked
 15038  011B22  6F00               	movwf	0,b	;volatile
 15039                           
 15040                           ; BSR set to: 13
 15041                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 15042  011B24  010D               	movlb	13	; () banked
 15043  011B26  8F00               	bsf	0,7,b	;volatile
 15044                           
 15045                           ; BSR set to: 13
 15046                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 15047  011B28  0E00               	movlw	0
 15048  011B2A  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 15049                           
 15050                           ; BSR set to: 13
 15051                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 15052  011B2C  0E00               	movlw	0
 15053  011B2E  6E22               	movwf	_USBDeviceState,c	;volatile
 15054                           
 15055                           ; BSR set to: 13
 15056  011B30  0012               	return		;funcret
 15057  011B32                     __end_ofi2_USBDeviceInit:
 15058                           	opt stack 0
 15059                           pclatu	equ	0xFFB
 15060                           pclath	equ	0xFFA
 15061                           tblptru	equ	0xFF8
 15062                           tblptrh	equ	0xFF7
 15063                           tblptrl	equ	0xFF6
 15064                           tablat	equ	0xFF5
 15065                           prodh	equ	0xFF4
 15066                           prodl	equ	0xFF3
 15067                           intcon	equ	0xFF2
 15068                           intcon2	equ	0xFF1
 15069                           postinc0	equ	0xFEE
 15070                           fsr0h	equ	0xFEA
 15071                           fsr0l	equ	0xFE9
 15072                           wreg	equ	0xFE8
 15073                           indf1	equ	0xFE7
 15074                           postinc1	equ	0xFE6
 15075                           postdec1	equ	0xFE5
 15076                           fsr1h	equ	0xFE2
 15077                           fsr1l	equ	0xFE1
 15078                           indf2	equ	0xFDF
 15079                           postinc2	equ	0xFDE
 15080                           postdec2	equ	0xFDD
 15081                           plusw2	equ	0xFDB
 15082                           fsr2h	equ	0xFDA
 15083                           fsr2l	equ	0xFD9
 15084                           status	equ	0xFD8
 15085                           
 15086 ;; *************** function _USBWakeFromSuspend *****************
 15087 ;; Defined at:
 15088 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 15089 ;; Parameters:    Size  Location     Type
 15090 ;;		None
 15091 ;; Auto vars:     Size  Location     Type
 15092 ;;		None
 15093 ;; Return value:  Size  Location     Type
 15094 ;;		None               void
 15095 ;; Registers used:
 15096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15097 ;; Tracked objects:
 15098 ;;		On entry : 0/0
 15099 ;;		On exit  : 0/0
 15100 ;;		Unchanged: 0/0
 15101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15106 ;;Total ram usage:        0 bytes
 15107 ;; Hardware stack levels used:    1
 15108 ;; Hardware stack levels required when called:    4
 15109 ;; This function calls:
 15110 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15111 ;; This function is called by:
 15112 ;;		_USBDeviceTasks
 15113 ;; This function uses a non-reentrant model
 15114 ;;
 15115                           
 15116                           	psect	text72
 15117  0142E4                     __ptext72:
 15118                           	opt stack 0
 15119  0142E4                     _USBWakeFromSuspend:
 15120                           	opt stack 14
 15121                           
 15122                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 15123                           
 15124                           ; BSR set to: 13
 15125                           ;incstack = 0
 15126  0142E4  0E00               	movlw	0
 15127  0142E6  0101               	movlb	1	; () banked
 15128  0142E8  6F2F               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15129                           
 15130                           ; BSR set to: 1
 15131                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 15132  0142EA  0E00               	movlw	0
 15133  0142EC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15134  0142EE  0E74               	movlw	116
 15135  0142F0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15136  0142F2  0E00               	movlw	0
 15137  0142F4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15138  0142F6  0E00               	movlw	0
 15139  0142F8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15140  0142FA  0E00               	movlw	0
 15141  0142FC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15142  0142FE  0E00               	movlw	0
 15143  014300  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15144  014302  EC8B  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15145                           
 15146                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 15147  014306  9265               	bcf	3941,1,c	;volatile
 15148                           
 15149                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 15150  014308  010F               	movlb	15	; () banked
 15151  01430A  9536               	bcf	54,2,b	;volatile
 15152                           
 15153                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 15154  01430C  D001               	goto	i2l6578
 15155  01430E                     i2l6576:
 15156                           
 15157                           ;usb_device.c: 2342: {
 15158                           ;usb_device.c: 2343: (UIR &= 0xFB);
 15159  01430E  9462               	bcf	3938,2,c	;volatile
 15160  014310                     i2l6578:
 15161  014310  A462               	btfss	3938,2,c	;volatile
 15162  014312  0012               	return	
 15163  014314  D7FC               	goto	i2l6576
 15164  014316                     __end_of_USBWakeFromSuspend:
 15165                           	opt stack 0
 15166                           pclatu	equ	0xFFB
 15167                           pclath	equ	0xFFA
 15168                           tblptru	equ	0xFF8
 15169                           tblptrh	equ	0xFF7
 15170                           tblptrl	equ	0xFF6
 15171                           tablat	equ	0xFF5
 15172                           prodh	equ	0xFF4
 15173                           prodl	equ	0xFF3
 15174                           intcon	equ	0xFF2
 15175                           intcon2	equ	0xFF1
 15176                           postinc0	equ	0xFEE
 15177                           fsr0h	equ	0xFEA
 15178                           fsr0l	equ	0xFE9
 15179                           wreg	equ	0xFE8
 15180                           indf1	equ	0xFE7
 15181                           postinc1	equ	0xFE6
 15182                           postdec1	equ	0xFE5
 15183                           fsr1h	equ	0xFE2
 15184                           fsr1l	equ	0xFE1
 15185                           indf2	equ	0xFDF
 15186                           postinc2	equ	0xFDE
 15187                           postdec2	equ	0xFDD
 15188                           plusw2	equ	0xFDB
 15189                           fsr2h	equ	0xFDA
 15190                           fsr2l	equ	0xFD9
 15191                           status	equ	0xFD8
 15192                           
 15193 ;; *************** function _USBSuspend *****************
 15194 ;; Defined at:
 15195 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 15196 ;; Parameters:    Size  Location     Type
 15197 ;;		None
 15198 ;; Auto vars:     Size  Location     Type
 15199 ;;		None
 15200 ;; Return value:  Size  Location     Type
 15201 ;;		None               void
 15202 ;; Registers used:
 15203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15204 ;; Tracked objects:
 15205 ;;		On entry : 0/0
 15206 ;;		On exit  : 0/0
 15207 ;;		Unchanged: 0/0
 15208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15213 ;;Total ram usage:        0 bytes
 15214 ;; Hardware stack levels used:    1
 15215 ;; Hardware stack levels required when called:    4
 15216 ;; This function calls:
 15217 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15218 ;; This function is called by:
 15219 ;;		_USBDeviceTasks
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text73
 15224  01439C                     __ptext73:
 15225                           	opt stack 0
 15226  01439C                     _USBSuspend:
 15227                           	opt stack 14
 15228                           
 15229                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 15230                           
 15231                           ;incstack = 0
 15232  01439C  010F               	movlb	15	; () banked
 15233  01439E  8536               	bsf	54,2,b	;volatile
 15234                           
 15235                           ; BSR set to: 15
 15236                           ;usb_device.c: 2271: (UIR &= 0xEF);
 15237  0143A0  9862               	bcf	3938,4,c	;volatile
 15238                           
 15239                           ; BSR set to: 15
 15240                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 15241  0143A2  8265               	bsf	3941,1,c	;volatile
 15242                           
 15243                           ; BSR set to: 15
 15244                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 15245  0143A4  0E01               	movlw	1
 15246  0143A6  0101               	movlb	1	; () banked
 15247  0143A8  6F2F               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15248                           
 15249                           ; BSR set to: 1
 15250                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 15251  0143AA  0E00               	movlw	0
 15252  0143AC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15253  0143AE  0E75               	movlw	117
 15254  0143B0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15255  0143B2  0E00               	movlw	0
 15256  0143B4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15257  0143B6  0E00               	movlw	0
 15258  0143B8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15259  0143BA  0E00               	movlw	0
 15260  0143BC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15261  0143BE  0E00               	movlw	0
 15262  0143C0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15263  0143C2  EC8B  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15264  0143C6  0012               	return		;funcret
 15265  0143C8                     __end_of_USBSuspend:
 15266                           	opt stack 0
 15267                           pclatu	equ	0xFFB
 15268                           pclath	equ	0xFFA
 15269                           tblptru	equ	0xFF8
 15270                           tblptrh	equ	0xFF7
 15271                           tblptrl	equ	0xFF6
 15272                           tablat	equ	0xFF5
 15273                           prodh	equ	0xFF4
 15274                           prodl	equ	0xFF3
 15275                           intcon	equ	0xFF2
 15276                           intcon2	equ	0xFF1
 15277                           postinc0	equ	0xFEE
 15278                           fsr0h	equ	0xFEA
 15279                           fsr0l	equ	0xFE9
 15280                           wreg	equ	0xFE8
 15281                           indf1	equ	0xFE7
 15282                           postinc1	equ	0xFE6
 15283                           postdec1	equ	0xFE5
 15284                           fsr1h	equ	0xFE2
 15285                           fsr1l	equ	0xFE1
 15286                           indf2	equ	0xFDF
 15287                           postinc2	equ	0xFDE
 15288                           postdec2	equ	0xFDD
 15289                           plusw2	equ	0xFDB
 15290                           fsr2h	equ	0xFDA
 15291                           fsr2l	equ	0xFD9
 15292                           status	equ	0xFD8
 15293                           
 15294 ;; *************** function _USBStallHandler *****************
 15295 ;; Defined at:
 15296 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 15297 ;; Parameters:    Size  Location     Type
 15298 ;;		None
 15299 ;; Auto vars:     Size  Location     Type
 15300 ;;		None
 15301 ;; Return value:  Size  Location     Type
 15302 ;;		None               void
 15303 ;; Registers used:
 15304 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15305 ;; Tracked objects:
 15306 ;;		On entry : 0/0
 15307 ;;		On exit  : 0/0
 15308 ;;		Unchanged: 0/0
 15309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15313 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15314 ;;Total ram usage:        1 bytes
 15315 ;; Hardware stack levels used:    1
 15316 ;; This function calls:
 15317 ;;		Nothing
 15318 ;; This function is called by:
 15319 ;;		_USBDeviceTasks
 15320 ;; This function uses a non-reentrant model
 15321 ;;
 15322                           
 15323                           	psect	text74
 15324  0140E0                     __ptext74:
 15325                           	opt stack 0
 15326  0140E0                     _USBStallHandler:
 15327                           	opt stack 18
 15328                           
 15329                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 15330                           
 15331                           ;incstack = 0
 15332  0140E0  010F               	movlb	15	; () banked
 15333  0140E2  A126               	btfss	38,0,b	;volatile
 15334  0140E4  D01E               	goto	i2l308
 15335                           
 15336                           ; BSR set to: 15
 15337                           ;usb_device.c: 2215: {
 15338                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 15339  0140E6  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15340  0140EA  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15341  0140EE  0E80               	movlw	128
 15342  0140F0  18DE               	xorwf	postinc2,w,c
 15343  0140F2  A4D8               	btfss	status,2,c
 15344  0140F4  D014               	goto	i2l6600
 15345                           
 15346                           ; BSR set to: 15
 15347  0140F6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15348  0140FA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15349  0140FE  0E84               	movlw	132
 15350  014100  18DE               	xorwf	postinc2,w,c
 15351  014102  A4D8               	btfss	status,2,c
 15352  014104  D00C               	goto	i2l6600
 15353                           
 15354                           ; BSR set to: 15
 15355                           ;usb_device.c: 2218: {
 15356                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15357  014106  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15358  01410A  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15359  01410E  0E0C               	movlw	12
 15360  014110  6EDF               	movwf	indf2,c
 15361                           
 15362                           ; BSR set to: 15
 15363                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15364  014112  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15365  014116  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15366  01411A  0E00               	movlw	0
 15367  01411C  8EDB               	bsf	plusw2,7,c
 15368  01411E                     i2l6600:
 15369                           
 15370                           ; BSR set to: 15
 15371                           ;usb_device.c: 2222: }
 15372                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 15373  01411E  010F               	movlb	15	; () banked
 15374  014120  9126               	bcf	38,0,b	;volatile
 15375  014122                     i2l308:
 15376                           
 15377                           ; BSR set to: 15
 15378                           ;usb_device.c: 2224: }
 15379                           ;usb_device.c: 2226: (UIR &= 0xDF);
 15380  014122  9A62               	bcf	3938,5,c	;volatile
 15381                           
 15382                           ; BSR set to: 15
 15383  014124  0012               	return		;funcret
 15384  014126                     __end_of_USBStallHandler:
 15385                           	opt stack 0
 15386                           pclatu	equ	0xFFB
 15387                           pclath	equ	0xFFA
 15388                           tblptru	equ	0xFF8
 15389                           tblptrh	equ	0xFF7
 15390                           tblptrl	equ	0xFF6
 15391                           tablat	equ	0xFF5
 15392                           prodh	equ	0xFF4
 15393                           prodl	equ	0xFF3
 15394                           intcon	equ	0xFF2
 15395                           intcon2	equ	0xFF1
 15396                           postinc0	equ	0xFEE
 15397                           fsr0h	equ	0xFEA
 15398                           fsr0l	equ	0xFE9
 15399                           wreg	equ	0xFE8
 15400                           indf1	equ	0xFE7
 15401                           postinc1	equ	0xFE6
 15402                           postdec1	equ	0xFE5
 15403                           fsr1h	equ	0xFE2
 15404                           fsr1l	equ	0xFE1
 15405                           indf2	equ	0xFDF
 15406                           postinc2	equ	0xFDE
 15407                           postdec2	equ	0xFDD
 15408                           plusw2	equ	0xFDB
 15409                           fsr2h	equ	0xFDA
 15410                           fsr2l	equ	0xFD9
 15411                           status	equ	0xFD8
 15412                           
 15413 ;; *************** function _USBCtrlEPService *****************
 15414 ;; Defined at:
 15415 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 15416 ;; Parameters:    Size  Location     Type
 15417 ;;		None
 15418 ;; Auto vars:     Size  Location     Type
 15419 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 15420 ;; Return value:  Size  Location     Type
 15421 ;;		None               void
 15422 ;; Registers used:
 15423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15424 ;; Tracked objects:
 15425 ;;		On entry : 0/0
 15426 ;;		On exit  : 0/0
 15427 ;;		Unchanged: 0/0
 15428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15432 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15433 ;;Total ram usage:        3 bytes
 15434 ;; Hardware stack levels used:    1
 15435 ;; Hardware stack levels required when called:    7
 15436 ;; This function calls:
 15437 ;;		_USBCtrlTrfInHandler
 15438 ;;		_USBCtrlTrfOutHandler
 15439 ;;		_USBCtrlTrfSetupHandler
 15440 ;; This function is called by:
 15441 ;;		_USBDeviceTasks
 15442 ;; This function uses a non-reentrant model
 15443 ;;
 15444                           
 15445                           	psect	text75
 15446  012B7E                     __ptext75:
 15447                           	opt stack 0
 15448  012B7E                     _USBCtrlEPService:
 15449                           	opt stack 11
 15450                           
 15451                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 15452                           
 15453                           ; BSR set to: 15
 15454                           ;incstack = 0
 15455  012B7E  0E2D               	movlw	45
 15456  012B80  6E25               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 15457                           
 15458                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 15459  012B82  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15460  012B86  0EFD               	movlw	253
 15461  012B88  1648               	andwf	??_USBCtrlEPService,f,c
 15462  012B8A  A4D8               	btfss	status,2,c
 15463  012B8C  D057               	goto	i2l6634
 15464                           
 15465                           ;usb_device.c: 2380: {
 15466                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 15467  012B8E  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15468  012B92  90D8               	bcf	status,0,c
 15469  012B94  3248               	rrcf	??_USBCtrlEPService,f,c
 15470  012B96  0E3F               	movlw	63
 15471  012B98  1648               	andwf	??_USBCtrlEPService,f,c
 15472  012B9A  5048               	movf	??_USBCtrlEPService,w,c
 15473  012B9C  0D04               	mullw	4
 15474  012B9E  0E00               	movlw	0
 15475  012BA0  24F3               	addwf	prodl,w,c
 15476  012BA2  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 15477  012BA4  0E0D               	movlw	13
 15478  012BA6  20F4               	addwfc	prodh,w,c
 15479  012BA8  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15480                           
 15481                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15482  012BAA  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15483  012BAE  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15484                           
 15485                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 15486  012BB2  0E04               	movlw	4
 15487  012BB4  1A1B               	xorwf	_pBDTEntryEP0OutNext,f,c
 15488                           
 15489                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 15490  012BB6  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15491  012BBA  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15492  012BBE  30DF               	rrcf	indf2,w,c
 15493  012BC0  32E8               	rrcf	wreg,f,c
 15494  012BC2  0B0F               	andlw	15
 15495  012BC4  0A0D               	xorlw	13
 15496  012BC6  A4D8               	btfss	status,2,c
 15497  012BC8  D036               	goto	i2l6632
 15498                           
 15499                           ;usb_device.c: 2397: {
 15500                           ;usb_device.c: 2398: unsigned char setup_cnt;
 15501                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 15502  012BCA  0E00               	movlw	0
 15503  012BCC  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 15504  012BCE                     i2l6616:
 15505  012BCE  0E07               	movlw	7
 15506  012BD0  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 15507  012BD2  D001               	goto	i2l6620
 15508  012BD4  D023               	goto	i2l6628
 15509  012BD6                     i2l6620:
 15510                           
 15511                           ;usb_device.c: 2405: {
 15512                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 15513  012BD6  EE20 F002          	lfsr	2,2
 15514  012BDA  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15515  012BDC  26D9               	addwf	fsr2l,f,c
 15516  012BDE  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15517  012BE0  22DA               	addwfc	fsr2h,f,c
 15518  012BE2  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 15519  012BE6  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 15520  012BEA  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 15521  012BEE  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 15522  012BF2  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 15523  012BF4  0D01               	mullw	1
 15524  012BF6  0E30               	movlw	48
 15525  012BF8  24F3               	addwf	prodl,w,c
 15526  012BFA  6EE1               	movwf	fsr1l,c
 15527  012BFC  0E0D               	movlw	13
 15528  012BFE  20F4               	addwfc	prodh,w,c
 15529  012C00  6EE2               	movwf	fsr1h,c
 15530  012C02  CFDF FFE7          	movff	indf2,indf1
 15531                           
 15532                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 15533  012C06  EE20 F002          	lfsr	2,2
 15534  012C0A  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15535  012C0C  26D9               	addwf	fsr2l,f,c
 15536  012C0E  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15537  012C10  22DA               	addwfc	fsr2h,f,c
 15538  012C12  2ADE               	incf	postinc2,f,c
 15539  012C14  0E00               	movlw	0
 15540  012C16  22DD               	addwfc	postdec2,f,c
 15541  012C18  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 15542  012C1A  D7D9               	goto	i2l6616
 15543  012C1C                     i2l6628:
 15544                           
 15545                           ;usb_device.c: 2408: }
 15546                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 15547  012C1C  EE20 F002          	lfsr	2,2
 15548  012C20  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15549  012C22  26D9               	addwf	fsr2l,f,c
 15550  012C24  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15551  012C26  22DA               	addwfc	fsr2h,f,c
 15552  012C28  0E30               	movlw	48
 15553  012C2A  6EDE               	movwf	postinc2,c
 15554  012C2C  0E0D               	movlw	13
 15555  012C2E  6EDD               	movwf	postdec2,c
 15556                           
 15557                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 15558  012C30  ECBD  F09C         	call	_USBCtrlTrfSetupHandler	;wreg free
 15559                           
 15560                           ;usb_device.c: 2413: }
 15561  012C34  0012               	return	
 15562  012C36                     i2l6632:
 15563                           
 15564                           ;usb_device.c: 2414: else
 15565                           ;usb_device.c: 2415: {
 15566                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 15567  012C36  EC79  F09F         	call	_USBCtrlTrfOutHandler	;wreg free
 15568                           
 15569                           ;usb_device.c: 2418: }
 15570                           ;usb_device.c: 2419: }
 15571  012C3A  0012               	return	
 15572  012C3C                     i2l6634:
 15573                           
 15574                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 15575  012C3C  502D               	movf	_USTATcopy,w,c	;volatile
 15576  012C3E  0BFD               	andlw	253
 15577  012C40  0A04               	xorlw	4
 15578  012C42  A4D8               	btfss	status,2,c
 15579  012C44  0012               	return	
 15580                           
 15581                           ;usb_device.c: 2421: {
 15582                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 15583  012C46  ECC3  F098         	call	_USBCtrlTrfInHandler	;wreg free
 15584  012C4A  0012               	return	
 15585  012C4C                     __end_of_USBCtrlEPService:
 15586                           	opt stack 0
 15587                           pclatu	equ	0xFFB
 15588                           pclath	equ	0xFFA
 15589                           tblptru	equ	0xFF8
 15590                           tblptrh	equ	0xFF7
 15591                           tblptrl	equ	0xFF6
 15592                           tablat	equ	0xFF5
 15593                           prodh	equ	0xFF4
 15594                           prodl	equ	0xFF3
 15595                           intcon	equ	0xFF2
 15596                           intcon2	equ	0xFF1
 15597                           postinc0	equ	0xFEE
 15598                           fsr0h	equ	0xFEA
 15599                           fsr0l	equ	0xFE9
 15600                           wreg	equ	0xFE8
 15601                           indf1	equ	0xFE7
 15602                           postinc1	equ	0xFE6
 15603                           postdec1	equ	0xFE5
 15604                           fsr1h	equ	0xFE2
 15605                           fsr1l	equ	0xFE1
 15606                           indf2	equ	0xFDF
 15607                           postinc2	equ	0xFDE
 15608                           postdec2	equ	0xFDD
 15609                           plusw2	equ	0xFDB
 15610                           fsr2h	equ	0xFDA
 15611                           fsr2l	equ	0xFD9
 15612                           status	equ	0xFD8
 15613                           
 15614 ;; *************** function _USBCtrlTrfSetupHandler *****************
 15615 ;; Defined at:
 15616 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 15617 ;; Parameters:    Size  Location     Type
 15618 ;;		None
 15619 ;; Auto vars:     Size  Location     Type
 15620 ;;		None
 15621 ;; Return value:  Size  Location     Type
 15622 ;;		None               void
 15623 ;; Registers used:
 15624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15625 ;; Tracked objects:
 15626 ;;		On entry : 0/0
 15627 ;;		On exit  : 0/0
 15628 ;;		Unchanged: 0/0
 15629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15634 ;;Total ram usage:        0 bytes
 15635 ;; Hardware stack levels used:    1
 15636 ;; Hardware stack levels required when called:    6
 15637 ;; This function calls:
 15638 ;;		_USBCheckStdRequest
 15639 ;;		_USBCtrlEPServiceComplete
 15640 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15641 ;; This function is called by:
 15642 ;;		_USBCtrlEPService
 15643 ;; This function uses a non-reentrant model
 15644 ;;
 15645                           
 15646                           	psect	text76
 15647  01397A                     __ptext76:
 15648                           	opt stack 0
 15649  01397A                     _USBCtrlTrfSetupHandler:
 15650                           	opt stack 11
 15651                           
 15652                           ;usb_device.c: 2474: shortPacketStatus = 0;
 15653                           
 15654                           ;incstack = 0
 15655  01397A  0E00               	movlw	0
 15656  01397C  6E2B               	movwf	_shortPacketStatus,c	;volatile
 15657                           
 15658                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 15659  01397E  0E00               	movlw	0
 15660  013980  6E21               	movwf	_USBDeferStatusStagePacket,c	;volatile
 15661                           
 15662                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 15663  013982  0E00               	movlw	0
 15664  013984  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15665                           
 15666                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 15667  013986  0E00               	movlw	0
 15668  013988  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15669                           
 15670                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 15671  01398A  0E00               	movlw	0
 15672  01398C  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 15673                           
 15674                           ;usb_device.c: 2479: controlTransferState = 0;
 15675  01398E  0E00               	movlw	0
 15676  013990  6E28               	movwf	_controlTransferState,c	;volatile
 15677                           
 15678                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15679  013992  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15680  013996  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15681  01399A  0E7F               	movlw	127
 15682  01399C  16DF               	andwf	indf2,f,c
 15683                           
 15684                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15685  01399E  0E04               	movlw	4
 15686  0139A0  1A10               	xorwf	_pBDTEntryIn,f,c
 15687                           
 15688                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15689  0139A2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15690  0139A6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15691  0139AA  0E7F               	movlw	127
 15692  0139AC  16DF               	andwf	indf2,f,c
 15693                           
 15694                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15695  0139AE  0E04               	movlw	4
 15696  0139B0  1A10               	xorwf	_pBDTEntryIn,f,c
 15697                           
 15698                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 15699  0139B2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15700  0139B6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15701  0139BA  0E7F               	movlw	127
 15702  0139BC  16DF               	andwf	indf2,f,c
 15703                           
 15704                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 15705  0139BE  0E00               	movlw	0
 15706  0139C0  6E0D               	movwf	_inPipes+3,c	;volatile
 15707                           
 15708                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 15709  0139C2  0E00               	movlw	0
 15710  0139C4  6E0F               	movwf	_inPipes+5,c	;volatile
 15711  0139C6  0E00               	movlw	0
 15712  0139C8  6E0E               	movwf	_inPipes+4,c	;volatile
 15713                           
 15714                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 15715  0139CA  0E00               	movlw	0
 15716  0139CC  6E04               	movwf	_outPipes+3,c	;volatile
 15717                           
 15718                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 15719  0139CE  0E00               	movlw	0
 15720  0139D0  6E06               	movwf	_outPipes+5,c	;volatile
 15721  0139D2  0E00               	movlw	0
 15722  0139D4  6E05               	movwf	_outPipes+4,c	;volatile
 15723                           
 15724                           ;usb_device.c: 2503: USBCheckStdRequest();
 15725  0139D6  ECD5  F092         	call	_USBCheckStdRequest	;wreg free
 15726                           
 15727                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 15728  0139DA  0E00               	movlw	0
 15729  0139DC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15730  0139DE  0E03               	movlw	3
 15731  0139E0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15732  0139E2  0E00               	movlw	0
 15733  0139E4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15734  0139E6  0E00               	movlw	0
 15735  0139E8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15736  0139EA  0E00               	movlw	0
 15737  0139EC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15738  0139EE  0E00               	movlw	0
 15739  0139F0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15740  0139F2  EC8B  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15741                           
 15742                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 15743  0139F6  ECB6  F08F         	call	_USBCtrlEPServiceComplete	;wreg free
 15744  0139FA  0012               	return		;funcret
 15745  0139FC                     __end_of_USBCtrlTrfSetupHandler:
 15746                           	opt stack 0
 15747                           pclatu	equ	0xFFB
 15748                           pclath	equ	0xFFA
 15749                           tblptru	equ	0xFF8
 15750                           tblptrh	equ	0xFF7
 15751                           tblptrl	equ	0xFF6
 15752                           tablat	equ	0xFF5
 15753                           prodh	equ	0xFF4
 15754                           prodl	equ	0xFF3
 15755                           intcon	equ	0xFF2
 15756                           intcon2	equ	0xFF1
 15757                           postinc0	equ	0xFEE
 15758                           fsr0h	equ	0xFEA
 15759                           fsr0l	equ	0xFE9
 15760                           wreg	equ	0xFE8
 15761                           indf1	equ	0xFE7
 15762                           postinc1	equ	0xFE6
 15763                           postdec1	equ	0xFE5
 15764                           fsr1h	equ	0xFE2
 15765                           fsr1l	equ	0xFE1
 15766                           indf2	equ	0xFDF
 15767                           postinc2	equ	0xFDE
 15768                           postdec2	equ	0xFDD
 15769                           plusw2	equ	0xFDB
 15770                           fsr2h	equ	0xFDA
 15771                           fsr2l	equ	0xFD9
 15772                           status	equ	0xFD8
 15773                           
 15774 ;; *************** function _USBCtrlEPServiceComplete *****************
 15775 ;; Defined at:
 15776 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 15777 ;; Parameters:    Size  Location     Type
 15778 ;;		None
 15779 ;; Auto vars:     Size  Location     Type
 15780 ;;		None
 15781 ;; Return value:  Size  Location     Type
 15782 ;;		None               void
 15783 ;; Registers used:
 15784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15785 ;; Tracked objects:
 15786 ;;		On entry : 0/0
 15787 ;;		On exit  : 0/0
 15788 ;;		Unchanged: 0/0
 15789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15794 ;;Total ram usage:        0 bytes
 15795 ;; Hardware stack levels used:    1
 15796 ;; Hardware stack levels required when called:    2
 15797 ;; This function calls:
 15798 ;;		_USBCtrlEPAllowDataStage
 15799 ;;		_USBCtrlEPAllowStatusStage
 15800 ;; This function is called by:
 15801 ;;		_USBCtrlTrfSetupHandler
 15802 ;; This function uses a non-reentrant model
 15803 ;;
 15804                           
 15805                           	psect	text77
 15806  011F6C                     __ptext77:
 15807                           	opt stack 0
 15808  011F6C                     _USBCtrlEPServiceComplete:
 15809                           	opt stack 14
 15810                           
 15811                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 15812                           
 15813                           ;incstack = 0
 15814  011F6C  9865               	bcf	3941,4,c	;volatile
 15815                           
 15816                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 15817  011F6E  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 15818  011F70  D038               	goto	i2l232
 15819                           
 15820                           ;usb_device.c: 1629: {
 15821                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 15822  011F72  AE04               	btfss	_outPipes+3,7,c	;volatile
 15823  011F74  D00B               	goto	i2l6192
 15824                           
 15825                           ;usb_device.c: 1631: {
 15826                           ;usb_device.c: 1632: controlTransferState = 2;
 15827  011F76  0E02               	movlw	2
 15828  011F78  6E28               	movwf	_controlTransferState,c	;volatile
 15829                           
 15830                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 15831  011F7A  5020               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 15832  011F7C  B4D8               	btfsc	status,2,c
 15833                           
 15834                           ;usb_device.c: 1644: {
 15835                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 15836  011F7E  ECCF  F09A         	call	_USBCtrlEPAllowDataStage	;wreg free
 15837                           
 15838                           ;usb_device.c: 1646: }
 15839                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 15840  011F82  0E00               	movlw	0
 15841  011F84  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15842                           
 15843                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 15844  011F86  0E00               	movlw	0
 15845  011F88  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15846                           
 15847                           ;usb_device.c: 1652: }
 15848  011F8A  0012               	return	
 15849  011F8C                     i2l6192:
 15850                           
 15851                           ;usb_device.c: 1653: else
 15852                           ;usb_device.c: 1654: {
 15853                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 15854  011F8C  EE20 F001          	lfsr	2,1
 15855  011F90  501B               	movf	_pBDTEntryEP0OutNext,w,c
 15856  011F92  26D9               	addwf	fsr2l,f,c
 15857  011F94  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 15858  011F96  22DA               	addwfc	fsr2h,f,c
 15859  011F98  0E08               	movlw	8
 15860  011F9A  6EDF               	movwf	indf2,c
 15861                           
 15862                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15863  011F9C  EE20 F002          	lfsr	2,2
 15864  011FA0  501B               	movf	_pBDTEntryEP0OutNext,w,c
 15865  011FA2  26D9               	addwf	fsr2l,f,c
 15866  011FA4  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 15867  011FA6  22DA               	addwfc	fsr2h,f,c
 15868  011FA8  0E30               	movlw	48
 15869  011FAA  6EDE               	movwf	postinc2,c
 15870  011FAC  0E0D               	movlw	13
 15871  011FAE  6EDD               	movwf	postdec2,c
 15872                           
 15873                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15874  011FB0  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15875  011FB4  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15876  011FB8  0E0C               	movlw	12
 15877  011FBA  6EDF               	movwf	indf2,c
 15878                           
 15879                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15880  011FBC  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15881  011FC0  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15882  011FC4  0E00               	movlw	0
 15883  011FC6  8EDB               	bsf	plusw2,7,c
 15884                           
 15885                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 15886  011FC8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15887  011FCC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15888  011FD0  0E04               	movlw	4
 15889  011FD2  6EDF               	movwf	indf2,c
 15890                           
 15891                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15892  011FD4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15893  011FD8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15894  011FDC  0E00               	movlw	0
 15895  011FDE  8EDB               	bsf	plusw2,7,c
 15896                           
 15897                           ;usb_device.c: 1665: }
 15898                           ;usb_device.c: 1666: }
 15899  011FE0  0012               	return	
 15900  011FE2                     i2l232:
 15901                           
 15902                           ;usb_device.c: 1667: else
 15903                           ;usb_device.c: 1668: {
 15904                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 15905  011FE2  010D               	movlb	13	; () banked
 15906  011FE4  AF30               	btfss	48,7,b	;volatile
 15907  011FE6  D010               	goto	i2l6212
 15908                           
 15909                           ; BSR set to: 13
 15910                           ;usb_device.c: 1670: {
 15911                           ;usb_device.c: 1671: controlTransferState = 1;
 15912  011FE8  0E01               	movlw	1
 15913  011FEA  6E28               	movwf	_controlTransferState,c	;volatile
 15914                           
 15915                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 15916  011FEC  501F               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 15917  011FEE  B4D8               	btfsc	status,2,c
 15918                           
 15919                           ; BSR set to: 13
 15920                           ;usb_device.c: 1686: {
 15921                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 15922  011FF0  ECCF  F09A         	call	_USBCtrlEPAllowDataStage	;wreg free
 15923                           
 15924                           ;usb_device.c: 1688: }
 15925                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 15926  011FF4  0E00               	movlw	0
 15927  011FF6  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15928                           
 15929                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 15930  011FF8  0E00               	movlw	0
 15931  011FFA  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15932                           
 15933                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 15934  011FFC  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15935  011FFE  A4D8               	btfss	status,2,c
 15936  012000  0012               	return	
 15937                           
 15938                           ;usb_device.c: 1713: {
 15939                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 15940  012002  EC8C  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15941                           
 15942                           ;usb_device.c: 1715: }
 15943                           ;usb_device.c: 1716: }
 15944  012006  0012               	return	
 15945  012008                     i2l6212:
 15946                           
 15947                           ;usb_device.c: 1717: else
 15948                           ;usb_device.c: 1718: {
 15949                           ;usb_device.c: 1729: controlTransferState = 2;
 15950  012008  0E02               	movlw	2
 15951  01200A  6E28               	movwf	_controlTransferState,c	;volatile
 15952                           
 15953                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 15954  01200C  EE20 F001          	lfsr	2,1
 15955  012010  501B               	movf	_pBDTEntryEP0OutNext,w,c
 15956  012012  26D9               	addwf	fsr2l,f,c
 15957  012014  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 15958  012016  22DA               	addwfc	fsr2h,f,c
 15959  012018  0E08               	movlw	8
 15960  01201A  6EDF               	movwf	indf2,c
 15961                           
 15962                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15963  01201C  EE20 F002          	lfsr	2,2
 15964  012020  501B               	movf	_pBDTEntryEP0OutNext,w,c
 15965  012022  26D9               	addwf	fsr2l,f,c
 15966  012024  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 15967  012026  22DA               	addwfc	fsr2h,f,c
 15968  012028  0E30               	movlw	48
 15969  01202A  6EDE               	movwf	postinc2,c
 15970  01202C  0E0D               	movlw	13
 15971  01202E  6EDD               	movwf	postdec2,c
 15972                           
 15973                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15974  012030  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15975  012034  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15976  012038  0E04               	movlw	4
 15977  01203A  6EDF               	movwf	indf2,c
 15978                           
 15979                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15980  01203C  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15981  012040  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15982  012044  0E00               	movlw	0
 15983  012046  8EDB               	bsf	plusw2,7,c
 15984                           
 15985                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 15986  012048  0E00               	movlw	0
 15987  01204A  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15988                           
 15989                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 15990  01204C  0E00               	movlw	0
 15991  01204E  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15992                           
 15993                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 15994  012050  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15995  012052  A4D8               	btfss	status,2,c
 15996  012054  0012               	return	
 15997                           
 15998                           ;usb_device.c: 1741: {
 15999                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 16000  012056  EC8C  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16001  01205A  0012               	return	
 16002  01205C                     __end_of_USBCtrlEPServiceComplete:
 16003                           	opt stack 0
 16004                           pclatu	equ	0xFFB
 16005                           pclath	equ	0xFFA
 16006                           tblptru	equ	0xFF8
 16007                           tblptrh	equ	0xFF7
 16008                           tblptrl	equ	0xFF6
 16009                           tablat	equ	0xFF5
 16010                           prodh	equ	0xFF4
 16011                           prodl	equ	0xFF3
 16012                           intcon	equ	0xFF2
 16013                           intcon2	equ	0xFF1
 16014                           postinc0	equ	0xFEE
 16015                           fsr0h	equ	0xFEA
 16016                           fsr0l	equ	0xFE9
 16017                           wreg	equ	0xFE8
 16018                           indf1	equ	0xFE7
 16019                           postinc1	equ	0xFE6
 16020                           postdec1	equ	0xFE5
 16021                           fsr1h	equ	0xFE2
 16022                           fsr1l	equ	0xFE1
 16023                           indf2	equ	0xFDF
 16024                           postinc2	equ	0xFDE
 16025                           postdec2	equ	0xFDD
 16026                           plusw2	equ	0xFDB
 16027                           fsr2h	equ	0xFDA
 16028                           fsr2l	equ	0xFD9
 16029                           status	equ	0xFD8
 16030                           
 16031 ;; *************** function _USBCtrlEPAllowDataStage *****************
 16032 ;; Defined at:
 16033 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 16034 ;; Parameters:    Size  Location     Type
 16035 ;;		None
 16036 ;; Auto vars:     Size  Location     Type
 16037 ;;		None
 16038 ;; Return value:  Size  Location     Type
 16039 ;;		None               void
 16040 ;; Registers used:
 16041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16042 ;; Tracked objects:
 16043 ;;		On entry : 0/0
 16044 ;;		On exit  : 0/0
 16045 ;;		Unchanged: 0/0
 16046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16051 ;;Total ram usage:        0 bytes
 16052 ;; Hardware stack levels used:    1
 16053 ;; Hardware stack levels required when called:    1
 16054 ;; This function calls:
 16055 ;;		_USBCtrlTrfTxService
 16056 ;; This function is called by:
 16057 ;;		_USBCtrlEPServiceComplete
 16058 ;; This function uses a non-reentrant model
 16059 ;;
 16060                           
 16061                           	psect	text78
 16062  01359E                     __ptext78:
 16063                           	opt stack 0
 16064  01359E                     _USBCtrlEPAllowDataStage:
 16065                           	opt stack 14
 16066                           
 16067                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 16068                           
 16069                           ;incstack = 0
 16070  01359E  0E00               	movlw	0
 16071  0135A0  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16072                           
 16073                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 16074  0135A2  0E00               	movlw	0
 16075  0135A4  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16076                           
 16077                           ;usb_device.c: 1493: if(controlTransferState == 2)
 16078  0135A6  0E02               	movlw	2
 16079  0135A8  1828               	xorwf	_controlTransferState,w,c	;volatile
 16080  0135AA  A4D8               	btfss	status,2,c
 16081  0135AC  D01F               	goto	i2l5746
 16082                           
 16083                           ;usb_device.c: 1494: {
 16084                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 16085  0135AE  EE20 F001          	lfsr	2,1
 16086  0135B2  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16087  0135B4  26D9               	addwf	fsr2l,f,c
 16088  0135B6  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16089  0135B8  22DA               	addwfc	fsr2h,f,c
 16090  0135BA  0E08               	movlw	8
 16091  0135BC  6EDF               	movwf	indf2,c
 16092                           
 16093                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16094  0135BE  EE20 F002          	lfsr	2,2
 16095  0135C2  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16096  0135C4  26D9               	addwf	fsr2l,f,c
 16097  0135C6  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16098  0135C8  22DA               	addwfc	fsr2h,f,c
 16099  0135CA  0E38               	movlw	56
 16100  0135CC  6EDE               	movwf	postinc2,c
 16101  0135CE  0E0D               	movlw	13
 16102  0135D0  6EDD               	movwf	postdec2,c
 16103                           
 16104                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16105  0135D2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16106  0135D6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16107  0135DA  0E48               	movlw	72
 16108  0135DC  6EDF               	movwf	indf2,c
 16109                           
 16110                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16111  0135DE  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16112  0135E2  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16113  0135E6  0E00               	movlw	0
 16114  0135E8  8EDB               	bsf	plusw2,7,c
 16115                           
 16116                           ;usb_device.c: 1500: }
 16117  0135EA  0012               	return	
 16118  0135EC                     i2l5746:
 16119                           
 16120                           ;usb_device.c: 1501: else
 16121                           ;usb_device.c: 1502: {
 16122                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 16123  0135EC  500E               	movf	_inPipes+4,w,c	;volatile
 16124  0135EE  010D               	movlb	13	; () banked
 16125  0135F0  5D36               	subwf	54,w,b	;volatile
 16126  0135F2  500F               	movf	_inPipes+5,w,c	;volatile
 16127  0135F4  010D               	movlb	13	; () banked
 16128  0135F6  5937               	subwfb	55,w,b	;volatile
 16129  0135F8  B0D8               	btfsc	status,0,c
 16130  0135FA  D004               	goto	i2l5750
 16131                           
 16132                           ; BSR set to: 13
 16133                           ;usb_device.c: 1506: {
 16134                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 16135  0135FC  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 16136  013600  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 16137  013604                     i2l5750:
 16138                           
 16139                           ; BSR set to: 13
 16140                           ;usb_device.c: 1508: }
 16141                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 16142  013604  EC56  F095         	call	_USBCtrlTrfTxService	;wreg free
 16143                           
 16144                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 16145  013608  EE20 F002          	lfsr	2,2
 16146  01360C  5010               	movf	_pBDTEntryIn,w,c
 16147  01360E  26D9               	addwf	fsr2l,f,c
 16148  013610  5011               	movf	_pBDTEntryIn+1,w,c
 16149  013612  22DA               	addwfc	fsr2h,f,c
 16150  013614  0E38               	movlw	56
 16151  013616  6EDE               	movwf	postinc2,c
 16152  013618  0E0D               	movlw	13
 16153  01361A  6EDD               	movwf	postdec2,c
 16154                           
 16155                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16156  01361C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16157  013620  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16158  013624  0E48               	movlw	72
 16159  013626  6EDF               	movwf	indf2,c
 16160                           
 16161                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16162  013628  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16163  01362C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16164  013630  0E00               	movlw	0
 16165  013632  8EDB               	bsf	plusw2,7,c
 16166  013634  0012               	return	
 16167  013636                     __end_of_USBCtrlEPAllowDataStage:
 16168                           	opt stack 0
 16169                           pclatu	equ	0xFFB
 16170                           pclath	equ	0xFFA
 16171                           tblptru	equ	0xFF8
 16172                           tblptrh	equ	0xFF7
 16173                           tblptrl	equ	0xFF6
 16174                           tablat	equ	0xFF5
 16175                           prodh	equ	0xFF4
 16176                           prodl	equ	0xFF3
 16177                           intcon	equ	0xFF2
 16178                           intcon2	equ	0xFF1
 16179                           postinc0	equ	0xFEE
 16180                           fsr0h	equ	0xFEA
 16181                           fsr0l	equ	0xFE9
 16182                           wreg	equ	0xFE8
 16183                           indf1	equ	0xFE7
 16184                           postinc1	equ	0xFE6
 16185                           postdec1	equ	0xFE5
 16186                           fsr1h	equ	0xFE2
 16187                           fsr1l	equ	0xFE1
 16188                           indf2	equ	0xFDF
 16189                           postinc2	equ	0xFDE
 16190                           postdec2	equ	0xFDD
 16191                           plusw2	equ	0xFDB
 16192                           fsr2h	equ	0xFDA
 16193                           fsr2l	equ	0xFD9
 16194                           status	equ	0xFD8
 16195                           
 16196 ;; *************** function _USBCheckStdRequest *****************
 16197 ;; Defined at:
 16198 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 16199 ;; Parameters:    Size  Location     Type
 16200 ;;		None
 16201 ;; Auto vars:     Size  Location     Type
 16202 ;;		None
 16203 ;; Return value:  Size  Location     Type
 16204 ;;		None               void
 16205 ;; Registers used:
 16206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16207 ;; Tracked objects:
 16208 ;;		On entry : 0/0
 16209 ;;		On exit  : 0/0
 16210 ;;		Unchanged: 0/0
 16211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16216 ;;Total ram usage:        0 bytes
 16217 ;; Hardware stack levels used:    1
 16218 ;; Hardware stack levels required when called:    5
 16219 ;; This function calls:
 16220 ;;		_USBStdFeatureReqHandler
 16221 ;;		_USBStdGetDscHandler
 16222 ;;		_USBStdGetStatusHandler
 16223 ;;		_USBStdSetCfgHandler
 16224 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16225 ;; This function is called by:
 16226 ;;		_USBCtrlTrfSetupHandler
 16227 ;; This function uses a non-reentrant model
 16228 ;;
 16229                           
 16230                           	psect	text79
 16231  0125AA                     __ptext79:
 16232                           	opt stack 0
 16233  0125AA                     _USBCheckStdRequest:
 16234                           	opt stack 11
 16235                           
 16236                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 16237                           
 16238                           ;incstack = 0
 16239  0125AA  010D               	movlb	13	; () banked
 16240  0125AC  3930               	swapf	48,w,b	;volatile
 16241  0125AE  32E8               	rrcf	wreg,f,c
 16242  0125B0  0B03               	andlw	3
 16243  0125B2  0900               	iorlw	0
 16244  0125B4  A4D8               	btfss	status,2,c
 16245  0125B6  0012               	return	
 16246  0125B8  D043               	goto	i2l6310
 16247  0125BA                     i2l359:
 16248                           
 16249                           ; BSR set to: 13
 16250                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 16251  0125BA  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16252                           
 16253                           ; BSR set to: 13
 16254                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 16255  0125BC  0E08               	movlw	8
 16256  0125BE  6E22               	movwf	_USBDeviceState,c	;volatile
 16257                           
 16258                           ;usb_device.c: 2699: break;
 16259  0125C0  0012               	return	
 16260  0125C2                     i2l6280:
 16261                           
 16262                           ; BSR set to: 13
 16263                           ;usb_device.c: 2701: USBStdGetDscHandler();
 16264  0125C2  EC99  F08D         	call	_USBStdGetDscHandler	;wreg free
 16265                           
 16266                           ;usb_device.c: 2702: break;
 16267  0125C6  0012               	return	
 16268  0125C8                     i2l6282:
 16269                           
 16270                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 16271  0125C8  EC67  F092         	call	_USBStdSetCfgHandler	;wreg free
 16272                           
 16273                           ;usb_device.c: 2705: break;
 16274  0125CC  0012               	return	
 16275  0125CE                     i2l6284:
 16276                           
 16277                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 16278  0125CE  0E2C               	movlw	low _USBActiveConfiguration
 16279  0125D0  6E0A               	movwf	_inPipes,c	;volatile
 16280  0125D2  0E00               	movlw	high _USBActiveConfiguration
 16281  0125D4  6E0B               	movwf	_inPipes+1,c	;volatile
 16282                           
 16283                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16284  0125D6  800D               	bsf	_inPipes+3,0,c	;volatile
 16285                           
 16286                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 16287  0125D8  0E01               	movlw	1
 16288  0125DA  6E0E               	movwf	_inPipes+4,c	;volatile
 16289                           
 16290                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 16291  0125DC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16292                           
 16293                           ;usb_device.c: 2711: break;
 16294  0125DE  0012               	return	
 16295  0125E0                     i2l6292:
 16296                           
 16297                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 16298  0125E0  EC29  F09A         	call	_USBStdGetStatusHandler	;wreg free
 16299                           
 16300                           ;usb_device.c: 2714: break;
 16301  0125E4  0012               	return	
 16302  0125E6                     i2l6294:
 16303                           
 16304                           ;usb_device.c: 2716: case 3:
 16305                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 16306  0125E6  ECFF  F086         	call	_USBStdFeatureReqHandler	;wreg free
 16307                           
 16308                           ;usb_device.c: 2718: break;
 16309  0125EA  0012               	return	
 16310  0125EC                     i2l6296:
 16311                           
 16312                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 16313  0125EC  010D               	movlb	13	; () banked
 16314  0125EE  5134               	movf	52,w,b	;volatile
 16315  0125F0  0D01               	mullw	1
 16316  0125F2  0E7A               	movlw	low _USBAlternateInterface
 16317  0125F4  24F3               	addwf	prodl,w,c
 16318  0125F6  6E0A               	movwf	_inPipes,c	;volatile
 16319  0125F8  0E01               	movlw	high _USBAlternateInterface
 16320  0125FA  20F4               	addwfc	prodh,w,c
 16321  0125FC  6E0B               	movwf	_inPipes+1,c	;volatile
 16322                           
 16323                           ; BSR set to: 13
 16324                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16325  0125FE  800D               	bsf	_inPipes+3,0,c	;volatile
 16326                           
 16327                           ; BSR set to: 13
 16328                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 16329  012600  0E01               	movlw	1
 16330  012602  6E0E               	movwf	_inPipes+4,c	;volatile
 16331                           
 16332                           ; BSR set to: 13
 16333                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 16334  012604  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16335                           
 16336                           ;usb_device.c: 2724: break;
 16337  012606  0012               	return	
 16338  012608                     i2l368:
 16339                           
 16340                           ; BSR set to: 13
 16341                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 16342  012608  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16343                           
 16344                           ; BSR set to: 13
 16345                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 16346  01260A  010D               	movlb	13	; () banked
 16347  01260C  5134               	movf	52,w,b	;volatile
 16348  01260E  0D01               	mullw	1
 16349  012610  0E7A               	movlw	low _USBAlternateInterface
 16350  012612  24F3               	addwf	prodl,w,c
 16351  012614  6ED9               	movwf	fsr2l,c
 16352  012616  0E01               	movlw	high _USBAlternateInterface
 16353  012618  20F4               	addwfc	prodh,w,c
 16354  01261A  6EDA               	movwf	fsr2h,c
 16355  01261C  CD32 FFDF          	movff	3378,indf2	;volatile
 16356                           
 16357                           ;usb_device.c: 2728: break;
 16358  012620  0012               	return	
 16359  012622                     i2l6306:
 16360                           
 16361                           ; BSR set to: 13
 16362                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 16363  012622  0E00               	movlw	0
 16364  012624  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16365  012626  0E02               	movlw	2
 16366  012628  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16367  01262A  0E00               	movlw	0
 16368  01262C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16369  01262E  0E00               	movlw	0
 16370  012630  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16371  012632  0E00               	movlw	0
 16372  012634  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16373  012636  0E00               	movlw	0
 16374  012638  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16375  01263A  EC8B  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16376                           
 16377                           ;usb_device.c: 2735: }
 16378                           
 16379                           ;usb_device.c: 2734: break;
 16380                           
 16381                           ;usb_device.c: 2733: default:
 16382                           
 16383                           ;usb_device.c: 2732: case 12:
 16384                           
 16385                           ;usb_device.c: 2731: break;
 16386  01263E  0012               	return	
 16387  012640                     i2l6310:
 16388  012640  010D               	movlb	13	; () banked
 16389  012642  5131               	movf	49,w,b	;volatile
 16390                           
 16391                           ; Switch size 1, requested type "space"
 16392                           ; Number of cases is 11, Range of values is 0 to 12
 16393                           ; switch strategies available:
 16394                           ; Name         Instructions Cycles
 16395                           ; simple_byte           34    18 (average)
 16396                           ;	Chosen strategy is simple_byte
 16397  012644  0A00               	xorlw	0	; case 0
 16398  012646  B4D8               	btfsc	status,2,c
 16399  012648  D7CB               	goto	i2l6292
 16400  01264A  0A01               	xorlw	1	; case 1
 16401  01264C  B4D8               	btfsc	status,2,c
 16402  01264E  D7CB               	goto	i2l6294
 16403  012650  0A02               	xorlw	2	; case 3
 16404  012652  B4D8               	btfsc	status,2,c
 16405  012654  D7C8               	goto	i2l6294
 16406  012656  0A06               	xorlw	6	; case 5
 16407  012658  B4D8               	btfsc	status,2,c
 16408  01265A  D7AF               	goto	i2l359
 16409  01265C  0A03               	xorlw	3	; case 6
 16410  01265E  B4D8               	btfsc	status,2,c
 16411  012660  D7B0               	goto	i2l6280
 16412  012662  0A01               	xorlw	1	; case 7
 16413  012664  B4D8               	btfsc	status,2,c
 16414  012666  D7DD               	goto	i2l6306
 16415  012668  0A0F               	xorlw	15	; case 8
 16416  01266A  B4D8               	btfsc	status,2,c
 16417  01266C  D7B0               	goto	i2l6284
 16418  01266E  0A01               	xorlw	1	; case 9
 16419  012670  B4D8               	btfsc	status,2,c
 16420  012672  D7AA               	goto	i2l6282
 16421  012674  0A03               	xorlw	3	; case 10
 16422  012676  B4D8               	btfsc	status,2,c
 16423  012678  D7B9               	goto	i2l6296
 16424  01267A  0A01               	xorlw	1	; case 11
 16425  01267C  B4D8               	btfsc	status,2,c
 16426  01267E  D7C4               	goto	i2l368
 16427  012680  0A07               	xorlw	7	; case 12
 16428  012682  0012               	return	
 16429  012684                     __end_of_USBCheckStdRequest:
 16430                           	opt stack 0
 16431                           pclatu	equ	0xFFB
 16432                           pclath	equ	0xFFA
 16433                           tblptru	equ	0xFF8
 16434                           tblptrh	equ	0xFF7
 16435                           tblptrl	equ	0xFF6
 16436                           tablat	equ	0xFF5
 16437                           prodh	equ	0xFF4
 16438                           prodl	equ	0xFF3
 16439                           intcon	equ	0xFF2
 16440                           intcon2	equ	0xFF1
 16441                           postinc0	equ	0xFEE
 16442                           fsr0h	equ	0xFEA
 16443                           fsr0l	equ	0xFE9
 16444                           wreg	equ	0xFE8
 16445                           indf1	equ	0xFE7
 16446                           postinc1	equ	0xFE6
 16447                           postdec1	equ	0xFE5
 16448                           fsr1h	equ	0xFE2
 16449                           fsr1l	equ	0xFE1
 16450                           indf2	equ	0xFDF
 16451                           postinc2	equ	0xFDE
 16452                           postdec2	equ	0xFDD
 16453                           plusw2	equ	0xFDB
 16454                           fsr2h	equ	0xFDA
 16455                           fsr2l	equ	0xFD9
 16456                           status	equ	0xFD8
 16457                           
 16458 ;; *************** function _USBStdSetCfgHandler *****************
 16459 ;; Defined at:
 16460 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 16461 ;; Parameters:    Size  Location     Type
 16462 ;;		None
 16463 ;; Auto vars:     Size  Location     Type
 16464 ;;  i               1   20[COMRAM] unsigned char 
 16465 ;; Return value:  Size  Location     Type
 16466 ;;		None               void
 16467 ;; Registers used:
 16468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16469 ;; Tracked objects:
 16470 ;;		On entry : 0/0
 16471 ;;		On exit  : 0/0
 16472 ;;		Unchanged: 0/0
 16473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16478 ;;Total ram usage:        1 bytes
 16479 ;; Hardware stack levels used:    1
 16480 ;; Hardware stack levels required when called:    4
 16481 ;; This function calls:
 16482 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16483 ;;		i2_memset
 16484 ;; This function is called by:
 16485 ;;		_USBCheckStdRequest
 16486 ;; This function uses a non-reentrant model
 16487 ;;
 16488                           
 16489                           	psect	text80
 16490  0124CE                     __ptext80:
 16491                           	opt stack 0
 16492  0124CE                     _USBStdSetCfgHandler:
 16493                           	opt stack 11
 16494                           
 16495                           ;usb_device.c: 1970: uint8_t i;
 16496                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 16497                           
 16498                           ;incstack = 0
 16499  0124CE  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16500                           
 16501                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 16502  0124D0  0E27               	movlw	39
 16503  0124D2  6E2E               	movwf	i2memset@p1,c
 16504  0124D4  0E0F               	movlw	15
 16505  0124D6  6E2F               	movwf	i2memset@p1+1,c
 16506  0124D8  0E00               	movlw	0
 16507  0124DA  6E31               	movwf	i2memset@c+1,c
 16508  0124DC  0E00               	movlw	0
 16509  0124DE  6E30               	movwf	i2memset@c,c
 16510  0124E0  0E00               	movlw	0
 16511  0124E2  6E33               	movwf	i2memset@n+1,c
 16512  0124E4  0E02               	movlw	2
 16513  0124E6  6E32               	movwf	i2memset@n,c
 16514  0124E8  ECE4  F0A1         	call	i2_memset	;wreg free
 16515                           
 16516                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 16517  0124EC  0E00               	movlw	0
 16518  0124EE  6E2E               	movwf	i2memset@p1,c
 16519  0124F0  0E0D               	movlw	13
 16520  0124F2  6E2F               	movwf	i2memset@p1+1,c
 16521  0124F4  0E00               	movlw	0
 16522  0124F6  6E31               	movwf	i2memset@c+1,c
 16523  0124F8  0E00               	movlw	0
 16524  0124FA  6E30               	movwf	i2memset@c,c
 16525  0124FC  0E00               	movlw	0
 16526  0124FE  6E33               	movwf	i2memset@n+1,c
 16527  012500  0E30               	movlw	48
 16528  012502  6E32               	movwf	i2memset@n,c
 16529  012504  ECE4  F0A1         	call	i2_memset	;wreg free
 16530                           
 16531                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 16532  012508  8C65               	bsf	3941,6,c	;volatile
 16533                           
 16534                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 16535  01250A  0E00               	movlw	0
 16536  01250C  6E42               	movwf	USBStdSetCfgHandler@i,c
 16537  01250E                     i2l5766:
 16538  01250E  0E02               	movlw	2
 16539  012510  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 16540  012512  D001               	goto	i2l5770
 16541  012514  D016               	goto	i2l5776
 16542  012516                     i2l5770:
 16543                           
 16544                           ;usb_device.c: 1988: {
 16545                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 16546  012516  5042               	movf	USBStdSetCfgHandler@i,w,c
 16547  012518  0D01               	mullw	1
 16548  01251A  0E16               	movlw	low _ep_data_in
 16549  01251C  24F3               	addwf	prodl,w,c
 16550  01251E  6ED9               	movwf	fsr2l,c
 16551  012520  0E00               	movlw	high _ep_data_in
 16552  012522  20F4               	addwfc	prodh,w,c
 16553  012524  6EDA               	movwf	fsr2h,c
 16554  012526  0E00               	movlw	0
 16555  012528  6EDF               	movwf	indf2,c
 16556                           
 16557                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 16558  01252A  5042               	movf	USBStdSetCfgHandler@i,w,c
 16559  01252C  0D01               	mullw	1
 16560  01252E  0E18               	movlw	low _ep_data_out
 16561  012530  24F3               	addwf	prodl,w,c
 16562  012532  6ED9               	movwf	fsr2l,c
 16563  012534  0E01               	movlw	high _ep_data_out
 16564  012536  20F4               	addwfc	prodh,w,c
 16565  012538  6EDA               	movwf	fsr2h,c
 16566  01253A  0E00               	movlw	0
 16567  01253C  6EDF               	movwf	indf2,c
 16568  01253E  2A42               	incf	USBStdSetCfgHandler@i,f,c
 16569  012540  D7E6               	goto	i2l5766
 16570  012542                     i2l5776:
 16571                           
 16572                           ;usb_device.c: 1991: }
 16573                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 16574  012542  0E7A               	movlw	low _USBAlternateInterface
 16575  012544  6E2E               	movwf	i2memset@p1,c
 16576  012546  0E01               	movlw	high _USBAlternateInterface
 16577  012548  6E2F               	movwf	i2memset@p1+1,c
 16578  01254A  0E00               	movlw	0
 16579  01254C  6E31               	movwf	i2memset@c+1,c
 16580  01254E  0E00               	movlw	0
 16581  012550  6E30               	movwf	i2memset@c,c
 16582  012552  0E00               	movlw	0
 16583  012554  6E33               	movwf	i2memset@n+1,c
 16584  012556  0E02               	movlw	2
 16585  012558  6E32               	movwf	i2memset@n,c
 16586  01255A  ECE4  F0A1         	call	i2_memset	;wreg free
 16587                           
 16588                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 16589  01255E  9C65               	bcf	3941,6,c	;volatile
 16590                           
 16591                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16592  012560  0E08               	movlw	8
 16593  012562  6E10               	movwf	_pBDTEntryIn,c
 16594  012564  0E0D               	movlw	13
 16595  012566  6E11               	movwf	_pBDTEntryIn+1,c
 16596                           
 16597                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 16598  012568  0E00               	movlw	0
 16599  01256A  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 16600  01256C  0E0D               	movlw	13
 16601  01256E  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 16602                           
 16603                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 16604  012570  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 16605  012574  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 16606                           
 16607                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 16608  012578  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 16609                           
 16610                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 16611  01257C  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 16612  01257E  A4D8               	btfss	status,2,c
 16613  012580  D003               	goto	i2l5792
 16614                           
 16615                           ;usb_device.c: 2010: {
 16616                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 16617  012582  0E10               	movlw	16
 16618  012584  6E22               	movwf	_USBDeviceState,c	;volatile
 16619                           
 16620                           ;usb_device.c: 2013: }
 16621  012586  0012               	return	
 16622  012588                     i2l5792:
 16623                           
 16624                           ;usb_device.c: 2014: else
 16625                           ;usb_device.c: 2015: {
 16626                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 16627  012588  0E00               	movlw	0
 16628  01258A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16629  01258C  0E01               	movlw	1
 16630  01258E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16631  012590  0E2C               	movlw	low _USBActiveConfiguration
 16632  012592  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16633  012594  0E00               	movlw	high _USBActiveConfiguration
 16634  012596  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16635  012598  0E00               	movlw	0
 16636  01259A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16637  01259C  0E01               	movlw	1
 16638  01259E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16639  0125A0  EC8B  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16640                           
 16641                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 16642  0125A4  0E20               	movlw	32
 16643  0125A6  6E22               	movwf	_USBDeviceState,c	;volatile
 16644  0125A8  0012               	return	
 16645  0125AA                     __end_of_USBStdSetCfgHandler:
 16646                           	opt stack 0
 16647                           pclatu	equ	0xFFB
 16648                           pclath	equ	0xFFA
 16649                           tblptru	equ	0xFF8
 16650                           tblptrh	equ	0xFF7
 16651                           tblptrl	equ	0xFF6
 16652                           tablat	equ	0xFF5
 16653                           prodh	equ	0xFF4
 16654                           prodl	equ	0xFF3
 16655                           intcon	equ	0xFF2
 16656                           intcon2	equ	0xFF1
 16657                           postinc0	equ	0xFEE
 16658                           fsr0h	equ	0xFEA
 16659                           fsr0l	equ	0xFE9
 16660                           wreg	equ	0xFE8
 16661                           indf1	equ	0xFE7
 16662                           postinc1	equ	0xFE6
 16663                           postdec1	equ	0xFE5
 16664                           fsr1h	equ	0xFE2
 16665                           fsr1l	equ	0xFE1
 16666                           indf2	equ	0xFDF
 16667                           postinc2	equ	0xFDE
 16668                           postdec2	equ	0xFDD
 16669                           plusw2	equ	0xFDB
 16670                           fsr2h	equ	0xFDA
 16671                           fsr2l	equ	0xFD9
 16672                           status	equ	0xFD8
 16673                           
 16674 ;; *************** function i2_memset *****************
 16675 ;; Defined at:
 16676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16677 ;; Parameters:    Size  Location     Type
 16678 ;;  p1              2    0[COMRAM] PTR void 
 16679 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16680 ;;  c               2    2[COMRAM] int 
 16681 ;;  n               2    4[COMRAM] unsigned int 
 16682 ;; Auto vars:     Size  Location     Type
 16683 ;;  memset          2    6[COMRAM] PTR unsigned char 
 16684 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  2    0[COMRAM] PTR void 
 16687 ;; Registers used:
 16688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16689 ;; Tracked objects:
 16690 ;;		On entry : 0/0
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16694 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16697 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16698 ;;Total ram usage:        8 bytes
 16699 ;; Hardware stack levels used:    1
 16700 ;; This function calls:
 16701 ;;		Nothing
 16702 ;; This function is called by:
 16703 ;;		_USBStdSetCfgHandler
 16704 ;;		i2_USBDeviceInit
 16705 ;; This function uses a non-reentrant model
 16706 ;;
 16707                           
 16708                           	psect	text81
 16709  0143C8                     __ptext81:
 16710                           	opt stack 0
 16711  0143C8                     i2_memset:
 16712                           	opt stack 17
 16713                           
 16714                           ;incstack = 0
 16715  0143C8  C02E  F034         	movff	i2memset@p1,i2memset@p
 16716  0143CC  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 16717  0143D0  D008               	goto	i2l5700
 16718  0143D2                     i2l5696:
 16719  0143D2  C034  FFD9         	movff	i2memset@p,fsr2l
 16720  0143D6  C035  FFDA         	movff	i2memset@p+1,fsr2h
 16721  0143DA  C030  FFDF         	movff	i2memset@c,indf2
 16722  0143DE  4A34               	infsnz	i2memset@p,f,c
 16723  0143E0  2A35               	incf	i2memset@p+1,f,c
 16724  0143E2                     i2l5700:
 16725  0143E2  0632               	decf	i2memset@n,f,c
 16726  0143E4  A0D8               	btfss	status,0,c
 16727  0143E6  0633               	decf	i2memset@n+1,f,c
 16728  0143E8  2832               	incf	i2memset@n,w,c
 16729  0143EA  E1F3               	bnz	i2l5696
 16730  0143EC  2833               	incf	i2memset@n+1,w,c
 16731  0143EE  B4D8               	btfsc	status,2,c
 16732  0143F0  0012               	return	
 16733  0143F2  D7EF               	goto	i2l5696
 16734  0143F4                     __end_ofi2_memset:
 16735                           	opt stack 0
 16736                           pclatu	equ	0xFFB
 16737                           pclath	equ	0xFFA
 16738                           tblptru	equ	0xFF8
 16739                           tblptrh	equ	0xFF7
 16740                           tblptrl	equ	0xFF6
 16741                           tablat	equ	0xFF5
 16742                           prodh	equ	0xFF4
 16743                           prodl	equ	0xFF3
 16744                           intcon	equ	0xFF2
 16745                           intcon2	equ	0xFF1
 16746                           postinc0	equ	0xFEE
 16747                           fsr0h	equ	0xFEA
 16748                           fsr0l	equ	0xFE9
 16749                           wreg	equ	0xFE8
 16750                           indf1	equ	0xFE7
 16751                           postinc1	equ	0xFE6
 16752                           postdec1	equ	0xFE5
 16753                           fsr1h	equ	0xFE2
 16754                           fsr1l	equ	0xFE1
 16755                           indf2	equ	0xFDF
 16756                           postinc2	equ	0xFDE
 16757                           postdec2	equ	0xFDD
 16758                           plusw2	equ	0xFDB
 16759                           fsr2h	equ	0xFDA
 16760                           fsr2l	equ	0xFD9
 16761                           status	equ	0xFD8
 16762                           
 16763 ;; *************** function _USBStdGetStatusHandler *****************
 16764 ;; Defined at:
 16765 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 16766 ;; Parameters:    Size  Location     Type
 16767 ;;		None
 16768 ;; Auto vars:     Size  Location     Type
 16769 ;;  p               2    1[COMRAM] PTR struct __BDT
 16770 ;;		 -> NULL(0), BDT(48), 
 16771 ;; Return value:  Size  Location     Type
 16772 ;;		None               void
 16773 ;; Registers used:
 16774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16775 ;; Tracked objects:
 16776 ;;		On entry : 0/0
 16777 ;;		On exit  : 0/0
 16778 ;;		Unchanged: 0/0
 16779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16783 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16784 ;;Total ram usage:        3 bytes
 16785 ;; Hardware stack levels used:    1
 16786 ;; This function calls:
 16787 ;;		Nothing
 16788 ;; This function is called by:
 16789 ;;		_USBCheckStdRequest
 16790 ;; This function uses a non-reentrant model
 16791 ;;
 16792                           
 16793                           	psect	text82
 16794  013452                     __ptext82:
 16795                           	opt stack 0
 16796  013452                     _USBStdGetStatusHandler:
 16797                           	opt stack 15
 16798                           
 16799                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 16800                           
 16801                           ;incstack = 0
 16802  013452  0E00               	movlw	0
 16803  013454  010D               	movlb	13	; () banked
 16804  013456  6F38               	movwf	56,b	;volatile
 16805                           
 16806                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 16807  013458  0E00               	movlw	0
 16808  01345A  010D               	movlb	13	; () banked
 16809  01345C  6F39               	movwf	57,b	;volatile
 16810                           
 16811                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 16812  01345E  D038               	goto	i2l5848
 16813  013460                     i2l295:
 16814                           
 16815                           ; BSR set to: 13
 16816                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 16817  013460  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16818                           
 16819                           ; BSR set to: 13
 16820                           ;usb_device.c: 2145: }
 16821                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 16822                           
 16823                           ; BSR set to: 13
 16824                           
 16825                           ; BSR set to: 13
 16826                           ;usb_device.c: 2143: {
 16827                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 16828                           
 16829                           ;usb_device.c: 2142: if(0 == 1)
 16830  013462  041E               	decf	_RemoteWakeup,w,c	;volatile
 16831  013464  A4D8               	btfss	status,2,c
 16832  013466  D040               	goto	i2l298
 16833                           
 16834                           ; BSR set to: 13
 16835                           ;usb_device.c: 2148: {
 16836                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 16837  013468  010D               	movlb	13	; () banked
 16838  01346A  8338               	bsf	56,1,b	;volatile
 16839                           
 16840                           ; BSR set to: 13
 16841                           ;usb_device.c: 2150: }
 16842                           ;usb_device.c: 2151: break;
 16843  01346C  D03D               	goto	i2l298
 16844  01346E                     i2l299:
 16845                           
 16846                           ; BSR set to: 13
 16847                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 16848  01346E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16849                           
 16850                           ;usb_device.c: 2154: break;
 16851  013470  D03B               	goto	i2l298
 16852  013472                     i2l300:
 16853                           
 16854                           ; BSR set to: 13
 16855                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 16856  013472  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16857                           
 16858                           ;usb_device.c: 2160: {
 16859                           ;usb_device.c: 2161: BDT_ENTRY *p;
 16860                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 16861  013474  010D               	movlb	13	; () banked
 16862  013476  BF34               	btfsc	52,7,b	;volatile
 16863  013478  D00B               	goto	i2l5838
 16864                           
 16865                           ; BSR set to: 13
 16866                           ;usb_device.c: 2164: {
 16867                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16868  01347A  010D               	movlb	13	; () banked
 16869  01347C  5134               	movf	52,w,b	;volatile
 16870  01347E  0B0F               	andlw	15
 16871  013480  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16872  013482  502E               	movf	??_USBStdGetStatusHandler,w,c
 16873  013484  0D02               	mullw	2
 16874  013486  0E0A               	movlw	low _pBDTEntryOut
 16875  013488  24F3               	addwf	prodl,w,c
 16876  01348A  6ED9               	movwf	fsr2l,c
 16877  01348C  0E01               	movlw	high _pBDTEntryOut
 16878  01348E  D00A               	goto	L9
 16879  013490                     i2l5838:
 16880                           
 16881                           ; BSR set to: 13
 16882                           ;usb_device.c: 2167: else
 16883                           ;usb_device.c: 2168: {
 16884                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16885  013490  010D               	movlb	13	; () banked
 16886  013492  5134               	movf	52,w,b	;volatile
 16887  013494  0B0F               	andlw	15
 16888  013496  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16889  013498  502E               	movf	??_USBStdGetStatusHandler,w,c
 16890  01349A  0D02               	mullw	2
 16891  01349C  0E10               	movlw	low _pBDTEntryIn
 16892  01349E  24F3               	addwf	prodl,w,c
 16893  0134A0  6ED9               	movwf	fsr2l,c
 16894  0134A2  0E00               	movlw	high _pBDTEntryIn
 16895  0134A4                     L9:
 16896  0134A4  20F4               	addwfc	prodh,w,c
 16897  0134A6  6EDA               	movwf	fsr2h,c
 16898  0134A8  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 16899  0134AC  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 16900                           
 16901                           ; BSR set to: 13
 16902                           ;usb_device.c: 2170: }
 16903                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 16904                           
 16905                           ; BSR set to: 13
 16906  0134B0  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16907  0134B4  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16908  0134B8  AEDF               	btfss	indf2,7,c
 16909  0134BA  D016               	goto	i2l298
 16910                           
 16911                           ; BSR set to: 13
 16912  0134BC  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16913  0134C0  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16914  0134C4  A4DF               	btfss	indf2,2,c
 16915  0134C6  D010               	goto	i2l298
 16916                           
 16917                           ; BSR set to: 13
 16918                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 16919  0134C8  0E01               	movlw	1
 16920  0134CA  010D               	movlb	13	; () banked
 16921  0134CC  6F38               	movwf	56,b	;volatile
 16922                           
 16923                           ; BSR set to: 13
 16924                           ;usb_device.c: 2175: }
 16925                           ;usb_device.c: 2176: }
 16926                           
 16927                           ; BSR set to: 13
 16928                           ;usb_device.c: 2174: break;
 16929  0134CE  D00C               	goto	i2l298
 16930  0134D0                     i2l5848:
 16931                           
 16932                           ; BSR set to: 13
 16933  0134D0  010D               	movlb	13	; () banked
 16934  0134D2  5130               	movf	48,w,b	;volatile
 16935  0134D4  0B1F               	andlw	31
 16936                           
 16937                           ; Switch size 1, requested type "space"
 16938                           ; Number of cases is 3, Range of values is 0 to 2
 16939                           ; switch strategies available:
 16940                           ; Name         Instructions Cycles
 16941                           ; simple_byte           10     6 (average)
 16942                           ;	Chosen strategy is simple_byte
 16943  0134D6  0A00               	xorlw	0	; case 0
 16944  0134D8  B4D8               	btfsc	status,2,c
 16945  0134DA  D7C2               	goto	i2l295
 16946  0134DC  0A01               	xorlw	1	; case 1
 16947  0134DE  B4D8               	btfsc	status,2,c
 16948  0134E0  D7C6               	goto	i2l299
 16949  0134E2  0A03               	xorlw	3	; case 2
 16950  0134E4  B4D8               	btfsc	status,2,c
 16951  0134E6  D7C5               	goto	i2l300
 16952  0134E8                     i2l298:
 16953                           
 16954                           ; BSR set to: 13
 16955                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 16956  0134E8  AE0D               	btfss	_inPipes+3,7,c	;volatile
 16957  0134EA  0012               	return	
 16958                           
 16959                           ; BSR set to: 13
 16960                           ;usb_device.c: 2179: {
 16961                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 16962  0134EC  0E38               	movlw	56
 16963  0134EE  6E0A               	movwf	_inPipes,c	;volatile
 16964  0134F0  0E0D               	movlw	13
 16965  0134F2  6E0B               	movwf	_inPipes+1,c	;volatile
 16966                           
 16967                           ; BSR set to: 13
 16968                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16969  0134F4  800D               	bsf	_inPipes+3,0,c	;volatile
 16970                           
 16971                           ; BSR set to: 13
 16972                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 16973  0134F6  0E02               	movlw	2
 16974  0134F8  6E0E               	movwf	_inPipes+4,c	;volatile
 16975  0134FA  0012               	return	
 16976  0134FC                     __end_of_USBStdGetStatusHandler:
 16977                           	opt stack 0
 16978                           pclatu	equ	0xFFB
 16979                           pclath	equ	0xFFA
 16980                           tblptru	equ	0xFF8
 16981                           tblptrh	equ	0xFF7
 16982                           tblptrl	equ	0xFF6
 16983                           tablat	equ	0xFF5
 16984                           prodh	equ	0xFF4
 16985                           prodl	equ	0xFF3
 16986                           intcon	equ	0xFF2
 16987                           intcon2	equ	0xFF1
 16988                           postinc0	equ	0xFEE
 16989                           fsr0h	equ	0xFEA
 16990                           fsr0l	equ	0xFE9
 16991                           wreg	equ	0xFE8
 16992                           indf1	equ	0xFE7
 16993                           postinc1	equ	0xFE6
 16994                           postdec1	equ	0xFE5
 16995                           fsr1h	equ	0xFE2
 16996                           fsr1l	equ	0xFE1
 16997                           indf2	equ	0xFDF
 16998                           postinc2	equ	0xFDE
 16999                           postdec2	equ	0xFDD
 17000                           plusw2	equ	0xFDB
 17001                           fsr2h	equ	0xFDA
 17002                           fsr2l	equ	0xFD9
 17003                           status	equ	0xFD8
 17004                           
 17005 ;; *************** function _USBStdGetDscHandler *****************
 17006 ;; Defined at:
 17007 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 17008 ;; Parameters:    Size  Location     Type
 17009 ;;		None
 17010 ;; Auto vars:     Size  Location     Type
 17011 ;;		None
 17012 ;; Return value:  Size  Location     Type
 17013 ;;		None               void
 17014 ;; Registers used:
 17015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17016 ;; Tracked objects:
 17017 ;;		On entry : 0/0
 17018 ;;		On exit  : 0/0
 17019 ;;		Unchanged: 0/0
 17020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17025 ;;Total ram usage:        2 bytes
 17026 ;; Hardware stack levels used:    1
 17027 ;; This function calls:
 17028 ;;		Nothing
 17029 ;; This function is called by:
 17030 ;;		_USBCheckStdRequest
 17031 ;; This function uses a non-reentrant model
 17032 ;;
 17033                           
 17034                           	psect	text83
 17035  011B32                     __ptext83:
 17036                           	opt stack 0
 17037  011B32                     _USBStdGetDscHandler:
 17038                           	opt stack 15
 17039                           
 17040                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 17041                           
 17042                           ; BSR set to: 13
 17043                           ;incstack = 0
 17044  011B32  0E80               	movlw	128
 17045  011B34  010D               	movlb	13	; () banked
 17046  011B36  1930               	xorwf	48,w,b	;volatile
 17047  011B38  A4D8               	btfss	status,2,c
 17048  011B3A  0012               	return	
 17049                           
 17050                           ; BSR set to: 13
 17051                           ;usb_device.c: 2046: {
 17052                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 17053  011B3C  0EC0               	movlw	192
 17054  011B3E  6E0D               	movwf	_inPipes+3,c	;volatile
 17055                           
 17056                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 17057  011B40  D085               	goto	i2l5826
 17058  011B42                     i2l5800:
 17059                           
 17060                           ; BSR set to: 13
 17061                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 17062  011B42  0E42               	movlw	low _device_dsc
 17063  011B44  6E0A               	movwf	_inPipes,c	;volatile
 17064  011B46  0EFE               	movlw	high _device_dsc
 17065  011B48  6E0B               	movwf	_inPipes+1,c	;volatile
 17066                           
 17067                           ; BSR set to: 13
 17068                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 17069  011B4A  0E00               	movlw	0
 17070  011B4C  6E0F               	movwf	_inPipes+5,c	;volatile
 17071  011B4E  0E12               	movlw	18
 17072  011B50  6E0E               	movwf	_inPipes+4,c	;volatile
 17073                           
 17074                           ;usb_device.c: 2058: break;
 17075  011B52  0012               	return	
 17076  011B54                     i2l5804:
 17077                           
 17078                           ; BSR set to: 13
 17079                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 17080  011B54  010D               	movlb	13	; () banked
 17081  011B56  5132               	movf	50,w,b	;volatile
 17082  011B58  A4D8               	btfss	status,2,c
 17083  011B5A  D043               	goto	i2l5812
 17084                           
 17085                           ; BSR set to: 13
 17086                           ;usb_device.c: 2064: {
 17087                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 17088  011B5C  010D               	movlb	13	; () banked
 17089  011B5E  5132               	movf	50,w,b	;volatile
 17090  011B60  0D02               	mullw	2
 17091  011B62  0E79               	movlw	low _USB_CD_Ptr
 17092  011B64  24F3               	addwf	prodl,w,c
 17093  011B66  6EF6               	movwf	tblptrl,c
 17094  011B68  0EFD               	movlw	high _USB_CD_Ptr
 17095  011B6A  20F4               	addwfc	prodh,w,c
 17096  011B6C  6EF7               	movwf	tblptrh,c
 17097  011B6E                     	if	1	;There are 3 active tblptr bytes
 17098  011B6E  6AF8               	clrf	tblptru,c
 17099  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
 17100  011B72  22F8               	addwfc	tblptru,f,c
 17101  011B74                     	endif
 17102  011B74  0009               	tblrd		*+
 17103  011B76  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17104  011B7A  000A               	tblrd		*-
 17105  011B7C  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17106                           
 17107                           ; BSR set to: 13
 17108                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 17109  011B80  0E02               	movlw	2
 17110  011B82  240A               	addwf	_inPipes,w,c	;volatile
 17111  011B84  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17112  011B86  0E00               	movlw	0
 17113  011B88  200B               	addwfc	_inPipes+1,w,c	;volatile
 17114  011B8A  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17115  011B8C  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17116  011B90  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17117  011B94  0E00               	movlw	low (__mediumconst shr (0+16))
 17118  011B96  6EF8               	movwf	tblptru,c
 17119  011B98  0E0E               	movlw	(high __ramtop+-1)
 17120  011B9A  64F7               	cpfsgt	tblptrh,c
 17121  011B9C  D003               	bra	i2u469_47
 17122  011B9E  0008               	tblrd		*
 17123  011BA0  50F5               	movf	tablat,w,c
 17124  011BA2  D005               	bra	i2u469_40
 17125  011BA4                     i2u469_47:
 17126  011BA4  CFF6 FFE1          	movff	tblptrl,fsr1l
 17127  011BA8  CFF7 FFE2          	movff	tblptrh,fsr1h
 17128  011BAC  50E7               	movf	indf1,w,c
 17129  011BAE                     i2u469_40:
 17130  011BAE  6E0E               	movwf	_inPipes+4,c	;volatile
 17131                           
 17132                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 17133  011BB0  0E03               	movlw	3
 17134  011BB2  240A               	addwf	_inPipes,w,c	;volatile
 17135  011BB4  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17136  011BB6  0E00               	movlw	0
 17137  011BB8  200B               	addwfc	_inPipes+1,w,c	;volatile
 17138  011BBA  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17139  011BBC  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17140  011BC0  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17141  011BC4  0E00               	movlw	low (__mediumconst shr (0+16))
 17142  011BC6  6EF8               	movwf	tblptru,c
 17143  011BC8  0E0E               	movlw	(high __ramtop+-1)
 17144  011BCA  64F7               	cpfsgt	tblptrh,c
 17145  011BCC  D003               	bra	i2u470_47
 17146  011BCE  0008               	tblrd		*
 17147  011BD0  50F5               	movf	tablat,w,c
 17148  011BD2  D005               	bra	i2u470_40
 17149  011BD4                     i2u470_47:
 17150  011BD4  CFF6 FFE1          	movff	tblptrl,fsr1l
 17151  011BD8  CFF7 FFE2          	movff	tblptrh,fsr1h
 17152  011BDC  50E7               	movf	indf1,w,c
 17153  011BDE                     i2u470_40:
 17154  011BDE  6E0F               	movwf	_inPipes+5,c	;volatile
 17155                           
 17156                           ;usb_device.c: 2076: }
 17157  011BE0  0012               	return	
 17158  011BE2                     i2l5812:
 17159                           
 17160                           ;usb_device.c: 2077: else
 17161                           ;usb_device.c: 2078: {
 17162                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 17163  011BE2  0E00               	movlw	0
 17164  011BE4  6E0D               	movwf	_inPipes+3,c	;volatile
 17165                           
 17166                           ;usb_device.c: 2080: }
 17167                           ;usb_device.c: 2081: break;
 17168  011BE6  0012               	return	
 17169  011BE8                     i2l5814:
 17170                           
 17171                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 17172  011BE8  0E03               	movlw	3
 17173  011BEA  010D               	movlb	13	; () banked
 17174  011BEC  6132               	cpfslt	50,b	;volatile
 17175  011BEE  D028               	goto	i2l5820
 17176                           
 17177                           ; BSR set to: 13
 17178                           ;usb_device.c: 2087: {
 17179                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 17180  011BF0  010D               	movlb	13	; () banked
 17181  011BF2  5132               	movf	50,w,b	;volatile
 17182  011BF4  0D02               	mullw	2
 17183  011BF6  0E73               	movlw	low _USB_SD_Ptr
 17184  011BF8  24F3               	addwf	prodl,w,c
 17185  011BFA  6EF6               	movwf	tblptrl,c
 17186  011BFC  0EFD               	movlw	high _USB_SD_Ptr
 17187  011BFE  20F4               	addwfc	prodh,w,c
 17188  011C00  6EF7               	movwf	tblptrh,c
 17189  011C02                     	if	1	;There are 3 active tblptr bytes
 17190  011C02  6AF8               	clrf	tblptru,c
 17191  011C04  0E00               	movlw	low (__mediumconst shr (0+16))
 17192  011C06  22F8               	addwfc	tblptru,f,c
 17193  011C08                     	endif
 17194  011C08  0009               	tblrd		*+
 17195  011C0A  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17196  011C0E  000A               	tblrd		*-
 17197  011C10  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17198                           
 17199                           ; BSR set to: 13
 17200                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 17201  011C14  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17202  011C18  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17203  011C1C  0E00               	movlw	low (__mediumconst shr (0+16))
 17204  011C1E  6EF8               	movwf	tblptru,c
 17205  011C20  0E0E               	movlw	(high __ramtop+-1)
 17206  011C22  64F7               	cpfsgt	tblptrh,c
 17207  011C24  D003               	bra	i2u472_47
 17208  011C26  0008               	tblrd		*
 17209  011C28  50F5               	movf	tablat,w,c
 17210  011C2A  D005               	bra	i2u472_40
 17211  011C2C                     i2u472_47:
 17212  011C2C  CFF6 FFE1          	movff	tblptrl,fsr1l
 17213  011C30  CFF7 FFE2          	movff	tblptrh,fsr1h
 17214  011C34  50E7               	movf	indf1,w,c
 17215  011C36                     i2u472_40:
 17216  011C36  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17217  011C38  502E               	movf	??_USBStdGetDscHandler,w,c
 17218  011C3A  6E0E               	movwf	_inPipes+4,c	;volatile
 17219  011C3C  6A0F               	clrf	_inPipes+5,c	;volatile
 17220                           
 17221                           ;usb_device.c: 2092: }
 17222  011C3E  0012               	return	
 17223  011C40                     i2l5820:
 17224                           
 17225                           ;usb_device.c: 2102: else
 17226                           ;usb_device.c: 2103: {
 17227                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 17228  011C40  0E00               	movlw	0
 17229  011C42  6E0D               	movwf	_inPipes+3,c	;volatile
 17230                           
 17231                           ;usb_device.c: 2105: }
 17232                           ;usb_device.c: 2106: break;
 17233  011C44  0012               	return	
 17234  011C46                     i2l5822:
 17235                           
 17236                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 17237  011C46  0E00               	movlw	0
 17238  011C48  6E0D               	movwf	_inPipes+3,c	;volatile
 17239                           
 17240                           ;usb_device.c: 2110: }
 17241                           
 17242                           ;usb_device.c: 2109: break;
 17243  011C4A  0012               	return	
 17244  011C4C                     i2l5826:
 17245  011C4C  010D               	movlb	13	; () banked
 17246  011C4E  5133               	movf	51,w,b	;volatile
 17247                           
 17248                           ; Switch size 1, requested type "space"
 17249                           ; Number of cases is 3, Range of values is 1 to 3
 17250                           ; switch strategies available:
 17251                           ; Name         Instructions Cycles
 17252                           ; simple_byte           10     6 (average)
 17253                           ;	Chosen strategy is simple_byte
 17254  011C50  0A01               	xorlw	1	; case 1
 17255  011C52  B4D8               	btfsc	status,2,c
 17256  011C54  D776               	goto	i2l5800
 17257  011C56  0A03               	xorlw	3	; case 2
 17258  011C58  B4D8               	btfsc	status,2,c
 17259  011C5A  D77C               	goto	i2l5804
 17260  011C5C  0A01               	xorlw	1	; case 3
 17261  011C5E  B4D8               	btfsc	status,2,c
 17262  011C60  D7C3               	goto	i2l5814
 17263  011C62  D7F1               	goto	i2l5822
 17264  011C64                     __end_of_USBStdGetDscHandler:
 17265                           	opt stack 0
 17266                           pclatu	equ	0xFFB
 17267                           pclath	equ	0xFFA
 17268                           tblptru	equ	0xFF8
 17269                           tblptrh	equ	0xFF7
 17270                           tblptrl	equ	0xFF6
 17271                           tablat	equ	0xFF5
 17272                           prodh	equ	0xFF4
 17273                           prodl	equ	0xFF3
 17274                           intcon	equ	0xFF2
 17275                           intcon2	equ	0xFF1
 17276                           postinc0	equ	0xFEE
 17277                           fsr0h	equ	0xFEA
 17278                           fsr0l	equ	0xFE9
 17279                           wreg	equ	0xFE8
 17280                           indf1	equ	0xFE7
 17281                           postinc1	equ	0xFE6
 17282                           postdec1	equ	0xFE5
 17283                           fsr1h	equ	0xFE2
 17284                           fsr1l	equ	0xFE1
 17285                           indf2	equ	0xFDF
 17286                           postinc2	equ	0xFDE
 17287                           postdec2	equ	0xFDD
 17288                           plusw2	equ	0xFDB
 17289                           fsr2h	equ	0xFDA
 17290                           fsr2l	equ	0xFD9
 17291                           status	equ	0xFD8
 17292                           
 17293 ;; *************** function _USBStdFeatureReqHandler *****************
 17294 ;; Defined at:
 17295 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 17296 ;; Parameters:    Size  Location     Type
 17297 ;;		None
 17298 ;; Auto vars:     Size  Location     Type
 17299 ;;  p               2   24[COMRAM] PTR struct __BDT
 17300 ;;		 -> NULL(0), BDT(48), 
 17301 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 17302 ;;		 -> UEP0(1), 
 17303 ;;  current_ep_d    1   23[COMRAM] struct .
 17304 ;; Return value:  Size  Location     Type
 17305 ;;		None               void
 17306 ;; Registers used:
 17307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17308 ;; Tracked objects:
 17309 ;;		On entry : 0/0
 17310 ;;		On exit  : 0/0
 17311 ;;		Unchanged: 0/0
 17312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17314 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17315 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17317 ;;Total ram usage:        6 bytes
 17318 ;; Hardware stack levels used:    1
 17319 ;; Hardware stack levels required when called:    4
 17320 ;; This function calls:
 17321 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17322 ;; This function is called by:
 17323 ;;		_USBCheckStdRequest
 17324 ;; This function uses a non-reentrant model
 17325 ;;
 17326                           
 17327                           	psect	text84
 17328  010DFE                     __ptext84:
 17329                           	opt stack 0
 17330  010DFE                     _USBStdFeatureReqHandler:
 17331                           	opt stack 11
 17332                           
 17333                           ;usb_device.c: 2759: BDT_ENTRY *p;
 17334                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 17335                           ;usb_device.c: 2764: unsigned char* pUEP;
 17336                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 17337                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 17338                           
 17339                           ;incstack = 0
 17340  010DFE  010D               	movlb	13	; () banked
 17341  010E00  0532               	decf	50,w,b	;volatile
 17342  010E02  A4D8               	btfss	status,2,c
 17343  010E04  D010               	goto	i2l374
 17344                           
 17345                           ; BSR set to: 13
 17346  010E06  010D               	movlb	13	; () banked
 17347  010E08  5130               	movf	48,w,b	;volatile
 17348  010E0A  0B1F               	andlw	31
 17349  010E0C  0900               	iorlw	0
 17350  010E0E  A4D8               	btfss	status,2,c
 17351  010E10  D00A               	goto	i2l374
 17352                           
 17353                           ; BSR set to: 13
 17354                           ;usb_device.c: 2804: {
 17355                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 17356  010E12  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17357                           
 17358                           ; BSR set to: 13
 17359                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 17360  010E14  0E03               	movlw	3
 17361  010E16  010D               	movlb	13	; () banked
 17362  010E18  1931               	xorwf	49,w,b	;volatile
 17363  010E1A  A4D8               	btfss	status,2,c
 17364  010E1C  D002               	goto	i2l5866
 17365                           
 17366                           ; BSR set to: 13
 17367                           ;usb_device.c: 2807: RemoteWakeup = 1;
 17368  010E1E  0E01               	movlw	1
 17369  010E20  D001               	goto	L10
 17370  010E22                     i2l5866:
 17371                           
 17372                           ; BSR set to: 13
 17373                           ;usb_device.c: 2808: else
 17374                           ;usb_device.c: 2809: RemoteWakeup = 0;
 17375  010E22  0E00               	movlw	0
 17376  010E24                     L10:
 17377  010E24  6E1E               	movwf	_RemoteWakeup,c	;volatile
 17378  010E26                     i2l374:
 17379                           
 17380                           ; BSR set to: 13
 17381                           ;usb_device.c: 2810: }
 17382                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 17383                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 17384                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 17385                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 17386  010E26  010D               	movlb	13	; () banked
 17387  010E28  5132               	movf	50,w,b	;volatile
 17388  010E2A  A4D8               	btfss	status,2,c
 17389  010E2C  0012               	return	
 17390                           
 17391                           ; BSR set to: 13
 17392  010E2E  010D               	movlb	13	; () banked
 17393  010E30  5130               	movf	48,w,b	;volatile
 17394  010E32  0B1F               	andlw	31
 17395  010E34  0A02               	xorlw	2
 17396  010E36  A4D8               	btfss	status,2,c
 17397  010E38  0012               	return	
 17398                           
 17399                           ; BSR set to: 13
 17400  010E3A  010D               	movlb	13	; () banked
 17401  010E3C  5134               	movf	52,w,b	;volatile
 17402  010E3E  0B0F               	andlw	15
 17403  010E40  0900               	iorlw	0
 17404  010E42  B4D8               	btfsc	status,2,c
 17405  010E44  0012               	return	
 17406                           
 17407                           ; BSR set to: 13
 17408  010E46  010D               	movlb	13	; () banked
 17409  010E48  5134               	movf	52,w,b	;volatile
 17410  010E4A  0B0F               	andlw	15
 17411  010E4C  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17412  010E4E  0E03               	movlw	3
 17413  010E50  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 17414  010E52  0012               	return	
 17415                           
 17416                           ; BSR set to: 13
 17417  010E54  0E20               	movlw	32
 17418  010E56  1822               	xorwf	_USBDeviceState,w,c	;volatile
 17419  010E58  A4D8               	btfss	status,2,c
 17420  010E5A  0012               	return	
 17421                           
 17422                           ; BSR set to: 13
 17423                           ;usb_device.c: 2817: {
 17424                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 17425  010E5C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17426                           
 17427                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 17428  010E5E  010D               	movlb	13	; () banked
 17429  010E60  BF34               	btfsc	52,7,b	;volatile
 17430  010E62  D01B               	goto	i2l5880
 17431                           
 17432                           ; BSR set to: 13
 17433                           ;usb_device.c: 2824: {
 17434                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17435  010E64  010D               	movlb	13	; () banked
 17436  010E66  5134               	movf	52,w,b	;volatile
 17437  010E68  0B0F               	andlw	15
 17438  010E6A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17439  010E6C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17440  010E6E  0D02               	mullw	2
 17441  010E70  0E0A               	movlw	low _pBDTEntryOut
 17442  010E72  24F3               	addwf	prodl,w,c
 17443  010E74  6ED9               	movwf	fsr2l,c
 17444  010E76  0E01               	movlw	high _pBDTEntryOut
 17445  010E78  20F4               	addwfc	prodh,w,c
 17446  010E7A  6EDA               	movwf	fsr2h,c
 17447  010E7C  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17448  010E80  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17449                           
 17450                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 17451  010E84  010D               	movlb	13	; () banked
 17452  010E86  5134               	movf	52,w,b	;volatile
 17453  010E88  0B0F               	andlw	15
 17454  010E8A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17455  010E8C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17456  010E8E  0D01               	mullw	1
 17457  010E90  0E18               	movlw	low _ep_data_out
 17458  010E92  24F3               	addwf	prodl,w,c
 17459  010E94  6ED9               	movwf	fsr2l,c
 17460  010E96  0E01               	movlw	high _ep_data_out
 17461  010E98  D01A               	goto	L11
 17462  010E9A                     i2l5880:
 17463                           
 17464                           ; BSR set to: 13
 17465                           ;usb_device.c: 2828: else
 17466                           ;usb_device.c: 2829: {
 17467                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17468  010E9A  010D               	movlb	13	; () banked
 17469  010E9C  5134               	movf	52,w,b	;volatile
 17470  010E9E  0B0F               	andlw	15
 17471  010EA0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17472  010EA2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17473  010EA4  0D02               	mullw	2
 17474  010EA6  0E10               	movlw	low _pBDTEntryIn
 17475  010EA8  24F3               	addwf	prodl,w,c
 17476  010EAA  6ED9               	movwf	fsr2l,c
 17477  010EAC  0E00               	movlw	high _pBDTEntryIn
 17478  010EAE  20F4               	addwfc	prodh,w,c
 17479  010EB0  6EDA               	movwf	fsr2h,c
 17480  010EB2  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17481  010EB6  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17482                           
 17483                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 17484  010EBA  010D               	movlb	13	; () banked
 17485  010EBC  5134               	movf	52,w,b	;volatile
 17486  010EBE  0B0F               	andlw	15
 17487  010EC0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17488  010EC2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17489  010EC4  0D01               	mullw	1
 17490  010EC6  0E16               	movlw	low _ep_data_in
 17491  010EC8  24F3               	addwf	prodl,w,c
 17492  010ECA  6ED9               	movwf	fsr2l,c
 17493  010ECC  0E00               	movlw	high _ep_data_in
 17494  010ECE                     L11:
 17495  010ECE  20F4               	addwfc	prodh,w,c
 17496  010ED0  6EDA               	movwf	fsr2h,c
 17497  010ED2  50DF               	movf	indf2,w,c
 17498  010ED4  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 17499                           
 17500                           ; BSR set to: 13
 17501                           ;usb_device.c: 2832: }
 17502                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 17503                           
 17504                           ; BSR set to: 13
 17505  010ED6  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 17506  010ED8  D002               	goto	i2l5886
 17507                           
 17508                           ; BSR set to: 13
 17509                           ;usb_device.c: 2839: {
 17510                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 17511  010EDA  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 17512                           
 17513                           ;usb_device.c: 2841: }
 17514  010EDC  D001               	goto	i2l5888
 17515  010EDE                     i2l5886:
 17516                           
 17517                           ; BSR set to: 13
 17518                           ;usb_device.c: 2842: else
 17519                           ;usb_device.c: 2843: {
 17520                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 17521  010EDE  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 17522  010EE0                     i2l5888:
 17523                           
 17524                           ; BSR set to: 13
 17525                           ;usb_device.c: 2845: }
 17526                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 17527  010EE0  010D               	movlb	13	; () banked
 17528  010EE2  BF34               	btfsc	52,7,b	;volatile
 17529  010EE4  D00B               	goto	i2l5892
 17530                           
 17531                           ; BSR set to: 13
 17532                           ;usb_device.c: 2851: {
 17533                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17534  010EE6  010D               	movlb	13	; () banked
 17535  010EE8  5134               	movf	52,w,b	;volatile
 17536  010EEA  0B0F               	andlw	15
 17537  010EEC  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17538  010EEE  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17539  010EF0  0D02               	mullw	2
 17540  010EF2  0E0A               	movlw	low _pBDTEntryOut
 17541  010EF4  24F3               	addwf	prodl,w,c
 17542  010EF6  6ED9               	movwf	fsr2l,c
 17543  010EF8  0E01               	movlw	high _pBDTEntryOut
 17544  010EFA  D00A               	goto	L12
 17545  010EFC                     i2l5892:
 17546                           
 17547                           ; BSR set to: 13
 17548                           ;usb_device.c: 2854: else
 17549                           ;usb_device.c: 2855: {
 17550                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17551  010EFC  010D               	movlb	13	; () banked
 17552  010EFE  5134               	movf	52,w,b	;volatile
 17553  010F00  0B0F               	andlw	15
 17554  010F02  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17555  010F04  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17556  010F06  0D02               	mullw	2
 17557  010F08  0E10               	movlw	low _pBDTEntryIn
 17558  010F0A  24F3               	addwf	prodl,w,c
 17559  010F0C  6ED9               	movwf	fsr2l,c
 17560  010F0E  0E00               	movlw	high _pBDTEntryIn
 17561  010F10                     L12:
 17562  010F10  20F4               	addwfc	prodh,w,c
 17563  010F12  6EDA               	movwf	fsr2h,c
 17564  010F14  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 17565  010F18  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 17566                           
 17567                           ; BSR set to: 13
 17568                           ;usb_device.c: 2857: }
 17569                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 17570                           
 17571                           ; BSR set to: 13
 17572  010F1C  0E03               	movlw	3
 17573  010F1E  010D               	movlb	13	; () banked
 17574  010F20  1931               	xorwf	49,w,b	;volatile
 17575  010F22  A4D8               	btfss	status,2,c
 17576  010F24  D031               	goto	i2l5908
 17577                           
 17578                           ; BSR set to: 13
 17579                           ;usb_device.c: 2861: {
 17580                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 17581  010F26  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17582  010F2A  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17583  010F2E  AEDF               	btfss	indf2,7,c
 17584  010F30  D01E               	goto	i2l5904
 17585                           
 17586                           ; BSR set to: 13
 17587                           ;usb_device.c: 2863: {
 17588                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 17589  010F32  010D               	movlb	13	; () banked
 17590  010F34  BF34               	btfsc	52,7,b	;volatile
 17591  010F36  D00E               	goto	i2l5902
 17592                           
 17593                           ; BSR set to: 13
 17594                           ;usb_device.c: 2867: {
 17595                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17596  010F38  010D               	movlb	13	; () banked
 17597  010F3A  5134               	movf	52,w,b	;volatile
 17598  010F3C  0B0F               	andlw	15
 17599  010F3E  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17600  010F40  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17601  010F42  0D01               	mullw	1
 17602  010F44  0E18               	movlw	low _ep_data_out
 17603  010F46  24F3               	addwf	prodl,w,c
 17604  010F48  6ED9               	movwf	fsr2l,c
 17605  010F4A  0E01               	movlw	high _ep_data_out
 17606  010F4C  20F4               	addwfc	prodh,w,c
 17607  010F4E  6EDA               	movwf	fsr2h,c
 17608  010F50  0101               	movlb	1	; () banked
 17609  010F52  D00C               	goto	L13
 17610  010F54                     i2l5902:
 17611                           
 17612                           ;usb_device.c: 2870: else
 17613                           ;usb_device.c: 2871: {
 17614                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17615  010F54  010D               	movlb	13	; () banked
 17616  010F56  5134               	movf	52,w,b	;volatile
 17617  010F58  0B0F               	andlw	15
 17618  010F5A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17619  010F5C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17620  010F5E  0D01               	mullw	1
 17621  010F60  0E16               	movlw	low _ep_data_in
 17622  010F62  24F3               	addwf	prodl,w,c
 17623  010F64  6ED9               	movwf	fsr2l,c
 17624  010F66  0E00               	movlw	high _ep_data_in
 17625  010F68  20F4               	addwfc	prodh,w,c
 17626  010F6A  6EDA               	movwf	fsr2h,c
 17627  010F6C                     L13:
 17628  010F6C  82DF               	bsf	indf2,1,c
 17629  010F6E                     i2l5904:
 17630                           
 17631                           ;usb_device.c: 2873: }
 17632                           ;usb_device.c: 2874: }
 17633                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 17634  010F6E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17635  010F72  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17636  010F76  0E00               	movlw	0
 17637  010F78  84DB               	bsf	plusw2,2,c
 17638                           
 17639                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 17640  010F7A  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17641  010F7E  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17642  010F82  0E00               	movlw	0
 17643  010F84  8EDB               	bsf	plusw2,7,c
 17644                           
 17645                           ;usb_device.c: 2879: }
 17646  010F86  0012               	return	
 17647  010F88                     i2l5908:
 17648                           
 17649                           ;usb_device.c: 2880: else
 17650                           ;usb_device.c: 2881: {
 17651                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17652  010F88  0E04               	movlw	4
 17653  010F8A  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 17654                           
 17655                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 17656  010F8C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17657  010F90  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17658  010F94  AEDF               	btfss	indf2,7,c
 17659  010F96  D01B               	goto	i2l5918
 17660                           
 17661                           ;usb_device.c: 2888: {
 17662                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 17663  010F98  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17664  010F9C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17665  010FA0  0E7F               	movlw	127
 17666  010FA2  16DF               	andwf	indf2,f,c
 17667                           
 17668                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 17669  010FA4  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17670  010FA8  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17671  010FAC  0E00               	movlw	0
 17672  010FAE  8CDB               	bsf	plusw2,6,c
 17673                           
 17674                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17675  010FB0  0E00               	movlw	0
 17676  010FB2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17677  010FB4  0E05               	movlw	5
 17678  010FB6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17679  010FB8  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17680  010FBC  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17681  010FC0  0E00               	movlw	0
 17682  010FC2  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17683  010FC4  0E02               	movlw	2
 17684  010FC6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17685  010FC8  EC8B  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17686                           
 17687                           ;usb_device.c: 2894: }
 17688  010FCC  D006               	goto	i2l5920
 17689  010FCE                     i2l5918:
 17690                           
 17691                           ;usb_device.c: 2895: else
 17692                           ;usb_device.c: 2896: {
 17693                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 17694  010FCE  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17695  010FD2  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17696  010FD6  0E00               	movlw	0
 17697  010FD8  8CDB               	bsf	plusw2,6,c
 17698  010FDA                     i2l5920:
 17699                           
 17700                           ;usb_device.c: 2899: }
 17701                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17702  010FDA  0E04               	movlw	4
 17703  010FDC  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 17704                           
 17705                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 17706  010FDE  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 17707  010FE0  D006               	goto	i2l393
 17708  010FE2  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17709  010FE6  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17710  010FEA  AEDF               	btfss	indf2,7,c
 17711  010FEC  D033               	goto	i2l5934
 17712  010FEE                     i2l393:
 17713                           
 17714                           ;usb_device.c: 2910: {
 17715                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 17716  010FEE  010D               	movlb	13	; () banked
 17717  010FF0  BF34               	btfsc	52,7,b	;volatile
 17718  010FF2  D00E               	goto	i2l5928
 17719                           
 17720                           ; BSR set to: 13
 17721                           ;usb_device.c: 2912: {
 17722                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17723  010FF4  010D               	movlb	13	; () banked
 17724  010FF6  5134               	movf	52,w,b	;volatile
 17725  010FF8  0B0F               	andlw	15
 17726  010FFA  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17727  010FFC  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17728  010FFE  0D01               	mullw	1
 17729  011000  0E18               	movlw	low _ep_data_out
 17730  011002  24F3               	addwf	prodl,w,c
 17731  011004  6ED9               	movwf	fsr2l,c
 17732  011006  0E01               	movlw	high _ep_data_out
 17733  011008  20F4               	addwfc	prodh,w,c
 17734  01100A  6EDA               	movwf	fsr2h,c
 17735  01100C  0101               	movlb	1	; () banked
 17736  01100E  D00C               	goto	L14
 17737  011010                     i2l5928:
 17738                           
 17739                           ;usb_device.c: 2915: else
 17740                           ;usb_device.c: 2916: {
 17741                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17742  011010  010D               	movlb	13	; () banked
 17743  011012  5134               	movf	52,w,b	;volatile
 17744  011014  0B0F               	andlw	15
 17745  011016  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17746  011018  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17747  01101A  0D01               	mullw	1
 17748  01101C  0E16               	movlw	low _ep_data_in
 17749  01101E  24F3               	addwf	prodl,w,c
 17750  011020  6ED9               	movwf	fsr2l,c
 17751  011022  0E00               	movlw	high _ep_data_in
 17752  011024  20F4               	addwfc	prodh,w,c
 17753  011026  6EDA               	movwf	fsr2h,c
 17754  011028                     L14:
 17755  011028  92DF               	bcf	indf2,1,c
 17756                           
 17757                           ;usb_device.c: 2918: }
 17758                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17759                           
 17760                           ; BSR set to: 13
 17761  01102A  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17762  01102E  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17763  011032  0E3B               	movlw	59
 17764  011034  16DF               	andwf	indf2,f,c
 17765                           
 17766                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17767  011036  0E00               	movlw	0
 17768  011038  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17769  01103A  0E05               	movlw	5
 17770  01103C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17771  01103E  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17772  011042  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17773  011046  0E00               	movlw	0
 17774  011048  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17775  01104A  0E02               	movlw	2
 17776  01104C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17777  01104E  EC8B  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17778                           
 17779                           ;usb_device.c: 2924: }
 17780  011052  D006               	goto	i2l5936
 17781  011054                     i2l5934:
 17782                           
 17783                           ;usb_device.c: 2925: else
 17784                           ;usb_device.c: 2926: {
 17785                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17786  011054  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17787  011058  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17788  01105C  0E3B               	movlw	59
 17789  01105E  16DF               	andwf	indf2,f,c
 17790  011060                     i2l5936:
 17791                           
 17792                           ;usb_device.c: 2929: }
 17793                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 17794  011060  010D               	movlb	13	; () banked
 17795  011062  5134               	movf	52,w,b	;volatile
 17796  011064  0B0F               	andlw	15
 17797  011066  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17798  011068  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17799  01106A  0D01               	mullw	1
 17800  01106C  0E26               	movlw	38
 17801  01106E  24F3               	addwf	prodl,w,c
 17802  011070  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 17803  011072  0E0F               	movlw	15
 17804  011074  20F4               	addwfc	prodh,w,c
 17805  011076  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 17806                           
 17807                           ; BSR set to: 13
 17808                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 17809  011078  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 17810  01107C  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 17811  011080  0EFE               	movlw	254
 17812  011082  16DF               	andwf	indf2,f,c
 17813                           
 17814                           ; BSR set to: 13
 17815  011084  0012               	return	
 17816  011086                     __end_of_USBStdFeatureReqHandler:
 17817                           	opt stack 0
 17818                           pclatu	equ	0xFFB
 17819                           pclath	equ	0xFFA
 17820                           tblptru	equ	0xFF8
 17821                           tblptrh	equ	0xFF7
 17822                           tblptrl	equ	0xFF6
 17823                           tablat	equ	0xFF5
 17824                           prodh	equ	0xFF4
 17825                           prodl	equ	0xFF3
 17826                           intcon	equ	0xFF2
 17827                           intcon2	equ	0xFF1
 17828                           postinc0	equ	0xFEE
 17829                           fsr0h	equ	0xFEA
 17830                           fsr0l	equ	0xFE9
 17831                           wreg	equ	0xFE8
 17832                           indf1	equ	0xFE7
 17833                           postinc1	equ	0xFE6
 17834                           postdec1	equ	0xFE5
 17835                           fsr1h	equ	0xFE2
 17836                           fsr1l	equ	0xFE1
 17837                           indf2	equ	0xFDF
 17838                           postinc2	equ	0xFDE
 17839                           postdec2	equ	0xFDD
 17840                           plusw2	equ	0xFDB
 17841                           fsr2h	equ	0xFDA
 17842                           fsr2l	equ	0xFD9
 17843                           status	equ	0xFD8
 17844                           
 17845 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 17846 ;; Defined at:
 17847 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 17848 ;; Parameters:    Size  Location     Type
 17849 ;;  event           2   12[COMRAM] enum E8545
 17850 ;;  pdata           2   14[COMRAM] PTR void 
 17851 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 17852 ;;  size            2   16[COMRAM] unsigned int 
 17853 ;; Auto vars:     Size  Location     Type
 17854 ;;		None
 17855 ;; Return value:  Size  Location     Type
 17856 ;;                  1    wreg      unsigned char 
 17857 ;; Registers used:
 17858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17859 ;; Tracked objects:
 17860 ;;		On entry : 0/0
 17861 ;;		On exit  : 0/0
 17862 ;;		Unchanged: 0/0
 17863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17864 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17866 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17867 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17868 ;;Total ram usage:        8 bytes
 17869 ;; Hardware stack levels used:    1
 17870 ;; Hardware stack levels required when called:    3
 17871 ;; This function calls:
 17872 ;;		_CDCInitEP
 17873 ;;		_USBCheckCDCRequest
 17874 ;; This function is called by:
 17875 ;;		_USBDeviceTasks
 17876 ;;		_USBStdSetCfgHandler
 17877 ;;		_USBSuspend
 17878 ;;		_USBWakeFromSuspend
 17879 ;;		_USBCtrlTrfSetupHandler
 17880 ;;		_USBCheckStdRequest
 17881 ;;		_USBStdFeatureReqHandler
 17882 ;; This function uses a non-reentrant model
 17883 ;;
 17884                           
 17885                           	psect	text85
 17886  014316                     __ptext85:
 17887                           	opt stack 0
 17888  014316                     _USER_USB_CALLBACK_EVENT_HANDLER:
 17889                           	opt stack 15
 17890                           
 17891                           ;My_usb_cdc.c: 45: switch ((int) event) {
 17892                           
 17893                           ;incstack = 0
 17894  014316  D006               	goto	i2l5530
 17895  014318                     i2l5524:
 17896                           
 17897                           ;My_usb_cdc.c: 47: CDCInitEP();
 17898  014318  ECE6  F09D         	call	_CDCInitEP	;wreg free
 17899                           
 17900                           ;My_usb_cdc.c: 48: break;
 17901  01431C  0012               	return	
 17902  01431E                     i2l5526:
 17903                           
 17904                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 17905  01431E  EC7B  F099         	call	_USBCheckCDCRequest	;wreg free
 17906                           
 17907                           ;My_usb_cdc.c: 52: }
 17908                           
 17909                           ;My_usb_cdc.c: 51: break;
 17910  014322  0012               	return	
 17911  014324                     i2l5530:
 17912  014324  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 17913  014328  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 17914                           
 17915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17916                           ; Switch size 1, requested type "space"
 17917                           ; Number of cases is 1, Range of values is 0 to 0
 17918                           ; switch strategies available:
 17919                           ; Name         Instructions Cycles
 17920                           ; simple_byte            4     3 (average)
 17921                           ;	Chosen strategy is simple_byte
 17922  01432C  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 17923  01432E  0A00               	xorlw	0	; case 0
 17924  014330  A4D8               	btfss	status,2,c
 17925  014332  0012               	return	
 17926                           
 17927                           ; Switch size 1, requested type "space"
 17928                           ; Number of cases is 2, Range of values is 1 to 3
 17929                           ; switch strategies available:
 17930                           ; Name         Instructions Cycles
 17931                           ; simple_byte            7     4 (average)
 17932                           ;	Chosen strategy is simple_byte
 17933  014334  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 17934  014336  0A01               	xorlw	1	; case 1
 17935  014338  B4D8               	btfsc	status,2,c
 17936  01433A  D7EE               	goto	i2l5524
 17937  01433C  0A02               	xorlw	2	; case 3
 17938  01433E  A4D8               	btfss	status,2,c
 17939  014340  0012               	return	
 17940  014342  D7ED               	goto	i2l5526
 17941  014344                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 17942                           	opt stack 0
 17943                           pclatu	equ	0xFFB
 17944                           pclath	equ	0xFFA
 17945                           tblptru	equ	0xFF8
 17946                           tblptrh	equ	0xFF7
 17947                           tblptrl	equ	0xFF6
 17948                           tablat	equ	0xFF5
 17949                           prodh	equ	0xFF4
 17950                           prodl	equ	0xFF3
 17951                           intcon	equ	0xFF2
 17952                           intcon2	equ	0xFF1
 17953                           postinc0	equ	0xFEE
 17954                           fsr0h	equ	0xFEA
 17955                           fsr0l	equ	0xFE9
 17956                           wreg	equ	0xFE8
 17957                           indf1	equ	0xFE7
 17958                           postinc1	equ	0xFE6
 17959                           postdec1	equ	0xFE5
 17960                           fsr1h	equ	0xFE2
 17961                           fsr1l	equ	0xFE1
 17962                           indf2	equ	0xFDF
 17963                           postinc2	equ	0xFDE
 17964                           postdec2	equ	0xFDD
 17965                           plusw2	equ	0xFDB
 17966                           fsr2h	equ	0xFDA
 17967                           fsr2l	equ	0xFD9
 17968                           status	equ	0xFD8
 17969                           
 17970 ;; *************** function _USBCheckCDCRequest *****************
 17971 ;; Defined at:
 17972 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 17973 ;; Parameters:    Size  Location     Type
 17974 ;;		None
 17975 ;; Auto vars:     Size  Location     Type
 17976 ;;		None
 17977 ;; Return value:  Size  Location     Type
 17978 ;;		None               void
 17979 ;; Registers used:
 17980 ;;		wreg, status,2, status,0
 17981 ;; Tracked objects:
 17982 ;;		On entry : 0/0
 17983 ;;		On exit  : 0/0
 17984 ;;		Unchanged: 0/0
 17985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17990 ;;Total ram usage:        0 bytes
 17991 ;; Hardware stack levels used:    1
 17992 ;; This function calls:
 17993 ;;		Nothing
 17994 ;; This function is called by:
 17995 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17996 ;; This function uses a non-reentrant model
 17997 ;;
 17998                           
 17999                           	psect	text86
 18000  0132F6                     __ptext86:
 18001                           	opt stack 0
 18002  0132F6                     _USBCheckCDCRequest:
 18003                           	opt stack 17
 18004                           
 18005                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 18006                           
 18007                           ;incstack = 0
 18008  0132F6  010D               	movlb	13	; () banked
 18009  0132F8  5130               	movf	48,w,b	;volatile
 18010  0132FA  0B1F               	andlw	31
 18011  0132FC  06E8               	decf	wreg,f,c
 18012  0132FE  A4D8               	btfss	status,2,c
 18013  013300  0012               	return	
 18014                           
 18015                           ; BSR set to: 13
 18016                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 18017                           
 18018                           ; BSR set to: 13
 18019                           
 18020                           ; BSR set to: 13
 18021  013302  010D               	movlb	13	; () banked
 18022  013304  3930               	swapf	48,w,b	;volatile
 18023  013306  32E8               	rrcf	wreg,f,c
 18024  013308  0B03               	andlw	3
 18025  01330A  06E8               	decf	wreg,f,c
 18026  01330C  A4D8               	btfss	status,2,c
 18027  01330E  0012               	return	
 18028                           
 18029                           ; BSR set to: 13
 18030                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 18031                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 18032                           
 18033                           ; BSR set to: 13
 18034                           
 18035                           ; BSR set to: 13
 18036  013310  010D               	movlb	13	; () banked
 18037  013312  5134               	movf	52,w,b	;volatile
 18038  013314  B4D8               	btfsc	status,2,c
 18039  013316  D035               	goto	i2l5404
 18040                           
 18041                           ; BSR set to: 13
 18042  013318  010D               	movlb	13	; () banked
 18043  01331A  0534               	decf	52,w,b	;volatile
 18044  01331C  A4D8               	btfss	status,2,c
 18045  01331E  0012               	return	
 18046  013320  D030               	goto	i2l5404
 18047  013322                     i2l5380:
 18048                           
 18049                           ; BSR set to: 13
 18050                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18051  013322  0E43               	movlw	low _dummy_encapsulated_cmd_response
 18052  013324  6E0A               	movwf	_inPipes,c	;volatile
 18053  013326  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18054  013328  6E0B               	movwf	_inPipes+1,c	;volatile
 18055                           
 18056                           ; BSR set to: 13
 18057                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 18058  01332A  0E00               	movlw	0
 18059  01332C  6E0F               	movwf	_inPipes+5,c	;volatile
 18060  01332E  0E08               	movlw	8
 18061  013330  6E0E               	movwf	_inPipes+4,c	;volatile
 18062                           
 18063                           ; BSR set to: 13
 18064                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18065  013332  800D               	bsf	_inPipes+3,0,c	;volatile
 18066                           
 18067                           ; BSR set to: 13
 18068                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 18069  013334  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18070                           
 18071                           ;usb_device_cdc.c: 232: break;
 18072  013336  0012               	return	
 18073  013338                     i2l5388:
 18074                           
 18075                           ; BSR set to: 13
 18076                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18077  013338  0E43               	movlw	low _dummy_encapsulated_cmd_response
 18078  01333A  6E0A               	movwf	_inPipes,c	;volatile
 18079  01333C  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18080  01333E  6E0B               	movwf	_inPipes+1,c	;volatile
 18081                           
 18082                           ; BSR set to: 13
 18083                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 18084  013340  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18085                           
 18086                           ;usb_device_cdc.c: 237: break;
 18087  013342  0012               	return	
 18088  013344                     i2l450:
 18089                           
 18090                           ; BSR set to: 13
 18091                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 18092  013344  CD36 F005          	movff	3382,_outPipes+4	;volatile
 18093  013348  CD37 F006          	movff	3383,_outPipes+5	;volatile
 18094                           
 18095                           ; BSR set to: 13
 18096                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 18097  01334C  0E73               	movlw	low _line_coding
 18098  01334E  6E01               	movwf	_outPipes,c	;volatile
 18099  013350  0E01               	movlw	high _line_coding
 18100  013352  6E02               	movwf	_outPipes+1,c	;volatile
 18101                           
 18102                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 18103  013354  0E00               	movlw	0
 18104  013356  6E07               	movwf	_outPipes+6,c	;volatile
 18105  013358  0E00               	movlw	0
 18106  01335A  6E08               	movwf	_outPipes+7,c	;volatile
 18107  01335C  0E00               	movlw	0
 18108  01335E  6E09               	movwf	_outPipes+8,c	;volatile
 18109                           
 18110                           ; BSR set to: 13
 18111                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 18112  013360  8E04               	bsf	_outPipes+3,7,c	;volatile
 18113                           
 18114                           ;usb_device_cdc.c: 246: break;
 18115  013362  0012               	return	
 18116  013364                     i2l5396:
 18117                           
 18118                           ; BSR set to: 13
 18119                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 18120  013364  0E73               	movlw	low _line_coding
 18121  013366  6E0A               	movwf	_inPipes,c	;volatile
 18122  013368  0E01               	movlw	high _line_coding
 18123  01336A  6E0B               	movwf	_inPipes+1,c	;volatile
 18124                           
 18125                           ; BSR set to: 13
 18126  01336C  0E00               	movlw	0
 18127  01336E  6E0F               	movwf	_inPipes+5,c	;volatile
 18128  013370  0E07               	movlw	7
 18129  013372  6E0E               	movwf	_inPipes+4,c	;volatile
 18130                           
 18131                           ; BSR set to: 13
 18132  013374  0EC1               	movlw	193
 18133  013376  6E0D               	movwf	_inPipes+3,c	;volatile
 18134                           
 18135                           ;usb_device_cdc.c: 253: break;
 18136  013378  0012               	return	
 18137  01337A                     i2l452:
 18138                           
 18139                           ; BSR set to: 13
 18140                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 18141  01337A  CD32 F130          	movff	3378,_control_signal_bitmap	;volatile
 18142                           
 18143                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 18144  01337E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18145                           
 18146                           ; BSR set to: 13
 18147                           ;usb_device_cdc.c: 315: }
 18148                           
 18149                           ; BSR set to: 13
 18150                           ;usb_device_cdc.c: 314: break;
 18151                           
 18152                           ;usb_device_cdc.c: 313: default:
 18153                           
 18154                           ;usb_device_cdc.c: 289: break;
 18155  013380  0012               	return	
 18156  013382                     i2l5404:
 18157                           
 18158                           ; BSR set to: 13
 18159  013382  010D               	movlb	13	; () banked
 18160  013384  5131               	movf	49,w,b	;volatile
 18161                           
 18162                           ; Switch size 1, requested type "space"
 18163                           ; Number of cases is 5, Range of values is 0 to 34
 18164                           ; switch strategies available:
 18165                           ; Name         Instructions Cycles
 18166                           ; simple_byte           16     9 (average)
 18167                           ;	Chosen strategy is simple_byte
 18168  013386  0A00               	xorlw	0	; case 0
 18169  013388  B4D8               	btfsc	status,2,c
 18170  01338A  D7CB               	goto	i2l5380
 18171  01338C  0A01               	xorlw	1	; case 1
 18172  01338E  B4D8               	btfsc	status,2,c
 18173  013390  D7D3               	goto	i2l5388
 18174  013392  0A21               	xorlw	33	; case 32
 18175  013394  B4D8               	btfsc	status,2,c
 18176  013396  D7D6               	goto	i2l450
 18177  013398  0A01               	xorlw	1	; case 33
 18178  01339A  B4D8               	btfsc	status,2,c
 18179  01339C  D7E3               	goto	i2l5396
 18180  01339E  0A03               	xorlw	3	; case 34
 18181  0133A0  A4D8               	btfss	status,2,c
 18182  0133A2  0012               	return	
 18183  0133A4  D7EA               	goto	i2l452
 18184  0133A6                     __end_of_USBCheckCDCRequest:
 18185                           	opt stack 0
 18186                           pclatu	equ	0xFFB
 18187                           pclath	equ	0xFFA
 18188                           tblptru	equ	0xFF8
 18189                           tblptrh	equ	0xFF7
 18190                           tblptrl	equ	0xFF6
 18191                           tablat	equ	0xFF5
 18192                           prodh	equ	0xFF4
 18193                           prodl	equ	0xFF3
 18194                           intcon	equ	0xFF2
 18195                           intcon2	equ	0xFF1
 18196                           postinc0	equ	0xFEE
 18197                           fsr0h	equ	0xFEA
 18198                           fsr0l	equ	0xFE9
 18199                           wreg	equ	0xFE8
 18200                           indf1	equ	0xFE7
 18201                           postinc1	equ	0xFE6
 18202                           postdec1	equ	0xFE5
 18203                           fsr1h	equ	0xFE2
 18204                           fsr1l	equ	0xFE1
 18205                           indf2	equ	0xFDF
 18206                           postinc2	equ	0xFDE
 18207                           postdec2	equ	0xFDD
 18208                           plusw2	equ	0xFDB
 18209                           fsr2h	equ	0xFDA
 18210                           fsr2l	equ	0xFD9
 18211                           status	equ	0xFD8
 18212                           
 18213 ;; *************** function _CDCInitEP *****************
 18214 ;; Defined at:
 18215 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 18216 ;; Parameters:    Size  Location     Type
 18217 ;;		None
 18218 ;; Auto vars:     Size  Location     Type
 18219 ;;		None
 18220 ;; Return value:  Size  Location     Type
 18221 ;;		None               void
 18222 ;; Registers used:
 18223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18224 ;; Tracked objects:
 18225 ;;		On entry : 0/0
 18226 ;;		On exit  : 0/0
 18227 ;;		Unchanged: 0/0
 18228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18233 ;;Total ram usage:        0 bytes
 18234 ;; Hardware stack levels used:    1
 18235 ;; Hardware stack levels required when called:    2
 18236 ;; This function calls:
 18237 ;;		_USBEnableEndpoint
 18238 ;;		i2_USBTransferOnePacket
 18239 ;; This function is called by:
 18240 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18241 ;; This function uses a non-reentrant model
 18242 ;;
 18243                           
 18244                           	psect	text87
 18245  013BCC                     __ptext87:
 18246                           	opt stack 0
 18247  013BCC                     _CDCInitEP:
 18248                           	opt stack 15
 18249                           
 18250                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 18251                           
 18252                           ; BSR set to: 13
 18253                           ;incstack = 0
 18254  013BCC  0E00               	movlw	0
 18255  013BCE  0101               	movlb	1	; () banked
 18256  013BD0  6F73               	movwf	_line_coding& (0+255),b
 18257  013BD2  0E4B               	movlw	75
 18258  013BD4  6F74               	movwf	(_line_coding+1)& (0+255),b
 18259  013BD6  0E00               	movlw	0
 18260  013BD8  6F75               	movwf	(_line_coding+2)& (0+255),b
 18261  013BDA  0E00               	movlw	0
 18262  013BDC  6F76               	movwf	(_line_coding+3)& (0+255),b
 18263                           
 18264                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 18265  013BDE  0E00               	movlw	0
 18266  013BE0  0101               	movlb	1	; () banked
 18267  013BE2  6F77               	movwf	(_line_coding+4)& (0+255),b
 18268                           
 18269                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 18270  013BE4  0E00               	movlw	0
 18271  013BE6  0101               	movlb	1	; () banked
 18272  013BE8  6F78               	movwf	(_line_coding+5)& (0+255),b
 18273                           
 18274                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 18275  013BEA  0E08               	movlw	8
 18276  013BEC  0101               	movlb	1	; () banked
 18277  013BEE  6F79               	movwf	(_line_coding+6)& (0+255),b
 18278                           
 18279                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 18280  013BF0  0E00               	movlw	0
 18281  013BF2  0100               	movlb	0	; () banked
 18282  013BF4  6FD2               	movwf	_cdc_rx_len& (0+255),b
 18283                           
 18284                           ; BSR set to: 0
 18285                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 18286  013BF6  0E1A               	movlw	26
 18287  013BF8  6E36               	movwf	USBEnableEndpoint@options,c
 18288  013BFA  0E01               	movlw	1
 18289  013BFC  ECB1  F0A0         	call	_USBEnableEndpoint
 18290                           
 18291                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 18292  013C00  0E1E               	movlw	30
 18293  013C02  6E36               	movwf	USBEnableEndpoint@options,c
 18294  013C04  0E02               	movlw	2
 18295  013C06  ECB1  F0A0         	call	_USBEnableEndpoint
 18296                           
 18297                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18298  013C0A  0E00               	movlw	0
 18299  013C0C  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 18300  013C0E  0E00               	movlw	low _cdc_data_rx
 18301  013C10  6E2F               	movwf	i2USBTransferOnePacket@data,c
 18302  013C12  0E02               	movlw	high _cdc_data_rx
 18303  013C14  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 18304  013C16  0E40               	movlw	64
 18305  013C18  6E31               	movwf	i2USBTransferOnePacket@len,c
 18306  013C1A  0E02               	movlw	2
 18307  013C1C  EC66  F098         	call	i2_USBTransferOnePacket
 18308  013C20  C02E  F0D0         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 18309  013C24  C02F  F0D1         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18310                           
 18311                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 18312  013C28  0E00               	movlw	0
 18313  013C2A  0101               	movlb	1	; () banked
 18314  013C2C  6F25               	movwf	_CDCDataInHandle& (0+255),b
 18315  013C2E  0E00               	movlw	0
 18316  013C30  0101               	movlb	1	; () banked
 18317  013C32  6F26               	movwf	(_CDCDataInHandle+1)& (0+255),b
 18318                           
 18319                           ; BSR set to: 1
 18320                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 18321  013C34  0E00               	movlw	0
 18322  013C36  6E27               	movwf	_cdc_trf_state,c
 18323                           
 18324                           ; BSR set to: 1
 18325  013C38  0012               	return		;funcret
 18326  013C3A                     __end_of_CDCInitEP:
 18327                           	opt stack 0
 18328                           pclatu	equ	0xFFB
 18329                           pclath	equ	0xFFA
 18330                           tblptru	equ	0xFF8
 18331                           tblptrh	equ	0xFF7
 18332                           tblptrl	equ	0xFF6
 18333                           tablat	equ	0xFF5
 18334                           prodh	equ	0xFF4
 18335                           prodl	equ	0xFF3
 18336                           intcon	equ	0xFF2
 18337                           intcon2	equ	0xFF1
 18338                           postinc0	equ	0xFEE
 18339                           fsr0h	equ	0xFEA
 18340                           fsr0l	equ	0xFE9
 18341                           wreg	equ	0xFE8
 18342                           indf1	equ	0xFE7
 18343                           postinc1	equ	0xFE6
 18344                           postdec1	equ	0xFE5
 18345                           fsr1h	equ	0xFE2
 18346                           fsr1l	equ	0xFE1
 18347                           indf2	equ	0xFDF
 18348                           postinc2	equ	0xFDE
 18349                           postdec2	equ	0xFDD
 18350                           plusw2	equ	0xFDB
 18351                           fsr2h	equ	0xFDA
 18352                           fsr2l	equ	0xFD9
 18353                           status	equ	0xFD8
 18354                           
 18355 ;; *************** function i2_USBTransferOnePacket *****************
 18356 ;; Defined at:
 18357 ;;		line 995 in file "../My_library/usb/usb_device.c"
 18358 ;; Parameters:    Size  Location     Type
 18359 ;;  ep              1    wreg     unsigned char 
 18360 ;;  dir             1    0[COMRAM] unsigned char 
 18361 ;;  data            2    1[COMRAM] PTR unsigned char 
 18362 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18363 ;;  len             1    3[COMRAM] unsigned char 
 18364 ;; Auto vars:     Size  Location     Type
 18365 ;;  ep              1    4[COMRAM] unsigned char 
 18366 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 18367 ;;		 -> NULL(0), BDT(48), 
 18368 ;; Return value:  Size  Location     Type
 18369 ;;                  2    0[COMRAM] PTR void 
 18370 ;; Registers used:
 18371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18372 ;; Tracked objects:
 18373 ;;		On entry : 0/0
 18374 ;;		On exit  : 0/0
 18375 ;;		Unchanged: 0/0
 18376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18378 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18380 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18381 ;;Total ram usage:        7 bytes
 18382 ;; Hardware stack levels used:    1
 18383 ;; This function calls:
 18384 ;;		Nothing
 18385 ;; This function is called by:
 18386 ;;		_CDCInitEP
 18387 ;; This function uses a non-reentrant model
 18388 ;;
 18389                           
 18390                           	psect	text88
 18391  0130CC                     __ptext88:
 18392                           	opt stack 0
 18393  0130CC                     i2_USBTransferOnePacket:
 18394                           	opt stack 16
 18395                           
 18396                           ; BSR set to: 1
 18397                           ;incstack = 0
 18398                           ;i2USBTransferOnePacket@ep stored from wreg
 18399  0130CC  6E32               	movwf	i2USBTransferOnePacket@ep,c
 18400                           
 18401                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18402                           ;usb_device.c: 1000: if(dir != 0)
 18403  0130CE  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18404  0130D0  B4D8               	btfsc	status,2,c
 18405  0130D2  D007               	goto	i2l5340
 18406                           
 18407                           ;usb_device.c: 1001: {
 18408                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18409  0130D4  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18410  0130D6  0D02               	mullw	2
 18411  0130D8  0E10               	movlw	low _pBDTEntryIn
 18412  0130DA  24F3               	addwf	prodl,w,c
 18413  0130DC  6ED9               	movwf	fsr2l,c
 18414  0130DE  0E00               	movlw	high _pBDTEntryIn
 18415  0130E0  D006               	goto	L15
 18416  0130E2                     i2l5340:
 18417                           
 18418                           ;usb_device.c: 1005: else
 18419                           ;usb_device.c: 1006: {
 18420                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18421  0130E2  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18422  0130E4  0D02               	mullw	2
 18423  0130E6  0E0A               	movlw	low _pBDTEntryOut
 18424  0130E8  24F3               	addwf	prodl,w,c
 18425  0130EA  6ED9               	movwf	fsr2l,c
 18426  0130EC  0E01               	movlw	high _pBDTEntryOut
 18427  0130EE                     L15:
 18428  0130EE  20F4               	addwfc	prodh,w,c
 18429  0130F0  6EDA               	movwf	fsr2h,c
 18430  0130F2  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 18431  0130F6  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 18432                           
 18433                           ;usb_device.c: 1009: }
 18434                           ;usb_device.c: 1013: if(handle == 0)
 18435  0130FA  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18436  0130FC  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 18437  0130FE  A4D8               	btfss	status,2,c
 18438  013100  D005               	goto	i2l5348
 18439                           
 18440                           ;usb_device.c: 1014: {
 18441                           ;usb_device.c: 1015: return 0;
 18442  013102  0E00               	movlw	0
 18443  013104  6E2E               	movwf	?i2_USBTransferOnePacket,c
 18444  013106  0E00               	movlw	0
 18445  013108  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 18446  01310A  0012               	return	
 18447  01310C                     i2l5348:
 18448                           
 18449                           ;usb_device.c: 1016: }
 18450                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18451  01310C  EE20 F002          	lfsr	2,2
 18452  013110  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18453  013112  26D9               	addwf	fsr2l,f,c
 18454  013114  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18455  013116  22DA               	addwfc	fsr2h,f,c
 18456  013118  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 18457  01311C  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 18458                           
 18459                           ;usb_device.c: 1030: handle->CNT = len;
 18460  013120  EE20 F001          	lfsr	2,1
 18461  013124  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18462  013126  26D9               	addwf	fsr2l,f,c
 18463  013128  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18464  01312A  22DA               	addwfc	fsr2h,f,c
 18465  01312C  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 18466                           
 18467                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18468  013130  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18469  013134  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18470  013138  0E40               	movlw	64
 18471  01313A  16DF               	andwf	indf2,f,c
 18472                           
 18473                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18474  01313C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18475  013140  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18476  013144  0E00               	movlw	0
 18477  013146  86DB               	bsf	plusw2,3,c
 18478                           
 18479                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18480  013148  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18481  01314C  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18482  013150  0E00               	movlw	0
 18483  013152  8EDB               	bsf	plusw2,7,c
 18484                           
 18485                           ;usb_device.c: 1036: if(dir != 0)
 18486  013154  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18487  013156  B4D8               	btfsc	status,2,c
 18488  013158  D007               	goto	i2l5360
 18489                           
 18490                           ;usb_device.c: 1037: {
 18491                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18492  01315A  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18493  01315C  0D02               	mullw	2
 18494  01315E  0E10               	movlw	low _pBDTEntryIn
 18495  013160  24F3               	addwf	prodl,w,c
 18496  013162  6ED9               	movwf	fsr2l,c
 18497  013164  0E00               	movlw	high _pBDTEntryIn
 18498  013166  D006               	goto	L16
 18499  013168                     i2l5360:
 18500                           
 18501                           ;usb_device.c: 1041: else
 18502                           ;usb_device.c: 1042: {
 18503                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18504  013168  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18505  01316A  0D02               	mullw	2
 18506  01316C  0E0A               	movlw	low _pBDTEntryOut
 18507  01316E  24F3               	addwf	prodl,w,c
 18508  013170  6ED9               	movwf	fsr2l,c
 18509  013172  0E01               	movlw	high _pBDTEntryOut
 18510  013174                     L16:
 18511  013174  20F4               	addwfc	prodh,w,c
 18512  013176  6EDA               	movwf	fsr2h,c
 18513  013178  0E04               	movlw	4
 18514  01317A  1ADF               	xorwf	indf2,f,c
 18515                           
 18516                           ;usb_device.c: 1045: }
 18517                           ;usb_device.c: 1046: return (void*)handle;
 18518  01317C  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 18519  013180  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 18520  013184  0012               	return	
 18521  013186                     __end_ofi2_USBTransferOnePacket:
 18522                           	opt stack 0
 18523                           pclatu	equ	0xFFB
 18524                           pclath	equ	0xFFA
 18525                           tblptru	equ	0xFF8
 18526                           tblptrh	equ	0xFF7
 18527                           tblptrl	equ	0xFF6
 18528                           tablat	equ	0xFF5
 18529                           prodh	equ	0xFF4
 18530                           prodl	equ	0xFF3
 18531                           intcon	equ	0xFF2
 18532                           intcon2	equ	0xFF1
 18533                           postinc0	equ	0xFEE
 18534                           fsr0h	equ	0xFEA
 18535                           fsr0l	equ	0xFE9
 18536                           wreg	equ	0xFE8
 18537                           indf1	equ	0xFE7
 18538                           postinc1	equ	0xFE6
 18539                           postdec1	equ	0xFE5
 18540                           fsr1h	equ	0xFE2
 18541                           fsr1l	equ	0xFE1
 18542                           indf2	equ	0xFDF
 18543                           postinc2	equ	0xFDE
 18544                           postdec2	equ	0xFDD
 18545                           plusw2	equ	0xFDB
 18546                           fsr2h	equ	0xFDA
 18547                           fsr2l	equ	0xFD9
 18548                           status	equ	0xFD8
 18549                           
 18550 ;; *************** function _USBEnableEndpoint *****************
 18551 ;; Defined at:
 18552 ;;		line 878 in file "../My_library/usb/usb_device.c"
 18553 ;; Parameters:    Size  Location     Type
 18554 ;;  ep              1    wreg     unsigned char 
 18555 ;;  options         1    8[COMRAM] unsigned char 
 18556 ;; Auto vars:     Size  Location     Type
 18557 ;;  ep              1   11[COMRAM] unsigned char 
 18558 ;;  p               2    9[COMRAM] PTR unsigned char 
 18559 ;;		 -> UEP0(1), 
 18560 ;; Return value:  Size  Location     Type
 18561 ;;		None               void
 18562 ;; Registers used:
 18563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18564 ;; Tracked objects:
 18565 ;;		On entry : 0/0
 18566 ;;		On exit  : 0/0
 18567 ;;		Unchanged: 0/0
 18568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18569 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18570 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18572 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18573 ;;Total ram usage:        4 bytes
 18574 ;; Hardware stack levels used:    1
 18575 ;; Hardware stack levels required when called:    1
 18576 ;; This function calls:
 18577 ;;		_USBConfigureEndpoint
 18578 ;; This function is called by:
 18579 ;;		_CDCInitEP
 18580 ;; This function uses a non-reentrant model
 18581 ;;
 18582                           
 18583                           	psect	text89
 18584  014162                     __ptext89:
 18585                           	opt stack 0
 18586  014162                     _USBEnableEndpoint:
 18587                           	opt stack 15
 18588                           
 18589                           ;incstack = 0
 18590                           ;USBEnableEndpoint@ep stored from wreg
 18591  014162  6E39               	movwf	USBEnableEndpoint@ep,c
 18592                           
 18593                           ;usb_device.c: 880: unsigned char* p;
 18594                           ;usb_device.c: 884: if(options & 0x04)
 18595  014164  A436               	btfss	USBEnableEndpoint@options,2,c
 18596  014166  D005               	goto	i2l5292
 18597                           
 18598                           ;usb_device.c: 885: {
 18599                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 18600  014168  0E00               	movlw	0
 18601  01416A  6E2E               	movwf	USBConfigureEndpoint@direction,c
 18602  01416C  5039               	movf	USBEnableEndpoint@ep,w,c
 18603  01416E  EC1B  F09B         	call	_USBConfigureEndpoint
 18604  014172                     i2l5292:
 18605                           
 18606                           ;usb_device.c: 887: }
 18607                           ;usb_device.c: 888: if(options & 0x02)
 18608  014172  A236               	btfss	USBEnableEndpoint@options,1,c
 18609  014174  D005               	goto	i2l5296
 18610                           
 18611                           ;usb_device.c: 889: {
 18612                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 18613  014176  0E01               	movlw	1
 18614  014178  6E2E               	movwf	USBConfigureEndpoint@direction,c
 18615  01417A  5039               	movf	USBEnableEndpoint@ep,w,c
 18616  01417C  EC1B  F09B         	call	_USBConfigureEndpoint
 18617  014180                     i2l5296:
 18618                           
 18619                           ;usb_device.c: 891: }
 18620                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 18621  014180  5039               	movf	USBEnableEndpoint@ep,w,c
 18622  014182  0D01               	mullw	1
 18623  014184  0E26               	movlw	38
 18624  014186  24F3               	addwf	prodl,w,c
 18625  014188  6E37               	movwf	USBEnableEndpoint@p,c
 18626  01418A  0E0F               	movlw	15
 18627  01418C  20F4               	addwfc	prodh,w,c
 18628  01418E  6E38               	movwf	USBEnableEndpoint@p+1,c
 18629                           
 18630                           ;usb_device.c: 901: *p = options;
 18631  014190  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 18632  014194  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 18633  014198  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 18634  01419C  0012               	return		;funcret
 18635  01419E                     __end_of_USBEnableEndpoint:
 18636                           	opt stack 0
 18637                           pclatu	equ	0xFFB
 18638                           pclath	equ	0xFFA
 18639                           tblptru	equ	0xFF8
 18640                           tblptrh	equ	0xFF7
 18641                           tblptrl	equ	0xFF6
 18642                           tablat	equ	0xFF5
 18643                           prodh	equ	0xFF4
 18644                           prodl	equ	0xFF3
 18645                           intcon	equ	0xFF2
 18646                           intcon2	equ	0xFF1
 18647                           postinc0	equ	0xFEE
 18648                           fsr0h	equ	0xFEA
 18649                           fsr0l	equ	0xFE9
 18650                           wreg	equ	0xFE8
 18651                           indf1	equ	0xFE7
 18652                           postinc1	equ	0xFE6
 18653                           postdec1	equ	0xFE5
 18654                           fsr1h	equ	0xFE2
 18655                           fsr1l	equ	0xFE1
 18656                           indf2	equ	0xFDF
 18657                           postinc2	equ	0xFDE
 18658                           postdec2	equ	0xFDD
 18659                           plusw2	equ	0xFDB
 18660                           fsr2h	equ	0xFDA
 18661                           fsr2l	equ	0xFD9
 18662                           status	equ	0xFD8
 18663                           
 18664 ;; *************** function _USBConfigureEndpoint *****************
 18665 ;; Defined at:
 18666 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 18667 ;; Parameters:    Size  Location     Type
 18668 ;;  EPNum           1    wreg     unsigned char 
 18669 ;;  direction       1    0[COMRAM] unsigned char 
 18670 ;; Auto vars:     Size  Location     Type
 18671 ;;  EPNum           1    5[COMRAM] unsigned char 
 18672 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 18673 ;;		 -> BDT(48), 
 18674 ;; Return value:  Size  Location     Type
 18675 ;;		None               void
 18676 ;; Registers used:
 18677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18678 ;; Tracked objects:
 18679 ;;		On entry : 0/0
 18680 ;;		On exit  : 0/0
 18681 ;;		Unchanged: 0/0
 18682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18683 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18684 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18686 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18687 ;;Total ram usage:        8 bytes
 18688 ;; Hardware stack levels used:    1
 18689 ;; This function calls:
 18690 ;;		Nothing
 18691 ;; This function is called by:
 18692 ;;		_USBEnableEndpoint
 18693 ;; This function uses a non-reentrant model
 18694 ;;
 18695                           
 18696                           	psect	text90
 18697  013636                     __ptext90:
 18698                           	opt stack 0
 18699  013636                     _USBConfigureEndpoint:
 18700                           	opt stack 15
 18701                           
 18702                           ;incstack = 0
 18703                           ;USBConfigureEndpoint@EPNum stored from wreg
 18704  013636  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 18705                           
 18706                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 18707                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 18708  013638  0E00               	movlw	0
 18709  01363A  6E34               	movwf	USBConfigureEndpoint@handle,c
 18710  01363C  0E0D               	movlw	13
 18711  01363E  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 18712                           
 18713                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 18714  013640  502E               	movf	USBConfigureEndpoint@direction,w,c
 18715  013642  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 18716  013644  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 18717  013646  90D8               	bcf	status,0,c
 18718  013648  362F               	rlcf	??_USBConfigureEndpoint,f,c
 18719  01364A  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 18720  01364C  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 18721  01364E  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 18722  013650  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 18723  013652  90D8               	bcf	status,0,c
 18724  013654  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18725  013656  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18726  013658  90D8               	bcf	status,0,c
 18727  01365A  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18728  01365C  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18729  01365E  502F               	movf	??_USBConfigureEndpoint,w,c
 18730  013660  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 18731  013662  5030               	movf	??_USBConfigureEndpoint+1,w,c
 18732  013664  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 18733  013666  90D8               	bcf	status,0,c
 18734  013668  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18735  01366A  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18736  01366C  90D8               	bcf	status,0,c
 18737  01366E  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18738  013670  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18739  013672  5031               	movf	??_USBConfigureEndpoint+2,w,c
 18740  013674  2634               	addwf	USBConfigureEndpoint@handle,f,c
 18741  013676  5032               	movf	??_USBConfigureEndpoint+3,w,c
 18742  013678  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 18743                           
 18744                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 18745  01367A  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18746  01367E  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18747  013682  9EDF               	bcf	indf2,7,c
 18748                           
 18749                           ;usb_device.c: 1557: if(direction == 0)
 18750  013684  502E               	movf	USBConfigureEndpoint@direction,w,c
 18751  013686  A4D8               	btfss	status,2,c
 18752  013688  D007               	goto	i2l5282
 18753                           
 18754                           ;usb_device.c: 1558: {
 18755                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 18756  01368A  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 18757  01368C  0D02               	mullw	2
 18758  01368E  0E0A               	movlw	low _pBDTEntryOut
 18759  013690  24F3               	addwf	prodl,w,c
 18760  013692  6ED9               	movwf	fsr2l,c
 18761  013694  0E01               	movlw	high _pBDTEntryOut
 18762  013696  D006               	goto	L17
 18763  013698                     i2l5282:
 18764                           
 18765                           ;usb_device.c: 1561: else
 18766                           ;usb_device.c: 1562: {
 18767                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 18768  013698  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 18769  01369A  0D02               	mullw	2
 18770  01369C  0E10               	movlw	low _pBDTEntryIn
 18771  01369E  24F3               	addwf	prodl,w,c
 18772  0136A0  6ED9               	movwf	fsr2l,c
 18773  0136A2  0E00               	movlw	high _pBDTEntryIn
 18774  0136A4                     L17:
 18775  0136A4  20F4               	addwfc	prodh,w,c
 18776  0136A6  6EDA               	movwf	fsr2h,c
 18777  0136A8  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 18778  0136AC  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 18779                           
 18780                           ;usb_device.c: 1564: }
 18781                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 18782  0136B0  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18783  0136B4  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18784  0136B8  9CDF               	bcf	indf2,6,c
 18785                           
 18786                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 18787  0136BA  EE20 F004          	lfsr	2,4
 18788  0136BE  5034               	movf	USBConfigureEndpoint@handle,w,c
 18789  0136C0  26D9               	addwf	fsr2l,f,c
 18790  0136C2  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 18791  0136C4  22DA               	addwfc	fsr2h,f,c
 18792  0136C6  8CDF               	bsf	indf2,6,c
 18793  0136C8  0012               	return		;funcret
 18794  0136CA                     __end_of_USBConfigureEndpoint:
 18795                           	opt stack 0
 18796                           pclatu	equ	0xFFB
 18797                           pclath	equ	0xFFA
 18798                           tblptru	equ	0xFF8
 18799                           tblptrh	equ	0xFF7
 18800                           tblptrl	equ	0xFF6
 18801                           tablat	equ	0xFF5
 18802                           prodh	equ	0xFF4
 18803                           prodl	equ	0xFF3
 18804                           intcon	equ	0xFF2
 18805                           intcon2	equ	0xFF1
 18806                           postinc0	equ	0xFEE
 18807                           fsr0h	equ	0xFEA
 18808                           fsr0l	equ	0xFE9
 18809                           wreg	equ	0xFE8
 18810                           indf1	equ	0xFE7
 18811                           postinc1	equ	0xFE6
 18812                           postdec1	equ	0xFE5
 18813                           fsr1h	equ	0xFE2
 18814                           fsr1l	equ	0xFE1
 18815                           indf2	equ	0xFDF
 18816                           postinc2	equ	0xFDE
 18817                           postdec2	equ	0xFDD
 18818                           plusw2	equ	0xFDB
 18819                           fsr2h	equ	0xFDA
 18820                           fsr2l	equ	0xFD9
 18821                           status	equ	0xFD8
 18822                           
 18823 ;; *************** function _USBCtrlTrfOutHandler *****************
 18824 ;; Defined at:
 18825 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 18826 ;; Parameters:    Size  Location     Type
 18827 ;;		None
 18828 ;; Auto vars:     Size  Location     Type
 18829 ;;		None
 18830 ;; Return value:  Size  Location     Type
 18831 ;;		None               void
 18832 ;; Registers used:
 18833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18834 ;; Tracked objects:
 18835 ;;		On entry : 0/0
 18836 ;;		On exit  : 0/0
 18837 ;;		Unchanged: 0/0
 18838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18843 ;;Total ram usage:        0 bytes
 18844 ;; Hardware stack levels used:    1
 18845 ;; Hardware stack levels required when called:    2
 18846 ;; This function calls:
 18847 ;;		_USBCtrlTrfRxService
 18848 ;; This function is called by:
 18849 ;;		_USBCtrlEPService
 18850 ;; This function uses a non-reentrant model
 18851 ;;
 18852                           
 18853                           	psect	text91
 18854  013EF2                     __ptext91:
 18855                           	opt stack 0
 18856  013EF2                     _USBCtrlTrfOutHandler:
 18857                           	opt stack 15
 18858                           
 18859                           ;usb_device.c: 2543: if(controlTransferState == 2)
 18860                           
 18861                           ;incstack = 0
 18862  013EF2  0E02               	movlw	2
 18863  013EF4  1828               	xorwf	_controlTransferState,w,c	;volatile
 18864  013EF6  A4D8               	btfss	status,2,c
 18865  013EF8  D003               	goto	i2l6390
 18866                           
 18867                           ;usb_device.c: 2544: {
 18868                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 18869  013EFA  EC32  F08E         	call	_USBCtrlTrfRxService	;wreg free
 18870                           
 18871                           ;usb_device.c: 2546: }
 18872  013EFE  0012               	return	
 18873  013F00                     i2l6390:
 18874                           
 18875                           ;usb_device.c: 2547: else
 18876                           ;usb_device.c: 2548: {
 18877                           ;usb_device.c: 2551: controlTransferState = 0;
 18878  013F00  0E00               	movlw	0
 18879  013F02  6E28               	movwf	_controlTransferState,c	;volatile
 18880                           
 18881                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 18882  013F04  501D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 18883  013F06  A4D8               	btfss	status,2,c
 18884  013F08  D01F               	goto	i2l6398
 18885                           
 18886                           ;usb_device.c: 2559: {
 18887                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 18888  013F0A  EE20 F001          	lfsr	2,1
 18889  013F0E  501B               	movf	_pBDTEntryEP0OutNext,w,c
 18890  013F10  26D9               	addwf	fsr2l,f,c
 18891  013F12  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 18892  013F14  22DA               	addwfc	fsr2h,f,c
 18893  013F16  0E08               	movlw	8
 18894  013F18  6EDF               	movwf	indf2,c
 18895                           
 18896                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18897  013F1A  EE20 F002          	lfsr	2,2
 18898  013F1E  501B               	movf	_pBDTEntryEP0OutNext,w,c
 18899  013F20  26D9               	addwf	fsr2l,f,c
 18900  013F22  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 18901  013F24  22DA               	addwfc	fsr2h,f,c
 18902  013F26  0E30               	movlw	48
 18903  013F28  6EDE               	movwf	postinc2,c
 18904  013F2A  0E0D               	movlw	13
 18905  013F2C  6EDD               	movwf	postdec2,c
 18906                           
 18907                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18908  013F2E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18909  013F32  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18910  013F36  0E0C               	movlw	12
 18911  013F38  6EDF               	movwf	indf2,c
 18912                           
 18913                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18914  013F3A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18915  013F3E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18916  013F42  0E00               	movlw	0
 18917  013F44  8EDB               	bsf	plusw2,7,c
 18918                           
 18919                           ;usb_device.c: 2564: }
 18920  013F46  0012               	return	
 18921  013F48                     i2l6398:
 18922                           
 18923                           ;usb_device.c: 2565: else
 18924                           ;usb_device.c: 2566: {
 18925                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 18926  013F48  0E00               	movlw	0
 18927  013F4A  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18928  013F4C  0012               	return	
 18929  013F4E                     __end_of_USBCtrlTrfOutHandler:
 18930                           	opt stack 0
 18931                           pclatu	equ	0xFFB
 18932                           pclath	equ	0xFFA
 18933                           tblptru	equ	0xFF8
 18934                           tblptrh	equ	0xFF7
 18935                           tblptrl	equ	0xFF6
 18936                           tablat	equ	0xFF5
 18937                           prodh	equ	0xFF4
 18938                           prodl	equ	0xFF3
 18939                           intcon	equ	0xFF2
 18940                           intcon2	equ	0xFF1
 18941                           postinc0	equ	0xFEE
 18942                           fsr0h	equ	0xFEA
 18943                           fsr0l	equ	0xFE9
 18944                           wreg	equ	0xFE8
 18945                           indf1	equ	0xFE7
 18946                           postinc1	equ	0xFE6
 18947                           postdec1	equ	0xFE5
 18948                           fsr1h	equ	0xFE2
 18949                           fsr1l	equ	0xFE1
 18950                           indf2	equ	0xFDF
 18951                           postinc2	equ	0xFDE
 18952                           postdec2	equ	0xFDD
 18953                           plusw2	equ	0xFDB
 18954                           fsr2h	equ	0xFDA
 18955                           fsr2l	equ	0xFD9
 18956                           status	equ	0xFD8
 18957                           
 18958 ;; *************** function _USBCtrlTrfRxService *****************
 18959 ;; Defined at:
 18960 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 18961 ;; Parameters:    Size  Location     Type
 18962 ;;		None
 18963 ;; Auto vars:     Size  Location     Type
 18964 ;;  byteToRead      1    1[COMRAM] unsigned char 
 18965 ;;  i               1    0[COMRAM] unsigned char 
 18966 ;; Return value:  Size  Location     Type
 18967 ;;		None               void
 18968 ;; Registers used:
 18969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18970 ;; Tracked objects:
 18971 ;;		On entry : 0/0
 18972 ;;		On exit  : 0/0
 18973 ;;		Unchanged: 0/0
 18974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18979 ;;Total ram usage:        2 bytes
 18980 ;; Hardware stack levels used:    1
 18981 ;; Hardware stack levels required when called:    1
 18982 ;; This function calls:
 18983 ;;		_USBCtrlEPAllowStatusStage
 18984 ;; This function is called by:
 18985 ;;		_USBCtrlTrfOutHandler
 18986 ;; This function uses a non-reentrant model
 18987 ;;
 18988                           
 18989                           	psect	text92
 18990  011C64                     __ptext92:
 18991                           	opt stack 0
 18992  011C64                     _USBCtrlTrfRxService:
 18993                           	opt stack 15
 18994                           
 18995                           ;usb_device.c: 1854: uint8_t byteToRead;
 18996                           ;usb_device.c: 1855: uint8_t i;
 18997                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 18998                           
 18999                           ;incstack = 0
 19000  011C64  EE20 F001          	lfsr	2,1
 19001  011C68  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19002  011C6A  26D9               	addwf	fsr2l,f,c
 19003  011C6C  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19004  011C6E  22DA               	addwfc	fsr2h,f,c
 19005  011C70  50DF               	movf	indf2,w,c
 19006  011C72  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 19007                           
 19008                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 19009  011C74  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19010  011C76  5C05               	subwf	_outPipes+4,w,c	;volatile
 19011  011C78  0E00               	movlw	0
 19012  011C7A  5806               	subwfb	_outPipes+5,w,c	;volatile
 19013  011C7C  A0D8               	btfss	status,0,c
 19014                           
 19015                           ;usb_device.c: 1866: {
 19016                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 19017  011C7E  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19018                           
 19019                           ;usb_device.c: 1868: }
 19020                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 19021  011C82  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19022  011C84  5E05               	subwf	_outPipes+4,f,c	;volatile
 19023  011C86  0E00               	movlw	0
 19024  011C88  5A06               	subwfb	_outPipes+5,f,c	;volatile
 19025                           
 19026                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 19027  011C8A  0E00               	movlw	0
 19028  011C8C  6E2E               	movwf	USBCtrlTrfRxService@i,c
 19029  011C8E  D011               	goto	i2l6246
 19030  011C90                     i2l6240:
 19031                           
 19032                           ;usb_device.c: 1875: {
 19033                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19034  011C90  502E               	movf	USBCtrlTrfRxService@i,w,c
 19035  011C92  0D01               	mullw	1
 19036  011C94  0E38               	movlw	56
 19037  011C96  24F3               	addwf	prodl,w,c
 19038  011C98  6ED9               	movwf	fsr2l,c
 19039  011C9A  0E0D               	movlw	13
 19040  011C9C  20F4               	addwfc	prodh,w,c
 19041  011C9E  6EDA               	movwf	fsr2h,c
 19042  011CA0  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 19043  011CA4  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 19044  011CA8  CFDF FFE7          	movff	indf2,indf1
 19045  011CAC  4A01               	infsnz	_outPipes,f,c	;volatile
 19046  011CAE  2A02               	incf	_outPipes+1,f,c	;volatile
 19047  011CB0  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 19048  011CB2                     i2l6246:
 19049  011CB2  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19050  011CB4  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 19051  011CB6  A0D8               	btfss	status,0,c
 19052  011CB8  D7EB               	goto	i2l6240
 19053                           
 19054                           ;usb_device.c: 1877: }
 19055                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 19056  011CBA  5005               	movf	_outPipes+4,w,c	;volatile
 19057  011CBC  1006               	iorwf	_outPipes+5,w,c	;volatile
 19058  011CBE  B4D8               	btfsc	status,2,c
 19059  011CC0  D032               	goto	i2l6262
 19060                           
 19061                           ;usb_device.c: 1882: {
 19062                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 19063  011CC2  EE20 F001          	lfsr	2,1
 19064  011CC6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19065  011CC8  26D9               	addwf	fsr2l,f,c
 19066  011CCA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19067  011CCC  22DA               	addwfc	fsr2h,f,c
 19068  011CCE  0E08               	movlw	8
 19069  011CD0  6EDF               	movwf	indf2,c
 19070                           
 19071                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19072  011CD2  EE20 F002          	lfsr	2,2
 19073  011CD6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19074  011CD8  26D9               	addwf	fsr2l,f,c
 19075  011CDA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19076  011CDC  22DA               	addwfc	fsr2h,f,c
 19077  011CDE  0E38               	movlw	56
 19078  011CE0  6EDE               	movwf	postinc2,c
 19079  011CE2  0E0D               	movlw	13
 19080  011CE4  6EDD               	movwf	postdec2,c
 19081                           
 19082                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 19083  011CE6  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19084  011CEA  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19085  011CEE  BCDF               	btfsc	indf2,6,c
 19086  011CF0  D00D               	goto	i2l6258
 19087                           
 19088                           ;usb_device.c: 1886: {
 19089                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19090  011CF2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19091  011CF6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19092  011CFA  0E48               	movlw	72
 19093  011CFC  6EDF               	movwf	indf2,c
 19094                           
 19095                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19096  011CFE  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19097  011D02  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19098  011D06  0E00               	movlw	0
 19099  011D08  8EDB               	bsf	plusw2,7,c
 19100                           
 19101                           ;usb_device.c: 1889: }
 19102  011D0A  0012               	return	
 19103  011D0C                     i2l6258:
 19104                           
 19105                           ;usb_device.c: 1890: else
 19106                           ;usb_device.c: 1891: {
 19107                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 19108  011D0C  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19109  011D10  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19110  011D14  0E08               	movlw	8
 19111  011D16  6EDF               	movwf	indf2,c
 19112                           
 19113                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19114  011D18  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19115  011D1C  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19116  011D20  0E00               	movlw	0
 19117  011D22  8EDB               	bsf	plusw2,7,c
 19118                           
 19119                           ;usb_device.c: 1894: }
 19120                           ;usb_device.c: 1895: }
 19121  011D24  0012               	return	
 19122  011D26                     i2l6262:
 19123                           
 19124                           ;usb_device.c: 1896: else
 19125                           ;usb_device.c: 1897: {
 19126                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 19127  011D26  EE20 F001          	lfsr	2,1
 19128  011D2A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19129  011D2C  26D9               	addwf	fsr2l,f,c
 19130  011D2E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19131  011D30  22DA               	addwfc	fsr2h,f,c
 19132  011D32  0E08               	movlw	8
 19133  011D34  6EDF               	movwf	indf2,c
 19134                           
 19135                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19136  011D36  EE20 F002          	lfsr	2,2
 19137  011D3A  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19138  011D3C  26D9               	addwf	fsr2l,f,c
 19139  011D3E  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19140  011D40  22DA               	addwfc	fsr2h,f,c
 19141  011D42  0E30               	movlw	48
 19142  011D44  6EDE               	movwf	postinc2,c
 19143  011D46  0E0D               	movlw	13
 19144  011D48  6EDD               	movwf	postdec2,c
 19145                           
 19146                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 19147  011D4A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19148  011D4E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19149  011D52  0E04               	movlw	4
 19150  011D54  6EDF               	movwf	indf2,c
 19151                           
 19152                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19153  011D56  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19154  011D5A  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19155  011D5E  0E00               	movlw	0
 19156  011D60  8EDB               	bsf	plusw2,7,c
 19157                           
 19158                           ;usb_device.c: 1926: }
 19159                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 19160                           
 19161                           ;usb_device.c: 1915: {
 19162                           ;usb_device.c: 1921: outPipes[0].pFunc();
 19163  011D62  9E04               	bcf	_outPipes+3,7,c	;volatile
 19164                           
 19165                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 19166  011D64  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19167  011D66  A4D8               	btfss	status,2,c
 19168  011D68  0012               	return	
 19169                           
 19170                           ;usb_device.c: 1942: {
 19171                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 19172  011D6A  EC8C  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19173  011D6E  0012               	return	
 19174  011D70                     __end_of_USBCtrlTrfRxService:
 19175                           	opt stack 0
 19176                           pclatu	equ	0xFFB
 19177                           pclath	equ	0xFFA
 19178                           tblptru	equ	0xFF8
 19179                           tblptrh	equ	0xFF7
 19180                           tblptrl	equ	0xFF6
 19181                           tablat	equ	0xFF5
 19182                           prodh	equ	0xFF4
 19183                           prodl	equ	0xFF3
 19184                           intcon	equ	0xFF2
 19185                           intcon2	equ	0xFF1
 19186                           postinc0	equ	0xFEE
 19187                           fsr0h	equ	0xFEA
 19188                           fsr0l	equ	0xFE9
 19189                           wreg	equ	0xFE8
 19190                           indf1	equ	0xFE7
 19191                           postinc1	equ	0xFE6
 19192                           postdec1	equ	0xFE5
 19193                           fsr1h	equ	0xFE2
 19194                           fsr1l	equ	0xFE1
 19195                           indf2	equ	0xFDF
 19196                           postinc2	equ	0xFDE
 19197                           postdec2	equ	0xFDD
 19198                           plusw2	equ	0xFDB
 19199                           fsr2h	equ	0xFDA
 19200                           fsr2l	equ	0xFD9
 19201                           status	equ	0xFD8
 19202                           
 19203 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 19204 ;; Defined at:
 19205 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 19206 ;; Parameters:    Size  Location     Type
 19207 ;;		None
 19208 ;; Auto vars:     Size  Location     Type
 19209 ;;		None
 19210 ;; Return value:  Size  Location     Type
 19211 ;;		None               void
 19212 ;; Registers used:
 19213 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19214 ;; Tracked objects:
 19215 ;;		On entry : 0/0
 19216 ;;		On exit  : 0/0
 19217 ;;		Unchanged: 0/0
 19218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19223 ;;Total ram usage:        0 bytes
 19224 ;; Hardware stack levels used:    1
 19225 ;; This function calls:
 19226 ;;		Nothing
 19227 ;; This function is called by:
 19228 ;;		_USBDeviceTasks
 19229 ;;		_USBCtrlEPServiceComplete
 19230 ;;		_USBCtrlTrfRxService
 19231 ;; This function uses a non-reentrant model
 19232 ;;
 19233                           
 19234                           	psect	text93
 19235  012D18                     __ptext93:
 19236                           	opt stack 0
 19237  012D18                     _USBCtrlEPAllowStatusStage:
 19238                           	opt stack 15
 19239                           
 19240                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 19241                           
 19242                           ;incstack = 0
 19243  012D18  5023               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 19244  012D1A  A4D8               	btfss	status,2,c
 19245  012D1C  0012               	return	
 19246                           
 19247                           ;usb_device.c: 1424: {
 19248                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 19249  012D1E  0E01               	movlw	1
 19250  012D20  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 19251                           
 19252                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 19253  012D22  5024               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 19254  012D24  A4D8               	btfss	status,2,c
 19255  012D26  0012               	return	
 19256                           
 19257                           ;usb_device.c: 1427: {
 19258                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 19259  012D28  0E01               	movlw	1
 19260  012D2A  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 19261                           
 19262                           ;usb_device.c: 1432: if(controlTransferState == 2)
 19263  012D2C  0E02               	movlw	2
 19264  012D2E  1828               	xorwf	_controlTransferState,w,c	;volatile
 19265  012D30  A4D8               	btfss	status,2,c
 19266  012D32  D015               	goto	i2l5716
 19267                           
 19268                           ;usb_device.c: 1433: {
 19269                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 19270  012D34  EE20 F001          	lfsr	2,1
 19271  012D38  5010               	movf	_pBDTEntryIn,w,c
 19272  012D3A  26D9               	addwf	fsr2l,f,c
 19273  012D3C  5011               	movf	_pBDTEntryIn+1,w,c
 19274  012D3E  22DA               	addwfc	fsr2h,f,c
 19275  012D40  0E00               	movlw	0
 19276  012D42  6EDF               	movwf	indf2,c
 19277                           
 19278                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19279  012D44  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19280  012D48  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19281  012D4C  0E48               	movlw	72
 19282  012D4E  6EDF               	movwf	indf2,c
 19283                           
 19284                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19285  012D50  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19286  012D54  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19287  012D58  0E00               	movlw	0
 19288  012D5A  8EDB               	bsf	plusw2,7,c
 19289                           
 19290                           ;usb_device.c: 1437: }
 19291  012D5C  0012               	return	
 19292  012D5E                     i2l5716:
 19293                           
 19294                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 19295  012D5E  0428               	decf	_controlTransferState,w,c	;volatile
 19296  012D60  A4D8               	btfss	status,2,c
 19297  012D62  0012               	return	
 19298                           
 19299                           ;usb_device.c: 1439: {
 19300                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 19301  012D64  0E00               	movlw	0
 19302  012D66  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19303                           
 19304                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 19305  012D68  EE20 F001          	lfsr	2,1
 19306  012D6C  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19307  012D6E  26D9               	addwf	fsr2l,f,c
 19308  012D70  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19309  012D72  22DA               	addwfc	fsr2h,f,c
 19310  012D74  0E08               	movlw	8
 19311  012D76  6EDF               	movwf	indf2,c
 19312                           
 19313                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19314  012D78  EE20 F002          	lfsr	2,2
 19315  012D7C  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19316  012D7E  26D9               	addwf	fsr2l,f,c
 19317  012D80  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19318  012D82  22DA               	addwfc	fsr2h,f,c
 19319  012D84  0E30               	movlw	48
 19320  012D86  6EDE               	movwf	postinc2,c
 19321  012D88  0E0D               	movlw	13
 19322  012D8A  6EDD               	movwf	postdec2,c
 19323                           
 19324                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19325  012D8C  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19326  012D90  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19327  012D94  0E04               	movlw	4
 19328  012D96  6EDF               	movwf	indf2,c
 19329                           
 19330                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19331  012D98  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19332  012D9C  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19333  012DA0  0E00               	movlw	0
 19334  012DA2  8EDB               	bsf	plusw2,7,c
 19335                           
 19336                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 19337  012DA4  0E01               	movlw	1
 19338  012DA6  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19339                           
 19340                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 19341  012DA8  EE20 F001          	lfsr	2,1
 19342  012DAC  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19343  012DAE  26D9               	addwf	fsr2l,f,c
 19344  012DB0  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19345  012DB2  22DA               	addwfc	fsr2h,f,c
 19346  012DB4  0E08               	movlw	8
 19347  012DB6  6EDF               	movwf	indf2,c
 19348                           
 19349                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19350  012DB8  EE20 F002          	lfsr	2,2
 19351  012DBC  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19352  012DBE  26D9               	addwf	fsr2l,f,c
 19353  012DC0  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19354  012DC2  22DA               	addwfc	fsr2h,f,c
 19355  012DC4  0E30               	movlw	48
 19356  012DC6  6EDE               	movwf	postinc2,c
 19357  012DC8  0E0D               	movlw	13
 19358  012DCA  6EDD               	movwf	postdec2,c
 19359                           
 19360                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 19361  012DCC  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19362  012DD0  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19363  012DD4  0E80               	movlw	128
 19364  012DD6  6EDF               	movwf	indf2,c
 19365  012DD8  0012               	return	
 19366  012DDA                     __end_of_USBCtrlEPAllowStatusStage:
 19367                           	opt stack 0
 19368                           pclatu	equ	0xFFB
 19369                           pclath	equ	0xFFA
 19370                           tblptru	equ	0xFF8
 19371                           tblptrh	equ	0xFF7
 19372                           tblptrl	equ	0xFF6
 19373                           tablat	equ	0xFF5
 19374                           prodh	equ	0xFF4
 19375                           prodl	equ	0xFF3
 19376                           intcon	equ	0xFF2
 19377                           intcon2	equ	0xFF1
 19378                           postinc0	equ	0xFEE
 19379                           fsr0h	equ	0xFEA
 19380                           fsr0l	equ	0xFE9
 19381                           wreg	equ	0xFE8
 19382                           indf1	equ	0xFE7
 19383                           postinc1	equ	0xFE6
 19384                           postdec1	equ	0xFE5
 19385                           fsr1h	equ	0xFE2
 19386                           fsr1l	equ	0xFE1
 19387                           indf2	equ	0xFDF
 19388                           postinc2	equ	0xFDE
 19389                           postdec2	equ	0xFDD
 19390                           plusw2	equ	0xFDB
 19391                           fsr2h	equ	0xFDA
 19392                           fsr2l	equ	0xFD9
 19393                           status	equ	0xFD8
 19394                           
 19395 ;; *************** function _USBCtrlTrfInHandler *****************
 19396 ;; Defined at:
 19397 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 19398 ;; Parameters:    Size  Location     Type
 19399 ;;		None
 19400 ;; Auto vars:     Size  Location     Type
 19401 ;;  lastDTS         1    1[COMRAM] unsigned char 
 19402 ;; Return value:  Size  Location     Type
 19403 ;;		None               void
 19404 ;; Registers used:
 19405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19406 ;; Tracked objects:
 19407 ;;		On entry : 0/0
 19408 ;;		On exit  : 0/0
 19409 ;;		Unchanged: 0/0
 19410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19415 ;;Total ram usage:        1 bytes
 19416 ;; Hardware stack levels used:    1
 19417 ;; Hardware stack levels required when called:    1
 19418 ;; This function calls:
 19419 ;;		_USBCtrlTrfTxService
 19420 ;; This function is called by:
 19421 ;;		_USBCtrlEPService
 19422 ;; This function uses a non-reentrant model
 19423 ;;
 19424                           
 19425                           	psect	text94
 19426  013186                     __ptext94:
 19427                           	opt stack 0
 19428  013186                     _USBCtrlTrfInHandler:
 19429                           	opt stack 16
 19430                           
 19431                           ;usb_device.c: 2597: uint8_t lastDTS;
 19432                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 19433                           
 19434                           ;incstack = 0
 19435  013186  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19436  01318A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19437  01318E  0E00               	movlw	0
 19438  013190  BCDF               	btfsc	indf2,6,c
 19439  013192  0E01               	movlw	1
 19440  013194  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 19441                           
 19442                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19443  013196  0E04               	movlw	4
 19444  013198  1A10               	xorwf	_pBDTEntryIn,f,c
 19445                           
 19446                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 19447  01319A  0E08               	movlw	8
 19448  01319C  1822               	xorwf	_USBDeviceState,w,c	;volatile
 19449  01319E  A4D8               	btfss	status,2,c
 19450  0131A0  D00D               	goto	i2l6414
 19451                           
 19452                           ;usb_device.c: 2608: {
 19453                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 19454  0131A2  010D               	movlb	13	; () banked
 19455  0131A4  5132               	movf	50,w,b	;volatile
 19456  0131A6  0B7F               	andlw	127
 19457  0131A8  010F               	movlb	15	; () banked
 19458  0131AA  6F38               	movwf	56,b	;volatile
 19459                           
 19460                           ; BSR set to: 15
 19461                           ;usb_device.c: 2610: if(UADDR != 0u)
 19462  0131AC  010F               	movlb	15	; () banked
 19463  0131AE  5138               	movf	56,w,b	;volatile
 19464  0131B0  B4D8               	btfsc	status,2,c
 19465  0131B2  D002               	goto	i2l6412
 19466                           
 19467                           ; BSR set to: 15
 19468                           ;usb_device.c: 2611: {
 19469                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 19470  0131B4  0E10               	movlw	16
 19471  0131B6  D001               	goto	L18
 19472  0131B8                     i2l6412:
 19473                           
 19474                           ; BSR set to: 15
 19475                           ;usb_device.c: 2614: else
 19476                           ;usb_device.c: 2615: {
 19477                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 19478  0131B8  0E04               	movlw	4
 19479  0131BA                     L18:
 19480  0131BA  6E22               	movwf	_USBDeviceState,c	;volatile
 19481  0131BC                     i2l6414:
 19482                           
 19483                           ;usb_device.c: 2617: }
 19484                           ;usb_device.c: 2618: }
 19485                           ;usb_device.c: 2621: if(controlTransferState == 1)
 19486  0131BC  0428               	decf	_controlTransferState,w,c	;volatile
 19487  0131BE  A4D8               	btfss	status,2,c
 19488  0131C0  D03A               	goto	i2l345
 19489                           
 19490                           ;usb_device.c: 2622: {
 19491                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 19492  0131C2  EE20 F002          	lfsr	2,2
 19493  0131C6  5010               	movf	_pBDTEntryIn,w,c
 19494  0131C8  26D9               	addwf	fsr2l,f,c
 19495  0131CA  5011               	movf	_pBDTEntryIn+1,w,c
 19496  0131CC  22DA               	addwfc	fsr2h,f,c
 19497  0131CE  0E38               	movlw	56
 19498  0131D0  6EDE               	movwf	postinc2,c
 19499  0131D2  0E0D               	movlw	13
 19500  0131D4  6EDD               	movwf	postdec2,c
 19501                           
 19502                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 19503  0131D6  EC56  F095         	call	_USBCtrlTrfTxService	;wreg free
 19504                           
 19505                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 19506  0131DA  0E02               	movlw	2
 19507  0131DC  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 19508  0131DE  A4D8               	btfss	status,2,c
 19509  0131E0  D00D               	goto	i2l6426
 19510                           
 19511                           ;usb_device.c: 2631: {
 19512                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 19513  0131E2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19514  0131E6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19515  0131EA  0E04               	movlw	4
 19516  0131EC  6EDF               	movwf	indf2,c
 19517                           
 19518                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19519  0131EE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19520  0131F2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19521  0131F6  0E00               	movlw	0
 19522  0131F8  8EDB               	bsf	plusw2,7,c
 19523                           
 19524                           ;usb_device.c: 2636: }
 19525  0131FA  0012               	return	
 19526  0131FC                     i2l6426:
 19527                           
 19528                           ;usb_device.c: 2637: else
 19529                           ;usb_device.c: 2638: {
 19530                           ;usb_device.c: 2639: if(lastDTS == 0)
 19531  0131FC  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 19532  0131FE  A4D8               	btfss	status,2,c
 19533  013200  D00D               	goto	i2l6432
 19534                           
 19535                           ;usb_device.c: 2640: {
 19536                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19537  013202  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19538  013206  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19539  01320A  0E48               	movlw	72
 19540  01320C  6EDF               	movwf	indf2,c
 19541                           
 19542                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19543  01320E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19544  013212  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19545  013216  0E00               	movlw	0
 19546  013218  8EDB               	bsf	plusw2,7,c
 19547                           
 19548                           ;usb_device.c: 2643: }
 19549  01321A  0012               	return	
 19550  01321C                     i2l6432:
 19551                           
 19552                           ;usb_device.c: 2644: else
 19553                           ;usb_device.c: 2645: {
 19554                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 19555  01321C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19556  013220  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19557  013224  0E08               	movlw	8
 19558  013226  6EDF               	movwf	indf2,c
 19559                           
 19560                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19561  013228  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19562  01322C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19563  013230  0E00               	movlw	0
 19564  013232  8EDB               	bsf	plusw2,7,c
 19565                           
 19566                           ;usb_device.c: 2648: }
 19567                           ;usb_device.c: 2649: }
 19568                           ;usb_device.c: 2650: }
 19569  013234  0012               	return	
 19570  013236                     i2l345:
 19571                           
 19572                           ;usb_device.c: 2651: else
 19573                           ;usb_device.c: 2652: {
 19574                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 19575  013236  BE04               	btfsc	_outPipes+3,7,c	;volatile
 19576                           
 19577                           ;usb_device.c: 2661: }
 19578                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 19579                           
 19580                           ;usb_device.c: 2659: {
 19581                           ;usb_device.c: 2660: outPipes[0].pFunc();
 19582  013238  9E04               	bcf	_outPipes+3,7,c	;volatile
 19583                           
 19584                           ;usb_device.c: 2663: }
 19585                           ;usb_device.c: 2665: controlTransferState = 0;
 19586  01323A  0E00               	movlw	0
 19587  01323C  6E28               	movwf	_controlTransferState,c	;volatile
 19588  01323E  0012               	return	
 19589  013240                     __end_of_USBCtrlTrfInHandler:
 19590                           	opt stack 0
 19591                           pclatu	equ	0xFFB
 19592                           pclath	equ	0xFFA
 19593                           tblptru	equ	0xFF8
 19594                           tblptrh	equ	0xFF7
 19595                           tblptrl	equ	0xFF6
 19596                           tablat	equ	0xFF5
 19597                           prodh	equ	0xFF4
 19598                           prodl	equ	0xFF3
 19599                           intcon	equ	0xFF2
 19600                           intcon2	equ	0xFF1
 19601                           postinc0	equ	0xFEE
 19602                           fsr0h	equ	0xFEA
 19603                           fsr0l	equ	0xFE9
 19604                           wreg	equ	0xFE8
 19605                           indf1	equ	0xFE7
 19606                           postinc1	equ	0xFE6
 19607                           postdec1	equ	0xFE5
 19608                           fsr1h	equ	0xFE2
 19609                           fsr1l	equ	0xFE1
 19610                           indf2	equ	0xFDF
 19611                           postinc2	equ	0xFDE
 19612                           postdec2	equ	0xFDD
 19613                           plusw2	equ	0xFDB
 19614                           fsr2h	equ	0xFDA
 19615                           fsr2l	equ	0xFD9
 19616                           status	equ	0xFD8
 19617                           
 19618 ;; *************** function _USBCtrlTrfTxService *****************
 19619 ;; Defined at:
 19620 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 19621 ;; Parameters:    Size  Location     Type
 19622 ;;		None
 19623 ;; Auto vars:     Size  Location     Type
 19624 ;;  byteToSend      1    0[COMRAM] unsigned char 
 19625 ;; Return value:  Size  Location     Type
 19626 ;;		None               void
 19627 ;; Registers used:
 19628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19629 ;; Tracked objects:
 19630 ;;		On entry : 0/0
 19631 ;;		On exit  : 0/0
 19632 ;;		Unchanged: 0/0
 19633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19638 ;;Total ram usage:        1 bytes
 19639 ;; Hardware stack levels used:    1
 19640 ;; This function calls:
 19641 ;;		Nothing
 19642 ;; This function is called by:
 19643 ;;		_USBCtrlEPAllowDataStage
 19644 ;;		_USBCtrlTrfInHandler
 19645 ;; This function uses a non-reentrant model
 19646 ;;
 19647                           
 19648                           	psect	text95
 19649  012AAC                     __ptext95:
 19650                           	opt stack 0
 19651  012AAC                     _USBCtrlTrfTxService:
 19652                           	opt stack 14
 19653                           
 19654                           ;usb_device.c: 1773: uint8_t byteToSend;
 19655                           ;usb_device.c: 1777: byteToSend = 8;
 19656                           
 19657                           ;incstack = 0
 19658  012AAC  0E08               	movlw	8
 19659  012AAE  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 19660                           
 19661                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 19662  012AB0  500F               	movf	_inPipes+5,w,c	;volatile
 19663  012AB2  E110               	bnz	i2l5550
 19664  012AB4  0E08               	movlw	8
 19665  012AB6  5C0E               	subwf	_inPipes+4,w,c	;volatile
 19666  012AB8  B0D8               	btfsc	status,0,c
 19667  012ABA  D00C               	goto	i2l5550
 19668                           
 19669                           ;usb_device.c: 1779: {
 19670                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 19671  012ABC  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 19672                           
 19673                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 19674  012AC0  502B               	movf	_shortPacketStatus,w,c	;volatile
 19675  012AC2  A4D8               	btfss	status,2,c
 19676  012AC4  D002               	goto	i2l5546
 19677                           
 19678                           ;usb_device.c: 1788: {
 19679                           ;usb_device.c: 1789: shortPacketStatus = 1;
 19680  012AC6  0E01               	movlw	1
 19681  012AC8  D004               	goto	L19
 19682  012ACA                     i2l5546:
 19683                           
 19684                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 19685  012ACA  042B               	decf	_shortPacketStatus,w,c	;volatile
 19686  012ACC  A4D8               	btfss	status,2,c
 19687  012ACE  D002               	goto	i2l5550
 19688                           
 19689                           ;usb_device.c: 1792: {
 19690                           ;usb_device.c: 1793: shortPacketStatus = 2;
 19691  012AD0  0E02               	movlw	2
 19692  012AD2                     L19:
 19693  012AD2  6E2B               	movwf	_shortPacketStatus,c	;volatile
 19694  012AD4                     i2l5550:
 19695                           
 19696                           ;usb_device.c: 1794: }
 19697                           ;usb_device.c: 1795: }
 19698                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 19699  012AD4  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19700  012AD6  5E0E               	subwf	_inPipes+4,f,c	;volatile
 19701  012AD8  0E00               	movlw	0
 19702  012ADA  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 19703                           
 19704                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 19705  012ADC  EE20 F001          	lfsr	2,1
 19706  012AE0  5010               	movf	_pBDTEntryIn,w,c
 19707  012AE2  26D9               	addwf	fsr2l,f,c
 19708  012AE4  5011               	movf	_pBDTEntryIn+1,w,c
 19709  012AE6  22DA               	addwfc	fsr2h,f,c
 19710  012AE8  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 19711                           
 19712                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 19713  012AEC  0E38               	movlw	56
 19714  012AEE  0101               	movlb	1	; () banked
 19715  012AF0  6F27               	movwf	_pDst& (0+255),b
 19716  012AF2  0E0D               	movlw	13
 19717  012AF4  0101               	movlb	1	; () banked
 19718  012AF6  6F28               	movwf	(_pDst+1)& (0+255),b
 19719                           
 19720                           ; BSR set to: 1
 19721                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 19722  012AF8  A00D               	btfss	_inPipes+3,0,c	;volatile
 19723  012AFA  D01D               	goto	i2l5568
 19724  012AFC  D03C               	goto	i2l5578
 19725  012AFE                     i2l5560:
 19726                           
 19727                           ; BSR set to: 1
 19728                           ;usb_device.c: 1812: {
 19729                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 19730  012AFE  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 19731  012B02  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19732  012B06  0E00               	movlw	low (__mediumconst shr (0+16))
 19733  012B08  6EF8               	movwf	tblptru,c
 19734  012B0A  C127  FFD9         	movff	_pDst,fsr2l
 19735  012B0E  C128  FFDA         	movff	_pDst+1,fsr2h
 19736  012B12  0E0E               	movlw	(high __ramtop+-1)
 19737  012B14  64F7               	cpfsgt	tblptrh,c
 19738  012B16  D003               	bra	i2u438_47
 19739  012B18  0008               	tblrd		*
 19740  012B1A  50F5               	movf	tablat,w,c
 19741  012B1C  D005               	bra	i2u438_40
 19742  012B1E                     i2u438_47:
 19743  012B1E  CFF6 FFE1          	movff	tblptrl,fsr1l
 19744  012B22  CFF7 FFE2          	movff	tblptrh,fsr1h
 19745  012B26  50E7               	movf	indf1,w,c
 19746  012B28                     i2u438_40:
 19747  012B28  6EDF               	movwf	indf2,c
 19748  012B2A  4A0A               	infsnz	_inPipes,f,c	;volatile
 19749  012B2C  2A0B               	incf	_inPipes+1,f,c	;volatile
 19750  012B2E  0101               	movlb	1	; () banked
 19751  012B30  4B27               	infsnz	_pDst& (0+255),f,b
 19752  012B32  2B28               	incf	(_pDst+1)& (0+255),f,b
 19753                           
 19754                           ; BSR set to: 1
 19755                           ;usb_device.c: 1814: byteToSend--;
 19756  012B34  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19757  012B36                     i2l5568:
 19758                           
 19759                           ; BSR set to: 1
 19760  012B36  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19761  012B38  B4D8               	btfsc	status,2,c
 19762  012B3A  0012               	return	
 19763  012B3C  D7E0               	goto	i2l5560
 19764  012B3E                     i2l5570:
 19765                           
 19766                           ; BSR set to: 1
 19767                           ;usb_device.c: 1820: {
 19768                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 19769  012B3E  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 19770  012B42  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19771  012B46  0E00               	movlw	low (__mediumconst shr (0+16))
 19772  012B48  6EF8               	movwf	tblptru,c
 19773  012B4A  C127  FFD9         	movff	_pDst,fsr2l
 19774  012B4E  C128  FFDA         	movff	_pDst+1,fsr2h
 19775  012B52  0E0E               	movlw	(high __ramtop+-1)
 19776  012B54  64F7               	cpfsgt	tblptrh,c
 19777  012B56  D003               	bra	i2u440_47
 19778  012B58  0008               	tblrd		*
 19779  012B5A  50F5               	movf	tablat,w,c
 19780  012B5C  D005               	bra	i2u440_40
 19781  012B5E                     i2u440_47:
 19782  012B5E  CFF6 FFE1          	movff	tblptrl,fsr1l
 19783  012B62  CFF7 FFE2          	movff	tblptrh,fsr1h
 19784  012B66  50E7               	movf	indf1,w,c
 19785  012B68                     i2u440_40:
 19786  012B68  6EDF               	movwf	indf2,c
 19787  012B6A  4A0A               	infsnz	_inPipes,f,c	;volatile
 19788  012B6C  2A0B               	incf	_inPipes+1,f,c	;volatile
 19789  012B6E  0101               	movlb	1	; () banked
 19790  012B70  4B27               	infsnz	_pDst& (0+255),f,b
 19791  012B72  2B28               	incf	(_pDst+1)& (0+255),f,b
 19792                           
 19793                           ; BSR set to: 1
 19794                           ;usb_device.c: 1822: byteToSend--;
 19795  012B74  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19796  012B76                     i2l5578:
 19797                           
 19798                           ; BSR set to: 1
 19799  012B76  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19800  012B78  B4D8               	btfsc	status,2,c
 19801  012B7A  0012               	return	
 19802  012B7C  D7E0               	goto	i2l5570
 19803  012B7E                     __end_of_USBCtrlTrfTxService:
 19804                           	opt stack 0
 19805                           pclatu	equ	0xFFB
 19806                           pclath	equ	0xFFA
 19807                           tblptru	equ	0xFF8
 19808                           tblptrh	equ	0xFF7
 19809                           tblptrl	equ	0xFF6
 19810                           tablat	equ	0xFF5
 19811                           prodh	equ	0xFF4
 19812                           prodl	equ	0xFF3
 19813                           intcon	equ	0xFF2
 19814                           intcon2	equ	0xFF1
 19815                           postinc0	equ	0xFEE
 19816                           fsr0h	equ	0xFEA
 19817                           fsr0l	equ	0xFE9
 19818                           wreg	equ	0xFE8
 19819                           indf1	equ	0xFE7
 19820                           postinc1	equ	0xFE6
 19821                           postdec1	equ	0xFE5
 19822                           fsr1h	equ	0xFE2
 19823                           fsr1l	equ	0xFE1
 19824                           indf2	equ	0xFDF
 19825                           postinc2	equ	0xFDE
 19826                           postdec2	equ	0xFDD
 19827                           plusw2	equ	0xFDB
 19828                           fsr2h	equ	0xFDA
 19829                           fsr2l	equ	0xFD9
 19830                           status	equ	0xFD8
 19831                           
 19832 ;; *************** function _UART_ISR *****************
 19833 ;; Defined at:
 19834 ;;		line 29 in file "../My_library/My_UART.c"
 19835 ;; Parameters:    Size  Location     Type
 19836 ;;		None
 19837 ;; Auto vars:     Size  Location     Type
 19838 ;;  ascii           1   15[COMRAM] unsigned char 
 19839 ;; Return value:  Size  Location     Type
 19840 ;;		None               void
 19841 ;; Registers used:
 19842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19843 ;; Tracked objects:
 19844 ;;		On entry : 0/0
 19845 ;;		On exit  : 0/0
 19846 ;;		Unchanged: 0/0
 19847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19852 ;;Total ram usage:        1 bytes
 19853 ;; Hardware stack levels used:    1
 19854 ;; Hardware stack levels required when called:    2
 19855 ;; This function calls:
 19856 ;;		i2_ringbuf_num
 19857 ;;		i2_ringbuf_pop
 19858 ;;		i2_ringbuf_put
 19859 ;; This function is called by:
 19860 ;;		_ISR
 19861 ;; This function uses a non-reentrant model
 19862 ;;
 19863                           
 19864                           	psect	text96
 19865  014096                     __ptext96:
 19866                           	opt stack 0
 19867  014096                     _UART_ISR:
 19868                           	opt stack 18
 19869                           
 19870                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 19871                           
 19872                           ; BSR set to: 1
 19873                           ;incstack = 0
 19874  014096  B89D               	btfsc	3997,4,c	;volatile
 19875  014098  A89E               	btfss	3998,4,c	;volatile
 19876  01409A  D013               	goto	i2l1257
 19877                           
 19878                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
 19879  01409C  0E53               	movlw	low _uart_tx
 19880  01409E  6E2E               	movwf	i2ringbuf_num@rb,c
 19881  0140A0  0E01               	movlw	high _uart_tx
 19882  0140A2  6E2F               	movwf	i2ringbuf_num@rb+1,c
 19883  0140A4  EC08  F098         	call	i2_ringbuf_num	;wreg free
 19884  0140A8  502E               	movf	?i2_ringbuf_num,w,c
 19885  0140AA  102F               	iorwf	?i2_ringbuf_num+1,w,c
 19886  0140AC  B4D8               	btfsc	status,2,c
 19887  0140AE  D008               	goto	i2l1258
 19888                           
 19889                           ;My_UART.c: 32: TXREG1 = ringbuf_pop(&uart_tx);
 19890  0140B0  0E53               	movlw	low _uart_tx
 19891  0140B2  6E36               	movwf	i2ringbuf_pop@rb,c
 19892  0140B4  0E01               	movlw	high _uart_tx
 19893  0140B6  6E37               	movwf	i2ringbuf_pop@rb+1,c
 19894  0140B8  ECD3  F099         	call	i2_ringbuf_pop	;wreg free
 19895  0140BC  6EAE               	movwf	4014,c	;volatile
 19896                           
 19897                           ;My_UART.c: 33: } else {
 19898  0140BE  D001               	goto	i2l1257
 19899  0140C0                     i2l1258:
 19900                           
 19901                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
 19902  0140C0  989D               	bcf	3997,4,c	;volatile
 19903  0140C2                     i2l1257:
 19904                           
 19905                           ;My_UART.c: 35: }
 19906                           ;My_UART.c: 36: }
 19907                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 19908  0140C2  AA9D               	btfss	3997,5,c	;volatile
 19909  0140C4  0012               	return	
 19910  0140C6  AA9E               	btfss	3998,5,c	;volatile
 19911  0140C8  0012               	return	
 19912                           
 19913                           ;My_UART.c: 38: char ascii = RCREG1;
 19914  0140CA  CFAF F03D          	movff	4015,UART_ISR@ascii	;volatile
 19915                           
 19916                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
 19917  0140CE  0E4B               	movlw	low _uart_rx
 19918  0140D0  6E36               	movwf	i2ringbuf_put@rb,c
 19919  0140D2  0E01               	movlw	high _uart_rx
 19920  0140D4  6E37               	movwf	i2ringbuf_put@rb+1,c
 19921  0140D6  C03D  F038         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 19922  0140DA  EC20  F099         	call	i2_ringbuf_put	;wreg free
 19923  0140DE  0012               	return	
 19924  0140E0                     __end_of_UART_ISR:
 19925                           	opt stack 0
 19926                           pclatu	equ	0xFFB
 19927                           pclath	equ	0xFFA
 19928                           tblptru	equ	0xFF8
 19929                           tblptrh	equ	0xFF7
 19930                           tblptrl	equ	0xFF6
 19931                           tablat	equ	0xFF5
 19932                           prodh	equ	0xFF4
 19933                           prodl	equ	0xFF3
 19934                           intcon	equ	0xFF2
 19935                           intcon2	equ	0xFF1
 19936                           postinc0	equ	0xFEE
 19937                           fsr0h	equ	0xFEA
 19938                           fsr0l	equ	0xFE9
 19939                           wreg	equ	0xFE8
 19940                           indf1	equ	0xFE7
 19941                           postinc1	equ	0xFE6
 19942                           postdec1	equ	0xFE5
 19943                           fsr1h	equ	0xFE2
 19944                           fsr1l	equ	0xFE1
 19945                           indf2	equ	0xFDF
 19946                           postinc2	equ	0xFDE
 19947                           postdec2	equ	0xFDD
 19948                           plusw2	equ	0xFDB
 19949                           fsr2h	equ	0xFDA
 19950                           fsr2l	equ	0xFD9
 19951                           status	equ	0xFD8
 19952                           
 19953 ;; *************** function i2_ringbuf_put *****************
 19954 ;; Defined at:
 19955 ;;		line 20 in file "../My_library/My_ringbuf.c"
 19956 ;; Parameters:    Size  Location     Type
 19957 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 19958 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 19959 ;;		 -> lcd_tx(8), 
 19960 ;;  asciicode       1   10[COMRAM] unsigned char 
 19961 ;; Auto vars:     Size  Location     Type
 19962 ;;		None
 19963 ;; Return value:  Size  Location     Type
 19964 ;;		None               void
 19965 ;; Registers used:
 19966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19967 ;; Tracked objects:
 19968 ;;		On entry : 0/0
 19969 ;;		On exit  : 0/0
 19970 ;;		Unchanged: 0/0
 19971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19972 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19975 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19976 ;;Total ram usage:        7 bytes
 19977 ;; Hardware stack levels used:    1
 19978 ;; Hardware stack levels required when called:    1
 19979 ;; This function calls:
 19980 ;;		i2_ringbuf_num
 19981 ;; This function is called by:
 19982 ;;		_UART_ISR
 19983 ;; This function uses a non-reentrant model
 19984 ;;
 19985                           
 19986                           	psect	text97
 19987  013240                     __ptext97:
 19988                           	opt stack 0
 19989  013240                     i2_ringbuf_put:
 19990                           	opt stack 18
 19991                           
 19992                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 19993                           
 19994                           ;incstack = 0
 19995  013240  C036  F02E         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 19996  013244  C037  F02F         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 19997  013248  EC08  F098         	call	i2_ringbuf_num	;wreg free
 19998  01324C  EE20 F002          	lfsr	2,2
 19999  013250  5036               	movf	i2ringbuf_put@rb,w,c
 20000  013252  26D9               	addwf	fsr2l,f,c
 20001  013254  5037               	movf	i2ringbuf_put@rb+1,w,c
 20002  013256  22DA               	addwfc	fsr2h,f,c
 20003  013258  50DE               	movf	postinc2,w,c
 20004  01325A  5C2E               	subwf	?i2_ringbuf_num,w,c
 20005  01325C  50DE               	movf	postinc2,w,c
 20006  01325E  582F               	subwfb	?i2_ringbuf_num+1,w,c
 20007  013260  B0D8               	btfsc	status,0,c
 20008  013262  0012               	return	
 20009                           
 20010                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 20011  013264  EE20 F004          	lfsr	2,4
 20012  013268  5036               	movf	i2ringbuf_put@rb,w,c
 20013  01326A  26D9               	addwf	fsr2l,f,c
 20014  01326C  5037               	movf	i2ringbuf_put@rb+1,w,c
 20015  01326E  22DA               	addwfc	fsr2h,f,c
 20016  013270  CFDE F039          	movff	postinc2,??i2_ringbuf_put
 20017  013274  CFDD F03A          	movff	postdec2,??i2_ringbuf_put+1
 20018  013278  C036  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 20019  01327C  C037  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 20020  013280  CFDE F03B          	movff	postinc2,??i2_ringbuf_put+2
 20021  013284  CFDD F03C          	movff	postdec2,??i2_ringbuf_put+3
 20022  013288  5039               	movf	??i2_ringbuf_put,w,c
 20023  01328A  243B               	addwf	??i2_ringbuf_put+2,w,c
 20024  01328C  6ED9               	movwf	fsr2l,c
 20025  01328E  503A               	movf	??i2_ringbuf_put+1,w,c
 20026  013290  203C               	addwfc	??i2_ringbuf_put+3,w,c
 20027  013292  6EDA               	movwf	fsr2h,c
 20028  013294  C038  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 20029                           
 20030                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20031  013298  EE20 F002          	lfsr	2,2
 20032  01329C  5036               	movf	i2ringbuf_put@rb,w,c
 20033  01329E  26D9               	addwf	fsr2l,f,c
 20034  0132A0  5037               	movf	i2ringbuf_put@rb+1,w,c
 20035  0132A2  22DA               	addwfc	fsr2h,f,c
 20036  0132A4  EE10 F004          	lfsr	1,4
 20037  0132A8  5036               	movf	i2ringbuf_put@rb,w,c
 20038  0132AA  26E1               	addwf	fsr1l,f,c
 20039  0132AC  5037               	movf	i2ringbuf_put@rb+1,w,c
 20040  0132AE  22E2               	addwfc	fsr1h,f,c
 20041  0132B0  CFE6 F03B          	movff	postinc1,??i2_ringbuf_put+2
 20042  0132B4  CFE5 F03C          	movff	postdec1,??i2_ringbuf_put+3
 20043  0132B8  0E01               	movlw	1
 20044  0132BA  263B               	addwf	??i2_ringbuf_put+2,f,c
 20045  0132BC  0E00               	movlw	0
 20046  0132BE  223C               	addwfc	??i2_ringbuf_put+3,f,c
 20047  0132C0  50DE               	movf	postinc2,w,c
 20048  0132C2  5C3B               	subwf	??i2_ringbuf_put+2,w,c
 20049  0132C4  50DE               	movf	postinc2,w,c
 20050  0132C6  583C               	subwfb	??i2_ringbuf_put+3,w,c
 20051  0132C8  B0D8               	btfsc	status,0,c
 20052  0132CA  D00A               	goto	i2l7322
 20053  0132CC  EE20 F004          	lfsr	2,4
 20054  0132D0  5036               	movf	i2ringbuf_put@rb,w,c
 20055  0132D2  26D9               	addwf	fsr2l,f,c
 20056  0132D4  5037               	movf	i2ringbuf_put@rb+1,w,c
 20057  0132D6  22DA               	addwfc	fsr2h,f,c
 20058  0132D8  2ADE               	incf	postinc2,f,c
 20059  0132DA  0E00               	movlw	0
 20060  0132DC  22DD               	addwfc	postdec2,f,c
 20061  0132DE  0012               	return	
 20062  0132E0                     i2l7322:
 20063                           
 20064                           ;My_ringbuf.c: 24: else rb->head = 0;
 20065  0132E0  EE20 F004          	lfsr	2,4
 20066  0132E4  5036               	movf	i2ringbuf_put@rb,w,c
 20067  0132E6  26D9               	addwf	fsr2l,f,c
 20068  0132E8  5037               	movf	i2ringbuf_put@rb+1,w,c
 20069  0132EA  22DA               	addwfc	fsr2h,f,c
 20070  0132EC  0E00               	movlw	0
 20071  0132EE  6EDE               	movwf	postinc2,c
 20072  0132F0  0E00               	movlw	0
 20073  0132F2  6EDD               	movwf	postdec2,c
 20074  0132F4  0012               	return	
 20075  0132F6                     __end_ofi2_ringbuf_put:
 20076                           	opt stack 0
 20077                           pclatu	equ	0xFFB
 20078                           pclath	equ	0xFFA
 20079                           tblptru	equ	0xFF8
 20080                           tblptrh	equ	0xFF7
 20081                           tblptrl	equ	0xFF6
 20082                           tablat	equ	0xFF5
 20083                           prodh	equ	0xFF4
 20084                           prodl	equ	0xFF3
 20085                           intcon	equ	0xFF2
 20086                           intcon2	equ	0xFF1
 20087                           postinc0	equ	0xFEE
 20088                           fsr0h	equ	0xFEA
 20089                           fsr0l	equ	0xFE9
 20090                           wreg	equ	0xFE8
 20091                           indf1	equ	0xFE7
 20092                           postinc1	equ	0xFE6
 20093                           postdec1	equ	0xFE5
 20094                           fsr1h	equ	0xFE2
 20095                           fsr1l	equ	0xFE1
 20096                           indf2	equ	0xFDF
 20097                           postinc2	equ	0xFDE
 20098                           postdec2	equ	0xFDD
 20099                           plusw2	equ	0xFDB
 20100                           fsr2h	equ	0xFDA
 20101                           fsr2l	equ	0xFD9
 20102                           status	equ	0xFD8
 20103                           
 20104 ;; *************** function i2_ringbuf_pop *****************
 20105 ;; Defined at:
 20106 ;;		line 45 in file "../My_library/My_ringbuf.c"
 20107 ;; Parameters:    Size  Location     Type
 20108 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 20109 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 20110 ;;		 -> lcd_tx(8), 
 20111 ;; Auto vars:     Size  Location     Type
 20112 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 20113 ;; Return value:  Size  Location     Type
 20114 ;;                  1    wreg      unsigned char 
 20115 ;; Registers used:
 20116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20117 ;; Tracked objects:
 20118 ;;		On entry : 0/0
 20119 ;;		On exit  : 0/0
 20120 ;;		Unchanged: 0/0
 20121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20124 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20125 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20126 ;;Total ram usage:        7 bytes
 20127 ;; Hardware stack levels used:    1
 20128 ;; Hardware stack levels required when called:    1
 20129 ;; This function calls:
 20130 ;;		i2_ringbuf_num
 20131 ;; This function is called by:
 20132 ;;		_UART_ISR
 20133 ;; This function uses a non-reentrant model
 20134 ;;
 20135                           
 20136                           	psect	text98
 20137  0133A6                     __ptext98:
 20138                           	opt stack 0
 20139  0133A6                     i2_ringbuf_pop:
 20140                           	opt stack 18
 20141                           
 20142                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 20143                           
 20144                           ;incstack = 0
 20145  0133A6  C036  F02E         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 20146  0133AA  C037  F02F         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 20147  0133AE  EC08  F098         	call	i2_ringbuf_num	;wreg free
 20148  0133B2  502E               	movf	?i2_ringbuf_num,w,c
 20149  0133B4  102F               	iorwf	?i2_ringbuf_num+1,w,c
 20150  0133B6  B4D8               	btfsc	status,2,c
 20151  0133B8  D04A               	goto	i2l7340
 20152                           
 20153                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 20154  0133BA  EE20 F006          	lfsr	2,6
 20155  0133BE  5036               	movf	i2ringbuf_pop@rb,w,c
 20156  0133C0  26D9               	addwf	fsr2l,f,c
 20157  0133C2  5037               	movf	i2ringbuf_pop@rb+1,w,c
 20158  0133C4  22DA               	addwfc	fsr2h,f,c
 20159  0133C6  CFDE F038          	movff	postinc2,??i2_ringbuf_pop
 20160  0133CA  CFDD F039          	movff	postdec2,??i2_ringbuf_pop+1
 20161  0133CE  C036  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 20162  0133D2  C037  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 20163  0133D6  CFDE F03A          	movff	postinc2,??i2_ringbuf_pop+2
 20164  0133DA  CFDD F03B          	movff	postdec2,??i2_ringbuf_pop+3
 20165  0133DE  5038               	movf	??i2_ringbuf_pop,w,c
 20166  0133E0  243A               	addwf	??i2_ringbuf_pop+2,w,c
 20167  0133E2  6ED9               	movwf	fsr2l,c
 20168  0133E4  5039               	movf	??i2_ringbuf_pop+1,w,c
 20169  0133E6  203B               	addwfc	??i2_ringbuf_pop+3,w,c
 20170  0133E8  6EDA               	movwf	fsr2h,c
 20171  0133EA  50DF               	movf	indf2,w,c
 20172  0133EC  6E3C               	movwf	i2ringbuf_pop@ret,c
 20173                           
 20174                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 20175  0133EE  EE20 F002          	lfsr	2,2
 20176  0133F2  5036               	movf	i2ringbuf_pop@rb,w,c
 20177  0133F4  26D9               	addwf	fsr2l,f,c
 20178  0133F6  5037               	movf	i2ringbuf_pop@rb+1,w,c
 20179  0133F8  22DA               	addwfc	fsr2h,f,c
 20180  0133FA  EE10 F006          	lfsr	1,6
 20181  0133FE  5036               	movf	i2ringbuf_pop@rb,w,c
 20182  013400  26E1               	addwf	fsr1l,f,c
 20183  013402  5037               	movf	i2ringbuf_pop@rb+1,w,c
 20184  013404  22E2               	addwfc	fsr1h,f,c
 20185  013406  CFE6 F03A          	movff	postinc1,??i2_ringbuf_pop+2
 20186  01340A  CFE5 F03B          	movff	postdec1,??i2_ringbuf_pop+3
 20187  01340E  0E01               	movlw	1
 20188  013410  263A               	addwf	??i2_ringbuf_pop+2,f,c
 20189  013412  0E00               	movlw	0
 20190  013414  223B               	addwfc	??i2_ringbuf_pop+3,f,c
 20191  013416  50DE               	movf	postinc2,w,c
 20192  013418  5C3A               	subwf	??i2_ringbuf_pop+2,w,c
 20193  01341A  50DE               	movf	postinc2,w,c
 20194  01341C  583B               	subwfb	??i2_ringbuf_pop+3,w,c
 20195  01341E  B0D8               	btfsc	status,0,c
 20196  013420  D00A               	goto	i2l7332
 20197                           
 20198                           ;My_ringbuf.c: 49: rb->tail++;
 20199  013422  EE20 F006          	lfsr	2,6
 20200  013426  5036               	movf	i2ringbuf_pop@rb,w,c
 20201  013428  26D9               	addwf	fsr2l,f,c
 20202  01342A  5037               	movf	i2ringbuf_pop@rb+1,w,c
 20203  01342C  22DA               	addwfc	fsr2h,f,c
 20204  01342E  2ADE               	incf	postinc2,f,c
 20205  013430  0E00               	movlw	0
 20206  013432  22DD               	addwfc	postdec2,f,c
 20207                           
 20208                           ;My_ringbuf.c: 50: } else {
 20209  013434  D00A               	goto	i2l7334
 20210  013436                     i2l7332:
 20211                           
 20212                           ;My_ringbuf.c: 51: rb->tail = 0;
 20213  013436  EE20 F006          	lfsr	2,6
 20214  01343A  5036               	movf	i2ringbuf_pop@rb,w,c
 20215  01343C  26D9               	addwf	fsr2l,f,c
 20216  01343E  5037               	movf	i2ringbuf_pop@rb+1,w,c
 20217  013440  22DA               	addwfc	fsr2h,f,c
 20218  013442  0E00               	movlw	0
 20219  013444  6EDE               	movwf	postinc2,c
 20220  013446  0E00               	movlw	0
 20221  013448  6EDD               	movwf	postdec2,c
 20222  01344A                     i2l7334:
 20223                           
 20224                           ;My_ringbuf.c: 52: }
 20225                           ;My_ringbuf.c: 53: return ret;
 20226  01344A  503C               	movf	i2ringbuf_pop@ret,w,c
 20227                           
 20228                           ;My_ringbuf.c: 54: } else {
 20229  01344C  0012               	return	
 20230  01344E                     i2l7340:
 20231                           
 20232                           ;My_ringbuf.c: 55: return 0;
 20233  01344E  0E00               	movlw	0
 20234  013450  0012               	return	
 20235  013452                     __end_ofi2_ringbuf_pop:
 20236                           	opt stack 0
 20237                           pclatu	equ	0xFFB
 20238                           pclath	equ	0xFFA
 20239                           tblptru	equ	0xFF8
 20240                           tblptrh	equ	0xFF7
 20241                           tblptrl	equ	0xFF6
 20242                           tablat	equ	0xFF5
 20243                           prodh	equ	0xFF4
 20244                           prodl	equ	0xFF3
 20245                           intcon	equ	0xFF2
 20246                           intcon2	equ	0xFF1
 20247                           postinc0	equ	0xFEE
 20248                           fsr0h	equ	0xFEA
 20249                           fsr0l	equ	0xFE9
 20250                           wreg	equ	0xFE8
 20251                           indf1	equ	0xFE7
 20252                           postinc1	equ	0xFE6
 20253                           postdec1	equ	0xFE5
 20254                           fsr1h	equ	0xFE2
 20255                           fsr1l	equ	0xFE1
 20256                           indf2	equ	0xFDF
 20257                           postinc2	equ	0xFDE
 20258                           postdec2	equ	0xFDD
 20259                           plusw2	equ	0xFDB
 20260                           fsr2h	equ	0xFDA
 20261                           fsr2l	equ	0xFD9
 20262                           status	equ	0xFD8
 20263                           
 20264 ;; *************** function i2_ringbuf_num *****************
 20265 ;; Defined at:
 20266 ;;		line 12 in file "../My_library/My_ringbuf.c"
 20267 ;; Parameters:    Size  Location     Type
 20268 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 20269 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 20270 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 20271 ;; Auto vars:     Size  Location     Type
 20272 ;;		None
 20273 ;; Return value:  Size  Location     Type
 20274 ;;                  2    0[COMRAM] unsigned int 
 20275 ;; Registers used:
 20276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20277 ;; Tracked objects:
 20278 ;;		On entry : 0/0
 20279 ;;		On exit  : 0/0
 20280 ;;		Unchanged: 0/0
 20281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20284 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20285 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20286 ;;Total ram usage:        8 bytes
 20287 ;; Hardware stack levels used:    1
 20288 ;; This function calls:
 20289 ;;		Nothing
 20290 ;; This function is called by:
 20291 ;;		_UART_ISR
 20292 ;;		i2_ringbuf_put
 20293 ;;		i2_ringbuf_pop
 20294 ;; This function uses a non-reentrant model
 20295 ;;
 20296                           
 20297                           	psect	text99
 20298  013010                     __ptext99:
 20299                           	opt stack 0
 20300  013010                     i2_ringbuf_num:
 20301                           	opt stack 18
 20302                           
 20303                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 20304                           
 20305                           ;incstack = 0
 20306  013010  EE20 F006          	lfsr	2,6
 20307  013014  502E               	movf	i2ringbuf_num@rb,w,c
 20308  013016  26D9               	addwf	fsr2l,f,c
 20309  013018  502F               	movf	i2ringbuf_num@rb+1,w,c
 20310  01301A  22DA               	addwfc	fsr2h,f,c
 20311  01301C  EE10 F004          	lfsr	1,4
 20312  013020  502E               	movf	i2ringbuf_num@rb,w,c
 20313  013022  26E1               	addwf	fsr1l,f,c
 20314  013024  502F               	movf	i2ringbuf_num@rb+1,w,c
 20315  013026  22E2               	addwfc	fsr1h,f,c
 20316  013028  50DE               	movf	postinc2,w,c
 20317  01302A  5CE6               	subwf	postinc1,w,c
 20318  01302C  50DE               	movf	postinc2,w,c
 20319  01302E  58E6               	subwfb	postinc1,w,c
 20320  013030  A0D8               	btfss	status,0,c
 20321  013032  D01F               	goto	i2l6948
 20322                           
 20323                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 20324  013034  EE20 F004          	lfsr	2,4
 20325  013038  502E               	movf	i2ringbuf_num@rb,w,c
 20326  01303A  26D9               	addwf	fsr2l,f,c
 20327  01303C  502F               	movf	i2ringbuf_num@rb+1,w,c
 20328  01303E  22DA               	addwfc	fsr2h,f,c
 20329  013040  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 20330  013044  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 20331  013048  EE20 F006          	lfsr	2,6
 20332  01304C  502E               	movf	i2ringbuf_num@rb,w,c
 20333  01304E  26D9               	addwf	fsr2l,f,c
 20334  013050  502F               	movf	i2ringbuf_num@rb+1,w,c
 20335  013052  22DA               	addwfc	fsr2h,f,c
 20336  013054  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 20337  013058  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 20338  01305C  1E32               	comf	??i2_ringbuf_num+2,f,c
 20339  01305E  1E33               	comf	??i2_ringbuf_num+3,f,c
 20340  013060  4A32               	infsnz	??i2_ringbuf_num+2,f,c
 20341  013062  2A33               	incf	??i2_ringbuf_num+3,f,c
 20342  013064  5030               	movf	??i2_ringbuf_num,w,c
 20343  013066  2432               	addwf	??i2_ringbuf_num+2,w,c
 20344  013068  6E2E               	movwf	?i2_ringbuf_num,c
 20345  01306A  5031               	movf	??i2_ringbuf_num+1,w,c
 20346  01306C  2033               	addwfc	??i2_ringbuf_num+3,w,c
 20347  01306E  6E2F               	movwf	?i2_ringbuf_num+1,c
 20348                           
 20349                           ;My_ringbuf.c: 15: } else {
 20350  013070  0012               	return	
 20351  013072                     i2l6948:
 20352                           
 20353                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 20354  013072  EE20 F004          	lfsr	2,4
 20355  013076  502E               	movf	i2ringbuf_num@rb,w,c
 20356  013078  26D9               	addwf	fsr2l,f,c
 20357  01307A  502F               	movf	i2ringbuf_num@rb+1,w,c
 20358  01307C  22DA               	addwfc	fsr2h,f,c
 20359  01307E  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 20360  013082  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 20361  013086  EE20 F002          	lfsr	2,2
 20362  01308A  502E               	movf	i2ringbuf_num@rb,w,c
 20363  01308C  26D9               	addwf	fsr2l,f,c
 20364  01308E  502F               	movf	i2ringbuf_num@rb+1,w,c
 20365  013090  22DA               	addwfc	fsr2h,f,c
 20366  013092  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 20367  013096  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 20368  01309A  EE20 F006          	lfsr	2,6
 20369  01309E  502E               	movf	i2ringbuf_num@rb,w,c
 20370  0130A0  26D9               	addwf	fsr2l,f,c
 20371  0130A2  502F               	movf	i2ringbuf_num@rb+1,w,c
 20372  0130A4  22DA               	addwfc	fsr2h,f,c
 20373  0130A6  CFDE F034          	movff	postinc2,??i2_ringbuf_num+4
 20374  0130AA  CFDD F035          	movff	postdec2,??i2_ringbuf_num+5
 20375  0130AE  1E34               	comf	??i2_ringbuf_num+4,f,c
 20376  0130B0  1E35               	comf	??i2_ringbuf_num+5,f,c
 20377  0130B2  4A34               	infsnz	??i2_ringbuf_num+4,f,c
 20378  0130B4  2A35               	incf	??i2_ringbuf_num+5,f,c
 20379  0130B6  5032               	movf	??i2_ringbuf_num+2,w,c
 20380  0130B8  2634               	addwf	??i2_ringbuf_num+4,f,c
 20381  0130BA  5033               	movf	??i2_ringbuf_num+3,w,c
 20382  0130BC  2235               	addwfc	??i2_ringbuf_num+5,f,c
 20383  0130BE  5030               	movf	??i2_ringbuf_num,w,c
 20384  0130C0  2434               	addwf	??i2_ringbuf_num+4,w,c
 20385  0130C2  6E2E               	movwf	?i2_ringbuf_num,c
 20386  0130C4  5031               	movf	??i2_ringbuf_num+1,w,c
 20387  0130C6  2035               	addwfc	??i2_ringbuf_num+5,w,c
 20388  0130C8  6E2F               	movwf	?i2_ringbuf_num+1,c
 20389  0130CA  0012               	return	
 20390  0130CC                     __end_ofi2_ringbuf_num:
 20391                           	opt stack 0
 20392                           pclatu	equ	0xFFB
 20393                           pclath	equ	0xFFA
 20394                           tblptru	equ	0xFF8
 20395                           tblptrh	equ	0xFF7
 20396                           tblptrl	equ	0xFF6
 20397                           tablat	equ	0xFF5
 20398                           prodh	equ	0xFF4
 20399                           prodl	equ	0xFF3
 20400                           intcon	equ	0xFF2
 20401                           intcon2	equ	0xFF1
 20402                           postinc0	equ	0xFEE
 20403                           fsr0h	equ	0xFEA
 20404                           fsr0l	equ	0xFE9
 20405                           wreg	equ	0xFE8
 20406                           indf1	equ	0xFE7
 20407                           postinc1	equ	0xFE6
 20408                           postdec1	equ	0xFE5
 20409                           fsr1h	equ	0xFE2
 20410                           fsr1l	equ	0xFE1
 20411                           indf2	equ	0xFDF
 20412                           postinc2	equ	0xFDE
 20413                           postdec2	equ	0xFDD
 20414                           plusw2	equ	0xFDB
 20415                           fsr2h	equ	0xFDA
 20416                           fsr2l	equ	0xFD9
 20417                           status	equ	0xFD8
 20418                           
 20419 ;; *************** function _I2C_LCD_ISR *****************
 20420 ;; Defined at:
 20421 ;;		line 92 in file "../My_library/My_I2C_LCD.c"
 20422 ;; Parameters:    Size  Location     Type
 20423 ;;		None
 20424 ;; Auto vars:     Size  Location     Type
 20425 ;;		None
 20426 ;; Return value:  Size  Location     Type
 20427 ;;		None               void
 20428 ;; Registers used:
 20429 ;;		wreg, status,2
 20430 ;; Tracked objects:
 20431 ;;		On entry : 0/0
 20432 ;;		On exit  : 0/0
 20433 ;;		Unchanged: 0/0
 20434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20439 ;;Total ram usage:        0 bytes
 20440 ;; Hardware stack levels used:    1
 20441 ;; This function calls:
 20442 ;;		Nothing
 20443 ;; This function is called by:
 20444 ;;		_ISR
 20445 ;; This function uses a non-reentrant model
 20446 ;;
 20447                           
 20448                           	psect	text100
 20449  014580                     __ptext100:
 20450                           	opt stack 0
 20451  014580                     _I2C_LCD_ISR:
 20452                           	opt stack 20
 20453                           
 20454                           ;My_I2C_LCD.c: 93: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
 20455                           
 20456                           ;incstack = 0
 20457  014580  B69D               	btfsc	3997,3,c	;volatile
 20458  014582  A69E               	btfss	3998,3,c	;volatile
 20459  014584  D003               	goto	i2l4304
 20460                           
 20461                           ;My_I2C_LCD.c: 94: PIR1bits.SSP1IF = 0;
 20462  014586  969E               	bcf	3998,3,c	;volatile
 20463                           
 20464                           ;My_I2C_LCD.c: 95: i2c_lcd_flag = 1;
 20465  014588  0E01               	movlw	1
 20466  01458A  6E2A               	movwf	_i2c_lcd_flag,c
 20467  01458C                     i2l4304:
 20468                           
 20469                           ;My_I2C_LCD.c: 96: }
 20470                           ;My_I2C_LCD.c: 97: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
 20471  01458C  A6A0               	btfss	4000,3,c	;volatile
 20472  01458E  0012               	return	
 20473  014590  A6A1               	btfss	4001,3,c	;volatile
 20474  014592  0012               	return	
 20475                           
 20476                           ;My_I2C_LCD.c: 98: PIR2bits.BCL1IF = 0;
 20477  014594  96A1               	bcf	4001,3,c	;volatile
 20478  014596  0012               	return	
 20479  014598                     __end_of_I2C_LCD_ISR:
 20480                           	opt stack 0
 20481                           pclatu	equ	0xFFB
 20482                           pclath	equ	0xFFA
 20483                           tblptru	equ	0xFF8
 20484                           tblptrh	equ	0xFF7
 20485                           tblptrl	equ	0xFF6
 20486                           tablat	equ	0xFF5
 20487                           prodh	equ	0xFF4
 20488                           prodl	equ	0xFF3
 20489                           intcon	equ	0xFF2
 20490                           intcon2	equ	0xFF1
 20491                           postinc0	equ	0xFEE
 20492                           fsr0h	equ	0xFEA
 20493                           fsr0l	equ	0xFE9
 20494                           wreg	equ	0xFE8
 20495                           indf1	equ	0xFE7
 20496                           postinc1	equ	0xFE6
 20497                           postdec1	equ	0xFE5
 20498                           fsr1h	equ	0xFE2
 20499                           fsr1l	equ	0xFE1
 20500                           indf2	equ	0xFDF
 20501                           postinc2	equ	0xFDE
 20502                           postdec2	equ	0xFDD
 20503                           plusw2	equ	0xFDB
 20504                           fsr2h	equ	0xFDA
 20505                           fsr2l	equ	0xFD9
 20506                           status	equ	0xFD8
 20507                           pclatu	equ	0xFFB
 20508                           pclath	equ	0xFFA
 20509                           tblptru	equ	0xFF8
 20510                           tblptrh	equ	0xFF7
 20511                           tblptrl	equ	0xFF6
 20512                           tablat	equ	0xFF5
 20513                           prodh	equ	0xFF4
 20514                           prodl	equ	0xFF3
 20515                           intcon	equ	0xFF2
 20516                           intcon2	equ	0xFF1
 20517                           postinc0	equ	0xFEE
 20518                           fsr0h	equ	0xFEA
 20519                           fsr0l	equ	0xFE9
 20520                           wreg	equ	0xFE8
 20521                           indf1	equ	0xFE7
 20522                           postinc1	equ	0xFE6
 20523                           postdec1	equ	0xFE5
 20524                           fsr1h	equ	0xFE2
 20525                           fsr1l	equ	0xFE1
 20526                           indf2	equ	0xFDF
 20527                           postinc2	equ	0xFDE
 20528                           postdec2	equ	0xFDD
 20529                           plusw2	equ	0xFDB
 20530                           fsr2h	equ	0xFDA
 20531                           fsr2l	equ	0xFD9
 20532                           status	equ	0xFD8
 20533                           
 20534                           	psect	rparam
 20535  0000                     pclatu	equ	0xFFB
 20536                           pclath	equ	0xFFA
 20537                           tblptru	equ	0xFF8
 20538                           tblptrh	equ	0xFF7
 20539                           tblptrl	equ	0xFF6
 20540                           tablat	equ	0xFF5
 20541                           prodh	equ	0xFF4
 20542                           prodl	equ	0xFF3
 20543                           intcon	equ	0xFF2
 20544                           intcon2	equ	0xFF1
 20545                           postinc0	equ	0xFEE
 20546                           fsr0h	equ	0xFEA
 20547                           fsr0l	equ	0xFE9
 20548                           wreg	equ	0xFE8
 20549                           indf1	equ	0xFE7
 20550                           postinc1	equ	0xFE6
 20551                           postdec1	equ	0xFE5
 20552                           fsr1h	equ	0xFE2
 20553                           fsr1l	equ	0xFE1
 20554                           indf2	equ	0xFDF
 20555                           postinc2	equ	0xFDE
 20556                           postdec2	equ	0xFDD
 20557                           plusw2	equ	0xFDB
 20558                           fsr2h	equ	0xFDA
 20559                           fsr2l	equ	0xFD9
 20560                           status	equ	0xFD8
 20561                           
 20562                           	psect	temp
 20563  00005B                     btemp:
 20564                           	opt stack 0
 20565  00005B                     	ds	1
 20566  0000                     int$flags	set	btemp
 20567                           pclatu	equ	0xFFB
 20568                           pclath	equ	0xFFA
 20569                           tblptru	equ	0xFF8
 20570                           tblptrh	equ	0xFF7
 20571                           tblptrl	equ	0xFF6
 20572                           tablat	equ	0xFF5
 20573                           prodh	equ	0xFF4
 20574                           prodl	equ	0xFF3
 20575                           intcon	equ	0xFF2
 20576                           intcon2	equ	0xFF1
 20577                           postinc0	equ	0xFEE
 20578                           fsr0h	equ	0xFEA
 20579                           fsr0l	equ	0xFE9
 20580                           wreg	equ	0xFE8
 20581                           indf1	equ	0xFE7
 20582                           postinc1	equ	0xFE6
 20583                           postdec1	equ	0xFE5
 20584                           fsr1h	equ	0xFE2
 20585                           fsr1l	equ	0xFE1
 20586                           indf2	equ	0xFDF
 20587                           postinc2	equ	0xFDE
 20588                           postdec2	equ	0xFDD
 20589                           plusw2	equ	0xFDB
 20590                           fsr2h	equ	0xFDA
 20591                           fsr2l	equ	0xFD9
 20592                           status	equ	0xFD8


Data Sizes:
    Strings     422
    Constant    239
    Data        5
    BSS         2809
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    112     124
    BANK1           256    105     234
    BANK2           256      0     228
    BANK3           256     40     240
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[9]), STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_48(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    display_time_0802@line1	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    display_time_0802@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    display_time_0802@line0	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK0[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 235
		 -> STR_43(CODE[235]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(BANK0[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(BANK0[8]), 

    I2C_LCD_puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), STR_47(CODE[9]), STR_46(CODE[9]), 

    S2230ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[1000]), 
		 -> terminal_task@buf(BANK1[100]), I2C_LCD_init@buf(BANK4[200]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->_ringbuf_put
    _ringbuf_backspace->_ringbuf_num
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_init->_I2C_LCD_command
    _I2C_LCD_clear->_I2C_LCD_command
    _display_time_0802->_display_dec
    _display_dec->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USB_task->_get_string_usb
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d
    _I2C_LCD_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _I2C_LCD_puts->_I2C_LCD_put
    _I2C_LCD_put->_ringbuf_put
    _I2C_LCD_cursor->_I2C_LCD_command
    _I2C_LCD_command->_ringbuf_put
    _ringbuf_put->_ringbuf_num

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0  316702
                                            111 BANK0      1     1      0
                                              0 BANK3     40    40      0
                      _I2C_LCD_clear
                     _I2C_LCD_cursor
                       _I2C_LCD_puts
                       _I2C_LCD_task
                          _RTCC_task
                          _UART_task
                           _USB_task
                  _display_time_0802
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  165672
                                            105 BANK0      6     2      4
                                              0 BANK1    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  10     0     10  126418
                                             95 BANK0     10     0     10
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  110168
                                             86 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   60702
                                             79 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   30837
                                             47 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   10483
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15564
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    4893
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    9923
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   10766
                                             15 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1646
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   52474
                       _I2C_LCD_init
                           _OSC_init
                          _RTCC_init
                          _UART_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17067
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9844
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0   31233
                      _I2C_LCD_clear
                    _I2C_LCD_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_clear                                        0     0      0   10092
                    _I2C_LCD_command
 ---------------------------------------------------------------------------------
 (1) _display_time_0802                                    6     0      6   34466
                                             55 BANK0      6     0      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    1061
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_dec                                          8     4      4   21337
                                             47 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   12740
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8776
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   21202
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1372
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7223
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7223
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_task                                         3     3      0    4096
                                             15 BANK0      3     3      0
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2659
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_puts                                         2     0      2    9293
                                             16 BANK0      2     0      2
                        _I2C_LCD_put
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_put                                          1     1      0    8752
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_cursor                                       4     3      1   10667
                                             17 BANK0      4     3      1
                    _I2C_LCD_command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_command                                      2     1      1   10092
                                             15 BANK0      2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8721
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1372
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0   33321
                                             30 COMRAM    15    15      0
                        _I2C_LCD_ISR
                           _UART_ISR
                            _USB_ISR
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) _I2C_LCD_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_clear
     _I2C_LCD_command
       _ringbuf_put
         _ringbuf_num
   _I2C_LCD_cursor
     _I2C_LCD_command
       _ringbuf_put
         _ringbuf_num
   _I2C_LCD_puts
     _I2C_LCD_put
       _ringbuf_put
         _ringbuf_num
   _I2C_LCD_task
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _display_time_0802
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _display_dec
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
     _strcat
     _strcpy
   _main_init
     _I2C_LCD_init
       _I2C_LCD_clear
         _I2C_LCD_command
           _ringbuf_put
             _ringbuf_num
       _I2C_LCD_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _OSC_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _I2C_LCD_ISR
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100     28      F0      12       93.8%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      E4      10       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      EA       7       91.4%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     70      7C       5       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45C       8        0.0%
DATA                 0      0     C2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 12 23:48:42 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FD73  
                         _ringbuf_put_num 38F8                              ?_display_dec 008F  
                         _ringbuf_put_str 3D0E                              ___awdiv@sign 0065  
                                      _ms 0114                             _USBDeviceInit 1604  
                     ___wmul@multiplicand 0062                         ??_RTCC_from_epoch 0091  
                      __size_of_CDCInitEP 006E                              __CFG_CP0$OFF 000000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 003A      USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C  
                                     l207 4206                                       l208 4204  
                                     l146 167A               __end_of_USBStdGetDscHandler 1C64  
                                     l504 14E6                                       l509 153A  
                                     l910 2F54                                       l760 41B6  
                                     l916 275C                                       _BDT 000D00  
                                     l765 4024                                       l829 38FA  
                                     l929 1386                                       l699 1862  
                                     _ISR 1008                                       _UIE 000F36  
                                     _UIR 000F62                         get_string_usb@len 006F  
                           ?_get_quot_rem 0079                        caltime_to_epoch@tm 0079  
                              _USBSuspend 439C                                       _now 0135  
                       _RTCC_from_caltime 4446                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0042                             _i2c_lcd_state 0131  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 18AE                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0022                        ?_RTCC_from_caltime 008F  
                   ??_USBCtrlTrfRxService 002E                  __size_ofi2_USBDeviceInit 013A  
                          ??_getsUSBUSART 006A                  USBEnableEndpoint@options 0036  
                                    ?_ISR 002E                    __end_of_get_string_usb 4096  
                        _terminal_at_hand 3D72                              _I2C_LCD_init 2312  
                            _I2C_LCD_task 175C                              _I2C_LCD_puts 3F4E  
                                    l1309 4546                                      l1341 379A  
              USBConfigureEndpoint@handle 0034                                      l1698 1F62  
                                    l1948 3A6A                                      l1958 3E2C  
                                    l1895 2F42                                      l8200 3AAC  
                                    l8300 0B90                                      l8212 2DF6  
                                    l8150 354E                                      l8142 3528  
                                    l8310 0BF4                                      l8320 0C7C  
                                    l8304 0B9A                                      l8312 0BF8  
                                    l8224 2E2A                                      l8240 2E7A  
                      __CFG_WPFP$PAGE_127 000000                                      l8162 3594  
                                    l8154 3572                                      l8146 353C  
                                    l8138 3518                                      l8226 2E36  
                                    l8218 2E0C                                      l9130 390A  
                                    l9300 1814                                      l8148 3548  
                                    l8316 0C18                                      l8244 2E8E  
                                    l8236 2E6C                                      l8228 2E3C  
                                    l9140 396C                                      l8174 20D4  
                                    l9302 181E                                      l8158 3580  
                                    l8190 247A                                      l9230 437C  
                                    l8254 2EC6                                      l9134 392C  
                                    l9056 2CF8                                      l9064 2D14  
                                    l9312 186C                                      l9320 188A  
                                    l9232 4380                                      l8352 3A1A  
                                    l8336 4414                                      l8512 0132  
                                    l8504 0100                                      l8256 2ED6  
                                    l9080 41CE                                      l9058 2D0E  
                                    l9306 182A                                      l8354 3A26  
                                    l8610 03BE                                      l8602 0398  
                                    l8530 01CE                                      l8522 0198  
                                    l8514 013E                                      l8266 2F30  
                                    l8258 2EDC                                      l9316 1880  
                                    l9308 185A                                      l8196 3A86  
                                    l8364 3A5C                                      l8356 3A2C  
                                    l8380 3E1E                                      l8372 3DE8  
                                    l8524 01A4                                      l8516 0144  
                                    l8620 044C                                      l8540 020C  
                                    l8460 13FC                                      l9092 4026  
                                    l9148 370E                                      l9500 0A64  
                                    l8278 29C2                                      l9262 3F50  
                                    l9246 4060                                      l8374 3DF4  
                                    l8542 0242                                      l9190 4226  
                                    l9350 11F8                                      l9158 3C50  
                                    l8702 1E7C                                      l8390 3D48  
                                    l9502 0A8E                                      l9280 17A8  
                                    l9272 1776                                      l9248 4064  
                                    l8376 3DFA                                      l8616 0420  
                                    l8608 03B8                                      l8552 0272  
                                    l8536 01F4                                      l8528 01B6  
                                    l9184 3CF4                                      l9352 1210  
                                    l8464 1404                                      l8640 429A  
                                    l8720 1F24                                      l8704 1E82  
                                    l9512 0ADC                                      l9266 3F7C  
                                    l8298 0B8A                                      l8554 0278  
                                    l8490 0048                                      l8618 042C  
                                    l8458 13F8                                      l8722 1F2A  
                                    l8714 1EC8                                      l8386 3D10  
                                    l9506 0AB8                                      l9292 17D6  
                                    l9276 179A                                      l8900 1594  
                                    l8572 02D6                                      l8484 002C  
                                    l9188 421A                                      l8636 4288  
                                    l9196 2A22                                      l9516 0B1C  
                                    l9508 0AC0                                      l9524 0B52  
                                    l9460 083C                                      l9294 17F6  
                                    l8654 26D6                                      l8646 26A2  
                                    l8910 15C2                                      l8830 21FC  
                                    l8566 02B4                                      l8486 003E  
                                    l8478 000E                                      l8742 1650  
                                    l8718 1EDA                                      l9198 2A3A  
                                    l9470 08EA                                      l9296 1800  
                                    l8920 1600                                      l8824 21C4  
                                    l8816 2182                                      l8576 030E  
                                    l8496 0080                                      l9464 0866  
                                    l9298 180A                                      l8666 273C  
                                    l8826 21CC                                      l8834 222E  
                                    l8818 218C                                      l8850 44D0  
                                    l8586 033E                                      l8594 0366  
                                    l8578 0318                                      l8770 16BA  
                                    l8746 165A                                      l8690 3E98  
                                    l8916 15D8                                      l8908 15B8  
                                    l8860 14CA                                      l8596 0372  
                                    l8940 3E46                                      l8780 172A  
                                    l8692 3EA4                                      l9492 09DC  
                                    l9484 098A                                      l9476 0938  
                                    l9468 08E6                                      l8918 15DC  
                                    l8870 14F0                                      l8942 3E56  
                                    l8774 16C4                                      l8758 1688  
                                    l8766 169A                                      l8686 3DBA  
                                    l8950 04A2                                      l9494 09E0  
                                    l9486 098E                                      l9478 093C  
                                    l8864 14DA                                      l8944 3E62  
                                    l8696 3EE2                                      l8960 053E  
                                    l8952 04AE                                      l9736 1DB2  
                                    l8890 1564                                      l8882 153E  
                                    l8858 14C0                                      l8938 3E40  
                                    l8962 0576                                      l8876 1524  
                                    l8980 06CC                                      l8972 063E  
                                    l8956 04F6                                      l8982 0704  
                                    l8966 05BE                                      STR_1 FFDE  
                                    l8992 07CC                                      l8976 0684  
                                    l8968 05F6                                      l9768 1E76  
                                    STR_2 FFA9                                      STR_3 FFE6  
                                    l8898 1588                                      l8986 074C  
                                    STR_4 FFFA                                      STR_5 FFFA  
                                    l8988 0784                                      STR_6 FFE6  
                                    STR_7 FFFC                                      STR_8 FFAA  
                                    STR_9 FFF8                                      u8040 3D3A  
                                    u8050 3D6A                                      u8047 3D30  
                   ??_USBCtrlTrfTxService 002E                                      u8057 3D60  
                                    u7700 2424                                      u7710 2426  
                                    _UCFG 000F39                                      u7720 2456  
                                    u9170 3F72                                      u9180 3F9E  
                                    u7740 246C                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u7750 246E  
                                    u8630 14B0                                      u7760 24C6  
                                    u9177 3F68                                      u7770 24C8  
                                    u7738 245A                                      u8570 2172  
                                    u9187 3F94                                      _UEIE 000F37  
                                    u8638 14B4                                      u8760 3E8C  
                                    u8578 2176                                      u9650 1DEE  
                                    u8767 3E82                                      _UEIR 000F63  
                                    _UCON 000F65                                      u9668 1DF2  
                         _CDCDataInHandle 0125                       ??_RTCC_from_caltime 0091  
  USBStdFeatureReqHandler@current_ep_data 0045                                      _pDst 0127  
                                    _atoi 1E7A                                      _main 1D70  
                ??i2_USBTransferOnePacket 0032                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 0110                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 41D8                                      btemp 005B  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 45BA  
                                    pclat 000FFA                                      prodh 000FF4  
                                    prodl 000FF3                                      start 10BC  
                           __CFG_IESO$OFF 000000                __end_of_USBCheckStdRequest 2684  
                  ??_USBCtrlTrfOutHandler 0030                            terminal_task@i 01E4  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0042  
                         ??_terminal_task 00CD                           ??_terminal_time 00BE  
                   __end_ofi2_ringbuf_pop 3452                     __end_ofi2_ringbuf_num 30CC  
                   __end_ofi2_ringbuf_put 32F6                        terminal_task@ascii 01E3  
                                   ??_ISR 004C                         ??_I2C_LCD_command 0070  
                ??_USBStdGetStatusHandler 002E                              print_time@tx 008F  
                          ?_USBDeviceInit 002E                             _I2C_LCD_clear 45A6  
                       ??_RTCC_to_caltime 0064                             __CFG_PLLDIV$2 000000  
                            _BAUDCON1bits 000F7E                 __end_of_RTCC_from_caltime 446C  
                                   ?_atoi 0066                                     ?_main 002E  
                 __size_of_put_string_usb 002C                            ??_get_quot_rem 007D  
                         __end_of___awdiv 2E98                                     _ADRES 000FC3  
                                   STR_20 FFE3                                     STR_13 FFF6  
                                   STR_30 FFD4                                     STR_31 FFF0  
                                   STR_15 FFA3                                     STR_23 FF43  
                                   STR_32 FFC9                                     STR_40 FFBB  
                                   STR_24 FFAC                                     STR_33 FFE1  
                                   STR_41 FFCF                                     STR_25 FF74  
                                   STR_26 FFEC                                     STR_42 FFEE  
                                   STR_34 FFE7                                     STR_35 FFCD  
                                   STR_27 FFEB                                     STR_19 FFE3  
                                   STR_43 FE58                                     STR_36 FFD9  
                                   STR_44 FF88                                     STR_28 FF68  
                         __end_of___awmod 359E                                     STR_29 FFE9  
                                   STR_37 FFF2                                     STR_45 FF91  
                                   STR_38 FFC2                                     STR_46 FF7F  
                                   STR_39 FFF4                                     STR_47 FF9A  
                                   STR_48 FFB4         __size_of_USBCtrlEPServiceComplete 00F0  
                         __end_of___lldiv 2F54                           ___awdiv@divisor 0062  
                  __end_of_USBDeviceTasks 19F8                                     _LATB2 007C52  
               ?_USBCtrlEPServiceComplete 002E                           __end_of___lwdiv 3A74  
                         __end_of___lwmod 3E36                                     i2l300 3472  
                                   i2l232 1FE2                                     i2l146 1A5E  
                                   i2l170 198A                                     i2l308 4122  
                                   i2l158 18DE                                     i2l168 1978  
                                   i2l345 3236                                     i2l169 19F4  
                                   i2l450 3344                                     i2l452 337A  
                                   i2l374 0E26                                     i2l295 3460  
                                   i2l359 25BA                                     i2l368 2608  
                                   i2l393 0FEE                                     i2l298 34E8  
                                   i2l299 346E                                     _UADDR 000F38  
                         ___awdiv@counter 0064                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
      __size_of_USBCtrlEPAllowStatusStage 00C2                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000                          __end_of_UART_ISR 40E0  
         __end_of_USBCtrlEPAllowDataStage 3636                                     _sd000 FE54  
                                   _sd001 FDBE                                     _sd002 FDF2  
                    caltime_to_epoch@year 007F                                i2memset@p1 002E  
                      __size_of_UART_init 0022                           __end_of_dpowers FD73  
                      __size_of_UART_task 0020                          __end_of_OSC_init 45A6  
                         __end_of_isdigit 441E                        __size_of_RTCC_init 006A  
                         ?_get_string_usb 006D                        __size_of_RTCC_task 003C  
                        ringbuf_delete@rb 0060                                     atoi@a 006B  
                                   atoi@s 0066                                     main@s 03C8  
                            display_dec@s 0093                                     tablat 000FF5  
                                   plusw2 000FDB                         __end_of_CDCInitEP 3C3A  
                        __end_of_USB_init 4530                          __end_of_USB_task 37E6  
              __size_of_ringbuf_backspace 008E                                     status 000FD8  
                         __end_of_sprintf 045A                          __end_ofi2_memset 43F4  
                       month_length@month 0066                   __end_of_ringbuf_put_num 397A  
                 __end_of_ringbuf_put_str 3D72                       terminal_task@i_4605 01E2  
                         putUSBUSART@data 0060              __size_of_USBStdSetCfgHandler 00DC  
                         __initialization 3872                           terminal_task@rx 00CB  
                         terminal_task@tx 00C9                           terminal_time@tx 00B6  
                            __end_of_atoi 1F6C                              __end_of_main 1E7A  
                   _control_signal_bitmap 0130                            ?_I2C_LCD_clear 002E  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
               __size_of_USBCtrlEPService 00CE                             print_time@str 0091  
                                  ??_atoi 0068                                    ??_main 00CF  
                           __activetblptr 000003                           ?_USBDeviceTasks 002E  
                             ?_USBSuspend 002E                            _I2C_LCD_cursor 42B2  
                            _cdc_mem_type 0026                                    _BCL1IF 007D0B  
                 __end_of_USBDeviceAttach 4210                          _CDCDataOutHandle 00D0  
                       _getsUSBUSART$1957 006B                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                     display_time_0802@tm 0097                          ___awdiv@dividend 0060  
                               ??_USB_ISR 004C                           getsUSBUSART@len 0069  
                   __size_of_CDCTxService 0178                                    i2l1432 1056  
                                  i2l1257 40C2                                    i2l1258 40C0  
                                  i2l1435 1080                            __CFG_WDTEN$OFF 000000  
                                  i2l4304 458C                                    i2l5340 30E2  
                                  i2l5404 3382                                    i2l6212 2008  
                                  i2l6310 2640                                    i2l7022 196E  
                                  i2l7014 1946                                    i2l6240 1C90  
                                  i2l5360 3168                                    i2l7008 193A  
                                  i2l5282 3698                                    i2l5530 4324  
                                  i2l6306 2622                                    i2l7050 19F0  
                                  i2l7042 19B6                                    i2l6412 31B8  
                                  i2l5292 4172                                    i2l5348 310C  
                                  i2l5380 3322                                    i2l5524 4318  
                                  i2l5700 43E2                                    i2l7028 1982  
                                  i2l5550 2AD4                                    i2l6414 31BC  
                                  i2l6262 1D26                                    i2l6246 1CB2  
                                  i2l5526 431E                                    i2l5560 2AFE  
                                  i2l6432 321C                                    i2l5296 4180  
                                  i2l5800 1B42                                    i2l6280 25C2  
                                  i2l6192 1F8C                                    i2l6600 411E  
                                  i2l7048 19D4                                    i2l7322 32E0  
                                  i2l5570 2B3E                                    i2l5546 2ACA  
                                  i2l6426 31FC                                    i2l6258 1D0C  
                                  i2l6282 25C8                                    i2l8026 1078  
                                  i2l7332 3436                                    i2l7340 344E  
                                  i2l5716 2D5E                                    i2l5396 3364  
                                  i2l5388 3338                                    i2l5820 1C40  
                                  i2l5812 1BE2                                    i2l5804 1B54  
                                  i2l6292 25E0                                    i2l6284 25CE  
                                  i2l6620 2BD6                                    i2l7334 344A  
                                  i2l6390 3F00                                    i2l5902 0F54  
                                  i2l5822 1C46                                    i2l5814 1BE8  
                                  i2l6294 25E6                                    i2l5750 3604  
                                  i2l5568 2B36                                    i2l5920 0FDA  
                                  i2l5904 0F6E                                    i2l6296 25EC  
                                  i2l6616 2BCE                                    i2l6632 2C36  
                                  i2l5578 2B76                                    i2l5826 1C4C  
                                  i2l5770 2516                                    i2l5746 35EC  
                                  i2l6634 2C3C                                    i2l5908 0F88  
                                  i2l6628 2C1C                                    i2l6398 3F48  
                                  i2l5934 1054                                    i2l5918 0FCE  
                                  i2l5838 3490                                    i2l5766 250E  
                                  i2l6902 1A6C                                    i2l6910 1A7E  
                                  i2l5936 1060                                    i2l5928 1010  
                                  i2l5880 0E9A                                    i2l5848 34D0  
                                  i2l5696 43D2                                    i2l5792 2588  
                                  i2l5776 2542                                    i2l6576 430E  
                                  i2l5866 0E22                                    i2l6578 4310  
                                  i2l6914 1A9C                                    i2l5892 0EFC  
                                  i2l6924 1B00                                    i2l5886 0EDE  
                                  i2l6918 1AA4                                    i2l5888 0EE0  
                                  i2l6890 1A42                                    i2l6970 18D6  
                                  i2l6962 18C6                                    i2l6948 3072  
                                  i2l6886 1A3A                                    i2l6992 1904  
                                  i2l6984 18F4                                    i2l6998 192A  
                                  _RCREG1 000FAF                             CDCTxService@i 006A  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                  i2USBTransferOnePacket@ep 0032  
                       ??i2_USBDeviceInit 0036                           i2ringbuf_pop@rb 0036  
                         i2ringbuf_num@rb 002E           __size_ofi2_USBTransferOnePacket 00BA  
                         i2ringbuf_put@rb 0036                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 454C                        _terminal_task$6354 01E0  
                      epoch_to_caltime@tm 0081                      get_string_usb@rx_len 0072  
                       _shortPacketStatus 002B                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 0081                          ringbuf_put_num@i 0074  
                         USBDeviceTasks@i 004B                     caltime_to_epoch@epoch 0081  
             USBStdFeatureReqHandler@pUEP 0043                        _terminal_time$6355 00BE  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 002F  
                         ??_USBDeviceInit 0068                              ?_ringbuf_pop 0068  
                            ?_ringbuf_num 0060                              ?_ringbuf_put 0068  
                   caltime_to_epoch@month 0085                                    ___lmul 3A74  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 275C  
                                  ___wmul 4248                        ??_epoch_to_caltime 0083  
                       __end_of_UART_init 44B4                                 ??___awdiv 0064  
                       __end_of_UART_task 44F4                                 ??___awmod 0064  
                                  _d_to_x 441E                                 ??___lldiv 0068  
                    __end_of_getsUSBUSART 2234                      ringbuf_put_num@value 0071  
                            ?_timer0_init 002E                         __end_of_RTCC_init 3CA4  
                            ?_timer1_init 0060                                 ??___lwdiv 0064  
                       __end_of_RTCC_task 4162                                 ??___lwmod 006B  
                            ?_timer3_init 002E                                    _lcd_tx 00D4  
                       _USBEnableEndpoint 4162           __size_of_USBStdGetStatusHandler 00AA  
                                  _memset 427E                                    clear_0 387A  
                                  clear_1 388C                                    clear_2 3898  
                         put_string_usb@s 006C                                    clear_3 38A4  
                                  clear_4 38B0                                    clear_5 38BC  
                                  clear_6 38C8                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0066                           ___awmod@divisor 0062  
                            I2C_LCD_put@c 006F                           ___awmod@counter 0064  
                                  _x_to_d 44F4                        ?_USBEnableEndpoint 0036  
              __size_of_RTCC_from_caltime 0026                                    _usb_rx 015B  
                                  _usb_tx 0163                      __size_of_display_dec 006A  
                                  _strcat 3E36                    __end_of_I2C_LCD_cursor 42E4  
                                  _strcmp 3E96                                    _strcpy 4210  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 29DA                                 ??_isdigit 0060  
                            _CDCTxService 148C                              __mediumconst FD68  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 0037  
                               ??_sprintf 007E                       ?_terminal_operation 00BF  
                             _CtrlTrfData 000D38                      _controlTransferState 0028  
                    __CFG_LS48MHZ$SYS48X8 000000                                __accesstop 0060  
                 __end_of__initialization 38EE                              __pbssBIGRAMl 04C8  
                    __end_of_get_quot_rem 2906                             ___rparam_used 000001  
                         _RTCC_from_epoch 454C                  __size_of_USBStallHandler 0046  
                        ?_ringbuf_put_num 006F                          ?_ringbuf_put_str 006F  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002C  
                         ??_I2C_LCD_clear 0071                          terminal_task@op0 0280  
                        terminal_task@op1 0299                          terminal_task@op2 02B2  
                        terminal_task@op3 02CB                          terminal_task@buf 017C  
                          __pcstackCOMRAM 002E                 __end_of_USBEnableEndpoint 419E  
                           __end_of_sd000 FE58                             __end_of_sd001 FDF2  
                           __end_of_sd002 FE26                          terminal_time@op0 00B8  
                        terminal_time@op1 00BA                          terminal_time@op2 00BC  
                            __pidataBANK1 45BA                                 ?_UART_ISR 002E  
                    ??_terminal_operation 00C9                  __end_of_terminal_at_hand 3DD4  
        __size_of_USBCtrlEPAllowDataStage 0098             __size_of_USBConfigureEndpoint 0094  
                               ?_OSC_init 002E               __end_of_USBCtrlTrfInHandler 3240  
                         __CFG_DSWDTPS$G2 000000                            _put_string_usb 4370  
                  i2_USBTransferOnePacket 30CC                           ?_I2C_LCD_cursor 0071  
                    terminal_task@command 016B                                 ?_USB_init 002E  
                               ?_USB_task 002E                         _CDCTxService$2005 0068  
                              _cdc_notice 0100                   __size_of_ringbuf_delete 0026  
                               ?i2_memset 002E                                _cdc_rx_len 00D2  
                              _cdc_tx_len 00D3                caltime_to_epoch@month_3765 0080  
                ??_USBCtrlTrfSetupHandler 0048                          ?_USBDeviceAttach 002E  
                  _USBStdGetStatusHandler 3452                              sprintf@width 008D  
                      __size_of_main_init 00DE                                __pbssBANK0 00D0  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                           ??_I2C_LCD_ISR 002E                           _I2C_LCD_command 3B5C  
                           ??_I2C_LCD_put 006F                   __end_of_caltime_to_RTCC 2832  
                         _RTCC_to_caltime 2F54               __size_of_USBWakeFromSuspend 0032  
                             _pBDTEntryIn 0010                 I2C_LCD_cursor@row_offsets 0072  
        __end_of_USBCtrlEPServiceComplete 205C               __size_of_USBCheckCDCRequest 00B0  
                   __end_of_weekday_3char FE42                     RTCC_task@prev_halfsec 012E  
                    USBCtrlTrfRxService@i 002E                                   ?___lmul 006D  
                              ??_UART_ISR 003D                                   ?___wmul 0060  
                                 ?_d_to_x 002E                    __end_of_put_string_usb 439C  
                              ??_OSC_init 0060                                   ?_memset 0060  
                          ___lmul@product 0075                                _device_dsc FE42  
                        _USBCtrlEPService 2B7E                                   ?_x_to_d 002E  
                              _ep_data_in 0016                                   ?_strcat 0060  
                                 ?_strcmp 0060                                   ?_strcpy 0060  
             __end_of_USBCtrlTrfRxService 1D70                        _USBCheckStdRequest 25AA  
                              ??_USB_init 0069                         _configDescriptor1 FD7B  
                              ??_USB_task 0074                          ??_get_string_usb 0071  
                      __CFG_OSC$INTOSCPLL 000000                                ??i2_memset 0034  
             __end_of_USBCtrlTrfTxService 2B7E                       _USBStdSetCfgHandler 24CE  
                  I2C_LCD_SetCursor@F8620 01E5                           __CFG_WDTPS$1024 000000  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00BF  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                     ?_USBCheckStdRequest 002E              __size_of_USBStdGetDscHandler 0132  
                                 _UIEbits 000F36                                   _USB_ISR 45B4  
                 __end_of_RTCC_from_epoch 4566                      timer1_init@prescaler 0062  
                                 _UIRbits 000F62                          i2ringbuf_pop@ret 003C  
                        __CFG_CFGPLLEN$ON 000000                             _cdc_trf_state 0027  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                         RTCC_from_epoch@tm 008F  
                                 _pCDCDst 011B                                   _pCDCSrc 011E  
                   __size_of_getsUSBUSART 00EA                    display_time_0802@line0 0099  
                  display_time_0802@line1 009B                                   __Hparam 0000  
                    ?_USBStdSetCfgHandler 002E                                 _CDCInitEP 3BCC  
                                 __Lparam 0000                       __end_of_I2C_LCD_ISR 4598  
                       ringbuf_put_num@rb 006F                __size_of_USBEnableEndpoint 003C  
                     __end_of_I2C_LCD_put 3B5C                         ringbuf_put_str@rb 006F  
                            USB_task@data 0076                      ??_USBCheckStdRequest 0048  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 0060  
                                 ___awdiv 2DDA                           __size_of___lmul 0076  
                                 ___awmod 34FC                                   ___lldiv 2E98  
                        ??_USBDeviceTasks 004B                           __size_of___wmul 0036  
                   ringbuf_put_num@digits 0073                                   ___lwdiv 39FC  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002E  
                                 ___lwmod 3DD4                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 0B70                     __end_of_terminal_time 0806  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 2312                      __size_of_putUSBUSART 0020  
             epoch_to_caltime@month_cache 01E9                                   __pcinit 3872  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FDBE                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 1D70                                   __ptext1 0806  
                                 __ptext2 29DA                                   __ptext3 045A  
                                 __ptext4 3D72                                   __ptext5 37E6  
                                 __ptext6 3D0E                                   __ptext7 4446  
                                 __ptext8 3E96                                   __ptext9 1E7A  
                                 _inPipes 000A                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0020               _USBDeferOUTDataStagePackets 0020  
                               _T0CONbits 000FD5                           __size_of_strcat 0060  
                        _time_change_flag 0132                          _caltime_to_epoch 0B70  
                         __size_of_strcmp 005C                           __size_of_strcpy 0038  
                            __size_of_ISR 00B4                                 _T1CONbits 000FCD  
                                 _dpowers FD69                              ??_USBSuspend 0042  
                 __size_of_RTCC_from_RTCC 001A                                   _isdigit 43F4  
                               _T3CONbits 000F79                          ___awmod@dividend 0060  
                               _T5CONbits 000F22                           i2_USBDeviceInit 19F8  
                        i2USBDeviceInit@i 0036                   __end_of_I2C_LCD_command 3BCC  
                                 _uart_rx 014B                                   _uart_tx 0153  
                           I2C_LCD_puts@s 0070                        __end_of_USB_CD_Ptr FD7B  
                     I2C_LCD_command@wait 006F                                   _sprintf 0000  
         __size_of_USBCtrlTrfSetupHandler 0082                   __end_of_RTCC_to_caltime 3010  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 38EE  
                            _getsUSBUSART 214A                    __size_ofi2_ringbuf_pop 00AC  
                  __size_ofi2_ringbuf_num 00BC                    __size_ofi2_ringbuf_put 00B6  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FD79  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 001B  
                          ??_month_length 0067                            display_dec@dec 0091  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                            display_dec@str 008F  
         _dummy_encapsulated_cmd_response 0143                  ?_USBStdFeatureReqHandler 002E  
                        ?_caltime_to_RTCC 0069                     ??_USBStdSetCfgHandler 0042  
                         ___lldiv@divisor 0064                      timer3_init@prescaler 0061  
                              ?_CDCInitEP 002E                           ___lldiv@counter 006C  
                       ?_is_usb_available 002E                        __end_of_USBSuspend 43C8  
                        I2C_LCD_task@data 0071                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 359E                          I2C_LCD_task@wait 0121  
                      ??_is_usb_available 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                _USBCtrlEPServiceComplete 1F6C                                   strcmp@r 0065  
              _USBStatusStageEnabledFlag1 0023                _USBStatusStageEnabledFlag2 0024  
                      USBEnableEndpoint@p 0037                                 _UART_init 4492  
                               _UART_task 44D4                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 3C3A                                 _RTCC_task 4126  
               epoch_to_caltime@day_cache 0129                    i2ringbuf_put@asciicode 0038  
                            _get_quot_rem 2832                                _print_time 37E6  
                          _ringbuf_delete 446C                 __size_of_epoch_to_caltime 01F2  
                        __CFG_CPUDIV$OSC1 000000                    I2C_LCD_command@command 0070  
                      _BothEP0OutUOWNsSet 001D                       RTCC_from_caltime@tm 008F  
               USBConfigureEndpoint@EPNum 0033                ?_USBCtrlEPAllowStatusStage 002E  
                        ?_RTCC_from_epoch 008F       USER_USB_CALLBACK_EVENT_HANDLER@size 003E  
                            _i2c_lcd_flag 002A                                 _USTATcopy 002D  
                             _I2C_LCD_ISR 4580                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 275C                               _I2C_LCD_put 3AEA  
                        __CFG_IOL1WAY$OFF 000000                         putUSBUSART@length 0062  
                     __CFG_MSSP7B_EN$MSK7 000000                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 397A                          ??_I2C_LCD_cursor 0072  
                          ringbuf_pop@ret 006E                             ??_display_dec 0093  
                           i2_ringbuf_pop 33A6                             i2_ringbuf_num 3010  
                 ?i2_USBTransferOnePacket 002E                             i2_ringbuf_put 3240  
                   __end_of_USBDeviceInit 175C                         ?_terminal_at_hand 00AF  
                          __end_of___lmul 3AEA                            __end_of___wmul 427E  
                          __end_of_d_to_x 4446                         __size_of_UART_ISR 004A  
                 __end_ofi2_USBDeviceInit 1B32                    __end_of_ringbuf_delete 4492  
                              ?_UART_init 002E                        ??_terminal_at_hand 00B6  
                               i2memset@c 0030                                 i2memset@n 0032  
                               i2memset@p 0034                                ?_UART_task 002E  
                          __end_of_memset 42B2                                ?_RTCC_init 002E  
                       __size_of_OSC_init 000E                                ?_RTCC_task 002E  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 012F  
                          __end_of_x_to_d 4514                            __end_of_strcat 3E96  
                   epoch_to_caltime@month 008A                            __end_of_strcmp 3EF2  
                          __end_of_strcpy 4248                       start_initialization 3872  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 002E  
                             __end_of_ISR 10BC             USBCtrlTrfRxService@byteToRead 002F  
                       __size_of_USB_init 001C                         __size_of_USB_task 008E  
                        ?_I2C_LCD_command 006F                             ?_I2C_LCD_init 002E  
                           ?_I2C_LCD_task 002E                               _cdc_data_rx 0200  
                             _cdc_data_tx 0240                         __size_ofi2_memset 002C  
                           UART_ISR@ascii 003D                             ?_I2C_LCD_puts 0070  
            __end_of_USBConfigureEndpoint 36CA                          ?_RTCC_to_caltime 0062  
         __end_of_USBStdFeatureReqHandler 1086         __end_of_USBCtrlEPAllowStatusStage 2DDA  
                __end_of_USBCtrlEPService 2C4C                 ??_USBCtrlEPAllowDataStage 002F  
                             ??_CDCInitEP 003A                            USBDeviceInit@i 0068  
                  _pBDTEntryEP0OutCurrent 0019                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 3186  
                     ringbuf_put_num@temp 0075                                  ??___lmul 0075  
                          ?i2_ringbuf_pop 0036                            ?i2_ringbuf_num 002E  
                          ?i2_ringbuf_put 0036                                  ??___wmul 0064  
                     _USBStdGetDscHandler 1B32                     __end_of_I2C_LCD_clear 45B4  
                                ??_d_to_x 0068               __size_of_terminal_operation 00D2  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 01E5  
                     I2C_LCD_cursor@F8592 01E7                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcat 0064                                  ??_strcmp 0064  
                                ??_strcpy 0064                      __end_of_month_length 24CE  
                          _RTCC_from_RTCC 4566                    _USBActiveConfiguration 002C  
          __end_of_USBStdGetStatusHandler 34FC                               ?_print_time 008F  
                     __end_of_display_dec 3D0E                               __pbssCOMRAM 0001  
                          USB_task@rx_len 0074                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 017C  
                           __pcstackBANK3 03C8              __size_of_USBCtrlTrfInHandler 00BA  
                          ??_I2C_LCD_init 0071                            ??_I2C_LCD_task 006F  
                          ??_I2C_LCD_puts 0072                      __end_of_ringbuf_init 3FFA  
                    ?_USBStdGetDscHandler 002E                              _isdigit$5795 0061  
                                ?_USB_ISR 002E                __end_of_USBWakeFromSuspend 4316  
                             sprintf@flag 008B                               sprintf@prec 0082  
                         _USBStallHandler 40E0                              _pBDTEntryOut 010A  
              __end_of_USBCheckCDCRequest 33A6                  __end_of_caltime_to_epoch 0DFE  
                         millis_timer@cnt 012B                  __size_of_USBDeviceAttach 0038  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 0060  
                               __pintcode 1008                             __pmediumconst FD68  
                                ?___awdiv 0060                                 __ptext100 4580  
                                ?___awmod 0060                                  ?___lldiv 0060  
                                ?___lwdiv 0060                                  ?___lwmod 0067  
                   _is_usb_available$5180 0060                    __end_of_RTCC_from_RTCC 4580  
                        ?i2_USBDeviceInit 002E                               ??_UART_init 0060  
              USBCBSendResume@delay_count 0123                               ??_UART_task 0068  
                             ??_RTCC_init 0091                               ??_RTCC_task 0088  
                    _USBTransferOnePacket 2684                                 _main_init 2234  
                                ?_isdigit 002E                          _epoch_to_caltime 129A  
                    __CFG_RTCOSC$T1OSCREF 000000                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 3F4E                       ringbuf_backspace@rb 0068  
                   ??_USBStdGetDscHandler 002E                               _ep_data_out 0118  
                        ___lwdiv@quotient 0065                     terminal_at_hand@value 00B5  
                                ?_sprintf 006C              __size_of_USBCtrlTrfRxService 010C  
           USBConfigureEndpoint@direction 002E                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00D2  
                ringbuf_init@internal_buf 0062                            ___wmul@product 0064  
                                _LATAbits 000F89                           I2C_LCD_init@buf 0400  
              ??_USBCtrlEPServiceComplete 002F                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                       __size_of_print_time 008C  
                         ??i2_ringbuf_pop 0038                           ??i2_ringbuf_num 0030  
                         ??i2_ringbuf_put 0039                                  i2u440_40 2B68  
                                i2u440_47 2B5E                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u438_40 2B28  
                                i2u470_40 1BDE                                  i2u438_47 2B1E  
                                i2u470_47 1BD4                                  i2u472_40 1C36  
                                i2u472_47 1C2C                                  _PIR5bits 000F98  
              epoch_to_caltime@year_cache 0133                                  i2u469_40 1BAE  
                                i2u469_47 1BA4                 USBCtrlEPService@setup_cnt 004A  
                                i2u755_40 106C                                  i2u756_48 106E  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 006B                                  _RCONbits 000FD0  
                       _display_time_0802 1086                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26                _USBDeferINDataStagePackets 001F  
                                _UART_ISR 4096                     terminal_operation@op0 00C1  
                   terminal_operation@op1 00C3                     terminal_operation@op2 00C5  
                   terminal_operation@op3 00C7                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0060  
                           ??_timer1_init 0061               __size_of_USBCheckStdRequest 00DA  
                           ??_timer3_init 0060                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                        ?_display_time_0802 0097  
                             _display_dec 3CA4                      _USBConfigureEndpoint 3636  
                                _OSC_init 4598                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 0288                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0060  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                                _USB_init 4514                                  _USB_task 3758  
                              ?_main_init 002E                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002E                       ??_display_time_0802 009D  
                            _RemoteWakeup 001E                                  i2_memset 43C8  
                       ??_ringbuf_put_num 0074                         ??_ringbuf_put_str 0073  
                           ringbuf_pop@rb 0068                             ringbuf_num@rb 0060  
                 __end_of_USBStallHandler 4126                             ringbuf_put@rb 0068  
                       ___lmul@multiplier 006D                               _INTCON2bits 000FF1  
                               copy_data0 38E2               ??_USBCtrlEPAllowStatusStage 002E  
             __end_of_USBStdSetCfgHandler 25AA                          __size_of_USB_ISR 0006  
                    epoch_to_caltime@year 0089                           main_init@uartrx 0300  
                         main_init@uarttx 04C8                              ?_I2C_LCD_ISR 002E  
                  __size_of_terminal_task 036A                    __size_of_terminal_time 03AC  
                 __size_of_get_string_usb 004C                              ?_I2C_LCD_put 002E  
                      __end_of_device_dsc FE54                   ?_USBCtrlTrfSetupHandler 002E  
               __end_of_display_time_0802 129A                   USBStdGetStatusHandler@p 002F  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                                  _SetupPkt 000D30  
                           _weekday_3char FE26                      __end_of_I2C_LCD_init 23F0  
                    __end_of_I2C_LCD_task 18AE                      __end_of_I2C_LCD_puts 3FA6  
                   __size_of_month_length 00DE                        ringbuf_put_str@str 0071  
                   ?_USBConfigureEndpoint 002E                  __size_of_caltime_to_RTCC 00D6  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                          __size_of___lldiv 00BC  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                     __end_of_ringbuf_pop 2D18                       __end_of_ringbuf_num 214A  
                     __end_of_ringbuf_put 29DA                       __end_of_putUSBUSART 44D4  
                             _line_coding 0173                            ??_CDCTxService 0067  
                     __end_of_timer0_init 41D8                     __size_of_ringbuf_init 0054  
                     __end_of_timer1_init 404A                                sprintf@len 0089  
                     __end_of_timer3_init 4370                                sprintf@val 0087  
                              strcat@from 0062                          __size_of_isdigit 002A  
                 __size_of_USBDeviceTasks 014A                           ___lwdiv@divisor 0062  
                         ___lwdiv@counter 0064                      timer0_init@prescaler 0061  
                                __ptext10 38F8                                  __ptext11 446C  
                                __ptext20 41D8                                  __ptext12 36CA  
                                __ptext21 4492                                  __ptext13 2234  
                                __ptext30 4598                                  __ptext22 3C3A  
                                __ptext14 4344                                  __ptext31 2312  
                                __ptext23 454C                                  __ptext15 3FFA  
                                __ptext40 4248                                  __ptext32 3FA6  
                                __ptext24 129A                                  __ptext16 419E  
                                __ptext41 3DD4                                  __ptext33 45A6  
                                __ptext25 2832                                  __ptext17 4514  
                                __ptext50 2684                                  __ptext42 39FC  
                                __ptext34 1086                                  __ptext26 2E98  
                                __ptext18 1604                                  __ptext51 44D4  
                                __ptext43 3758                                  __ptext35 4210  
                                __ptext27 275C                                  __ptext19 427E  
                                __ptext60 175C                                  __ptext52 4126  
                                __ptext44 4370                                  __ptext36 3CA4  
                                __ptext28 441E                                  __ptext61 2C4C  
                                __ptext53 4566                                  __ptext45 44B4  
                                __ptext37 3E36                                  __ptext29 2DDA  
                                __ptext70 18AE                                  __ptext62 3F4E  
                                __ptext54 0B70                                  __ptext46 404A  
                                __ptext38 0000                                  __ptext71 19F8  
                                __ptext63 3AEA                                  __ptext55 23F0  
                                __ptext47 4530                                  __ptext39 43F4  
                                __ptext80 24CE                                  __ptext72 42E4  
                                __ptext64 42B2                                  __ptext56 34FC  
                                __ptext48 214A                                  __ptext81 43C8  
                                __ptext73 439C                                  __ptext65 3B5C  
                                __ptext57 3A74                                  __ptext49 148C  
                                __ptext90 3636                                  __ptext82 3452  
                                __ptext74 40E0                                  __ptext66 2906  
                                __ptext58 2F54                                  __ptext91 3EF2  
                                __ptext83 1B32                                  __ptext75 2B7E  
                                __ptext67 205C                                  __ptext59 44F4  
                                __ptext92 1C64                                  __ptext84 0DFE  
                                __ptext76 397A                                  __ptext93 2D18  
                                __ptext85 4316                                  __ptext77 1F6C  
                                __ptext69 45B4                                  __ptext94 3186  
                                __ptext86 32F6                                  __ptext78 359E  
                                __ptext95 2AAC                                  __ptext87 3BCC  
                                __ptext79 25AA                                  __ptext96 4096  
                                __ptext88 30CC                                  __ptext97 3240  
                                __ptext89 4162                                  __ptext98 33A6  
                                __ptext99 3010                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                 __size_of_terminal_at_hand 0062  
                        __size_of_sprintf 045A                                strcpy@from 0062  
                    terminal_at_hand@hand 00B1                             __size_of_atoi 00F2  
          __end_of_USBCtrlTrfSetupHandler 39FC                             __size_of_main 010A  
                       ?_USBCtrlEPService 002E                              _month_length 23F0  
                       put_string_usb@len 006E                        ??_USBCtrlEPService 0048  
                __size_of_RTCC_from_epoch 001A                       _USBCtrlTrfInHandler 3186  
                                _outPipes 0001                          ??_ringbuf_delete 0062  
                    _USBCtrlTrfOutHandler 3EF2                                  int$flags 005B  
                            _ringbuf_init 3FA6                                  atoi@sign 006A  
               _USBCtrlEPAllowStatusStage 2D18                                 x_to_d@hex 0061  
                            _SSP1STATbits 000FC7                    ??_USBTransferOnePacket 0064  
                           _terminal_task 0806                             _terminal_time 045A  
               _USBDeferStatusStagePacket 0021                              ??_print_time 0091  
                CDCTxService@byte_to_send 006B                            main_init@usbrx 0364  
                          main_init@usbtx 08B0                               ??_main_init 0091  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                    ringbuf_put@asciicode 006A                      ?_USBCtrlTrfInHandler 002E  
           USBCtrlTrfTxService@byteToSend 002E                           display_dec@edit 0092  
                                isdigit@c 0062                                  memset@p1 0060  
                        ?_USBStallHandler 002E                  USBStdFeatureReqHandler@p 0046  
                        get_quot_rem@quot 0079                 terminal_task@command_init 0134  
                       RTCC_to_caltime@tm 0062                         I2C_LCD_cursor@col 0074  
                       I2C_LCD_cursor@row 0071                                  intlevel2 0000  
                               sprintf@ap 0083                                 sprintf@cp 0085  
                               sprintf@sp 006C                    __size_of_USBDeviceInit 0158  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4344  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0040          ?_USER_USB_CALLBACK_EVENT_HANDLER 003A  
         _USER_USB_CALLBACK_EVENT_HANDLER 4316                          ___lwmod@dividend 0067  
            i2USBTransferOnePacket@handle 0033                          ___lldiv@dividend 0060  
                __size_of_I2C_LCD_command 0070                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00B4                       terminal_at_hand@min 00B3  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 36CA  
              __size_of_display_time_0802 0214                  __end_of_epoch_to_caltime 148C  
                __size_of_RTCC_to_caltime 00BC                                _OSCCONbits 000FD3  
              __end_of_terminal_operation 2AAC                        __end_of_print_time 3872  
              i2USBTransferOnePacket@data 002F                        ??_caltime_to_epoch 007B  
                      ?_ringbuf_backspace 0068                    ??_USBConfigureEndpoint 002F  
                   ?_USBCtrlTrfOutHandler 002E                               _ringbuf_pop 2C4C  
                             _ringbuf_num 205C                               _ringbuf_put 2906  
                             _putUSBUSART 44B4                       _USBCtrlTrfRxService 1C64  
                             _timer0_init 419E                        _USBWakeFromSuspend 42E4  
                             _timer1_init 3FFA                               _timer3_init 4344  
                          ?_terminal_task 00C9                            ?_terminal_time 00B6  
                 _USBStdFeatureReqHandler 0DFE                        _USBCheckCDCRequest 32F6  
                     _USBCtrlTrfTxService 2AAC                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                                  sprintf@c 008C  
                                sprintf@f 006E                                  strcat@cp 0064  
                                strcat@to 0060                       ?_USBWakeFromSuspend 002E  
                                strcmp@s1 0060                                  strcmp@s2 0062  
                        _is_usb_available 4530                          ___lldiv@quotient 0068  
                         ___lwmod@divisor 0069                         caltime_to_RTCC@tm 0069  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002F  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 017A                           ___lwmod@counter 006B  
                      terminal_at_hand@tx 00AF                   __size_of_I2C_LCD_cursor 0032  
                     ?_USBCheckCDCRequest 002E                 i2USBTransferOnePacket@dir 002E  
               i2USBTransferOnePacket@len 0031                       USBEnableEndpoint@ep 0039  
                         _endpoint_number 0029                      ?_USBCtrlTrfRxService 002E  
         epoch_to_caltime@day_since_epoch 0085                             ?_getsUSBUSART 0067  
                  __size_of_I2C_LCD_clear 000E                  ?_USBCtrlEPAllowDataStage 002E  
                          _get_string_usb 404A                      ?_USBCtrlTrfTxService 002E  
               I2C_LCD_task@i2c_lcd_state 012D                 __end_of_ringbuf_backspace 3758  
            _USBStatusStageTimeoutCounter 0025                     __size_of_I2C_LCD_init 00DE  
                    ??_USBWakeFromSuspend 0042                     __size_of_I2C_LCD_task 0152  
                    __size_of_I2C_LCD_ISR 0018                USBTransferOnePacket@handle 0065  
                   __size_of_I2C_LCD_puts 0058                      __end_of_CDCTxService 1604  
                    __size_of_I2C_LCD_put 0072                      ??_USBCheckCDCRequest 002E  
                              _USB_CD_Ptr FD79                          ??_RTCC_from_RTCC 0088  
