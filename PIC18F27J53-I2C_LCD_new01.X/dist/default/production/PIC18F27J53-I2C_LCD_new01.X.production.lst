

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Nov 15 22:52:39 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	dabs	1,0xD00,48,_BDT
    38                           	dabs	1,0xD38,8,_CtrlTrfData
    39                           	dabs	1,0xD30,8,_SetupPkt
    40  0000                     
    41                           	psect	idataBANK0
    42  001000                     __pidataBANK0:
    43                           	opt stack 0
    44                           
    45                           ;initializer for I2C_LCD_SetCursor@F8620
    46  001000  00                 	db	0
    47  001001  40                 	db	64
    48                           
    49                           ;initializer for ST7032_cursor@F8592
    50  001002  00                 	db	0
    51  001003  40                 	db	64
    52                           
    53                           ;initializer for epoch_to_caltime@month_cache
    54  001004  01                 	db	1
    55                           
    56                           	psect	mediumconst
    57  00FE6E                     __pmediumconst:
    58                           	opt stack 0
    59  00FE6E  00                 	db	0
    60  00FE6F                     _dpowers:
    61                           	opt stack 0
    62  00FE6F  0001               	dw	1
    63  00FE71  000A               	dw	10
    64  00FE73  0064               	dw	100
    65  00FE75  03E8               	dw	1000
    66  00FE77  2710               	dw	10000
    67  00FE79                     __end_of_dpowers:
    68                           	opt stack 0
    69  00FE79                     _USB_SD_Ptr:
    70                           	opt stack 0
    71  00FE79  5A                 	db	low _sd000
    72  00FE7A  FF                 	db	high _sd000
    73  00FE7B  C4                 	db	low _sd001
    74  00FE7C  FE                 	db	high _sd001
    75  00FE7D  F8                 	db	low _sd002
    76  00FE7E  FE                 	db	high _sd002
    77  00FE7F                     __end_of_USB_SD_Ptr:
    78                           	opt stack 0
    79  00FE7F                     _USB_CD_Ptr:
    80                           	opt stack 0
    81  00FE7F  81                 	db	low _configDescriptor1
    82  00FE80  FE                 	db	high _configDescriptor1
    83  00FE81                     __end_of_USB_CD_Ptr:
    84                           	opt stack 0
    85  00FE81                     _configDescriptor1:
    86                           	opt stack 0
    87  00FE81  09                 	db	9
    88  00FE82  02                 	db	2
    89  00FE83  43                 	db	67
    90  00FE84  00                 	db	0
    91  00FE85  02                 	db	2
    92  00FE86  01                 	db	1
    93  00FE87  00                 	db	0
    94  00FE88  C0                 	db	192
    95  00FE89  32                 	db	50
    96  00FE8A  09                 	db	9
    97  00FE8B  04                 	db	4
    98  00FE8C  00                 	db	0
    99  00FE8D  00                 	db	0
   100  00FE8E  01                 	db	1
   101  00FE8F  02                 	db	2
   102  00FE90  02                 	db	2
   103  00FE91  01                 	db	1
   104  00FE92  00                 	db	0
   105  00FE93  05                 	db	5
   106  00FE94  24                 	db	36
   107  00FE95  00                 	db	0
   108  00FE96  10                 	db	16
   109  00FE97  01                 	db	1
   110  00FE98  04                 	db	4
   111  00FE99  24                 	db	36
   112  00FE9A  02                 	db	2
   113  00FE9B  02                 	db	2
   114  00FE9C  05                 	db	5
   115  00FE9D  24                 	db	36
   116  00FE9E  06                 	db	6
   117  00FE9F  00                 	db	0
   118  00FEA0  01                 	db	1
   119  00FEA1  05                 	db	5
   120  00FEA2  24                 	db	36
   121  00FEA3  01                 	db	1
   122  00FEA4  00                 	db	0
   123  00FEA5  01                 	db	1
   124  00FEA6  07                 	db	7
   125  00FEA7  05                 	db	5
   126  00FEA8  81                 	db	129
   127  00FEA9  03                 	db	3
   128  00FEAA  08                 	db	8
   129  00FEAB  00                 	db	0
   130  00FEAC  02                 	db	2
   131  00FEAD  09                 	db	9
   132  00FEAE  04                 	db	4
   133  00FEAF  01                 	db	1
   134  00FEB0  00                 	db	0
   135  00FEB1  02                 	db	2
   136  00FEB2  0A                 	db	10
   137  00FEB3  00                 	db	0
   138  00FEB4  00                 	db	0
   139  00FEB5  00                 	db	0
   140  00FEB6  07                 	db	7
   141  00FEB7  05                 	db	5
   142  00FEB8  02                 	db	2
   143  00FEB9  02                 	db	2
   144  00FEBA  40                 	db	64
   145  00FEBB  00                 	db	0
   146  00FEBC  00                 	db	0
   147  00FEBD  07                 	db	7
   148  00FEBE  05                 	db	5
   149  00FEBF  82                 	db	130
   150  00FEC0  02                 	db	2
   151  00FEC1  40                 	db	64
   152  00FEC2  00                 	db	0
   153  00FEC3  00                 	db	0
   154  00FEC4                     __end_of_configDescriptor1:
   155                           	opt stack 0
   156  00FEC4                     _sd001:
   157                           	opt stack 0
   158  00FEC4  34                 	db	52
   159  00FEC5  03                 	db	3
   160  00FEC6  004D               	dw	77
   161  00FEC8  0069               	dw	105
   162  00FECA  0063               	dw	99
   163  00FECC  0072               	dw	114
   164  00FECE  006F               	dw	111
   165  00FED0  0063               	dw	99
   166  00FED2  0068               	dw	104
   167  00FED4  0069               	dw	105
   168  00FED6  0070               	dw	112
   169  00FED8  0020               	dw	32
   170  00FEDA  0054               	dw	84
   171  00FEDC  0065               	dw	101
   172  00FEDE  0063               	dw	99
   173  00FEE0  0068               	dw	104
   174  00FEE2  006E               	dw	110
   175  00FEE4  006F               	dw	111
   176  00FEE6  006C               	dw	108
   177  00FEE8  006F               	dw	111
   178  00FEEA  0067               	dw	103
   179  00FEEC  0079               	dw	121
   180  00FEEE  0020               	dw	32
   181  00FEF0  0049               	dw	73
   182  00FEF2  006E               	dw	110
   183  00FEF4  0063               	dw	99
   184  00FEF6  002E               	dw	46
   185  00FEF8                     __end_of_sd001:
   186                           	opt stack 0
   187  00FEF8                     _sd002:
   188                           	opt stack 0
   189  00FEF8  34                 	db	52
   190  00FEF9  03                 	db	3
   191  00FEFA  0043               	dw	67
   192  00FEFC  0044               	dw	68
   193  00FEFE  0043               	dw	67
   194  00FF00  0020               	dw	32
   195  00FF02  0052               	dw	82
   196  00FF04  0053               	dw	83
   197  00FF06  002D               	dw	45
   198  00FF08  0032               	dw	50
   199  00FF0A  0033               	dw	51
   200  00FF0C  0032               	dw	50
   201  00FF0E  0020               	dw	32
   202  00FF10  0045               	dw	69
   203  00FF12  006D               	dw	109
   204  00FF14  0075               	dw	117
   205  00FF16  006C               	dw	108
   206  00FF18  0061               	dw	97
   207  00FF1A  0074               	dw	116
   208  00FF1C  0069               	dw	105
   209  00FF1E  006F               	dw	111
   210  00FF20  006E               	dw	110
   211  00FF22  0020               	dw	32
   212  00FF24  0044               	dw	68
   213  00FF26  0065               	dw	101
   214  00FF28  006D               	dw	109
   215  00FF2A  006F               	dw	111
   216  00FF2C                     __end_of_sd002:
   217                           	opt stack 0
   218  00FF2C                     _weekday_3char:
   219                           	opt stack 0
   220  00FF2C  53                 	db	83
   221  00FF2D  55                 	db	85
   222  00FF2E  4E                 	db	78
   223  00FF2F  00                 	db	0
   224  00FF30  4D                 	db	77
   225  00FF31  4F                 	db	79
   226  00FF32  4E                 	db	78
   227  00FF33  00                 	db	0
   228  00FF34  54                 	db	84
   229  00FF35  55                 	db	85
   230  00FF36  45                 	db	69
   231  00FF37  00                 	db	0
   232  00FF38  57                 	db	87
   233  00FF39  45                 	db	69
   234  00FF3A  44                 	db	68
   235  00FF3B  00                 	db	0
   236  00FF3C  54                 	db	84
   237  00FF3D  48                 	db	72
   238  00FF3E  55                 	db	85
   239  00FF3F  00                 	db	0
   240  00FF40  46                 	db	70
   241  00FF41  52                 	db	82
   242  00FF42  49                 	db	73
   243  00FF43  00                 	db	0
   244  00FF44  53                 	db	83
   245  00FF45  41                 	db	65
   246  00FF46  54                 	db	84
   247  00FF47  00                 	db	0
   248  00FF48                     __end_of_weekday_3char:
   249                           	opt stack 0
   250  00FF48                     _device_dsc:
   251                           	opt stack 0
   252  00FF48  12                 	db	18
   253  00FF49  01                 	db	1
   254  00FF4A  0200               	dw	512
   255  00FF4C  02                 	db	2
   256  00FF4D  00                 	db	0
   257  00FF4E  00                 	db	0
   258  00FF4F  08                 	db	8
   259  00FF50  04D8               	dw	1240
   260  00FF52  000A               	dw	10
   261  00FF54  0100               	dw	256
   262  00FF56  01                 	db	1
   263  00FF57  02                 	db	2
   264  00FF58  00                 	db	0
   265  00FF59  01                 	db	1
   266  00FF5A                     __end_of_device_dsc:
   267                           	opt stack 0
   268  00FF5A                     _sd000:
   269                           	opt stack 0
   270  00FF5A  04                 	db	4
   271  00FF5B  03                 	db	3
   272  00FF5C  0409               	dw	1033
   273  00FF5E                     __end_of_sd000:
   274                           	opt stack 0
   275  0000                     _ANCON0	set	3912
   276  0000                     _ANCON1	set	3913
   277  0000                     _PADCFG1bits	set	3900
   278  0000                     _RTCCAL	set	3902
   279  0000                     _RTCCFGbits	set	3903
   280  0000                     _RTCVALH	set	3899
   281  0000                     _RTCVALL	set	3898
   282  0000                     _T5CONbits	set	3874
   283  0000                     _UADDR	set	3896
   284  0000                     _UCFG	set	3897
   285  0000                     _UEIE	set	3895
   286  0000                     _UEP0bits	set	3878
   287  0000                     _UIE	set	3894
   288  0000                     _UIEbits	set	3894
   289  0000                     _UEP0	set	3878
   290  0000                     _UEP1	set	3879
   291  0000                     _ADRES	set	4035
   292  0000                     _ADCON0bits	set	4034
   293  0000                     _ADCON1bits	set	4033
   294  0000                     _BAUDCON1bits	set	3966
   295  0000                     _CTMUCONH	set	4019
   296  0000                     _CTMUCONHbits	set	4019
   297  0000                     _CTMUCONL	set	4018
   298  0000                     _CTMUCONLbits	set	4018
   299  0000                     _CTMUICON	set	4017
   300  0000                     _EECON2	set	4007
   301  0000                     _INTCON2bits	set	4081
   302  0000                     _INTCONbits	set	4082
   303  0000                     _IPR1bits	set	3999
   304  0000                     _IPR2bits	set	4002
   305  0000                     _IPR5bits	set	3993
   306  0000                     _LATAbits	set	3977
   307  0000                     _OSCCONbits	set	4051
   308  0000                     _OSCTUNEbits	set	3995
   309  0000                     _PIE1bits	set	3997
   310  0000                     _PIE2bits	set	4000
   311  0000                     _PIE5bits	set	3985
   312  0000                     _PIR1bits	set	3998
   313  0000                     _PIR2bits	set	4001
   314  0000                     _PIR5bits	set	3992
   315  0000                     _RCONbits	set	4048
   316  0000                     _RCREG1	set	4015
   317  0000                     _RCSTA1bits	set	4012
   318  0000                     _SPBRG1	set	4016
   319  0000                     _SPBRGH1	set	3967
   320  0000                     _SSP1ADD	set	4040
   321  0000                     _SSP1BUF	set	4041
   322  0000                     _SSP1CON1	set	4038
   323  0000                     _SSP1CON1bits	set	4038
   324  0000                     _SSP1CON2	set	4037
   325  0000                     _SSP1CON2bits	set	4037
   326  0000                     _SSP1STAT	set	4039
   327  0000                     _SSP1STATbits	set	4039
   328  0000                     _T0CONbits	set	4053
   329  0000                     _T1CONbits	set	4045
   330  0000                     _T3CONbits	set	3961
   331  0000                     _TMR1H	set	4047
   332  0000                     _TRISA	set	3986
   333  0000                     _TRISB	set	3987
   334  0000                     _TRISC	set	3988
   335  0000                     _TXREG1	set	4014
   336  0000                     _TXSTA1bits	set	4013
   337  0000                     _UCON	set	3941
   338  0000                     _UCONbits	set	3941
   339  0000                     _UEIR	set	3939
   340  0000                     _UIR	set	3938
   341  0000                     _UIRbits	set	3938
   342  0000                     _USTAT	set	3940
   343  0000                     _BCL1IF	set	32011
   344  0000                     _LATB2	set	31826
   345  0000                     _SSP1IF	set	31987
   346  00FF5E  09                 	db	9
   347  00FF5F  32                 	db	50	;'2'
   348  00FF60  30                 	db	48	;'0'
   349  00FF61  25                 	db	37
   350  00FF62  30                 	db	48	;'0'
   351  00FF63  32                 	db	50	;'2'
   352  00FF64  64                 	db	100	;'d'
   353  00FF65  2F                 	db	47
   354  00FF66  25                 	db	37
   355  00FF67  30                 	db	48	;'0'
   356  00FF68  32                 	db	50	;'2'
   357  00FF69  64                 	db	100	;'d'
   358  00FF6A  2F                 	db	47
   359  00FF6B  25                 	db	37
   360  00FF6C  30                 	db	48	;'0'
   361  00FF6D  32                 	db	50	;'2'
   362  00FF6E  64                 	db	100	;'d'
   363  00FF6F  28                 	db	40
   364  00FF70  25                 	db	37
   365  00FF71  73                 	db	115	;'s'
   366  00FF72  29                 	db	41
   367  00FF73  25                 	db	37
   368  00FF74  30                 	db	48	;'0'
   369  00FF75  32                 	db	50	;'2'
   370  00FF76  64                 	db	100	;'d'
   371  00FF77  3A                 	db	58	;':'
   372  00FF78  25                 	db	37
   373  00FF79  30                 	db	48	;'0'
   374  00FF7A  32                 	db	50	;'2'
   375  00FF7B  64                 	db	100	;'d'
   376  00FF7C  2D                 	db	45
   377  00FF7D  25                 	db	37
   378  00FF7E  30                 	db	48	;'0'
   379  00FF7F  32                 	db	50	;'2'
   380  00FF80  64                 	db	100	;'d'
   381  00FF81  0A                 	db	10
   382  00FF82  00                 	db	0
   383  00FF83  61                 	db	97	;'a'
   384  00FF84  64                 	db	100	;'d'
   385  00FF85  6A                 	db	106	;'j'
   386  00FF86  75                 	db	117	;'u'
   387  00FF87  73                 	db	115	;'s'
   388  00FF88  74                 	db	116	;'t'
   389  00FF89  5F                 	db	95	;'_'
   390  00FF8A  74                 	db	116	;'t'
   391  00FF8B  69                 	db	105	;'i'
   392  00FF8C  6D                 	db	109	;'m'
   393  00FF8D  65                 	db	101	;'e'
   394  00FF8E  00                 	db	0
   395  00FF8F  70                 	db	112	;'p'
   396  00FF90  72                 	db	114	;'r'
   397  00FF91  69                 	db	105	;'i'
   398  00FF92  6E                 	db	110	;'n'
   399  00FF93  74                 	db	116	;'t'
   400  00FF94  5F                 	db	95	;'_'
   401  00FF95  74                 	db	116	;'t'
   402  00FF96  69                 	db	105	;'i'
   403  00FF97  6D                 	db	109	;'m'
   404  00FF98  65                 	db	101	;'e'
   405  00FF99  00                 	db	0
   406  00FF9A                     STR_41:
   407  00FF9A  31                 	db	49	;'1'
   408  00FF9B  38                 	db	56	;'8'
   409  00FF9C  46                 	db	70	;'F'
   410  00FF9D  32                 	db	50	;'2'
   411  00FF9E  37                 	db	55	;'7'
   412  00FF9F  4A                 	db	74	;'J'
   413  00FFA0  35                 	db	53	;'5'
   414  00FFA1  33                 	db	51	;'3'
   415  00FFA2  00                 	db	0
   416  00FFA3                     STR_15:
   417  00FFA3  20                 	db	32
   418  00FFA4  20                 	db	32
   419  00FFA5  20                 	db	32
   420  00FFA6  20                 	db	32
   421  00FFA7  20                 	db	32
   422  00FFA8  20                 	db	32
   423  00FFA9  20                 	db	32
   424  00FFAA  20                 	db	32
   425  00FFAB  00                 	db	0
   426  00FFAC                     STR_42:
   427  00FFAC  49                 	db	73	;'I'
   428  00FFAD  32                 	db	50	;'2'
   429  00FFAE  43                 	db	67	;'C'
   430  00FFAF  5F                 	db	95	;'_'
   431  00FFB0  6E                 	db	110	;'n'
   432  00FFB1  65                 	db	101	;'e'
   433  00FFB2  77                 	db	119	;'w'
   434  00FFB3  00                 	db	0
   435  00FFB4  09                 	db	9
   436  00FFB5  65                 	db	101	;'e'
   437  00FFB6  72                 	db	114	;'r'
   438  00FFB7  72                 	db	114	;'r'
   439  00FFB8  6F                 	db	111	;'o'
   440  00FFB9  72                 	db	114	;'r'
   441  00FFBA  0A                 	db	10
   442  00FFBB  00                 	db	0
   443  00FFBC                     STR_43:
   444  00FFBC  28                 	db	40
   445  00FFBD  6E                 	db	110	;'n'
   446  00FFBE  75                 	db	117	;'u'
   447  00FFBF  6C                 	db	108	;'l'
   448  00FFC0  6C                 	db	108	;'l'
   449  00FFC1  29                 	db	41
   450  00FFC2  00                 	db	0
   451  00FFC3  73                 	db	115	;'s'
   452  00FFC4  65                 	db	101	;'e'
   453  00FFC5  63                 	db	99	;'c'
   454  00FFC6  6F                 	db	111	;'o'
   455  00FFC7  6E                 	db	110	;'n'
   456  00FFC8  64                 	db	100	;'d'
   457  00FFC9  00                 	db	0
   458  00FFCA  6D                 	db	109	;'m'
   459  00FFCB  69                 	db	105	;'i'
   460  00FFCC  6E                 	db	110	;'n'
   461  00FFCD  75                 	db	117	;'u'
   462  00FFCE  74                 	db	116	;'t'
   463  00FFCF  65                 	db	101	;'e'
   464  00FFD0  00                 	db	0
   465  00FFD1                     STR_32:
   466  00FFD1  6D                 	db	109	;'m'
   467  00FFD2  6F                 	db	111	;'o'
   468  00FFD3  6E                 	db	110	;'n'
   469  00FFD4  74                 	db	116	;'t'
   470  00FFD5  68                 	db	104	;'h'
   471  00FFD6  00                 	db	0
   472  00FFD7  79                 	db	121	;'y'
   473  00FFD8  65                 	db	101	;'e'
   474  00FFD9  61                 	db	97	;'a'
   475  00FFDA  72                 	db	114	;'r'
   476  00FFDB  00                 	db	0
   477  00FFDC  68                 	db	104	;'h'
   478  00FFDD  6F                 	db	111	;'o'
   479  00FFDE  75                 	db	117	;'u'
   480  00FFDF  72                 	db	114	;'r'
   481  00FFE0  00                 	db	0
   482  00FFE1                     STR_1:
   483  00FFE1  25                 	db	37
   484  00FFE2  30                 	db	48	;'0'
   485  00FFE3  32                 	db	50	;'2'
   486  00FFE4  64                 	db	100	;'d'
   487  00FFE5  00                 	db	0
   488  00FFE6                     STR_19:
   489  00FFE6  08                 	db	8
   490  00FFE7  20                 	db	32
   491  00FFE8  08                 	db	8
   492  00FFE9  00                 	db	0
   493  00FFEA                     STR_34:
   494  00FFEA  64                 	db	100	;'d'
   495  00FFEB  61                 	db	97	;'a'
   496  00FFEC  79                 	db	121	;'y'
   497  00FFED  00                 	db	0
   498  00FFEE                     STR_27:
   499  00FFEE  61                 	db	97	;'a'
   500  00FFEF  74                 	db	116	;'t'
   501  00FFF0  00                 	db	0
   502  00FFF1  4D                 	db	77	;'M'
   503  00FFF2  00                 	db	0
   504  00FFF3  6D                 	db	109	;'m'
   505  00FFF4  00                 	db	0
   506  00FFF5  73                 	db	115	;'s'
   507  00FFF6  00                 	db	0
   508  00FFF7  28                 	db	40
   509  00FFF8  00                 	db	0
   510  00FFF9                     STR_9:
   511  00FFF9  2D                 	db	45
   512  00FFFA  00                 	db	0
   513  00FFFB                     STR_4:
   514  00FFFB  2F                 	db	47
   515  00FFFC  00                 	db	0
   516  00FFFD                     STR_7:
   517  00FFFD  3A                 	db	58	;':'
   518  00FFFE  00                 	db	0
   519  0000                     
   520                           ; #config settings
   521  00FFFF  00                 	db	0	; dummy byte at the end
   522  0000                     
   523                           	psect	cinit
   524  0104A8                     __pcinit:
   525                           	opt stack 0
   526  0104A8                     start_initialization:
   527                           	opt stack 0
   528  0104A8                     __initialization:
   529                           	opt stack 0
   530                           
   531                           ; Clear objects allocated to BANK2 (200 bytes)
   532  0104A8  EE02  F000         	lfsr	0,__pbssBANK2
   533  0104AC  0EC8               	movlw	200
   534  0104AE                     clear_0:
   535  0104AE  6AEE               	clrf	postinc0,c
   536  0104B0  06E8               	decf	wreg,f,c
   537  0104B2  E1FD               	bnz	clear_0
   538                           
   539                           ; Clear objects allocated to BANK1 (203 bytes)
   540  0104B4  EE01  F000         	lfsr	0,__pbssBANK1
   541  0104B8  0ECB               	movlw	203
   542  0104BA                     clear_1:
   543  0104BA  6AEE               	clrf	postinc0,c
   544  0104BC  06E8               	decf	wreg,f,c
   545  0104BE  E1FD               	bnz	clear_1
   546                           
   547                           ; Clear objects allocated to BANK0 (150 bytes)
   548  0104C0  EE00  F060         	lfsr	0,__pbssBANK0
   549  0104C4  0E96               	movlw	150
   550  0104C6                     clear_2:
   551  0104C6  6AEE               	clrf	postinc0,c
   552  0104C8  06E8               	decf	wreg,f,c
   553  0104CA  E1FD               	bnz	clear_2
   554                           
   555                           ; Clear objects allocated to COMRAM (57 bytes)
   556  0104CC  EE00  F001         	lfsr	0,__pbssCOMRAM
   557  0104D0  0E39               	movlw	57
   558  0104D2                     clear_3:
   559  0104D2  6AEE               	clrf	postinc0,c
   560  0104D4  06E8               	decf	wreg,f,c
   561  0104D6  E1FD               	bnz	clear_3
   562                           
   563                           ; Initialize objects allocated to BANK0 (5 bytes)
   564                           ; load TBLPTR registers with __pidataBANK0
   565  0104D8  0E00               	movlw	low __pidataBANK0
   566  0104DA  6EF6               	movwf	tblptrl,c
   567  0104DC  0E10               	movlw	high __pidataBANK0
   568  0104DE  6EF7               	movwf	tblptrh,c
   569  0104E0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   570  0104E2  6EF8               	movwf	tblptru,c
   571  0104E4  EE00  F0F6         	lfsr	0,__pdataBANK0
   572  0104E8  EE10 F005          	lfsr	1,5
   573  0104EC                     copy_data0:
   574  0104EC  0009               	tblrd		*+
   575  0104EE  CFF5 FFEE          	movff	tablat,postinc0
   576  0104F2  50E5               	movf	postdec1,w,c
   577  0104F4  50E1               	movf	fsr1l,w,c
   578  0104F6  E1FA               	bnz	copy_data0
   579  0104F8                     end_of_initialization:
   580                           	opt stack 0
   581  0104F8                     __end_of__initialization:
   582                           	opt stack 0
   583  0104F8  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   584  0104FA  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   585  0104FC  0100               	movlb	0
   586  0104FE  EF1B  F082         	goto	_main	;jump to C main() function
   587                           tblptru	equ	0xFF8
   588                           tblptrh	equ	0xFF7
   589                           tblptrl	equ	0xFF6
   590                           tablat	equ	0xFF5
   591                           postinc0	equ	0xFEE
   592                           wreg	equ	0xFE8
   593                           postdec1	equ	0xFE5
   594                           fsr1l	equ	0xFE1
   595                           
   596                           	psect	bssCOMRAM
   597  000001                     __pbssCOMRAM:
   598                           	opt stack 0
   599  000001                     _outPipes:
   600                           	opt stack 0
   601  000001                     	ds	9
   602  00000A                     _inPipes:
   603                           	opt stack 0
   604  00000A                     	ds	6
   605  000010                     _pBDTEntryIn:
   606                           	opt stack 0
   607  000010                     	ds	6
   608  000016                     _CDCDataOutHandle:
   609                           	opt stack 0
   610  000016                     	ds	2
   611  000018                     _pBDTEntryEP0OutCurrent:
   612                           	opt stack 0
   613  000018                     	ds	2
   614  00001A                     _pBDTEntryEP0OutNext:
   615                           	opt stack 0
   616  00001A                     	ds	2
   617  00001C                     RTCC_task@prev_halfsec:
   618                           	opt stack 0
   619  00001C                     	ds	1
   620  00001D                     ST7032_task@st7032_state:
   621                           	opt stack 0
   622  00001D                     	ds	1
   623  00001E                     _BothEP0OutUOWNsSet:
   624                           	opt stack 0
   625  00001E                     	ds	1
   626  00001F                     _RemoteWakeup:
   627                           	opt stack 0
   628  00001F                     	ds	1
   629  000020                     _USBDeferINDataStagePackets:
   630                           	opt stack 0
   631  000020                     	ds	1
   632  000021                     _USBDeferOUTDataStagePackets:
   633                           	opt stack 0
   634  000021                     	ds	1
   635  000022                     _USBDeferStatusStagePacket:
   636                           	opt stack 0
   637  000022                     	ds	1
   638  000023                     _USBDeviceState:
   639                           	opt stack 0
   640  000023                     	ds	1
   641  000024                     _USBStatusStageEnabledFlag1:
   642                           	opt stack 0
   643  000024                     	ds	1
   644  000025                     _USBStatusStageEnabledFlag2:
   645                           	opt stack 0
   646  000025                     	ds	1
   647  000026                     _USBStatusStageTimeoutCounter:
   648                           	opt stack 0
   649  000026                     	ds	1
   650  000027                     _cdc_mem_type:
   651                           	opt stack 0
   652  000027                     	ds	1
   653  000028                     _cdc_rx_len:
   654                           	opt stack 0
   655  000028                     	ds	1
   656  000029                     _cdc_trf_state:
   657                           	opt stack 0
   658  000029                     	ds	1
   659  00002A                     _cdc_tx_len:
   660                           	opt stack 0
   661  00002A                     	ds	1
   662  00002B                     _controlTransferState:
   663                           	opt stack 0
   664  00002B                     	ds	1
   665  00002C                     _endpoint_number:
   666                           	opt stack 0
   667  00002C                     	ds	1
   668  00002D                     _one_second_flag:
   669                           	opt stack 0
   670  00002D                     	ds	1
   671  00002E                     _shortPacketStatus:
   672                           	opt stack 0
   673  00002E                     	ds	1
   674  00002F                     _st7032_flag:
   675                           	opt stack 0
   676  00002F                     	ds	1
   677  000030                     _lcd_tx:
   678                           	opt stack 0
   679  000030                     	ds	8
   680  000038                     _USBActiveConfiguration:
   681                           	opt stack 0
   682  000038                     	ds	1
   683  000039                     _USTATcopy:
   684                           	opt stack 0
   685  000039                     	ds	1
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           postdec1	equ	0xFE5
   693                           fsr1l	equ	0xFE1
   694                           
   695                           	psect	bssBANK0
   696  000060                     __pbssBANK0:
   697                           	opt stack 0
   698  000060                     _cdc_notice:
   699                           	opt stack 0
   700  000060                     	ds	10
   701  00006A                     _pBDTEntryOut:
   702                           	opt stack 0
   703  00006A                     	ds	6
   704  000070                     _BaudRateGen:
   705                           	opt stack 0
   706  000070                     	ds	4
   707  000074                     _ms:
   708                           	opt stack 0
   709  000074                     	ds	4
   710  000078                     _ep_data_in:
   711                           	opt stack 0
   712  000078                     	ds	3
   713  00007B                     _ep_data_out:
   714                           	opt stack 0
   715  00007B                     	ds	3
   716  00007E                     _pCDCDst:
   717                           	opt stack 0
   718  00007E                     	ds	3
   719  000081                     _pCDCSrc:
   720                           	opt stack 0
   721  000081                     	ds	3
   722  000084                     ST7032_task@wait:
   723                           	opt stack 0
   724  000084                     	ds	2
   725  000086                     USBCBSendResume@delay_count:
   726                           	opt stack 0
   727  000086                     	ds	2
   728  000088                     _CDCDataInHandle:
   729                           	opt stack 0
   730  000088                     	ds	2
   731  00008A                     _pDst:
   732                           	opt stack 0
   733  00008A                     	ds	2
   734  00008C                     epoch_to_caltime@day_cache:
   735                           	opt stack 0
   736  00008C                     	ds	2
   737  00008E                     millis_timer@cnt:
   738                           	opt stack 0
   739  00008E                     	ds	2
   740  000090                     _USBBusIsSuspended:
   741                           	opt stack 0
   742  000090                     	ds	1
   743  000091                     _control_signal_bitmap:
   744                           	opt stack 0
   745  000091                     	ds	1
   746  000092                     _st7032_state:
   747                           	opt stack 0
   748  000092                     	ds	1
   749  000093                     _time_change_flag:
   750                           	opt stack 0
   751  000093                     	ds	1
   752  000094                     epoch_to_caltime@year_cache:
   753                           	opt stack 0
   754  000094                     	ds	1
   755  000095                     terminal_task@command_init:
   756                           	opt stack 0
   757  000095                     	ds	1
   758  000096                     terminal_task@op0:
   759                           	opt stack 0
   760  000096                     	ds	25
   761  0000AF                     _now:
   762                           	opt stack 0
   763  0000AF                     	ds	14
   764  0000BD                     _dummy_encapsulated_cmd_response:
   765                           	opt stack 0
   766  0000BD                     	ds	8
   767  0000C5                     _uart_rx:
   768                           	opt stack 0
   769  0000C5                     	ds	8
   770  0000CD                     _uart_tx:
   771                           	opt stack 0
   772  0000CD                     	ds	8
   773  0000D5                     _usb_rx:
   774                           	opt stack 0
   775  0000D5                     	ds	8
   776  0000DD                     _usb_tx:
   777                           	opt stack 0
   778  0000DD                     	ds	8
   779  0000E5                     terminal_task@command:
   780                           	opt stack 0
   781  0000E5                     	ds	8
   782  0000ED                     _line_coding:
   783                           	opt stack 0
   784  0000ED                     	ds	7
   785  0000F4                     _USBAlternateInterface:
   786                           	opt stack 0
   787  0000F4                     	ds	2
   788                           tblptru	equ	0xFF8
   789                           tblptrh	equ	0xFF7
   790                           tblptrl	equ	0xFF6
   791                           tablat	equ	0xFF5
   792                           postinc0	equ	0xFEE
   793                           wreg	equ	0xFE8
   794                           postdec1	equ	0xFE5
   795                           fsr1l	equ	0xFE1
   796                           
   797                           	psect	dataBANK0
   798  0000F6                     __pdataBANK0:
   799                           	opt stack 0
   800  0000F6                     I2C_LCD_SetCursor@F8620:
   801                           	opt stack 0
   802  0000F6                     	ds	2
   803  0000F8                     ST7032_cursor@F8592:
   804                           	opt stack 0
   805  0000F8                     	ds	2
   806  0000FA                     epoch_to_caltime@month_cache:
   807                           	opt stack 0
   808  0000FA                     	ds	1
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           postinc0	equ	0xFEE
   814                           wreg	equ	0xFE8
   815                           postdec1	equ	0xFE5
   816                           fsr1l	equ	0xFE1
   817                           
   818                           	psect	bssBANK1
   819  000100                     __pbssBANK1:
   820                           	opt stack 0
   821  000100                     _cdc_data_rx:
   822                           	opt stack 0
   823  000100                     	ds	64
   824  000140                     _cdc_data_tx:
   825                           	opt stack 0
   826  000140                     	ds	64
   827  000180                     terminal_task@op1:
   828                           	opt stack 0
   829  000180                     	ds	25
   830  000199                     terminal_task@op2:
   831                           	opt stack 0
   832  000199                     	ds	25
   833  0001B2                     terminal_task@op3:
   834                           	opt stack 0
   835  0001B2                     	ds	25
   836                           tblptru	equ	0xFF8
   837                           tblptrh	equ	0xFF7
   838                           tblptrl	equ	0xFF6
   839                           tablat	equ	0xFF5
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           postdec1	equ	0xFE5
   843                           fsr1l	equ	0xFE1
   844                           
   845                           	psect	bssBANK2
   846  000200                     __pbssBANK2:
   847                           	opt stack 0
   848  000200                     ST7032_init@buf:
   849                           	opt stack 0
   850  000200                     	ds	200
   851                           tblptru	equ	0xFF8
   852                           tblptrh	equ	0xFF7
   853                           tblptrl	equ	0xFF6
   854                           tablat	equ	0xFF5
   855                           postinc0	equ	0xFEE
   856                           wreg	equ	0xFE8
   857                           postdec1	equ	0xFE5
   858                           fsr1l	equ	0xFE1
   859                           
   860                           	psect	cstackBANK1
   861  0001CB                     __pcstackBANK1:
   862                           	opt stack 0
   863  0001CB                     ??_ringbuf_num:
   864                           
   865                           ; 0 bytes @ 0x0
   866  0001CB                     	ds	6
   867  0001D1                     ST7032_cursor@row_offsets:
   868                           	opt stack 0
   869  0001D1                     ST7032_puts@s:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x6
   873  0001D1                     	ds	2
   874  0001D3                     ST7032_cursor@col:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x8
   878  0001D3                     	ds	1
   879  0001D4                     ??_main:
   880                           
   881                           ; 0 bytes @ 0x9
   882  0001D4                     	ds	1
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1l	equ	0xFE1
   891                           
   892                           	psect	cstackBANK0
   893  0000FB                     __pcstackBANK0:
   894                           	opt stack 0
   895  0000FB                     ??_ringbuf_put:
   896  0000FB                     ??_ringbuf_pop:
   897                           
   898                           ; 0 bytes @ 0x0
   899  0000FB                     	ds	4
   900  0000FF                     ST7032_cursor@row:
   901                           	opt stack 0
   902  0000FF                     ST7032_task@data:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0x4
   906  0000FF                     	ds	1
   907                           tblptru	equ	0xFF8
   908                           tblptrh	equ	0xFF7
   909                           tblptrl	equ	0xFF6
   910                           tablat	equ	0xFF5
   911                           postinc0	equ	0xFEE
   912                           wreg	equ	0xFE8
   913                           postdec1	equ	0xFE5
   914                           fsr1l	equ	0xFE1
   915                           
   916                           	psect	cstackCOMRAM
   917  00003A                     __pcstackCOMRAM:
   918                           	opt stack 0
   919  00003A                     ??_ISR:
   920  00003A                     
   921                           ; 2 bytes @ 0x0
   922  00003A                     	ds	15
   923  000049                     ??_timer0_init:
   924  000049                     ?_ringbuf_num:
   925                           	opt stack 0
   926  000049                     timer1_init@clock_select:
   927                           	opt stack 0
   928  000049                     ringbuf_init@rb:
   929                           	opt stack 0
   930  000049                     ringbuf_num@rb:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0xF
   934  000049                     	ds	1
   935  00004A                     ??_timer1_init:
   936  00004A                     timer0_init@prescaler:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x10
   940  00004A                     	ds	1
   941  00004B                     timer1_init@prescaler:
   942                           	opt stack 0
   943  00004B                     ringbuf_init@internal_buf:
   944                           	opt stack 0
   945  00004B                     ringbuf_put@rb:
   946                           	opt stack 0
   947  00004B                     ringbuf_pop@rb:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x11
   951  00004B                     	ds	2
   952  00004D                     ringbuf_put@asciicode:
   953                           	opt stack 0
   954  00004D                     ringbuf_pop@ret:
   955                           	opt stack 0
   956  00004D                     ringbuf_init@bufsize:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0x13
   960  00004D                     	ds	1
   961  00004E                     ??_ST7032_task:
   962  00004E                     ST7032_command@wait:
   963                           	opt stack 0
   964  00004E                     ST7032_put@c:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x14
   968  00004E                     	ds	1
   969  00004F                     ST7032_command@command:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0x15
   973  00004F                     	ds	1
   974  000050                     tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           postdec1	equ	0xFE5
   981                           fsr1l	equ	0xFE1
   982                           
   983                           ; 0 bytes @ 0x16
   984 ;;
   985 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   986 ;;
   987 ;; *************** function _main *****************
   988 ;; Defined at:
   989 ;;		line 57 in file "main.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  2  1394[None  ] int 
   996 ;; Registers used:
   997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1006 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1007 ;;Total ram usage:        1 bytes
  1008 ;; Hardware stack levels required when called:    8
  1009 ;; This function calls:
  1010 ;;		_ST7032_clear
  1011 ;;		_ST7032_cursor
  1012 ;;		_ST7032_puts
  1013 ;;		_ST7032_task
  1014 ;;		_main_init
  1015 ;; This function is called by:
  1016 ;;		Startup code after reset
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text0
  1021  010436                     __ptext0:
  1022                           	opt stack 0
  1023  010436                     _main:
  1024                           	opt stack 23
  1025                           
  1026                           ;main.c: 58: main_init();
  1027                           
  1028                           ;incstack = 0
  1029  010436  EC38  F083         	call	_main_init	;wreg free
  1030                           
  1031                           ;main.c: 59: INTCONbits.GIE = 1;
  1032  01043A  8EF2               	bsf	intcon,7,c	;volatile
  1033  01043C                     l1395:
  1034                           
  1035                           ;main.c: 62: ST7032_task();
  1036  01043C  EC00  F080         	call	_ST7032_task	;wreg free
  1037                           
  1038                           ;main.c: 64: LATAbits.LATA1 = !LATAbits.LATA1;
  1039  010440  B289               	btfsc	3977,1,c	;volatile
  1040  010442  D004               	goto	u7080
  1041  010444  0101               	movlb	1	; () banked
  1042  010446  6BD4               	clrf	??_main& (0+255),b
  1043  010448  2BD4               	incf	??_main& (0+255),f,b
  1044  01044A  D002               	goto	u7098
  1045  01044C                     u7080:
  1046  01044C  0101               	movlb	1	; () banked
  1047  01044E  6BD4               	clrf	??_main& (0+255),b
  1048  010450                     u7098:
  1049  010450  0101               	movlb	1	; () banked
  1050  010452  47D4               	rlncf	??_main& (0+255),f,b
  1051  010454  5089               	movf	3977,w,c	;volatile
  1052  010456  0101               	movlb	1	; () banked
  1053  010458  19D4               	xorwf	??_main& (0+255),w,b
  1054  01045A  0BFD               	andlw	-3
  1055  01045C  19D4               	xorwf	??_main& (0+255),w,b
  1056  01045E  6E89               	movwf	3977,c	;volatile
  1057                           
  1058                           ; BSR set to: 1
  1059                           ;main.c: 66: if (one_second_flag) {
  1060  010460  502D               	movf	_one_second_flag,w,c
  1061  010462  B4D8               	btfsc	status,2,c
  1062  010464  D7EB               	goto	l1395
  1063                           
  1064                           ; BSR set to: 1
  1065                           ;main.c: 67: one_second_flag = 0;
  1066  010466  0E00               	movlw	0
  1067  010468  6E2D               	movwf	_one_second_flag,c
  1068                           
  1069                           ; BSR set to: 1
  1070                           ;main.c: 68: ST7032_clear();
  1071  01046A  EC8D  F083         	call	_ST7032_clear	;wreg free
  1072                           
  1073                           ;main.c: 69: ST7032_cursor(0, 0);
  1074  01046E  0E00               	movlw	0
  1075  010470  0100               	movlb	0	; () banked
  1076  010472  6FFF               	movwf	ST7032_cursor@row& (0+255),b
  1077  010474  0E00               	movlw	0
  1078  010476  EC69  F083         	call	_ST7032_cursor
  1079                           
  1080                           ;main.c: 70: ST7032_puts("18F27J53");
  1081  01047A  0E9A               	movlw	low STR_41
  1082  01047C  0101               	movlb	1	; () banked
  1083  01047E  6FD1               	movwf	ST7032_puts@s& (0+255),b
  1084  010480  0EFF               	movlw	high STR_41
  1085  010482  0101               	movlb	1	; () banked
  1086  010484  6FD2               	movwf	(ST7032_puts@s+1)& (0+255),b
  1087  010486  EC1E  F083         	call	_ST7032_puts	;wreg free
  1088                           
  1089                           ;main.c: 71: ST7032_cursor(0, 1);
  1090  01048A  0E01               	movlw	1
  1091  01048C  0100               	movlb	0	; () banked
  1092  01048E  6FFF               	movwf	ST7032_cursor@row& (0+255),b
  1093  010490  0E00               	movlw	0
  1094  010492  EC69  F083         	call	_ST7032_cursor
  1095                           
  1096                           ;main.c: 72: ST7032_puts("I2C_new");
  1097  010496  0EAC               	movlw	low STR_42
  1098  010498  0101               	movlb	1	; () banked
  1099  01049A  6FD1               	movwf	ST7032_puts@s& (0+255),b
  1100  01049C  0EFF               	movlw	high STR_42
  1101  01049E  0101               	movlb	1	; () banked
  1102  0104A0  6FD2               	movwf	(ST7032_puts@s+1)& (0+255),b
  1103  0104A2  EC1E  F083         	call	_ST7032_puts	;wreg free
  1104  0104A6  D7CA               	goto	l1395
  1105  0104A8                     __end_of_main:
  1106                           	opt stack 0
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           intcon	equ	0xFF2
  1112                           postinc0	equ	0xFEE
  1113                           wreg	equ	0xFE8
  1114                           postdec1	equ	0xFE5
  1115                           fsr1l	equ	0xFE1
  1116                           status	equ	0xFD8
  1117                           
  1118 ;; *************** function _main_init *****************
  1119 ;; Defined at:
  1120 ;;		line 43 in file "main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;		None               void
  1127 ;; Registers used:
  1128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    7
  1141 ;; This function calls:
  1142 ;;		_OSC_init
  1143 ;;		_ST7032_init
  1144 ;;		_timer0_init
  1145 ;;		_timer1_init
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text1
  1152  010670                     __ptext1:
  1153                           	opt stack 0
  1154  010670                     _main_init:
  1155                           	opt stack 23
  1156                           
  1157                           ;main.c: 44: OSC_init();
  1158                           
  1159                           ;incstack = 0
  1160  010670  EC04  F008         	call	_OSC_init	;wreg free
  1161                           
  1162                           ;main.c: 45: TRISA = 0b00010000;
  1163  010674  0E10               	movlw	16
  1164  010676  6E92               	movwf	3986,c	;volatile
  1165                           
  1166                           ;main.c: 46: TRISB = 0b00110001;
  1167  010678  0E31               	movlw	49
  1168  01067A  6E93               	movwf	3987,c	;volatile
  1169                           
  1170                           ;main.c: 47: TRISC = 0b10111010;
  1171  01067C  0EBA               	movlw	186
  1172  01067E  6E94               	movwf	3988,c	;volatile
  1173                           
  1174                           ;main.c: 48: ANCON0 = 0b11111111;
  1175  010680  010F               	movlb	15	; () banked
  1176  010682  6948               	setf	72,b	;volatile
  1177                           
  1178                           ; BSR set to: 15
  1179                           ;main.c: 49: ANCON1 = 0b00011111;
  1180  010684  0E1F               	movlw	31
  1181  010686  010F               	movlb	15	; () banked
  1182  010688  6F49               	movwf	73,b	;volatile
  1183                           
  1184                           ; BSR set to: 15
  1185                           ;main.c: 50: INTCON2bits.RBPU = 0;
  1186  01068A  9EF1               	bcf	intcon2,7,c	;volatile
  1187                           
  1188                           ; BSR set to: 15
  1189                           ;main.c: 52: timer0_init(6);
  1190  01068C  0E06               	movlw	6
  1191  01068E  EC51  F083         	call	_timer0_init
  1192                           
  1193                           ;main.c: 53: timer1_init(0, 2);
  1194  010692  0E02               	movlw	2
  1195  010694  6E49               	movwf	timer1_init@clock_select,c
  1196  010696  0E00               	movlw	0
  1197  010698  ECFC  F082         	call	_timer1_init
  1198                           
  1199                           ;main.c: 54: ST7032_init();
  1200  01069C  ECC0  F081         	call	_ST7032_init	;wreg free
  1201  0106A0  0012               	return		;funcret
  1202  0106A2                     __end_of_main_init:
  1203                           	opt stack 0
  1204                           tblptru	equ	0xFF8
  1205                           tblptrh	equ	0xFF7
  1206                           tblptrl	equ	0xFF6
  1207                           tablat	equ	0xFF5
  1208                           intcon	equ	0xFF2
  1209                           intcon2	equ	0xFF1
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           postdec1	equ	0xFE5
  1213                           fsr1l	equ	0xFE1
  1214                           status	equ	0xFD8
  1215                           
  1216 ;; *************** function _timer1_init *****************
  1217 ;; Defined at:
  1218 ;;		line 70 in file "../My_library/My_PIC.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  prescaler       1    wreg     unsigned char 
  1221 ;;  clock_select    1   15[COMRAM] unsigned char 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  prescaler       1   17[COMRAM] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;		None               void
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1233 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1236 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;Total ram usage:        3 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    2
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_main_init
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text2
  1248  0105F8                     __ptext2:
  1249                           	opt stack 0
  1250  0105F8                     _timer1_init:
  1251                           	opt stack 27
  1252                           
  1253                           ;incstack = 0
  1254                           ;timer1_init@prescaler stored from wreg
  1255  0105F8  6E4B               	movwf	timer1_init@prescaler,c
  1256                           
  1257                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  1258  0105FA  C049  F04A         	movff	timer1_init@clock_select,??_timer1_init
  1259  0105FE  3A4A               	swapf	??_timer1_init,f,c
  1260  010600  464A               	rlncf	??_timer1_init,f,c
  1261  010602  464A               	rlncf	??_timer1_init,f,c
  1262  010604  50CD               	movf	4045,w,c	;volatile
  1263  010606  184A               	xorwf	??_timer1_init,w,c
  1264  010608  0B3F               	andlw	-193
  1265  01060A  184A               	xorwf	??_timer1_init,w,c
  1266  01060C  6ECD               	movwf	4045,c	;volatile
  1267                           
  1268                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  1269  01060E  0E02               	movlw	2
  1270  010610  1849               	xorwf	timer1_init@clock_select,w,c
  1271  010612  A4D8               	btfss	status,2,c
  1272  010614  D002               	goto	l662
  1273  010616  86CD               	bsf	4045,3,c	;volatile
  1274  010618  D001               	goto	l5470
  1275  01061A                     l662:
  1276                           
  1277                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  1278  01061A  96CD               	bcf	4045,3,c	;volatile
  1279  01061C                     l5470:
  1280                           
  1281                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  1282  01061C  C04B  F04A         	movff	timer1_init@prescaler,??_timer1_init
  1283  010620  3A4A               	swapf	??_timer1_init,f,c
  1284  010622  50CD               	movf	4045,w,c	;volatile
  1285  010624  184A               	xorwf	??_timer1_init,w,c
  1286  010626  0BCF               	andlw	-49
  1287  010628  184A               	xorwf	??_timer1_init,w,c
  1288  01062A  6ECD               	movwf	4045,c	;volatile
  1289                           
  1290                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  1291  01062C  84CD               	bsf	4045,2,c	;volatile
  1292                           
  1293                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  1294  01062E  92CD               	bcf	4045,1,c	;volatile
  1295                           
  1296                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  1297  010630  80CD               	bsf	4045,0,c	;volatile
  1298                           
  1299                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  1300  010632  909F               	bcf	3999,0,c	;volatile
  1301                           
  1302                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  1303  010634  909E               	bcf	3998,0,c	;volatile
  1304                           
  1305                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  1306  010636  809D               	bsf	3997,0,c	;volatile
  1307                           
  1308                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  1309  010638  8CF2               	bsf	intcon,6,c	;volatile
  1310  01063A  0012               	return		;funcret
  1311  01063C                     __end_of_timer1_init:
  1312                           	opt stack 0
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           tblptrl	equ	0xFF6
  1316                           tablat	equ	0xFF5
  1317                           intcon	equ	0xFF2
  1318                           intcon2	equ	0xFF1
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           postdec1	equ	0xFE5
  1322                           fsr1l	equ	0xFE1
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _timer0_init *****************
  1326 ;; Defined at:
  1327 ;;		line 34 in file "../My_library/My_PIC.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  prescaler       1    wreg     unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  prescaler       1   16[COMRAM] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;		None               void
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1345 ;;Total ram usage:        2 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    2
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_main_init
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text3
  1356  0106A2                     __ptext3:
  1357                           	opt stack 0
  1358  0106A2                     _timer0_init:
  1359                           	opt stack 27
  1360                           
  1361                           ;incstack = 0
  1362                           ;timer0_init@prescaler stored from wreg
  1363  0106A2  6E4A               	movwf	timer0_init@prescaler,c
  1364                           
  1365                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  1366  0106A4  8ED5               	bsf	4053,7,c	;volatile
  1367                           
  1368                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  1369  0106A6  8CD5               	bsf	4053,6,c	;volatile
  1370                           
  1371                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  1372  0106A8  9AD5               	bcf	4053,5,c	;volatile
  1373                           
  1374                           ;My_PIC.c: 38: if (prescaler == 0) {
  1375  0106AA  504A               	movf	timer0_init@prescaler,w,c
  1376  0106AC  A4D8               	btfss	status,2,c
  1377  0106AE  D002               	goto	l657
  1378                           
  1379                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  1380  0106B0  86D5               	bsf	4053,3,c	;volatile
  1381                           
  1382                           ;My_PIC.c: 40: } else {
  1383  0106B2  D00A               	goto	l3112
  1384  0106B4                     l657:
  1385                           
  1386                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  1387  0106B4  96D5               	bcf	4053,3,c	;volatile
  1388                           
  1389                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  1390  0106B6  C04A  F049         	movff	timer0_init@prescaler,??_timer0_init
  1391  0106BA  0EFF               	movlw	255
  1392  0106BC  2649               	addwf	??_timer0_init,f,c
  1393  0106BE  50D5               	movf	4053,w,c	;volatile
  1394  0106C0  1849               	xorwf	??_timer0_init,w,c
  1395  0106C2  0BF8               	andlw	-8
  1396  0106C4  1849               	xorwf	??_timer0_init,w,c
  1397  0106C6  6ED5               	movwf	4053,c	;volatile
  1398  0106C8                     l3112:
  1399                           
  1400                           ;My_PIC.c: 43: }
  1401                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  1402  0106C8  8AF2               	bsf	intcon,5,c	;volatile
  1403                           
  1404                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  1405  0106CA  94F2               	bcf	intcon,2,c	;volatile
  1406                           
  1407                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  1408  0106CC  94F1               	bcf	intcon2,2,c	;volatile
  1409                           
  1410                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  1411  0106CE  8CF2               	bsf	intcon,6,c	;volatile
  1412  0106D0  0012               	return		;funcret
  1413  0106D2                     __end_of_timer0_init:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           intcon	equ	0xFF2
  1420                           intcon2	equ	0xFF1
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           postdec1	equ	0xFE5
  1424                           fsr1l	equ	0xFE1
  1425                           status	equ	0xFD8
  1426                           
  1427 ;; *************** function _ST7032_init *****************
  1428 ;; Defined at:
  1429 ;;		line 62 in file "../My_library/My_ST7032.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;		None               void
  1436 ;; Registers used:
  1437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    6
  1450 ;; This function calls:
  1451 ;;		_ST7032_clear
  1452 ;;		_ST7032_command
  1453 ;;		_ringbuf_init
  1454 ;;		_ringbuf_put
  1455 ;; This function is called by:
  1456 ;;		_main_init
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text4
  1461  010380                     __ptext4:
  1462                           	opt stack 0
  1463  010380                     _ST7032_init:
  1464                           	opt stack 23
  1465                           
  1466                           ;My_ST7032.c: 63: SSP1STAT = 0b10000000;
  1467                           
  1468                           ;incstack = 0
  1469  010380  0E80               	movlw	128
  1470  010382  6EC7               	movwf	4039,c	;volatile
  1471                           
  1472                           ;My_ST7032.c: 64: SSP1CON1 = 0b00101000;
  1473  010384  0E28               	movlw	40
  1474  010386  6EC6               	movwf	4038,c	;volatile
  1475                           
  1476                           ;My_ST7032.c: 65: SSP1ADD = 0x13;
  1477  010388  0E13               	movlw	19
  1478  01038A  6EC8               	movwf	4040,c	;volatile
  1479                           
  1480                           ;My_ST7032.c: 66: PIE1bits.SSP1IE = 1;
  1481  01038C  869D               	bsf	3997,3,c	;volatile
  1482                           
  1483                           ;My_ST7032.c: 67: IPR1bits.SSP1IP = 0;
  1484  01038E  969F               	bcf	3999,3,c	;volatile
  1485                           
  1486                           ;My_ST7032.c: 68: PIR1bits.SSP1IF = 0;
  1487  010390  969E               	bcf	3998,3,c	;volatile
  1488                           
  1489                           ;My_ST7032.c: 69: PIE2bits.BCL1IE = 1;
  1490  010392  86A0               	bsf	4000,3,c	;volatile
  1491                           
  1492                           ;My_ST7032.c: 70: IPR2bits.BCL1IP = 0;
  1493  010394  96A2               	bcf	4002,3,c	;volatile
  1494                           
  1495                           ;My_ST7032.c: 71: PIR2bits.BCL1IF = 0;
  1496  010396  96A1               	bcf	4001,3,c	;volatile
  1497                           
  1498                           ;My_ST7032.c: 72: INTCONbits.PEIE = 1;
  1499  010398  8CF2               	bsf	intcon,6,c	;volatile
  1500                           
  1501                           ;My_ST7032.c: 74: static char buf[200];
  1502                           ;My_ST7032.c: 75: ringbuf_init(&lcd_tx, buf, sizeof (buf));
  1503  01039A  0E30               	movlw	low _lcd_tx
  1504  01039C  6E49               	movwf	ringbuf_init@rb,c
  1505  01039E  0E00               	movlw	high _lcd_tx
  1506  0103A0  6E4A               	movwf	ringbuf_init@rb+1,c
  1507  0103A2  0E00               	movlw	low ST7032_init@buf
  1508  0103A4  6E4B               	movwf	ringbuf_init@internal_buf,c
  1509  0103A6  0E02               	movlw	high ST7032_init@buf
  1510  0103A8  6E4C               	movwf	ringbuf_init@internal_buf+1,c
  1511  0103AA  0E00               	movlw	0
  1512  0103AC  6E4E               	movwf	ringbuf_init@bufsize+1,c
  1513  0103AE  0EC8               	movlw	200
  1514  0103B0  6E4D               	movwf	ringbuf_init@bufsize,c
  1515  0103B2  ECD5  F082         	call	_ringbuf_init	;wreg free
  1516                           
  1517                           ;My_ST7032.c: 77: ringbuf_put(&lcd_tx, 0);
  1518  0103B6  0E30               	movlw	low _lcd_tx
  1519  0103B8  6E4B               	movwf	ringbuf_put@rb,c
  1520  0103BA  0E00               	movlw	high _lcd_tx
  1521  0103BC  6E4C               	movwf	ringbuf_put@rb+1,c
  1522  0103BE  0E00               	movlw	0
  1523  0103C0  6E4D               	movwf	ringbuf_put@asciicode,c
  1524  0103C2  EC01  F081         	call	_ringbuf_put	;wreg free
  1525                           
  1526                           ;My_ST7032.c: 78: ringbuf_put(&lcd_tx, 3);
  1527  0103C6  0E30               	movlw	low _lcd_tx
  1528  0103C8  6E4B               	movwf	ringbuf_put@rb,c
  1529  0103CA  0E00               	movlw	high _lcd_tx
  1530  0103CC  6E4C               	movwf	ringbuf_put@rb+1,c
  1531  0103CE  0E03               	movlw	3
  1532  0103D0  6E4D               	movwf	ringbuf_put@asciicode,c
  1533  0103D2  EC01  F081         	call	_ringbuf_put	;wreg free
  1534                           
  1535                           ;My_ST7032.c: 80: ST7032_command(0x38, 1);
  1536  0103D6  0E01               	movlw	1
  1537  0103D8  6E4E               	movwf	ST7032_command@wait,c
  1538  0103DA  0E38               	movlw	56
  1539  0103DC  ECAB  F082         	call	_ST7032_command
  1540                           
  1541                           ;My_ST7032.c: 81: ST7032_command(0x39, 1);
  1542  0103E0  0E01               	movlw	1
  1543  0103E2  6E4E               	movwf	ST7032_command@wait,c
  1544  0103E4  0E39               	movlw	57
  1545  0103E6  ECAB  F082         	call	_ST7032_command
  1546                           
  1547                           ;My_ST7032.c: 82: ST7032_command(0x14, 1);
  1548  0103EA  0E01               	movlw	1
  1549  0103EC  6E4E               	movwf	ST7032_command@wait,c
  1550  0103EE  0E14               	movlw	20
  1551  0103F0  ECAB  F082         	call	_ST7032_command
  1552                           
  1553                           ;My_ST7032.c: 83: ST7032_command(0x70, 1);
  1554  0103F4  0E01               	movlw	1
  1555  0103F6  6E4E               	movwf	ST7032_command@wait,c
  1556  0103F8  0E70               	movlw	112
  1557  0103FA  ECAB  F082         	call	_ST7032_command
  1558                           
  1559                           ;My_ST7032.c: 84: ST7032_command(0x56, 1);
  1560  0103FE  0E01               	movlw	1
  1561  010400  6E4E               	movwf	ST7032_command@wait,c
  1562  010402  0E56               	movlw	86
  1563  010404  ECAB  F082         	call	_ST7032_command
  1564                           
  1565                           ;My_ST7032.c: 85: ST7032_command(0x6C, 3);
  1566  010408  0E03               	movlw	3
  1567  01040A  6E4E               	movwf	ST7032_command@wait,c
  1568  01040C  0E6C               	movlw	108
  1569  01040E  ECAB  F082         	call	_ST7032_command
  1570                           
  1571                           ;My_ST7032.c: 86: ST7032_command(0x38, 1);
  1572  010412  0E01               	movlw	1
  1573  010414  6E4E               	movwf	ST7032_command@wait,c
  1574  010416  0E38               	movlw	56
  1575  010418  ECAB  F082         	call	_ST7032_command
  1576                           
  1577                           ;My_ST7032.c: 87: ST7032_command(0x0C, 1);
  1578  01041C  0E01               	movlw	1
  1579  01041E  6E4E               	movwf	ST7032_command@wait,c
  1580  010420  0E0C               	movlw	12
  1581  010422  ECAB  F082         	call	_ST7032_command
  1582                           
  1583                           ;My_ST7032.c: 88: ST7032_command(0x06, 1);
  1584  010426  0E01               	movlw	1
  1585  010428  6E4E               	movwf	ST7032_command@wait,c
  1586  01042A  0E06               	movlw	6
  1587  01042C  ECAB  F082         	call	_ST7032_command
  1588                           
  1589                           ;My_ST7032.c: 89: ST7032_clear();
  1590  010430  EC8D  F083         	call	_ST7032_clear	;wreg free
  1591  010434  0012               	return		;funcret
  1592  010436                     __end_of_ST7032_init:
  1593                           	opt stack 0
  1594                           tblptru	equ	0xFF8
  1595                           tblptrh	equ	0xFF7
  1596                           tblptrl	equ	0xFF6
  1597                           tablat	equ	0xFF5
  1598                           intcon	equ	0xFF2
  1599                           intcon2	equ	0xFF1
  1600                           postinc0	equ	0xFEE
  1601                           wreg	equ	0xFE8
  1602                           postdec1	equ	0xFE5
  1603                           fsr1l	equ	0xFE1
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _ringbuf_init *****************
  1607 ;; Defined at:
  1608 ;;		line 5 in file "../My_library/My_ringbuf.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  rb              2   15[COMRAM] PTR struct ringbuf
  1611 ;;		 -> lcd_tx(8), terminal_task@command(8), 
  1612 ;;  internal_buf    2   17[COMRAM] PTR unsigned char 
  1613 ;;		 -> ST7032_init@buf(200), terminal_task@buf(100), 
  1614 ;;  bufsize         2   19[COMRAM] unsigned int 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;		None               void
  1619 ;; Registers used:
  1620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1626 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1629 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1630 ;;Total ram usage:        6 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    2
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_ST7032_init
  1637 ;;		_terminal_task
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text5
  1642  0105AA                     __ptext5:
  1643                           	opt stack 0
  1644  0105AA                     _ringbuf_init:
  1645                           	opt stack 26
  1646                           
  1647                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  1648                           
  1649                           ;incstack = 0
  1650  0105AA  C049  FFD9         	movff	ringbuf_init@rb,fsr2l
  1651  0105AE  C04A  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  1652  0105B2  C04B  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  1653  0105B6  C04C  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  1654                           
  1655                           ;My_ringbuf.c: 7: rb->size = bufsize;
  1656  0105BA  EE20 F002          	lfsr	2,2
  1657  0105BE  5049               	movf	ringbuf_init@rb,w,c
  1658  0105C0  26D9               	addwf	fsr2l,f,c
  1659  0105C2  504A               	movf	ringbuf_init@rb+1,w,c
  1660  0105C4  22DA               	addwfc	fsr2h,f,c
  1661  0105C6  C04D  FFDE         	movff	ringbuf_init@bufsize,postinc2
  1662  0105CA  C04E  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  1663                           
  1664                           ;My_ringbuf.c: 8: rb->head = 0;
  1665  0105CE  EE20 F004          	lfsr	2,4
  1666  0105D2  5049               	movf	ringbuf_init@rb,w,c
  1667  0105D4  26D9               	addwf	fsr2l,f,c
  1668  0105D6  504A               	movf	ringbuf_init@rb+1,w,c
  1669  0105D8  22DA               	addwfc	fsr2h,f,c
  1670  0105DA  0E00               	movlw	0
  1671  0105DC  6EDE               	movwf	postinc2,c
  1672  0105DE  0E00               	movlw	0
  1673  0105E0  6EDD               	movwf	postdec2,c
  1674                           
  1675                           ;My_ringbuf.c: 9: rb->tail = 0;
  1676  0105E2  EE20 F006          	lfsr	2,6
  1677  0105E6  5049               	movf	ringbuf_init@rb,w,c
  1678  0105E8  26D9               	addwf	fsr2l,f,c
  1679  0105EA  504A               	movf	ringbuf_init@rb+1,w,c
  1680  0105EC  22DA               	addwfc	fsr2h,f,c
  1681  0105EE  0E00               	movlw	0
  1682  0105F0  6EDE               	movwf	postinc2,c
  1683  0105F2  0E00               	movlw	0
  1684  0105F4  6EDD               	movwf	postdec2,c
  1685  0105F6  0012               	return		;funcret
  1686  0105F8                     __end_of_ringbuf_init:
  1687                           	opt stack 0
  1688                           tblptru	equ	0xFF8
  1689                           tblptrh	equ	0xFF7
  1690                           tblptrl	equ	0xFF6
  1691                           tablat	equ	0xFF5
  1692                           intcon	equ	0xFF2
  1693                           intcon2	equ	0xFF1
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           postdec1	equ	0xFE5
  1697                           fsr1l	equ	0xFE1
  1698                           postinc2	equ	0xFDE
  1699                           postdec2	equ	0xFDD
  1700                           fsr2h	equ	0xFDA
  1701                           fsr2l	equ	0xFD9
  1702                           status	equ	0xFD8
  1703                           
  1704 ;; *************** function _ST7032_clear *****************
  1705 ;; Defined at:
  1706 ;;		line 26 in file "../My_library/My_ST7032.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;		None
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;		None
  1711 ;; Return value:  Size  Location     Type
  1712 ;;		None               void
  1713 ;; Registers used:
  1714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1724 ;;Total ram usage:        0 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    5
  1727 ;; This function calls:
  1728 ;;		_ST7032_command
  1729 ;; This function is called by:
  1730 ;;		_ST7032_init
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text6
  1736  01071A                     __ptext6:
  1737                           	opt stack 0
  1738  01071A                     _ST7032_clear:
  1739                           	opt stack 23
  1740                           
  1741                           ;My_ST7032.c: 27: ST7032_command(0x01, 2);
  1742                           
  1743                           ;incstack = 0
  1744  01071A  0E02               	movlw	2
  1745  01071C  6E4E               	movwf	ST7032_command@wait,c
  1746  01071E  0E01               	movlw	1
  1747  010720  ECAB  F082         	call	_ST7032_command
  1748  010724  0012               	return		;funcret
  1749  010726                     __end_of_ST7032_clear:
  1750                           	opt stack 0
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           intcon	equ	0xFF2
  1756                           intcon2	equ	0xFF1
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           postdec1	equ	0xFE5
  1760                           fsr1l	equ	0xFE1
  1761                           postinc2	equ	0xFDE
  1762                           postdec2	equ	0xFDD
  1763                           fsr2h	equ	0xFDA
  1764                           fsr2l	equ	0xFD9
  1765                           status	equ	0xFD8
  1766                           
  1767 ;; *************** function _OSC_init *****************
  1768 ;; Defined at:
  1769 ;;		line 8 in file "../My_library/My_PIC.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;		None               void
  1776 ;; Registers used:
  1777 ;;		wreg, status,2
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    2
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_main_init
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text7
  1798  001008                     __ptext7:
  1799                           	opt stack 0
  1800  001008                     _OSC_init:
  1801                           	opt stack 27
  1802                           
  1803                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  1804                           
  1805                           ;incstack = 0
  1806  001008  88D3               	bsf	4051,4,c	;volatile
  1807  00100A  8AD3               	bsf	4051,5,c	;volatile
  1808  00100C  8CD3               	bsf	4051,6,c	;volatile
  1809                           
  1810                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  1811  00100E  8C9B               	bsf	3995,6,c	;volatile
  1812                           
  1813                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  1814  001010  0EFC               	movlw	-4
  1815  001012  16D3               	andwf	4051,f,c	;volatile
  1816  001014  0012               	return		;funcret
  1817  001016                     __end_of_OSC_init:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           intcon	equ	0xFF2
  1824                           intcon2	equ	0xFF1
  1825                           postinc0	equ	0xFEE
  1826                           wreg	equ	0xFE8
  1827                           postdec1	equ	0xFE5
  1828                           fsr1l	equ	0xFE1
  1829                           postinc2	equ	0xFDE
  1830                           postdec2	equ	0xFDD
  1831                           fsr2h	equ	0xFDA
  1832                           fsr2l	equ	0xFD9
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function _ST7032_task *****************
  1836 ;; Defined at:
  1837 ;;		line 102 in file "../My_library/My_ST7032.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  data            1    4[BANK0 ] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;		None               void
  1844 ;; Registers used:
  1845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1854 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1855 ;;Total ram usage:        3 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    4
  1858 ;; This function calls:
  1859 ;;		_ringbuf_num
  1860 ;;		_ringbuf_pop
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text8
  1867  010000                     __ptext8:
  1868                           	opt stack 0
  1869  010000                     _ST7032_task:
  1870                           	opt stack 26
  1871                           
  1872                           ;My_ST7032.c: 103: if ((SSP1CON2 & 0x1F) | (SSP1STAT & 0x05)) {
  1873                           
  1874                           ;incstack = 0
  1875  010000  CFC7 F04E          	movff	4039,??_ST7032_task	;volatile
  1876  010004  0E05               	movlw	5
  1877  010006  164E               	andwf	??_ST7032_task,f,c
  1878  010008  50C5               	movf	4037,w,c	;volatile
  1879  01000A  0B1F               	andlw	31
  1880  01000C  104E               	iorwf	??_ST7032_task,w,c
  1881  01000E  0900               	iorlw	0
  1882  010010  A4D8               	btfss	status,2,c
  1883  010012  0012               	return	
  1884  010014  D079               	goto	l7238
  1885  010016                     l7190:
  1886                           
  1887                           ;My_ST7032.c: 112: if (ringbuf_num(&lcd_tx)) {
  1888  010016  0E30               	movlw	low _lcd_tx
  1889  010018  6E49               	movwf	ringbuf_num@rb,c
  1890  01001A  0E00               	movlw	high _lcd_tx
  1891  01001C  6E4A               	movwf	ringbuf_num@rb+1,c
  1892  01001E  EC95  F080         	call	_ringbuf_num	;wreg free
  1893  010022  5049               	movf	?_ringbuf_num,w,c
  1894  010024  104A               	iorwf	?_ringbuf_num+1,w,c
  1895  010026  B4D8               	btfsc	status,2,c
  1896  010028  0012               	return	
  1897                           
  1898                           ;My_ST7032.c: 113: st7032_state = ST7032_START;
  1899  01002A  0E01               	movlw	1
  1900  01002C  6E1D               	movwf	ST7032_task@st7032_state,c
  1901                           
  1902                           ;My_ST7032.c: 114: }
  1903                           ;My_ST7032.c: 115: break;
  1904  01002E  0012               	return	
  1905  010030                     l7194:
  1906                           
  1907                           ;My_ST7032.c: 117: st7032_flag = 1;
  1908  010030  0E01               	movlw	1
  1909  010032  6E2F               	movwf	_st7032_flag,c
  1910                           
  1911                           ;My_ST7032.c: 118: SSP1CON2bits.SEN = 1;
  1912  010034  80C5               	bsf	4037,0,c	;volatile
  1913                           
  1914                           ;My_ST7032.c: 119: st7032_state = ST7032_SEND;
  1915  010036  0E02               	movlw	2
  1916  010038  6E1D               	movwf	ST7032_task@st7032_state,c
  1917                           
  1918                           ;My_ST7032.c: 120: break;
  1919  01003A  0012               	return	
  1920  01003C                     l7198:
  1921                           
  1922                           ;My_ST7032.c: 122: if (!st7032_flag) {
  1923  01003C  502F               	movf	_st7032_flag,w,c
  1924  01003E  B4D8               	btfsc	status,2,c
  1925  010040  0012               	return	
  1926                           
  1927                           ;My_ST7032.c: 125: }
  1928                           ;My_ST7032.c: 126: char data = ringbuf_pop(&lcd_tx);
  1929                           
  1930                           ;My_ST7032.c: 124: return;
  1931  010042  0E30               	movlw	low _lcd_tx
  1932  010044  6E4B               	movwf	ringbuf_pop@rb,c
  1933  010046  0E00               	movlw	high _lcd_tx
  1934  010048  6E4C               	movwf	ringbuf_pop@rb+1,c
  1935  01004A  EC63  F081         	call	_ringbuf_pop	;wreg free
  1936  01004E  0100               	movlb	0	; () banked
  1937  010050  6FFF               	movwf	ST7032_task@data& (0+255),b
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;My_ST7032.c: 127: if (data != 0) {
  1941  010052  0100               	movlb	0	; () banked
  1942  010054  51FF               	movf	ST7032_task@data& (0+255),w,b
  1943  010056  0100               	movlb	0	; () banked
  1944  010058  B4D8               	btfsc	status,2,c
  1945  01005A  D005               	goto	l7210
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;My_ST7032.c: 128: st7032_flag = 0;
  1949  01005C  0E00               	movlw	0
  1950  01005E  6E2F               	movwf	_st7032_flag,c
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;My_ST7032.c: 129: SSP1BUF = data;
  1954  010060  C0FF  FFC9         	movff	ST7032_task@data,4041	;volatile
  1955                           
  1956                           ;My_ST7032.c: 130: } else {
  1957  010064  0012               	return	
  1958  010066                     l7210:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;My_ST7032.c: 131: wait = ringbuf_pop(&lcd_tx);
  1962  010066  0E30               	movlw	low _lcd_tx
  1963  010068  6E4B               	movwf	ringbuf_pop@rb,c
  1964  01006A  0E00               	movlw	high _lcd_tx
  1965  01006C  6E4C               	movwf	ringbuf_pop@rb+1,c
  1966  01006E  EC63  F081         	call	_ringbuf_pop	;wreg free
  1967  010072  6E4E               	movwf	??_ST7032_task& (0+255),c
  1968  010074  504E               	movf	??_ST7032_task,w,c
  1969  010076  0100               	movlb	0	; () banked
  1970  010078  6F84               	movwf	ST7032_task@wait& (0+255),b
  1971  01007A  6B85               	clrf	(ST7032_task@wait+1)& (0+255),b
  1972                           
  1973                           ;My_ST7032.c: 132: switch (wait) {
  1974  01007C  D01A               	goto	l7224
  1975  01007E                     l7212:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;My_ST7032.c: 134: wait = 0;
  1979  01007E  0E00               	movlw	0
  1980  010080  0100               	movlb	0	; () banked
  1981  010082  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  1982  010084  0E00               	movlw	0
  1983  010086  D013               	goto	L4
  1984  010088                     l7214:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;My_ST7032.c: 137: wait = 2;
  1988  010088  0E00               	movlw	0
  1989  01008A  0100               	movlb	0	; () banked
  1990  01008C  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  1991  01008E  0E02               	movlw	2
  1992  010090  D00E               	goto	L4
  1993  010092                     l7216:
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;My_ST7032.c: 140: wait = 25;
  1997  010092  0E00               	movlw	0
  1998  010094  0100               	movlb	0	; () banked
  1999  010096  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2000  010098  0E19               	movlw	25
  2001  01009A  D009               	goto	L4
  2002  01009C                     l7218:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;My_ST7032.c: 143: wait = 800;
  2006  01009C  0E03               	movlw	3
  2007  01009E  0100               	movlb	0	; () banked
  2008  0100A0  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2009  0100A2  0E20               	movlw	32
  2010  0100A4  D004               	goto	L4
  2011  0100A6                     l7220:
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;My_ST7032.c: 146: wait = 1;
  2015  0100A6  0E00               	movlw	0
  2016  0100A8  0100               	movlb	0	; () banked
  2017  0100AA  6F85               	movwf	(ST7032_task@wait+1)& (0+255),b
  2018  0100AC  0E01               	movlw	1
  2019  0100AE                     L4:
  2020  0100AE  6F84               	movwf	ST7032_task@wait& (0+255),b
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;My_ST7032.c: 148: }
  2024                           
  2025                           ;My_ST7032.c: 147: break;
  2026  0100B0  D016               	goto	l7226
  2027  0100B2                     l7224:
  2028                           
  2029                           ; BSR set to: 0
  2030  0100B2  C084  F04E         	movff	ST7032_task@wait,??_ST7032_task
  2031  0100B6  C085  F04F         	movff	ST7032_task@wait+1,??_ST7032_task+1
  2032                           
  2033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2034                           ; Switch size 1, requested type "space"
  2035                           ; Number of cases is 1, Range of values is 0 to 0
  2036                           ; switch strategies available:
  2037                           ; Name         Instructions Cycles
  2038                           ; simple_byte            4     3 (average)
  2039                           ;	Chosen strategy is simple_byte
  2040  0100BA  504F               	movf	??_ST7032_task+1,w,c
  2041  0100BC  0A00               	xorlw	0	; case 0
  2042  0100BE  A4D8               	btfss	status,2,c
  2043  0100C0  D7F2               	goto	l7220
  2044                           
  2045                           ; BSR set to: 0
  2046                           ; Switch size 1, requested type "space"
  2047                           ; Number of cases is 4, Range of values is 0 to 3
  2048                           ; switch strategies available:
  2049                           ; Name         Instructions Cycles
  2050                           ; simple_byte           13     7 (average)
  2051                           ;	Chosen strategy is simple_byte
  2052  0100C2  504E               	movf	??_ST7032_task,w,c
  2053  0100C4  0A00               	xorlw	0	; case 0
  2054  0100C6  B4D8               	btfsc	status,2,c
  2055  0100C8  D7DA               	goto	l7212
  2056  0100CA  0A01               	xorlw	1	; case 1
  2057  0100CC  B4D8               	btfsc	status,2,c
  2058  0100CE  D7DC               	goto	l7214
  2059  0100D0  0A03               	xorlw	3	; case 2
  2060  0100D2  B4D8               	btfsc	status,2,c
  2061  0100D4  D7DE               	goto	l7216
  2062  0100D6  0A01               	xorlw	1	; case 3
  2063  0100D8  B4D8               	btfsc	status,2,c
  2064  0100DA  D7E0               	goto	l7218
  2065  0100DC  D7E4               	goto	l7220
  2066  0100DE                     l7226:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;My_ST7032.c: 149: st7032_state = ST7032_STOP;
  2070  0100DE  0E03               	movlw	3
  2071  0100E0  6E1D               	movwf	ST7032_task@st7032_state,c
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;My_ST7032.c: 150: }
  2075                           ;My_ST7032.c: 151: break;
  2076  0100E2  0012               	return	
  2077  0100E4                     l1340:
  2078                           
  2079                           ;My_ST7032.c: 153: SSP1CON2bits.PEN = 1;
  2080  0100E4  84C5               	bsf	4037,2,c	;volatile
  2081                           
  2082                           ;My_ST7032.c: 154: st7032_state = ST7032_WAIT;
  2083  0100E6  0E04               	movlw	4
  2084  0100E8  6E1D               	movwf	ST7032_task@st7032_state,c
  2085                           
  2086                           ;My_ST7032.c: 155: break;
  2087  0100EA  0012               	return	
  2088  0100EC                     l7230:
  2089                           
  2090                           ;My_ST7032.c: 157: if (wait == 0) st7032_state = ST7032_IDOLE;
  2091  0100EC  0100               	movlb	0	; () banked
  2092  0100EE  5184               	movf	ST7032_task@wait& (0+255),w,b
  2093  0100F0  0100               	movlb	0	; () banked
  2094  0100F2  1185               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
  2095  0100F4  A4D8               	btfss	status,2,c
  2096  0100F6  D003               	goto	l7234
  2097                           
  2098                           ; BSR set to: 0
  2099  0100F8  0E00               	movlw	0
  2100  0100FA  6E1D               	movwf	ST7032_task@st7032_state,c
  2101  0100FC  0012               	return	
  2102  0100FE                     l7234:
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;My_ST7032.c: 158: else wait--;
  2106  0100FE  0100               	movlb	0	; () banked
  2107  010100  0784               	decf	ST7032_task@wait& (0+255),f,b
  2108  010102  A0D8               	btfss	status,0,c
  2109  010104  0785               	decf	(ST7032_task@wait+1)& (0+255),f,b
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;My_ST7032.c: 160: }
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;My_ST7032.c: 159: break;
  2116  010106  0012               	return	
  2117  010108                     l7238:
  2118  010108  501D               	movf	ST7032_task@st7032_state,w,c
  2119                           
  2120                           ; Switch size 1, requested type "space"
  2121                           ; Number of cases is 5, Range of values is 0 to 4
  2122                           ; switch strategies available:
  2123                           ; Name         Instructions Cycles
  2124                           ; simple_byte           16     9 (average)
  2125                           ;	Chosen strategy is simple_byte
  2126  01010A  0A00               	xorlw	0	; case 0
  2127  01010C  B4D8               	btfsc	status,2,c
  2128  01010E  D783               	goto	l7190
  2129  010110  0A01               	xorlw	1	; case 1
  2130  010112  B4D8               	btfsc	status,2,c
  2131  010114  D78D               	goto	l7194
  2132  010116  0A03               	xorlw	3	; case 2
  2133  010118  B4D8               	btfsc	status,2,c
  2134  01011A  D790               	goto	l7198
  2135  01011C  0A01               	xorlw	1	; case 3
  2136  01011E  B4D8               	btfsc	status,2,c
  2137  010120  D7E1               	goto	l1340
  2138  010122  0A07               	xorlw	7	; case 4
  2139  010124  A4D8               	btfss	status,2,c
  2140  010126  0012               	return	
  2141  010128  D7E1               	goto	l7230
  2142  01012A                     __end_of_ST7032_task:
  2143                           	opt stack 0
  2144                           tblptru	equ	0xFF8
  2145                           tblptrh	equ	0xFF7
  2146                           tblptrl	equ	0xFF6
  2147                           tablat	equ	0xFF5
  2148                           intcon	equ	0xFF2
  2149                           intcon2	equ	0xFF1
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           postdec1	equ	0xFE5
  2153                           fsr1l	equ	0xFE1
  2154                           postinc2	equ	0xFDE
  2155                           postdec2	equ	0xFDD
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _ringbuf_pop *****************
  2161 ;; Defined at:
  2162 ;;		line 45 in file "../My_library/My_ringbuf.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  rb              2   17[COMRAM] PTR struct ringbuf
  2165 ;;		 -> lcd_tx(8), usb_tx(8), uart_tx(8), terminal_task@command(8), 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  ret             1   19[COMRAM] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      unsigned char 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2179 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2180 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2181 ;;Total ram usage:        7 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    3
  2184 ;; This function calls:
  2185 ;;		_ringbuf_num
  2186 ;; This function is called by:
  2187 ;;		_ST7032_task
  2188 ;;		_terminal_task
  2189 ;;		_UART_ISR
  2190 ;;		_USB_task
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text9
  2195  0102C6                     __ptext9:
  2196                           	opt stack 0
  2197  0102C6                     _ringbuf_pop:
  2198                           	opt stack 26
  2199                           
  2200                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  2201                           
  2202                           ;incstack = 0
  2203  0102C6  C04B  F049         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2204  0102CA  C04C  F04A         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2205  0102CE  EC95  F080         	call	_ringbuf_num	;wreg free
  2206  0102D2  5049               	movf	?_ringbuf_num,w,c
  2207  0102D4  104A               	iorwf	?_ringbuf_num+1,w,c
  2208  0102D6  B4D8               	btfsc	status,2,c
  2209  0102D8  D051               	goto	l7084
  2210                           
  2211                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  2212  0102DA  EE20 F006          	lfsr	2,6
  2213  0102DE  504B               	movf	ringbuf_pop@rb,w,c
  2214  0102E0  26D9               	addwf	fsr2l,f,c
  2215  0102E2  504C               	movf	ringbuf_pop@rb+1,w,c
  2216  0102E4  22DA               	addwfc	fsr2h,f,c
  2217  0102E6  CFDE F0FB          	movff	postinc2,??_ringbuf_pop
  2218  0102EA  CFDD F0FC          	movff	postdec2,??_ringbuf_pop+1
  2219  0102EE  C04B  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2220  0102F2  C04C  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2221  0102F6  CFDE F0FD          	movff	postinc2,??_ringbuf_pop+2
  2222  0102FA  CFDD F0FE          	movff	postdec2,??_ringbuf_pop+3
  2223  0102FE  0100               	movlb	0	; () banked
  2224  010300  51FB               	movf	??_ringbuf_pop& (0+255),w,b
  2225  010302  0100               	movlb	0	; () banked
  2226  010304  25FD               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  2227  010306  6ED9               	movwf	fsr2l,c
  2228  010308  0100               	movlb	0	; () banked
  2229  01030A  51FC               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  2230  01030C  0100               	movlb	0	; () banked
  2231  01030E  21FE               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  2232  010310  6EDA               	movwf	fsr2h,c
  2233  010312  50DF               	movf	indf2,w,c
  2234  010314  6E4D               	movwf	ringbuf_pop@ret,c
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  2238  010316  EE20 F002          	lfsr	2,2
  2239  01031A  504B               	movf	ringbuf_pop@rb,w,c
  2240  01031C  26D9               	addwf	fsr2l,f,c
  2241  01031E  504C               	movf	ringbuf_pop@rb+1,w,c
  2242  010320  22DA               	addwfc	fsr2h,f,c
  2243  010322  EE10 F006          	lfsr	1,6
  2244  010326  504B               	movf	ringbuf_pop@rb,w,c
  2245  010328  26E1               	addwf	fsr1l,f,c
  2246  01032A  504C               	movf	ringbuf_pop@rb+1,w,c
  2247  01032C  22E2               	addwfc	fsr1h,f,c
  2248  01032E  CFE6 F0FD          	movff	postinc1,??_ringbuf_pop+2
  2249  010332  CFE5 F0FE          	movff	postdec1,??_ringbuf_pop+3
  2250  010336  0E01               	movlw	1
  2251  010338  0100               	movlb	0	; () banked
  2252  01033A  27FD               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  2253  01033C  0E00               	movlw	0
  2254  01033E  23FE               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  2255  010340  50DE               	movf	postinc2,w,c
  2256  010342  0100               	movlb	0	; () banked
  2257  010344  5DFD               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  2258  010346  50DE               	movf	postinc2,w,c
  2259  010348  0100               	movlb	0	; () banked
  2260  01034A  59FE               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  2261  01034C  B0D8               	btfsc	status,0,c
  2262  01034E  D00A               	goto	l7076
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;My_ringbuf.c: 49: rb->tail++;
  2266  010350  EE20 F006          	lfsr	2,6
  2267  010354  504B               	movf	ringbuf_pop@rb,w,c
  2268  010356  26D9               	addwf	fsr2l,f,c
  2269  010358  504C               	movf	ringbuf_pop@rb+1,w,c
  2270  01035A  22DA               	addwfc	fsr2h,f,c
  2271  01035C  2ADE               	incf	postinc2,f,c
  2272  01035E  0E00               	movlw	0
  2273  010360  22DD               	addwfc	postdec2,f,c
  2274                           
  2275                           ;My_ringbuf.c: 50: } else {
  2276  010362  D00A               	goto	l7078
  2277  010364                     l7076:
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;My_ringbuf.c: 51: rb->tail = 0;
  2281  010364  EE20 F006          	lfsr	2,6
  2282  010368  504B               	movf	ringbuf_pop@rb,w,c
  2283  01036A  26D9               	addwf	fsr2l,f,c
  2284  01036C  504C               	movf	ringbuf_pop@rb+1,w,c
  2285  01036E  22DA               	addwfc	fsr2h,f,c
  2286  010370  0E00               	movlw	0
  2287  010372  6EDE               	movwf	postinc2,c
  2288  010374  0E00               	movlw	0
  2289  010376  6EDD               	movwf	postdec2,c
  2290  010378                     l7078:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;My_ringbuf.c: 52: }
  2294                           ;My_ringbuf.c: 53: return ret;
  2295  010378  504D               	movf	ringbuf_pop@ret,w,c
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;My_ringbuf.c: 54: } else {
  2299                           
  2300                           ; BSR set to: 0
  2301  01037A  0012               	return	
  2302  01037C                     l7084:
  2303                           
  2304                           ;My_ringbuf.c: 55: return 0;
  2305  01037C  0E00               	movlw	0
  2306  01037E  0012               	return	
  2307  010380                     __end_of_ringbuf_pop:
  2308                           	opt stack 0
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           intcon	equ	0xFF2
  2314                           intcon2	equ	0xFF1
  2315                           postinc0	equ	0xFEE
  2316                           wreg	equ	0xFE8
  2317                           postinc1	equ	0xFE6
  2318                           postdec1	equ	0xFE5
  2319                           fsr1h	equ	0xFE2
  2320                           fsr1l	equ	0xFE1
  2321                           indf2	equ	0xFDF
  2322                           postinc2	equ	0xFDE
  2323                           postdec2	equ	0xFDD
  2324                           fsr2h	equ	0xFDA
  2325                           fsr2l	equ	0xFD9
  2326                           status	equ	0xFD8
  2327                           
  2328 ;; *************** function _ST7032_puts *****************
  2329 ;; Defined at:
  2330 ;;		line 43 in file "../My_library/My_ST7032.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  s               2    6[BANK1 ] PTR const unsigned char 
  2333 ;;		 -> STR_42(8), STR_41(9), 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;		None               void
  2338 ;; Registers used:
  2339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2345 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;Total ram usage:        2 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    5
  2352 ;; This function calls:
  2353 ;;		_ST7032_put
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text10
  2360  01063C                     __ptext10:
  2361                           	opt stack 0
  2362  01063C                     _ST7032_puts:
  2363                           	opt stack 25
  2364                           
  2365                           ;My_ST7032.c: 44: while (*s) {
  2366                           
  2367                           ;incstack = 0
  2368  01063C  D00D               	goto	l7184
  2369  01063E                     l7180:
  2370                           
  2371                           ;My_ST7032.c: 45: ST7032_put(*s++);
  2372  01063E  C1D1  FFF6         	movff	ST7032_puts@s,tblptrl
  2373  010642  C1D2  FFF7         	movff	ST7032_puts@s+1,tblptrh
  2374  010646                     	if	0	;tblptru may be non-zero
  2375  010646                     	endif
  2376  010646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2377  010646  0E00               	movlw	low (__mediumconst shr (0+16))
  2378  010648  6EF8               	movwf	tblptru,c
  2379  01064A                     	endif
  2380  01064A  0008               	tblrd		*
  2381  01064C  50F5               	movf	tablat,w,c
  2382  01064E  EC81  F082         	call	_ST7032_put
  2383  010652  0101               	movlb	1	; () banked
  2384  010654  4BD1               	infsnz	ST7032_puts@s& (0+255),f,b
  2385  010656  2BD2               	incf	(ST7032_puts@s+1)& (0+255),f,b
  2386  010658                     l7184:
  2387  010658  C1D1  FFF6         	movff	ST7032_puts@s,tblptrl
  2388  01065C  C1D2  FFF7         	movff	ST7032_puts@s+1,tblptrh
  2389  010660                     	if	0	;tblptru may be non-zero
  2390  010660                     	endif
  2391  010660                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2392  010660  0E00               	movlw	low (__mediumconst shr (0+16))
  2393  010662  6EF8               	movwf	tblptru,c
  2394  010664                     	endif
  2395  010664  0008               	tblrd		*
  2396  010666  50F5               	movf	tablat,w,c
  2397  010668  0900               	iorlw	0
  2398  01066A  B4D8               	btfsc	status,2,c
  2399  01066C  0012               	return	
  2400  01066E  D7E7               	goto	l7180
  2401  010670                     __end_of_ST7032_puts:
  2402                           	opt stack 0
  2403                           tblptru	equ	0xFF8
  2404                           tblptrh	equ	0xFF7
  2405                           tblptrl	equ	0xFF6
  2406                           tablat	equ	0xFF5
  2407                           intcon	equ	0xFF2
  2408                           intcon2	equ	0xFF1
  2409                           postinc0	equ	0xFEE
  2410                           wreg	equ	0xFE8
  2411                           postinc1	equ	0xFE6
  2412                           postdec1	equ	0xFE5
  2413                           fsr1h	equ	0xFE2
  2414                           fsr1l	equ	0xFE1
  2415                           indf2	equ	0xFDF
  2416                           postinc2	equ	0xFDE
  2417                           postdec2	equ	0xFDD
  2418                           fsr2h	equ	0xFDA
  2419                           fsr2l	equ	0xFD9
  2420                           status	equ	0xFD8
  2421                           
  2422 ;; *************** function _ST7032_put *****************
  2423 ;; Defined at:
  2424 ;;		line 35 in file "../My_library/My_ST7032.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  c               1    wreg     unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  c               1   20[COMRAM] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;		None               void
  2431 ;; Registers used:
  2432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2442 ;;Total ram usage:        1 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    4
  2445 ;; This function calls:
  2446 ;;		_ringbuf_put
  2447 ;; This function is called by:
  2448 ;;		_ST7032_puts
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text11
  2453  010502                     __ptext11:
  2454                           	opt stack 0
  2455  010502                     _ST7032_put:
  2456                           	opt stack 25
  2457                           
  2458                           ;incstack = 0
  2459                           ;ST7032_put@c stored from wreg
  2460  010502  6E4E               	movwf	ST7032_put@c,c
  2461                           
  2462                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
  2463  010504  0E30               	movlw	low _lcd_tx
  2464  010506  6E4B               	movwf	ringbuf_put@rb,c
  2465  010508  0E00               	movlw	high _lcd_tx
  2466  01050A  6E4C               	movwf	ringbuf_put@rb+1,c
  2467  01050C  0E7C               	movlw	124
  2468  01050E  6E4D               	movwf	ringbuf_put@asciicode,c
  2469  010510  EC01  F081         	call	_ringbuf_put	;wreg free
  2470                           
  2471                           ;My_ST7032.c: 37: ringbuf_put(&lcd_tx, 0b11000000);
  2472  010514  0E30               	movlw	low _lcd_tx
  2473  010516  6E4B               	movwf	ringbuf_put@rb,c
  2474  010518  0E00               	movlw	high _lcd_tx
  2475  01051A  6E4C               	movwf	ringbuf_put@rb+1,c
  2476  01051C  0EC0               	movlw	192
  2477  01051E  6E4D               	movwf	ringbuf_put@asciicode,c
  2478  010520  EC01  F081         	call	_ringbuf_put	;wreg free
  2479                           
  2480                           ;My_ST7032.c: 38: ringbuf_put(&lcd_tx, c);
  2481  010524  0E30               	movlw	low _lcd_tx
  2482  010526  6E4B               	movwf	ringbuf_put@rb,c
  2483  010528  0E00               	movlw	high _lcd_tx
  2484  01052A  6E4C               	movwf	ringbuf_put@rb+1,c
  2485  01052C  C04E  F04D         	movff	ST7032_put@c,ringbuf_put@asciicode
  2486  010530  EC01  F081         	call	_ringbuf_put	;wreg free
  2487                           
  2488                           ;My_ST7032.c: 39: ringbuf_put(&lcd_tx, 0);
  2489  010534  0E30               	movlw	low _lcd_tx
  2490  010536  6E4B               	movwf	ringbuf_put@rb,c
  2491  010538  0E00               	movlw	high _lcd_tx
  2492  01053A  6E4C               	movwf	ringbuf_put@rb+1,c
  2493  01053C  0E00               	movlw	0
  2494  01053E  6E4D               	movwf	ringbuf_put@asciicode,c
  2495  010540  EC01  F081         	call	_ringbuf_put	;wreg free
  2496                           
  2497                           ;My_ST7032.c: 40: ringbuf_put(&lcd_tx, 1);
  2498  010544  0E30               	movlw	low _lcd_tx
  2499  010546  6E4B               	movwf	ringbuf_put@rb,c
  2500  010548  0E00               	movlw	high _lcd_tx
  2501  01054A  6E4C               	movwf	ringbuf_put@rb+1,c
  2502  01054C  0E01               	movlw	1
  2503  01054E  6E4D               	movwf	ringbuf_put@asciicode,c
  2504  010550  EC01  F081         	call	_ringbuf_put	;wreg free
  2505  010554  0012               	return		;funcret
  2506  010556                     __end_of_ST7032_put:
  2507                           	opt stack 0
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           intcon	equ	0xFF2
  2513                           intcon2	equ	0xFF1
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           postinc1	equ	0xFE6
  2517                           postdec1	equ	0xFE5
  2518                           fsr1h	equ	0xFE2
  2519                           fsr1l	equ	0xFE1
  2520                           indf2	equ	0xFDF
  2521                           postinc2	equ	0xFDE
  2522                           postdec2	equ	0xFDD
  2523                           fsr2h	equ	0xFDA
  2524                           fsr2l	equ	0xFD9
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _ST7032_cursor *****************
  2528 ;; Defined at:
  2529 ;;		line 30 in file "../My_library/My_ST7032.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  col             1    wreg     unsigned char 
  2532 ;;  row             1    4[BANK0 ] unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  col             1    8[BANK1 ] unsigned char 
  2535 ;;  row_offsets     2    6[BANK1 ] unsigned char [2]
  2536 ;; Return value:  Size  Location     Type
  2537 ;;		None               void
  2538 ;; Registers used:
  2539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2545 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2546 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;Total ram usage:        4 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    5
  2552 ;; This function calls:
  2553 ;;		_ST7032_command
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text12
  2560  0106D2                     __ptext12:
  2561                           	opt stack 0
  2562  0106D2                     _ST7032_cursor:
  2563                           	opt stack 25
  2564                           
  2565                           ;incstack = 0
  2566                           ;ST7032_cursor@col stored from wreg
  2567  0106D2  0101               	movlb	1	; () banked
  2568  0106D4  6FD3               	movwf	ST7032_cursor@col& (0+255),b
  2569                           
  2570                           ;My_ST7032.c: 31: uint8_t row_offsets[] = {0x00, 0x40};
  2571  0106D6  C0F8  F1D1         	movff	ST7032_cursor@F8592,ST7032_cursor@row_offsets
  2572  0106DA  C0F9  F1D2         	movff	ST7032_cursor@F8592+1,ST7032_cursor@row_offsets+1
  2573                           
  2574                           ;My_ST7032.c: 32: ST7032_command(0x80 | (col + row_offsets[row]), 0);
  2575  0106DE  0E00               	movlw	0
  2576  0106E0  6E4E               	movwf	ST7032_command@wait,c
  2577  0106E2  0100               	movlb	0	; () banked
  2578  0106E4  51FF               	movf	ST7032_cursor@row& (0+255),w,b
  2579  0106E6  0D01               	mullw	1
  2580  0106E8  0ED1               	movlw	low ST7032_cursor@row_offsets
  2581  0106EA  24F3               	addwf	prodl,w,c
  2582  0106EC  6ED9               	movwf	fsr2l,c
  2583  0106EE  0E01               	movlw	high ST7032_cursor@row_offsets
  2584  0106F0  20F4               	addwfc	prodh,w,c
  2585  0106F2  6EDA               	movwf	fsr2h,c
  2586  0106F4  50DF               	movf	indf2,w,c
  2587  0106F6  0101               	movlb	1	; () banked
  2588  0106F8  25D3               	addwf	ST7032_cursor@col& (0+255),w,b
  2589  0106FA  0980               	iorlw	128
  2590  0106FC  ECAB  F082         	call	_ST7032_command
  2591  010700  0012               	return		;funcret
  2592  010702                     __end_of_ST7032_cursor:
  2593                           	opt stack 0
  2594                           tblptru	equ	0xFF8
  2595                           tblptrh	equ	0xFF7
  2596                           tblptrl	equ	0xFF6
  2597                           tablat	equ	0xFF5
  2598                           prodh	equ	0xFF4
  2599                           prodl	equ	0xFF3
  2600                           intcon	equ	0xFF2
  2601                           intcon2	equ	0xFF1
  2602                           postinc0	equ	0xFEE
  2603                           wreg	equ	0xFE8
  2604                           postinc1	equ	0xFE6
  2605                           postdec1	equ	0xFE5
  2606                           fsr1h	equ	0xFE2
  2607                           fsr1l	equ	0xFE1
  2608                           indf2	equ	0xFDF
  2609                           postinc2	equ	0xFDE
  2610                           postdec2	equ	0xFDD
  2611                           fsr2h	equ	0xFDA
  2612                           fsr2l	equ	0xFD9
  2613                           status	equ	0xFD8
  2614                           
  2615 ;; *************** function _ST7032_command *****************
  2616 ;; Defined at:
  2617 ;;		line 18 in file "../My_library/My_ST7032.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  command         1    wreg     unsigned char 
  2620 ;;  wait            1   20[COMRAM] unsigned char 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  command         1   21[COMRAM] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;		None               void
  2625 ;; Registers used:
  2626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2636 ;;Total ram usage:        2 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    4
  2639 ;; This function calls:
  2640 ;;		_ringbuf_put
  2641 ;; This function is called by:
  2642 ;;		_ST7032_clear
  2643 ;;		_ST7032_cursor
  2644 ;;		_ST7032_init
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text13
  2649  010556                     __ptext13:
  2650                           	opt stack 0
  2651  010556                     _ST7032_command:
  2652                           	opt stack 24
  2653                           
  2654                           ;incstack = 0
  2655                           ;ST7032_command@command stored from wreg
  2656  010556  6E4F               	movwf	ST7032_command@command,c
  2657                           
  2658                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
  2659  010558  0E30               	movlw	low _lcd_tx
  2660  01055A  6E4B               	movwf	ringbuf_put@rb,c
  2661  01055C  0E00               	movlw	high _lcd_tx
  2662  01055E  6E4C               	movwf	ringbuf_put@rb+1,c
  2663  010560  0E7C               	movlw	124
  2664  010562  6E4D               	movwf	ringbuf_put@asciicode,c
  2665  010564  EC01  F081         	call	_ringbuf_put	;wreg free
  2666                           
  2667                           ;My_ST7032.c: 20: ringbuf_put(&lcd_tx, 0x80);
  2668  010568  0E30               	movlw	low _lcd_tx
  2669  01056A  6E4B               	movwf	ringbuf_put@rb,c
  2670  01056C  0E00               	movlw	high _lcd_tx
  2671  01056E  6E4C               	movwf	ringbuf_put@rb+1,c
  2672  010570  0E80               	movlw	128
  2673  010572  6E4D               	movwf	ringbuf_put@asciicode,c
  2674  010574  EC01  F081         	call	_ringbuf_put	;wreg free
  2675                           
  2676                           ;My_ST7032.c: 21: ringbuf_put(&lcd_tx, command);
  2677  010578  0E30               	movlw	low _lcd_tx
  2678  01057A  6E4B               	movwf	ringbuf_put@rb,c
  2679  01057C  0E00               	movlw	high _lcd_tx
  2680  01057E  6E4C               	movwf	ringbuf_put@rb+1,c
  2681  010580  C04F  F04D         	movff	ST7032_command@command,ringbuf_put@asciicode
  2682  010584  EC01  F081         	call	_ringbuf_put	;wreg free
  2683                           
  2684                           ;My_ST7032.c: 22: ringbuf_put(&lcd_tx, 0);
  2685  010588  0E30               	movlw	low _lcd_tx
  2686  01058A  6E4B               	movwf	ringbuf_put@rb,c
  2687  01058C  0E00               	movlw	high _lcd_tx
  2688  01058E  6E4C               	movwf	ringbuf_put@rb+1,c
  2689  010590  0E00               	movlw	0
  2690  010592  6E4D               	movwf	ringbuf_put@asciicode,c
  2691  010594  EC01  F081         	call	_ringbuf_put	;wreg free
  2692                           
  2693                           ;My_ST7032.c: 23: ringbuf_put(&lcd_tx, wait);
  2694  010598  0E30               	movlw	low _lcd_tx
  2695  01059A  6E4B               	movwf	ringbuf_put@rb,c
  2696  01059C  0E00               	movlw	high _lcd_tx
  2697  01059E  6E4C               	movwf	ringbuf_put@rb+1,c
  2698  0105A0  C04E  F04D         	movff	ST7032_command@wait,ringbuf_put@asciicode
  2699  0105A4  EC01  F081         	call	_ringbuf_put	;wreg free
  2700  0105A8  0012               	return		;funcret
  2701  0105AA                     __end_of_ST7032_command:
  2702                           	opt stack 0
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           prodh	equ	0xFF4
  2708                           prodl	equ	0xFF3
  2709                           intcon	equ	0xFF2
  2710                           intcon2	equ	0xFF1
  2711                           postinc0	equ	0xFEE
  2712                           wreg	equ	0xFE8
  2713                           postinc1	equ	0xFE6
  2714                           postdec1	equ	0xFE5
  2715                           fsr1h	equ	0xFE2
  2716                           fsr1l	equ	0xFE1
  2717                           indf2	equ	0xFDF
  2718                           postinc2	equ	0xFDE
  2719                           postdec2	equ	0xFDD
  2720                           fsr2h	equ	0xFDA
  2721                           fsr2l	equ	0xFD9
  2722                           status	equ	0xFD8
  2723                           
  2724 ;; *************** function _ringbuf_put *****************
  2725 ;; Defined at:
  2726 ;;		line 20 in file "../My_library/My_ringbuf.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  rb              2   17[COMRAM] PTR struct ringbuf
  2729 ;;		 -> lcd_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
  2730 ;;  asciicode       1   19[COMRAM] unsigned char 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2742 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2744 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2745 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2746 ;;Total ram usage:        7 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    3
  2749 ;; This function calls:
  2750 ;;		_ringbuf_num
  2751 ;; This function is called by:
  2752 ;;		_ST7032_command
  2753 ;;		_ST7032_put
  2754 ;;		_ST7032_init
  2755 ;;		_ringbuf_put_num
  2756 ;;		_ringbuf_put_str
  2757 ;;		_terminal_task
  2758 ;;		_UART_ISR
  2759 ;;		_USB_task
  2760 ;;		_ST7032_create_char
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text14
  2765  010202                     __ptext14:
  2766                           	opt stack 0
  2767  010202                     _ringbuf_put:
  2768                           	opt stack 25
  2769                           
  2770                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  2771                           
  2772                           ;incstack = 0
  2773  010202  C04B  F049         	movff	ringbuf_put@rb,ringbuf_num@rb
  2774  010206  C04C  F04A         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  2775  01020A  EC95  F080         	call	_ringbuf_num	;wreg free
  2776  01020E  EE20 F002          	lfsr	2,2
  2777  010212  504B               	movf	ringbuf_put@rb,w,c
  2778  010214  26D9               	addwf	fsr2l,f,c
  2779  010216  504C               	movf	ringbuf_put@rb+1,w,c
  2780  010218  22DA               	addwfc	fsr2h,f,c
  2781  01021A  50DE               	movf	postinc2,w,c
  2782  01021C  5C49               	subwf	?_ringbuf_num,w,c
  2783  01021E  50DE               	movf	postinc2,w,c
  2784  010220  584A               	subwfb	?_ringbuf_num+1,w,c
  2785  010222  B0D8               	btfsc	status,0,c
  2786  010224  0012               	return	
  2787                           
  2788                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  2789  010226  EE20 F004          	lfsr	2,4
  2790  01022A  504B               	movf	ringbuf_put@rb,w,c
  2791  01022C  26D9               	addwf	fsr2l,f,c
  2792  01022E  504C               	movf	ringbuf_put@rb+1,w,c
  2793  010230  22DA               	addwfc	fsr2h,f,c
  2794  010232  CFDE F0FB          	movff	postinc2,??_ringbuf_put
  2795  010236  CFDD F0FC          	movff	postdec2,??_ringbuf_put+1
  2796  01023A  C04B  FFD9         	movff	ringbuf_put@rb,fsr2l
  2797  01023E  C04C  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  2798  010242  CFDE F0FD          	movff	postinc2,??_ringbuf_put+2
  2799  010246  CFDD F0FE          	movff	postdec2,??_ringbuf_put+3
  2800  01024A  0100               	movlb	0	; () banked
  2801  01024C  51FB               	movf	??_ringbuf_put& (0+255),w,b
  2802  01024E  0100               	movlb	0	; () banked
  2803  010250  25FD               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  2804  010252  6ED9               	movwf	fsr2l,c
  2805  010254  0100               	movlb	0	; () banked
  2806  010256  51FC               	movf	(??_ringbuf_put+1)& (0+255),w,b
  2807  010258  0100               	movlb	0	; () banked
  2808  01025A  21FE               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  2809  01025C  6EDA               	movwf	fsr2h,c
  2810  01025E  C04D  FFDF         	movff	ringbuf_put@asciicode,indf2
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  2814  010262  EE20 F002          	lfsr	2,2
  2815  010266  504B               	movf	ringbuf_put@rb,w,c
  2816  010268  26D9               	addwf	fsr2l,f,c
  2817  01026A  504C               	movf	ringbuf_put@rb+1,w,c
  2818  01026C  22DA               	addwfc	fsr2h,f,c
  2819  01026E  EE10 F004          	lfsr	1,4
  2820  010272  504B               	movf	ringbuf_put@rb,w,c
  2821  010274  26E1               	addwf	fsr1l,f,c
  2822  010276  504C               	movf	ringbuf_put@rb+1,w,c
  2823  010278  22E2               	addwfc	fsr1h,f,c
  2824  01027A  CFE6 F0FD          	movff	postinc1,??_ringbuf_put+2
  2825  01027E  CFE5 F0FE          	movff	postdec1,??_ringbuf_put+3
  2826  010282  0E01               	movlw	1
  2827  010284  0100               	movlb	0	; () banked
  2828  010286  27FD               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  2829  010288  0E00               	movlw	0
  2830  01028A  23FE               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  2831  01028C  50DE               	movf	postinc2,w,c
  2832  01028E  0100               	movlb	0	; () banked
  2833  010290  5DFD               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  2834  010292  50DE               	movf	postinc2,w,c
  2835  010294  0100               	movlb	0	; () banked
  2836  010296  59FE               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  2837  010298  B0D8               	btfsc	status,0,c
  2838  01029A  D00A               	goto	l7054
  2839                           
  2840                           ; BSR set to: 0
  2841  01029C  EE20 F004          	lfsr	2,4
  2842  0102A0  504B               	movf	ringbuf_put@rb,w,c
  2843  0102A2  26D9               	addwf	fsr2l,f,c
  2844  0102A4  504C               	movf	ringbuf_put@rb+1,w,c
  2845  0102A6  22DA               	addwfc	fsr2h,f,c
  2846  0102A8  2ADE               	incf	postinc2,f,c
  2847  0102AA  0E00               	movlw	0
  2848  0102AC  22DD               	addwfc	postdec2,f,c
  2849  0102AE  0012               	return	
  2850  0102B0                     l7054:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;My_ringbuf.c: 24: else rb->head = 0;
  2854  0102B0  EE20 F004          	lfsr	2,4
  2855  0102B4  504B               	movf	ringbuf_put@rb,w,c
  2856  0102B6  26D9               	addwf	fsr2l,f,c
  2857  0102B8  504C               	movf	ringbuf_put@rb+1,w,c
  2858  0102BA  22DA               	addwfc	fsr2h,f,c
  2859  0102BC  0E00               	movlw	0
  2860  0102BE  6EDE               	movwf	postinc2,c
  2861  0102C0  0E00               	movlw	0
  2862  0102C2  6EDD               	movwf	postdec2,c
  2863                           
  2864                           ; BSR set to: 0
  2865  0102C4  0012               	return	
  2866  0102C6                     __end_of_ringbuf_put:
  2867                           	opt stack 0
  2868                           tblptru	equ	0xFF8
  2869                           tblptrh	equ	0xFF7
  2870                           tblptrl	equ	0xFF6
  2871                           tablat	equ	0xFF5
  2872                           prodh	equ	0xFF4
  2873                           prodl	equ	0xFF3
  2874                           intcon	equ	0xFF2
  2875                           intcon2	equ	0xFF1
  2876                           postinc0	equ	0xFEE
  2877                           wreg	equ	0xFE8
  2878                           postinc1	equ	0xFE6
  2879                           postdec1	equ	0xFE5
  2880                           fsr1h	equ	0xFE2
  2881                           fsr1l	equ	0xFE1
  2882                           indf2	equ	0xFDF
  2883                           postinc2	equ	0xFDE
  2884                           postdec2	equ	0xFDD
  2885                           fsr2h	equ	0xFDA
  2886                           fsr2l	equ	0xFD9
  2887                           status	equ	0xFD8
  2888                           
  2889 ;; *************** function _ringbuf_num *****************
  2890 ;; Defined at:
  2891 ;;		line 12 in file "../My_library/My_ringbuf.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  rb              2   15[COMRAM] PTR struct ringbuf
  2894 ;;		 -> lcd_tx(8), usb_tx(8), usb_rx(8), uart_rx(8), 
  2895 ;;		 -> uart_tx(8), terminal_task@command(8), 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  2   15[COMRAM] unsigned int 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2909 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2910 ;;      Totals:         2       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;Total ram usage:        8 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    2
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_ringbuf_put
  2918 ;;		_ringbuf_pop
  2919 ;;		_ST7032_task
  2920 ;;		_ringbuf_backspace
  2921 ;;		_terminal_task
  2922 ;;		_UART_ISR
  2923 ;;		_UART_task
  2924 ;;		_USB_task
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text15
  2929  01012A                     __ptext15:
  2930                           	opt stack 0
  2931  01012A                     _ringbuf_num:
  2932                           	opt stack 25
  2933                           
  2934                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  2935                           
  2936                           ;incstack = 0
  2937  01012A  EE20 F006          	lfsr	2,6
  2938  01012E  5049               	movf	ringbuf_num@rb,w,c
  2939  010130  26D9               	addwf	fsr2l,f,c
  2940  010132  504A               	movf	ringbuf_num@rb+1,w,c
  2941  010134  22DA               	addwfc	fsr2h,f,c
  2942  010136  EE10 F004          	lfsr	1,4
  2943  01013A  5049               	movf	ringbuf_num@rb,w,c
  2944  01013C  26E1               	addwf	fsr1l,f,c
  2945  01013E  504A               	movf	ringbuf_num@rb+1,w,c
  2946  010140  22E2               	addwfc	fsr1h,f,c
  2947  010142  50DE               	movf	postinc2,w,c
  2948  010144  5CE6               	subwf	postinc1,w,c
  2949  010146  50DE               	movf	postinc2,w,c
  2950  010148  58E6               	subwfb	postinc1,w,c
  2951  01014A  A0D8               	btfss	status,0,c
  2952  01014C  D024               	goto	l7042
  2953                           
  2954                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  2955  01014E  EE20 F004          	lfsr	2,4
  2956  010152  5049               	movf	ringbuf_num@rb,w,c
  2957  010154  26D9               	addwf	fsr2l,f,c
  2958  010156  504A               	movf	ringbuf_num@rb+1,w,c
  2959  010158  22DA               	addwfc	fsr2h,f,c
  2960  01015A  CFDE F1CB          	movff	postinc2,??_ringbuf_num
  2961  01015E  CFDD F1CC          	movff	postdec2,??_ringbuf_num+1
  2962  010162  EE20 F006          	lfsr	2,6
  2963  010166  5049               	movf	ringbuf_num@rb,w,c
  2964  010168  26D9               	addwf	fsr2l,f,c
  2965  01016A  504A               	movf	ringbuf_num@rb+1,w,c
  2966  01016C  22DA               	addwfc	fsr2h,f,c
  2967  01016E  CFDE F1CD          	movff	postinc2,??_ringbuf_num+2
  2968  010172  CFDD F1CE          	movff	postdec2,??_ringbuf_num+3
  2969  010176  0101               	movlb	1	; () banked
  2970  010178  1FCD               	comf	(??_ringbuf_num+2)& (0+255),f,b
  2971  01017A  1FCE               	comf	(??_ringbuf_num+3)& (0+255),f,b
  2972  01017C  4BCD               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  2973  01017E  2BCE               	incf	(??_ringbuf_num+3)& (0+255),f,b
  2974  010180  0101               	movlb	1	; () banked
  2975  010182  51CB               	movf	??_ringbuf_num& (0+255),w,b
  2976  010184  0101               	movlb	1	; () banked
  2977  010186  25CD               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  2978  010188  6E49               	movwf	?_ringbuf_num,c
  2979  01018A  0101               	movlb	1	; () banked
  2980  01018C  51CC               	movf	(??_ringbuf_num+1)& (0+255),w,b
  2981  01018E  0101               	movlb	1	; () banked
  2982  010190  21CE               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  2983  010192  6E4A               	movwf	?_ringbuf_num+1,c
  2984                           
  2985                           ; BSR set to: 1
  2986                           ;My_ringbuf.c: 15: } else {
  2987                           
  2988                           ; BSR set to: 1
  2989  010194  0012               	return	
  2990  010196                     l7042:
  2991                           
  2992                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  2993  010196  EE20 F004          	lfsr	2,4
  2994  01019A  5049               	movf	ringbuf_num@rb,w,c
  2995  01019C  26D9               	addwf	fsr2l,f,c
  2996  01019E  504A               	movf	ringbuf_num@rb+1,w,c
  2997  0101A0  22DA               	addwfc	fsr2h,f,c
  2998  0101A2  CFDE F1CB          	movff	postinc2,??_ringbuf_num
  2999  0101A6  CFDD F1CC          	movff	postdec2,??_ringbuf_num+1
  3000  0101AA  EE20 F002          	lfsr	2,2
  3001  0101AE  5049               	movf	ringbuf_num@rb,w,c
  3002  0101B0  26D9               	addwf	fsr2l,f,c
  3003  0101B2  504A               	movf	ringbuf_num@rb+1,w,c
  3004  0101B4  22DA               	addwfc	fsr2h,f,c
  3005  0101B6  CFDE F1CD          	movff	postinc2,??_ringbuf_num+2
  3006  0101BA  CFDD F1CE          	movff	postdec2,??_ringbuf_num+3
  3007  0101BE  EE20 F006          	lfsr	2,6
  3008  0101C2  5049               	movf	ringbuf_num@rb,w,c
  3009  0101C4  26D9               	addwf	fsr2l,f,c
  3010  0101C6  504A               	movf	ringbuf_num@rb+1,w,c
  3011  0101C8  22DA               	addwfc	fsr2h,f,c
  3012  0101CA  CFDE F1CF          	movff	postinc2,??_ringbuf_num+4
  3013  0101CE  CFDD F1D0          	movff	postdec2,??_ringbuf_num+5
  3014  0101D2  0101               	movlb	1	; () banked
  3015  0101D4  1FCF               	comf	(??_ringbuf_num+4)& (0+255),f,b
  3016  0101D6  1FD0               	comf	(??_ringbuf_num+5)& (0+255),f,b
  3017  0101D8  4BCF               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  3018  0101DA  2BD0               	incf	(??_ringbuf_num+5)& (0+255),f,b
  3019  0101DC  0101               	movlb	1	; () banked
  3020  0101DE  51CD               	movf	(??_ringbuf_num+2)& (0+255),w,b
  3021  0101E0  0101               	movlb	1	; () banked
  3022  0101E2  27CF               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  3023  0101E4  0101               	movlb	1	; () banked
  3024  0101E6  51CE               	movf	(??_ringbuf_num+3)& (0+255),w,b
  3025  0101E8  0101               	movlb	1	; () banked
  3026  0101EA  23D0               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  3027  0101EC  0101               	movlb	1	; () banked
  3028  0101EE  51CB               	movf	??_ringbuf_num& (0+255),w,b
  3029  0101F0  0101               	movlb	1	; () banked
  3030  0101F2  25CF               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  3031  0101F4  6E49               	movwf	?_ringbuf_num,c
  3032  0101F6  0101               	movlb	1	; () banked
  3033  0101F8  51CC               	movf	(??_ringbuf_num+1)& (0+255),w,b
  3034  0101FA  0101               	movlb	1	; () banked
  3035  0101FC  21D0               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  3036  0101FE  6E4A               	movwf	?_ringbuf_num+1,c
  3037                           
  3038                           ; BSR set to: 1
  3039  010200  0012               	return	
  3040  010202                     __end_of_ringbuf_num:
  3041                           	opt stack 0
  3042                           tblptru	equ	0xFF8
  3043                           tblptrh	equ	0xFF7
  3044                           tblptrl	equ	0xFF6
  3045                           tablat	equ	0xFF5
  3046                           prodh	equ	0xFF4
  3047                           prodl	equ	0xFF3
  3048                           intcon	equ	0xFF2
  3049                           intcon2	equ	0xFF1
  3050                           postinc0	equ	0xFEE
  3051                           wreg	equ	0xFE8
  3052                           postinc1	equ	0xFE6
  3053                           postdec1	equ	0xFE5
  3054                           fsr1h	equ	0xFE2
  3055                           fsr1l	equ	0xFE1
  3056                           indf2	equ	0xFDF
  3057                           postinc2	equ	0xFDE
  3058                           postdec2	equ	0xFDD
  3059                           fsr2h	equ	0xFDA
  3060                           fsr2l	equ	0xFD9
  3061                           status	equ	0xFD8
  3062                           
  3063 ;; *************** function _ISR *****************
  3064 ;; Defined at:
  3065 ;;		line 33 in file "main.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;		None               void
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3081 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3082 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3083 ;;Total ram usage:       15 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    1
  3086 ;; This function calls:
  3087 ;;		_ST7032_ISR
  3088 ;; This function is called by:
  3089 ;;		Interrupt level 2
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	intcode
  3094  000008                     __pintcode:
  3095                           	opt stack 0
  3096  000008                     _ISR:
  3097                           	opt stack 23
  3098                           
  3099                           ; BSR set to: 1
  3100                           ;incstack = 0
  3101  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3102  00000A  CFFA F03B          	movff	pclath,??_ISR+1
  3103  00000E  CFFB F03C          	movff	pclatu,??_ISR+2
  3104  000012  CFE9 F03D          	movff	fsr0l,??_ISR+3
  3105  000016  CFEA F03E          	movff	fsr0h,??_ISR+4
  3106  00001A  CFE1 F03F          	movff	fsr1l,??_ISR+5
  3107  00001E  CFE2 F040          	movff	fsr1h,??_ISR+6
  3108  000022  CFD9 F041          	movff	fsr2l,??_ISR+7
  3109  000026  CFDA F042          	movff	fsr2h,??_ISR+8
  3110  00002A  CFF3 F043          	movff	prodl,??_ISR+9
  3111  00002E  CFF4 F044          	movff	prodh,??_ISR+10
  3112  000032  CFF6 F045          	movff	tblptrl,??_ISR+11
  3113  000036  CFF7 F046          	movff	tblptrh,??_ISR+12
  3114  00003A  CFF8 F047          	movff	tblptru,??_ISR+13
  3115  00003E  CFF5 F048          	movff	tablat,??_ISR+14
  3116                           
  3117                           ;main.c: 34: ST7032_ISR();
  3118  000042  EC81  F083         	call	_ST7032_ISR	;wreg free
  3119                           
  3120                           ;main.c: 35: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  3121  000046  B09E               	btfsc	3998,0,c	;volatile
  3122  000048  A09D               	btfss	3997,0,c	;volatile
  3123  00004A  D010               	goto	i2l1389
  3124                           
  3125                           ;main.c: 36: PIR1bits.TMR1IF = 0;
  3126  00004C  909E               	bcf	3998,0,c	;volatile
  3127                           
  3128                           ;main.c: 37: TMR1H = 0xC0;
  3129  00004E  0EC0               	movlw	192
  3130  000050  6ECF               	movwf	4047,c	;volatile
  3131                           
  3132                           ;main.c: 38: one_second_flag = 1;
  3133  000052  0E01               	movlw	1
  3134  000054  6E2D               	movwf	_one_second_flag,c
  3135                           
  3136                           ;main.c: 39: LATAbits.LATA0 = !LATAbits.LATA0;
  3137  000056  B089               	btfsc	3977,0,c	;volatile
  3138  000058  D003               	goto	i2u308_40
  3139  00005A  6A3A               	clrf	??_ISR& (0+255),c
  3140  00005C  2A3A               	incf	??_ISR& (0+255),f,c
  3141  00005E  D001               	goto	i2u309_48
  3142  000060                     i2u308_40:
  3143  000060  6A3A               	clrf	??_ISR& (0+255),c
  3144  000062                     i2u309_48:
  3145  000062  5089               	movf	3977,w,c	;volatile
  3146  000064  183A               	xorwf	??_ISR,w,c
  3147  000066  0BFE               	andlw	-2
  3148  000068  183A               	xorwf	??_ISR,w,c
  3149  00006A  6E89               	movwf	3977,c	;volatile
  3150  00006C                     i2l1389:
  3151  00006C  C048  FFF5         	movff	??_ISR+14,tablat
  3152  000070  C047  FFF8         	movff	??_ISR+13,tblptru
  3153  000074  C046  FFF7         	movff	??_ISR+12,tblptrh
  3154  000078  C045  FFF6         	movff	??_ISR+11,tblptrl
  3155  00007C  C044  FFF4         	movff	??_ISR+10,prodh
  3156  000080  C043  FFF3         	movff	??_ISR+9,prodl
  3157  000084  C042  FFDA         	movff	??_ISR+8,fsr2h
  3158  000088  C041  FFD9         	movff	??_ISR+7,fsr2l
  3159  00008C  C040  FFE2         	movff	??_ISR+6,fsr1h
  3160  000090  C03F  FFE1         	movff	??_ISR+5,fsr1l
  3161  000094  C03E  FFEA         	movff	??_ISR+4,fsr0h
  3162  000098  C03D  FFE9         	movff	??_ISR+3,fsr0l
  3163  00009C  C03C  FFFB         	movff	??_ISR+2,pclatu
  3164  0000A0  C03B  FFFA         	movff	??_ISR+1,pclath
  3165  0000A4  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3166  0000A6  0011               	retfie		f
  3167  0000A8                     __end_of_ISR:
  3168                           	opt stack 0
  3169                           pclatu	equ	0xFFB
  3170                           pclath	equ	0xFFA
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           prodh	equ	0xFF4
  3176                           prodl	equ	0xFF3
  3177                           intcon	equ	0xFF2
  3178                           intcon2	equ	0xFF1
  3179                           postinc0	equ	0xFEE
  3180                           fsr0h	equ	0xFEA
  3181                           fsr0l	equ	0xFE9
  3182                           wreg	equ	0xFE8
  3183                           postinc1	equ	0xFE6
  3184                           postdec1	equ	0xFE5
  3185                           fsr1h	equ	0xFE2
  3186                           fsr1l	equ	0xFE1
  3187                           indf2	equ	0xFDF
  3188                           postinc2	equ	0xFDE
  3189                           postdec2	equ	0xFDD
  3190                           fsr2h	equ	0xFDA
  3191                           fsr2l	equ	0xFD9
  3192                           status	equ	0xFD8
  3193                           
  3194 ;; *************** function _ST7032_ISR *****************
  3195 ;; Defined at:
  3196 ;;		line 92 in file "../My_library/My_ST7032.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;		None               void
  3203 ;; Registers used:
  3204 ;;		wreg, status,2
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_ISR
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text17
  3224  010702                     __ptext17:
  3225                           	opt stack 0
  3226  010702                     _ST7032_ISR:
  3227                           	opt stack 23
  3228                           
  3229                           ;My_ST7032.c: 93: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
  3230                           
  3231                           ;incstack = 0
  3232  010702  B69D               	btfsc	3997,3,c	;volatile
  3233  010704  A69E               	btfss	3998,3,c	;volatile
  3234  010706  D003               	goto	i2l3686
  3235                           
  3236                           ;My_ST7032.c: 94: PIR1bits.SSP1IF = 0;
  3237  010708  969E               	bcf	3998,3,c	;volatile
  3238                           
  3239                           ;My_ST7032.c: 95: st7032_flag = 1;
  3240  01070A  0E01               	movlw	1
  3241  01070C  6E2F               	movwf	_st7032_flag,c
  3242  01070E                     i2l3686:
  3243                           
  3244                           ;My_ST7032.c: 96: }
  3245                           ;My_ST7032.c: 97: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
  3246  01070E  A6A0               	btfss	4000,3,c	;volatile
  3247  010710  0012               	return	
  3248  010712  A6A1               	btfss	4001,3,c	;volatile
  3249  010714  0012               	return	
  3250                           
  3251                           ;My_ST7032.c: 98: PIR2bits.BCL1IF = 0;
  3252  010716  96A1               	bcf	4001,3,c	;volatile
  3253  010718  0012               	return	
  3254  01071A                     __end_of_ST7032_ISR:
  3255                           	opt stack 0
  3256                           pclatu	equ	0xFFB
  3257                           pclath	equ	0xFFA
  3258                           tblptru	equ	0xFF8
  3259                           tblptrh	equ	0xFF7
  3260                           tblptrl	equ	0xFF6
  3261                           tablat	equ	0xFF5
  3262                           prodh	equ	0xFF4
  3263                           prodl	equ	0xFF3
  3264                           intcon	equ	0xFF2
  3265                           intcon2	equ	0xFF1
  3266                           postinc0	equ	0xFEE
  3267                           fsr0h	equ	0xFEA
  3268                           fsr0l	equ	0xFE9
  3269                           wreg	equ	0xFE8
  3270                           postinc1	equ	0xFE6
  3271                           postdec1	equ	0xFE5
  3272                           fsr1h	equ	0xFE2
  3273                           fsr1l	equ	0xFE1
  3274                           indf2	equ	0xFDF
  3275                           postinc2	equ	0xFDE
  3276                           postdec2	equ	0xFDD
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8
  3280                           pclatu	equ	0xFFB
  3281                           pclath	equ	0xFFA
  3282                           tblptru	equ	0xFF8
  3283                           tblptrh	equ	0xFF7
  3284                           tblptrl	equ	0xFF6
  3285                           tablat	equ	0xFF5
  3286                           prodh	equ	0xFF4
  3287                           prodl	equ	0xFF3
  3288                           intcon	equ	0xFF2
  3289                           intcon2	equ	0xFF1
  3290                           postinc0	equ	0xFEE
  3291                           fsr0h	equ	0xFEA
  3292                           fsr0l	equ	0xFE9
  3293                           wreg	equ	0xFE8
  3294                           postinc1	equ	0xFE6
  3295                           postdec1	equ	0xFE5
  3296                           fsr1h	equ	0xFE2
  3297                           fsr1l	equ	0xFE1
  3298                           indf2	equ	0xFDF
  3299                           postinc2	equ	0xFDE
  3300                           postdec2	equ	0xFDD
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8
  3304                           
  3305                           	psect	rparam
  3306  0000                     pclatu	equ	0xFFB
  3307                           pclath	equ	0xFFA
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           intcon2	equ	0xFF1
  3316                           postinc0	equ	0xFEE
  3317                           fsr0h	equ	0xFEA
  3318                           fsr0l	equ	0xFE9
  3319                           wreg	equ	0xFE8
  3320                           postinc1	equ	0xFE6
  3321                           postdec1	equ	0xFE5
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           indf2	equ	0xFDF
  3325                           postinc2	equ	0xFDE
  3326                           postdec2	equ	0xFDD
  3327                           fsr2h	equ	0xFDA
  3328                           fsr2l	equ	0xFD9
  3329                           status	equ	0xFD8
  3330                           
  3331                           	psect	temp
  3332  000050                     btemp:
  3333                           	opt stack 0
  3334  000050                     	ds	1
  3335  0000                     int$flags	set	btemp
  3336                           pclatu	equ	0xFFB
  3337                           pclath	equ	0xFFA
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           intcon	equ	0xFF2
  3345                           intcon2	equ	0xFF1
  3346                           postinc0	equ	0xFEE
  3347                           fsr0h	equ	0xFEA
  3348                           fsr0l	equ	0xFE9
  3349                           wreg	equ	0xFE8
  3350                           postinc1	equ	0xFE6
  3351                           postdec1	equ	0xFE5
  3352                           fsr1h	equ	0xFE2
  3353                           fsr1l	equ	0xFE1
  3354                           indf2	equ	0xFDF
  3355                           postinc2	equ	0xFDE
  3356                           postdec2	equ	0xFDD
  3357                           fsr2h	equ	0xFDA
  3358                           fsr2l	equ	0xFD9
  3359                           status	equ	0xFD8


Data Sizes:
    Strings     161
    Constant    239
    Data        5
    BSS         610
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      79
    BANK0           160      5     160
    BANK1           256     10     213
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation$4	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK1[25]), 

    terminal_operation$3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK1[25]), 

    terminal_operation$2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation$1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK0[25]), 

    terminal_operation$0	PTR struct ringbuf size(2) Largest target is 0

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_42(CODE[8]), STR_41(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(COMRAM[8]), usb_tx(BANK0[8]), uart_tx(BANK0[8]), terminal_task@command(BANK0[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(COMRAM[8]), usb_rx(BANK0[8]), uart_rx(BANK0[8]), terminal_task@command(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(COMRAM[8]), usb_tx(BANK0[8]), usb_rx(BANK0[8]), uart_rx(BANK0[8]), 
		 -> uart_tx(BANK0[8]), terminal_task@command(BANK0[8]), 

    S3119ringbuf$buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 200
		 -> ST7032_init@buf(BANK2[200]), terminal_task@buf(BANK0[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(COMRAM[8]), terminal_task@command(BANK0[8]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    _main->_ST7032_task
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _ST7032_command->_ringbuf_put
    _ringbuf_put->_ringbuf_num

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ST7032_cursor
    _main->_ST7032_task
    _ST7032_init->_ringbuf_put
    _ST7032_task->_ringbuf_pop
    _ST7032_put->_ringbuf_put
    _ST7032_command->_ringbuf_put

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ST7032_cursor
    _ST7032_task->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _ringbuf_put->_ringbuf_num

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   64261
                                              9 BANK1      1     1      0
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                        _ST7032_task
                          _main_init
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   30169
                           _OSC_init
                        _ST7032_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     169
                                             15 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      30
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   29970
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_init                                         6     0      6     750
                                             15 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _ST7032_clear                                         0     0      0   10197
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    4201
                                             20 COMRAM     2     2      0
                                              4 BANK0      1     1      0
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                             17 COMRAM     3     1      2
                                              0 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ST7032_puts                                          2     0      2    9160
                                              6 BANK1      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (2) _ST7032_put                                           1     1      0    8857
                                             20 COMRAM     1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _ST7032_cursor                                        4     3      1   10534
                                              4 BANK0      1     0      1
                                              6 BANK1      3     3      0
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (3) _ST7032_command                                       2     1      1   10197
                                             20 COMRAM     2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    8826
                                             17 COMRAM     3     0      3
                                              0 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2    1407
                                             15 COMRAM     2     0      2
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0       0
                                              0 COMRAM    15    15      0
                         _ST7032_ISR
 ---------------------------------------------------------------------------------
 (8) _ST7032_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ST7032_clear
     _ST7032_command
       _ringbuf_put
         _ringbuf_num
   _ST7032_cursor
     _ST7032_command
       _ringbuf_put
         _ringbuf_num
   _ST7032_puts
     _ST7032_put
       _ringbuf_put
         _ringbuf_num
   _ST7032_task
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _main_init
     _OSC_init
     _ST7032_init
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _timer0_init
     _timer1_init

 _ISR (ROOT)
   _ST7032_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0       0      36        0.0%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      D5       7       83.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      4F       1       84.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     28C       8        0.0%
DATA                 0      0     28C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Nov 15 22:52:39 2015

                     _USB_SD_Ptr FE79                               _ms 0074  
                   __CFG_CP0$OFF 000000                              l662 061A  
                            l657 06B4                              _BDT 000D00  
                            _ISR 0008                              _UIE 000F36  
                            _UIR 000F62                              _now 00AF  
                            prod 000FF3                      ?_ST7032_ISR 003A  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
                 _USBDeviceState 0023                      ?_ST7032_put 003A  
                           ?_ISR 003A                             l1340 00E4  
                           l3112 06C8                             l1395 043C  
                           l7042 0196                             l7210 0066  
                           l7220 00A6                             l7212 007E  
                           l7054 02B0                             l7230 00EC  
                           l7214 0088                             l5470 061C  
                           l7216 0092                             l7224 00B2  
                           l7234 00FE                             l7218 009C  
                           l7226 00DE                             l7180 063E  
                           l7076 0364                             l7084 037C  
                           l7078 0378                             l7190 0016  
                           l7238 0108                             l7184 0658  
             __CFG_WPFP$PAGE_127 000000                             l7194 0030  
                           l7198 003C                             STR_1 FFE1  
                           STR_4 FFFB                             STR_7 FFFD  
                           STR_9 FFF9                             u7080 044C  
                           u7098 0450                             _UCFG 000F39  
                           _UEP0 000F26                             _UEP1 000F27  
                           _UEIE 000F37                             _UEIR 000F63  
                           _UCON 000F65                  _CDCDataInHandle 0088  
                           _pDst 008A                             _main 0436  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                    _BaudRateGen 0070                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 0050           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                             start 00A8  
                  __CFG_IESO$OFF 000000                     ?_ST7032_init 003A  
                   ?_ST7032_task 003A                     ?_ST7032_puts 01D1  
                   ___param_bank 000010                            ??_ISR 003A  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                          ?_main 003A                            _ADRES 000FC3  
                          STR_13 FFF7                            STR_30 FFD7  
                          STR_31 FFF1                            STR_15 FFA3  
                          STR_23 FF5E                            STR_32 FFD1  
                          STR_40 FFC3                            STR_24 FFB4  
                          STR_41 FF9A                            STR_25 FF8F  
                          STR_34 FFEA                            STR_42 FFAC  
                          STR_27 FFEE                            STR_19 FFE6  
                          STR_43 FFBC                            STR_36 FFDC  
                          STR_28 FF83                            STR_37 FFF3  
                          STR_38 FFCA                            STR_39 FFF5  
                          _LATB2 007C52                            _UADDR 000F38  
        ST7032_task@st7032_state 001D                            _TMR1H 000FCF  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _USTAT 000F64  
                 __CFG_FCMEN$OFF 000000                            _sd000 FF5A  
                          _sd001 FEC4                            _sd002 FEF8  
       ST7032_cursor@row_offsets 01D1           __size_of_ST7032_cursor 0030  
                __end_of_dpowers FE79                 __end_of_OSC_init 1016  
                          tablat 000FF5                            status 000FD8  
                  ?_ST7032_clear 003A                  __initialization 04A8  
            __size_of_ST7032_ISR 0018                     __end_of_main 04A8  
            __size_of_ST7032_put 0054            _control_signal_bitmap 0091  
            ringbuf_init@bufsize 004D                  _one_second_flag 002D  
                         ??_main 01D4                    __activetblptr 000003  
                   _cdc_mem_type 0027                      ST7032_put@c 004E  
                         _BCL1IF 007D0B                 _CDCDataOutHandle 0016  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                           i2l1389 006C  
                 __CFG_WDTEN$OFF 000000                           i2l3686 070E  
                         _RCREG1 000FAF                           _RTCCAL 000F3E  
                         _SPBRG1 000FB0                           _SSP1IF 007CF3  
                 __CFG_WPCFG$OFF 000000                           _TXREG1 000FAE  
                 __CFG_WPDIS$OFF 000000                   ??_ST7032_clear 0050  
              _shortPacketStatus 002E                   __CFG_XINST$OFF 000000  
        __size_of_ST7032_command 0054                    _ST7032_cursor 06D2  
                   ?_ringbuf_pop 004B                     ?_ringbuf_num 0049  
                   ?_ringbuf_put 004B                     ?_timer0_init 003A  
                   ?_timer1_init 0049                           _lcd_tx 0030  
                         clear_0 04AE                           clear_1 04BA  
                         clear_2 04C6                           clear_3 04D2  
                __CFG_CLKOEC$OFF 000000                           _usb_rx 00D5  
                         _usb_tx 00DD                     _st7032_state 0092  
                   __mediumconst FE6E                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    _CtrlTrfData 000D38             _controlTransferState 002B  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 04F8                    ___rparam_used 000001  
           __CFG_WPEND$PAGE_WPFP 000000                   ?_ST7032_cursor 00FF  
               terminal_task@op0 0096                 terminal_task@op1 0180  
               terminal_task@op2 0199                 terminal_task@op3 01B2  
                 __pcstackCOMRAM 003A                    __end_of_sd000 FF5E  
                  __end_of_sd001 FEF8                    __end_of_sd002 FF2C  
                   __pidataBANK0 1000             __size_of_ST7032_init 00B6  
           __size_of_ST7032_task 012A             __size_of_ST7032_puts 0034  
                      ?_OSC_init 003A                  __CFG_DSWDTPS$G2 000000  
           terminal_task@command 00E5                     ??_ST7032_ISR 003A  
                     _cdc_notice 0060                       _cdc_rx_len 0028  
                     _cdc_tx_len 002A                     ??_ST7032_put 004E  
             __size_of_main_init 0032                       __pbssBANK0 0060  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
             ST7032_command@wait 004E                      _pBDTEntryIn 0010  
          __end_of_weekday_3char FF48            RTCC_task@prev_halfsec 001C  
             __end_of_ST7032_ISR 071A                   ST7032_init@buf 0200  
                   ST7032_puts@s 01D1               __end_of_ST7032_put 0556  
                     ??_OSC_init 0049                       _device_dsc FF48  
                     _ep_data_in 0078                _configDescriptor1 FE81  
             __CFG_OSC$INTOSCPLL 000000             __end_of_ST7032_clear 0726  
         I2C_LCD_SetCursor@F8620 00F6                  __CFG_WDTPS$1024 000000  
                        _SPBRGH1 000F7F                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A                          _UIEbits 000F36  
               ST7032_cursor@col 01D3             timer1_init@prescaler 004B  
                        _UIRbits 000F62                 ST7032_cursor@row 00FF  
               __CFG_CFGPLLEN$ON 000000                    _cdc_trf_state 0029  
                ??_ST7032_cursor 0050                          _pCDCDst 007E  
                        _pCDCSrc 0081                          __Hparam 0000  
                 _ST7032_command 0556                          __Lparam 0000  
                  ?_ringbuf_init 0049             __size_of_ringbuf_pop 00BA  
           __size_of_ringbuf_num 00D8             __size_of_ringbuf_put 00C4  
                __CFG_STVREN$OFF 000000                __end_of_main_init 06A2  
    epoch_to_caltime@month_cache 00FA                          __pcinit 04A8  
      __end_of_configDescriptor1 FEC4                          __ramtop 0F00  
           __size_of_timer0_init 0030             __size_of_timer1_init 0044  
                        __ptext0 0436                          __ptext1 0670  
                        __ptext2 05F8                          __ptext3 06A2  
                        __ptext4 0380                          __ptext5 05AA  
                        __ptext6 071A                          __ptext7 1008  
                        __ptext8 0000                          __ptext9 02C6  
                        _inPipes 000A      _USBDeferOUTDataStagePackets 0021  
                      _T0CONbits 000FD5                 _time_change_flag 0093  
                   __size_of_ISR 00A0                        _T1CONbits 000FCD  
                        _dpowers FE6F                        _T3CONbits 000F79  
                      _T5CONbits 000F22                          _uart_rx 00C5  
                        _uart_tx 00CD               __end_of_USB_CD_Ptr FE81  
           end_of_initialization 04F8                     _CTMUCONHbits 000FB3  
             __end_of_USB_SD_Ptr FE7F                     _CTMUCONLbits 000FB2  
            _pBDTEntryEP0OutNext 001A  _dummy_encapsulated_cmd_response 00BD  
         __end_of_ST7032_command 05AA                   ??_ringbuf_init 004F  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE       _USBStatusStageEnabledFlag1 0024  
     _USBStatusStageEnabledFlag2 0025                 __CFG_DSBOREN$OFF 000000  
      epoch_to_caltime@day_cache 008C               ST7032_cursor@F8592 00F8  
               __CFG_CPUDIV$OSC1 000000               _BothEP0OutUOWNsSet 001E  
                      _USTATcopy 0039          timer1_init@clock_select 0049  
                ?_ST7032_command 004E                 __CFG_IOL1WAY$OFF 000000  
            __CFG_MSSP7B_EN$MSK7 000000                   ringbuf_init@rb 0049  
                 ringbuf_pop@ret 004D            ST7032_command@command 004F  
          __size_of_ST7032_clear 000C                __size_of_OSC_init 000E  
               __CFG_DSWDTEN$OFF 000000                _USBBusIsSuspended 0090  
            start_initialization 04A8                      __end_of_ISR 00A8  
                    _cdc_data_rx 0100                      _cdc_data_tx 0140  
                  ??_ST7032_init 0050                     _ST7032_clear 071A  
                  ??_ST7032_task 004E                    ??_ST7032_puts 004F  
         _pBDTEntryEP0OutCurrent 0018                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK0 00F6                      _st7032_flag 002F  
         _USBActiveConfiguration 0038                      __pbssCOMRAM 0001  
                  __pcstackBANK0 00FB                    __pcstackBANK1 01CB  
           __end_of_ringbuf_init 05F8                     _pBDTEntryOut 006A  
                millis_timer@cnt 008E                        __pintcode 0008  
                  __pmediumconst FE6E              __end_of_ST7032_init 0436  
            __end_of_ST7032_task 012A              __end_of_ST7032_puts 0670  
     USBCBSendResume@delay_count 0086                        _main_init 0670  
           __CFG_RTCOSC$T1OSCREF 000000                      _PADCFG1bits 000F3C  
                ST7032_task@data 00FF                      _ep_data_out 007B  
                ST7032_task@wait 0084                         _CTMUCONH 000FB3  
                       _CTMUCONL 000FB2                         _CTMUICON 000FB1  
       ringbuf_init@internal_buf 004B                         _LATAbits 000F89  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
          __end_of_ST7032_cursor 0702                         i2u308_40 0060  
                       i2u309_48 0062                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1                         _PIR5bits 000F98  
     epoch_to_caltime@year_cache 0094                    ??_ringbuf_pop 00FB  
                  ??_ringbuf_num 01CB                    ??_ringbuf_put 00FB  
                       _RCONbits 000FD0                         _UEP0bits 000F26  
     _USBDeferINDataStagePackets 0020                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                    ??_timer0_init 0049  
                  ??_timer1_init 004A                         _SSP1STAT 000FC7  
                       _UCONbits 000F65                         _OSC_init 1008  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
               __CFG_SOSCSEL$LOW 000000                       ?_main_init 003A  
                   _RemoteWakeup 001F                    ringbuf_pop@rb 004B  
                  ringbuf_num@rb 0049                    ringbuf_put@rb 004B  
               ??_ST7032_command 004F                      _INTCON2bits 000FF1  
                      copy_data0 04EC               __end_of_device_dsc FF5A  
                       __Hrparam 0000                      _ST7032_init 0380  
                       __Lrparam 0000                      _ST7032_task 0000  
                    _ST7032_puts 063C                         _SetupPkt 000D30  
                  _weekday_3char FF2C              __end_of_ringbuf_pop 0380  
            __end_of_ringbuf_num 0202              __end_of_ringbuf_put 02C6  
                    _line_coding 00ED              __end_of_timer0_init 06D2  
          __size_of_ringbuf_init 004E              __end_of_timer1_init 063C  
           timer0_init@prescaler 004A                         __ptext10 063C  
                       __ptext11 0502                         __ptext12 06D2  
                       __ptext13 0556                         __ptext14 0202  
                       __ptext15 012A                         __ptext17 0702  
                   _SSP1CON1bits 000FC6                     _SSP1CON2bits 000FC5  
                  __size_of_main 0072                         _outPipes 0001  
                       int$flags 0050                     _ringbuf_init 05AA  
                   _SSP1STATbits 000FC7        _USBDeferStatusStagePacket 0022  
                    ??_main_init 0050                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 004D  
                     _ST7032_ISR 0702                       _ST7032_put 0502  
      terminal_task@command_init 0095                         intlevel2 0000  
                     _RCSTA1bits 000FAC                       _OSCCONbits 000FD3  
                    _ringbuf_pop 02C6                      _ringbuf_num 012A  
                    _ringbuf_put 0202                      _timer0_init 06A2  
                    _timer1_init 05F8                       _RTCCFGbits 000F3F  
          _USBAlternateInterface 00F4                  _endpoint_number 002C  
   _USBStatusStageTimeoutCounter 0026                       _USB_CD_Ptr FE7F  
