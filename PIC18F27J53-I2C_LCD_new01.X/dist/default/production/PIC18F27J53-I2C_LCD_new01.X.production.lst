

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Nov 13 08:53:40 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   122                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   123                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   124                           	dabs	1,0xD00,48,_BDT
   125                           	dabs	1,0xD38,8,_CtrlTrfData
   126                           	dabs	1,0xD30,8,_SetupPkt
   127  0000                     
   128                           	psect	idataBANK1
   129  0145C0                     __pidataBANK1:
   130                           	opt stack 0
   131                           
   132                           ;initializer for I2C_LCD_SetCursor@F8620
   133  0145C0  00                 	db	0
   134  0145C1  40                 	db	64
   135                           
   136                           ;initializer for ST7032_cursor@F8592
   137  0145C2  00                 	db	0
   138  0145C3  40                 	db	64
   139                           
   140                           ;initializer for epoch_to_caltime@month_cache
   141  0145C4  01                 	db	1
   142                           
   143                           	psect	mediumconst
   144  00FD68                     __pmediumconst:
   145                           	opt stack 0
   146  00FD68  00                 	db	0
   147  00FD69                     _dpowers:
   148                           	opt stack 0
   149  00FD69  0001               	dw	1
   150  00FD6B  000A               	dw	10
   151  00FD6D  0064               	dw	100
   152  00FD6F  03E8               	dw	1000
   153  00FD71  2710               	dw	10000
   154  00FD73                     __end_of_dpowers:
   155                           	opt stack 0
   156  00FD73                     _USB_SD_Ptr:
   157                           	opt stack 0
   158  00FD73  54                 	db	low _sd000
   159  00FD74  FE                 	db	high _sd000
   160  00FD75  BE                 	db	low _sd001
   161  00FD76  FD                 	db	high _sd001
   162  00FD77  F2                 	db	low _sd002
   163  00FD78  FD                 	db	high _sd002
   164  00FD79                     __end_of_USB_SD_Ptr:
   165                           	opt stack 0
   166  00FD79                     _USB_CD_Ptr:
   167                           	opt stack 0
   168  00FD79  7B                 	db	low _configDescriptor1
   169  00FD7A  FD                 	db	high _configDescriptor1
   170  00FD7B                     __end_of_USB_CD_Ptr:
   171                           	opt stack 0
   172  00FD7B                     _configDescriptor1:
   173                           	opt stack 0
   174  00FD7B  09                 	db	9
   175  00FD7C  02                 	db	2
   176  00FD7D  43                 	db	67
   177  00FD7E  00                 	db	0
   178  00FD7F  02                 	db	2
   179  00FD80  01                 	db	1
   180  00FD81  00                 	db	0
   181  00FD82  C0                 	db	192
   182  00FD83  32                 	db	50
   183  00FD84  09                 	db	9
   184  00FD85  04                 	db	4
   185  00FD86  00                 	db	0
   186  00FD87  00                 	db	0
   187  00FD88  01                 	db	1
   188  00FD89  02                 	db	2
   189  00FD8A  02                 	db	2
   190  00FD8B  01                 	db	1
   191  00FD8C  00                 	db	0
   192  00FD8D  05                 	db	5
   193  00FD8E  24                 	db	36
   194  00FD8F  00                 	db	0
   195  00FD90  10                 	db	16
   196  00FD91  01                 	db	1
   197  00FD92  04                 	db	4
   198  00FD93  24                 	db	36
   199  00FD94  02                 	db	2
   200  00FD95  02                 	db	2
   201  00FD96  05                 	db	5
   202  00FD97  24                 	db	36
   203  00FD98  06                 	db	6
   204  00FD99  00                 	db	0
   205  00FD9A  01                 	db	1
   206  00FD9B  05                 	db	5
   207  00FD9C  24                 	db	36
   208  00FD9D  01                 	db	1
   209  00FD9E  00                 	db	0
   210  00FD9F  01                 	db	1
   211  00FDA0  07                 	db	7
   212  00FDA1  05                 	db	5
   213  00FDA2  81                 	db	129
   214  00FDA3  03                 	db	3
   215  00FDA4  08                 	db	8
   216  00FDA5  00                 	db	0
   217  00FDA6  02                 	db	2
   218  00FDA7  09                 	db	9
   219  00FDA8  04                 	db	4
   220  00FDA9  01                 	db	1
   221  00FDAA  00                 	db	0
   222  00FDAB  02                 	db	2
   223  00FDAC  0A                 	db	10
   224  00FDAD  00                 	db	0
   225  00FDAE  00                 	db	0
   226  00FDAF  00                 	db	0
   227  00FDB0  07                 	db	7
   228  00FDB1  05                 	db	5
   229  00FDB2  02                 	db	2
   230  00FDB3  02                 	db	2
   231  00FDB4  40                 	db	64
   232  00FDB5  00                 	db	0
   233  00FDB6  00                 	db	0
   234  00FDB7  07                 	db	7
   235  00FDB8  05                 	db	5
   236  00FDB9  82                 	db	130
   237  00FDBA  02                 	db	2
   238  00FDBB  40                 	db	64
   239  00FDBC  00                 	db	0
   240  00FDBD  00                 	db	0
   241  00FDBE                     __end_of_configDescriptor1:
   242                           	opt stack 0
   243  00FDBE                     _sd001:
   244                           	opt stack 0
   245  00FDBE  34                 	db	52
   246  00FDBF  03                 	db	3
   247  00FDC0  004D               	dw	77
   248  00FDC2  0069               	dw	105
   249  00FDC4  0063               	dw	99
   250  00FDC6  0072               	dw	114
   251  00FDC8  006F               	dw	111
   252  00FDCA  0063               	dw	99
   253  00FDCC  0068               	dw	104
   254  00FDCE  0069               	dw	105
   255  00FDD0  0070               	dw	112
   256  00FDD2  0020               	dw	32
   257  00FDD4  0054               	dw	84
   258  00FDD6  0065               	dw	101
   259  00FDD8  0063               	dw	99
   260  00FDDA  0068               	dw	104
   261  00FDDC  006E               	dw	110
   262  00FDDE  006F               	dw	111
   263  00FDE0  006C               	dw	108
   264  00FDE2  006F               	dw	111
   265  00FDE4  0067               	dw	103
   266  00FDE6  0079               	dw	121
   267  00FDE8  0020               	dw	32
   268  00FDEA  0049               	dw	73
   269  00FDEC  006E               	dw	110
   270  00FDEE  0063               	dw	99
   271  00FDF0  002E               	dw	46
   272  00FDF2                     __end_of_sd001:
   273                           	opt stack 0
   274  00FDF2                     _sd002:
   275                           	opt stack 0
   276  00FDF2  34                 	db	52
   277  00FDF3  03                 	db	3
   278  00FDF4  0043               	dw	67
   279  00FDF6  0044               	dw	68
   280  00FDF8  0043               	dw	67
   281  00FDFA  0020               	dw	32
   282  00FDFC  0052               	dw	82
   283  00FDFE  0053               	dw	83
   284  00FE00  002D               	dw	45
   285  00FE02  0032               	dw	50
   286  00FE04  0033               	dw	51
   287  00FE06  0032               	dw	50
   288  00FE08  0020               	dw	32
   289  00FE0A  0045               	dw	69
   290  00FE0C  006D               	dw	109
   291  00FE0E  0075               	dw	117
   292  00FE10  006C               	dw	108
   293  00FE12  0061               	dw	97
   294  00FE14  0074               	dw	116
   295  00FE16  0069               	dw	105
   296  00FE18  006F               	dw	111
   297  00FE1A  006E               	dw	110
   298  00FE1C  0020               	dw	32
   299  00FE1E  0044               	dw	68
   300  00FE20  0065               	dw	101
   301  00FE22  006D               	dw	109
   302  00FE24  006F               	dw	111
   303  00FE26                     __end_of_sd002:
   304                           	opt stack 0
   305  00FE26                     _weekday_3char:
   306                           	opt stack 0
   307  00FE26  53                 	db	83
   308  00FE27  55                 	db	85
   309  00FE28  4E                 	db	78
   310  00FE29  00                 	db	0
   311  00FE2A  4D                 	db	77
   312  00FE2B  4F                 	db	79
   313  00FE2C  4E                 	db	78
   314  00FE2D  00                 	db	0
   315  00FE2E  54                 	db	84
   316  00FE2F  55                 	db	85
   317  00FE30  45                 	db	69
   318  00FE31  00                 	db	0
   319  00FE32  57                 	db	87
   320  00FE33  45                 	db	69
   321  00FE34  44                 	db	68
   322  00FE35  00                 	db	0
   323  00FE36  54                 	db	84
   324  00FE37  48                 	db	72
   325  00FE38  55                 	db	85
   326  00FE39  00                 	db	0
   327  00FE3A  46                 	db	70
   328  00FE3B  52                 	db	82
   329  00FE3C  49                 	db	73
   330  00FE3D  00                 	db	0
   331  00FE3E  53                 	db	83
   332  00FE3F  41                 	db	65
   333  00FE40  54                 	db	84
   334  00FE41  00                 	db	0
   335  00FE42                     __end_of_weekday_3char:
   336                           	opt stack 0
   337  00FE42                     _device_dsc:
   338                           	opt stack 0
   339  00FE42  12                 	db	18
   340  00FE43  01                 	db	1
   341  00FE44  0200               	dw	512
   342  00FE46  02                 	db	2
   343  00FE47  00                 	db	0
   344  00FE48  00                 	db	0
   345  00FE49  08                 	db	8
   346  00FE4A  04D8               	dw	1240
   347  00FE4C  000A               	dw	10
   348  00FE4E  0100               	dw	256
   349  00FE50  01                 	db	1
   350  00FE51  02                 	db	2
   351  00FE52  00                 	db	0
   352  00FE53  01                 	db	1
   353  00FE54                     __end_of_device_dsc:
   354                           	opt stack 0
   355  00FE54                     _sd000:
   356                           	opt stack 0
   357  00FE54  04                 	db	4
   358  00FE55  03                 	db	3
   359  00FE56  0409               	dw	1033
   360  00FE58                     __end_of_sd000:
   361                           	opt stack 0
   362  0000                     _ANCON0	set	3912
   363  0000                     _ANCON1	set	3913
   364  0000                     _PADCFG1bits	set	3900
   365  0000                     _RTCCAL	set	3902
   366  0000                     _RTCCFGbits	set	3903
   367  0000                     _RTCVALH	set	3899
   368  0000                     _RTCVALL	set	3898
   369  0000                     _T5CONbits	set	3874
   370  0000                     _UADDR	set	3896
   371  0000                     _UCFG	set	3897
   372  0000                     _UEIE	set	3895
   373  0000                     _UEP0bits	set	3878
   374  0000                     _UIE	set	3894
   375  0000                     _UIEbits	set	3894
   376  0000                     _UEP0	set	3878
   377  0000                     _UEP1	set	3879
   378  0000                     _ADRES	set	4035
   379  0000                     _ADCON0bits	set	4034
   380  0000                     _ADCON1bits	set	4033
   381  0000                     _BAUDCON1bits	set	3966
   382  0000                     _CTMUCONH	set	4019
   383  0000                     _CTMUCONHbits	set	4019
   384  0000                     _CTMUCONL	set	4018
   385  0000                     _CTMUCONLbits	set	4018
   386  0000                     _CTMUICON	set	4017
   387  0000                     _EECON2	set	4007
   388  0000                     _INTCON2bits	set	4081
   389  0000                     _INTCONbits	set	4082
   390  0000                     _IPR1bits	set	3999
   391  0000                     _IPR2bits	set	4002
   392  0000                     _IPR5bits	set	3993
   393  0000                     _LATAbits	set	3977
   394  0000                     _OSCCONbits	set	4051
   395  0000                     _OSCTUNEbits	set	3995
   396  0000                     _PIE1bits	set	3997
   397  0000                     _PIE2bits	set	4000
   398  0000                     _PIE5bits	set	3985
   399  0000                     _PIR1bits	set	3998
   400  0000                     _PIR2bits	set	4001
   401  0000                     _PIR5bits	set	3992
   402  0000                     _RCONbits	set	4048
   403  0000                     _RCREG1	set	4015
   404  0000                     _RCSTA1bits	set	4012
   405  0000                     _SPBRG1	set	4016
   406  0000                     _SPBRGH1	set	3967
   407  0000                     _SSP1ADD	set	4040
   408  0000                     _SSP1BUF	set	4041
   409  0000                     _SSP1CON1	set	4038
   410  0000                     _SSP1CON1bits	set	4038
   411  0000                     _SSP1CON2	set	4037
   412  0000                     _SSP1CON2bits	set	4037
   413  0000                     _SSP1STAT	set	4039
   414  0000                     _SSP1STATbits	set	4039
   415  0000                     _T0CONbits	set	4053
   416  0000                     _T1CONbits	set	4045
   417  0000                     _T3CONbits	set	3961
   418  0000                     _TMR1H	set	4047
   419  0000                     _TRISA	set	3986
   420  0000                     _TRISB	set	3987
   421  0000                     _TRISC	set	3988
   422  0000                     _TXREG1	set	4014
   423  0000                     _TXSTA1bits	set	4013
   424  0000                     _UCON	set	3941
   425  0000                     _UCONbits	set	3941
   426  0000                     _UEIR	set	3939
   427  0000                     _UIR	set	3938
   428  0000                     _UIRbits	set	3938
   429  0000                     _USTAT	set	3940
   430  0000                     _BCL1IF	set	32011
   431  0000                     _LATB2	set	31826
   432  0000                     _SSP1IF	set	31987
   433  00FE58                     STR_43:
   434  00FE58  09                 	db	9
   435  00FE59  2A                 	db	42
   436  00FE5A  2A                 	db	42
   437  00FE5B  2A                 	db	42
   438  00FE5C  2A                 	db	42
   439  00FE5D  2A                 	db	42
   440  00FE5E  2A                 	db	42
   441  00FE5F  2A                 	db	42
   442  00FE60  2A                 	db	42
   443  00FE61  2A                 	db	42
   444  00FE62  2A                 	db	42
   445  00FE63  2A                 	db	42
   446  00FE64  2A                 	db	42
   447  00FE65  2A                 	db	42
   448  00FE66  2A                 	db	42
   449  00FE67  2A                 	db	42
   450  00FE68  2A                 	db	42
   451  00FE69  2A                 	db	42
   452  00FE6A  2A                 	db	42
   453  00FE6B  2A                 	db	42
   454  00FE6C  2A                 	db	42
   455  00FE6D  2A                 	db	42
   456  00FE6E  2A                 	db	42
   457  00FE6F  2A                 	db	42
   458  00FE70  2A                 	db	42
   459  00FE71  2A                 	db	42
   460  00FE72  2A                 	db	42
   461  00FE73  2A                 	db	42
   462  00FE74  2A                 	db	42
   463  00FE75  2A                 	db	42
   464  00FE76  2A                 	db	42
   465  00FE77  0A                 	db	10
   466  00FE78  09                 	db	9
   467  00FE79  2A                 	db	42
   468  00FE7A  2A                 	db	42
   469  00FE7B  2A                 	db	42
   470  00FE7C  2A                 	db	42
   471  00FE7D  20                 	db	32
   472  00FE7E  50                 	db	80	;'P'
   473  00FE7F  49                 	db	73	;'I'
   474  00FE80  43                 	db	67	;'C'
   475  00FE81  31                 	db	49	;'1'
   476  00FE82  38                 	db	56	;'8'
   477  00FE83  46                 	db	70	;'F'
   478  00FE84  32                 	db	50	;'2'
   479  00FE85  37                 	db	55	;'7'
   480  00FE86  4A                 	db	74	;'J'
   481  00FE87  35                 	db	53	;'5'
   482  00FE88  33                 	db	51	;'3'
   483  00FE89  20                 	db	32
   484  00FE8A  74                 	db	116	;'t'
   485  00FE8B  65                 	db	101	;'e'
   486  00FE8C  6D                 	db	109	;'m'
   487  00FE8D  70                 	db	112	;'p'
   488  00FE8E  6C                 	db	108	;'l'
   489  00FE8F  61                 	db	97	;'a'
   490  00FE90  74                 	db	116	;'t'
   491  00FE91  65                 	db	101	;'e'
   492  00FE92  20                 	db	32
   493  00FE93  2A                 	db	42
   494  00FE94  2A                 	db	42
   495  00FE95  2A                 	db	42
   496  00FE96  2A                 	db	42
   497  00FE97  0A                 	db	10
   498  00FE98  09                 	db	9
   499  00FE99  2A                 	db	42
   500  00FE9A  2A                 	db	42
   501  00FE9B  2A                 	db	42
   502  00FE9C  2A                 	db	42
   503  00FE9D  20                 	db	32
   504  00FE9E  4D                 	db	77	;'M'
   505  00FE9F  61                 	db	97	;'a'
   506  00FEA0  64                 	db	100	;'d'
   507  00FEA1  65                 	db	101	;'e'
   508  00FEA2  20                 	db	32
   509  00FEA3  62                 	db	98	;'b'
   510  00FEA4  79                 	db	121	;'y'
   511  00FEA5  20                 	db	32
   512  00FEA6  40                 	db	64	;'@'
   513  00FEA7  52                 	db	82	;'R'
   514  00FEA8  79                 	db	121	;'y'
   515  00FEA9  6F                 	db	111	;'o'
   516  00FEAA  6B                 	db	107	;'k'
   517  00FEAB  65                 	db	101	;'e'
   518  00FEAC  72                 	db	114	;'r'
   519  00FEAD  69                 	db	105	;'i'
   520  00FEAE  31                 	db	49	;'1'
   521  00FEAF  34                 	db	52	;'4'
   522  00FEB0  20                 	db	32
   523  00FEB1  20                 	db	32
   524  00FEB2  20                 	db	32
   525  00FEB3  2A                 	db	42
   526  00FEB4  2A                 	db	42
   527  00FEB5  2A                 	db	42
   528  00FEB6  2A                 	db	42
   529  00FEB7  0A                 	db	10
   530  00FEB8  09                 	db	9
   531  00FEB9  2A                 	db	42
   532  00FEBA  2A                 	db	42
   533  00FEBB  2A                 	db	42
   534  00FEBC  2A                 	db	42
   535  00FEBD  2A                 	db	42
   536  00FEBE  2A                 	db	42
   537  00FEBF  2A                 	db	42
   538  00FEC0  2A                 	db	42
   539  00FEC1  2A                 	db	42
   540  00FEC2  2A                 	db	42
   541  00FEC3  2A                 	db	42
   542  00FEC4  2A                 	db	42
   543  00FEC5  2A                 	db	42
   544  00FEC6  2A                 	db	42
   545  00FEC7  2A                 	db	42
   546  00FEC8  2A                 	db	42
   547  00FEC9  2A                 	db	42
   548  00FECA  2A                 	db	42
   549  00FECB  2A                 	db	42
   550  00FECC  2A                 	db	42
   551  00FECD  2A                 	db	42
   552  00FECE  2A                 	db	42
   553  00FECF  2A                 	db	42
   554  00FED0  2A                 	db	42
   555  00FED1  2A                 	db	42
   556  00FED2  2A                 	db	42
   557  00FED3  2A                 	db	42
   558  00FED4  2A                 	db	42
   559  00FED5  2A                 	db	42
   560  00FED6  2A                 	db	42
   561  00FED7  0A                 	db	10
   562  00FED8  0A                 	db	10
   563  00FED9  09                 	db	9
   564  00FEDA  70                 	db	112	;'p'
   565  00FEDB  72                 	db	114	;'r'
   566  00FEDC  69                 	db	105	;'i'
   567  00FEDD  6E                 	db	110	;'n'
   568  00FEDE  74                 	db	116	;'t'
   569  00FEDF  5F                 	db	95	;'_'
   570  00FEE0  74                 	db	116	;'t'
   571  00FEE1  69                 	db	105	;'i'
   572  00FEE2  6D                 	db	109	;'m'
   573  00FEE3  65                 	db	101	;'e'
   574  00FEE4  28                 	db	40
   575  00FEE5  74                 	db	116	;'t'
   576  00FEE6  29                 	db	41
   577  00FEE7  0A                 	db	10
   578  00FEE8  09                 	db	9
   579  00FEE9  61                 	db	97	;'a'
   580  00FEEA  64                 	db	100	;'d'
   581  00FEEB  6A                 	db	106	;'j'
   582  00FEEC  75                 	db	117	;'u'
   583  00FEED  73                 	db	115	;'s'
   584  00FEEE  74                 	db	116	;'t'
   585  00FEEF  5F                 	db	95	;'_'
   586  00FEF0  74                 	db	116	;'t'
   587  00FEF1  69                 	db	105	;'i'
   588  00FEF2  6D                 	db	109	;'m'
   589  00FEF3  65                 	db	101	;'e'
   590  00FEF4  28                 	db	40
   591  00FEF5  61                 	db	97	;'a'
   592  00FEF6  74                 	db	116	;'t'
   593  00FEF7  29                 	db	41
   594  00FEF8  20                 	db	32
   595  00FEF9  5B                 	db	91	;'['
   596  00FEFA  68                 	db	104	;'h'
   597  00FEFB  61                 	db	97	;'a'
   598  00FEFC  6E                 	db	110	;'n'
   599  00FEFD  64                 	db	100	;'d'
   600  00FEFE  3A                 	db	58	;':'
   601  00FEFF  79                 	db	121	;'y'
   602  00FF00  2C                 	db	44
   603  00FF01  4D                 	db	77	;'M'
   604  00FF02  2C                 	db	44
   605  00FF03  64                 	db	100	;'d'
   606  00FF04  2C                 	db	44
   607  00FF05  68                 	db	104	;'h'
   608  00FF06  2C                 	db	44
   609  00FF07  6D                 	db	109	;'m'
   610  00FF08  2C                 	db	44
   611  00FF09  73                 	db	115	;'s'
   612  00FF0A  5D                 	db	93	;']'
   613  00FF0B  20                 	db	32
   614  00FF0C  5B                 	db	91	;'['
   615  00FF0D  76                 	db	118	;'v'
   616  00FF0E  61                 	db	97	;'a'
   617  00FF0F  6C                 	db	108	;'l'
   618  00FF10  75                 	db	117	;'u'
   619  00FF11  65                 	db	101	;'e'
   620  00FF12  28                 	db	40
   621  00FF13  64                 	db	100	;'d'
   622  00FF14  65                 	db	101	;'e'
   623  00FF15  63                 	db	99	;'c'
   624  00FF16  69                 	db	105	;'i'
   625  00FF17  6D                 	db	109	;'m'
   626  00FF18  61                 	db	97	;'a'
   627  00FF19  6C                 	db	108	;'l'
   628  00FF1A  29                 	db	41
   629  00FF1B  5D                 	db	93	;']'
   630  00FF1C  0A                 	db	10
   631  00FF1D  0A                 	db	10
   632  00FF1E  09                 	db	9
   633  00FF1F  66                 	db	102	;'f'
   634  00FF20  6F                 	db	111	;'o'
   635  00FF21  72                 	db	114	;'r'
   636  00FF22  20                 	db	32
   637  00FF23  44                 	db	68	;'D'
   638  00FF24  65                 	db	101	;'e'
   639  00FF25  76                 	db	118	;'v'
   640  00FF26  65                 	db	101	;'e'
   641  00FF27  6C                 	db	108	;'l'
   642  00FF28  6F                 	db	111	;'o'
   643  00FF29  70                 	db	112	;'p'
   644  00FF2A  70                 	db	112	;'p'
   645  00FF2B  65                 	db	101	;'e'
   646  00FF2C  72                 	db	114	;'r'
   647  00FF2D  0A                 	db	10
   648  00FF2E  09                 	db	9
   649  00FF2F  52                 	db	82	;'R'
   650  00FF30  45                 	db	69	;'E'
   651  00FF31  53                 	db	83	;'S'
   652  00FF32  45                 	db	69	;'E'
   653  00FF33  54                 	db	84	;'T'
   654  00FF34  28                 	db	40
   655  00FF35  29                 	db	41
   656  00FF36  3B                 	db	59	;';'
   657  00FF37  0A                 	db	10
   658  00FF38  09                 	db	9
   659  00FF39  62                 	db	98	;'b'
   660  00FF3A  6F                 	db	111	;'o'
   661  00FF3B  6F                 	db	111	;'o'
   662  00FF3C  74                 	db	116	;'t'
   663  00FF3D  6C                 	db	108	;'l'
   664  00FF3E  6F                 	db	111	;'o'
   665  00FF3F  61                 	db	97	;'a'
   666  00FF40  64                 	db	100	;'d'
   667  00FF41  0A                 	db	10
   668  00FF42  00                 	db	0
   669  00FF43                     STR_23:
   670  00FF43  09                 	db	9
   671  00FF44  32                 	db	50	;'2'
   672  00FF45  30                 	db	48	;'0'
   673  00FF46  25                 	db	37
   674  00FF47  30                 	db	48	;'0'
   675  00FF48  32                 	db	50	;'2'
   676  00FF49  64                 	db	100	;'d'
   677  00FF4A  2F                 	db	47
   678  00FF4B  25                 	db	37
   679  00FF4C  30                 	db	48	;'0'
   680  00FF4D  32                 	db	50	;'2'
   681  00FF4E  64                 	db	100	;'d'
   682  00FF4F  2F                 	db	47
   683  00FF50  25                 	db	37
   684  00FF51  30                 	db	48	;'0'
   685  00FF52  32                 	db	50	;'2'
   686  00FF53  64                 	db	100	;'d'
   687  00FF54  28                 	db	40
   688  00FF55  25                 	db	37
   689  00FF56  73                 	db	115	;'s'
   690  00FF57  29                 	db	41
   691  00FF58  25                 	db	37
   692  00FF59  30                 	db	48	;'0'
   693  00FF5A  32                 	db	50	;'2'
   694  00FF5B  64                 	db	100	;'d'
   695  00FF5C  3A                 	db	58	;':'
   696  00FF5D  25                 	db	37
   697  00FF5E  30                 	db	48	;'0'
   698  00FF5F  32                 	db	50	;'2'
   699  00FF60  64                 	db	100	;'d'
   700  00FF61  2D                 	db	45
   701  00FF62  25                 	db	37
   702  00FF63  30                 	db	48	;'0'
   703  00FF64  32                 	db	50	;'2'
   704  00FF65  64                 	db	100	;'d'
   705  00FF66  0A                 	db	10
   706  00FF67  00                 	db	0
   707  00FF68                     STR_28:
   708  00FF68  61                 	db	97	;'a'
   709  00FF69  64                 	db	100	;'d'
   710  00FF6A  6A                 	db	106	;'j'
   711  00FF6B  75                 	db	117	;'u'
   712  00FF6C  73                 	db	115	;'s'
   713  00FF6D  74                 	db	116	;'t'
   714  00FF6E  5F                 	db	95	;'_'
   715  00FF6F  74                 	db	116	;'t'
   716  00FF70  69                 	db	105	;'i'
   717  00FF71  6D                 	db	109	;'m'
   718  00FF72  65                 	db	101	;'e'
   719  00FF73  00                 	db	0
   720  00FF74                     STR_25:
   721  00FF74  70                 	db	112	;'p'
   722  00FF75  72                 	db	114	;'r'
   723  00FF76  69                 	db	105	;'i'
   724  00FF77  6E                 	db	110	;'n'
   725  00FF78  74                 	db	116	;'t'
   726  00FF79  5F                 	db	95	;'_'
   727  00FF7A  74                 	db	116	;'t'
   728  00FF7B  69                 	db	105	;'i'
   729  00FF7C  6D                 	db	109	;'m'
   730  00FF7D  65                 	db	101	;'e'
   731  00FF7E  00                 	db	0
   732  00FF7F                     STR_46:
   733  00FF7F  31                 	db	49	;'1'
   734  00FF80  38                 	db	56	;'8'
   735  00FF81  46                 	db	70	;'F'
   736  00FF82  32                 	db	50	;'2'
   737  00FF83  37                 	db	55	;'7'
   738  00FF84  4A                 	db	74	;'J'
   739  00FF85  35                 	db	53	;'5'
   740  00FF86  33                 	db	51	;'3'
   741  00FF87  00                 	db	0
   742  00FF88                     STR_44:
   743  00FF88  52                 	db	82	;'R'
   744  00FF89  45                 	db	69	;'E'
   745  00FF8A  53                 	db	83	;'S'
   746  00FF8B  45                 	db	69	;'E'
   747  00FF8C  54                 	db	84	;'T'
   748  00FF8D  28                 	db	40
   749  00FF8E  29                 	db	41
   750  00FF8F  3B                 	db	59	;';'
   751  00FF90  00                 	db	0
   752  00FF91                     STR_45:
   753  00FF91  62                 	db	98	;'b'
   754  00FF92  6F                 	db	111	;'o'
   755  00FF93  6F                 	db	111	;'o'
   756  00FF94  74                 	db	116	;'t'
   757  00FF95  6C                 	db	108	;'l'
   758  00FF96  6F                 	db	111	;'o'
   759  00FF97  61                 	db	97	;'a'
   760  00FF98  64                 	db	100	;'d'
   761  00FF99  00                 	db	0
   762  00FF9A                     STR_47:
   763  00FF9A  54                 	db	84	;'T'
   764  00FF9B  65                 	db	101	;'e'
   765  00FF9C  6D                 	db	109	;'m'
   766  00FF9D  70                 	db	112	;'p'
   767  00FF9E  6C                 	db	108	;'l'
   768  00FF9F  61                 	db	97	;'a'
   769  00FFA0  74                 	db	116	;'t'
   770  00FFA1  65                 	db	101	;'e'
   771  00FFA2  00                 	db	0
   772  00FFA3                     STR_15:
   773  00FFA3  20                 	db	32
   774  00FFA4  20                 	db	32
   775  00FFA5  20                 	db	32
   776  00FFA6  20                 	db	32
   777  00FFA7  20                 	db	32
   778  00FFA8  20                 	db	32
   779  00FFA9  20                 	db	32
   780  00FFAA  20                 	db	32
   781  00FFAB  00                 	db	0
   782  00FFAC                     STR_24:
   783  00FFAC  09                 	db	9
   784  00FFAD  65                 	db	101	;'e'
   785  00FFAE  72                 	db	114	;'r'
   786  00FFAF  72                 	db	114	;'r'
   787  00FFB0  6F                 	db	111	;'o'
   788  00FFB1  72                 	db	114	;'r'
   789  00FFB2  0A                 	db	10
   790  00FFB3  00                 	db	0
   791  00FFB4                     STR_48:
   792  00FFB4  28                 	db	40
   793  00FFB5  6E                 	db	110	;'n'
   794  00FFB6  75                 	db	117	;'u'
   795  00FFB7  6C                 	db	108	;'l'
   796  00FFB8  6C                 	db	108	;'l'
   797  00FFB9  29                 	db	41
   798  00FFBA  00                 	db	0
   799  00FFBB                     STR_40:
   800  00FFBB  73                 	db	115	;'s'
   801  00FFBC  65                 	db	101	;'e'
   802  00FFBD  63                 	db	99	;'c'
   803  00FFBE  6F                 	db	111	;'o'
   804  00FFBF  6E                 	db	110	;'n'
   805  00FFC0  64                 	db	100	;'d'
   806  00FFC1  00                 	db	0
   807  00FFC2                     STR_38:
   808  00FFC2  6D                 	db	109	;'m'
   809  00FFC3  69                 	db	105	;'i'
   810  00FFC4  6E                 	db	110	;'n'
   811  00FFC5  75                 	db	117	;'u'
   812  00FFC6  74                 	db	116	;'t'
   813  00FFC7  65                 	db	101	;'e'
   814  00FFC8  00                 	db	0
   815  00FFC9                     STR_32:
   816  00FFC9  6D                 	db	109	;'m'
   817  00FFCA  6F                 	db	111	;'o'
   818  00FFCB  6E                 	db	110	;'n'
   819  00FFCC  74                 	db	116	;'t'
   820  00FFCD  68                 	db	104	;'h'
   821  00FFCE  00                 	db	0
   822  00FFCF                     STR_41:
   823  00FFCF  68                 	db	104	;'h'
   824  00FFD0  65                 	db	101	;'e'
   825  00FFD1  6C                 	db	108	;'l'
   826  00FFD2  70                 	db	112	;'p'
   827  00FFD3  00                 	db	0
   828  00FFD4                     STR_30:
   829  00FFD4  79                 	db	121	;'y'
   830  00FFD5  65                 	db	101	;'e'
   831  00FFD6  61                 	db	97	;'a'
   832  00FFD7  72                 	db	114	;'r'
   833  00FFD8  00                 	db	0
   834  00FFD9                     STR_36:
   835  00FFD9  68                 	db	104	;'h'
   836  00FFDA  6F                 	db	111	;'o'
   837  00FFDB  75                 	db	117	;'u'
   838  00FFDC  72                 	db	114	;'r'
   839  00FFDD  00                 	db	0
   840  00FFDE                     STR_1:
   841  00FFDE  25                 	db	37
   842  00FFDF  30                 	db	48	;'0'
   843  00FFE0  32                 	db	50	;'2'
   844  00FFE1  64                 	db	100	;'d'
   845  00FFE2  00                 	db	0
   846  00FFE3                     STR_19:
   847  00FFE3  08                 	db	8
   848  00FFE4  20                 	db	32
   849  00FFE5  08                 	db	8
   850  00FFE6  00                 	db	0
   851  00FFE7                     STR_34:
   852  00FFE7  64                 	db	100	;'d'
   853  00FFE8  61                 	db	97	;'a'
   854  00FFE9  79                 	db	121	;'y'
   855  00FFEA  00                 	db	0
   856  00FFEB                     STR_27:
   857  00FFEB  61                 	db	97	;'a'
   858  00FFEC  74                 	db	116	;'t'
   859  00FFED  00                 	db	0
   860  00FFEE                     STR_42:
   861  00FFEE  3F                 	db	63	;'?'
   862  00FFEF  00                 	db	0
   863  00FFF0                     STR_31:
   864  00FFF0  4D                 	db	77	;'M'
   865  00FFF1  00                 	db	0
   866  00FFF2                     STR_37:
   867  00FFF2  6D                 	db	109	;'m'
   868  00FFF3  00                 	db	0
   869  00FFF4                     STR_39:
   870  00FFF4  73                 	db	115	;'s'
   871  00FFF5  00                 	db	0
   872  00FFF6  28                 	db	40
   873  00FFF7  00                 	db	0
   874  00FFF8                     STR_9:
   875  00FFF8  2D                 	db	45
   876  00FFF9  00                 	db	0
   877  00FFFA                     STR_4:
   878  00FFFA  2F                 	db	47
   879  00FFFB  00                 	db	0
   880  00FFFC                     STR_7:
   881  00FFFC  3A                 	db	58	;':'
   882  00FFFD  00                 	db	0
   883  0000                     
   884                           ; #config settings
   885  00FFFE  00                 	db	0	; dummy byte at the end
   886  0000                     
   887                           	psect	cinit
   888  013878                     __pcinit:
   889                           	opt stack 0
   890  013878                     start_initialization:
   891                           	opt stack 0
   892  013878                     __initialization:
   893                           	opt stack 0
   894                           
   895                           ; Clear objects allocated to BIGRAMl (2000 bytes)
   896  013878  EE04  F0C8         	lfsr	0,__pbssBIGRAMl
   897  01387C  EE17 F0D0          	lfsr	1,2000
   898  013880                     clear_0:
   899  013880  6AEE               	clrf	postinc0,c
   900  013882  50E5               	movf	postdec1,w,c
   901  013884  50E1               	movf	fsr1l,w,c
   902  013886  E1FC               	bnz	clear_0
   903  013888  50E2               	movf	fsr1h,w,c
   904  01388A  E1FA               	bnz	clear_0
   905                           
   906                           ; Clear objects allocated to BANK4 (200 bytes)
   907  01388C  EE04  F000         	lfsr	0,__pbssBANK4
   908  013890  0EC8               	movlw	200
   909  013892                     clear_1:
   910  013892  6AEE               	clrf	postinc0,c
   911  013894  06E8               	decf	wreg,f,c
   912  013896  E1FD               	bnz	clear_1
   913                           
   914                           ; Clear objects allocated to BANK3 (200 bytes)
   915  013898  EE03  F000         	lfsr	0,__pbssBANK3
   916  01389C  0EC8               	movlw	200
   917  01389E                     clear_2:
   918  01389E  6AEE               	clrf	postinc0,c
   919  0138A0  06E8               	decf	wreg,f,c
   920  0138A2  E1FD               	bnz	clear_2
   921                           
   922                           ; Clear objects allocated to BANK2 (228 bytes)
   923  0138A4  EE02  F000         	lfsr	0,__pbssBANK2
   924  0138A8  0EE4               	movlw	228
   925  0138AA                     clear_3:
   926  0138AA  6AEE               	clrf	postinc0,c
   927  0138AC  06E8               	decf	wreg,f,c
   928  0138AE  E1FD               	bnz	clear_3
   929                           
   930                           ; Clear objects allocated to BANK1 (124 bytes)
   931  0138B0  EE01  F000         	lfsr	0,__pbssBANK1
   932  0138B4  0E7C               	movlw	124
   933  0138B6                     clear_4:
   934  0138B6  6AEE               	clrf	postinc0,c
   935  0138B8  06E8               	decf	wreg,f,c
   936  0138BA  E1FD               	bnz	clear_4
   937                           
   938                           ; Clear objects allocated to BANK0 (12 bytes)
   939  0138BC  EE00  F0D0         	lfsr	0,__pbssBANK0
   940  0138C0  0E0C               	movlw	12
   941  0138C2                     clear_5:
   942  0138C2  6AEE               	clrf	postinc0,c
   943  0138C4  06E8               	decf	wreg,f,c
   944  0138C6  E1FD               	bnz	clear_5
   945                           
   946                           ; Clear objects allocated to COMRAM (45 bytes)
   947  0138C8  EE00  F001         	lfsr	0,__pbssCOMRAM
   948  0138CC  0E2D               	movlw	45
   949  0138CE                     clear_6:
   950  0138CE  6AEE               	clrf	postinc0,c
   951  0138D0  06E8               	decf	wreg,f,c
   952  0138D2  E1FD               	bnz	clear_6
   953                           
   954                           ; Initialize objects allocated to BANK1 (5 bytes)
   955                           ; load TBLPTR registers with __pidataBANK1
   956  0138D4  0EC0               	movlw	low __pidataBANK1
   957  0138D6  6EF6               	movwf	tblptrl,c
   958  0138D8  0E45               	movlw	high __pidataBANK1
   959  0138DA  6EF7               	movwf	tblptrh,c
   960  0138DC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   961  0138DE  6EF8               	movwf	tblptru,c
   962  0138E0  EE01  F0E5         	lfsr	0,__pdataBANK1
   963  0138E4  EE10 F005          	lfsr	1,5
   964  0138E8                     copy_data0:
   965  0138E8  0009               	tblrd		*+
   966  0138EA  CFF5 FFEE          	movff	tablat,postinc0
   967  0138EE  50E5               	movf	postdec1,w,c
   968  0138F0  50E1               	movf	fsr1l,w,c
   969  0138F2  E1FA               	bnz	copy_data0
   970  0138F4                     end_of_initialization:
   971                           	opt stack 0
   972  0138F4                     __end_of__initialization:
   973                           	opt stack 0
   974  0138F4  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   975  0138F6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   976  0138F8  0100               	movlb	0
   977  0138FA  EFBB  F08E         	goto	_main	;jump to C main() function
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           postdec1	equ	0xFE5
   985                           fsr1h	equ	0xFE2
   986                           fsr1l	equ	0xFE1
   987                           
   988                           	psect	bssCOMRAM
   989  000001                     __pbssCOMRAM:
   990                           	opt stack 0
   991  000001                     _outPipes:
   992                           	opt stack 0
   993  000001                     	ds	9
   994  00000A                     _inPipes:
   995                           	opt stack 0
   996  00000A                     	ds	6
   997  000010                     _pBDTEntryIn:
   998                           	opt stack 0
   999  000010                     	ds	6
  1000  000016                     _ep_data_in:
  1001                           	opt stack 0
  1002  000016                     	ds	3
  1003  000019                     _pBDTEntryEP0OutCurrent:
  1004                           	opt stack 0
  1005  000019                     	ds	2
  1006  00001B                     _pBDTEntryEP0OutNext:
  1007                           	opt stack 0
  1008  00001B                     	ds	2
  1009  00001D                     RTCC_task@prev_halfsec:
  1010                           	opt stack 0
  1011  00001D                     	ds	1
  1012  00001E                     _BothEP0OutUOWNsSet:
  1013                           	opt stack 0
  1014  00001E                     	ds	1
  1015  00001F                     _RemoteWakeup:
  1016                           	opt stack 0
  1017  00001F                     	ds	1
  1018  000020                     _USBDeferINDataStagePackets:
  1019                           	opt stack 0
  1020  000020                     	ds	1
  1021  000021                     _USBDeferOUTDataStagePackets:
  1022                           	opt stack 0
  1023  000021                     	ds	1
  1024  000022                     _USBDeferStatusStagePacket:
  1025                           	opt stack 0
  1026  000022                     	ds	1
  1027  000023                     _USBDeviceState:
  1028                           	opt stack 0
  1029  000023                     	ds	1
  1030  000024                     _USBStatusStageEnabledFlag1:
  1031                           	opt stack 0
  1032  000024                     	ds	1
  1033  000025                     _USBStatusStageEnabledFlag2:
  1034                           	opt stack 0
  1035  000025                     	ds	1
  1036  000026                     _USBStatusStageTimeoutCounter:
  1037                           	opt stack 0
  1038  000026                     	ds	1
  1039  000027                     _cdc_mem_type:
  1040                           	opt stack 0
  1041  000027                     	ds	1
  1042  000028                     _cdc_trf_state:
  1043                           	opt stack 0
  1044  000028                     	ds	1
  1045  000029                     _controlTransferState:
  1046                           	opt stack 0
  1047  000029                     	ds	1
  1048  00002A                     _endpoint_number:
  1049                           	opt stack 0
  1050  00002A                     	ds	1
  1051  00002B                     _shortPacketStatus:
  1052                           	opt stack 0
  1053  00002B                     	ds	1
  1054  00002C                     _USBActiveConfiguration:
  1055                           	opt stack 0
  1056  00002C                     	ds	1
  1057  00002D                     _USTATcopy:
  1058                           	opt stack 0
  1059  00002D                     	ds	1
  1060                           tblptru	equ	0xFF8
  1061                           tblptrh	equ	0xFF7
  1062                           tblptrl	equ	0xFF6
  1063                           tablat	equ	0xFF5
  1064                           postinc0	equ	0xFEE
  1065                           wreg	equ	0xFE8
  1066                           postdec1	equ	0xFE5
  1067                           fsr1h	equ	0xFE2
  1068                           fsr1l	equ	0xFE1
  1069                           
  1070                           	psect	bssBANK0
  1071  0000D0                     __pbssBANK0:
  1072                           	opt stack 0
  1073  0000D0                     _CDCDataOutHandle:
  1074                           	opt stack 0
  1075  0000D0                     	ds	2
  1076  0000D2                     _cdc_rx_len:
  1077                           	opt stack 0
  1078  0000D2                     	ds	1
  1079  0000D3                     _cdc_tx_len:
  1080                           	opt stack 0
  1081  0000D3                     	ds	1
  1082  0000D4                     _lcd_tx:
  1083                           	opt stack 0
  1084  0000D4                     	ds	8
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           tblptrl	equ	0xFF6
  1088                           tablat	equ	0xFF5
  1089                           postinc0	equ	0xFEE
  1090                           wreg	equ	0xFE8
  1091                           postdec1	equ	0xFE5
  1092                           fsr1h	equ	0xFE2
  1093                           fsr1l	equ	0xFE1
  1094                           
  1095                           	psect	bssBANK1
  1096  000100                     __pbssBANK1:
  1097                           	opt stack 0
  1098  000100                     _cdc_notice:
  1099                           	opt stack 0
  1100  000100                     	ds	10
  1101  00010A                     _pBDTEntryOut:
  1102                           	opt stack 0
  1103  00010A                     	ds	6
  1104  000110                     _BaudRateGen:
  1105                           	opt stack 0
  1106  000110                     	ds	4
  1107  000114                     _ms:
  1108                           	opt stack 0
  1109  000114                     	ds	4
  1110  000118                     _ep_data_out:
  1111                           	opt stack 0
  1112  000118                     	ds	3
  1113  00011B                     _pCDCDst:
  1114                           	opt stack 0
  1115  00011B                     	ds	3
  1116  00011E                     _pCDCSrc:
  1117                           	opt stack 0
  1118  00011E                     	ds	3
  1119  000121                     ST7032_task@wait:
  1120                           	opt stack 0
  1121  000121                     	ds	2
  1122  000123                     USBCBSendResume@delay_count:
  1123                           	opt stack 0
  1124  000123                     	ds	2
  1125  000125                     _CDCDataInHandle:
  1126                           	opt stack 0
  1127  000125                     	ds	2
  1128  000127                     _pDst:
  1129                           	opt stack 0
  1130  000127                     	ds	2
  1131  000129                     epoch_to_caltime@day_cache:
  1132                           	opt stack 0
  1133  000129                     	ds	2
  1134  00012B                     millis_timer@cnt:
  1135                           	opt stack 0
  1136  00012B                     	ds	2
  1137  00012D                     ST7032_task@st7032_state:
  1138                           	opt stack 0
  1139  00012D                     	ds	1
  1140  00012E                     _USBBusIsSuspended:
  1141                           	opt stack 0
  1142  00012E                     	ds	1
  1143  00012F                     _control_signal_bitmap:
  1144                           	opt stack 0
  1145  00012F                     	ds	1
  1146  000130                     _st7032_flag:
  1147                           	opt stack 0
  1148  000130                     	ds	1
  1149  000131                     _st7032_state:
  1150                           	opt stack 0
  1151  000131                     	ds	1
  1152  000132                     _time_change_flag:
  1153                           	opt stack 0
  1154  000132                     	ds	1
  1155  000133                     epoch_to_caltime@year_cache:
  1156                           	opt stack 0
  1157  000133                     	ds	1
  1158  000134                     terminal_task@command_init:
  1159                           	opt stack 0
  1160  000134                     	ds	1
  1161  000135                     _now:
  1162                           	opt stack 0
  1163  000135                     	ds	14
  1164  000143                     _dummy_encapsulated_cmd_response:
  1165                           	opt stack 0
  1166  000143                     	ds	8
  1167  00014B                     _uart_rx:
  1168                           	opt stack 0
  1169  00014B                     	ds	8
  1170  000153                     _uart_tx:
  1171                           	opt stack 0
  1172  000153                     	ds	8
  1173  00015B                     _usb_rx:
  1174                           	opt stack 0
  1175  00015B                     	ds	8
  1176  000163                     _usb_tx:
  1177                           	opt stack 0
  1178  000163                     	ds	8
  1179  00016B                     terminal_task@command:
  1180                           	opt stack 0
  1181  00016B                     	ds	8
  1182  000173                     _line_coding:
  1183                           	opt stack 0
  1184  000173                     	ds	7
  1185  00017A                     _USBAlternateInterface:
  1186                           	opt stack 0
  1187  00017A                     	ds	2
  1188                           tblptru	equ	0xFF8
  1189                           tblptrh	equ	0xFF7
  1190                           tblptrl	equ	0xFF6
  1191                           tablat	equ	0xFF5
  1192                           postinc0	equ	0xFEE
  1193                           wreg	equ	0xFE8
  1194                           postdec1	equ	0xFE5
  1195                           fsr1h	equ	0xFE2
  1196                           fsr1l	equ	0xFE1
  1197                           
  1198                           	psect	dataBANK1
  1199  0001E5                     __pdataBANK1:
  1200                           	opt stack 0
  1201  0001E5                     I2C_LCD_SetCursor@F8620:
  1202                           	opt stack 0
  1203  0001E5                     	ds	2
  1204  0001E7                     ST7032_cursor@F8592:
  1205                           	opt stack 0
  1206  0001E7                     	ds	2
  1207  0001E9                     epoch_to_caltime@month_cache:
  1208                           	opt stack 0
  1209  0001E9                     	ds	1
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           postdec1	equ	0xFE5
  1217                           fsr1h	equ	0xFE2
  1218                           fsr1l	equ	0xFE1
  1219                           
  1220                           	psect	bssBANK2
  1221  000200                     __pbssBANK2:
  1222                           	opt stack 0
  1223  000200                     _cdc_data_rx:
  1224                           	opt stack 0
  1225  000200                     	ds	64
  1226  000240                     _cdc_data_tx:
  1227                           	opt stack 0
  1228  000240                     	ds	64
  1229  000280                     terminal_task@op0:
  1230                           	opt stack 0
  1231  000280                     	ds	25
  1232  000299                     terminal_task@op1:
  1233                           	opt stack 0
  1234  000299                     	ds	25
  1235  0002B2                     terminal_task@op2:
  1236                           	opt stack 0
  1237  0002B2                     	ds	25
  1238  0002CB                     terminal_task@op3:
  1239                           	opt stack 0
  1240  0002CB                     	ds	25
  1241                           tblptru	equ	0xFF8
  1242                           tblptrh	equ	0xFF7
  1243                           tblptrl	equ	0xFF6
  1244                           tablat	equ	0xFF5
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           postdec1	equ	0xFE5
  1248                           fsr1h	equ	0xFE2
  1249                           fsr1l	equ	0xFE1
  1250                           
  1251                           	psect	bssBANK3
  1252  000300                     __pbssBANK3:
  1253                           	opt stack 0
  1254  000300                     main_init@uartrx:
  1255                           	opt stack 0
  1256  000300                     	ds	100
  1257  000364                     main_init@usbrx:
  1258                           	opt stack 0
  1259  000364                     	ds	100
  1260                           tblptru	equ	0xFF8
  1261                           tblptrh	equ	0xFF7
  1262                           tblptrl	equ	0xFF6
  1263                           tablat	equ	0xFF5
  1264                           postinc0	equ	0xFEE
  1265                           wreg	equ	0xFE8
  1266                           postdec1	equ	0xFE5
  1267                           fsr1h	equ	0xFE2
  1268                           fsr1l	equ	0xFE1
  1269                           
  1270                           	psect	bssBANK4
  1271  000400                     __pbssBANK4:
  1272                           	opt stack 0
  1273  000400                     ST7032_init@buf:
  1274                           	opt stack 0
  1275  000400                     	ds	200
  1276                           tblptru	equ	0xFF8
  1277                           tblptrh	equ	0xFF7
  1278                           tblptrl	equ	0xFF6
  1279                           tablat	equ	0xFF5
  1280                           postinc0	equ	0xFEE
  1281                           wreg	equ	0xFE8
  1282                           postdec1	equ	0xFE5
  1283                           fsr1h	equ	0xFE2
  1284                           fsr1l	equ	0xFE1
  1285                           
  1286                           	psect	bssBIGRAMl
  1287  0004C8                     __pbssBIGRAMl:
  1288                           	opt stack 0
  1289  0004C8                     main_init@uarttx:
  1290                           	opt stack 0
  1291  0004C8                     	ds	1000
  1292  0008B0                     main_init@usbtx:
  1293                           	opt stack 0
  1294  0008B0                     	ds	1000
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1h	equ	0xFE2
  1303                           fsr1l	equ	0xFE1
  1304                           
  1305                           	psect	cstackBANK3
  1306  0003C8                     __pcstackBANK3:
  1307                           	opt stack 0
  1308  0003C8                     main@s:
  1309                           	opt stack 0
  1310                           
  1311                           ; 40 bytes @ 0x0
  1312  0003C8                     	ds	40
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           tblptrl	equ	0xFF6
  1316                           tablat	equ	0xFF5
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           postdec1	equ	0xFE5
  1320                           fsr1h	equ	0xFE2
  1321                           fsr1l	equ	0xFE1
  1322                           
  1323                           	psect	cstackBANK1
  1324  00017C                     __pcstackBANK1:
  1325                           	opt stack 0
  1326  00017C                     terminal_task@buf:
  1327                           	opt stack 0
  1328                           
  1329                           ; 100 bytes @ 0x0
  1330  00017C                     	ds	100
  1331  0001E0                     _terminal_task$6350:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x64
  1335  0001E0                     	ds	2
  1336  0001E2                     terminal_task@i_4276:
  1337                           	opt stack 0
  1338                           
  1339                           ; 1 bytes @ 0x66
  1340  0001E2                     	ds	1
  1341  0001E3                     terminal_task@ascii:
  1342                           	opt stack 0
  1343                           
  1344                           ; 1 bytes @ 0x67
  1345  0001E3                     	ds	1
  1346  0001E4                     terminal_task@i:
  1347                           	opt stack 0
  1348                           
  1349                           ; 1 bytes @ 0x68
  1350  0001E4                     	ds	1
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           postdec1	equ	0xFE5
  1358                           fsr1h	equ	0xFE2
  1359                           fsr1l	equ	0xFE1
  1360                           
  1361                           	psect	cstackBANK0
  1362  000060                     __pcstackBANK0:
  1363                           	opt stack 0
  1364  000060                     ??_isdigit:
  1365  000060                     ??_timer0_init:
  1366  000060                     ??_timer3_init:
  1367  000060                     ??_x_to_d:
  1368  000060                     ?_strcmp:
  1369                           	opt stack 0
  1370  000060                     ?_USBTransferOnePacket:
  1371                           	opt stack 0
  1372  000060                     ?_ringbuf_num:
  1373                           	opt stack 0
  1374  000060                     ?___wmul:
  1375                           	opt stack 0
  1376  000060                     ?___awdiv:
  1377                           	opt stack 0
  1378  000060                     ?___awmod:
  1379                           	opt stack 0
  1380  000060                     ?___lwdiv:
  1381                           	opt stack 0
  1382  000060                     ?___lldiv:
  1383                           	opt stack 0
  1384  000060                     USBTransferOnePacket@dir:
  1385                           	opt stack 0
  1386  000060                     timer1_init@clock_select:
  1387                           	opt stack 0
  1388  000060                     _is_usb_available$4851:
  1389                           	opt stack 0
  1390  000060                     putUSBUSART@data:
  1391                           	opt stack 0
  1392  000060                     ringbuf_init@rb:
  1393                           	opt stack 0
  1394  000060                     ringbuf_num@rb:
  1395                           	opt stack 0
  1396  000060                     ringbuf_delete@rb:
  1397                           	opt stack 0
  1398  000060                     ___wmul@multiplier:
  1399                           	opt stack 0
  1400  000060                     ___awdiv@dividend:
  1401                           	opt stack 0
  1402  000060                     ___awmod@dividend:
  1403                           	opt stack 0
  1404  000060                     ___lwdiv@dividend:
  1405                           	opt stack 0
  1406  000060                     memset@p1:
  1407                           	opt stack 0
  1408  000060                     strcat@to:
  1409                           	opt stack 0
  1410  000060                     strcmp@s1:
  1411                           	opt stack 0
  1412  000060                     strcpy@to:
  1413                           	opt stack 0
  1414  000060                     ___lldiv@dividend:
  1415                           	opt stack 0
  1416                           
  1417                           ; 4 bytes @ 0x0
  1418  000060                     	ds	1
  1419  000061                     ??_timer1_init:
  1420  000061                     timer0_init@prescaler:
  1421                           	opt stack 0
  1422  000061                     timer3_init@prescaler:
  1423                           	opt stack 0
  1424  000061                     x_to_d@hex:
  1425                           	opt stack 0
  1426  000061                     _isdigit$5795:
  1427                           	opt stack 0
  1428  000061                     USBTransferOnePacket@data:
  1429                           	opt stack 0
  1430                           
  1431                           ; 2 bytes @ 0x1
  1432  000061                     	ds	1
  1433  000062                     ??_ringbuf_num:
  1434  000062                     putUSBUSART@length:
  1435                           	opt stack 0
  1436  000062                     timer1_init@prescaler:
  1437                           	opt stack 0
  1438  000062                     isdigit@c:
  1439                           	opt stack 0
  1440  000062                     ringbuf_init@internal_buf:
  1441                           	opt stack 0
  1442  000062                     RTCC_to_caltime@tm:
  1443                           	opt stack 0
  1444  000062                     ___wmul@multiplicand:
  1445                           	opt stack 0
  1446  000062                     ___awdiv@divisor:
  1447                           	opt stack 0
  1448  000062                     ___awmod@divisor:
  1449                           	opt stack 0
  1450  000062                     ___lwdiv@divisor:
  1451                           	opt stack 0
  1452  000062                     memset@c:
  1453                           	opt stack 0
  1454  000062                     strcat@from:
  1455                           	opt stack 0
  1456  000062                     strcmp@s2:
  1457                           	opt stack 0
  1458  000062                     strcpy@from:
  1459                           	opt stack 0
  1460                           
  1461                           ; 2 bytes @ 0x2
  1462  000062                     	ds	1
  1463  000063                     USBTransferOnePacket@len:
  1464                           	opt stack 0
  1465                           
  1466                           ; 1 bytes @ 0x3
  1467  000063                     	ds	1
  1468  000064                     ??_strcmp:
  1469  000064                     USBTransferOnePacket@ep:
  1470                           	opt stack 0
  1471  000064                     RTCC_to_caltime@dumy:
  1472                           	opt stack 0
  1473  000064                     ___awdiv@counter:
  1474                           	opt stack 0
  1475  000064                     ___awmod@counter:
  1476                           	opt stack 0
  1477  000064                     ___lwdiv@counter:
  1478                           	opt stack 0
  1479  000064                     ringbuf_init@bufsize:
  1480                           	opt stack 0
  1481  000064                     ___wmul@product:
  1482                           	opt stack 0
  1483  000064                     memset@n:
  1484                           	opt stack 0
  1485  000064                     strcat@cp:
  1486                           	opt stack 0
  1487  000064                     strcpy@cp:
  1488                           	opt stack 0
  1489  000064                     ___lldiv@divisor:
  1490                           	opt stack 0
  1491                           
  1492                           ; 4 bytes @ 0x4
  1493  000064                     	ds	1
  1494  000065                     ___awdiv@sign:
  1495                           	opt stack 0
  1496  000065                     ___awmod@sign:
  1497                           	opt stack 0
  1498  000065                     strcmp@r:
  1499                           	opt stack 0
  1500  000065                     USBTransferOnePacket@handle:
  1501                           	opt stack 0
  1502  000065                     ___lwdiv@quotient:
  1503                           	opt stack 0
  1504                           
  1505                           ; 2 bytes @ 0x5
  1506  000065                     	ds	1
  1507  000066                     ?_atoi:
  1508                           	opt stack 0
  1509  000066                     month_length@month:
  1510                           	opt stack 0
  1511  000066                     atoi@s:
  1512                           	opt stack 0
  1513  000066                     ___awdiv@quotient:
  1514                           	opt stack 0
  1515  000066                     memset@p:
  1516                           	opt stack 0
  1517                           
  1518                           ; 2 bytes @ 0x6
  1519  000066                     	ds	1
  1520  000067                     ??_CDCTxService:
  1521  000067                     ??_month_length:
  1522  000067                     ?___lwmod:
  1523                           	opt stack 0
  1524  000067                     getsUSBUSART@buffer:
  1525                           	opt stack 0
  1526  000067                     ___lwmod@dividend:
  1527                           	opt stack 0
  1528                           
  1529                           ; 2 bytes @ 0x7
  1530  000067                     	ds	1
  1531  000068                     ??_atoi:
  1532  000068                     USBDeviceInit@i:
  1533                           	opt stack 0
  1534  000068                     d_to_x@dec:
  1535                           	opt stack 0
  1536  000068                     _CDCTxService$2005:
  1537                           	opt stack 0
  1538  000068                     ringbuf_put@rb:
  1539                           	opt stack 0
  1540  000068                     ringbuf_pop@rb:
  1541                           	opt stack 0
  1542  000068                     ringbuf_backspace@rb:
  1543                           	opt stack 0
  1544  000068                     ___lldiv@quotient:
  1545                           	opt stack 0
  1546                           
  1547                           ; 4 bytes @ 0x8
  1548  000068                     	ds	1
  1549  000069                     getsUSBUSART@len:
  1550                           	opt stack 0
  1551  000069                     caltime_to_RTCC@tm:
  1552                           	opt stack 0
  1553  000069                     ___lwmod@divisor:
  1554                           	opt stack 0
  1555                           
  1556                           ; 2 bytes @ 0x9
  1557  000069                     	ds	1
  1558  00006A                     ??_getsUSBUSART:
  1559  00006A                     ??_ringbuf_pop:
  1560  00006A                     ??_ringbuf_backspace:
  1561  00006A                     CDCTxService@i:
  1562                           	opt stack 0
  1563  00006A                     ringbuf_put@asciicode:
  1564                           	opt stack 0
  1565  00006A                     atoi@sign:
  1566                           	opt stack 0
  1567                           
  1568                           ; 1 bytes @ 0xA
  1569  00006A                     	ds	1
  1570  00006B                     ??_ringbuf_put:
  1571  00006B                     CDCTxService@byte_to_send:
  1572                           	opt stack 0
  1573  00006B                     month_length@year:
  1574                           	opt stack 0
  1575  00006B                     ___lwmod@counter:
  1576                           	opt stack 0
  1577  00006B                     _getsUSBUSART$1957:
  1578                           	opt stack 0
  1579  00006B                     atoi@a:
  1580                           	opt stack 0
  1581                           
  1582                           ; 2 bytes @ 0xB
  1583  00006B                     	ds	1
  1584  00006C                     ?_sprintf:
  1585                           	opt stack 0
  1586  00006C                     ___lldiv@counter:
  1587                           	opt stack 0
  1588  00006C                     put_string_usb@s:
  1589                           	opt stack 0
  1590  00006C                     sprintf@sp:
  1591                           	opt stack 0
  1592                           
  1593                           ; 2 bytes @ 0xC
  1594  00006C                     	ds	1
  1595  00006D                     ?_get_string_usb:
  1596                           	opt stack 0
  1597  00006D                     ?___lmul:
  1598                           	opt stack 0
  1599  00006D                     get_string_usb@s:
  1600                           	opt stack 0
  1601  00006D                     ___lmul@multiplier:
  1602                           	opt stack 0
  1603                           
  1604                           ; 4 bytes @ 0xD
  1605  00006D                     	ds	1
  1606  00006E                     ringbuf_pop@ret:
  1607                           	opt stack 0
  1608  00006E                     put_string_usb@len:
  1609                           	opt stack 0
  1610  00006E                     sprintf@f:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0xE
  1614  00006E                     	ds	1
  1615  00006F                     ??_ST7032_task:
  1616  00006F                     ST7032_command@wait:
  1617                           	opt stack 0
  1618  00006F                     ST7032_put@c:
  1619                           	opt stack 0
  1620  00006F                     ringbuf_put_num@rb:
  1621                           	opt stack 0
  1622  00006F                     ringbuf_put_str@rb:
  1623                           	opt stack 0
  1624  00006F                     get_string_usb@len:
  1625                           	opt stack 0
  1626                           
  1627                           ; 2 bytes @ 0xF
  1628  00006F                     	ds	1
  1629  000070                     ST7032_command@command:
  1630                           	opt stack 0
  1631  000070                     ST7032_puts@s:
  1632                           	opt stack 0
  1633                           
  1634                           ; 2 bytes @ 0x10
  1635  000070                     	ds	1
  1636  000071                     ??_get_string_usb:
  1637  000071                     ST7032_cursor@row:
  1638                           	opt stack 0
  1639  000071                     ST7032_task@data:
  1640                           	opt stack 0
  1641  000071                     ringbuf_put_num@value:
  1642                           	opt stack 0
  1643  000071                     ringbuf_put_str@str:
  1644                           	opt stack 0
  1645  000071                     ___lmul@multiplicand:
  1646                           	opt stack 0
  1647                           
  1648                           ; 4 bytes @ 0x11
  1649  000071                     	ds	1
  1650  000072                     get_string_usb@rx_len:
  1651                           	opt stack 0
  1652  000072                     ST7032_cursor@row_offsets:
  1653                           	opt stack 0
  1654                           
  1655                           ; 2 bytes @ 0x12
  1656  000072                     	ds	1
  1657  000073                     ringbuf_put_num@digits:
  1658                           	opt stack 0
  1659                           
  1660                           ; 1 bytes @ 0x13
  1661  000073                     	ds	1
  1662  000074                     ringbuf_put_num@i:
  1663                           	opt stack 0
  1664  000074                     ST7032_cursor@col:
  1665                           	opt stack 0
  1666  000074                     USB_task@rx_len:
  1667                           	opt stack 0
  1668                           
  1669                           ; 2 bytes @ 0x14
  1670  000074                     	ds	1
  1671  000075                     ringbuf_put_num@temp:
  1672                           	opt stack 0
  1673  000075                     ___lmul@product:
  1674                           	opt stack 0
  1675                           
  1676                           ; 4 bytes @ 0x15
  1677  000075                     	ds	1
  1678  000076                     USB_task@data:
  1679                           	opt stack 0
  1680                           
  1681                           ; 1 bytes @ 0x16
  1682  000076                     	ds	3
  1683  000079                     ?_get_quot_rem:
  1684                           	opt stack 0
  1685  000079                     get_quot_rem@quot:
  1686                           	opt stack 0
  1687  000079                     caltime_to_epoch@tm:
  1688                           	opt stack 0
  1689                           
  1690                           ; 2 bytes @ 0x19
  1691  000079                     	ds	2
  1692  00007B                     ??_caltime_to_epoch:
  1693  00007B                     get_quot_rem@div:
  1694                           	opt stack 0
  1695                           
  1696                           ; 1 bytes @ 0x1B
  1697  00007B                     	ds	2
  1698  00007D                     get_quot_rem@num:
  1699                           	opt stack 0
  1700                           
  1701                           ; 4 bytes @ 0x1D
  1702  00007D                     	ds	1
  1703  00007E                     ??_sprintf:
  1704                           
  1705                           ; 0 bytes @ 0x1E
  1706  00007E                     	ds	1
  1707  00007F                     caltime_to_epoch@year:
  1708                           	opt stack 0
  1709                           
  1710                           ; 1 bytes @ 0x1F
  1711  00007F                     	ds	1
  1712  000080                     caltime_to_epoch@month_3467:
  1713                           	opt stack 0
  1714                           
  1715                           ; 1 bytes @ 0x20
  1716  000080                     	ds	1
  1717  000081                     epoch_to_caltime@tm:
  1718                           	opt stack 0
  1719  000081                     caltime_to_epoch@epoch:
  1720                           	opt stack 0
  1721                           
  1722                           ; 4 bytes @ 0x21
  1723  000081                     	ds	1
  1724  000082                     sprintf@prec:
  1725                           	opt stack 0
  1726                           
  1727                           ; 1 bytes @ 0x22
  1728  000082                     	ds	1
  1729  000083                     ??_epoch_to_caltime:
  1730  000083                     sprintf@ap:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0x23
  1734  000083                     	ds	2
  1735  000085                     caltime_to_epoch@month:
  1736                           	opt stack 0
  1737  000085                     epoch_to_caltime@day_since_epoch:
  1738                           	opt stack 0
  1739  000085                     sprintf@cp:
  1740                           	opt stack 0
  1741                           
  1742                           ; 2 bytes @ 0x25
  1743  000085                     	ds	1
  1744  000086                     RTCC_from_RTCC@tm:
  1745                           	opt stack 0
  1746                           
  1747                           ; 2 bytes @ 0x26
  1748  000086                     	ds	1
  1749  000087                     epoch_to_caltime@day:
  1750                           	opt stack 0
  1751  000087                     sprintf@val:
  1752                           	opt stack 0
  1753                           
  1754                           ; 2 bytes @ 0x27
  1755  000087                     	ds	1
  1756  000088                     
  1757                           ; 0 bytes @ 0x28
  1758  000088                     	ds	1
  1759  000089                     epoch_to_caltime@year:
  1760                           	opt stack 0
  1761  000089                     sprintf@len:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0x29
  1765  000089                     	ds	1
  1766  00008A                     epoch_to_caltime@month:
  1767                           	opt stack 0
  1768                           
  1769                           ; 1 bytes @ 0x2A
  1770  00008A                     	ds	1
  1771  00008B                     sprintf@flag:
  1772                           	opt stack 0
  1773  00008B                     epoch_to_caltime@num:
  1774                           	opt stack 0
  1775                           
  1776                           ; 4 bytes @ 0x2B
  1777  00008B                     	ds	1
  1778  00008C                     sprintf@c:
  1779                           	opt stack 0
  1780                           
  1781                           ; 1 bytes @ 0x2C
  1782  00008C                     	ds	1
  1783  00008D                     sprintf@width:
  1784                           	opt stack 0
  1785                           
  1786                           ; 2 bytes @ 0x2D
  1787  00008D                     	ds	2
  1788  00008F                     RTCC_from_caltime@tm:
  1789                           	opt stack 0
  1790  00008F                     RTCC_from_epoch@tm:
  1791                           	opt stack 0
  1792  00008F                     display_dec@str:
  1793                           	opt stack 0
  1794  00008F                     print_time@tx:
  1795                           	opt stack 0
  1796                           
  1797                           ; 2 bytes @ 0x2F
  1798  00008F                     	ds	2
  1799  000091                     display_dec@dec:
  1800                           	opt stack 0
  1801  000091                     print_time@str:
  1802                           	opt stack 0
  1803                           
  1804                           ; 30 bytes @ 0x31
  1805  000091                     	ds	1
  1806  000092                     display_dec@edit:
  1807                           	opt stack 0
  1808                           
  1809                           ; 1 bytes @ 0x32
  1810  000092                     	ds	1
  1811  000093                     display_dec@s:
  1812                           	opt stack 0
  1813                           
  1814                           ; 4 bytes @ 0x33
  1815  000093                     	ds	4
  1816  000097                     display_time_0802@tm:
  1817                           	opt stack 0
  1818                           
  1819                           ; 2 bytes @ 0x37
  1820  000097                     	ds	2
  1821  000099                     display_time_0802@line0:
  1822                           	opt stack 0
  1823                           
  1824                           ; 2 bytes @ 0x39
  1825  000099                     	ds	2
  1826  00009B                     display_time_0802@line1:
  1827                           	opt stack 0
  1828                           
  1829                           ; 2 bytes @ 0x3B
  1830  00009B                     	ds	2
  1831  00009D                     
  1832                           ; 0 bytes @ 0x3D
  1833  00009D                     	ds	18
  1834  0000AF                     terminal_at_hand@tx:
  1835                           	opt stack 0
  1836                           
  1837                           ; 2 bytes @ 0x4F
  1838  0000AF                     	ds	2
  1839  0000B1                     terminal_at_hand@hand:
  1840                           	opt stack 0
  1841                           
  1842                           ; 2 bytes @ 0x51
  1843  0000B1                     	ds	2
  1844  0000B3                     terminal_at_hand@min:
  1845                           	opt stack 0
  1846                           
  1847                           ; 1 bytes @ 0x53
  1848  0000B3                     	ds	1
  1849  0000B4                     terminal_at_hand@max:
  1850                           	opt stack 0
  1851                           
  1852                           ; 1 bytes @ 0x54
  1853  0000B4                     	ds	1
  1854  0000B5                     terminal_at_hand@value:
  1855                           	opt stack 0
  1856                           
  1857                           ; 1 bytes @ 0x55
  1858  0000B5                     	ds	1
  1859  0000B6                     terminal_time@tx:
  1860                           	opt stack 0
  1861                           
  1862                           ; 2 bytes @ 0x56
  1863  0000B6                     	ds	2
  1864  0000B8                     terminal_time@op0:
  1865                           	opt stack 0
  1866                           
  1867                           ; 2 bytes @ 0x58
  1868  0000B8                     	ds	2
  1869  0000BA                     terminal_time@op1:
  1870                           	opt stack 0
  1871                           
  1872                           ; 2 bytes @ 0x5A
  1873  0000BA                     	ds	2
  1874  0000BC                     terminal_time@op2:
  1875                           	opt stack 0
  1876                           
  1877                           ; 2 bytes @ 0x5C
  1878  0000BC                     	ds	2
  1879  0000BE                     _terminal_time$6351:
  1880                           	opt stack 0
  1881                           
  1882                           ; 1 bytes @ 0x5E
  1883  0000BE                     	ds	1
  1884  0000BF                     terminal_operation@tx:
  1885                           	opt stack 0
  1886                           
  1887                           ; 2 bytes @ 0x5F
  1888  0000BF                     	ds	2
  1889  0000C1                     terminal_operation@op0:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x61
  1893  0000C1                     	ds	2
  1894  0000C3                     terminal_operation@op1:
  1895                           	opt stack 0
  1896                           
  1897                           ; 2 bytes @ 0x63
  1898  0000C3                     	ds	2
  1899  0000C5                     terminal_operation@op2:
  1900                           	opt stack 0
  1901                           
  1902                           ; 2 bytes @ 0x65
  1903  0000C5                     	ds	2
  1904  0000C7                     terminal_operation@op3:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x67
  1908  0000C7                     	ds	2
  1909  0000C9                     terminal_task@tx:
  1910                           	opt stack 0
  1911                           
  1912                           ; 2 bytes @ 0x69
  1913  0000C9                     	ds	2
  1914  0000CB                     terminal_task@rx:
  1915                           	opt stack 0
  1916                           
  1917                           ; 2 bytes @ 0x6B
  1918  0000CB                     	ds	2
  1919  0000CD                     ??_terminal_task:
  1920                           
  1921                           ; 0 bytes @ 0x6D
  1922  0000CD                     	ds	2
  1923  0000CF                     ??_main:
  1924                           
  1925                           ; 0 bytes @ 0x6F
  1926  0000CF                     	ds	1
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           postdec1	equ	0xFE5
  1934                           fsr1h	equ	0xFE2
  1935                           fsr1l	equ	0xFE1
  1936                           
  1937                           	psect	cstackCOMRAM
  1938  00002E                     __pcstackCOMRAM:
  1939                           	opt stack 0
  1940  00002E                     ??_USBStdGetDscHandler:
  1941  00002E                     ??_USBStdGetStatusHandler:
  1942  00002E                     ?i2_USBTransferOnePacket:
  1943                           	opt stack 0
  1944  00002E                     ?i2_ringbuf_num:
  1945                           	opt stack 0
  1946  00002E                     USBConfigureEndpoint@direction:
  1947                           	opt stack 0
  1948  00002E                     USBCtrlTrfTxService@byteToSend:
  1949                           	opt stack 0
  1950  00002E                     USBCtrlTrfRxService@i:
  1951                           	opt stack 0
  1952  00002E                     i2USBTransferOnePacket@dir:
  1953                           	opt stack 0
  1954  00002E                     i2ringbuf_num@rb:
  1955                           	opt stack 0
  1956  00002E                     i2memset@p1:
  1957                           	opt stack 0
  1958                           
  1959                           ; 2 bytes @ 0x0
  1960  00002E                     	ds	1
  1961  00002F                     ??_USBConfigureEndpoint:
  1962  00002F                     USBCtrlTrfRxService@byteToRead:
  1963                           	opt stack 0
  1964  00002F                     USBCtrlTrfInHandler@lastDTS:
  1965                           	opt stack 0
  1966  00002F                     USBStdGetStatusHandler@p:
  1967                           	opt stack 0
  1968  00002F                     i2USBTransferOnePacket@data:
  1969                           	opt stack 0
  1970                           
  1971                           ; 2 bytes @ 0x1
  1972  00002F                     	ds	1
  1973  000030                     ??i2_ringbuf_num:
  1974  000030                     i2memset@c:
  1975                           	opt stack 0
  1976                           
  1977                           ; 2 bytes @ 0x2
  1978  000030                     	ds	1
  1979  000031                     i2USBTransferOnePacket@len:
  1980                           	opt stack 0
  1981                           
  1982                           ; 1 bytes @ 0x3
  1983  000031                     	ds	1
  1984  000032                     i2USBTransferOnePacket@ep:
  1985                           	opt stack 0
  1986  000032                     i2memset@n:
  1987                           	opt stack 0
  1988                           
  1989                           ; 2 bytes @ 0x4
  1990  000032                     	ds	1
  1991  000033                     USBConfigureEndpoint@EPNum:
  1992                           	opt stack 0
  1993  000033                     i2USBTransferOnePacket@handle:
  1994                           	opt stack 0
  1995                           
  1996                           ; 2 bytes @ 0x5
  1997  000033                     	ds	1
  1998  000034                     USBConfigureEndpoint@handle:
  1999                           	opt stack 0
  2000  000034                     i2memset@p:
  2001                           	opt stack 0
  2002                           
  2003                           ; 2 bytes @ 0x6
  2004  000034                     	ds	2
  2005  000036                     USBEnableEndpoint@options:
  2006                           	opt stack 0
  2007  000036                     i2USBDeviceInit@i:
  2008                           	opt stack 0
  2009  000036                     i2ringbuf_put@rb:
  2010                           	opt stack 0
  2011  000036                     i2ringbuf_pop@rb:
  2012                           	opt stack 0
  2013                           
  2014                           ; 2 bytes @ 0x8
  2015  000036                     	ds	1
  2016  000037                     USBEnableEndpoint@p:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0x9
  2020  000037                     	ds	1
  2021  000038                     ??i2_ringbuf_pop:
  2022  000038                     i2ringbuf_put@asciicode:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0xA
  2026  000038                     	ds	1
  2027  000039                     ??i2_ringbuf_put:
  2028  000039                     USBEnableEndpoint@ep:
  2029                           	opt stack 0
  2030                           
  2031                           ; 1 bytes @ 0xB
  2032  000039                     	ds	1
  2033  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2034                           	opt stack 0
  2035                           
  2036                           ; 2 bytes @ 0xC
  2037  00003A                     	ds	2
  2038  00003C                     i2ringbuf_pop@ret:
  2039                           	opt stack 0
  2040  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2041                           	opt stack 0
  2042                           
  2043                           ; 2 bytes @ 0xE
  2044  00003C                     	ds	1
  2045  00003D                     UART_ISR@ascii:
  2046                           	opt stack 0
  2047                           
  2048                           ; 1 bytes @ 0xF
  2049  00003D                     	ds	1
  2050  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2051                           	opt stack 0
  2052                           
  2053                           ; 2 bytes @ 0x10
  2054  00003E                     	ds	2
  2055  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2056                           
  2057                           ; 0 bytes @ 0x12
  2058  000040                     	ds	2
  2059  000042                     ??_USBStdFeatureReqHandler:
  2060  000042                     USBStdSetCfgHandler@i:
  2061                           	opt stack 0
  2062                           
  2063                           ; 1 bytes @ 0x14
  2064  000042                     	ds	1
  2065  000043                     USBStdFeatureReqHandler@pUEP:
  2066                           	opt stack 0
  2067                           
  2068                           ; 2 bytes @ 0x15
  2069  000043                     	ds	2
  2070  000045                     USBStdFeatureReqHandler@current_ep_data:
  2071                           	opt stack 0
  2072                           
  2073                           ; 1 bytes @ 0x17
  2074  000045                     	ds	1
  2075  000046                     USBStdFeatureReqHandler@p:
  2076                           	opt stack 0
  2077                           
  2078                           ; 2 bytes @ 0x18
  2079  000046                     	ds	2
  2080  000048                     ??_USBCtrlEPService:
  2081  000048                     
  2082                           ; 0 bytes @ 0x1A
  2083  000048                     	ds	2
  2084  00004A                     USBCtrlEPService@setup_cnt:
  2085                           	opt stack 0
  2086                           
  2087                           ; 1 bytes @ 0x1C
  2088  00004A                     	ds	1
  2089  00004B                     USBDeviceTasks@i:
  2090                           	opt stack 0
  2091                           
  2092                           ; 1 bytes @ 0x1D
  2093  00004B                     	ds	1
  2094  00004C                     ??_ISR:
  2095                           
  2096                           ; 0 bytes @ 0x1E
  2097  00004C                     	ds	15
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           postinc0	equ	0xFEE
  2103                           wreg	equ	0xFE8
  2104                           postdec1	equ	0xFE5
  2105                           fsr1h	equ	0xFE2
  2106                           fsr1l	equ	0xFE1
  2107                           
  2108 ;;
  2109 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2110 ;;
  2111 ;; *************** function _main *****************
  2112 ;; Defined at:
  2113 ;;		line 107 in file "main.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  s              40    0[BANK3 ] unsigned char [20][2]
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  2  1309[None  ] int 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Locals:         0       0       0       0      40       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Totals:         0       1       0       0      40       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;Total ram usage:       41 bytes
  2132 ;; Hardware stack levels required when called:   20
  2133 ;; This function calls:
  2134 ;;		_RTCC_task
  2135 ;;		_ST7032_clear
  2136 ;;		_ST7032_cursor
  2137 ;;		_ST7032_puts
  2138 ;;		_ST7032_task
  2139 ;;		_UART_task
  2140 ;;		_USB_task
  2141 ;;		_display_time_0802
  2142 ;;		_main_init
  2143 ;;		_terminal_task
  2144 ;; This function is called by:
  2145 ;;		Startup code after reset
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text0
  2150  011D76                     __ptext0:
  2151                           	opt stack 0
  2152  011D76                     _main:
  2153                           	opt stack 11
  2154                           
  2155                           ;main.c: 108: main_init();
  2156                           
  2157                           ;incstack = 0
  2158  011D76  EC1D  F091         	call	_main_init	;wreg free
  2159                           
  2160                           ;main.c: 110: ST7032_clear();
  2161  011D7A  ECCF  F0A2         	call	_ST7032_clear	;wreg free
  2162                           
  2163                           ;main.c: 111: ST7032_cursor(0, 0);
  2164  011D7E  0E00               	movlw	0
  2165  011D80  0100               	movlb	0	; () banked
  2166  011D82  6F71               	movwf	ST7032_cursor@row& (0+255),b
  2167  011D84  0E00               	movlw	0
  2168  011D86  EC5B  F0A1         	call	_ST7032_cursor
  2169                           
  2170                           ;main.c: 112: ST7032_puts("18F27J53");
  2171  011D8A  0E7F               	movlw	low STR_46
  2172  011D8C  0100               	movlb	0	; () banked
  2173  011D8E  6F70               	movwf	ST7032_puts@s& (0+255),b
  2174  011D90  0EFF               	movlw	high STR_46
  2175  011D92  0100               	movlb	0	; () banked
  2176  011D94  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  2177  011D96  ECAA  F09F         	call	_ST7032_puts	;wreg free
  2178                           
  2179                           ;main.c: 113: ST7032_cursor(0, 1);
  2180  011D9A  0E01               	movlw	1
  2181  011D9C  0100               	movlb	0	; () banked
  2182  011D9E  6F71               	movwf	ST7032_cursor@row& (0+255),b
  2183  011DA0  0E00               	movlw	0
  2184  011DA2  EC5B  F0A1         	call	_ST7032_cursor
  2185                           
  2186                           ;main.c: 114: ST7032_puts("Template");
  2187  011DA6  0E9A               	movlw	low STR_47
  2188  011DA8  0100               	movlb	0	; () banked
  2189  011DAA  6F70               	movwf	ST7032_puts@s& (0+255),b
  2190  011DAC  0EFF               	movlw	high STR_47
  2191  011DAE  0100               	movlb	0	; () banked
  2192  011DB0  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  2193  011DB2  ECAA  F09F         	call	_ST7032_puts	;wreg free
  2194  011DB6  D062               	goto	l9764
  2195  011DB8                     l9732:
  2196                           
  2197                           ;main.c: 119: INTCONbits.GIE = 0;
  2198  011DB8  9EF2               	bcf	intcon,7,c	;volatile
  2199                           
  2200                           ;main.c: 120: USB_task();
  2201  011DBA  ECAF  F09B         	call	_USB_task	;wreg free
  2202                           
  2203                           ;main.c: 121: UART_task();
  2204  011DBE  EC6C  F0A2         	call	_UART_task	;wreg free
  2205                           
  2206                           ;main.c: 122: RTCC_task();
  2207  011DC2  ECD1  F0A0         	call	_RTCC_task	;wreg free
  2208                           
  2209                           ;main.c: 123: ST7032_task();
  2210  011DC6  ECAE  F08B         	call	_ST7032_task	;wreg free
  2211                           
  2212                           ;main.c: 124: terminal_task(&usb_tx, &usb_rx);
  2213  011DCA  0E63               	movlw	low _usb_tx
  2214  011DCC  0100               	movlb	0	; () banked
  2215  011DCE  6FC9               	movwf	terminal_task@tx& (0+255),b
  2216  011DD0  0E01               	movlw	high _usb_tx
  2217  011DD2  0100               	movlb	0	; () banked
  2218  011DD4  6FCA               	movwf	(terminal_task@tx+1)& (0+255),b
  2219  011DD6  0E5B               	movlw	low _usb_rx
  2220  011DD8  0100               	movlb	0	; () banked
  2221  011DDA  6FCB               	movwf	terminal_task@rx& (0+255),b
  2222  011DDC  0E01               	movlw	high _usb_rx
  2223  011DDE  0100               	movlb	0	; () banked
  2224  011DE0  6FCC               	movwf	(terminal_task@rx+1)& (0+255),b
  2225  011DE2  EC03  F084         	call	_terminal_task	;wreg free
  2226                           
  2227                           ;main.c: 125: INTCONbits.GIE = 1;
  2228  011DE6  8EF2               	bsf	intcon,7,c	;volatile
  2229                           
  2230                           ;main.c: 126: LATAbits.LATA1 = !LATAbits.LATA1;
  2231  011DE8  B289               	btfsc	3977,1,c	;volatile
  2232  011DEA  D004               	goto	u9670
  2233  011DEC  0100               	movlb	0	; () banked
  2234  011DEE  6BCF               	clrf	??_main& (0+255),b
  2235  011DF0  2BCF               	incf	??_main& (0+255),f,b
  2236  011DF2  D002               	goto	u9688
  2237  011DF4                     u9670:
  2238  011DF4  0100               	movlb	0	; () banked
  2239  011DF6  6BCF               	clrf	??_main& (0+255),b
  2240  011DF8                     u9688:
  2241  011DF8  0100               	movlb	0	; () banked
  2242  011DFA  47CF               	rlncf	??_main& (0+255),f,b
  2243  011DFC  5089               	movf	3977,w,c	;volatile
  2244  011DFE  0100               	movlb	0	; () banked
  2245  011E00  19CF               	xorwf	??_main& (0+255),w,b
  2246  011E02  0BFD               	andlw	-3
  2247  011E04  19CF               	xorwf	??_main& (0+255),w,b
  2248  011E06  6E89               	movwf	3977,c	;volatile
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;main.c: 127: INTCONbits.GIE = 0;
  2252  011E08  9EF2               	bcf	intcon,7,c	;volatile
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;main.c: 128: if (time_change_flag) {
  2256  011E0A  0101               	movlb	1	; () banked
  2257  011E0C  5132               	movf	_time_change_flag& (0+255),w,b
  2258  011E0E  B4D8               	btfsc	status,2,c
  2259  011E10  D035               	goto	l9764
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;main.c: 129: time_change_flag = 0;
  2263  011E12  0E00               	movlw	0
  2264  011E14  0101               	movlb	1	; () banked
  2265  011E16  6F32               	movwf	_time_change_flag& (0+255),b
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;main.c: 130: char s[2][20];
  2269                           ;main.c: 131: display_time_0802(&now, s[0], s[1]);
  2270  011E18  0E35               	movlw	low _now
  2271  011E1A  0100               	movlb	0	; () banked
  2272  011E1C  6F97               	movwf	display_time_0802@tm& (0+255),b
  2273  011E1E  0E01               	movlw	high _now
  2274  011E20  0100               	movlb	0	; () banked
  2275  011E22  6F98               	movwf	(display_time_0802@tm+1)& (0+255),b
  2276  011E24  0EC8               	movlw	low main@s
  2277  011E26  0100               	movlb	0	; () banked
  2278  011E28  6F99               	movwf	display_time_0802@line0& (0+255),b
  2279  011E2A  0E03               	movlw	high main@s
  2280  011E2C  0100               	movlb	0	; () banked
  2281  011E2E  6F9A               	movwf	(display_time_0802@line0+1)& (0+255),b
  2282  011E30  0EDC               	movlw	low (main@s+20)
  2283  011E32  0100               	movlb	0	; () banked
  2284  011E34  6F9B               	movwf	display_time_0802@line1& (0+255),b
  2285  011E36  0E03               	movlw	high (main@s+20)
  2286  011E38  0100               	movlb	0	; () banked
  2287  011E3A  6F9C               	movwf	(display_time_0802@line1+1)& (0+255),b
  2288  011E3C  EC43  F088         	call	_display_time_0802	;wreg free
  2289                           
  2290                           ;main.c: 132: ST7032_clear();
  2291  011E40  ECCF  F0A2         	call	_ST7032_clear	;wreg free
  2292                           
  2293                           ;main.c: 133: ST7032_cursor(0, 0);
  2294  011E44  0E00               	movlw	0
  2295  011E46  0100               	movlb	0	; () banked
  2296  011E48  6F71               	movwf	ST7032_cursor@row& (0+255),b
  2297  011E4A  0E00               	movlw	0
  2298  011E4C  EC5B  F0A1         	call	_ST7032_cursor
  2299                           
  2300                           ;main.c: 134: ST7032_puts(s[0]);
  2301  011E50  0EC8               	movlw	low main@s
  2302  011E52  0100               	movlb	0	; () banked
  2303  011E54  6F70               	movwf	ST7032_puts@s& (0+255),b
  2304  011E56  0E03               	movlw	high main@s
  2305  011E58  0100               	movlb	0	; () banked
  2306  011E5A  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  2307  011E5C  ECAA  F09F         	call	_ST7032_puts	;wreg free
  2308                           
  2309                           ;main.c: 135: ST7032_cursor(0, 1);
  2310  011E60  0E01               	movlw	1
  2311  011E62  0100               	movlb	0	; () banked
  2312  011E64  6F71               	movwf	ST7032_cursor@row& (0+255),b
  2313  011E66  0E00               	movlw	0
  2314  011E68  EC5B  F0A1         	call	_ST7032_cursor
  2315                           
  2316                           ;main.c: 136: ST7032_puts(s[1]);
  2317  011E6C  0EDC               	movlw	low (main@s+20)
  2318  011E6E  0100               	movlb	0	; () banked
  2319  011E70  6F70               	movwf	ST7032_puts@s& (0+255),b
  2320  011E72  0E03               	movlw	high (main@s+20)
  2321  011E74  0100               	movlb	0	; () banked
  2322  011E76  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  2323  011E78  ECAA  F09F         	call	_ST7032_puts	;wreg free
  2324  011E7C                     l9764:
  2325                           
  2326                           ;main.c: 137: }
  2327                           ;main.c: 138: INTCONbits.GIE = 1;
  2328  011E7C  8EF2               	bsf	intcon,7,c	;volatile
  2329  011E7E  D79C               	goto	l9732
  2330  011E80                     __end_of_main:
  2331                           	opt stack 0
  2332                           tblptru	equ	0xFF8
  2333                           tblptrh	equ	0xFF7
  2334                           tblptrl	equ	0xFF6
  2335                           tablat	equ	0xFF5
  2336                           intcon	equ	0xFF2
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           postdec1	equ	0xFE5
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           status	equ	0xFD8
  2343                           
  2344 ;; *************** function _terminal_task *****************
  2345 ;; Defined at:
  2346 ;;		line 8 in file "../My_library/My_terminal.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  tx              2  105[BANK0 ] PTR struct ringbuf
  2349 ;;		 -> usb_tx(8), 
  2350 ;;  rx              2  107[BANK0 ] PTR struct ringbuf
  2351 ;;		 -> usb_rx(8), 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  i               1  102[BANK1 ] unsigned char 
  2354 ;;  i               1  104[BANK1 ] unsigned char 
  2355 ;;  ascii           1  103[BANK1 ] unsigned char 
  2356 ;;  buf           100    0[BANK1 ] unsigned char [100]
  2357 ;; Return value:  Size  Location     Type
  2358 ;;		None               void
  2359 ;; Registers used:
  2360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2366 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;      Totals:         0       6     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2370 ;;Total ram usage:      111 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:   19
  2373 ;; This function calls:
  2374 ;;		_ringbuf_backspace
  2375 ;;		_ringbuf_delete
  2376 ;;		_ringbuf_init
  2377 ;;		_ringbuf_num
  2378 ;;		_ringbuf_pop
  2379 ;;		_ringbuf_put
  2380 ;;		_ringbuf_put_num
  2381 ;;		_ringbuf_put_str
  2382 ;;		_terminal_operation
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text1
  2389  010806                     __ptext1:
  2390                           	opt stack 0
  2391  010806                     _terminal_task:
  2392                           	opt stack 11
  2393                           
  2394                           ;My_terminal.c: 9: static ringbuf_t command;
  2395                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2396                           ;My_terminal.c: 11: if (command_init == 0) {
  2397                           
  2398                           ;incstack = 0
  2399  010806  0101               	movlb	1	; () banked
  2400  010808  5134               	movf	terminal_task@command_init& (0+255),w,b
  2401  01080A  0101               	movlb	1	; () banked
  2402  01080C  A4D8               	btfss	status,2,c
  2403  01080E  D016               	goto	l9402
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;My_terminal.c: 12: command_init = 1;
  2407  010810  0E01               	movlw	1
  2408  010812  0101               	movlb	1	; () banked
  2409  010814  6F34               	movwf	terminal_task@command_init& (0+255),b
  2410                           
  2411                           ; BSR set to: 1
  2412                           ;My_terminal.c: 13: char buf[100];
  2413                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2414  010816  0E6B               	movlw	low terminal_task@command
  2415  010818  0100               	movlb	0	; () banked
  2416  01081A  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2417  01081C  0E01               	movlw	high terminal_task@command
  2418  01081E  0100               	movlb	0	; () banked
  2419  010820  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2420  010822  0E7C               	movlw	low terminal_task@buf
  2421  010824  0100               	movlb	0	; () banked
  2422  010826  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2423  010828  0E01               	movlw	high terminal_task@buf
  2424  01082A  0100               	movlb	0	; () banked
  2425  01082C  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2426  01082E  0E00               	movlw	0
  2427  010830  0100               	movlb	0	; () banked
  2428  010832  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2429  010834  0E64               	movlw	100
  2430  010836  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2431  010838  ECD6  F09F         	call	_ringbuf_init	;wreg free
  2432  01083C                     l9402:
  2433                           
  2434                           ;My_terminal.c: 15: }
  2435                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2436  01083C  C0CB  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2437  010840  C0CC  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2438  010844  EC31  F090         	call	_ringbuf_num	;wreg free
  2439  010848  0100               	movlb	0	; () banked
  2440  01084A  5160               	movf	?_ringbuf_num& (0+255),w,b
  2441  01084C  0100               	movlb	0	; () banked
  2442  01084E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2443  010850  B4D8               	btfsc	status,2,c
  2444  010852  0012               	return	
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2448  010854  C0CB  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2449  010858  C0CC  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2450  01085C  EC29  F096         	call	_ringbuf_pop	;wreg free
  2451  010860  0101               	movlb	1	; () banked
  2452  010862  6FE3               	movwf	terminal_task@ascii& (0+255),b
  2453                           
  2454                           ;My_terminal.c: 18: switch (ascii) {
  2455  010864  D176               	goto	l9466
  2456  010866                     l9406:
  2457                           
  2458                           ; BSR set to: 1
  2459                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2460  010866  0E6B               	movlw	low terminal_task@command
  2461  010868  0100               	movlb	0	; () banked
  2462  01086A  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2463  01086C  0E01               	movlw	high terminal_task@command
  2464  01086E  0100               	movlb	0	; () banked
  2465  010870  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2466  010872  0E00               	movlw	0
  2467  010874  0100               	movlb	0	; () banked
  2468  010876  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2469  010878  EC86  F094         	call	_ringbuf_put	;wreg free
  2470                           
  2471                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2472  01087C  C0C9  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2473  010880  C0CA  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2474  010884  0E09               	movlw	9
  2475  010886  0100               	movlb	0	; () banked
  2476  010888  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2477  01088A  EC86  F094         	call	_ringbuf_put	;wreg free
  2478                           
  2479                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2480  01088E  0E6B               	movlw	low terminal_task@command
  2481  010890  0100               	movlb	0	; () banked
  2482  010892  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2483  010894  0E01               	movlw	high terminal_task@command
  2484  010896  0100               	movlb	0	; () banked
  2485  010898  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2486  01089A  EC31  F090         	call	_ringbuf_num	;wreg free
  2487  01089E  0EFF               	movlw	255
  2488  0108A0  0100               	movlb	0	; () banked
  2489  0108A2  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2490  0108A4  0101               	movlb	1	; () banked
  2491  0108A6  6FE0               	movwf	_terminal_task$6350& (0+255),b
  2492  0108A8  0EFF               	movlw	255
  2493  0108AA  0100               	movlb	0	; () banked
  2494  0108AC  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2495  0108AE  0101               	movlb	1	; () banked
  2496  0108B0  6FE1               	movwf	(_terminal_task$6350+1)& (0+255),b
  2497                           
  2498                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2499  0108B2  C0C9  F06F         	movff	terminal_task@tx,ringbuf_put_num@rb
  2500  0108B6  C0CA  F070         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2501  0108BA  C1E0  F071         	movff	_terminal_task$6350,ringbuf_put_num@value
  2502  0108BE  C1E1  F072         	movff	_terminal_task$6350+1,ringbuf_put_num@value+1
  2503  0108C2  0E02               	movlw	2
  2504  0108C4  0100               	movlb	0	; () banked
  2505  0108C6  6F73               	movwf	ringbuf_put_num@digits& (0+255),b
  2506  0108C8  EC7F  F09C         	call	_ringbuf_put_num	;wreg free
  2507                           
  2508                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2509  0108CC  C0C9  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2510  0108D0  C0CA  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2511  0108D4  0E0A               	movlw	10
  2512  0108D6  0100               	movlb	0	; () banked
  2513  0108D8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2514  0108DA  EC86  F094         	call	_ringbuf_put	;wreg free
  2515                           
  2516                           ;My_terminal.c: 24: static char op0[25];
  2517                           ;My_terminal.c: 25: static char op1[25];
  2518                           ;My_terminal.c: 26: static char op2[25];
  2519                           ;My_terminal.c: 27: static char op3[25];
  2520                           ;My_terminal.c: 28: uint8_t i;
  2521                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2522  0108DE  0E00               	movlw	0
  2523  0108E0  0101               	movlb	1	; () banked
  2524  0108E2  6FE4               	movwf	terminal_task@i& (0+255),b
  2525  0108E4  D002               	goto	l9412
  2526  0108E6                     l9410:
  2527                           
  2528                           ; BSR set to: 1
  2529  0108E6  0101               	movlb	1	; () banked
  2530  0108E8  2BE4               	incf	terminal_task@i& (0+255),f,b
  2531  0108EA                     l9412:
  2532                           
  2533                           ; BSR set to: 1
  2534  0108EA  0E6B               	movlw	low terminal_task@command
  2535  0108EC  0100               	movlb	0	; () banked
  2536  0108EE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2537  0108F0  0E01               	movlw	high terminal_task@command
  2538  0108F2  0100               	movlb	0	; () banked
  2539  0108F4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2540  0108F6  EC29  F096         	call	_ringbuf_pop	;wreg free
  2541  0108FA  0100               	movlb	0	; () banked
  2542  0108FC  6FCD               	movwf	??_terminal_task& (0+255),b
  2543  0108FE  0101               	movlb	1	; () banked
  2544  010900  51E4               	movf	terminal_task@i& (0+255),w,b
  2545  010902  0D01               	mullw	1
  2546  010904  0E80               	movlw	low terminal_task@op0
  2547  010906  24F3               	addwf	prodl,w,c
  2548  010908  6ED9               	movwf	fsr2l,c
  2549  01090A  0E02               	movlw	high terminal_task@op0
  2550  01090C  20F4               	addwfc	prodh,w,c
  2551  01090E  6EDA               	movwf	fsr2h,c
  2552  010910  C0CD  FFDF         	movff	??_terminal_task,indf2
  2553  010914  50DF               	movf	indf2,w,c
  2554  010916  A4D8               	btfss	status,2,c
  2555  010918  D7E6               	goto	l9410
  2556                           
  2557                           ; BSR set to: 1
  2558                           ;My_terminal.c: 30: op0[i] = '\0';
  2559                           
  2560                           ; BSR set to: 1
  2561  01091A  0101               	movlb	1	; () banked
  2562  01091C  51E4               	movf	terminal_task@i& (0+255),w,b
  2563  01091E  0D01               	mullw	1
  2564  010920  0E80               	movlw	low terminal_task@op0
  2565  010922  24F3               	addwf	prodl,w,c
  2566  010924  6ED9               	movwf	fsr2l,c
  2567  010926  0E02               	movlw	high terminal_task@op0
  2568  010928  20F4               	addwfc	prodh,w,c
  2569  01092A  6EDA               	movwf	fsr2h,c
  2570  01092C  0E00               	movlw	0
  2571  01092E  6EDF               	movwf	indf2,c
  2572                           
  2573                           ; BSR set to: 1
  2574                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2575  010930  0E00               	movlw	0
  2576  010932  0101               	movlb	1	; () banked
  2577  010934  6FE4               	movwf	terminal_task@i& (0+255),b
  2578  010936  D002               	goto	l9420
  2579  010938                     l9418:
  2580                           
  2581                           ; BSR set to: 1
  2582  010938  0101               	movlb	1	; () banked
  2583  01093A  2BE4               	incf	terminal_task@i& (0+255),f,b
  2584  01093C                     l9420:
  2585                           
  2586                           ; BSR set to: 1
  2587  01093C  0E6B               	movlw	low terminal_task@command
  2588  01093E  0100               	movlb	0	; () banked
  2589  010940  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2590  010942  0E01               	movlw	high terminal_task@command
  2591  010944  0100               	movlb	0	; () banked
  2592  010946  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2593  010948  EC29  F096         	call	_ringbuf_pop	;wreg free
  2594  01094C  0100               	movlb	0	; () banked
  2595  01094E  6FCD               	movwf	??_terminal_task& (0+255),b
  2596  010950  0101               	movlb	1	; () banked
  2597  010952  51E4               	movf	terminal_task@i& (0+255),w,b
  2598  010954  0D01               	mullw	1
  2599  010956  0E99               	movlw	low terminal_task@op1
  2600  010958  24F3               	addwf	prodl,w,c
  2601  01095A  6ED9               	movwf	fsr2l,c
  2602  01095C  0E02               	movlw	high terminal_task@op1
  2603  01095E  20F4               	addwfc	prodh,w,c
  2604  010960  6EDA               	movwf	fsr2h,c
  2605  010962  C0CD  FFDF         	movff	??_terminal_task,indf2
  2606  010966  50DF               	movf	indf2,w,c
  2607  010968  A4D8               	btfss	status,2,c
  2608  01096A  D7E6               	goto	l9418
  2609                           
  2610                           ; BSR set to: 1
  2611                           ;My_terminal.c: 32: op1[i] = '\0';
  2612                           
  2613                           ; BSR set to: 1
  2614  01096C  0101               	movlb	1	; () banked
  2615  01096E  51E4               	movf	terminal_task@i& (0+255),w,b
  2616  010970  0D01               	mullw	1
  2617  010972  0E99               	movlw	low terminal_task@op1
  2618  010974  24F3               	addwf	prodl,w,c
  2619  010976  6ED9               	movwf	fsr2l,c
  2620  010978  0E02               	movlw	high terminal_task@op1
  2621  01097A  20F4               	addwfc	prodh,w,c
  2622  01097C  6EDA               	movwf	fsr2h,c
  2623  01097E  0E00               	movlw	0
  2624  010980  6EDF               	movwf	indf2,c
  2625                           
  2626                           ; BSR set to: 1
  2627                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2628  010982  0E00               	movlw	0
  2629  010984  0101               	movlb	1	; () banked
  2630  010986  6FE4               	movwf	terminal_task@i& (0+255),b
  2631  010988  D002               	goto	l9428
  2632  01098A                     l9426:
  2633                           
  2634                           ; BSR set to: 1
  2635  01098A  0101               	movlb	1	; () banked
  2636  01098C  2BE4               	incf	terminal_task@i& (0+255),f,b
  2637  01098E                     l9428:
  2638                           
  2639                           ; BSR set to: 1
  2640  01098E  0E6B               	movlw	low terminal_task@command
  2641  010990  0100               	movlb	0	; () banked
  2642  010992  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2643  010994  0E01               	movlw	high terminal_task@command
  2644  010996  0100               	movlb	0	; () banked
  2645  010998  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2646  01099A  EC29  F096         	call	_ringbuf_pop	;wreg free
  2647  01099E  0100               	movlb	0	; () banked
  2648  0109A0  6FCD               	movwf	??_terminal_task& (0+255),b
  2649  0109A2  0101               	movlb	1	; () banked
  2650  0109A4  51E4               	movf	terminal_task@i& (0+255),w,b
  2651  0109A6  0D01               	mullw	1
  2652  0109A8  0EB2               	movlw	low terminal_task@op2
  2653  0109AA  24F3               	addwf	prodl,w,c
  2654  0109AC  6ED9               	movwf	fsr2l,c
  2655  0109AE  0E02               	movlw	high terminal_task@op2
  2656  0109B0  20F4               	addwfc	prodh,w,c
  2657  0109B2  6EDA               	movwf	fsr2h,c
  2658  0109B4  C0CD  FFDF         	movff	??_terminal_task,indf2
  2659  0109B8  50DF               	movf	indf2,w,c
  2660  0109BA  A4D8               	btfss	status,2,c
  2661  0109BC  D7E6               	goto	l9426
  2662                           
  2663                           ; BSR set to: 1
  2664                           ;My_terminal.c: 34: op2[i] = '\0';
  2665                           
  2666                           ; BSR set to: 1
  2667  0109BE  0101               	movlb	1	; () banked
  2668  0109C0  51E4               	movf	terminal_task@i& (0+255),w,b
  2669  0109C2  0D01               	mullw	1
  2670  0109C4  0EB2               	movlw	low terminal_task@op2
  2671  0109C6  24F3               	addwf	prodl,w,c
  2672  0109C8  6ED9               	movwf	fsr2l,c
  2673  0109CA  0E02               	movlw	high terminal_task@op2
  2674  0109CC  20F4               	addwfc	prodh,w,c
  2675  0109CE  6EDA               	movwf	fsr2h,c
  2676  0109D0  0E00               	movlw	0
  2677  0109D2  6EDF               	movwf	indf2,c
  2678                           
  2679                           ; BSR set to: 1
  2680                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2681  0109D4  0E00               	movlw	0
  2682  0109D6  0101               	movlb	1	; () banked
  2683  0109D8  6FE4               	movwf	terminal_task@i& (0+255),b
  2684  0109DA  D002               	goto	l9436
  2685  0109DC                     l9434:
  2686                           
  2687                           ; BSR set to: 1
  2688  0109DC  0101               	movlb	1	; () banked
  2689  0109DE  2BE4               	incf	terminal_task@i& (0+255),f,b
  2690  0109E0                     l9436:
  2691                           
  2692                           ; BSR set to: 1
  2693  0109E0  0E6B               	movlw	low terminal_task@command
  2694  0109E2  0100               	movlb	0	; () banked
  2695  0109E4  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2696  0109E6  0E01               	movlw	high terminal_task@command
  2697  0109E8  0100               	movlb	0	; () banked
  2698  0109EA  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2699  0109EC  EC29  F096         	call	_ringbuf_pop	;wreg free
  2700  0109F0  0100               	movlb	0	; () banked
  2701  0109F2  6FCD               	movwf	??_terminal_task& (0+255),b
  2702  0109F4  0101               	movlb	1	; () banked
  2703  0109F6  51E4               	movf	terminal_task@i& (0+255),w,b
  2704  0109F8  0D01               	mullw	1
  2705  0109FA  0ECB               	movlw	low terminal_task@op3
  2706  0109FC  24F3               	addwf	prodl,w,c
  2707  0109FE  6ED9               	movwf	fsr2l,c
  2708  010A00  0E02               	movlw	high terminal_task@op3
  2709  010A02  20F4               	addwfc	prodh,w,c
  2710  010A04  6EDA               	movwf	fsr2h,c
  2711  010A06  C0CD  FFDF         	movff	??_terminal_task,indf2
  2712  010A0A  50DF               	movf	indf2,w,c
  2713  010A0C  A4D8               	btfss	status,2,c
  2714  010A0E  D7E6               	goto	l9434
  2715                           
  2716                           ; BSR set to: 1
  2717                           ;My_terminal.c: 36: op3[i] = '\0';
  2718                           
  2719                           ; BSR set to: 1
  2720  010A10  0101               	movlb	1	; () banked
  2721  010A12  51E4               	movf	terminal_task@i& (0+255),w,b
  2722  010A14  0D01               	mullw	1
  2723  010A16  0ECB               	movlw	low terminal_task@op3
  2724  010A18  24F3               	addwf	prodl,w,c
  2725  010A1A  6ED9               	movwf	fsr2l,c
  2726  010A1C  0E02               	movlw	high terminal_task@op3
  2727  010A1E  20F4               	addwfc	prodh,w,c
  2728  010A20  6EDA               	movwf	fsr2h,c
  2729  010A22  0E00               	movlw	0
  2730  010A24  6EDF               	movwf	indf2,c
  2731                           
  2732                           ; BSR set to: 1
  2733                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2734  010A26  C0C9  F0BF         	movff	terminal_task@tx,terminal_operation@tx
  2735  010A2A  C0CA  F0C0         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2736  010A2E  0E80               	movlw	low terminal_task@op0
  2737  010A30  0100               	movlb	0	; () banked
  2738  010A32  6FC1               	movwf	terminal_operation@op0& (0+255),b
  2739  010A34  0E02               	movlw	high terminal_task@op0
  2740  010A36  0100               	movlb	0	; () banked
  2741  010A38  6FC2               	movwf	(terminal_operation@op0+1)& (0+255),b
  2742  010A3A  0E99               	movlw	low terminal_task@op1
  2743  010A3C  0100               	movlb	0	; () banked
  2744  010A3E  6FC3               	movwf	terminal_operation@op1& (0+255),b
  2745  010A40  0E02               	movlw	high terminal_task@op1
  2746  010A42  0100               	movlb	0	; () banked
  2747  010A44  6FC4               	movwf	(terminal_operation@op1+1)& (0+255),b
  2748  010A46  0EB2               	movlw	low terminal_task@op2
  2749  010A48  0100               	movlb	0	; () banked
  2750  010A4A  6FC5               	movwf	terminal_operation@op2& (0+255),b
  2751  010A4C  0E02               	movlw	high terminal_task@op2
  2752  010A4E  0100               	movlb	0	; () banked
  2753  010A50  6FC6               	movwf	(terminal_operation@op2+1)& (0+255),b
  2754  010A52  0ECB               	movlw	low terminal_task@op3
  2755  010A54  0100               	movlb	0	; () banked
  2756  010A56  6FC7               	movwf	terminal_operation@op3& (0+255),b
  2757  010A58  0E02               	movlw	high terminal_task@op3
  2758  010A5A  0100               	movlb	0	; () banked
  2759  010A5C  6FC8               	movwf	(terminal_operation@op3+1)& (0+255),b
  2760  010A5E  ECF0  F094         	call	_terminal_operation	;wreg free
  2761                           
  2762                           ;My_terminal.c: 38: break;
  2763  010A62  0012               	return	
  2764  010A64                     l9442:
  2765                           
  2766                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2767  010A64  0E6B               	movlw	low terminal_task@command
  2768  010A66  0100               	movlb	0	; () banked
  2769  010A68  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2770  010A6A  0E01               	movlw	high terminal_task@command
  2771  010A6C  0100               	movlb	0	; () banked
  2772  010A6E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2773  010A70  0E00               	movlw	0
  2774  010A72  0100               	movlb	0	; () banked
  2775  010A74  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2776  010A76  EC86  F094         	call	_ringbuf_put	;wreg free
  2777                           
  2778                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2779  010A7A  C0C9  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2780  010A7E  C0CA  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2781  010A82  0E20               	movlw	32
  2782  010A84  0100               	movlb	0	; () banked
  2783  010A86  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2784  010A88  EC86  F094         	call	_ringbuf_put	;wreg free
  2785                           
  2786                           ;My_terminal.c: 42: break;
  2787  010A8C  0012               	return	
  2788  010A8E                     l9444:
  2789                           
  2790                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2791  010A8E  0E6B               	movlw	low terminal_task@command
  2792  010A90  0100               	movlb	0	; () banked
  2793  010A92  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2794  010A94  0E01               	movlw	high terminal_task@command
  2795  010A96  0100               	movlb	0	; () banked
  2796  010A98  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2797  010A9A  EC68  F09B         	call	_ringbuf_backspace	;wreg free
  2798                           
  2799                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2800  010A9E  C0C9  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2801  010AA2  C0CA  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2802  010AA6  0EE3               	movlw	low STR_19
  2803  010AA8  0100               	movlb	0	; () banked
  2804  010AAA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2805  010AAC  0EFF               	movlw	high STR_19
  2806  010AAE  0100               	movlb	0	; () banked
  2807  010AB0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2808  010AB2  EC8A  F09E         	call	_ringbuf_put_str	;wreg free
  2809                           
  2810                           ;My_terminal.c: 46: break;
  2811  010AB6  0012               	return	
  2812  010AB8                     l9448:
  2813                           
  2814                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2815  010AB8  0E00               	movlw	0
  2816  010ABA  0101               	movlb	1	; () banked
  2817  010ABC  6FE2               	movwf	terminal_task@i_4276& (0+255),b
  2818  010ABE  D00E               	goto	l9454
  2819  010AC0                     l9450:
  2820  010AC0  C0C9  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2821  010AC4  C0CA  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2822  010AC8  0EE3               	movlw	low STR_19
  2823  010ACA  0100               	movlb	0	; () banked
  2824  010ACC  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2825  010ACE  0EFF               	movlw	high STR_19
  2826  010AD0  0100               	movlb	0	; () banked
  2827  010AD2  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2828  010AD4  EC8A  F09E         	call	_ringbuf_put_str	;wreg free
  2829  010AD8  0101               	movlb	1	; () banked
  2830  010ADA  2BE2               	incf	terminal_task@i_4276& (0+255),f,b
  2831  010ADC                     l9454:
  2832                           
  2833                           ; BSR set to: 1
  2834  010ADC  0E6B               	movlw	low terminal_task@command
  2835  010ADE  0100               	movlb	0	; () banked
  2836  010AE0  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2837  010AE2  0E01               	movlw	high terminal_task@command
  2838  010AE4  0100               	movlb	0	; () banked
  2839  010AE6  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2840  010AE8  EC31  F090         	call	_ringbuf_num	;wreg free
  2841  010AEC  0101               	movlb	1	; () banked
  2842  010AEE  51E2               	movf	terminal_task@i_4276& (0+255),w,b
  2843  010AF0  0100               	movlb	0	; () banked
  2844  010AF2  6FCD               	movwf	??_terminal_task& (0+255),b
  2845  010AF4  6BCE               	clrf	(??_terminal_task+1)& (0+255),b
  2846  010AF6  0100               	movlb	0	; () banked
  2847  010AF8  5160               	movf	?_ringbuf_num& (0+255),w,b
  2848  010AFA  0100               	movlb	0	; () banked
  2849  010AFC  5DCD               	subwf	??_terminal_task& (0+255),w,b
  2850  010AFE  0100               	movlb	0	; () banked
  2851  010B00  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2852  010B02  0100               	movlb	0	; () banked
  2853  010B04  59CE               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2854  010B06  A0D8               	btfss	status,0,c
  2855  010B08  D7DB               	goto	l9450
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2859                           
  2860                           ; BSR set to: 0
  2861  010B0A  0E6B               	movlw	low terminal_task@command
  2862  010B0C  0100               	movlb	0	; () banked
  2863  010B0E  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2864  010B10  0E01               	movlw	high terminal_task@command
  2865  010B12  0100               	movlb	0	; () banked
  2866  010B14  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2867  010B16  EC38  F0A2         	call	_ringbuf_delete	;wreg free
  2868                           
  2869                           ;My_terminal.c: 50: break;
  2870  010B1A  0012               	return	
  2871  010B1C                     l9458:
  2872                           
  2873                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2874  010B1C  0E1F               	movlw	31
  2875  010B1E  0101               	movlb	1	; () banked
  2876  010B20  65E3               	cpfsgt	terminal_task@ascii& (0+255),b
  2877  010B22  0012               	return	
  2878                           
  2879                           ; BSR set to: 1
  2880  010B24  0E7F               	movlw	127
  2881  010B26  0101               	movlb	1	; () banked
  2882  010B28  61E3               	cpfslt	terminal_task@ascii& (0+255),b
  2883  010B2A  0012               	return	
  2884                           
  2885                           ; BSR set to: 1
  2886                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2887  010B2C  0E6B               	movlw	low terminal_task@command
  2888  010B2E  0100               	movlb	0	; () banked
  2889  010B30  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2890  010B32  0E01               	movlw	high terminal_task@command
  2891  010B34  0100               	movlb	0	; () banked
  2892  010B36  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2893  010B38  C1E3  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2894  010B3C  EC86  F094         	call	_ringbuf_put	;wreg free
  2895                           
  2896                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2897  010B40  C0C9  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2898  010B44  C0CA  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2899  010B48  C1E3  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2900  010B4C  EC86  F094         	call	_ringbuf_put	;wreg free
  2901                           
  2902                           ;My_terminal.c: 57: }
  2903                           
  2904                           ;My_terminal.c: 55: }
  2905                           ;My_terminal.c: 56: break;
  2906  010B50  0012               	return	
  2907  010B52                     l9466:
  2908  010B52  0101               	movlb	1	; () banked
  2909  010B54  51E3               	movf	terminal_task@ascii& (0+255),w,b
  2910                           
  2911                           ; Switch size 1, requested type "space"
  2912                           ; Number of cases is 4, Range of values is 8 to 127
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte           13     7 (average)
  2916                           ;	Chosen strategy is simple_byte
  2917  010B56  0A08               	xorlw	8	; case 8
  2918  010B58  B4D8               	btfsc	status,2,c
  2919  010B5A  D799               	goto	l9444
  2920  010B5C  0A05               	xorlw	5	; case 13
  2921  010B5E  B4D8               	btfsc	status,2,c
  2922  010B60  D682               	goto	l9406
  2923  010B62  0A2D               	xorlw	45	; case 32
  2924  010B64  B4D8               	btfsc	status,2,c
  2925  010B66  D77E               	goto	l9442
  2926  010B68  0A5F               	xorlw	95	; case 127
  2927  010B6A  B4D8               	btfsc	status,2,c
  2928  010B6C  D7A5               	goto	l9448
  2929  010B6E  D7D6               	goto	l9458
  2930  010B70                     __end_of_terminal_task:
  2931                           	opt stack 0
  2932                           tblptru	equ	0xFF8
  2933                           tblptrh	equ	0xFF7
  2934                           tblptrl	equ	0xFF6
  2935                           tablat	equ	0xFF5
  2936                           prodh	equ	0xFF4
  2937                           prodl	equ	0xFF3
  2938                           intcon	equ	0xFF2
  2939                           postinc0	equ	0xFEE
  2940                           wreg	equ	0xFE8
  2941                           postdec1	equ	0xFE5
  2942                           fsr1h	equ	0xFE2
  2943                           fsr1l	equ	0xFE1
  2944                           indf2	equ	0xFDF
  2945                           fsr2h	equ	0xFDA
  2946                           fsr2l	equ	0xFD9
  2947                           status	equ	0xFD8
  2948                           
  2949 ;; *************** function _terminal_operation *****************
  2950 ;; Defined at:
  2951 ;;		line 56 in file "main.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  tx              2   95[BANK0 ] PTR struct ringbuf
  2954 ;;		 -> usb_tx(8), 
  2955 ;;  op0             2   97[BANK0 ] PTR unsigned char 
  2956 ;;		 -> terminal_task@op0(25), 
  2957 ;;  op1             2   99[BANK0 ] PTR unsigned char 
  2958 ;;		 -> terminal_task@op1(25), 
  2959 ;;  op2             2  101[BANK0 ] PTR unsigned char 
  2960 ;;		 -> terminal_task@op2(25), 
  2961 ;;  op3             2  103[BANK0 ] PTR unsigned char 
  2962 ;;		 -> terminal_task@op3(25), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;		None               void
  2967 ;; Registers used:
  2968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2974 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2977 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2978 ;;Total ram usage:       10 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:   18
  2981 ;; This function calls:
  2982 ;;		_ringbuf_put_str
  2983 ;;		_strcmp
  2984 ;;		_terminal_time
  2985 ;; This function is called by:
  2986 ;;		_terminal_task
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text2
  2991  0129E0                     __ptext2:
  2992                           	opt stack 0
  2993  0129E0                     _terminal_operation:
  2994                           	opt stack 11
  2995                           
  2996                           ;main.c: 57: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2997                           
  2998                           ;incstack = 0
  2999  0129E0  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  3000  0129E4  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3001  0129E8  0ECF               	movlw	low STR_41
  3002  0129EA  0100               	movlb	0	; () banked
  3003  0129EC  6F62               	movwf	strcmp@s2& (0+255),b
  3004  0129EE  0EFF               	movlw	high STR_41
  3005  0129F0  0100               	movlb	0	; () banked
  3006  0129F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3007  0129F4  EC4E  F09F         	call	_strcmp	;wreg free
  3008  0129F8  0100               	movlb	0	; () banked
  3009  0129FA  5160               	movf	?_strcmp& (0+255),w,b
  3010  0129FC  0100               	movlb	0	; () banked
  3011  0129FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3012  012A00  B4D8               	btfsc	status,2,c
  3013  012A02  D012               	goto	l9166
  3014                           
  3015                           ; BSR set to: 0
  3016  012A04  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  3017  012A08  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3018  012A0C  0EEE               	movlw	low STR_42
  3019  012A0E  0100               	movlb	0	; () banked
  3020  012A10  6F62               	movwf	strcmp@s2& (0+255),b
  3021  012A12  0EFF               	movlw	high STR_42
  3022  012A14  0100               	movlb	0	; () banked
  3023  012A16  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3024  012A18  EC4E  F09F         	call	_strcmp	;wreg free
  3025  012A1C  0100               	movlb	0	; () banked
  3026  012A1E  5160               	movf	?_strcmp& (0+255),w,b
  3027  012A20  0100               	movlb	0	; () banked
  3028  012A22  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3029  012A24  A4D8               	btfss	status,2,c
  3030  012A26  D00C               	goto	l9168
  3031  012A28                     l9166:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;main.c: 58: ringbuf_put_str(tx,
  3035                           ;main.c: 59: "\t******************************\n"
  3036                           ;main.c: 60: "\t**** PIC18F27J53 template ****\n"
  3037                           ;main.c: 61: "\t**** Made by @Ryokeri14   ****\n"
  3038                           ;main.c: 62: "\t******************************\n\n"
  3039                           ;main.c: 63: "\tprint_time(t)\n"
  3040                           ;main.c: 64: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  3041                           ;main.c: 65: "\n\tfor Developper\n"
  3042                           ;main.c: 66: "\tRESET();\n"
  3043                           ;main.c: 67: "\tbootload\n"
  3044                           ;main.c: 68: );
  3045  012A28  C0BF  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  3046  012A2C  C0C0  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  3047  012A30  0E58               	movlw	low STR_43
  3048  012A32  0100               	movlb	0	; () banked
  3049  012A34  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3050  012A36  0EFE               	movlw	high STR_43
  3051  012A38  0100               	movlb	0	; () banked
  3052  012A3A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3053  012A3C  EC8A  F09E         	call	_ringbuf_put_str	;wreg free
  3054  012A40                     l9168:
  3055                           
  3056                           ;main.c: 69: }
  3057                           ;main.c: 70: terminal_time(tx, op0, op1, op2);
  3058  012A40  C0BF  F0B6         	movff	terminal_operation@tx,terminal_time@tx
  3059  012A44  C0C0  F0B7         	movff	terminal_operation@tx+1,terminal_time@tx+1
  3060  012A48  C0C1  F0B8         	movff	terminal_operation@op0,terminal_time@op0
  3061  012A4C  C0C2  F0B9         	movff	terminal_operation@op0+1,terminal_time@op0+1
  3062  012A50  C0C3  F0BA         	movff	terminal_operation@op1,terminal_time@op1
  3063  012A54  C0C4  F0BB         	movff	terminal_operation@op1+1,terminal_time@op1+1
  3064  012A58  C0C5  F0BC         	movff	terminal_operation@op2,terminal_time@op2
  3065  012A5C  C0C6  F0BD         	movff	terminal_operation@op2+1,terminal_time@op2+1
  3066  012A60  EC2D  F082         	call	_terminal_time	;wreg free
  3067                           
  3068                           ;main.c: 71: if (!strcmp(op0, "RESET();")) {
  3069  012A64  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  3070  012A68  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3071  012A6C  0E88               	movlw	low STR_44
  3072  012A6E  0100               	movlb	0	; () banked
  3073  012A70  6F62               	movwf	strcmp@s2& (0+255),b
  3074  012A72  0EFF               	movlw	high STR_44
  3075  012A74  0100               	movlb	0	; () banked
  3076  012A76  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3077  012A78  EC4E  F09F         	call	_strcmp	;wreg free
  3078  012A7C  0100               	movlb	0	; () banked
  3079  012A7E  5160               	movf	?_strcmp& (0+255),w,b
  3080  012A80  0100               	movlb	0	; () banked
  3081  012A82  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3082  012A84  B4D8               	btfsc	status,2,c
  3083                           
  3084                           ; BSR set to: 0
  3085  012A86  00FF               	reset		;# 
  3086                           
  3087                           ;main.c: 73: }
  3088                           ;main.c: 74: if (!strcmp(op0, "bootload")) {
  3089  012A88  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  3090  012A8C  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3091  012A90  0E91               	movlw	low STR_45
  3092  012A92  0100               	movlb	0	; () banked
  3093  012A94  6F62               	movwf	strcmp@s2& (0+255),b
  3094  012A96  0EFF               	movlw	high STR_45
  3095  012A98  0100               	movlb	0	; () banked
  3096  012A9A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3097  012A9C  EC4E  F09F         	call	_strcmp	;wreg free
  3098  012AA0  0100               	movlb	0	; () banked
  3099  012AA2  5160               	movf	?_strcmp& (0+255),w,b
  3100  012AA4  0100               	movlb	0	; () banked
  3101  012AA6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3102  012AA8  A4D8               	btfss	status,2,c
  3103  012AAA  0012               	return	
  3104                           
  3105                           ; BSR set to: 0
  3106  012AAC  EF0E F000          	goto	28	;# 
  3107  012AB0  0012               	return	
  3108  012AB2                     __end_of_terminal_operation:
  3109                           	opt stack 0
  3110                           tblptru	equ	0xFF8
  3111                           tblptrh	equ	0xFF7
  3112                           tblptrl	equ	0xFF6
  3113                           tablat	equ	0xFF5
  3114                           prodh	equ	0xFF4
  3115                           prodl	equ	0xFF3
  3116                           intcon	equ	0xFF2
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postdec1	equ	0xFE5
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           indf2	equ	0xFDF
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function _terminal_time *****************
  3128 ;; Defined at:
  3129 ;;		line 93 in file "../My_library/My_terminal.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  tx              2   86[BANK0 ] PTR struct ringbuf
  3132 ;;		 -> usb_tx(8), 
  3133 ;;  op0             2   88[BANK0 ] PTR unsigned char 
  3134 ;;		 -> terminal_task@op0(25), 
  3135 ;;  op1             2   90[BANK0 ] PTR unsigned char 
  3136 ;;		 -> terminal_task@op1(25), 
  3137 ;;  op2             2   92[BANK0 ] PTR unsigned char 
  3138 ;;		 -> terminal_task@op2(25), 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;		None               void
  3143 ;; Registers used:
  3144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3150 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3153 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3154 ;;Total ram usage:        9 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:   17
  3157 ;; This function calls:
  3158 ;;		_atoi
  3159 ;;		_month_length
  3160 ;;		_print_time
  3161 ;;		_strcmp
  3162 ;;		_terminal_at_hand
  3163 ;; This function is called by:
  3164 ;;		_terminal_operation
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text3
  3169  01045A                     __ptext3:
  3170                           	opt stack 0
  3171  01045A                     _terminal_time:
  3172                           	opt stack 11
  3173                           
  3174                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3175                           
  3176                           ;incstack = 0
  3177  01045A  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3178  01045E  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3179  010462  0E74               	movlw	low STR_25
  3180  010464  0100               	movlb	0	; () banked
  3181  010466  6F62               	movwf	strcmp@s2& (0+255),b
  3182  010468  0EFF               	movlw	high STR_25
  3183  01046A  0100               	movlb	0	; () banked
  3184  01046C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3185  01046E  EC4E  F09F         	call	_strcmp	;wreg free
  3186  010472  0100               	movlb	0	; () banked
  3187  010474  5160               	movf	?_strcmp& (0+255),w,b
  3188  010476  0100               	movlb	0	; () banked
  3189  010478  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3190  01047A  B4D8               	btfsc	status,2,c
  3191  01047C  D012               	goto	l8962
  3192                           
  3193                           ; BSR set to: 0
  3194  01047E  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3195  010482  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3196  010486  0EEC               	movlw	low (STR_27+1)
  3197  010488  0100               	movlb	0	; () banked
  3198  01048A  6F62               	movwf	strcmp@s2& (0+255),b
  3199  01048C  0EFF               	movlw	high (STR_27+1)
  3200  01048E  0100               	movlb	0	; () banked
  3201  010490  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3202  010492  EC4E  F09F         	call	_strcmp	;wreg free
  3203  010496  0100               	movlb	0	; () banked
  3204  010498  5160               	movf	?_strcmp& (0+255),w,b
  3205  01049A  0100               	movlb	0	; () banked
  3206  01049C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3207  01049E  A4D8               	btfss	status,2,c
  3208  0104A0  D006               	goto	l8964
  3209  0104A2                     l8962:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;My_terminal.c: 95: print_time(tx);
  3213  0104A2  C0B6  F08F         	movff	terminal_time@tx,print_time@tx
  3214  0104A6  C0B7  F090         	movff	terminal_time@tx+1,print_time@tx+1
  3215  0104AA  ECF6  F09B         	call	_print_time	;wreg free
  3216  0104AE                     l8964:
  3217                           
  3218                           ;My_terminal.c: 96: }
  3219                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3220  0104AE  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3221  0104B2  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3222  0104B6  0EEB               	movlw	low STR_27
  3223  0104B8  0100               	movlb	0	; () banked
  3224  0104BA  6F62               	movwf	strcmp@s2& (0+255),b
  3225  0104BC  0EFF               	movlw	high STR_27
  3226  0104BE  0100               	movlb	0	; () banked
  3227  0104C0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3228  0104C2  EC4E  F09F         	call	_strcmp	;wreg free
  3229  0104C6  0100               	movlb	0	; () banked
  3230  0104C8  5160               	movf	?_strcmp& (0+255),w,b
  3231  0104CA  0100               	movlb	0	; () banked
  3232  0104CC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3233  0104CE  B4D8               	btfsc	status,2,c
  3234  0104D0  D012               	goto	l8968
  3235                           
  3236                           ; BSR set to: 0
  3237  0104D2  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3238  0104D6  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3239  0104DA  0E68               	movlw	low STR_28
  3240  0104DC  0100               	movlb	0	; () banked
  3241  0104DE  6F62               	movwf	strcmp@s2& (0+255),b
  3242  0104E0  0EFF               	movlw	high STR_28
  3243  0104E2  0100               	movlb	0	; () banked
  3244  0104E4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3245  0104E6  EC4E  F09F         	call	_strcmp	;wreg free
  3246  0104EA  0100               	movlb	0	; () banked
  3247  0104EC  5160               	movf	?_strcmp& (0+255),w,b
  3248  0104EE  0100               	movlb	0	; () banked
  3249  0104F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3250  0104F2  A4D8               	btfss	status,2,c
  3251  0104F4  0012               	return	
  3252  0104F6                     l8968:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3256  0104F6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3257  0104FA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3258  0104FE  0EE9               	movlw	low (STR_34+2)
  3259  010500  0100               	movlb	0	; () banked
  3260  010502  6F62               	movwf	strcmp@s2& (0+255),b
  3261  010504  0EFF               	movlw	high (STR_34+2)
  3262  010506  0100               	movlb	0	; () banked
  3263  010508  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3264  01050A  EC4E  F09F         	call	_strcmp	;wreg free
  3265  01050E  0100               	movlb	0	; () banked
  3266  010510  5160               	movf	?_strcmp& (0+255),w,b
  3267  010512  0100               	movlb	0	; () banked
  3268  010514  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3269  010516  B4D8               	btfsc	status,2,c
  3270  010518  D012               	goto	l8972
  3271                           
  3272                           ; BSR set to: 0
  3273  01051A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3274  01051E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3275  010522  0ED4               	movlw	low STR_30
  3276  010524  0100               	movlb	0	; () banked
  3277  010526  6F62               	movwf	strcmp@s2& (0+255),b
  3278  010528  0EFF               	movlw	high STR_30
  3279  01052A  0100               	movlb	0	; () banked
  3280  01052C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3281  01052E  EC4E  F09F         	call	_strcmp	;wreg free
  3282  010532  0100               	movlb	0	; () banked
  3283  010534  5160               	movf	?_strcmp& (0+255),w,b
  3284  010536  0100               	movlb	0	; () banked
  3285  010538  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3286  01053A  A4D8               	btfss	status,2,c
  3287  01053C  D01C               	goto	l8974
  3288  01053E                     l8972:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3292  01053E  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3293  010542  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3294  010546  0E3F               	movlw	low (_now+10)
  3295  010548  0100               	movlb	0	; () banked
  3296  01054A  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3297  01054C  0E01               	movlw	high (_now+10)
  3298  01054E  0100               	movlb	0	; () banked
  3299  010550  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3300  010552  0E00               	movlw	0
  3301  010554  0100               	movlb	0	; () banked
  3302  010556  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3303  010558  0E63               	movlw	99
  3304  01055A  0100               	movlb	0	; () banked
  3305  01055C  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3306  01055E  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3307  010562  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3308  010566  EC40  F08F         	call	_atoi	;wreg free
  3309  01056A  0100               	movlb	0	; () banked
  3310  01056C  5166               	movf	?_atoi& (0+255),w,b
  3311  01056E  0100               	movlb	0	; () banked
  3312  010570  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3313  010572  ECBC  F09E         	call	_terminal_at_hand	;wreg free
  3314  010576                     l8974:
  3315                           
  3316                           ;My_terminal.c: 100: }
  3317                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3318  010576  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3319  01057A  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3320  01057E  0EF0               	movlw	low STR_31
  3321  010580  0100               	movlb	0	; () banked
  3322  010582  6F62               	movwf	strcmp@s2& (0+255),b
  3323  010584  0EFF               	movlw	high STR_31
  3324  010586  0100               	movlb	0	; () banked
  3325  010588  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3326  01058A  EC4E  F09F         	call	_strcmp	;wreg free
  3327  01058E  0100               	movlb	0	; () banked
  3328  010590  5160               	movf	?_strcmp& (0+255),w,b
  3329  010592  0100               	movlb	0	; () banked
  3330  010594  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3331  010596  B4D8               	btfsc	status,2,c
  3332  010598  D012               	goto	l8978
  3333                           
  3334                           ; BSR set to: 0
  3335  01059A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3336  01059E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3337  0105A2  0EC9               	movlw	low STR_32
  3338  0105A4  0100               	movlb	0	; () banked
  3339  0105A6  6F62               	movwf	strcmp@s2& (0+255),b
  3340  0105A8  0EFF               	movlw	high STR_32
  3341  0105AA  0100               	movlb	0	; () banked
  3342  0105AC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3343  0105AE  EC4E  F09F         	call	_strcmp	;wreg free
  3344  0105B2  0100               	movlb	0	; () banked
  3345  0105B4  5160               	movf	?_strcmp& (0+255),w,b
  3346  0105B6  0100               	movlb	0	; () banked
  3347  0105B8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3348  0105BA  A4D8               	btfss	status,2,c
  3349  0105BC  D01C               	goto	l8980
  3350  0105BE                     l8978:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3354  0105BE  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3355  0105C2  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3356  0105C6  0E3E               	movlw	low (_now+9)
  3357  0105C8  0100               	movlb	0	; () banked
  3358  0105CA  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3359  0105CC  0E01               	movlw	high (_now+9)
  3360  0105CE  0100               	movlb	0	; () banked
  3361  0105D0  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3362  0105D2  0E01               	movlw	1
  3363  0105D4  0100               	movlb	0	; () banked
  3364  0105D6  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3365  0105D8  0E0C               	movlw	12
  3366  0105DA  0100               	movlb	0	; () banked
  3367  0105DC  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3368  0105DE  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3369  0105E2  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3370  0105E6  EC40  F08F         	call	_atoi	;wreg free
  3371  0105EA  0100               	movlb	0	; () banked
  3372  0105EC  5166               	movf	?_atoi& (0+255),w,b
  3373  0105EE  0100               	movlb	0	; () banked
  3374  0105F0  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3375  0105F2  ECBC  F09E         	call	_terminal_at_hand	;wreg free
  3376  0105F6                     l8980:
  3377                           
  3378                           ;My_terminal.c: 103: }
  3379                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3380  0105F6  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3381  0105FA  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3382  0105FE  0EE1               	movlw	low (STR_1+3)
  3383  010600  0100               	movlb	0	; () banked
  3384  010602  6F62               	movwf	strcmp@s2& (0+255),b
  3385  010604  0EFF               	movlw	high (STR_1+3)
  3386  010606  0100               	movlb	0	; () banked
  3387  010608  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3388  01060A  EC4E  F09F         	call	_strcmp	;wreg free
  3389  01060E  0100               	movlb	0	; () banked
  3390  010610  5160               	movf	?_strcmp& (0+255),w,b
  3391  010612  0100               	movlb	0	; () banked
  3392  010614  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3393  010616  B4D8               	btfsc	status,2,c
  3394  010618  D012               	goto	l8984
  3395                           
  3396                           ; BSR set to: 0
  3397  01061A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3398  01061E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3399  010622  0EE7               	movlw	low STR_34
  3400  010624  0100               	movlb	0	; () banked
  3401  010626  6F62               	movwf	strcmp@s2& (0+255),b
  3402  010628  0EFF               	movlw	high STR_34
  3403  01062A  0100               	movlb	0	; () banked
  3404  01062C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3405  01062E  EC4E  F09F         	call	_strcmp	;wreg free
  3406  010632  0100               	movlb	0	; () banked
  3407  010634  5160               	movf	?_strcmp& (0+255),w,b
  3408  010636  0100               	movlb	0	; () banked
  3409  010638  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3410  01063A  A4D8               	btfss	status,2,c
  3411  01063C  D023               	goto	l8988
  3412  01063E                     l8984:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3416  01063E  C13E  F066         	movff	_now+9,month_length@month
  3417  010642  0101               	movlb	1	; () banked
  3418  010644  513F               	movf	(_now+10)& (0+255),w,b
  3419  010646  ECFB  F091         	call	_month_length
  3420  01064A  0100               	movlb	0	; () banked
  3421  01064C  6FBE               	movwf	_terminal_time$6351& (0+255),b
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3425  01064E  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3426  010652  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3427  010656  0E3D               	movlw	low (_now+8)
  3428  010658  0100               	movlb	0	; () banked
  3429  01065A  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3430  01065C  0E01               	movlw	high (_now+8)
  3431  01065E  0100               	movlb	0	; () banked
  3432  010660  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3433  010662  0E01               	movlw	1
  3434  010664  0100               	movlb	0	; () banked
  3435  010666  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3436  010668  C0BE  F0B4         	movff	_terminal_time$6351,terminal_at_hand@max
  3437  01066C  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3438  010670  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3439  010674  EC40  F08F         	call	_atoi	;wreg free
  3440  010678  0100               	movlb	0	; () banked
  3441  01067A  5166               	movf	?_atoi& (0+255),w,b
  3442  01067C  0100               	movlb	0	; () banked
  3443  01067E  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3444  010680  ECBC  F09E         	call	_terminal_at_hand	;wreg free
  3445  010684                     l8988:
  3446                           
  3447                           ;My_terminal.c: 106: }
  3448                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3449  010684  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3450  010688  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3451  01068C  0ECD               	movlw	low (STR_32+4)
  3452  01068E  0100               	movlb	0	; () banked
  3453  010690  6F62               	movwf	strcmp@s2& (0+255),b
  3454  010692  0EFF               	movlw	high (STR_32+4)
  3455  010694  0100               	movlb	0	; () banked
  3456  010696  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3457  010698  EC4E  F09F         	call	_strcmp	;wreg free
  3458  01069C  0100               	movlb	0	; () banked
  3459  01069E  5160               	movf	?_strcmp& (0+255),w,b
  3460  0106A0  0100               	movlb	0	; () banked
  3461  0106A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3462  0106A4  B4D8               	btfsc	status,2,c
  3463  0106A6  D012               	goto	l8992
  3464                           
  3465                           ; BSR set to: 0
  3466  0106A8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3467  0106AC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3468  0106B0  0ED9               	movlw	low STR_36
  3469  0106B2  0100               	movlb	0	; () banked
  3470  0106B4  6F62               	movwf	strcmp@s2& (0+255),b
  3471  0106B6  0EFF               	movlw	high STR_36
  3472  0106B8  0100               	movlb	0	; () banked
  3473  0106BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3474  0106BC  EC4E  F09F         	call	_strcmp	;wreg free
  3475  0106C0  0100               	movlb	0	; () banked
  3476  0106C2  5160               	movf	?_strcmp& (0+255),w,b
  3477  0106C4  0100               	movlb	0	; () banked
  3478  0106C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3479  0106C8  A4D8               	btfss	status,2,c
  3480  0106CA  D01C               	goto	l8994
  3481  0106CC                     l8992:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3485  0106CC  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3486  0106D0  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3487  0106D4  0E3B               	movlw	low (_now+6)
  3488  0106D6  0100               	movlb	0	; () banked
  3489  0106D8  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3490  0106DA  0E01               	movlw	high (_now+6)
  3491  0106DC  0100               	movlb	0	; () banked
  3492  0106DE  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3493  0106E0  0E00               	movlw	0
  3494  0106E2  0100               	movlb	0	; () banked
  3495  0106E4  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3496  0106E6  0E17               	movlw	23
  3497  0106E8  0100               	movlb	0	; () banked
  3498  0106EA  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3499  0106EC  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3500  0106F0  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3501  0106F4  EC40  F08F         	call	_atoi	;wreg free
  3502  0106F8  0100               	movlb	0	; () banked
  3503  0106FA  5166               	movf	?_atoi& (0+255),w,b
  3504  0106FC  0100               	movlb	0	; () banked
  3505  0106FE  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3506  010700  ECBC  F09E         	call	_terminal_at_hand	;wreg free
  3507  010704                     l8994:
  3508                           
  3509                           ;My_terminal.c: 109: }
  3510                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3511  010704  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3512  010708  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3513  01070C  0EF2               	movlw	low STR_37
  3514  01070E  0100               	movlb	0	; () banked
  3515  010710  6F62               	movwf	strcmp@s2& (0+255),b
  3516  010712  0EFF               	movlw	high STR_37
  3517  010714  0100               	movlb	0	; () banked
  3518  010716  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3519  010718  EC4E  F09F         	call	_strcmp	;wreg free
  3520  01071C  0100               	movlb	0	; () banked
  3521  01071E  5160               	movf	?_strcmp& (0+255),w,b
  3522  010720  0100               	movlb	0	; () banked
  3523  010722  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3524  010724  B4D8               	btfsc	status,2,c
  3525  010726  D012               	goto	l8998
  3526                           
  3527                           ; BSR set to: 0
  3528  010728  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3529  01072C  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3530  010730  0EC2               	movlw	low STR_38
  3531  010732  0100               	movlb	0	; () banked
  3532  010734  6F62               	movwf	strcmp@s2& (0+255),b
  3533  010736  0EFF               	movlw	high STR_38
  3534  010738  0100               	movlb	0	; () banked
  3535  01073A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3536  01073C  EC4E  F09F         	call	_strcmp	;wreg free
  3537  010740  0100               	movlb	0	; () banked
  3538  010742  5160               	movf	?_strcmp& (0+255),w,b
  3539  010744  0100               	movlb	0	; () banked
  3540  010746  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3541  010748  A4D8               	btfss	status,2,c
  3542  01074A  D01C               	goto	l9000
  3543  01074C                     l8998:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3547  01074C  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3548  010750  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3549  010754  0E3A               	movlw	low (_now+5)
  3550  010756  0100               	movlb	0	; () banked
  3551  010758  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3552  01075A  0E01               	movlw	high (_now+5)
  3553  01075C  0100               	movlb	0	; () banked
  3554  01075E  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3555  010760  0E00               	movlw	0
  3556  010762  0100               	movlb	0	; () banked
  3557  010764  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3558  010766  0E3B               	movlw	59
  3559  010768  0100               	movlb	0	; () banked
  3560  01076A  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3561  01076C  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3562  010770  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3563  010774  EC40  F08F         	call	_atoi	;wreg free
  3564  010778  0100               	movlb	0	; () banked
  3565  01077A  5166               	movf	?_atoi& (0+255),w,b
  3566  01077C  0100               	movlb	0	; () banked
  3567  01077E  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3568  010780  ECBC  F09E         	call	_terminal_at_hand	;wreg free
  3569  010784                     l9000:
  3570                           
  3571                           ;My_terminal.c: 112: }
  3572                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  3573  010784  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3574  010788  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3575  01078C  0EF4               	movlw	low STR_39
  3576  01078E  0100               	movlb	0	; () banked
  3577  010790  6F62               	movwf	strcmp@s2& (0+255),b
  3578  010792  0EFF               	movlw	high STR_39
  3579  010794  0100               	movlb	0	; () banked
  3580  010796  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3581  010798  EC4E  F09F         	call	_strcmp	;wreg free
  3582  01079C  0100               	movlb	0	; () banked
  3583  01079E  5160               	movf	?_strcmp& (0+255),w,b
  3584  0107A0  0100               	movlb	0	; () banked
  3585  0107A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3586  0107A4  B4D8               	btfsc	status,2,c
  3587  0107A6  D012               	goto	l9004
  3588                           
  3589                           ; BSR set to: 0
  3590  0107A8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3591  0107AC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3592  0107B0  0EBB               	movlw	low STR_40
  3593  0107B2  0100               	movlb	0	; () banked
  3594  0107B4  6F62               	movwf	strcmp@s2& (0+255),b
  3595  0107B6  0EFF               	movlw	high STR_40
  3596  0107B8  0100               	movlb	0	; () banked
  3597  0107BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3598  0107BC  EC4E  F09F         	call	_strcmp	;wreg free
  3599  0107C0  0100               	movlb	0	; () banked
  3600  0107C2  5160               	movf	?_strcmp& (0+255),w,b
  3601  0107C4  0100               	movlb	0	; () banked
  3602  0107C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3603  0107C8  A4D8               	btfss	status,2,c
  3604  0107CA  0012               	return	
  3605  0107CC                     l9004:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  3609  0107CC  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3610  0107D0  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3611  0107D4  0E39               	movlw	low (_now+4)
  3612  0107D6  0100               	movlb	0	; () banked
  3613  0107D8  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3614  0107DA  0E01               	movlw	high (_now+4)
  3615  0107DC  0100               	movlb	0	; () banked
  3616  0107DE  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3617  0107E0  0E00               	movlw	0
  3618  0107E2  0100               	movlb	0	; () banked
  3619  0107E4  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3620  0107E6  0E3B               	movlw	59
  3621  0107E8  0100               	movlb	0	; () banked
  3622  0107EA  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3623  0107EC  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3624  0107F0  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3625  0107F4  EC40  F08F         	call	_atoi	;wreg free
  3626  0107F8  0100               	movlb	0	; () banked
  3627  0107FA  5166               	movf	?_atoi& (0+255),w,b
  3628  0107FC  0100               	movlb	0	; () banked
  3629  0107FE  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3630  010800  ECBC  F09E         	call	_terminal_at_hand	;wreg free
  3631  010804  0012               	return	
  3632  010806                     __end_of_terminal_time:
  3633                           	opt stack 0
  3634                           tblptru	equ	0xFF8
  3635                           tblptrh	equ	0xFF7
  3636                           tblptrl	equ	0xFF6
  3637                           tablat	equ	0xFF5
  3638                           prodh	equ	0xFF4
  3639                           prodl	equ	0xFF3
  3640                           intcon	equ	0xFF2
  3641                           postinc0	equ	0xFEE
  3642                           wreg	equ	0xFE8
  3643                           postdec1	equ	0xFE5
  3644                           fsr1h	equ	0xFE2
  3645                           fsr1l	equ	0xFE1
  3646                           indf2	equ	0xFDF
  3647                           fsr2h	equ	0xFDA
  3648                           fsr2l	equ	0xFD9
  3649                           status	equ	0xFD8
  3650                           
  3651 ;; *************** function _terminal_at_hand *****************
  3652 ;; Defined at:
  3653 ;;		line 82 in file "../My_library/My_terminal.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  tx              2   79[BANK0 ] PTR struct ringbuf
  3656 ;;		 -> usb_tx(8), 
  3657 ;;  hand            2   81[BANK0 ] PTR unsigned char 
  3658 ;;		 -> now(14), 
  3659 ;;  min             1   83[BANK0 ] unsigned char 
  3660 ;;  max             1   84[BANK0 ] unsigned char 
  3661 ;;  value           1   85[BANK0 ] unsigned char 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;		None               void
  3666 ;; Registers used:
  3667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3673 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;Total ram usage:        7 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:   16
  3680 ;; This function calls:
  3681 ;;		_RTCC_from_caltime
  3682 ;;		_print_time
  3683 ;;		_ringbuf_put_str
  3684 ;; This function is called by:
  3685 ;;		_terminal_time
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text4
  3690  013D78                     __ptext4:
  3691                           	opt stack 0
  3692  013D78                     _terminal_at_hand:
  3693                           	opt stack 11
  3694                           
  3695                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  3696                           
  3697                           ;incstack = 0
  3698  013D78  0100               	movlb	0	; () banked
  3699  013D7A  51B3               	movf	terminal_at_hand@min& (0+255),w,b
  3700  013D7C  0100               	movlb	0	; () banked
  3701  013D7E  5DB5               	subwf	terminal_at_hand@value& (0+255),w,b
  3702  013D80  A0D8               	btfss	status,0,c
  3703  013D82  D01E               	goto	l8698
  3704                           
  3705                           ; BSR set to: 0
  3706  013D84  0100               	movlb	0	; () banked
  3707  013D86  51B5               	movf	terminal_at_hand@value& (0+255),w,b
  3708  013D88  0100               	movlb	0	; () banked
  3709  013D8A  5DB4               	subwf	terminal_at_hand@max& (0+255),w,b
  3710  013D8C  A0D8               	btfss	status,0,c
  3711  013D8E  D018               	goto	l8698
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;My_terminal.c: 84: *hand = value;
  3715  013D90  C0B1  FFD9         	movff	terminal_at_hand@hand,fsr2l
  3716  013D94  C0B2  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  3717  013D98  C0B5  FFDF         	movff	terminal_at_hand@value,indf2
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  3721  013D9C  0E35               	movlw	low _now
  3722  013D9E  0100               	movlb	0	; () banked
  3723  013DA0  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  3724  013DA2  0E01               	movlw	high _now
  3725  013DA4  0100               	movlb	0	; () banked
  3726  013DA6  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  3727  013DA8  EC25  F0A2         	call	_RTCC_from_caltime	;wreg free
  3728                           
  3729                           ;My_terminal.c: 86: time_change_flag = 1;
  3730  013DAC  0E01               	movlw	1
  3731  013DAE  0101               	movlb	1	; () banked
  3732  013DB0  6F32               	movwf	_time_change_flag& (0+255),b
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;My_terminal.c: 87: print_time(tx);
  3736  013DB2  C0AF  F08F         	movff	terminal_at_hand@tx,print_time@tx
  3737  013DB6  C0B0  F090         	movff	terminal_at_hand@tx+1,print_time@tx+1
  3738  013DBA  ECF6  F09B         	call	_print_time	;wreg free
  3739                           
  3740                           ;My_terminal.c: 88: } else {
  3741  013DBE  0012               	return	
  3742  013DC0                     l8698:
  3743                           
  3744                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  3745  013DC0  C0AF  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  3746  013DC4  C0B0  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  3747  013DC8  0EAC               	movlw	low STR_24
  3748  013DCA  0100               	movlb	0	; () banked
  3749  013DCC  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3750  013DCE  0EFF               	movlw	high STR_24
  3751  013DD0  0100               	movlb	0	; () banked
  3752  013DD2  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3753  013DD4  EC8A  F09E         	call	_ringbuf_put_str	;wreg free
  3754  013DD8  0012               	return	
  3755  013DDA                     __end_of_terminal_at_hand:
  3756                           	opt stack 0
  3757                           tblptru	equ	0xFF8
  3758                           tblptrh	equ	0xFF7
  3759                           tblptrl	equ	0xFF6
  3760                           tablat	equ	0xFF5
  3761                           prodh	equ	0xFF4
  3762                           prodl	equ	0xFF3
  3763                           intcon	equ	0xFF2
  3764                           postinc0	equ	0xFEE
  3765                           wreg	equ	0xFE8
  3766                           postdec1	equ	0xFE5
  3767                           fsr1h	equ	0xFE2
  3768                           fsr1l	equ	0xFE1
  3769                           indf2	equ	0xFDF
  3770                           fsr2h	equ	0xFDA
  3771                           fsr2l	equ	0xFD9
  3772                           status	equ	0xFD8
  3773                           
  3774 ;; *************** function _print_time *****************
  3775 ;; Defined at:
  3776 ;;		line 68 in file "../My_library/My_terminal.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  tx              2   47[BANK0 ] PTR struct ringbuf
  3779 ;;		 -> usb_tx(8), 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  str            30   49[BANK0 ] unsigned char [30]
  3782 ;; Return value:  Size  Location     Type
  3783 ;;		None               void
  3784 ;; Registers used:
  3785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3792 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3794 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3795 ;;Total ram usage:       32 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:   15
  3798 ;; This function calls:
  3799 ;;		_RTCC_from_RTCC
  3800 ;;		_ringbuf_put_str
  3801 ;;		_sprintf
  3802 ;; This function is called by:
  3803 ;;		_terminal_at_hand
  3804 ;;		_terminal_time
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text5
  3809  0137EC                     __ptext5:
  3810                           	opt stack 0
  3811  0137EC                     _print_time:
  3812                           	opt stack 11
  3813                           
  3814                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  3815                           
  3816                           ;incstack = 0
  3817  0137EC  0E35               	movlw	low _now
  3818  0137EE  0100               	movlb	0	; () banked
  3819  0137F0  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3820  0137F2  0E01               	movlw	high _now
  3821  0137F4  0100               	movlb	0	; () banked
  3822  0137F6  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3823  0137F8  ECB5  F0A2         	call	_RTCC_from_RTCC	;wreg free
  3824                           
  3825                           ;My_terminal.c: 70: char str[30];
  3826                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  3827                           ;My_terminal.c: 72: now.YY,
  3828                           ;My_terminal.c: 73: now.MM,
  3829                           ;My_terminal.c: 74: now.DD,
  3830                           ;My_terminal.c: 75: weekday_3char[now.EE],
  3831                           ;My_terminal.c: 76: now.hh,
  3832                           ;My_terminal.c: 77: now.mm,
  3833                           ;My_terminal.c: 78: now.ss);
  3834  0137FC  0E91               	movlw	low print_time@str
  3835  0137FE  0100               	movlb	0	; () banked
  3836  013800  6F6C               	movwf	sprintf@sp& (0+255),b
  3837  013802  0E00               	movlw	high print_time@str
  3838  013804  0100               	movlb	0	; () banked
  3839  013806  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3840  013808  0E43               	movlw	low STR_23
  3841  01380A  0100               	movlb	0	; () banked
  3842  01380C  6F6E               	movwf	sprintf@f& (0+255),b
  3843  01380E  0EFF               	movlw	high STR_23
  3844  013810  0100               	movlb	0	; () banked
  3845  013812  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3846  013814  C13F  F070         	movff	_now+10,?_sprintf+4
  3847  013818  0100               	movlb	0	; () banked
  3848  01381A  6B71               	clrf	(?_sprintf+5)& (0+255),b
  3849  01381C  C13E  F072         	movff	_now+9,?_sprintf+6
  3850  013820  0100               	movlb	0	; () banked
  3851  013822  6B73               	clrf	(?_sprintf+7)& (0+255),b
  3852  013824  C13D  F074         	movff	_now+8,?_sprintf+8
  3853  013828  0100               	movlb	0	; () banked
  3854  01382A  6B75               	clrf	(?_sprintf+9)& (0+255),b
  3855  01382C  0101               	movlb	1	; () banked
  3856  01382E  513C               	movf	(_now+7)& (0+255),w,b
  3857  013830  0D04               	mullw	4
  3858  013832  0E26               	movlw	low _weekday_3char
  3859  013834  24F3               	addwf	prodl,w,c
  3860  013836  0100               	movlb	0	; () banked
  3861  013838  6F76               	movwf	(?_sprintf+10)& (0+255),b
  3862  01383A  0EFE               	movlw	high _weekday_3char
  3863  01383C  20F4               	addwfc	prodh,w,c
  3864  01383E  0100               	movlb	0	; () banked
  3865  013840  6F77               	movwf	(?_sprintf+11)& (0+255),b
  3866  013842  C13B  F078         	movff	_now+6,?_sprintf+12
  3867  013846  0100               	movlb	0	; () banked
  3868  013848  6B79               	clrf	(?_sprintf+13)& (0+255),b
  3869  01384A  C13A  F07A         	movff	_now+5,?_sprintf+14
  3870  01384E  0100               	movlb	0	; () banked
  3871  013850  6B7B               	clrf	(?_sprintf+15)& (0+255),b
  3872  013852  C139  F07C         	movff	_now+4,?_sprintf+16
  3873  013856  0100               	movlb	0	; () banked
  3874  013858  6B7D               	clrf	(?_sprintf+17)& (0+255),b
  3875  01385A  EC00  F080         	call	_sprintf	;wreg free
  3876                           
  3877                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  3878  01385E  C08F  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  3879  013862  C090  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  3880  013866  0E91               	movlw	low print_time@str
  3881  013868  0100               	movlb	0	; () banked
  3882  01386A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3883  01386C  0E00               	movlw	high print_time@str
  3884  01386E  0100               	movlb	0	; () banked
  3885  013870  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3886  013872  EC8A  F09E         	call	_ringbuf_put_str	;wreg free
  3887  013876  0012               	return		;funcret
  3888  013878                     __end_of_print_time:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           intcon	equ	0xFF2
  3897                           postinc0	equ	0xFEE
  3898                           wreg	equ	0xFE8
  3899                           postdec1	equ	0xFE5
  3900                           fsr1h	equ	0xFE2
  3901                           fsr1l	equ	0xFE1
  3902                           indf2	equ	0xFDF
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _ringbuf_put_str *****************
  3908 ;; Defined at:
  3909 ;;		line 39 in file "../My_library/My_ringbuf.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  3912 ;;		 -> usb_tx(8), 
  3913 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  3914 ;;		 -> STR_43(235), STR_24(8), print_time@str(30), STR_22(3), 
  3915 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3930 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3931 ;;Total ram usage:        4 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:   13
  3934 ;; This function calls:
  3935 ;;		_ringbuf_put
  3936 ;; This function is called by:
  3937 ;;		_terminal_task
  3938 ;;		_print_time
  3939 ;;		_terminal_at_hand
  3940 ;;		_terminal_operation
  3941 ;;		_print_time_dec
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text6
  3946  013D14                     __ptext6:
  3947                           	opt stack 0
  3948  013D14                     _ringbuf_put_str:
  3949                           	opt stack 13
  3950                           
  3951                           ;My_ringbuf.c: 40: while (*str) {
  3952                           
  3953                           ;incstack = 0
  3954  013D14  D01C               	goto	l8404
  3955  013D16                     l8400:
  3956                           
  3957                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  3958  013D16  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  3959  013D1A  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  3960  013D1E  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  3961  013D22  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  3962  013D26  0E00               	movlw	low (__mediumconst shr (0+16))
  3963  013D28  6EF8               	movwf	tblptru,c
  3964  013D2A  0E0E               	movlw	(high __ramtop+-1)
  3965  013D2C  64F7               	cpfsgt	tblptrh,c
  3966  013D2E  D003               	bra	u8087
  3967  013D30  0008               	tblrd		*
  3968  013D32  50F5               	movf	tablat,w,c
  3969  013D34  D005               	bra	u8080
  3970  013D36                     u8087:
  3971  013D36  CFF6 FFE1          	movff	tblptrl,fsr1l
  3972  013D3A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3973  013D3E  50E7               	movf	indf1,w,c
  3974  013D40                     u8080:
  3975  013D40  0100               	movlb	0	; () banked
  3976  013D42  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3977  013D44  EC86  F094         	call	_ringbuf_put	;wreg free
  3978  013D48  0100               	movlb	0	; () banked
  3979  013D4A  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  3980  013D4C  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  3981  013D4E                     l8404:
  3982  013D4E  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  3983  013D52  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  3984  013D56  0E00               	movlw	low (__mediumconst shr (0+16))
  3985  013D58  6EF8               	movwf	tblptru,c
  3986  013D5A  0E0E               	movlw	(high __ramtop+-1)
  3987  013D5C  64F7               	cpfsgt	tblptrh,c
  3988  013D5E  D003               	bra	u8097
  3989  013D60  0008               	tblrd		*
  3990  013D62  50F5               	movf	tablat,w,c
  3991  013D64  D005               	bra	u8090
  3992  013D66                     u8097:
  3993  013D66  CFF6 FFE1          	movff	tblptrl,fsr1l
  3994  013D6A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3995  013D6E  50E7               	movf	indf1,w,c
  3996  013D70                     u8090:
  3997  013D70  0900               	iorlw	0
  3998  013D72  B4D8               	btfsc	status,2,c
  3999  013D74  0012               	return	
  4000  013D76  D7CF               	goto	l8400
  4001  013D78                     __end_of_ringbuf_put_str:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           prodh	equ	0xFF4
  4008                           prodl	equ	0xFF3
  4009                           intcon	equ	0xFF2
  4010                           postinc0	equ	0xFEE
  4011                           wreg	equ	0xFE8
  4012                           indf1	equ	0xFE7
  4013                           postdec1	equ	0xFE5
  4014                           fsr1h	equ	0xFE2
  4015                           fsr1l	equ	0xFE1
  4016                           indf2	equ	0xFDF
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _RTCC_from_caltime *****************
  4022 ;; Defined at:
  4023 ;;		line 205 in file "../My_library/My_RTCC.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  tm              2   47[BANK0 ] PTR struct .
  4026 ;;		 -> now(14), 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;		None               void
  4031 ;; Registers used:
  4032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4042 ;;Total ram usage:        2 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:   14
  4045 ;; This function calls:
  4046 ;;		_caltime_to_RTCC
  4047 ;;		_caltime_to_epoch
  4048 ;;		_epoch_to_caltime
  4049 ;; This function is called by:
  4050 ;;		_terminal_at_hand
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text7
  4055  01444A                     __ptext7:
  4056                           	opt stack 0
  4057  01444A                     _RTCC_from_caltime:
  4058                           	opt stack 12
  4059                           
  4060                           ;My_RTCC.c: 206: caltime_to_epoch(tm);
  4061                           
  4062                           ;incstack = 0
  4063  01444A  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  4064  01444E  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  4065  014452  ECB8  F085         	call	_caltime_to_epoch	;wreg free
  4066                           
  4067                           ;My_RTCC.c: 207: epoch_to_caltime(tm);
  4068  014456  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  4069  01445A  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  4070  01445E  EC4D  F089         	call	_epoch_to_caltime	;wreg free
  4071                           
  4072                           ;My_RTCC.c: 208: caltime_to_RTCC(tm);
  4073  014462  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  4074  014466  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  4075  01446A  ECB1  F093         	call	_caltime_to_RTCC	;wreg free
  4076  01446E  0012               	return		;funcret
  4077  014470                     __end_of_RTCC_from_caltime:
  4078                           	opt stack 0
  4079                           tblptru	equ	0xFF8
  4080                           tblptrh	equ	0xFF7
  4081                           tblptrl	equ	0xFF6
  4082                           tablat	equ	0xFF5
  4083                           prodh	equ	0xFF4
  4084                           prodl	equ	0xFF3
  4085                           intcon	equ	0xFF2
  4086                           postinc0	equ	0xFEE
  4087                           wreg	equ	0xFE8
  4088                           indf1	equ	0xFE7
  4089                           postdec1	equ	0xFE5
  4090                           fsr1h	equ	0xFE2
  4091                           fsr1l	equ	0xFE1
  4092                           indf2	equ	0xFDF
  4093                           fsr2h	equ	0xFDA
  4094                           fsr2l	equ	0xFD9
  4095                           status	equ	0xFD8
  4096                           
  4097 ;; *************** function _strcmp *****************
  4098 ;; Defined at:
  4099 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  4102 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  4103 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  4104 ;;		 -> STR_45(9), STR_44(9), STR_42(2), STR_41(5), 
  4105 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  4106 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  4107 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  4108 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  r               1    5[BANK0 ] char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  2    0[BANK0 ] int 
  4113 ;; Registers used:
  4114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4120 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4123 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;Total ram usage:        6 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:   11
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_terminal_time
  4131 ;;		_terminal_operation
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text8
  4136  013E9C                     __ptext8:
  4137                           	opt stack 0
  4138  013E9C                     _strcmp:
  4139                           	opt stack 16
  4140                           
  4141                           ;incstack = 0
  4142  013E9C  D006               	goto	l8704
  4143  013E9E                     l8702:
  4144  013E9E  0100               	movlb	0	; () banked
  4145  013EA0  4B60               	infsnz	strcmp@s1& (0+255),f,b
  4146  013EA2  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  4147  013EA4  0100               	movlb	0	; () banked
  4148  013EA6  4B62               	infsnz	strcmp@s2& (0+255),f,b
  4149  013EA8  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  4150  013EAA                     l8704:
  4151  013EAA  C060  FFD9         	movff	strcmp@s1,fsr2l
  4152  013EAE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4153  013EB2  50DF               	movf	indf2,w,c
  4154  013EB4  0100               	movlb	0	; () banked
  4155  013EB6  6F64               	movwf	??_strcmp& (0+255),b
  4156  013EB8  C062  FFF6         	movff	strcmp@s2,tblptrl
  4157  013EBC  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  4158  013EC0                     	if	0	;tblptru may be non-zero
  4159  013EC0                     	endif
  4160  013EC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4161  013EC0  0E00               	movlw	low (__mediumconst shr (0+16))
  4162  013EC2  6EF8               	movwf	tblptru,c
  4163  013EC4                     	endif
  4164  013EC4  0008               	tblrd		*
  4165  013EC6  50F5               	movf	tablat,w,c
  4166  013EC8  0800               	sublw	0
  4167  013ECA  0100               	movlb	0	; () banked
  4168  013ECC  2564               	addwf	??_strcmp& (0+255),w,b
  4169  013ECE  0100               	movlb	0	; () banked
  4170  013ED0  6F65               	movwf	strcmp@r& (0+255),b
  4171  013ED2  0100               	movlb	0	; () banked
  4172  013ED4  5165               	movf	strcmp@r& (0+255),w,b
  4173  013ED6  A4D8               	btfss	status,2,c
  4174  013ED8  D007               	goto	l8708
  4175                           
  4176                           ; BSR set to: 0
  4177  013EDA  C060  FFD9         	movff	strcmp@s1,fsr2l
  4178  013EDE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4179  013EE2  50DF               	movf	indf2,w,c
  4180  013EE4  A4D8               	btfss	status,2,c
  4181  013EE6  D7DB               	goto	l8702
  4182  013EE8                     l8708:
  4183                           
  4184                           ; BSR set to: 0
  4185  013EE8  0100               	movlb	0	; () banked
  4186  013EEA  5165               	movf	strcmp@r& (0+255),w,b
  4187  013EEC  0100               	movlb	0	; () banked
  4188  013EEE  6F60               	movwf	?_strcmp& (0+255),b
  4189  013EF0  6B61               	clrf	(?_strcmp+1)& (0+255),b
  4190  013EF2  BF60               	btfsc	?_strcmp& (0+255),7,b
  4191  013EF4  0761               	decf	(?_strcmp+1)& (0+255),f,b
  4192  013EF6  0012               	return	
  4193  013EF8                     __end_of_strcmp:
  4194                           	opt stack 0
  4195                           tblptru	equ	0xFF8
  4196                           tblptrh	equ	0xFF7
  4197                           tblptrl	equ	0xFF6
  4198                           tablat	equ	0xFF5
  4199                           prodh	equ	0xFF4
  4200                           prodl	equ	0xFF3
  4201                           intcon	equ	0xFF2
  4202                           postinc0	equ	0xFEE
  4203                           wreg	equ	0xFE8
  4204                           indf1	equ	0xFE7
  4205                           postdec1	equ	0xFE5
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           indf2	equ	0xFDF
  4209                           fsr2h	equ	0xFDA
  4210                           fsr2l	equ	0xFD9
  4211                           status	equ	0xFD8
  4212                           
  4213 ;; *************** function _atoi *****************
  4214 ;; Defined at:
  4215 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4218 ;;		 -> terminal_task@op2(25), 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  a               2   11[BANK0 ] int 
  4221 ;;  sign            1   10[BANK0 ] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2    6[BANK0 ] int 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4232 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4234 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4235 ;;Total ram usage:        7 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:   12
  4238 ;; This function calls:
  4239 ;;		___wmul
  4240 ;;		_isdigit
  4241 ;; This function is called by:
  4242 ;;		_terminal_time
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text9
  4247  011E80                     __ptext9:
  4248                           	opt stack 0
  4249  011E80                     _atoi:
  4250                           	opt stack 15
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;incstack = 0
  4254  011E80  D003               	goto	l8716
  4255  011E82                     l8714:
  4256  011E82  0100               	movlb	0	; () banked
  4257  011E84  4B66               	infsnz	atoi@s& (0+255),f,b
  4258  011E86  2B67               	incf	(atoi@s+1)& (0+255),f,b
  4259  011E88                     l8716:
  4260  011E88  C066  FFD9         	movff	atoi@s,fsr2l
  4261  011E8C  C067  FFDA         	movff	atoi@s+1,fsr2h
  4262  011E90  0E20               	movlw	32
  4263  011E92  18DE               	xorwf	postinc2,w,c
  4264  011E94  B4D8               	btfsc	status,2,c
  4265  011E96  D7F5               	goto	l8714
  4266  011E98  C066  FFD9         	movff	atoi@s,fsr2l
  4267  011E9C  C067  FFDA         	movff	atoi@s+1,fsr2h
  4268  011EA0  0E09               	movlw	9
  4269  011EA2  18DE               	xorwf	postinc2,w,c
  4270  011EA4  B4D8               	btfsc	status,2,c
  4271  011EA6  D7ED               	goto	l8714
  4272  011EA8  0E00               	movlw	0
  4273  011EAA  0100               	movlb	0	; () banked
  4274  011EAC  6F6C               	movwf	(atoi@a+1)& (0+255),b
  4275  011EAE  0E00               	movlw	0
  4276  011EB0  6F6B               	movwf	atoi@a& (0+255),b
  4277  011EB2  0E00               	movlw	0
  4278  011EB4  0100               	movlb	0	; () banked
  4279  011EB6  6F6A               	movwf	atoi@sign& (0+255),b
  4280                           
  4281                           ; BSR set to: 0
  4282  011EB8  C066  FFD9         	movff	atoi@s,fsr2l
  4283  011EBC  C067  FFDA         	movff	atoi@s+1,fsr2h
  4284  011EC0  0E2D               	movlw	45
  4285  011EC2  18DE               	xorwf	postinc2,w,c
  4286  011EC4  A4D8               	btfss	status,2,c
  4287  011EC6  D003               	goto	l8726
  4288                           
  4289                           ; BSR set to: 0
  4290  011EC8  0100               	movlb	0	; () banked
  4291  011ECA  2B6A               	incf	atoi@sign& (0+255),f,b
  4292  011ECC  D02E               	goto	l8732
  4293  011ECE                     l8726:
  4294                           
  4295                           ; BSR set to: 0
  4296  011ECE  C066  FFD9         	movff	atoi@s,fsr2l
  4297  011ED2  C067  FFDA         	movff	atoi@s+1,fsr2h
  4298  011ED6  0E2B               	movlw	43
  4299  011ED8  18DE               	xorwf	postinc2,w,c
  4300  011EDA  A4D8               	btfss	status,2,c
  4301  011EDC  D029               	goto	l8734
  4302  011EDE  D025               	goto	l8732
  4303  011EE0                     l8730:
  4304  011EE0  C06B  F060         	movff	atoi@a,___wmul@multiplier
  4305  011EE4  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  4306  011EE8  0E00               	movlw	0
  4307  011EEA  0100               	movlb	0	; () banked
  4308  011EEC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4309  011EEE  0E0A               	movlw	10
  4310  011EF0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4311  011EF2  EC26  F0A1         	call	___wmul	;wreg free
  4312  011EF6  C066  FFD9         	movff	atoi@s,fsr2l
  4313  011EFA  C067  FFDA         	movff	atoi@s+1,fsr2h
  4314  011EFE  50DF               	movf	indf2,w,c
  4315  011F00  0100               	movlb	0	; () banked
  4316  011F02  6F68               	movwf	??_atoi& (0+255),b
  4317  011F04  6B69               	clrf	(??_atoi+1)& (0+255),b
  4318  011F06  0100               	movlb	0	; () banked
  4319  011F08  5160               	movf	?___wmul& (0+255),w,b
  4320  011F0A  0100               	movlb	0	; () banked
  4321  011F0C  2768               	addwf	??_atoi& (0+255),f,b
  4322  011F0E  0100               	movlb	0	; () banked
  4323  011F10  5161               	movf	(?___wmul+1)& (0+255),w,b
  4324  011F12  0100               	movlb	0	; () banked
  4325  011F14  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  4326  011F16  0ED0               	movlw	208
  4327  011F18  0100               	movlb	0	; () banked
  4328  011F1A  2568               	addwf	??_atoi& (0+255),w,b
  4329  011F1C  0100               	movlb	0	; () banked
  4330  011F1E  6F6B               	movwf	atoi@a& (0+255),b
  4331  011F20  0EFF               	movlw	255
  4332  011F22  0100               	movlb	0	; () banked
  4333  011F24  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  4334  011F26  0100               	movlb	0	; () banked
  4335  011F28  6F6C               	movwf	(atoi@a+1)& (0+255),b
  4336  011F2A                     l8732:
  4337                           
  4338                           ; BSR set to: 0
  4339  011F2A  0100               	movlb	0	; () banked
  4340  011F2C  4B66               	infsnz	atoi@s& (0+255),f,b
  4341  011F2E  2B67               	incf	(atoi@s+1)& (0+255),f,b
  4342  011F30                     l8734:
  4343                           
  4344                           ; BSR set to: 0
  4345  011F30  C066  FFD9         	movff	atoi@s,fsr2l
  4346  011F34  C067  FFDA         	movff	atoi@s+1,fsr2h
  4347  011F38  50DF               	movf	indf2,w,c
  4348  011F3A  ECFC  F0A1         	call	_isdigit
  4349  011F3E  B0D8               	btfsc	status,0,c
  4350  011F40  D7CF               	goto	l8730
  4351  011F42  0100               	movlb	0	; () banked
  4352  011F44  516A               	movf	atoi@sign& (0+255),w,b
  4353  011F46  0100               	movlb	0	; () banked
  4354  011F48  B4D8               	btfsc	status,2,c
  4355  011F4A  D00E               	goto	l1698
  4356                           
  4357                           ; BSR set to: 0
  4358  011F4C  C06B  F068         	movff	atoi@a,??_atoi
  4359  011F50  C06C  F069         	movff	atoi@a+1,??_atoi+1
  4360  011F54  0100               	movlb	0	; () banked
  4361  011F56  1F68               	comf	??_atoi& (0+255),f,b
  4362  011F58  1F69               	comf	(??_atoi+1)& (0+255),f,b
  4363  011F5A  4B68               	infsnz	??_atoi& (0+255),f,b
  4364  011F5C  2B69               	incf	(??_atoi+1)& (0+255),f,b
  4365  011F5E  C068  F066         	movff	??_atoi,?_atoi
  4366  011F62  C069  F067         	movff	??_atoi+1,?_atoi+1
  4367  011F66  0012               	return	
  4368  011F68                     l1698:
  4369                           
  4370                           ; BSR set to: 0
  4371  011F68  C06B  F066         	movff	atoi@a,?_atoi
  4372  011F6C  C06C  F067         	movff	atoi@a+1,?_atoi+1
  4373                           
  4374                           ; BSR set to: 0
  4375  011F70  0012               	return		;funcret
  4376  011F72                     __end_of_atoi:
  4377                           	opt stack 0
  4378                           tblptru	equ	0xFF8
  4379                           tblptrh	equ	0xFF7
  4380                           tblptrl	equ	0xFF6
  4381                           tablat	equ	0xFF5
  4382                           prodh	equ	0xFF4
  4383                           prodl	equ	0xFF3
  4384                           intcon	equ	0xFF2
  4385                           postinc0	equ	0xFEE
  4386                           wreg	equ	0xFE8
  4387                           indf1	equ	0xFE7
  4388                           postdec1	equ	0xFE5
  4389                           fsr1h	equ	0xFE2
  4390                           fsr1l	equ	0xFE1
  4391                           indf2	equ	0xFDF
  4392                           postinc2	equ	0xFDE
  4393                           fsr2h	equ	0xFDA
  4394                           fsr2l	equ	0xFD9
  4395                           status	equ	0xFD8
  4396                           
  4397 ;; *************** function _ringbuf_put_num *****************
  4398 ;; Defined at:
  4399 ;;		line 28 in file "../My_library/My_ringbuf.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  4402 ;;		 -> usb_tx(8), 
  4403 ;;  value           2   17[BANK0 ] const unsigned int 
  4404 ;;  digits          1   19[BANK0 ] unsigned char 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  i               1   20[BANK0 ] unsigned char 
  4407 ;;  temp            2   21[BANK0 ] unsigned int 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;		None               void
  4410 ;; Registers used:
  4411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4417 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4418 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4420 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4421 ;;Total ram usage:        8 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:   13
  4424 ;; This function calls:
  4425 ;;		___lwdiv
  4426 ;;		___lwmod
  4427 ;;		_ringbuf_put
  4428 ;; This function is called by:
  4429 ;;		_terminal_task
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text10
  4434  0138FE                     __ptext10:
  4435                           	opt stack 0
  4436  0138FE                     _ringbuf_put_num:
  4437                           	opt stack 16
  4438                           
  4439                           ;My_ringbuf.c: 29: while (digits--) {
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;incstack = 0
  4443  0138FE  D039               	goto	l9090
  4444  013900                     l726:
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;My_ringbuf.c: 30: uint16_t temp = value;
  4448  013900  C071  F075         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  4449  013904  C072  F076         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  4453  013908  0E00               	movlw	0
  4454  01390A  0100               	movlb	0	; () banked
  4455  01390C  6F74               	movwf	ringbuf_put_num@i& (0+255),b
  4456  01390E  D011               	goto	l9084
  4457  013910                     l9080:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;My_ringbuf.c: 32: temp /= 10;
  4461  013910  C075  F060         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  4462  013914  C076  F061         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  4463  013918  0E00               	movlw	0
  4464  01391A  0100               	movlb	0	; () banked
  4465  01391C  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4466  01391E  0E0A               	movlw	10
  4467  013920  6F62               	movwf	___lwdiv@divisor& (0+255),b
  4468  013922  EC01  F09D         	call	___lwdiv	;wreg free
  4469  013926  C060  F075         	movff	?___lwdiv,ringbuf_put_num@temp
  4470  01392A  C061  F076         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  4471  01392E  0100               	movlb	0	; () banked
  4472  013930  2B74               	incf	ringbuf_put_num@i& (0+255),f,b
  4473  013932                     l9084:
  4474                           
  4475                           ; BSR set to: 0
  4476  013932  0100               	movlb	0	; () banked
  4477  013934  5173               	movf	ringbuf_put_num@digits& (0+255),w,b
  4478  013936  0100               	movlb	0	; () banked
  4479  013938  5D74               	subwf	ringbuf_put_num@i& (0+255),w,b
  4480  01393A  A0D8               	btfss	status,0,c
  4481  01393C  D7E9               	goto	l9080
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;My_ringbuf.c: 33: }
  4485                           ;My_ringbuf.c: 34: temp %= 10;
  4486                           
  4487                           ; BSR set to: 0
  4488  01393E  C075  F067         	movff	ringbuf_put_num@temp,___lwmod@dividend
  4489  013942  C076  F068         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  4490  013946  0E00               	movlw	0
  4491  013948  0100               	movlb	0	; () banked
  4492  01394A  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  4493  01394C  0E0A               	movlw	10
  4494  01394E  6F69               	movwf	___lwmod@divisor& (0+255),b
  4495  013950  ECED  F09E         	call	___lwmod	;wreg free
  4496  013954  C067  F075         	movff	?___lwmod,ringbuf_put_num@temp
  4497  013958  C068  F076         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  4498                           
  4499                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  4500  01395C  C06F  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  4501  013960  C070  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  4502  013964  0100               	movlb	0	; () banked
  4503  013966  5175               	movf	ringbuf_put_num@temp& (0+255),w,b
  4504  013968  0F30               	addlw	48
  4505  01396A  0100               	movlb	0	; () banked
  4506  01396C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  4507  01396E  EC86  F094         	call	_ringbuf_put	;wreg free
  4508  013972                     l9090:
  4509  013972  0100               	movlb	0	; () banked
  4510  013974  0773               	decf	ringbuf_put_num@digits& (0+255),f,b
  4511  013976  0100               	movlb	0	; () banked
  4512  013978  2973               	incf	ringbuf_put_num@digits& (0+255),w,b
  4513  01397A  B4D8               	btfsc	status,2,c
  4514  01397C  0012               	return	
  4515  01397E  D7C0               	goto	l726
  4516  013980                     __end_of_ringbuf_put_num:
  4517                           	opt stack 0
  4518                           tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           prodh	equ	0xFF4
  4523                           prodl	equ	0xFF3
  4524                           intcon	equ	0xFF2
  4525                           postinc0	equ	0xFEE
  4526                           wreg	equ	0xFE8
  4527                           indf1	equ	0xFE7
  4528                           postdec1	equ	0xFE5
  4529                           fsr1h	equ	0xFE2
  4530                           fsr1l	equ	0xFE1
  4531                           indf2	equ	0xFDF
  4532                           postinc2	equ	0xFDE
  4533                           fsr2h	equ	0xFDA
  4534                           fsr2l	equ	0xFD9
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function _ringbuf_delete *****************
  4538 ;; Defined at:
  4539 ;;		line 66 in file "../My_library/My_ringbuf.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  4542 ;;		 -> terminal_task@command(8), 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;		None               void
  4547 ;; Registers used:
  4548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4554 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4558 ;;Total ram usage:        2 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:   11
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_terminal_task
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text11
  4569  014470                     __ptext11:
  4570                           	opt stack 0
  4571  014470                     _ringbuf_delete:
  4572                           	opt stack 18
  4573                           
  4574                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;incstack = 0
  4578  014470  0100               	movlb	0	; () banked
  4579  014472  EE20 F006          	lfsr	2,6
  4580  014476  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  4581  014478  26D9               	addwf	fsr2l,f,c
  4582  01447A  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  4583  01447C  22DA               	addwfc	fsr2h,f,c
  4584  01447E  0100               	movlb	0	; () banked
  4585  014480  EE10 F004          	lfsr	1,4
  4586  014484  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  4587  014486  26E1               	addwf	fsr1l,f,c
  4588  014488  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  4589  01448A  22E2               	addwfc	fsr1h,f,c
  4590  01448C  CFDE FFE6          	movff	postinc2,postinc1
  4591  014490  CFDD FFE5          	movff	postdec2,postdec1
  4592                           
  4593                           ; BSR set to: 0
  4594  014494  0012               	return		;funcret
  4595  014496                     __end_of_ringbuf_delete:
  4596                           	opt stack 0
  4597                           tblptru	equ	0xFF8
  4598                           tblptrh	equ	0xFF7
  4599                           tblptrl	equ	0xFF6
  4600                           tablat	equ	0xFF5
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           intcon	equ	0xFF2
  4604                           postinc0	equ	0xFEE
  4605                           wreg	equ	0xFE8
  4606                           indf1	equ	0xFE7
  4607                           postinc1	equ	0xFE6
  4608                           postdec1	equ	0xFE5
  4609                           fsr1h	equ	0xFE2
  4610                           fsr1l	equ	0xFE1
  4611                           indf2	equ	0xFDF
  4612                           postinc2	equ	0xFDE
  4613                           postdec2	equ	0xFDD
  4614                           fsr2h	equ	0xFDA
  4615                           fsr2l	equ	0xFD9
  4616                           status	equ	0xFD8
  4617                           
  4618 ;; *************** function _ringbuf_backspace *****************
  4619 ;; Defined at:
  4620 ;;		line 59 in file "../My_library/My_ringbuf.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  4623 ;;		 -> terminal_task@command(8), 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;		None               void
  4628 ;; Registers used:
  4629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4637 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4639 ;;Total ram usage:        6 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:   12
  4642 ;; This function calls:
  4643 ;;		_ringbuf_num
  4644 ;; This function is called by:
  4645 ;;		_terminal_task
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text12
  4650  0136D0                     __ptext12:
  4651                           	opt stack 0
  4652  0136D0                     _ringbuf_backspace:
  4653                           	opt stack 17
  4654                           
  4655                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;incstack = 0
  4659  0136D0  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  4660  0136D4  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  4661  0136D8  EC31  F090         	call	_ringbuf_num	;wreg free
  4662  0136DC  0100               	movlb	0	; () banked
  4663  0136DE  5160               	movf	?_ringbuf_num& (0+255),w,b
  4664  0136E0  0100               	movlb	0	; () banked
  4665  0136E2  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  4666  0136E4  B4D8               	btfsc	status,2,c
  4667  0136E6  0012               	return	
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  4671  0136E8  0100               	movlb	0	; () banked
  4672  0136EA  EE20 F004          	lfsr	2,4
  4673  0136EE  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  4674  0136F0  26D9               	addwf	fsr2l,f,c
  4675  0136F2  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4676  0136F4  22DA               	addwfc	fsr2h,f,c
  4677  0136F6  50DE               	movf	postinc2,w,c
  4678  0136F8  10DE               	iorwf	postinc2,w,c
  4679  0136FA  B4D8               	btfsc	status,2,c
  4680  0136FC  D00B               	goto	l9118
  4681                           
  4682                           ; BSR set to: 0
  4683  0136FE  0100               	movlb	0	; () banked
  4684  013700  EE20 F004          	lfsr	2,4
  4685  013704  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  4686  013706  26D9               	addwf	fsr2l,f,c
  4687  013708  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4688  01370A  22DA               	addwfc	fsr2h,f,c
  4689  01370C  06DE               	decf	postinc2,f,c
  4690  01370E  0E00               	movlw	0
  4691  013710  5ADD               	subwfb	postdec2,f,c
  4692  013712  0012               	return	
  4693  013714                     l9118:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  4697  013714  0EFF               	movlw	255
  4698  013716  0100               	movlb	0	; () banked
  4699  013718  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  4700  01371A  0EFF               	movlw	255
  4701  01371C  0100               	movlb	0	; () banked
  4702  01371E  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  4703  013720  0100               	movlb	0	; () banked
  4704  013722  EE20 F002          	lfsr	2,2
  4705  013726  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  4706  013728  26D9               	addwf	fsr2l,f,c
  4707  01372A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4708  01372C  22DA               	addwfc	fsr2h,f,c
  4709  01372E  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  4710  013732  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  4711  013736  0100               	movlb	0	; () banked
  4712  013738  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  4713  01373A  0100               	movlb	0	; () banked
  4714  01373C  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  4715  01373E  0100               	movlb	0	; () banked
  4716  013740  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  4717  013742  0100               	movlb	0	; () banked
  4718  013744  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  4719  013746  0100               	movlb	0	; () banked
  4720  013748  EE20 F004          	lfsr	2,4
  4721  01374C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  4722  01374E  26D9               	addwf	fsr2l,f,c
  4723  013750  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  4724  013752  22DA               	addwfc	fsr2h,f,c
  4725  013754  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  4726  013758  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  4727                           
  4728                           ; BSR set to: 0
  4729  01375C  0012               	return	
  4730  01375E                     __end_of_ringbuf_backspace:
  4731                           	opt stack 0
  4732                           tblptru	equ	0xFF8
  4733                           tblptrh	equ	0xFF7
  4734                           tblptrl	equ	0xFF6
  4735                           tablat	equ	0xFF5
  4736                           prodh	equ	0xFF4
  4737                           prodl	equ	0xFF3
  4738                           intcon	equ	0xFF2
  4739                           postinc0	equ	0xFEE
  4740                           wreg	equ	0xFE8
  4741                           indf1	equ	0xFE7
  4742                           postinc1	equ	0xFE6
  4743                           postdec1	equ	0xFE5
  4744                           fsr1h	equ	0xFE2
  4745                           fsr1l	equ	0xFE1
  4746                           indf2	equ	0xFDF
  4747                           postinc2	equ	0xFDE
  4748                           postdec2	equ	0xFDD
  4749                           fsr2h	equ	0xFDA
  4750                           fsr2l	equ	0xFD9
  4751                           status	equ	0xFD8
  4752                           
  4753 ;; *************** function _main_init *****************
  4754 ;; Defined at:
  4755 ;;		line 79 in file "main.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;		None               void
  4762 ;; Registers used:
  4763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4773 ;;Total ram usage:        0 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:   16
  4776 ;; This function calls:
  4777 ;;		_OSC_init
  4778 ;;		_RTCC_init
  4779 ;;		_ST7032_init
  4780 ;;		_UART_init
  4781 ;;		_USB_init
  4782 ;;		_ringbuf_init
  4783 ;;		_timer0_init
  4784 ;;		_timer1_init
  4785 ;;		_timer3_init
  4786 ;; This function is called by:
  4787 ;;		_main
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text13
  4792  01223A                     __ptext13:
  4793                           	opt stack 0
  4794  01223A                     _main_init:
  4795                           	opt stack 14
  4796                           
  4797                           ;main.c: 80: OSC_init();
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;incstack = 0
  4801  01223A  ECD6  F0A2         	call	_OSC_init	;wreg free
  4802                           
  4803                           ;main.c: 81: TRISA = 0b00010000;
  4804  01223E  0E10               	movlw	16
  4805  012240  6E92               	movwf	3986,c	;volatile
  4806                           
  4807                           ;main.c: 82: TRISB = 0b00110001;
  4808  012242  0E31               	movlw	49
  4809  012244  6E93               	movwf	3987,c	;volatile
  4810                           
  4811                           ;main.c: 83: TRISC = 0b10111010;
  4812  012246  0EBA               	movlw	186
  4813  012248  6E94               	movwf	3988,c	;volatile
  4814                           
  4815                           ;main.c: 84: ANCON0 = 0b11111111;
  4816  01224A  010F               	movlb	15	; () banked
  4817  01224C  6948               	setf	72,b	;volatile
  4818                           
  4819                           ; BSR set to: 15
  4820                           ;main.c: 85: ANCON1 = 0b00011111;
  4821  01224E  0E1F               	movlw	31
  4822  012250  010F               	movlb	15	; () banked
  4823  012252  6F49               	movwf	73,b	;volatile
  4824                           
  4825                           ; BSR set to: 15
  4826                           ;main.c: 86: INTCON2bits.RBPU = 0;
  4827  012254  9EF1               	bcf	intcon2,7,c	;volatile
  4828                           
  4829                           ; BSR set to: 15
  4830                           ;main.c: 88: timer0_init(6);
  4831  012256  0E06               	movlw	6
  4832  012258  ECB4  F0A0         	call	_timer0_init
  4833                           
  4834                           ;main.c: 89: timer1_init(0, 2);
  4835  01225C  0E02               	movlw	2
  4836  01225E  0100               	movlb	0	; () banked
  4837  012260  6F60               	movwf	timer1_init@clock_select& (0+255),b
  4838  012262  0E00               	movlw	0
  4839  012264  EC00  F0A0         	call	_timer1_init
  4840                           
  4841                           ;main.c: 90: timer3_init(2);
  4842  012268  0E02               	movlw	2
  4843  01226A  ECA4  F0A1         	call	_timer3_init
  4844                           
  4845                           ;main.c: 91: ST7032_init();
  4846  01226E  EC8C  F091         	call	_ST7032_init	;wreg free
  4847                           
  4848                           ;main.c: 92: RTCC_init();
  4849  012272  EC20  F09E         	call	_RTCC_init	;wreg free
  4850                           
  4851                           ;main.c: 94: USB_init();
  4852  012276  EC8C  F0A2         	call	_USB_init	;wreg free
  4853                           
  4854                           ;main.c: 95: static uint8_t usbtx[1000];
  4855                           ;main.c: 96: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
  4856  01227A  0E63               	movlw	low _usb_tx
  4857  01227C  0100               	movlb	0	; () banked
  4858  01227E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  4859  012280  0E01               	movlw	high _usb_tx
  4860  012282  0100               	movlb	0	; () banked
  4861  012284  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  4862  012286  0EB0               	movlw	low main_init@usbtx
  4863  012288  0100               	movlb	0	; () banked
  4864  01228A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  4865  01228C  0E08               	movlw	high main_init@usbtx
  4866  01228E  0100               	movlb	0	; () banked
  4867  012290  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4868  012292  0E03               	movlw	3
  4869  012294  0100               	movlb	0	; () banked
  4870  012296  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  4871  012298  0EE8               	movlw	232
  4872  01229A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4873  01229C  ECD6  F09F         	call	_ringbuf_init	;wreg free
  4874                           
  4875                           ;main.c: 97: static uint8_t usbrx[100];
  4876                           ;main.c: 98: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
  4877  0122A0  0E5B               	movlw	low _usb_rx
  4878  0122A2  0100               	movlb	0	; () banked
  4879  0122A4  6F60               	movwf	ringbuf_init@rb& (0+255),b
  4880  0122A6  0E01               	movlw	high _usb_rx
  4881  0122A8  0100               	movlb	0	; () banked
  4882  0122AA  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  4883  0122AC  0E64               	movlw	low main_init@usbrx
  4884  0122AE  0100               	movlb	0	; () banked
  4885  0122B0  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  4886  0122B2  0E03               	movlw	high main_init@usbrx
  4887  0122B4  0100               	movlb	0	; () banked
  4888  0122B6  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4889  0122B8  0E00               	movlw	0
  4890  0122BA  0100               	movlb	0	; () banked
  4891  0122BC  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  4892  0122BE  0E64               	movlw	100
  4893  0122C0  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4894  0122C2  ECD6  F09F         	call	_ringbuf_init	;wreg free
  4895                           
  4896                           ;main.c: 100: UART_init();
  4897  0122C6  EC4B  F0A2         	call	_UART_init	;wreg free
  4898                           
  4899                           ;main.c: 101: static uint8_t uarttx[1000];
  4900                           ;main.c: 102: ringbuf_init(&uart_tx, uarttx, sizeof (uarttx));
  4901  0122CA  0E53               	movlw	low _uart_tx
  4902  0122CC  0100               	movlb	0	; () banked
  4903  0122CE  6F60               	movwf	ringbuf_init@rb& (0+255),b
  4904  0122D0  0E01               	movlw	high _uart_tx
  4905  0122D2  0100               	movlb	0	; () banked
  4906  0122D4  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  4907  0122D6  0EC8               	movlw	low main_init@uarttx
  4908  0122D8  0100               	movlb	0	; () banked
  4909  0122DA  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  4910  0122DC  0E04               	movlw	high main_init@uarttx
  4911  0122DE  0100               	movlb	0	; () banked
  4912  0122E0  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4913  0122E2  0E03               	movlw	3
  4914  0122E4  0100               	movlb	0	; () banked
  4915  0122E6  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  4916  0122E8  0EE8               	movlw	232
  4917  0122EA  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4918  0122EC  ECD6  F09F         	call	_ringbuf_init	;wreg free
  4919                           
  4920                           ;main.c: 103: static uint8_t uartrx[100];
  4921                           ;main.c: 104: ringbuf_init(&uart_rx, uartrx, sizeof (uartrx));
  4922  0122F0  0E4B               	movlw	low _uart_rx
  4923  0122F2  0100               	movlb	0	; () banked
  4924  0122F4  6F60               	movwf	ringbuf_init@rb& (0+255),b
  4925  0122F6  0E01               	movlw	high _uart_rx
  4926  0122F8  0100               	movlb	0	; () banked
  4927  0122FA  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  4928  0122FC  0E00               	movlw	low main_init@uartrx
  4929  0122FE  0100               	movlb	0	; () banked
  4930  012300  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  4931  012302  0E03               	movlw	high main_init@uartrx
  4932  012304  0100               	movlb	0	; () banked
  4933  012306  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  4934  012308  0E00               	movlw	0
  4935  01230A  0100               	movlb	0	; () banked
  4936  01230C  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  4937  01230E  0E64               	movlw	100
  4938  012310  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  4939  012312  ECD6  F09F         	call	_ringbuf_init	;wreg free
  4940  012316  0012               	return		;funcret
  4941  012318                     __end_of_main_init:
  4942                           	opt stack 0
  4943                           tblptru	equ	0xFF8
  4944                           tblptrh	equ	0xFF7
  4945                           tblptrl	equ	0xFF6
  4946                           tablat	equ	0xFF5
  4947                           prodh	equ	0xFF4
  4948                           prodl	equ	0xFF3
  4949                           intcon	equ	0xFF2
  4950                           intcon2	equ	0xFF1
  4951                           postinc0	equ	0xFEE
  4952                           wreg	equ	0xFE8
  4953                           indf1	equ	0xFE7
  4954                           postinc1	equ	0xFE6
  4955                           postdec1	equ	0xFE5
  4956                           fsr1h	equ	0xFE2
  4957                           fsr1l	equ	0xFE1
  4958                           indf2	equ	0xFDF
  4959                           postinc2	equ	0xFDE
  4960                           postdec2	equ	0xFDD
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _timer3_init *****************
  4966 ;; Defined at:
  4967 ;;		line 101 in file "../My_library/My_PIC.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  prescaler       1    wreg     unsigned char 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  prescaler       1    1[BANK0 ] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;Total ram usage:        2 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:   11
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_main_init
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text14
  4996  014348                     __ptext14:
  4997                           	opt stack 0
  4998  014348                     _timer3_init:
  4999                           	opt stack 18
  5000                           
  5001                           ;incstack = 0
  5002                           ;timer3_init@prescaler stored from wreg
  5003  014348  0100               	movlb	0	; () banked
  5004  01434A  6F61               	movwf	timer3_init@prescaler& (0+255),b
  5005                           
  5006                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  5007  01434C  0E3F               	movlw	-193
  5008  01434E  1679               	andwf	3961,f,c	;volatile
  5009                           
  5010                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  5011  014350  9679               	bcf	3961,3,c	;volatile
  5012                           
  5013                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  5014  014352  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  5015  014356  0100               	movlb	0	; () banked
  5016  014358  3B60               	swapf	??_timer3_init& (0+255),f,b
  5017  01435A  5079               	movf	3961,w,c	;volatile
  5018  01435C  0100               	movlb	0	; () banked
  5019  01435E  1960               	xorwf	??_timer3_init& (0+255),w,b
  5020  014360  0BCF               	andlw	-49
  5021  014362  1960               	xorwf	??_timer3_init& (0+255),w,b
  5022  014364  6E79               	movwf	3961,c	;volatile
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  5026  014366  9E79               	bcf	3961,7,c	;volatile
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  5030  014368  8079               	bsf	3961,0,c	;volatile
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  5034  01436A  92A2               	bcf	4002,1,c	;volatile
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  5038  01436C  92A1               	bcf	4001,1,c	;volatile
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  5042  01436E  82A0               	bsf	4000,1,c	;volatile
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  5046  014370  8CF2               	bsf	intcon,6,c	;volatile
  5047                           
  5048                           ; BSR set to: 0
  5049  014372  0012               	return		;funcret
  5050  014374                     __end_of_timer3_init:
  5051                           	opt stack 0
  5052                           tblptru	equ	0xFF8
  5053                           tblptrh	equ	0xFF7
  5054                           tblptrl	equ	0xFF6
  5055                           tablat	equ	0xFF5
  5056                           prodh	equ	0xFF4
  5057                           prodl	equ	0xFF3
  5058                           intcon	equ	0xFF2
  5059                           intcon2	equ	0xFF1
  5060                           postinc0	equ	0xFEE
  5061                           wreg	equ	0xFE8
  5062                           indf1	equ	0xFE7
  5063                           postinc1	equ	0xFE6
  5064                           postdec1	equ	0xFE5
  5065                           fsr1h	equ	0xFE2
  5066                           fsr1l	equ	0xFE1
  5067                           indf2	equ	0xFDF
  5068                           postinc2	equ	0xFDE
  5069                           postdec2	equ	0xFDD
  5070                           fsr2h	equ	0xFDA
  5071                           fsr2l	equ	0xFD9
  5072                           status	equ	0xFD8
  5073                           
  5074 ;; *************** function _timer1_init *****************
  5075 ;; Defined at:
  5076 ;;		line 70 in file "../My_library/My_PIC.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  prescaler       1    wreg     unsigned char 
  5079 ;;  clock_select    1    0[BANK0 ] unsigned char 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  prescaler       1    2[BANK0 ] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;		None               void
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5091 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5093 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5094 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;Total ram usage:        3 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:   11
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_main_init
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text15
  5106  014000                     __ptext15:
  5107                           	opt stack 0
  5108  014000                     _timer1_init:
  5109                           	opt stack 18
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;incstack = 0
  5113                           ;timer1_init@prescaler stored from wreg
  5114  014000  0100               	movlb	0	; () banked
  5115  014002  6F62               	movwf	timer1_init@prescaler& (0+255),b
  5116                           
  5117                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  5118  014004  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  5119  014008  0100               	movlb	0	; () banked
  5120  01400A  3B61               	swapf	??_timer1_init& (0+255),f,b
  5121  01400C  4761               	rlncf	??_timer1_init& (0+255),f,b
  5122  01400E  4761               	rlncf	??_timer1_init& (0+255),f,b
  5123  014010  50CD               	movf	4045,w,c	;volatile
  5124  014012  0100               	movlb	0	; () banked
  5125  014014  1961               	xorwf	??_timer1_init& (0+255),w,b
  5126  014016  0B3F               	andlw	-193
  5127  014018  1961               	xorwf	??_timer1_init& (0+255),w,b
  5128  01401A  6ECD               	movwf	4045,c	;volatile
  5129                           
  5130                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  5131  01401C  0E02               	movlw	2
  5132  01401E  0100               	movlb	0	; () banked
  5133  014020  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  5134  014022  A4D8               	btfss	status,2,c
  5135  014024  D002               	goto	l662
  5136                           
  5137                           ; BSR set to: 0
  5138  014026  86CD               	bsf	4045,3,c	;volatile
  5139  014028  D001               	goto	l9042
  5140  01402A                     l662:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  5144  01402A  96CD               	bcf	4045,3,c	;volatile
  5145  01402C                     l9042:
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  5149  01402C  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  5150  014030  0100               	movlb	0	; () banked
  5151  014032  3B61               	swapf	??_timer1_init& (0+255),f,b
  5152  014034  50CD               	movf	4045,w,c	;volatile
  5153  014036  0100               	movlb	0	; () banked
  5154  014038  1961               	xorwf	??_timer1_init& (0+255),w,b
  5155  01403A  0BCF               	andlw	-49
  5156  01403C  1961               	xorwf	??_timer1_init& (0+255),w,b
  5157  01403E  6ECD               	movwf	4045,c	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  5161  014040  84CD               	bsf	4045,2,c	;volatile
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  5165  014042  92CD               	bcf	4045,1,c	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  5169  014044  80CD               	bsf	4045,0,c	;volatile
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  5173  014046  909F               	bcf	3999,0,c	;volatile
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  5177  014048  909E               	bcf	3998,0,c	;volatile
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  5181  01404A  809D               	bsf	3997,0,c	;volatile
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  5185  01404C  8CF2               	bsf	intcon,6,c	;volatile
  5186                           
  5187                           ; BSR set to: 0
  5188  01404E  0012               	return		;funcret
  5189  014050                     __end_of_timer1_init:
  5190                           	opt stack 0
  5191                           tblptru	equ	0xFF8
  5192                           tblptrh	equ	0xFF7
  5193                           tblptrl	equ	0xFF6
  5194                           tablat	equ	0xFF5
  5195                           prodh	equ	0xFF4
  5196                           prodl	equ	0xFF3
  5197                           intcon	equ	0xFF2
  5198                           intcon2	equ	0xFF1
  5199                           postinc0	equ	0xFEE
  5200                           wreg	equ	0xFE8
  5201                           indf1	equ	0xFE7
  5202                           postinc1	equ	0xFE6
  5203                           postdec1	equ	0xFE5
  5204                           fsr1h	equ	0xFE2
  5205                           fsr1l	equ	0xFE1
  5206                           indf2	equ	0xFDF
  5207                           postinc2	equ	0xFDE
  5208                           postdec2	equ	0xFDD
  5209                           fsr2h	equ	0xFDA
  5210                           fsr2l	equ	0xFD9
  5211                           status	equ	0xFD8
  5212                           
  5213 ;; *************** function _timer0_init *****************
  5214 ;; Defined at:
  5215 ;;		line 34 in file "../My_library/My_PIC.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  prescaler       1    wreg     unsigned char 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  prescaler       1    1[BANK0 ] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;		None               void
  5222 ;; Registers used:
  5223 ;;		wreg, status,2, status,0
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5231 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5233 ;;Total ram usage:        2 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:   11
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_main_init
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text16
  5244  014168                     __ptext16:
  5245                           	opt stack 0
  5246  014168                     _timer0_init:
  5247                           	opt stack 18
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;incstack = 0
  5251                           ;timer0_init@prescaler stored from wreg
  5252  014168  0100               	movlb	0	; () banked
  5253  01416A  6F61               	movwf	timer0_init@prescaler& (0+255),b
  5254                           
  5255                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  5256  01416C  8ED5               	bsf	4053,7,c	;volatile
  5257                           
  5258                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  5259  01416E  8CD5               	bsf	4053,6,c	;volatile
  5260                           
  5261                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  5262  014170  9AD5               	bcf	4053,5,c	;volatile
  5263                           
  5264                           ;My_PIC.c: 38: if (prescaler == 0) {
  5265  014172  0100               	movlb	0	; () banked
  5266  014174  5161               	movf	timer0_init@prescaler& (0+255),w,b
  5267  014176  0100               	movlb	0	; () banked
  5268  014178  A4D8               	btfss	status,2,c
  5269  01417A  D002               	goto	l657
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  5273  01417C  86D5               	bsf	4053,3,c	;volatile
  5274                           
  5275                           ;My_PIC.c: 40: } else {
  5276  01417E  D00C               	goto	l9030
  5277  014180                     l657:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  5281  014180  96D5               	bcf	4053,3,c	;volatile
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  5285  014182  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  5286  014186  0EFF               	movlw	255
  5287  014188  0100               	movlb	0	; () banked
  5288  01418A  2760               	addwf	??_timer0_init& (0+255),f,b
  5289  01418C  50D5               	movf	4053,w,c	;volatile
  5290  01418E  0100               	movlb	0	; () banked
  5291  014190  1960               	xorwf	??_timer0_init& (0+255),w,b
  5292  014192  0BF8               	andlw	-8
  5293  014194  1960               	xorwf	??_timer0_init& (0+255),w,b
  5294  014196  6ED5               	movwf	4053,c	;volatile
  5295  014198                     l9030:
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;My_PIC.c: 43: }
  5299                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  5300  014198  8AF2               	bsf	intcon,5,c	;volatile
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  5304  01419A  94F2               	bcf	intcon,2,c	;volatile
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  5308  01419C  94F1               	bcf	intcon2,2,c	;volatile
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  5312  01419E  8CF2               	bsf	intcon,6,c	;volatile
  5313                           
  5314                           ; BSR set to: 0
  5315  0141A0  0012               	return		;funcret
  5316  0141A2                     __end_of_timer0_init:
  5317                           	opt stack 0
  5318                           tblptru	equ	0xFF8
  5319                           tblptrh	equ	0xFF7
  5320                           tblptrl	equ	0xFF6
  5321                           tablat	equ	0xFF5
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           intcon	equ	0xFF2
  5325                           intcon2	equ	0xFF1
  5326                           postinc0	equ	0xFEE
  5327                           wreg	equ	0xFE8
  5328                           indf1	equ	0xFE7
  5329                           postinc1	equ	0xFE6
  5330                           postdec1	equ	0xFE5
  5331                           fsr1h	equ	0xFE2
  5332                           fsr1l	equ	0xFE1
  5333                           indf2	equ	0xFDF
  5334                           postinc2	equ	0xFDE
  5335                           postdec2	equ	0xFDD
  5336                           fsr2h	equ	0xFDA
  5337                           fsr2l	equ	0xFD9
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _USB_init *****************
  5341 ;; Defined at:
  5342 ;;		line 11 in file "../My_library/My_usb_cdc.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;		None               void
  5349 ;; Registers used:
  5350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;Total ram usage:        0 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:   13
  5363 ;; This function calls:
  5364 ;;		_USBDeviceAttach
  5365 ;;		_USBDeviceInit
  5366 ;; This function is called by:
  5367 ;;		_main_init
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text17
  5372  014518                     __ptext17:
  5373                           	opt stack 0
  5374  014518                     _USB_init:
  5375                           	opt stack 16
  5376                           
  5377                           ;My_usb_cdc.c: 12: USBDeviceInit();
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;incstack = 0
  5381  014518  EC02  F08B         	call	_USBDeviceInit	;wreg free
  5382                           
  5383                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  5384  01451C  ECEE  F0A0         	call	_USBDeviceAttach	;wreg free
  5385                           
  5386                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
  5387  014520  0E00               	movlw	0
  5388  014522  0101               	movlb	1	; () banked
  5389  014524  6F73               	movwf	_line_coding& (0+255),b
  5390  014526  0EC2               	movlw	194
  5391  014528  6F74               	movwf	(_line_coding+1)& (0+255),b
  5392  01452A  0E01               	movlw	1
  5393  01452C  6F75               	movwf	(_line_coding+2)& (0+255),b
  5394  01452E  0E00               	movlw	0
  5395  014530  6F76               	movwf	(_line_coding+3)& (0+255),b
  5396                           
  5397                           ; BSR set to: 1
  5398  014532  0012               	return		;funcret
  5399  014534                     __end_of_USB_init:
  5400                           	opt stack 0
  5401                           tblptru	equ	0xFF8
  5402                           tblptrh	equ	0xFF7
  5403                           tblptrl	equ	0xFF6
  5404                           tablat	equ	0xFF5
  5405                           prodh	equ	0xFF4
  5406                           prodl	equ	0xFF3
  5407                           intcon	equ	0xFF2
  5408                           intcon2	equ	0xFF1
  5409                           postinc0	equ	0xFEE
  5410                           wreg	equ	0xFE8
  5411                           indf1	equ	0xFE7
  5412                           postinc1	equ	0xFE6
  5413                           postdec1	equ	0xFE5
  5414                           fsr1h	equ	0xFE2
  5415                           fsr1l	equ	0xFE1
  5416                           indf2	equ	0xFDF
  5417                           postinc2	equ	0xFDE
  5418                           postdec2	equ	0xFDD
  5419                           fsr2h	equ	0xFDA
  5420                           fsr2l	equ	0xFD9
  5421                           status	equ	0xFD8
  5422                           
  5423 ;; *************** function _USBDeviceInit *****************
  5424 ;; Defined at:
  5425 ;;		line 298 in file "../My_library/usb/usb_device.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;		None
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;  i               1    8[BANK0 ] unsigned char 
  5430 ;; Return value:  Size  Location     Type
  5431 ;;		None               void
  5432 ;; Registers used:
  5433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5442 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5443 ;;Total ram usage:        1 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:   12
  5446 ;; This function calls:
  5447 ;;		_memset
  5448 ;; This function is called by:
  5449 ;;		_USB_init
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text18
  5454  011604                     __ptext18:
  5455                           	opt stack 0
  5456  011604                     _USBDeviceInit:
  5457                           	opt stack 16
  5458                           
  5459                           ;usb_device.c: 300: uint8_t i;
  5460                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  5461                           
  5462                           ; BSR set to: 1
  5463                           ;incstack = 0
  5464  011604  98A0               	bcf	4000,4,c	;volatile
  5465                           
  5466                           ;usb_device.c: 305: {UEIR = 0;};
  5467  011606  0E00               	movlw	0
  5468  011608  6E63               	movwf	3939,c	;volatile
  5469                           
  5470                           ;usb_device.c: 308: {UIR = 0;};
  5471  01160A  0E00               	movlw	0
  5472  01160C  6E62               	movwf	3938,c	;volatile
  5473                           
  5474                           ;usb_device.c: 311: UEP0 = 0;
  5475  01160E  0E00               	movlw	0
  5476  011610  010F               	movlb	15	; () banked
  5477  011612  6F26               	movwf	38,b	;volatile
  5478                           
  5479                           ; BSR set to: 15
  5480                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  5481  011614  0E27               	movlw	39
  5482  011616  0100               	movlb	0	; () banked
  5483  011618  6F60               	movwf	memset@p1& (0+255),b
  5484  01161A  0E0F               	movlw	15
  5485  01161C  0100               	movlb	0	; () banked
  5486  01161E  6F61               	movwf	(memset@p1+1)& (0+255),b
  5487  011620  0E00               	movlw	0
  5488  011622  0100               	movlb	0	; () banked
  5489  011624  6F63               	movwf	(memset@c+1)& (0+255),b
  5490  011626  0E00               	movlw	0
  5491  011628  6F62               	movwf	memset@c& (0+255),b
  5492  01162A  0E00               	movlw	0
  5493  01162C  0100               	movlb	0	; () banked
  5494  01162E  6F65               	movwf	(memset@n+1)& (0+255),b
  5495  011630  0E02               	movlw	2
  5496  011632  6F64               	movwf	memset@n& (0+255),b
  5497  011634  EC41  F0A1         	call	_memset	;wreg free
  5498                           
  5499                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5500  011638  0E16               	movlw	22
  5501  01163A  010F               	movlb	15	; () banked
  5502  01163C  6F39               	movwf	57,b	;volatile
  5503                           
  5504                           ; BSR set to: 15
  5505  01163E  0E9F               	movlw	159
  5506  011640  010F               	movlb	15	; () banked
  5507  011642  6F37               	movwf	55,b	;volatile
  5508                           
  5509                           ; BSR set to: 15
  5510  011644  0E7B               	movlw	123
  5511  011646  010F               	movlb	15	; () banked
  5512  011648  6F36               	movwf	54,b	;volatile
  5513                           
  5514                           ; BSR set to: 15
  5515                           ;usb_device.c: 318: ;
  5516                           ;usb_device.c: 321: ;
  5517                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  5518  01164A  0E00               	movlw	0
  5519  01164C  0100               	movlb	0	; () banked
  5520  01164E  6F68               	movwf	USBDeviceInit@i& (0+255),b
  5521  011650                     l8756:
  5522                           
  5523                           ; BSR set to: 0
  5524  011650  0E0B               	movlw	11
  5525  011652  0100               	movlb	0	; () banked
  5526  011654  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  5527  011656  D001               	goto	l8760
  5528  011658  D010               	goto	l146
  5529  01165A                     l8760:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;usb_device.c: 325: {
  5533                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  5534  01165A  0100               	movlb	0	; () banked
  5535  01165C  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5536  01165E  0D04               	mullw	4
  5537  011660  0E00               	movlw	0
  5538  011662  24F3               	addwf	prodl,w,c
  5539  011664  6ED9               	movwf	fsr2l,c
  5540  011666  0E0D               	movlw	13
  5541  011668  20F4               	addwfc	prodh,w,c
  5542  01166A  6EDA               	movwf	fsr2h,c
  5543  01166C  6ADE               	clrf	postinc2,c
  5544  01166E  6ADE               	clrf	postinc2,c
  5545  011670  6ADE               	clrf	postinc2,c
  5546  011672  6ADD               	clrf	postdec2,c
  5547                           
  5548                           ; BSR set to: 0
  5549  011674  0100               	movlb	0	; () banked
  5550  011676  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  5551  011678  D7EB               	goto	l8756
  5552  01167A                     l146:
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;usb_device.c: 327: }
  5556                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  5557  01167A  8C65               	bsf	3941,6,c	;volatile
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;usb_device.c: 333: UADDR = 0x00;
  5561  01167C  0E00               	movlw	0
  5562  01167E  010F               	movlb	15	; () banked
  5563  011680  6F38               	movwf	56,b	;volatile
  5564                           
  5565                           ; BSR set to: 15
  5566                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  5567  011682  9865               	bcf	3941,4,c	;volatile
  5568                           
  5569                           ; BSR set to: 15
  5570                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  5571  011684  9C65               	bcf	3941,6,c	;volatile
  5572                           
  5573                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  5574  011686  D009               	goto	l8780
  5575  011688                     l8772:
  5576                           
  5577                           ;usb_device.c: 343: {
  5578                           ;usb_device.c: 344: (UIR &= 0xF7);
  5579  011688  9662               	bcf	3938,3,c	;volatile
  5580                           
  5581                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  5582  01168A  0E00               	movlw	0
  5583  01168C  6E0D               	movwf	_inPipes+3,c	;volatile
  5584                           
  5585                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  5586  01168E  0E00               	movlw	0
  5587  011690  6E04               	movwf	_outPipes+3,c	;volatile
  5588                           
  5589                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  5590  011692  0E00               	movlw	0
  5591  011694  6E06               	movwf	_outPipes+5,c	;volatile
  5592  011696  0E00               	movlw	0
  5593  011698  6E05               	movwf	_outPipes+4,c	;volatile
  5594  01169A                     l8780:
  5595  01169A  B662               	btfsc	3938,3,c	;volatile
  5596  01169C  D7F5               	goto	l8772
  5597                           
  5598                           ;usb_device.c: 349: }
  5599                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  5600  01169E  0E01               	movlw	1
  5601  0116A0  6E24               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  5602                           
  5603                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  5604  0116A2  0E01               	movlw	1
  5605  0116A4  6E25               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  5606                           
  5607                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  5608  0116A6  0E00               	movlw	0
  5609  0116A8  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
  5610                           
  5611                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  5612  0116AA  0E00               	movlw	0
  5613  0116AC  6E21               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  5614                           
  5615                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  5616  0116AE  0E00               	movlw	0
  5617  0116B0  0101               	movlb	1	; () banked
  5618  0116B2  6F2E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  5619                           
  5620                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  5621  0116B4  0E00               	movlw	0
  5622  0116B6  0100               	movlb	0	; () banked
  5623  0116B8  6F68               	movwf	USBDeviceInit@i& (0+255),b
  5624  0116BA                     l8784:
  5625                           
  5626                           ; BSR set to: 0
  5627  0116BA  0E02               	movlw	2
  5628  0116BC  0100               	movlb	0	; () banked
  5629  0116BE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  5630  0116C0  D001               	goto	l8788
  5631  0116C2  D033               	goto	l8794
  5632  0116C4                     l8788:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;usb_device.c: 363: {
  5636                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  5637  0116C4  0100               	movlb	0	; () banked
  5638  0116C6  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5639  0116C8  0D02               	mullw	2
  5640  0116CA  0E10               	movlw	low _pBDTEntryIn
  5641  0116CC  24F3               	addwf	prodl,w,c
  5642  0116CE  6ED9               	movwf	fsr2l,c
  5643  0116D0  0E00               	movlw	high _pBDTEntryIn
  5644  0116D2  20F4               	addwfc	prodh,w,c
  5645  0116D4  6EDA               	movwf	fsr2h,c
  5646  0116D6  0E00               	movlw	0
  5647  0116D8  6EDE               	movwf	postinc2,c
  5648  0116DA  0E00               	movlw	0
  5649  0116DC  6EDD               	movwf	postdec2,c
  5650                           
  5651                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  5652  0116DE  0100               	movlb	0	; () banked
  5653  0116E0  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5654  0116E2  0D02               	mullw	2
  5655  0116E4  0E0A               	movlw	low _pBDTEntryOut
  5656  0116E6  24F3               	addwf	prodl,w,c
  5657  0116E8  6ED9               	movwf	fsr2l,c
  5658  0116EA  0E01               	movlw	high _pBDTEntryOut
  5659  0116EC  20F4               	addwfc	prodh,w,c
  5660  0116EE  6EDA               	movwf	fsr2h,c
  5661  0116F0  0E00               	movlw	0
  5662  0116F2  6EDE               	movwf	postinc2,c
  5663  0116F4  0E00               	movlw	0
  5664  0116F6  6EDD               	movwf	postdec2,c
  5665                           
  5666                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  5667  0116F8  0100               	movlb	0	; () banked
  5668  0116FA  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5669  0116FC  0D01               	mullw	1
  5670  0116FE  0E16               	movlw	low _ep_data_in
  5671  011700  24F3               	addwf	prodl,w,c
  5672  011702  6ED9               	movwf	fsr2l,c
  5673  011704  0E00               	movlw	high _ep_data_in
  5674  011706  20F4               	addwfc	prodh,w,c
  5675  011708  6EDA               	movwf	fsr2h,c
  5676  01170A  0E00               	movlw	0
  5677  01170C  6EDF               	movwf	indf2,c
  5678                           
  5679                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  5680  01170E  0100               	movlb	0	; () banked
  5681  011710  5168               	movf	USBDeviceInit@i& (0+255),w,b
  5682  011712  0D01               	mullw	1
  5683  011714  0E18               	movlw	low _ep_data_out
  5684  011716  24F3               	addwf	prodl,w,c
  5685  011718  6ED9               	movwf	fsr2l,c
  5686  01171A  0E01               	movlw	high _ep_data_out
  5687  01171C  20F4               	addwfc	prodh,w,c
  5688  01171E  6EDA               	movwf	fsr2h,c
  5689  011720  0E00               	movlw	0
  5690  011722  6EDF               	movwf	indf2,c
  5691                           
  5692                           ; BSR set to: 0
  5693  011724  0100               	movlb	0	; () banked
  5694  011726  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  5695  011728  D7C8               	goto	l8784
  5696  01172A                     l8794:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;usb_device.c: 368: }
  5700                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5701  01172A  0E08               	movlw	8
  5702  01172C  6E10               	movwf	_pBDTEntryIn,c
  5703  01172E  0E0D               	movlw	13
  5704  011730  6E11               	movwf	_pBDTEntryIn+1,c
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  5708  011732  0E16               	movlw	22
  5709  011734  010F               	movlb	15	; () banked
  5710  011736  6F26               	movwf	38,b	;volatile
  5711                           
  5712                           ; BSR set to: 15
  5713                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  5714  011738  0E0D               	movlw	13
  5715  01173A  010D               	movlb	13	; () banked
  5716  01173C  6F03               	movwf	3,b	;volatile
  5717  01173E  0E30               	movlw	48
  5718  011740  6F02               	movwf	2,b	;volatile
  5719                           
  5720                           ; BSR set to: 13
  5721                           ;usb_device.c: 376: BDT[0].CNT = 8;
  5722  011742  0E08               	movlw	8
  5723  011744  010D               	movlb	13	; () banked
  5724  011746  6F01               	movwf	1,b	;volatile
  5725                           
  5726                           ; BSR set to: 13
  5727                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  5728  011748  0E04               	movlw	4
  5729  01174A  010D               	movlb	13	; () banked
  5730  01174C  6F00               	movwf	0,b	;volatile
  5731                           
  5732                           ; BSR set to: 13
  5733                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  5734  01174E  010D               	movlb	13	; () banked
  5735  011750  8F00               	bsf	0,7,b	;volatile
  5736                           
  5737                           ; BSR set to: 13
  5738                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  5739  011752  0E00               	movlw	0
  5740  011754  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  5741                           
  5742                           ; BSR set to: 13
  5743                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  5744  011756  0E00               	movlw	0
  5745  011758  6E23               	movwf	_USBDeviceState,c	;volatile
  5746                           
  5747                           ; BSR set to: 13
  5748  01175A  0012               	return		;funcret
  5749  01175C                     __end_of_USBDeviceInit:
  5750                           	opt stack 0
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           prodh	equ	0xFF4
  5756                           prodl	equ	0xFF3
  5757                           intcon	equ	0xFF2
  5758                           intcon2	equ	0xFF1
  5759                           postinc0	equ	0xFEE
  5760                           wreg	equ	0xFE8
  5761                           indf1	equ	0xFE7
  5762                           postinc1	equ	0xFE6
  5763                           postdec1	equ	0xFE5
  5764                           fsr1h	equ	0xFE2
  5765                           fsr1l	equ	0xFE1
  5766                           indf2	equ	0xFDF
  5767                           postinc2	equ	0xFDE
  5768                           postdec2	equ	0xFDD
  5769                           fsr2h	equ	0xFDA
  5770                           fsr2l	equ	0xFD9
  5771                           status	equ	0xFD8
  5772                           
  5773 ;; *************** function _memset *****************
  5774 ;; Defined at:
  5775 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  p1              2    0[BANK0 ] PTR void 
  5778 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  5779 ;;  c               2    2[BANK0 ] int 
  5780 ;;  n               2    4[BANK0 ] unsigned int 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  p               2    6[BANK0 ] PTR unsigned char 
  5783 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  2    0[BANK0 ] PTR void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5793 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5796 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5797 ;;Total ram usage:        8 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:   11
  5800 ;; This function calls:
  5801 ;;		Nothing
  5802 ;; This function is called by:
  5803 ;;		_USBDeviceInit
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text19
  5808  014282                     __ptext19:
  5809                           	opt stack 0
  5810  014282                     _memset:
  5811                           	opt stack 16
  5812                           
  5813                           ; BSR set to: 13
  5814                           ;incstack = 0
  5815  014282  C060  F066         	movff	memset@p1,memset@p
  5816  014286  C061  F067         	movff	memset@p1+1,memset@p+1
  5817  01428A  D009               	goto	l8654
  5818  01428C                     l8650:
  5819  01428C  C066  FFD9         	movff	memset@p,fsr2l
  5820  014290  C067  FFDA         	movff	memset@p+1,fsr2h
  5821  014294  C062  FFDF         	movff	memset@c,indf2
  5822  014298  0100               	movlb	0	; () banked
  5823  01429A  4B66               	infsnz	memset@p& (0+255),f,b
  5824  01429C  2B67               	incf	(memset@p+1)& (0+255),f,b
  5825  01429E                     l8654:
  5826  01429E  0100               	movlb	0	; () banked
  5827  0142A0  0764               	decf	memset@n& (0+255),f,b
  5828  0142A2  A0D8               	btfss	status,0,c
  5829  0142A4  0765               	decf	(memset@n+1)& (0+255),f,b
  5830  0142A6  0100               	movlb	0	; () banked
  5831  0142A8  2964               	incf	memset@n& (0+255),w,b
  5832  0142AA  E1F0               	bnz	l8650
  5833  0142AC  0100               	movlb	0	; () banked
  5834  0142AE  2965               	incf	(memset@n+1)& (0+255),w,b
  5835  0142B0  B4D8               	btfsc	status,2,c
  5836  0142B2  0012               	return	
  5837  0142B4  D7EB               	goto	l8650
  5838  0142B6                     __end_of_memset:
  5839                           	opt stack 0
  5840                           tblptru	equ	0xFF8
  5841                           tblptrh	equ	0xFF7
  5842                           tblptrl	equ	0xFF6
  5843                           tablat	equ	0xFF5
  5844                           prodh	equ	0xFF4
  5845                           prodl	equ	0xFF3
  5846                           intcon	equ	0xFF2
  5847                           intcon2	equ	0xFF1
  5848                           postinc0	equ	0xFEE
  5849                           wreg	equ	0xFE8
  5850                           indf1	equ	0xFE7
  5851                           postinc1	equ	0xFE6
  5852                           postdec1	equ	0xFE5
  5853                           fsr1h	equ	0xFE2
  5854                           fsr1l	equ	0xFE1
  5855                           indf2	equ	0xFDF
  5856                           postinc2	equ	0xFDE
  5857                           postdec2	equ	0xFDD
  5858                           fsr2h	equ	0xFDA
  5859                           fsr2l	equ	0xFD9
  5860                           status	equ	0xFD8
  5861                           
  5862 ;; *************** function _USBDeviceAttach *****************
  5863 ;; Defined at:
  5864 ;;		line 1352 in file "../My_library/usb/usb_device.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;		None               void
  5871 ;; Registers used:
  5872 ;;		wreg, status,2
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5882 ;;Total ram usage:        0 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:   11
  5885 ;; This function calls:
  5886 ;;		Nothing
  5887 ;; This function is called by:
  5888 ;;		_USB_init
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text20
  5893  0141DC                     __ptext20:
  5894                           	opt stack 0
  5895  0141DC                     _USBDeviceAttach:
  5896                           	opt stack 17
  5897                           
  5898                           ;usb_device.c: 1356: {
  5899                           ;usb_device.c: 1357: if(1 == 1)
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;incstack = 0
  5903  0141DC  5023               	movf	_USBDeviceState,w,c	;volatile
  5904  0141DE  A4D8               	btfss	status,2,c
  5905  0141E0  0012               	return	
  5906                           
  5907                           ;usb_device.c: 1358: {
  5908                           ;usb_device.c: 1360: UCON = 0;
  5909  0141E2  0E00               	movlw	0
  5910  0141E4  6E65               	movwf	3941,c	;volatile
  5911                           
  5912                           ;usb_device.c: 1363: UIE = 0;
  5913  0141E6  0E00               	movlw	0
  5914  0141E8  010F               	movlb	15	; () banked
  5915  0141EA  6F36               	movwf	54,b	;volatile
  5916                           
  5917                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  5918  0141EC  0E16               	movlw	22
  5919  0141EE  010F               	movlb	15	; () banked
  5920  0141F0  6F39               	movwf	57,b	;volatile
  5921  0141F2  0E9F               	movlw	159
  5922  0141F4  010F               	movlb	15	; () banked
  5923  0141F6  6F37               	movwf	55,b	;volatile
  5924  0141F8  0E7B               	movlw	123
  5925  0141FA  010F               	movlb	15	; () banked
  5926  0141FC  6F36               	movwf	54,b	;volatile
  5927                           
  5928                           ; BSR set to: 15
  5929                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  5930  0141FE  8ED0               	bsf	4048,7,c	;volatile
  5931                           
  5932                           ; BSR set to: 15
  5933  014200  88A2               	bsf	4002,4,c	;volatile
  5934                           
  5935                           ; BSR set to: 15
  5936  014202  88A0               	bsf	4000,4,c	;volatile
  5937                           
  5938                           ; BSR set to: 15
  5939  014204  8EF2               	bsf	intcon,7,c	;volatile
  5940                           
  5941                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  5942  014206  D001               	goto	l207
  5943  014208                     l208:
  5944  014208  8665               	bsf	3941,3,c	;volatile
  5945  01420A                     l207:
  5946  01420A  A665               	btfss	3941,3,c	;volatile
  5947  01420C  D7FD               	goto	l208
  5948                           
  5949                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  5950  01420E  0E01               	movlw	1
  5951  014210  6E23               	movwf	_USBDeviceState,c	;volatile
  5952  014212  0012               	return	
  5953  014214                     __end_of_USBDeviceAttach:
  5954                           	opt stack 0
  5955                           tblptru	equ	0xFF8
  5956                           tblptrh	equ	0xFF7
  5957                           tblptrl	equ	0xFF6
  5958                           tablat	equ	0xFF5
  5959                           prodh	equ	0xFF4
  5960                           prodl	equ	0xFF3
  5961                           intcon	equ	0xFF2
  5962                           intcon2	equ	0xFF1
  5963                           postinc0	equ	0xFEE
  5964                           wreg	equ	0xFE8
  5965                           indf1	equ	0xFE7
  5966                           postinc1	equ	0xFE6
  5967                           postdec1	equ	0xFE5
  5968                           fsr1h	equ	0xFE2
  5969                           fsr1l	equ	0xFE1
  5970                           indf2	equ	0xFDF
  5971                           postinc2	equ	0xFDE
  5972                           postdec2	equ	0xFDD
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8
  5976                           
  5977 ;; *************** function _UART_init *****************
  5978 ;; Defined at:
  5979 ;;		line 10 in file "../My_library/My_UART.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;		None               void
  5986 ;; Registers used:
  5987 ;;		wreg, status,2
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;Total ram usage:        0 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:   11
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_main_init
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text21
  6008  014496                     __ptext21:
  6009                           	opt stack 0
  6010  014496                     _UART_init:
  6011                           	opt stack 18
  6012                           
  6013                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  6014                           
  6015                           ;incstack = 0
  6016  014496  9CAD               	bcf	4013,6,c	;volatile
  6017                           
  6018                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  6019  014498  8AAD               	bsf	4013,5,c	;volatile
  6020                           
  6021                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  6022  01449A  98AD               	bcf	4013,4,c	;volatile
  6023                           
  6024                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  6025  01449C  94AD               	bcf	4013,2,c	;volatile
  6026                           
  6027                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  6028  01449E  8EAC               	bsf	4012,7,c	;volatile
  6029                           
  6030                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  6031  0144A0  9CAC               	bcf	4012,6,c	;volatile
  6032                           
  6033                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  6034  0144A2  88AC               	bsf	4012,4,c	;volatile
  6035                           
  6036                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  6037  0144A4  867E               	bsf	3966,3,c	;volatile
  6038                           
  6039                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  6040  0144A6  0E19               	movlw	25
  6041  0144A8  6EB0               	movwf	4016,c	;volatile
  6042                           
  6043                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  6044  0144AA  0E00               	movlw	0
  6045  0144AC  6E7F               	movwf	3967,c	;volatile
  6046                           
  6047                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  6048  0144AE  9A9F               	bcf	3999,5,c	;volatile
  6049                           
  6050                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  6051  0144B0  989F               	bcf	3999,4,c	;volatile
  6052                           
  6053                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  6054  0144B2  8A9D               	bsf	3997,5,c	;volatile
  6055                           
  6056                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  6057  0144B4  8CF2               	bsf	intcon,6,c	;volatile
  6058  0144B6  0012               	return		;funcret
  6059  0144B8                     __end_of_UART_init:
  6060                           	opt stack 0
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon	equ	0xFF2
  6068                           intcon2	equ	0xFF1
  6069                           postinc0	equ	0xFEE
  6070                           wreg	equ	0xFE8
  6071                           indf1	equ	0xFE7
  6072                           postinc1	equ	0xFE6
  6073                           postdec1	equ	0xFE5
  6074                           fsr1h	equ	0xFE2
  6075                           fsr1l	equ	0xFE1
  6076                           indf2	equ	0xFDF
  6077                           postinc2	equ	0xFDE
  6078                           postdec2	equ	0xFDD
  6079                           fsr2h	equ	0xFDA
  6080                           fsr2l	equ	0xFD9
  6081                           status	equ	0xFD8
  6082                           
  6083 ;; *************** function _ST7032_init *****************
  6084 ;; Defined at:
  6085 ;;		line 62 in file "../My_library/My_ST7032.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;		None
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;		None               void
  6092 ;; Registers used:
  6093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;Total ram usage:        0 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:   15
  6106 ;; This function calls:
  6107 ;;		_ST7032_clear
  6108 ;;		_ST7032_command
  6109 ;;		_ringbuf_init
  6110 ;;		_ringbuf_put
  6111 ;; This function is called by:
  6112 ;;		_main_init
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text22
  6117  012318                     __ptext22:
  6118                           	opt stack 0
  6119  012318                     _ST7032_init:
  6120                           	opt stack 14
  6121                           
  6122                           ;My_ST7032.c: 63: SSP1STAT = 0b10000000;
  6123                           
  6124                           ;incstack = 0
  6125  012318  0E80               	movlw	128
  6126  01231A  6EC7               	movwf	4039,c	;volatile
  6127                           
  6128                           ;My_ST7032.c: 64: SSP1CON1 = 0b00101000;
  6129  01231C  0E28               	movlw	40
  6130  01231E  6EC6               	movwf	4038,c	;volatile
  6131                           
  6132                           ;My_ST7032.c: 65: SSP1ADD = 0x13;
  6133  012320  0E13               	movlw	19
  6134  012322  6EC8               	movwf	4040,c	;volatile
  6135                           
  6136                           ;My_ST7032.c: 66: PIE1bits.SSP1IE = 1;
  6137  012324  869D               	bsf	3997,3,c	;volatile
  6138                           
  6139                           ;My_ST7032.c: 67: IPR1bits.SSP1IP = 0;
  6140  012326  969F               	bcf	3999,3,c	;volatile
  6141                           
  6142                           ;My_ST7032.c: 68: PIR1bits.SSP1IF = 0;
  6143  012328  969E               	bcf	3998,3,c	;volatile
  6144                           
  6145                           ;My_ST7032.c: 69: PIE2bits.BCL1IE = 1;
  6146  01232A  86A0               	bsf	4000,3,c	;volatile
  6147                           
  6148                           ;My_ST7032.c: 70: IPR2bits.BCL1IP = 0;
  6149  01232C  96A2               	bcf	4002,3,c	;volatile
  6150                           
  6151                           ;My_ST7032.c: 71: PIR2bits.BCL1IF = 0;
  6152  01232E  96A1               	bcf	4001,3,c	;volatile
  6153                           
  6154                           ;My_ST7032.c: 72: INTCONbits.PEIE = 1;
  6155  012330  8CF2               	bsf	intcon,6,c	;volatile
  6156                           
  6157                           ;My_ST7032.c: 74: static char buf[200];
  6158                           ;My_ST7032.c: 75: ringbuf_init(&lcd_tx, buf, sizeof (buf));
  6159  012332  0ED4               	movlw	low _lcd_tx
  6160  012334  0100               	movlb	0	; () banked
  6161  012336  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6162  012338  0E00               	movlw	high _lcd_tx
  6163  01233A  0100               	movlb	0	; () banked
  6164  01233C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6165  01233E  0E00               	movlw	low ST7032_init@buf
  6166  012340  0100               	movlb	0	; () banked
  6167  012342  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6168  012344  0E04               	movlw	high ST7032_init@buf
  6169  012346  0100               	movlb	0	; () banked
  6170  012348  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6171  01234A  0E00               	movlw	0
  6172  01234C  0100               	movlb	0	; () banked
  6173  01234E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6174  012350  0EC8               	movlw	200
  6175  012352  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6176  012354  ECD6  F09F         	call	_ringbuf_init	;wreg free
  6177                           
  6178                           ;My_ST7032.c: 77: ringbuf_put(&lcd_tx, 0);
  6179  012358  0ED4               	movlw	low _lcd_tx
  6180  01235A  0100               	movlb	0	; () banked
  6181  01235C  6F68               	movwf	ringbuf_put@rb& (0+255),b
  6182  01235E  0E00               	movlw	high _lcd_tx
  6183  012360  0100               	movlb	0	; () banked
  6184  012362  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  6185  012364  0E00               	movlw	0
  6186  012366  0100               	movlb	0	; () banked
  6187  012368  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  6188  01236A  EC86  F094         	call	_ringbuf_put	;wreg free
  6189                           
  6190                           ;My_ST7032.c: 78: ringbuf_put(&lcd_tx, 3);
  6191  01236E  0ED4               	movlw	low _lcd_tx
  6192  012370  0100               	movlb	0	; () banked
  6193  012372  6F68               	movwf	ringbuf_put@rb& (0+255),b
  6194  012374  0E00               	movlw	high _lcd_tx
  6195  012376  0100               	movlb	0	; () banked
  6196  012378  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  6197  01237A  0E03               	movlw	3
  6198  01237C  0100               	movlb	0	; () banked
  6199  01237E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  6200  012380  EC86  F094         	call	_ringbuf_put	;wreg free
  6201                           
  6202                           ;My_ST7032.c: 80: ST7032_command(0x38, 1);
  6203  012384  0E01               	movlw	1
  6204  012386  0100               	movlb	0	; () banked
  6205  012388  6F6F               	movwf	ST7032_command@wait& (0+255),b
  6206  01238A  0E38               	movlw	56
  6207  01238C  ECB1  F09D         	call	_ST7032_command
  6208                           
  6209                           ;My_ST7032.c: 81: ST7032_command(0x39, 1);
  6210  012390  0E01               	movlw	1
  6211  012392  0100               	movlb	0	; () banked
  6212  012394  6F6F               	movwf	ST7032_command@wait& (0+255),b
  6213  012396  0E39               	movlw	57
  6214  012398  ECB1  F09D         	call	_ST7032_command
  6215                           
  6216                           ;My_ST7032.c: 82: ST7032_command(0x14, 1);
  6217  01239C  0E01               	movlw	1
  6218  01239E  0100               	movlb	0	; () banked
  6219  0123A0  6F6F               	movwf	ST7032_command@wait& (0+255),b
  6220  0123A2  0E14               	movlw	20
  6221  0123A4  ECB1  F09D         	call	_ST7032_command
  6222                           
  6223                           ;My_ST7032.c: 83: ST7032_command(0x70, 1);
  6224  0123A8  0E01               	movlw	1
  6225  0123AA  0100               	movlb	0	; () banked
  6226  0123AC  6F6F               	movwf	ST7032_command@wait& (0+255),b
  6227  0123AE  0E70               	movlw	112
  6228  0123B0  ECB1  F09D         	call	_ST7032_command
  6229                           
  6230                           ;My_ST7032.c: 84: ST7032_command(0x56, 1);
  6231  0123B4  0E01               	movlw	1
  6232  0123B6  0100               	movlb	0	; () banked
  6233  0123B8  6F6F               	movwf	ST7032_command@wait& (0+255),b
  6234  0123BA  0E56               	movlw	86
  6235  0123BC  ECB1  F09D         	call	_ST7032_command
  6236                           
  6237                           ;My_ST7032.c: 85: ST7032_command(0x6C, 3);
  6238  0123C0  0E03               	movlw	3
  6239  0123C2  0100               	movlb	0	; () banked
  6240  0123C4  6F6F               	movwf	ST7032_command@wait& (0+255),b
  6241  0123C6  0E6C               	movlw	108
  6242  0123C8  ECB1  F09D         	call	_ST7032_command
  6243                           
  6244                           ;My_ST7032.c: 86: ST7032_command(0x38, 1);
  6245  0123CC  0E01               	movlw	1
  6246  0123CE  0100               	movlb	0	; () banked
  6247  0123D0  6F6F               	movwf	ST7032_command@wait& (0+255),b
  6248  0123D2  0E38               	movlw	56
  6249  0123D4  ECB1  F09D         	call	_ST7032_command
  6250                           
  6251                           ;My_ST7032.c: 87: ST7032_command(0x0C, 1);
  6252  0123D8  0E01               	movlw	1
  6253  0123DA  0100               	movlb	0	; () banked
  6254  0123DC  6F6F               	movwf	ST7032_command@wait& (0+255),b
  6255  0123DE  0E0C               	movlw	12
  6256  0123E0  ECB1  F09D         	call	_ST7032_command
  6257                           
  6258                           ;My_ST7032.c: 88: ST7032_command(0x06, 1);
  6259  0123E4  0E01               	movlw	1
  6260  0123E6  0100               	movlb	0	; () banked
  6261  0123E8  6F6F               	movwf	ST7032_command@wait& (0+255),b
  6262  0123EA  0E06               	movlw	6
  6263  0123EC  ECB1  F09D         	call	_ST7032_command
  6264                           
  6265                           ;My_ST7032.c: 89: ST7032_clear();
  6266  0123F0  ECCF  F0A2         	call	_ST7032_clear	;wreg free
  6267  0123F4  0012               	return		;funcret
  6268  0123F6                     __end_of_ST7032_init:
  6269                           	opt stack 0
  6270                           tblptru	equ	0xFF8
  6271                           tblptrh	equ	0xFF7
  6272                           tblptrl	equ	0xFF6
  6273                           tablat	equ	0xFF5
  6274                           prodh	equ	0xFF4
  6275                           prodl	equ	0xFF3
  6276                           intcon	equ	0xFF2
  6277                           intcon2	equ	0xFF1
  6278                           postinc0	equ	0xFEE
  6279                           wreg	equ	0xFE8
  6280                           indf1	equ	0xFE7
  6281                           postinc1	equ	0xFE6
  6282                           postdec1	equ	0xFE5
  6283                           fsr1h	equ	0xFE2
  6284                           fsr1l	equ	0xFE1
  6285                           indf2	equ	0xFDF
  6286                           postinc2	equ	0xFDE
  6287                           postdec2	equ	0xFDD
  6288                           fsr2h	equ	0xFDA
  6289                           fsr2l	equ	0xFD9
  6290                           status	equ	0xFD8
  6291                           
  6292 ;; *************** function _ringbuf_init *****************
  6293 ;; Defined at:
  6294 ;;		line 5 in file "../My_library/My_ringbuf.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6297 ;;		 -> lcd_tx(8), usb_tx(8), usb_rx(8), uart_rx(8), 
  6298 ;;		 -> uart_tx(8), terminal_task@command(8), 
  6299 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  6300 ;;		 -> ST7032_init@buf(200), main_init@uartrx(100), main_init@uarttx(1000), main_init@usbrx(100), 
  6301 ;;		 -> main_init@usbtx(1000), terminal_task@buf(100), 
  6302 ;;  bufsize         2    4[BANK0 ] unsigned int 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;		None
  6305 ;; Return value:  Size  Location     Type
  6306 ;;		None               void
  6307 ;; Registers used:
  6308 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6314 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6317 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6318 ;;Total ram usage:        6 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:   11
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_terminal_task
  6325 ;;		_main_init
  6326 ;;		_ST7032_init
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text23
  6331  013FAC                     __ptext23:
  6332                           	opt stack 0
  6333  013FAC                     _ringbuf_init:
  6334                           	opt stack 18
  6335                           
  6336                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  6337                           
  6338                           ;incstack = 0
  6339  013FAC  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  6340  013FB0  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  6341  013FB4  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  6342  013FB8  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  6343                           
  6344                           ;My_ringbuf.c: 7: rb->size = bufsize;
  6345  013FBC  0100               	movlb	0	; () banked
  6346  013FBE  EE20 F002          	lfsr	2,2
  6347  013FC2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6348  013FC4  26D9               	addwf	fsr2l,f,c
  6349  013FC6  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6350  013FC8  22DA               	addwfc	fsr2h,f,c
  6351  013FCA  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  6352  013FCE  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;My_ringbuf.c: 8: rb->head = 0;
  6356  013FD2  0100               	movlb	0	; () banked
  6357  013FD4  EE20 F004          	lfsr	2,4
  6358  013FD8  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6359  013FDA  26D9               	addwf	fsr2l,f,c
  6360  013FDC  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6361  013FDE  22DA               	addwfc	fsr2h,f,c
  6362  013FE0  0E00               	movlw	0
  6363  013FE2  6EDE               	movwf	postinc2,c
  6364  013FE4  0E00               	movlw	0
  6365  013FE6  6EDD               	movwf	postdec2,c
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;My_ringbuf.c: 9: rb->tail = 0;
  6369  013FE8  0100               	movlb	0	; () banked
  6370  013FEA  EE20 F006          	lfsr	2,6
  6371  013FEE  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6372  013FF0  26D9               	addwf	fsr2l,f,c
  6373  013FF2  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6374  013FF4  22DA               	addwfc	fsr2h,f,c
  6375  013FF6  0E00               	movlw	0
  6376  013FF8  6EDE               	movwf	postinc2,c
  6377  013FFA  0E00               	movlw	0
  6378  013FFC  6EDD               	movwf	postdec2,c
  6379                           
  6380                           ; BSR set to: 0
  6381  013FFE  0012               	return		;funcret
  6382  014000                     __end_of_ringbuf_init:
  6383                           	opt stack 0
  6384                           tblptru	equ	0xFF8
  6385                           tblptrh	equ	0xFF7
  6386                           tblptrl	equ	0xFF6
  6387                           tablat	equ	0xFF5
  6388                           prodh	equ	0xFF4
  6389                           prodl	equ	0xFF3
  6390                           intcon	equ	0xFF2
  6391                           intcon2	equ	0xFF1
  6392                           postinc0	equ	0xFEE
  6393                           wreg	equ	0xFE8
  6394                           indf1	equ	0xFE7
  6395                           postinc1	equ	0xFE6
  6396                           postdec1	equ	0xFE5
  6397                           fsr1h	equ	0xFE2
  6398                           fsr1l	equ	0xFE1
  6399                           indf2	equ	0xFDF
  6400                           postinc2	equ	0xFDE
  6401                           postdec2	equ	0xFDD
  6402                           fsr2h	equ	0xFDA
  6403                           fsr2l	equ	0xFD9
  6404                           status	equ	0xFD8
  6405                           
  6406 ;; *************** function _ST7032_clear *****************
  6407 ;; Defined at:
  6408 ;;		line 26 in file "../My_library/My_ST7032.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;		None               void
  6415 ;; Registers used:
  6416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:   14
  6429 ;; This function calls:
  6430 ;;		_ST7032_command
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;;		_ST7032_init
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text24
  6438  01459E                     __ptext24:
  6439                           	opt stack 0
  6440  01459E                     _ST7032_clear:
  6441                           	opt stack 14
  6442                           
  6443                           ;My_ST7032.c: 27: ST7032_command(0x01, 2);
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;incstack = 0
  6447  01459E  0E02               	movlw	2
  6448  0145A0  0100               	movlb	0	; () banked
  6449  0145A2  6F6F               	movwf	ST7032_command@wait& (0+255),b
  6450  0145A4  0E01               	movlw	1
  6451  0145A6  ECB1  F09D         	call	_ST7032_command
  6452  0145AA  0012               	return		;funcret
  6453  0145AC                     __end_of_ST7032_clear:
  6454                           	opt stack 0
  6455                           tblptru	equ	0xFF8
  6456                           tblptrh	equ	0xFF7
  6457                           tblptrl	equ	0xFF6
  6458                           tablat	equ	0xFF5
  6459                           prodh	equ	0xFF4
  6460                           prodl	equ	0xFF3
  6461                           intcon	equ	0xFF2
  6462                           intcon2	equ	0xFF1
  6463                           postinc0	equ	0xFEE
  6464                           wreg	equ	0xFE8
  6465                           indf1	equ	0xFE7
  6466                           postinc1	equ	0xFE6
  6467                           postdec1	equ	0xFE5
  6468                           fsr1h	equ	0xFE2
  6469                           fsr1l	equ	0xFE1
  6470                           indf2	equ	0xFDF
  6471                           postinc2	equ	0xFDE
  6472                           postdec2	equ	0xFDD
  6473                           fsr2h	equ	0xFDA
  6474                           fsr2l	equ	0xFD9
  6475                           status	equ	0xFD8
  6476                           
  6477 ;; *************** function _RTCC_init *****************
  6478 ;; Defined at:
  6479 ;;		line 22 in file "../My_library/My_RTCC.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;		None               void
  6486 ;; Registers used:
  6487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;Total ram usage:        0 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; Hardware stack levels required when called:   15
  6500 ;; This function calls:
  6501 ;;		_RTCC_from_RTCC
  6502 ;;		_RTCC_from_epoch
  6503 ;; This function is called by:
  6504 ;;		_main_init
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text25
  6509  013C40                     __ptext25:
  6510                           	opt stack 0
  6511  013C40                     _RTCC_init:
  6512                           	opt stack 14
  6513                           
  6514                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  6515                           
  6516                           ;incstack = 0
  6517  013C40  010F               	movlb	15	; () banked
  6518  013C42  8B3F               	bsf	63,5,b	;volatile
  6519                           
  6520                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  6521  013C44  010F               	movlb	15	; () banked
  6522  013C46  BB3F               	btfsc	63,5,b	;volatile
  6523  013C48  D006               	goto	l9128
  6524                           
  6525                           ; BSR set to: 15
  6526                           ;My_RTCC.c: 25: EECON2 = 0x55;
  6527  013C4A  0E55               	movlw	85
  6528  013C4C  6EA7               	movwf	4007,c	;volatile
  6529                           
  6530                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  6531  013C4E  0EAA               	movlw	170
  6532  013C50  6EA7               	movwf	4007,c	;volatile
  6533                           
  6534                           ; BSR set to: 15
  6535                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  6536  013C52  010F               	movlb	15	; () banked
  6537  013C54  8B3F               	bsf	63,5,b	;volatile
  6538  013C56                     l9128:
  6539                           
  6540                           ; BSR set to: 15
  6541                           ;My_RTCC.c: 28: }
  6542                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  6543  013C56  010F               	movlb	15	; () banked
  6544  013C58  8F3F               	bsf	63,7,b	;volatile
  6545                           
  6546                           ; BSR set to: 15
  6547                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  6548  013C5A  010F               	movlb	15	; () banked
  6549  013C5C  953F               	bcf	63,2,b	;volatile
  6550                           
  6551                           ; BSR set to: 15
  6552                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  6553  013C5E  010F               	movlb	15	; () banked
  6554  013C60  833C               	bsf	60,1,b	;volatile
  6555                           
  6556                           ; BSR set to: 15
  6557                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  6558  013C62  010F               	movlb	15	; () banked
  6559  013C64  853C               	bsf	60,2,b	;volatile
  6560                           
  6561                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  6562  013C66  0E00               	movlw	0
  6563  013C68  010F               	movlb	15	; () banked
  6564  013C6A  6F3E               	movwf	62,b	;volatile
  6565                           
  6566                           ; BSR set to: 15
  6567                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  6568  013C6C  86CD               	bsf	4045,3,c	;volatile
  6569                           
  6570                           ; BSR set to: 15
  6571                           ;My_RTCC.c: 37: RTCC_from_RTCC(&now);
  6572  013C6E  0E35               	movlw	low _now
  6573  013C70  0100               	movlb	0	; () banked
  6574  013C72  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  6575  013C74  0E01               	movlw	high _now
  6576  013C76  0100               	movlb	0	; () banked
  6577  013C78  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  6578  013C7A  ECB5  F0A2         	call	_RTCC_from_RTCC	;wreg free
  6579                           
  6580                           ;My_RTCC.c: 38: if (now.DD == 0) {
  6581  013C7E  0101               	movlb	1	; () banked
  6582  013C80  513D               	movf	(_now+8)& (0+255),w,b
  6583  013C82  A4D8               	btfss	status,2,c
  6584  013C84  0012               	return	
  6585                           
  6586                           ; BSR set to: 1
  6587                           ;My_RTCC.c: 39: now.epoch = 0;
  6588  013C86  0E00               	movlw	0
  6589  013C88  0101               	movlb	1	; () banked
  6590  013C8A  6F35               	movwf	_now& (0+255),b
  6591  013C8C  0E00               	movlw	0
  6592  013C8E  6F36               	movwf	(_now+1)& (0+255),b
  6593  013C90  0E00               	movlw	0
  6594  013C92  6F37               	movwf	(_now+2)& (0+255),b
  6595  013C94  0E00               	movlw	0
  6596  013C96  6F38               	movwf	(_now+3)& (0+255),b
  6597                           
  6598                           ; BSR set to: 1
  6599                           ;My_RTCC.c: 40: RTCC_from_epoch(&now);
  6600  013C98  0E35               	movlw	low _now
  6601  013C9A  0100               	movlb	0	; () banked
  6602  013C9C  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  6603  013C9E  0E01               	movlw	high _now
  6604  013CA0  0100               	movlb	0	; () banked
  6605  013CA2  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  6606  013CA4  ECA8  F0A2         	call	_RTCC_from_epoch	;wreg free
  6607  013CA8  0012               	return	
  6608  013CAA                     __end_of_RTCC_init:
  6609                           	opt stack 0
  6610                           tblptru	equ	0xFF8
  6611                           tblptrh	equ	0xFF7
  6612                           tblptrl	equ	0xFF6
  6613                           tablat	equ	0xFF5
  6614                           prodh	equ	0xFF4
  6615                           prodl	equ	0xFF3
  6616                           intcon	equ	0xFF2
  6617                           intcon2	equ	0xFF1
  6618                           postinc0	equ	0xFEE
  6619                           wreg	equ	0xFE8
  6620                           indf1	equ	0xFE7
  6621                           postinc1	equ	0xFE6
  6622                           postdec1	equ	0xFE5
  6623                           fsr1h	equ	0xFE2
  6624                           fsr1l	equ	0xFE1
  6625                           indf2	equ	0xFDF
  6626                           postinc2	equ	0xFDE
  6627                           postdec2	equ	0xFDD
  6628                           fsr2h	equ	0xFDA
  6629                           fsr2l	equ	0xFD9
  6630                           status	equ	0xFD8
  6631                           
  6632 ;; *************** function _RTCC_from_epoch *****************
  6633 ;; Defined at:
  6634 ;;		line 211 in file "../My_library/My_RTCC.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  tm              2   47[BANK0 ] PTR struct .
  6637 ;;		 -> now(14), 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;		None               void
  6642 ;; Registers used:
  6643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6652 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6653 ;;Total ram usage:        2 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:   14
  6656 ;; This function calls:
  6657 ;;		_caltime_to_RTCC
  6658 ;;		_epoch_to_caltime
  6659 ;; This function is called by:
  6660 ;;		_RTCC_init
  6661 ;;		_RTCC_adjust_time_inc
  6662 ;;		_RTCC_adjust_time_dec
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           	psect	text26
  6667  014550                     __ptext26:
  6668                           	opt stack 0
  6669  014550                     _RTCC_from_epoch:
  6670                           	opt stack 14
  6671                           
  6672                           ;My_RTCC.c: 212: epoch_to_caltime(tm);
  6673                           
  6674                           ;incstack = 0
  6675  014550  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  6676  014554  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  6677  014558  EC4D  F089         	call	_epoch_to_caltime	;wreg free
  6678                           
  6679                           ;My_RTCC.c: 213: caltime_to_RTCC(tm);
  6680  01455C  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  6681  014560  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  6682  014564  ECB1  F093         	call	_caltime_to_RTCC	;wreg free
  6683  014568  0012               	return		;funcret
  6684  01456A                     __end_of_RTCC_from_epoch:
  6685                           	opt stack 0
  6686                           tblptru	equ	0xFF8
  6687                           tblptrh	equ	0xFF7
  6688                           tblptrl	equ	0xFF6
  6689                           tablat	equ	0xFF5
  6690                           prodh	equ	0xFF4
  6691                           prodl	equ	0xFF3
  6692                           intcon	equ	0xFF2
  6693                           intcon2	equ	0xFF1
  6694                           postinc0	equ	0xFEE
  6695                           wreg	equ	0xFE8
  6696                           indf1	equ	0xFE7
  6697                           postinc1	equ	0xFE6
  6698                           postdec1	equ	0xFE5
  6699                           fsr1h	equ	0xFE2
  6700                           fsr1l	equ	0xFE1
  6701                           indf2	equ	0xFDF
  6702                           postinc2	equ	0xFDE
  6703                           postdec2	equ	0xFDD
  6704                           fsr2h	equ	0xFDA
  6705                           fsr2l	equ	0xFD9
  6706                           status	equ	0xFD8
  6707                           
  6708 ;; *************** function _epoch_to_caltime *****************
  6709 ;; Defined at:
  6710 ;;		line 126 in file "../My_library/My_RTCC.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  tm              2   33[BANK0 ] PTR struct .
  6713 ;;		 -> now(14), 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  num             4   43[BANK0 ] unsigned long 
  6716 ;;  day             2   39[BANK0 ] unsigned int 
  6717 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  6718 ;;  month           1   42[BANK0 ] unsigned char 
  6719 ;;  year            1   41[BANK0 ] unsigned char 
  6720 ;; Return value:  Size  Location     Type
  6721 ;;		None               void
  6722 ;; Registers used:
  6723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6729 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6730 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6731 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6732 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6733 ;;Total ram usage:       14 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:   13
  6736 ;; This function calls:
  6737 ;;		_get_quot_rem
  6738 ;;		_month_length
  6739 ;; This function is called by:
  6740 ;;		_RTCC_from_caltime
  6741 ;;		_RTCC_from_epoch
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text27
  6746  01129A                     __ptext27:
  6747                           	opt stack 0
  6748  01129A                     _epoch_to_caltime:
  6749                           	opt stack 12
  6750                           
  6751                           ;My_RTCC.c: 129: static uint16_t day_cache = 0;
  6752                           ;My_RTCC.c: 130: static uint8_t month_cache = 1;
  6753                           ;My_RTCC.c: 131: static uint8_t year_cache = 0;
  6754                           ;My_RTCC.c: 132: uint16_t day_since_epoch;
  6755                           ;My_RTCC.c: 133: uint16_t day;
  6756                           ;My_RTCC.c: 134: uint8_t year = 0;
  6757                           
  6758                           ;incstack = 0
  6759  01129A  0E00               	movlw	0
  6760  01129C  0100               	movlb	0	; () banked
  6761  01129E  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  6762                           
  6763                           ;My_RTCC.c: 135: uint8_t month = 1;
  6764  0112A0  0E01               	movlw	1
  6765  0112A2  0100               	movlb	0	; () banked
  6766  0112A4  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;My_RTCC.c: 136: epoch_t num;
  6770                           ;My_RTCC.c: 138: num = tm->epoch;
  6771  0112A6  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  6772  0112AA  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  6773  0112AE  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  6774  0112B2  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  6775  0112B6  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  6776  0112BA  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;My_RTCC.c: 139: tm->ss = get_quot_rem(&num, 60);
  6780  0112BE  0E8B               	movlw	low epoch_to_caltime@num
  6781  0112C0  0100               	movlb	0	; () banked
  6782  0112C2  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6783  0112C4  0E00               	movlw	high epoch_to_caltime@num
  6784  0112C6  0100               	movlb	0	; () banked
  6785  0112C8  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6786  0112CA  0E3C               	movlw	60
  6787  0112CC  0100               	movlb	0	; () banked
  6788  0112CE  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6789  0112D0  EC1C  F094         	call	_get_quot_rem	;wreg free
  6790  0112D4  0100               	movlb	0	; () banked
  6791  0112D6  EE20 F004          	lfsr	2,4
  6792  0112DA  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6793  0112DC  26D9               	addwf	fsr2l,f,c
  6794  0112DE  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6795  0112E0  22DA               	addwfc	fsr2h,f,c
  6796  0112E2  0100               	movlb	0	; () banked
  6797  0112E4  C079  FFDF         	movff	?_get_quot_rem,indf2
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;My_RTCC.c: 140: tm->mm = get_quot_rem(&num, 60);
  6801  0112E8  0E8B               	movlw	low epoch_to_caltime@num
  6802  0112EA  0100               	movlb	0	; () banked
  6803  0112EC  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6804  0112EE  0E00               	movlw	high epoch_to_caltime@num
  6805  0112F0  0100               	movlb	0	; () banked
  6806  0112F2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6807  0112F4  0E3C               	movlw	60
  6808  0112F6  0100               	movlb	0	; () banked
  6809  0112F8  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6810  0112FA  EC1C  F094         	call	_get_quot_rem	;wreg free
  6811  0112FE  0100               	movlb	0	; () banked
  6812  011300  EE20 F005          	lfsr	2,5
  6813  011304  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6814  011306  26D9               	addwf	fsr2l,f,c
  6815  011308  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6816  01130A  22DA               	addwfc	fsr2h,f,c
  6817  01130C  0100               	movlb	0	; () banked
  6818  01130E  C079  FFDF         	movff	?_get_quot_rem,indf2
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;My_RTCC.c: 141: tm->hh = get_quot_rem(&num, 24);
  6822  011312  0E8B               	movlw	low epoch_to_caltime@num
  6823  011314  0100               	movlb	0	; () banked
  6824  011316  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6825  011318  0E00               	movlw	high epoch_to_caltime@num
  6826  01131A  0100               	movlb	0	; () banked
  6827  01131C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6828  01131E  0E18               	movlw	24
  6829  011320  0100               	movlb	0	; () banked
  6830  011322  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6831  011324  EC1C  F094         	call	_get_quot_rem	;wreg free
  6832  011328  0100               	movlb	0	; () banked
  6833  01132A  EE20 F006          	lfsr	2,6
  6834  01132E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6835  011330  26D9               	addwf	fsr2l,f,c
  6836  011332  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6837  011334  22DA               	addwfc	fsr2h,f,c
  6838  011336  0100               	movlb	0	; () banked
  6839  011338  C079  FFDF         	movff	?_get_quot_rem,indf2
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;My_RTCC.c: 142: day = num;
  6843  01133C  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  6844  011340  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;My_RTCC.c: 143: day_since_epoch = day;
  6848  011344  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  6849  011348  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;My_RTCC.c: 145: num += 6;
  6853  01134C  0E06               	movlw	6
  6854  01134E  0100               	movlb	0	; () banked
  6855  011350  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  6856  011352  0E00               	movlw	0
  6857  011354  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  6858  011356  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  6859  011358  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  6860                           
  6861                           ; BSR set to: 0
  6862                           ;My_RTCC.c: 146: tm->EE = get_quot_rem(&num, 7);
  6863  01135A  0E8B               	movlw	low epoch_to_caltime@num
  6864  01135C  0100               	movlb	0	; () banked
  6865  01135E  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6866  011360  0E00               	movlw	high epoch_to_caltime@num
  6867  011362  0100               	movlb	0	; () banked
  6868  011364  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6869  011366  0E07               	movlw	7
  6870  011368  0100               	movlb	0	; () banked
  6871  01136A  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6872  01136C  EC1C  F094         	call	_get_quot_rem	;wreg free
  6873  011370  0100               	movlb	0	; () banked
  6874  011372  EE20 F007          	lfsr	2,7
  6875  011376  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6876  011378  26D9               	addwf	fsr2l,f,c
  6877  01137A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6878  01137C  22DA               	addwfc	fsr2h,f,c
  6879  01137E  0100               	movlb	0	; () banked
  6880  011380  C079  FFDF         	movff	?_get_quot_rem,indf2
  6881                           
  6882                           ;My_RTCC.c: 155: while (day >= month_length(year, month)) {
  6883  011384  D03F               	goto	l8478
  6884  011386                     l826:
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;My_RTCC.c: 156: LATB2 = 1;
  6888  011386  848A               	bsf	3978,2,c	;volatile
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;My_RTCC.c: 157: day = day - month_length(year, month);
  6892  011388  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  6893  01138C  0100               	movlb	0	; () banked
  6894  01138E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  6895  011390  ECFB  F091         	call	_month_length
  6896  011394  0100               	movlb	0	; () banked
  6897  011396  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  6898  011398  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  6899  01139A  0100               	movlb	0	; () banked
  6900  01139C  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  6901  01139E  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  6902  0113A0  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  6903  0113A2  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  6904  0113A4  0100               	movlb	0	; () banked
  6905  0113A6  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  6906  0113A8  0100               	movlb	0	; () banked
  6907  0113AA  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  6908  0113AC  0100               	movlb	0	; () banked
  6909  0113AE  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  6910  0113B0  0100               	movlb	0	; () banked
  6911  0113B2  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  6912  0113B4  0100               	movlb	0	; () banked
  6913  0113B6  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  6914  0113B8  0100               	movlb	0	; () banked
  6915  0113BA  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;My_RTCC.c: 158: if (month == 12) {
  6919  0113BC  0E0C               	movlw	12
  6920  0113BE  0100               	movlb	0	; () banked
  6921  0113C0  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  6922  0113C2  A4D8               	btfss	status,2,c
  6923  0113C4  D019               	goto	l8472
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;My_RTCC.c: 159: month = 1;
  6927  0113C6  0E01               	movlw	1
  6928  0113C8  0100               	movlb	0	; () banked
  6929  0113CA  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;My_RTCC.c: 160: year++;
  6933  0113CC  0100               	movlb	0	; () banked
  6934  0113CE  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;My_RTCC.c: 162: if (year >= 100) {
  6938  0113D0  0E63               	movlw	99
  6939  0113D2  0100               	movlb	0	; () banked
  6940  0113D4  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  6941  0113D6  D012               	goto	l8474
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;My_RTCC.c: 163: tm->epoch -= 3155760000;
  6945  0113D8  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  6946  0113DC  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  6947  0113E0  0E80               	movlw	128
  6948  0113E2  5EDE               	subwf	postinc2,f,c
  6949  0113E4  0E13               	movlw	19
  6950  0113E6  5ADE               	subwfb	postinc2,f,c
  6951  0113E8  0E19               	movlw	25
  6952  0113EA  5ADE               	subwfb	postinc2,f,c
  6953  0113EC  0EBC               	movlw	188
  6954  0113EE  5ADE               	subwfb	postinc2,f,c
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;My_RTCC.c: 164: year = 0;
  6958  0113F0  0E00               	movlw	0
  6959  0113F2  0100               	movlb	0	; () banked
  6960  0113F4  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;My_RTCC.c: 165: }
  6964                           ;My_RTCC.c: 166: } else {
  6965  0113F6  D002               	goto	l8474
  6966  0113F8                     l8472:
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;My_RTCC.c: 167: month++;
  6970  0113F8  0100               	movlb	0	; () banked
  6971  0113FA  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  6972  0113FC                     l8474:
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;My_RTCC.c: 168: }
  6976                           ;My_RTCC.c: 169: month_cache = month;
  6977  0113FC  C08A  F1E9         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;My_RTCC.c: 170: year_cache = year;
  6981  011400  C089  F133         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  6982  011404                     l8478:
  6983                           
  6984                           ; BSR set to: 0
  6985  011404  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  6986  011408  0100               	movlb	0	; () banked
  6987  01140A  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  6988  01140C  ECFB  F091         	call	_month_length
  6989  011410  0100               	movlb	0	; () banked
  6990  011412  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  6991  011414  0100               	movlb	0	; () banked
  6992  011416  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  6993  011418  0100               	movlb	0	; () banked
  6994  01141A  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  6995  01141C  0E00               	movlw	0
  6996  01141E  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  6997  011420  B0D8               	btfsc	status,0,c
  6998  011422  D7B1               	goto	l826
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;My_RTCC.c: 171: }
  7002                           ;My_RTCC.c: 172: day_cache = day_since_epoch - day;
  7003                           
  7004                           ; BSR set to: 0
  7005  011424  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  7006  011428  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  7007  01142C  0100               	movlb	0	; () banked
  7008  01142E  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  7009  011430  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7010  011432  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7011  011434  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7012  011436  0100               	movlb	0	; () banked
  7013  011438  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  7014  01143A  0100               	movlb	0	; () banked
  7015  01143C  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  7016  01143E  0101               	movlb	1	; () banked
  7017  011440  6F29               	movwf	epoch_to_caltime@day_cache& (0+255),b
  7018  011442  0100               	movlb	0	; () banked
  7019  011444  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  7020  011446  0100               	movlb	0	; () banked
  7021  011448  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7022  01144A  0101               	movlb	1	; () banked
  7023  01144C  6F2A               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  7024                           
  7025                           ; BSR set to: 1
  7026                           ;My_RTCC.c: 173: day++;
  7027  01144E  0100               	movlb	0	; () banked
  7028  011450  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  7029  011452  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;My_RTCC.c: 175: tm->YY = year;
  7033  011454  0100               	movlb	0	; () banked
  7034  011456  EE20 F00A          	lfsr	2,10
  7035  01145A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7036  01145C  26D9               	addwf	fsr2l,f,c
  7037  01145E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7038  011460  22DA               	addwfc	fsr2h,f,c
  7039  011462  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;My_RTCC.c: 176: tm->MM = month;
  7043  011466  0100               	movlb	0	; () banked
  7044  011468  EE20 F009          	lfsr	2,9
  7045  01146C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7046  01146E  26D9               	addwf	fsr2l,f,c
  7047  011470  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7048  011472  22DA               	addwfc	fsr2h,f,c
  7049  011474  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;My_RTCC.c: 177: tm->DD = day;
  7053  011478  0100               	movlb	0	; () banked
  7054  01147A  EE20 F008          	lfsr	2,8
  7055  01147E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7056  011480  26D9               	addwf	fsr2l,f,c
  7057  011482  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7058  011484  22DA               	addwfc	fsr2h,f,c
  7059  011486  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  7060                           
  7061                           ; BSR set to: 0
  7062  01148A  0012               	return		;funcret
  7063  01148C                     __end_of_epoch_to_caltime:
  7064                           	opt stack 0
  7065                           tblptru	equ	0xFF8
  7066                           tblptrh	equ	0xFF7
  7067                           tblptrl	equ	0xFF6
  7068                           tablat	equ	0xFF5
  7069                           prodh	equ	0xFF4
  7070                           prodl	equ	0xFF3
  7071                           intcon	equ	0xFF2
  7072                           intcon2	equ	0xFF1
  7073                           postinc0	equ	0xFEE
  7074                           wreg	equ	0xFE8
  7075                           indf1	equ	0xFE7
  7076                           postinc1	equ	0xFE6
  7077                           postdec1	equ	0xFE5
  7078                           fsr1h	equ	0xFE2
  7079                           fsr1l	equ	0xFE1
  7080                           indf2	equ	0xFDF
  7081                           postinc2	equ	0xFDE
  7082                           postdec2	equ	0xFDD
  7083                           fsr2h	equ	0xFDA
  7084                           fsr2l	equ	0xFD9
  7085                           status	equ	0xFD8
  7086                           
  7087 ;; *************** function _get_quot_rem *****************
  7088 ;; Defined at:
  7089 ;;		line 81 in file "../My_library/My_RTCC.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  7092 ;;		 -> epoch_to_caltime@num(4), 
  7093 ;;  div             1   27[BANK0 ] unsigned char 
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;  num             4   29[BANK0 ] unsigned long 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  4   25[BANK0 ] unsigned long 
  7098 ;; Registers used:
  7099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7106 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7108 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7109 ;;Total ram usage:        8 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:   12
  7112 ;; This function calls:
  7113 ;;		___lldiv
  7114 ;;		___lmul
  7115 ;; This function is called by:
  7116 ;;		_epoch_to_caltime
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           	psect	text28
  7121  012838                     __ptext28:
  7122                           	opt stack 0
  7123  012838                     _get_quot_rem:
  7124                           	opt stack 12
  7125                           
  7126                           ;My_RTCC.c: 84: epoch_t num = *quot;
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;incstack = 0
  7130  012838  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  7131  01283C  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7132  012840  CFDE F07D          	movff	postinc2,get_quot_rem@num
  7133  012844  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  7134  012848  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  7135  01284C  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  7136                           
  7137                           ;My_RTCC.c: 85: return num - (*quot = num / div) * div;
  7138  012850  0100               	movlb	0	; () banked
  7139  012852  517B               	movf	get_quot_rem@div& (0+255),w,b
  7140  012854  0100               	movlb	0	; () banked
  7141  012856  6F64               	movwf	___lldiv@divisor& (0+255),b
  7142  012858  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  7143  01285A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  7144  01285C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  7145  01285E  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  7146  012862  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  7147  012866  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  7148  01286A  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  7149  01286E  EC4F  F097         	call	___lldiv	;wreg free
  7150  012872  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  7151  012876  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7152  01287A  0100               	movlb	0	; () banked
  7153  01287C  C060  FFDE         	movff	?___lldiv,postinc2
  7154  012880  0100               	movlb	0	; () banked
  7155  012882  C061  FFDE         	movff	?___lldiv+1,postinc2
  7156  012886  0100               	movlb	0	; () banked
  7157  012888  C062  FFDE         	movff	?___lldiv+2,postinc2
  7158  01288C  0100               	movlb	0	; () banked
  7159  01288E  C063  FFDD         	movff	?___lldiv+3,postdec2
  7160  012892  52DD               	movf	postdec2,f,c
  7161  012894  52DD               	movf	postdec2,f,c
  7162  012896  CFDE F06D          	movff	postinc2,___lmul@multiplier
  7163  01289A  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  7164  01289E  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  7165  0128A2  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  7166  0128A6  0100               	movlb	0	; () banked
  7167  0128A8  517B               	movf	get_quot_rem@div& (0+255),w,b
  7168  0128AA  0100               	movlb	0	; () banked
  7169  0128AC  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7170  0128AE  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  7171  0128B0  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  7172  0128B2  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  7173  0128B4  EC3D  F09D         	call	___lmul	;wreg free
  7174  0128B8  0100               	movlb	0	; () banked
  7175  0128BA  1F6D               	comf	?___lmul& (0+255),f,b
  7176  0128BC  0100               	movlb	0	; () banked
  7177  0128BE  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  7178  0128C0  0100               	movlb	0	; () banked
  7179  0128C2  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  7180  0128C4  0100               	movlb	0	; () banked
  7181  0128C6  1F70               	comf	(?___lmul+3)& (0+255),f,b
  7182  0128C8  0100               	movlb	0	; () banked
  7183  0128CA  2B6D               	incf	?___lmul& (0+255),f,b
  7184  0128CC  0E00               	movlw	0
  7185  0128CE  0100               	movlb	0	; () banked
  7186  0128D0  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  7187  0128D2  0100               	movlb	0	; () banked
  7188  0128D4  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  7189  0128D6  0100               	movlb	0	; () banked
  7190  0128D8  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  7191  0128DA  0100               	movlb	0	; () banked
  7192  0128DC  517D               	movf	get_quot_rem@num& (0+255),w,b
  7193  0128DE  0100               	movlb	0	; () banked
  7194  0128E0  256D               	addwf	?___lmul& (0+255),w,b
  7195  0128E2  0100               	movlb	0	; () banked
  7196  0128E4  6F79               	movwf	?_get_quot_rem& (0+255),b
  7197  0128E6  0100               	movlb	0	; () banked
  7198  0128E8  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  7199  0128EA  0100               	movlb	0	; () banked
  7200  0128EC  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  7201  0128EE  0100               	movlb	0	; () banked
  7202  0128F0  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  7203  0128F2  0100               	movlb	0	; () banked
  7204  0128F4  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  7205  0128F6  0100               	movlb	0	; () banked
  7206  0128F8  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  7207  0128FA  0100               	movlb	0	; () banked
  7208  0128FC  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  7209  0128FE  0100               	movlb	0	; () banked
  7210  012900  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  7211  012902  0100               	movlb	0	; () banked
  7212  012904  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  7213  012906  0100               	movlb	0	; () banked
  7214  012908  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  7215  01290A  0012               	return	
  7216  01290C                     __end_of_get_quot_rem:
  7217                           	opt stack 0
  7218                           tblptru	equ	0xFF8
  7219                           tblptrh	equ	0xFF7
  7220                           tblptrl	equ	0xFF6
  7221                           tablat	equ	0xFF5
  7222                           prodh	equ	0xFF4
  7223                           prodl	equ	0xFF3
  7224                           intcon	equ	0xFF2
  7225                           intcon2	equ	0xFF1
  7226                           postinc0	equ	0xFEE
  7227                           wreg	equ	0xFE8
  7228                           indf1	equ	0xFE7
  7229                           postinc1	equ	0xFE6
  7230                           postdec1	equ	0xFE5
  7231                           fsr1h	equ	0xFE2
  7232                           fsr1l	equ	0xFE1
  7233                           indf2	equ	0xFDF
  7234                           postinc2	equ	0xFDE
  7235                           postdec2	equ	0xFDD
  7236                           fsr2h	equ	0xFDA
  7237                           fsr2l	equ	0xFD9
  7238                           status	equ	0xFD8
  7239                           
  7240 ;; *************** function ___lldiv *****************
  7241 ;; Defined at:
  7242 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  dividend        4    0[BANK0 ] unsigned long 
  7245 ;;  divisor         4    4[BANK0 ] unsigned long 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  quotient        4    8[BANK0 ] unsigned long 
  7248 ;;  counter         1   12[BANK0 ] unsigned char 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  4    0[BANK0 ] unsigned long 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2, status,0
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7258 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7259 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7261 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7262 ;;Total ram usage:       13 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:   11
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_get_quot_rem
  7269 ;;		_CTMU_read
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text29
  7274  012E9E                     __ptext29:
  7275                           	opt stack 0
  7276  012E9E                     ___lldiv:
  7277                           	opt stack 12
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;incstack = 0
  7281  012E9E  0E00               	movlw	0
  7282  012EA0  0100               	movlb	0	; () banked
  7283  012EA2  6F68               	movwf	___lldiv@quotient& (0+255),b
  7284  012EA4  0E00               	movlw	0
  7285  012EA6  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  7286  012EA8  0E00               	movlw	0
  7287  012EAA  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  7288  012EAC  0E00               	movlw	0
  7289  012EAE  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  7290                           
  7291                           ; BSR set to: 0
  7292  012EB0  0100               	movlb	0	; () banked
  7293  012EB2  5164               	movf	___lldiv@divisor& (0+255),w,b
  7294  012EB4  0100               	movlb	0	; () banked
  7295  012EB6  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7296  012EB8  0100               	movlb	0	; () banked
  7297  012EBA  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7298  012EBC  0100               	movlb	0	; () banked
  7299  012EBE  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7300  012EC0  B4D8               	btfsc	status,2,c
  7301  012EC2  D042               	goto	l1895
  7302                           
  7303                           ; BSR set to: 0
  7304  012EC4  0E01               	movlw	1
  7305  012EC6  0100               	movlb	0	; () banked
  7306  012EC8  6F6C               	movwf	___lldiv@counter& (0+255),b
  7307  012ECA  D008               	goto	l8270
  7308  012ECC                     l8268:
  7309                           
  7310                           ; BSR set to: 0
  7311  012ECC  0100               	movlb	0	; () banked
  7312  012ECE  90D8               	bcf	status,0,c
  7313  012ED0  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  7314  012ED2  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7315  012ED4  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7316  012ED6  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7317  012ED8  0100               	movlb	0	; () banked
  7318  012EDA  2B6C               	incf	___lldiv@counter& (0+255),f,b
  7319  012EDC                     l8270:
  7320                           
  7321                           ; BSR set to: 0
  7322  012EDC  0100               	movlb	0	; () banked
  7323  012EDE  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7324  012EE0  D7F5               	goto	l8268
  7325  012EE2                     l8272:
  7326                           
  7327                           ; BSR set to: 0
  7328  012EE2  0100               	movlb	0	; () banked
  7329  012EE4  90D8               	bcf	status,0,c
  7330  012EE6  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  7331  012EE8  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7332  012EEA  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7333  012EEC  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7334                           
  7335                           ; BSR set to: 0
  7336  012EEE  0100               	movlb	0	; () banked
  7337  012EF0  5164               	movf	___lldiv@divisor& (0+255),w,b
  7338  012EF2  0100               	movlb	0	; () banked
  7339  012EF4  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  7340  012EF6  0100               	movlb	0	; () banked
  7341  012EF8  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7342  012EFA  0100               	movlb	0	; () banked
  7343  012EFC  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7344  012EFE  0100               	movlb	0	; () banked
  7345  012F00  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7346  012F02  0100               	movlb	0	; () banked
  7347  012F04  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7348  012F06  0100               	movlb	0	; () banked
  7349  012F08  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7350  012F0A  0100               	movlb	0	; () banked
  7351  012F0C  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7352  012F0E  A0D8               	btfss	status,0,c
  7353  012F10  D012               	goto	l8280
  7354                           
  7355                           ; BSR set to: 0
  7356  012F12  0100               	movlb	0	; () banked
  7357  012F14  5164               	movf	___lldiv@divisor& (0+255),w,b
  7358  012F16  0100               	movlb	0	; () banked
  7359  012F18  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  7360  012F1A  0100               	movlb	0	; () banked
  7361  012F1C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7362  012F1E  0100               	movlb	0	; () banked
  7363  012F20  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7364  012F22  0100               	movlb	0	; () banked
  7365  012F24  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7366  012F26  0100               	movlb	0	; () banked
  7367  012F28  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7368  012F2A  0100               	movlb	0	; () banked
  7369  012F2C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7370  012F2E  0100               	movlb	0	; () banked
  7371  012F30  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7372                           
  7373                           ; BSR set to: 0
  7374  012F32  0100               	movlb	0	; () banked
  7375  012F34  8168               	bsf	___lldiv@quotient& (0+255),0,b
  7376  012F36                     l8280:
  7377                           
  7378                           ; BSR set to: 0
  7379  012F36  0100               	movlb	0	; () banked
  7380  012F38  90D8               	bcf	status,0,c
  7381  012F3A  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7382  012F3C  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7383  012F3E  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7384  012F40  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  7385                           
  7386                           ; BSR set to: 0
  7387  012F42  0100               	movlb	0	; () banked
  7388  012F44  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  7389  012F46  D7CD               	goto	l8272
  7390  012F48                     l1895:
  7391                           
  7392                           ; BSR set to: 0
  7393  012F48  C068  F060         	movff	___lldiv@quotient,?___lldiv
  7394  012F4C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  7395  012F50  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  7396  012F54  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  7397                           
  7398                           ; BSR set to: 0
  7399  012F58  0012               	return		;funcret
  7400  012F5A                     __end_of___lldiv:
  7401                           	opt stack 0
  7402                           tblptru	equ	0xFF8
  7403                           tblptrh	equ	0xFF7
  7404                           tblptrl	equ	0xFF6
  7405                           tablat	equ	0xFF5
  7406                           prodh	equ	0xFF4
  7407                           prodl	equ	0xFF3
  7408                           intcon	equ	0xFF2
  7409                           intcon2	equ	0xFF1
  7410                           postinc0	equ	0xFEE
  7411                           wreg	equ	0xFE8
  7412                           indf1	equ	0xFE7
  7413                           postinc1	equ	0xFE6
  7414                           postdec1	equ	0xFE5
  7415                           fsr1h	equ	0xFE2
  7416                           fsr1l	equ	0xFE1
  7417                           indf2	equ	0xFDF
  7418                           postinc2	equ	0xFDE
  7419                           postdec2	equ	0xFDD
  7420                           fsr2h	equ	0xFDA
  7421                           fsr2l	equ	0xFD9
  7422                           status	equ	0xFD8
  7423                           
  7424 ;; *************** function _caltime_to_RTCC *****************
  7425 ;; Defined at:
  7426 ;;		line 106 in file "../My_library/My_RTCC.c"
  7427 ;; Parameters:    Size  Location     Type
  7428 ;;  tm              2    9[BANK0 ] PTR struct .
  7429 ;;		 -> now(14), 
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;		None
  7432 ;; Return value:  Size  Location     Type
  7433 ;;		None               void
  7434 ;; Registers used:
  7435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7441 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7444 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7445 ;;Total ram usage:        2 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:   13
  7448 ;; This function calls:
  7449 ;;		_d_to_x
  7450 ;; This function is called by:
  7451 ;;		_RTCC_from_caltime
  7452 ;;		_RTCC_from_epoch
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	text30
  7457  012762                     __ptext30:
  7458                           	opt stack 0
  7459  012762                     _caltime_to_RTCC:
  7460                           	opt stack 12
  7461  012762                     l813:
  7462  012762  010F               	movlb	15	; () banked
  7463  012764  B93F               	btfsc	63,4,b	;volatile
  7464  012766  D7FD               	goto	l813
  7465                           
  7466                           ; BSR set to: 15
  7467                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR0 = 1;
  7468  012768  010F               	movlb	15	; () banked
  7469  01276A  813F               	bsf	63,0,b	;volatile
  7470                           
  7471                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR1 = 1;
  7472  01276C  010F               	movlb	15	; () banked
  7473  01276E  833F               	bsf	63,1,b	;volatile
  7474                           
  7475                           ; BSR set to: 15
  7476                           ;My_RTCC.c: 110: RTCVALL = d_to_x(tm->YY);
  7477  012770  0100               	movlb	0	; () banked
  7478  012772  EE20 F00A          	lfsr	2,10
  7479  012776  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7480  012778  26D9               	addwf	fsr2l,f,c
  7481  01277A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7482  01277C  22DA               	addwfc	fsr2h,f,c
  7483  01277E  50DF               	movf	indf2,w,c
  7484  012780  EC11  F0A2         	call	_d_to_x
  7485  012784  010F               	movlb	15	; () banked
  7486  012786  6F3A               	movwf	58,b	;volatile
  7487                           
  7488                           ; BSR set to: 15
  7489                           ;My_RTCC.c: 111: RTCVALH = 0x00;
  7490  012788  0E00               	movlw	0
  7491  01278A  010F               	movlb	15	; () banked
  7492  01278C  6F3B               	movwf	59,b	;volatile
  7493                           
  7494                           ; BSR set to: 15
  7495                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR0 = 0;
  7496  01278E  010F               	movlb	15	; () banked
  7497  012790  913F               	bcf	63,0,b	;volatile
  7498                           
  7499                           ; BSR set to: 15
  7500                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR1 = 1;
  7501  012792  010F               	movlb	15	; () banked
  7502  012794  833F               	bsf	63,1,b	;volatile
  7503                           
  7504                           ; BSR set to: 15
  7505                           ;My_RTCC.c: 114: RTCVALL = d_to_x(tm->DD);
  7506  012796  0100               	movlb	0	; () banked
  7507  012798  EE20 F008          	lfsr	2,8
  7508  01279C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7509  01279E  26D9               	addwf	fsr2l,f,c
  7510  0127A0  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7511  0127A2  22DA               	addwfc	fsr2h,f,c
  7512  0127A4  50DF               	movf	indf2,w,c
  7513  0127A6  EC11  F0A2         	call	_d_to_x
  7514  0127AA  010F               	movlb	15	; () banked
  7515  0127AC  6F3A               	movwf	58,b	;volatile
  7516                           
  7517                           ; BSR set to: 15
  7518                           ;My_RTCC.c: 115: RTCVALH = d_to_x(tm->MM);
  7519  0127AE  0100               	movlb	0	; () banked
  7520  0127B0  EE20 F009          	lfsr	2,9
  7521  0127B4  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7522  0127B6  26D9               	addwf	fsr2l,f,c
  7523  0127B8  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7524  0127BA  22DA               	addwfc	fsr2h,f,c
  7525  0127BC  50DF               	movf	indf2,w,c
  7526  0127BE  EC11  F0A2         	call	_d_to_x
  7527  0127C2  010F               	movlb	15	; () banked
  7528  0127C4  6F3B               	movwf	59,b	;volatile
  7529                           
  7530                           ; BSR set to: 15
  7531                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR0 = 1;
  7532  0127C6  010F               	movlb	15	; () banked
  7533  0127C8  813F               	bsf	63,0,b	;volatile
  7534                           
  7535                           ; BSR set to: 15
  7536                           ;My_RTCC.c: 117: RTCCFGbits.RTCPTR1 = 0;
  7537  0127CA  010F               	movlb	15	; () banked
  7538  0127CC  933F               	bcf	63,1,b	;volatile
  7539                           
  7540                           ; BSR set to: 15
  7541                           ;My_RTCC.c: 118: RTCVALL = d_to_x(tm->hh);
  7542  0127CE  0100               	movlb	0	; () banked
  7543  0127D0  EE20 F006          	lfsr	2,6
  7544  0127D4  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7545  0127D6  26D9               	addwf	fsr2l,f,c
  7546  0127D8  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7547  0127DA  22DA               	addwfc	fsr2h,f,c
  7548  0127DC  50DF               	movf	indf2,w,c
  7549  0127DE  EC11  F0A2         	call	_d_to_x
  7550  0127E2  010F               	movlb	15	; () banked
  7551  0127E4  6F3A               	movwf	58,b	;volatile
  7552                           
  7553                           ; BSR set to: 15
  7554                           ;My_RTCC.c: 119: RTCVALH = d_to_x(tm->EE);
  7555  0127E6  0100               	movlb	0	; () banked
  7556  0127E8  EE20 F007          	lfsr	2,7
  7557  0127EC  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7558  0127EE  26D9               	addwf	fsr2l,f,c
  7559  0127F0  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7560  0127F2  22DA               	addwfc	fsr2h,f,c
  7561  0127F4  50DF               	movf	indf2,w,c
  7562  0127F6  EC11  F0A2         	call	_d_to_x
  7563  0127FA  010F               	movlb	15	; () banked
  7564  0127FC  6F3B               	movwf	59,b	;volatile
  7565                           
  7566                           ; BSR set to: 15
  7567                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR0 = 0;
  7568  0127FE  010F               	movlb	15	; () banked
  7569  012800  913F               	bcf	63,0,b	;volatile
  7570                           
  7571                           ; BSR set to: 15
  7572                           ;My_RTCC.c: 121: RTCCFGbits.RTCPTR1 = 0;
  7573  012802  010F               	movlb	15	; () banked
  7574  012804  933F               	bcf	63,1,b	;volatile
  7575                           
  7576                           ; BSR set to: 15
  7577                           ;My_RTCC.c: 122: RTCVALL = d_to_x(tm->ss);
  7578  012806  0100               	movlb	0	; () banked
  7579  012808  EE20 F004          	lfsr	2,4
  7580  01280C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7581  01280E  26D9               	addwf	fsr2l,f,c
  7582  012810  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7583  012812  22DA               	addwfc	fsr2h,f,c
  7584  012814  50DF               	movf	indf2,w,c
  7585  012816  EC11  F0A2         	call	_d_to_x
  7586  01281A  010F               	movlb	15	; () banked
  7587  01281C  6F3A               	movwf	58,b	;volatile
  7588                           
  7589                           ; BSR set to: 15
  7590                           ;My_RTCC.c: 123: RTCVALH = d_to_x(tm->mm);
  7591  01281E  0100               	movlb	0	; () banked
  7592  012820  EE20 F005          	lfsr	2,5
  7593  012824  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7594  012826  26D9               	addwf	fsr2l,f,c
  7595  012828  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7596  01282A  22DA               	addwfc	fsr2h,f,c
  7597  01282C  50DF               	movf	indf2,w,c
  7598  01282E  EC11  F0A2         	call	_d_to_x
  7599  012832  010F               	movlb	15	; () banked
  7600  012834  6F3B               	movwf	59,b	;volatile
  7601                           
  7602                           ; BSR set to: 15
  7603  012836  0012               	return		;funcret
  7604  012838                     __end_of_caltime_to_RTCC:
  7605                           	opt stack 0
  7606                           tblptru	equ	0xFF8
  7607                           tblptrh	equ	0xFF7
  7608                           tblptrl	equ	0xFF6
  7609                           tablat	equ	0xFF5
  7610                           prodh	equ	0xFF4
  7611                           prodl	equ	0xFF3
  7612                           intcon	equ	0xFF2
  7613                           intcon2	equ	0xFF1
  7614                           postinc0	equ	0xFEE
  7615                           wreg	equ	0xFE8
  7616                           indf1	equ	0xFE7
  7617                           postinc1	equ	0xFE6
  7618                           postdec1	equ	0xFE5
  7619                           fsr1h	equ	0xFE2
  7620                           fsr1l	equ	0xFE1
  7621                           indf2	equ	0xFDF
  7622                           postinc2	equ	0xFDE
  7623                           postdec2	equ	0xFDD
  7624                           fsr2h	equ	0xFDA
  7625                           fsr2l	equ	0xFD9
  7626                           status	equ	0xFD8
  7627                           
  7628 ;; *************** function _d_to_x *****************
  7629 ;; Defined at:
  7630 ;;		line 46 in file "../My_library/My_RTCC.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  dec             1    wreg     unsigned char 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;  dec             1    8[BANK0 ] unsigned char 
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      unsigned char 
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;Total ram usage:        1 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:   12
  7651 ;; This function calls:
  7652 ;;		___awdiv
  7653 ;; This function is called by:
  7654 ;;		_caltime_to_RTCC
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text31
  7659  014422                     __ptext31:
  7660                           	opt stack 0
  7661  014422                     _d_to_x:
  7662                           	opt stack 12
  7663                           
  7664                           ; BSR set to: 15
  7665                           ;incstack = 0
  7666                           ;d_to_x@dec stored from wreg
  7667  014422  0100               	movlb	0	; () banked
  7668  014424  6F68               	movwf	d_to_x@dec& (0+255),b
  7669                           
  7670                           ;My_RTCC.c: 49: return dec / 10 * 6 + dec;
  7671  014426  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  7672  01442A  0100               	movlb	0	; () banked
  7673  01442C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7674  01442E  0E00               	movlw	0
  7675  014430  0100               	movlb	0	; () banked
  7676  014432  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7677  014434  0E0A               	movlw	10
  7678  014436  6F62               	movwf	___awdiv@divisor& (0+255),b
  7679  014438  ECF0  F096         	call	___awdiv	;wreg free
  7680  01443C  0100               	movlb	0	; () banked
  7681  01443E  5160               	movf	?___awdiv& (0+255),w,b
  7682  014440  0D06               	mullw	6
  7683  014442  50F3               	movf	prodl,w,c
  7684  014444  0100               	movlb	0	; () banked
  7685  014446  2568               	addwf	d_to_x@dec& (0+255),w,b
  7686  014448  0012               	return	
  7687  01444A                     __end_of_d_to_x:
  7688                           	opt stack 0
  7689                           tblptru	equ	0xFF8
  7690                           tblptrh	equ	0xFF7
  7691                           tblptrl	equ	0xFF6
  7692                           tablat	equ	0xFF5
  7693                           prodh	equ	0xFF4
  7694                           prodl	equ	0xFF3
  7695                           intcon	equ	0xFF2
  7696                           intcon2	equ	0xFF1
  7697                           postinc0	equ	0xFEE
  7698                           wreg	equ	0xFE8
  7699                           indf1	equ	0xFE7
  7700                           postinc1	equ	0xFE6
  7701                           postdec1	equ	0xFE5
  7702                           fsr1h	equ	0xFE2
  7703                           fsr1l	equ	0xFE1
  7704                           indf2	equ	0xFDF
  7705                           postinc2	equ	0xFDE
  7706                           postdec2	equ	0xFDD
  7707                           fsr2h	equ	0xFDA
  7708                           fsr2l	equ	0xFD9
  7709                           status	equ	0xFD8
  7710                           
  7711 ;; *************** function ___awdiv *****************
  7712 ;; Defined at:
  7713 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;  dividend        2    0[BANK0 ] int 
  7716 ;;  divisor         2    2[BANK0 ] int 
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  quotient        2    6[BANK0 ] int 
  7719 ;;  sign            1    5[BANK0 ] unsigned char 
  7720 ;;  counter         1    4[BANK0 ] unsigned char 
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  2    0[BANK0 ] int 
  7723 ;; Registers used:
  7724 ;;		wreg, status,2, status,0
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7730 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7731 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7733 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7734 ;;Total ram usage:        8 bytes
  7735 ;; Hardware stack levels used:    1
  7736 ;; Hardware stack levels required when called:   11
  7737 ;; This function calls:
  7738 ;;		Nothing
  7739 ;; This function is called by:
  7740 ;;		_d_to_x
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text32
  7745  012DE0                     __ptext32:
  7746                           	opt stack 0
  7747  012DE0                     ___awdiv:
  7748                           	opt stack 12
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;incstack = 0
  7752  012DE0  0E00               	movlw	0
  7753  012DE2  0100               	movlb	0	; () banked
  7754  012DE4  6F65               	movwf	___awdiv@sign& (0+255),b
  7755                           
  7756                           ; BSR set to: 0
  7757  012DE6  0100               	movlb	0	; () banked
  7758  012DE8  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7759  012DEA  D008               	goto	l8226
  7760                           
  7761                           ; BSR set to: 0
  7762  012DEC  0100               	movlb	0	; () banked
  7763  012DEE  6D62               	negf	___awdiv@divisor& (0+255),b
  7764  012DF0  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7765  012DF2  B0D8               	btfsc	status,0,c
  7766  012DF4  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7767                           
  7768                           ; BSR set to: 0
  7769  012DF6  0E01               	movlw	1
  7770  012DF8  0100               	movlb	0	; () banked
  7771  012DFA  6F65               	movwf	___awdiv@sign& (0+255),b
  7772  012DFC                     l8226:
  7773                           
  7774                           ; BSR set to: 0
  7775  012DFC  0100               	movlb	0	; () banked
  7776  012DFE  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7777  012E00  D008               	goto	l8232
  7778                           
  7779                           ; BSR set to: 0
  7780  012E02  0100               	movlb	0	; () banked
  7781  012E04  6D60               	negf	___awdiv@dividend& (0+255),b
  7782  012E06  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7783  012E08  B0D8               	btfsc	status,0,c
  7784  012E0A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7785                           
  7786                           ; BSR set to: 0
  7787  012E0C  0E01               	movlw	1
  7788  012E0E  0100               	movlb	0	; () banked
  7789  012E10  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7790  012E12                     l8232:
  7791                           
  7792                           ; BSR set to: 0
  7793  012E12  0E00               	movlw	0
  7794  012E14  0100               	movlb	0	; () banked
  7795  012E16  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7796  012E18  0E00               	movlw	0
  7797  012E1A  6F66               	movwf	___awdiv@quotient& (0+255),b
  7798                           
  7799                           ; BSR set to: 0
  7800  012E1C  0100               	movlb	0	; () banked
  7801  012E1E  5162               	movf	___awdiv@divisor& (0+255),w,b
  7802  012E20  0100               	movlb	0	; () banked
  7803  012E22  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7804  012E24  B4D8               	btfsc	status,2,c
  7805  012E26  D02C               	goto	l8254
  7806                           
  7807                           ; BSR set to: 0
  7808  012E28  0E01               	movlw	1
  7809  012E2A  0100               	movlb	0	; () banked
  7810  012E2C  6F64               	movwf	___awdiv@counter& (0+255),b
  7811  012E2E  D006               	goto	l8240
  7812  012E30                     l8238:
  7813                           
  7814                           ; BSR set to: 0
  7815  012E30  0100               	movlb	0	; () banked
  7816  012E32  90D8               	bcf	status,0,c
  7817  012E34  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7818  012E36  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7819  012E38  0100               	movlb	0	; () banked
  7820  012E3A  2B64               	incf	___awdiv@counter& (0+255),f,b
  7821  012E3C                     l8240:
  7822                           
  7823                           ; BSR set to: 0
  7824  012E3C  0100               	movlb	0	; () banked
  7825  012E3E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7826  012E40  D7F7               	goto	l8238
  7827  012E42                     l8242:
  7828                           
  7829                           ; BSR set to: 0
  7830  012E42  0100               	movlb	0	; () banked
  7831  012E44  90D8               	bcf	status,0,c
  7832  012E46  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7833  012E48  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7834                           
  7835                           ; BSR set to: 0
  7836  012E4A  0100               	movlb	0	; () banked
  7837  012E4C  5162               	movf	___awdiv@divisor& (0+255),w,b
  7838  012E4E  0100               	movlb	0	; () banked
  7839  012E50  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7840  012E52  0100               	movlb	0	; () banked
  7841  012E54  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7842  012E56  0100               	movlb	0	; () banked
  7843  012E58  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7844  012E5A  A0D8               	btfss	status,0,c
  7845  012E5C  D00A               	goto	l8250
  7846                           
  7847                           ; BSR set to: 0
  7848  012E5E  0100               	movlb	0	; () banked
  7849  012E60  5162               	movf	___awdiv@divisor& (0+255),w,b
  7850  012E62  0100               	movlb	0	; () banked
  7851  012E64  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7852  012E66  0100               	movlb	0	; () banked
  7853  012E68  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7854  012E6A  0100               	movlb	0	; () banked
  7855  012E6C  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7856                           
  7857                           ; BSR set to: 0
  7858  012E6E  0100               	movlb	0	; () banked
  7859  012E70  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7860  012E72                     l8250:
  7861                           
  7862                           ; BSR set to: 0
  7863  012E72  0100               	movlb	0	; () banked
  7864  012E74  90D8               	bcf	status,0,c
  7865  012E76  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7866  012E78  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7867                           
  7868                           ; BSR set to: 0
  7869  012E7A  0100               	movlb	0	; () banked
  7870  012E7C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7871  012E7E  D7E1               	goto	l8242
  7872  012E80                     l8254:
  7873                           
  7874                           ; BSR set to: 0
  7875  012E80  0100               	movlb	0	; () banked
  7876  012E82  5165               	movf	___awdiv@sign& (0+255),w,b
  7877  012E84  0100               	movlb	0	; () banked
  7878  012E86  B4D8               	btfsc	status,2,c
  7879  012E88  D005               	goto	l8258
  7880                           
  7881                           ; BSR set to: 0
  7882  012E8A  0100               	movlb	0	; () banked
  7883  012E8C  6D66               	negf	___awdiv@quotient& (0+255),b
  7884  012E8E  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7885  012E90  B0D8               	btfsc	status,0,c
  7886  012E92  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7887  012E94                     l8258:
  7888                           
  7889                           ; BSR set to: 0
  7890  012E94  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7891  012E98  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7892  012E9C  0012               	return	
  7893  012E9E                     __end_of___awdiv:
  7894                           	opt stack 0
  7895                           tblptru	equ	0xFF8
  7896                           tblptrh	equ	0xFF7
  7897                           tblptrl	equ	0xFF6
  7898                           tablat	equ	0xFF5
  7899                           prodh	equ	0xFF4
  7900                           prodl	equ	0xFF3
  7901                           intcon	equ	0xFF2
  7902                           intcon2	equ	0xFF1
  7903                           postinc0	equ	0xFEE
  7904                           wreg	equ	0xFE8
  7905                           indf1	equ	0xFE7
  7906                           postinc1	equ	0xFE6
  7907                           postdec1	equ	0xFE5
  7908                           fsr1h	equ	0xFE2
  7909                           fsr1l	equ	0xFE1
  7910                           indf2	equ	0xFDF
  7911                           postinc2	equ	0xFDE
  7912                           postdec2	equ	0xFDD
  7913                           fsr2h	equ	0xFDA
  7914                           fsr2l	equ	0xFD9
  7915                           status	equ	0xFD8
  7916                           
  7917 ;; *************** function _OSC_init *****************
  7918 ;; Defined at:
  7919 ;;		line 8 in file "../My_library/My_PIC.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;		None
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;		None               void
  7926 ;; Registers used:
  7927 ;;		wreg, status,2
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7937 ;;Total ram usage:        0 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; Hardware stack levels required when called:   11
  7940 ;; This function calls:
  7941 ;;		Nothing
  7942 ;; This function is called by:
  7943 ;;		_main_init
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text33
  7948  0145AC                     __ptext33:
  7949                           	opt stack 0
  7950  0145AC                     _OSC_init:
  7951                           	opt stack 18
  7952                           
  7953                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;incstack = 0
  7957  0145AC  88D3               	bsf	4051,4,c	;volatile
  7958  0145AE  8AD3               	bsf	4051,5,c	;volatile
  7959  0145B0  8CD3               	bsf	4051,6,c	;volatile
  7960                           
  7961                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  7962  0145B2  8C9B               	bsf	3995,6,c	;volatile
  7963                           
  7964                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  7965  0145B4  0EFC               	movlw	-4
  7966  0145B6  16D3               	andwf	4051,f,c	;volatile
  7967  0145B8  0012               	return		;funcret
  7968  0145BA                     __end_of_OSC_init:
  7969                           	opt stack 0
  7970                           tblptru	equ	0xFF8
  7971                           tblptrh	equ	0xFF7
  7972                           tblptrl	equ	0xFF6
  7973                           tablat	equ	0xFF5
  7974                           prodh	equ	0xFF4
  7975                           prodl	equ	0xFF3
  7976                           intcon	equ	0xFF2
  7977                           intcon2	equ	0xFF1
  7978                           postinc0	equ	0xFEE
  7979                           wreg	equ	0xFE8
  7980                           indf1	equ	0xFE7
  7981                           postinc1	equ	0xFE6
  7982                           postdec1	equ	0xFE5
  7983                           fsr1h	equ	0xFE2
  7984                           fsr1l	equ	0xFE1
  7985                           indf2	equ	0xFDF
  7986                           postinc2	equ	0xFDE
  7987                           postdec2	equ	0xFDD
  7988                           fsr2h	equ	0xFDA
  7989                           fsr2l	equ	0xFD9
  7990                           status	equ	0xFD8
  7991                           
  7992 ;; *************** function _display_time_0802 *****************
  7993 ;; Defined at:
  7994 ;;		line 225 in file "../My_library/My_RTCC.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;  tm              2   55[BANK0 ] PTR struct .
  7997 ;;		 -> now(14), 
  7998 ;;  line0           2   57[BANK0 ] PTR unsigned char 
  7999 ;;		 -> main@s(40), 
  8000 ;;  line1           2   59[BANK0 ] PTR unsigned char 
  8001 ;;		 -> main@s(40), 
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;		None
  8004 ;; Return value:  Size  Location     Type
  8005 ;;		None               void
  8006 ;; Registers used:
  8007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8013 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8016 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8017 ;;Total ram usage:        6 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:   15
  8020 ;; This function calls:
  8021 ;;		_RTCC_from_RTCC
  8022 ;;		_display_dec
  8023 ;;		_strcat
  8024 ;;		_strcpy
  8025 ;; This function is called by:
  8026 ;;		_main
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text34
  8031  011086                     __ptext34:
  8032                           	opt stack 0
  8033  011086                     _display_time_0802:
  8034                           	opt stack 15
  8035                           
  8036                           ;My_RTCC.c: 226: RTCC_from_RTCC(&now);
  8037                           
  8038                           ;incstack = 0
  8039  011086  0E35               	movlw	low _now
  8040  011088  0100               	movlb	0	; () banked
  8041  01108A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  8042  01108C  0E01               	movlw	high _now
  8043  01108E  0100               	movlb	0	; () banked
  8044  011090  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  8045  011092  ECB5  F0A2         	call	_RTCC_from_RTCC	;wreg free
  8046                           
  8047                           ;My_RTCC.c: 228: strcpy(line0, "");
  8048  011096  C099  F060         	movff	display_time_0802@line0,strcpy@to
  8049  01109A  C09A  F061         	movff	display_time_0802@line0+1,strcpy@to+1
  8050  01109E  0EE6               	movlw	low (STR_19+3)
  8051  0110A0  0100               	movlb	0	; () banked
  8052  0110A2  6F62               	movwf	strcpy@from& (0+255),b
  8053  0110A4  0EFF               	movlw	high (STR_19+3)
  8054  0110A6  0100               	movlb	0	; () banked
  8055  0110A8  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8056  0110AA  EC0A  F0A1         	call	_strcpy	;wreg free
  8057                           
  8058                           ;My_RTCC.c: 229: display_dec(line0, tm->YY, tm->edit.flag.YY);
  8059  0110AE  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  8060  0110B2  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  8061  0110B6  0100               	movlb	0	; () banked
  8062  0110B8  EE20 F00A          	lfsr	2,10
  8063  0110BC  5197               	movf	display_time_0802@tm& (0+255),w,b
  8064  0110BE  26D9               	addwf	fsr2l,f,c
  8065  0110C0  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8066  0110C2  22DA               	addwfc	fsr2h,f,c
  8067  0110C4  50DF               	movf	indf2,w,c
  8068  0110C6  0100               	movlb	0	; () banked
  8069  0110C8  6F91               	movwf	display_dec@dec& (0+255),b
  8070  0110CA  0100               	movlb	0	; () banked
  8071  0110CC  EE20 F00D          	lfsr	2,13
  8072  0110D0  5197               	movf	display_time_0802@tm& (0+255),w,b
  8073  0110D2  26D9               	addwf	fsr2l,f,c
  8074  0110D4  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8075  0110D6  22DA               	addwfc	fsr2h,f,c
  8076  0110D8  0E00               	movlw	0
  8077  0110DA  BADF               	btfsc	indf2,5,c
  8078  0110DC  0E01               	movlw	1
  8079  0110DE  0100               	movlb	0	; () banked
  8080  0110E0  6F92               	movwf	display_dec@edit& (0+255),b
  8081  0110E2  EC55  F09E         	call	_display_dec	;wreg free
  8082                           
  8083                           ;My_RTCC.c: 230: strcat(line0, "/");
  8084  0110E6  C099  F060         	movff	display_time_0802@line0,strcat@to
  8085  0110EA  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  8086  0110EE  0EFA               	movlw	low STR_4
  8087  0110F0  0100               	movlb	0	; () banked
  8088  0110F2  6F62               	movwf	strcat@from& (0+255),b
  8089  0110F4  0EFF               	movlw	high STR_4
  8090  0110F6  0100               	movlb	0	; () banked
  8091  0110F8  6F63               	movwf	(strcat@from+1)& (0+255),b
  8092  0110FA  EC1E  F09F         	call	_strcat	;wreg free
  8093                           
  8094                           ;My_RTCC.c: 231: display_dec(line0, tm->MM, tm->edit.flag.MM);
  8095  0110FE  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  8096  011102  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  8097  011106  0100               	movlb	0	; () banked
  8098  011108  EE20 F009          	lfsr	2,9
  8099  01110C  5197               	movf	display_time_0802@tm& (0+255),w,b
  8100  01110E  26D9               	addwf	fsr2l,f,c
  8101  011110  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8102  011112  22DA               	addwfc	fsr2h,f,c
  8103  011114  50DF               	movf	indf2,w,c
  8104  011116  0100               	movlb	0	; () banked
  8105  011118  6F91               	movwf	display_dec@dec& (0+255),b
  8106  01111A  0100               	movlb	0	; () banked
  8107  01111C  EE20 F00D          	lfsr	2,13
  8108  011120  5197               	movf	display_time_0802@tm& (0+255),w,b
  8109  011122  26D9               	addwf	fsr2l,f,c
  8110  011124  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8111  011126  22DA               	addwfc	fsr2h,f,c
  8112  011128  0E00               	movlw	0
  8113  01112A  B8DF               	btfsc	indf2,4,c
  8114  01112C  0E01               	movlw	1
  8115  01112E  0100               	movlb	0	; () banked
  8116  011130  6F92               	movwf	display_dec@edit& (0+255),b
  8117  011132  EC55  F09E         	call	_display_dec	;wreg free
  8118                           
  8119                           ;My_RTCC.c: 232: strcat(line0, "/");
  8120  011136  C099  F060         	movff	display_time_0802@line0,strcat@to
  8121  01113A  C09A  F061         	movff	display_time_0802@line0+1,strcat@to+1
  8122  01113E  0EFA               	movlw	low STR_4
  8123  011140  0100               	movlb	0	; () banked
  8124  011142  6F62               	movwf	strcat@from& (0+255),b
  8125  011144  0EFF               	movlw	high STR_4
  8126  011146  0100               	movlb	0	; () banked
  8127  011148  6F63               	movwf	(strcat@from+1)& (0+255),b
  8128  01114A  EC1E  F09F         	call	_strcat	;wreg free
  8129                           
  8130                           ;My_RTCC.c: 233: display_dec(line0, tm->DD, tm->edit.flag.DD);
  8131  01114E  C099  F08F         	movff	display_time_0802@line0,display_dec@str
  8132  011152  C09A  F090         	movff	display_time_0802@line0+1,display_dec@str+1
  8133  011156  0100               	movlb	0	; () banked
  8134  011158  EE20 F008          	lfsr	2,8
  8135  01115C  5197               	movf	display_time_0802@tm& (0+255),w,b
  8136  01115E  26D9               	addwf	fsr2l,f,c
  8137  011160  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8138  011162  22DA               	addwfc	fsr2h,f,c
  8139  011164  50DF               	movf	indf2,w,c
  8140  011166  0100               	movlb	0	; () banked
  8141  011168  6F91               	movwf	display_dec@dec& (0+255),b
  8142  01116A  0100               	movlb	0	; () banked
  8143  01116C  EE20 F00D          	lfsr	2,13
  8144  011170  5197               	movf	display_time_0802@tm& (0+255),w,b
  8145  011172  26D9               	addwf	fsr2l,f,c
  8146  011174  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8147  011176  22DA               	addwfc	fsr2h,f,c
  8148  011178  0E00               	movlw	0
  8149  01117A  B6DF               	btfsc	indf2,3,c
  8150  01117C  0E01               	movlw	1
  8151  01117E  0100               	movlb	0	; () banked
  8152  011180  6F92               	movwf	display_dec@edit& (0+255),b
  8153  011182  EC55  F09E         	call	_display_dec	;wreg free
  8154                           
  8155                           ;My_RTCC.c: 235: strcpy(line1, "");
  8156  011186  C09B  F060         	movff	display_time_0802@line1,strcpy@to
  8157  01118A  C09C  F061         	movff	display_time_0802@line1+1,strcpy@to+1
  8158  01118E  0EE6               	movlw	low (STR_19+3)
  8159  011190  0100               	movlb	0	; () banked
  8160  011192  6F62               	movwf	strcpy@from& (0+255),b
  8161  011194  0EFF               	movlw	high (STR_19+3)
  8162  011196  0100               	movlb	0	; () banked
  8163  011198  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8164  01119A  EC0A  F0A1         	call	_strcpy	;wreg free
  8165                           
  8166                           ;My_RTCC.c: 236: display_dec(line1, tm->hh, tm->edit.flag.hh);
  8167  01119E  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  8168  0111A2  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  8169  0111A6  0100               	movlb	0	; () banked
  8170  0111A8  EE20 F006          	lfsr	2,6
  8171  0111AC  5197               	movf	display_time_0802@tm& (0+255),w,b
  8172  0111AE  26D9               	addwf	fsr2l,f,c
  8173  0111B0  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8174  0111B2  22DA               	addwfc	fsr2h,f,c
  8175  0111B4  50DF               	movf	indf2,w,c
  8176  0111B6  0100               	movlb	0	; () banked
  8177  0111B8  6F91               	movwf	display_dec@dec& (0+255),b
  8178  0111BA  0100               	movlb	0	; () banked
  8179  0111BC  EE20 F00D          	lfsr	2,13
  8180  0111C0  5197               	movf	display_time_0802@tm& (0+255),w,b
  8181  0111C2  26D9               	addwf	fsr2l,f,c
  8182  0111C4  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8183  0111C6  22DA               	addwfc	fsr2h,f,c
  8184  0111C8  0E00               	movlw	0
  8185  0111CA  B4DF               	btfsc	indf2,2,c
  8186  0111CC  0E01               	movlw	1
  8187  0111CE  0100               	movlb	0	; () banked
  8188  0111D0  6F92               	movwf	display_dec@edit& (0+255),b
  8189  0111D2  EC55  F09E         	call	_display_dec	;wreg free
  8190                           
  8191                           ;My_RTCC.c: 237: if (now.colon) strcat(line1, ":");
  8192  0111D6  0101               	movlb	1	; () banked
  8193  0111D8  5140               	movf	(_now+11)& (0+255),w,b
  8194  0111DA  B4D8               	btfsc	status,2,c
  8195  0111DC  D00D               	goto	l9292
  8196                           
  8197                           ; BSR set to: 1
  8198  0111DE  C09B  F060         	movff	display_time_0802@line1,strcat@to
  8199  0111E2  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  8200  0111E6  0EFC               	movlw	low STR_7
  8201  0111E8  0100               	movlb	0	; () banked
  8202  0111EA  6F62               	movwf	strcat@from& (0+255),b
  8203  0111EC  0EFF               	movlw	high STR_7
  8204  0111EE  0100               	movlb	0	; () banked
  8205  0111F0  6F63               	movwf	(strcat@from+1)& (0+255),b
  8206  0111F2  EC1E  F09F         	call	_strcat	;wreg free
  8207  0111F6  D00C               	goto	l9294
  8208  0111F8                     l9292:
  8209                           
  8210                           ;My_RTCC.c: 238: else strcat(line1, " ");
  8211  0111F8  C09B  F060         	movff	display_time_0802@line1,strcat@to
  8212  0111FC  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  8213  011200  0EAA               	movlw	low (STR_15+7)
  8214  011202  0100               	movlb	0	; () banked
  8215  011204  6F62               	movwf	strcat@from& (0+255),b
  8216  011206  0EFF               	movlw	high (STR_15+7)
  8217  011208  0100               	movlb	0	; () banked
  8218  01120A  6F63               	movwf	(strcat@from+1)& (0+255),b
  8219  01120C  EC1E  F09F         	call	_strcat	;wreg free
  8220  011210                     l9294:
  8221                           
  8222                           ;My_RTCC.c: 239: display_dec(line1, tm->mm, tm->edit.flag.mm);
  8223  011210  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  8224  011214  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  8225  011218  0100               	movlb	0	; () banked
  8226  01121A  EE20 F005          	lfsr	2,5
  8227  01121E  5197               	movf	display_time_0802@tm& (0+255),w,b
  8228  011220  26D9               	addwf	fsr2l,f,c
  8229  011222  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8230  011224  22DA               	addwfc	fsr2h,f,c
  8231  011226  50DF               	movf	indf2,w,c
  8232  011228  0100               	movlb	0	; () banked
  8233  01122A  6F91               	movwf	display_dec@dec& (0+255),b
  8234  01122C  0100               	movlb	0	; () banked
  8235  01122E  EE20 F00D          	lfsr	2,13
  8236  011232  5197               	movf	display_time_0802@tm& (0+255),w,b
  8237  011234  26D9               	addwf	fsr2l,f,c
  8238  011236  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8239  011238  22DA               	addwfc	fsr2h,f,c
  8240  01123A  0E00               	movlw	0
  8241  01123C  B2DF               	btfsc	indf2,1,c
  8242  01123E  0E01               	movlw	1
  8243  011240  0100               	movlb	0	; () banked
  8244  011242  6F92               	movwf	display_dec@edit& (0+255),b
  8245  011244  EC55  F09E         	call	_display_dec	;wreg free
  8246                           
  8247                           ;My_RTCC.c: 240: strcat(line1, "-");
  8248  011248  C09B  F060         	movff	display_time_0802@line1,strcat@to
  8249  01124C  C09C  F061         	movff	display_time_0802@line1+1,strcat@to+1
  8250  011250  0EF8               	movlw	low STR_9
  8251  011252  0100               	movlb	0	; () banked
  8252  011254  6F62               	movwf	strcat@from& (0+255),b
  8253  011256  0EFF               	movlw	high STR_9
  8254  011258  0100               	movlb	0	; () banked
  8255  01125A  6F63               	movwf	(strcat@from+1)& (0+255),b
  8256  01125C  EC1E  F09F         	call	_strcat	;wreg free
  8257                           
  8258                           ;My_RTCC.c: 241: display_dec(line1, tm->ss, tm->edit.flag.ss);
  8259  011260  C09B  F08F         	movff	display_time_0802@line1,display_dec@str
  8260  011264  C09C  F090         	movff	display_time_0802@line1+1,display_dec@str+1
  8261  011268  0100               	movlb	0	; () banked
  8262  01126A  EE20 F004          	lfsr	2,4
  8263  01126E  5197               	movf	display_time_0802@tm& (0+255),w,b
  8264  011270  26D9               	addwf	fsr2l,f,c
  8265  011272  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8266  011274  22DA               	addwfc	fsr2h,f,c
  8267  011276  50DF               	movf	indf2,w,c
  8268  011278  0100               	movlb	0	; () banked
  8269  01127A  6F91               	movwf	display_dec@dec& (0+255),b
  8270  01127C  0100               	movlb	0	; () banked
  8271  01127E  EE20 F00D          	lfsr	2,13
  8272  011282  5197               	movf	display_time_0802@tm& (0+255),w,b
  8273  011284  26D9               	addwf	fsr2l,f,c
  8274  011286  5198               	movf	(display_time_0802@tm+1)& (0+255),w,b
  8275  011288  22DA               	addwfc	fsr2h,f,c
  8276  01128A  0E00               	movlw	0
  8277  01128C  B0DF               	btfsc	indf2,0,c
  8278  01128E  0E01               	movlw	1
  8279  011290  0100               	movlb	0	; () banked
  8280  011292  6F92               	movwf	display_dec@edit& (0+255),b
  8281  011294  EC55  F09E         	call	_display_dec	;wreg free
  8282  011298  0012               	return		;funcret
  8283  01129A                     __end_of_display_time_0802:
  8284                           	opt stack 0
  8285                           tblptru	equ	0xFF8
  8286                           tblptrh	equ	0xFF7
  8287                           tblptrl	equ	0xFF6
  8288                           tablat	equ	0xFF5
  8289                           prodh	equ	0xFF4
  8290                           prodl	equ	0xFF3
  8291                           intcon	equ	0xFF2
  8292                           intcon2	equ	0xFF1
  8293                           postinc0	equ	0xFEE
  8294                           wreg	equ	0xFE8
  8295                           indf1	equ	0xFE7
  8296                           postinc1	equ	0xFE6
  8297                           postdec1	equ	0xFE5
  8298                           fsr1h	equ	0xFE2
  8299                           fsr1l	equ	0xFE1
  8300                           indf2	equ	0xFDF
  8301                           postinc2	equ	0xFDE
  8302                           postdec2	equ	0xFDD
  8303                           fsr2h	equ	0xFDA
  8304                           fsr2l	equ	0xFD9
  8305                           status	equ	0xFD8
  8306                           
  8307 ;; *************** function _strcpy *****************
  8308 ;; Defined at:
  8309 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;  to              2    0[BANK0 ] PTR unsigned char 
  8312 ;;		 -> main@s(40), 
  8313 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  8314 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  8317 ;;		 -> main@s(40), 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  2    0[BANK0 ] PTR unsigned char 
  8320 ;; Registers used:
  8321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8328 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;Total ram usage:        6 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; Hardware stack levels required when called:   11
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_display_time_0802
  8338 ;;		_display_time_1602
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342                           	psect	text35
  8343  014214                     __ptext35:
  8344                           	opt stack 0
  8345  014214                     _strcpy:
  8346                           	opt stack 18
  8347                           
  8348                           ;incstack = 0
  8349  014214  C060  F064         	movff	strcpy@to,strcpy@cp
  8350  014218  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  8351  01421C  D006               	goto	l9160
  8352  01421E                     l9158:
  8353  01421E  0100               	movlb	0	; () banked
  8354  014220  4B64               	infsnz	strcpy@cp& (0+255),f,b
  8355  014222  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  8356  014224  0100               	movlb	0	; () banked
  8357  014226  4B62               	infsnz	strcpy@from& (0+255),f,b
  8358  014228  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  8359  01422A                     l9160:
  8360  01422A  C062  FFF6         	movff	strcpy@from,tblptrl
  8361  01422E  C063  FFF7         	movff	strcpy@from+1,tblptrh
  8362  014232                     	if	0	;tblptru may be non-zero
  8363  014232                     	endif
  8364  014232                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8365  014232  0E00               	movlw	low (__mediumconst shr (0+16))
  8366  014234  6EF8               	movwf	tblptru,c
  8367  014236                     	endif
  8368  014236  C064  FFD9         	movff	strcpy@cp,fsr2l
  8369  01423A  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  8370  01423E  0008               	tblrd		*
  8371  014240  CFF5 FFDF          	movff	tablat,indf2
  8372  014244  50DF               	movf	indf2,w,c
  8373  014246  B4D8               	btfsc	status,2,c
  8374  014248  0012               	return	
  8375  01424A  D7E9               	goto	l9158
  8376  01424C                     __end_of_strcpy:
  8377                           	opt stack 0
  8378                           tblptru	equ	0xFF8
  8379                           tblptrh	equ	0xFF7
  8380                           tblptrl	equ	0xFF6
  8381                           tablat	equ	0xFF5
  8382                           prodh	equ	0xFF4
  8383                           prodl	equ	0xFF3
  8384                           intcon	equ	0xFF2
  8385                           intcon2	equ	0xFF1
  8386                           postinc0	equ	0xFEE
  8387                           wreg	equ	0xFE8
  8388                           indf1	equ	0xFE7
  8389                           postinc1	equ	0xFE6
  8390                           postdec1	equ	0xFE5
  8391                           fsr1h	equ	0xFE2
  8392                           fsr1l	equ	0xFE1
  8393                           indf2	equ	0xFDF
  8394                           postinc2	equ	0xFDE
  8395                           postdec2	equ	0xFDD
  8396                           fsr2h	equ	0xFDA
  8397                           fsr2l	equ	0xFD9
  8398                           status	equ	0xFD8
  8399                           
  8400 ;; *************** function _display_dec *****************
  8401 ;; Defined at:
  8402 ;;		line 218 in file "../My_library/My_RTCC.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  str             2   47[BANK0 ] PTR unsigned char 
  8405 ;;		 -> main@s(40), 
  8406 ;;  dec             1   49[BANK0 ] unsigned char 
  8407 ;;  edit            1   50[BANK0 ] unsigned char 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  s               4   51[BANK0 ] unsigned char [4]
  8410 ;; Return value:  Size  Location     Type
  8411 ;;		None               void
  8412 ;; Registers used:
  8413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8420 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8422 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8423 ;;Total ram usage:        8 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:   13
  8426 ;; This function calls:
  8427 ;;		_sprintf
  8428 ;;		_strcat
  8429 ;; This function is called by:
  8430 ;;		_display_time_0802
  8431 ;;		_display_time_1602
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           	psect	text36
  8436  013CAA                     __ptext36:
  8437                           	opt stack 0
  8438  013CAA                     _display_dec:
  8439                           	opt stack 16
  8440                           
  8441                           ;My_RTCC.c: 219: char s[4];
  8442                           ;My_RTCC.c: 220: sprintf(s, "%02d", dec);
  8443                           
  8444                           ;incstack = 0
  8445  013CAA  0E93               	movlw	low display_dec@s
  8446  013CAC  0100               	movlb	0	; () banked
  8447  013CAE  6F6C               	movwf	sprintf@sp& (0+255),b
  8448  013CB0  0E00               	movlw	high display_dec@s
  8449  013CB2  0100               	movlb	0	; () banked
  8450  013CB4  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  8451  013CB6  0EDE               	movlw	low STR_1
  8452  013CB8  0100               	movlb	0	; () banked
  8453  013CBA  6F6E               	movwf	sprintf@f& (0+255),b
  8454  013CBC  0EFF               	movlw	high STR_1
  8455  013CBE  0100               	movlb	0	; () banked
  8456  013CC0  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  8457  013CC2  C091  F070         	movff	display_dec@dec,?_sprintf+4
  8458  013CC6  0100               	movlb	0	; () banked
  8459  013CC8  6B71               	clrf	(?_sprintf+5)& (0+255),b
  8460  013CCA  EC00  F080         	call	_sprintf	;wreg free
  8461                           
  8462                           ;My_RTCC.c: 221: if (edit && now.halfsec)strcat(str, "  ");
  8463  013CCE  0100               	movlb	0	; () banked
  8464  013CD0  5192               	movf	display_dec@edit& (0+255),w,b
  8465  013CD2  0100               	movlb	0	; () banked
  8466  013CD4  B4D8               	btfsc	status,2,c
  8467  013CD6  D011               	goto	l9154
  8468                           
  8469                           ; BSR set to: 0
  8470  013CD8  0101               	movlb	1	; () banked
  8471  013CDA  5141               	movf	(_now+12)& (0+255),w,b
  8472  013CDC  B4D8               	btfsc	status,2,c
  8473  013CDE  D00D               	goto	l9154
  8474                           
  8475                           ; BSR set to: 1
  8476  013CE0  C08F  F060         	movff	display_dec@str,strcat@to
  8477  013CE4  C090  F061         	movff	display_dec@str+1,strcat@to+1
  8478  013CE8  0EA9               	movlw	low (STR_15+6)
  8479  013CEA  0100               	movlb	0	; () banked
  8480  013CEC  6F62               	movwf	strcat@from& (0+255),b
  8481  013CEE  0EFF               	movlw	high (STR_15+6)
  8482  013CF0  0100               	movlb	0	; () banked
  8483  013CF2  6F63               	movwf	(strcat@from+1)& (0+255),b
  8484  013CF4  EC1E  F09F         	call	_strcat	;wreg free
  8485  013CF8  0012               	return	
  8486  013CFA                     l9154:
  8487                           
  8488                           ;My_RTCC.c: 222: else strcat(str, s);
  8489  013CFA  C08F  F060         	movff	display_dec@str,strcat@to
  8490  013CFE  C090  F061         	movff	display_dec@str+1,strcat@to+1
  8491  013D02  0E93               	movlw	low display_dec@s
  8492  013D04  0100               	movlb	0	; () banked
  8493  013D06  6F62               	movwf	strcat@from& (0+255),b
  8494  013D08  0E00               	movlw	high display_dec@s
  8495  013D0A  0100               	movlb	0	; () banked
  8496  013D0C  6F63               	movwf	(strcat@from+1)& (0+255),b
  8497  013D0E  EC1E  F09F         	call	_strcat	;wreg free
  8498  013D12  0012               	return	
  8499  013D14                     __end_of_display_dec:
  8500                           	opt stack 0
  8501                           tblptru	equ	0xFF8
  8502                           tblptrh	equ	0xFF7
  8503                           tblptrl	equ	0xFF6
  8504                           tablat	equ	0xFF5
  8505                           prodh	equ	0xFF4
  8506                           prodl	equ	0xFF3
  8507                           intcon	equ	0xFF2
  8508                           intcon2	equ	0xFF1
  8509                           postinc0	equ	0xFEE
  8510                           wreg	equ	0xFE8
  8511                           indf1	equ	0xFE7
  8512                           postinc1	equ	0xFE6
  8513                           postdec1	equ	0xFE5
  8514                           fsr1h	equ	0xFE2
  8515                           fsr1l	equ	0xFE1
  8516                           indf2	equ	0xFDF
  8517                           postinc2	equ	0xFDE
  8518                           postdec2	equ	0xFDD
  8519                           fsr2h	equ	0xFDA
  8520                           fsr2l	equ	0xFD9
  8521                           status	equ	0xFD8
  8522                           
  8523 ;; *************** function _strcat *****************
  8524 ;; Defined at:
  8525 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  to              2    0[BANK0 ] PTR unsigned char 
  8528 ;;		 -> main@s(40), 
  8529 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  8530 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
  8531 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
  8532 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
  8533 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  8536 ;;		 -> main@s(40), 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  2    0[BANK0 ] PTR unsigned char 
  8539 ;; Registers used:
  8540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;Total ram usage:        6 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:   11
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		_display_dec
  8557 ;;		_display_time_0802
  8558 ;;		_display_time_1602
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           	psect	text37
  8563  013E3C                     __ptext37:
  8564                           	opt stack 0
  8565  013E3C                     _strcat:
  8566                           	opt stack 18
  8567                           
  8568                           ;incstack = 0
  8569  013E3C  C060  F064         	movff	strcat@to,strcat@cp
  8570  013E40  C061  F065         	movff	strcat@to+1,strcat@cp+1
  8571  013E44  D003               	goto	l8952
  8572  013E46                     l8950:
  8573  013E46  0100               	movlb	0	; () banked
  8574  013E48  4B64               	infsnz	strcat@cp& (0+255),f,b
  8575  013E4A  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8576  013E4C                     l8952:
  8577  013E4C  C064  FFD9         	movff	strcat@cp,fsr2l
  8578  013E50  C065  FFDA         	movff	strcat@cp+1,fsr2h
  8579  013E54  50DF               	movf	indf2,w,c
  8580  013E56  B4D8               	btfsc	status,2,c
  8581  013E58  D007               	goto	l8956
  8582  013E5A  D7F5               	goto	l8950
  8583  013E5C                     l8954:
  8584  013E5C  0100               	movlb	0	; () banked
  8585  013E5E  4B64               	infsnz	strcat@cp& (0+255),f,b
  8586  013E60  2B65               	incf	(strcat@cp+1)& (0+255),f,b
  8587  013E62  0100               	movlb	0	; () banked
  8588  013E64  4B62               	infsnz	strcat@from& (0+255),f,b
  8589  013E66  2B63               	incf	(strcat@from+1)& (0+255),f,b
  8590  013E68                     l8956:
  8591  013E68  C062  FFF6         	movff	strcat@from,tblptrl
  8592  013E6C  C063  FFF7         	movff	strcat@from+1,tblptrh
  8593  013E70  0E00               	movlw	low (__mediumconst shr (0+16))
  8594  013E72  6EF8               	movwf	tblptru,c
  8595  013E74  C064  FFD9         	movff	strcat@cp,fsr2l
  8596  013E78  C065  FFDA         	movff	strcat@cp+1,fsr2h
  8597  013E7C  0E0E               	movlw	(high __ramtop+-1)
  8598  013E7E  64F7               	cpfsgt	tblptrh,c
  8599  013E80  D003               	bra	u8807
  8600  013E82  0008               	tblrd		*
  8601  013E84  50F5               	movf	tablat,w,c
  8602  013E86  D005               	bra	u8800
  8603  013E88                     u8807:
  8604  013E88  CFF6 FFE1          	movff	tblptrl,fsr1l
  8605  013E8C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8606  013E90  50E7               	movf	indf1,w,c
  8607  013E92                     u8800:
  8608  013E92  6EDF               	movwf	indf2,c
  8609  013E94  50DF               	movf	indf2,w,c
  8610  013E96  B4D8               	btfsc	status,2,c
  8611  013E98  0012               	return	
  8612  013E9A  D7E0               	goto	l8954
  8613  013E9C                     __end_of_strcat:
  8614                           	opt stack 0
  8615                           tblptru	equ	0xFF8
  8616                           tblptrh	equ	0xFF7
  8617                           tblptrl	equ	0xFF6
  8618                           tablat	equ	0xFF5
  8619                           prodh	equ	0xFF4
  8620                           prodl	equ	0xFF3
  8621                           intcon	equ	0xFF2
  8622                           intcon2	equ	0xFF1
  8623                           postinc0	equ	0xFEE
  8624                           wreg	equ	0xFE8
  8625                           indf1	equ	0xFE7
  8626                           postinc1	equ	0xFE6
  8627                           postdec1	equ	0xFE5
  8628                           fsr1h	equ	0xFE2
  8629                           fsr1l	equ	0xFE1
  8630                           indf2	equ	0xFDF
  8631                           postinc2	equ	0xFDE
  8632                           postdec2	equ	0xFDD
  8633                           fsr2h	equ	0xFDA
  8634                           fsr2l	equ	0xFD9
  8635                           status	equ	0xFD8
  8636                           
  8637 ;; *************** function _sprintf *****************
  8638 ;; Defined at:
  8639 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  8642 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  8643 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  8644 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  tmpval          4    0        struct .
  8647 ;;  width           2   45[BANK0 ] int 
  8648 ;;  len             2   41[BANK0 ] unsigned int 
  8649 ;;  val             2   39[BANK0 ] unsigned int 
  8650 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  8651 ;;		 -> STR_48(7), weekday_3char(28), 
  8652 ;;  ap              2   35[BANK0 ] PTR void [1]
  8653 ;;		 -> ?_sprintf(2), 
  8654 ;;  c               1   44[BANK0 ] char 
  8655 ;;  flag            1   43[BANK0 ] unsigned char 
  8656 ;;  prec            1   34[BANK0 ] char 
  8657 ;; Return value:  Size  Location     Type
  8658 ;;                  2   12[BANK0 ] int 
  8659 ;; Registers used:
  8660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8661 ;; Tracked objects:
  8662 ;;		On entry : 0/0
  8663 ;;		On exit  : 0/0
  8664 ;;		Unchanged: 0/0
  8665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8666 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8667 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8668 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8669 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8670 ;;Total ram usage:       35 bytes
  8671 ;; Hardware stack levels used:    1
  8672 ;; Hardware stack levels required when called:   12
  8673 ;; This function calls:
  8674 ;;		___lwdiv
  8675 ;;		___lwmod
  8676 ;;		___wmul
  8677 ;;		_isdigit
  8678 ;; This function is called by:
  8679 ;;		_display_dec
  8680 ;;		_print_time
  8681 ;;		_print_time_dec
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text38
  8686  010000                     __ptext38:
  8687                           	opt stack 0
  8688  010000                     _sprintf:
  8689                           	opt stack 13
  8690                           
  8691                           ;doprnt.c: 494: va_list ap;
  8692                           ;doprnt.c: 499: signed char c;
  8693                           ;doprnt.c: 501: int width;
  8694                           ;doprnt.c: 506: signed char prec;
  8695                           ;doprnt.c: 508: unsigned char flag;
  8696                           ;doprnt.c: 523: union {
  8697                           ;doprnt.c: 524: unsigned long vd;
  8698                           ;doprnt.c: 525: double integ;
  8699                           ;doprnt.c: 526: } tmpval;
  8700                           ;doprnt.c: 528: unsigned int val;
  8701                           ;doprnt.c: 529: unsigned len;
  8702                           ;doprnt.c: 530: const char * cp;
  8703                           ;doprnt.c: 533: *ap = __va_start();
  8704                           
  8705                           ;incstack = 0
  8706  010000  0E70               	movlw	low (?_sprintf+4)
  8707  010002  0100               	movlb	0	; () banked
  8708  010004  6F83               	movwf	sprintf@ap& (0+255),b
  8709  010006  0E00               	movlw	high (?_sprintf+4)
  8710  010008  0100               	movlb	0	; () banked
  8711  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  8712                           
  8713                           ;doprnt.c: 536: while(c = *f++) {
  8714  01000C  D20F               	goto	l8632
  8715  01000E                     l8492:
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;doprnt.c: 538: if(c != '%')
  8719  01000E  0E25               	movlw	37
  8720  010010  0100               	movlb	0	; () banked
  8721  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  8722  010014  B4D8               	btfsc	status,2,c
  8723  010016  D00A               	goto	l8498
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;doprnt.c: 540: {
  8727                           ;doprnt.c: 541: ((*sp++ = (c)));
  8728  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  8729  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  8730  010020  C08C  FFDF         	movff	sprintf@c,indf2
  8731                           
  8732                           ; BSR set to: 0
  8733  010024  0100               	movlb	0	; () banked
  8734  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  8735  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  8736                           
  8737                           ;doprnt.c: 542: continue;
  8738  01002A  D200               	goto	l8632
  8739  01002C                     l8498:
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;doprnt.c: 543: }
  8743                           ;doprnt.c: 546: width = 0;
  8744  01002C  0E00               	movlw	0
  8745  01002E  0100               	movlb	0	; () banked
  8746  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  8747  010032  0E00               	movlw	0
  8748  010034  6F8D               	movwf	sprintf@width& (0+255),b
  8749                           
  8750                           ;doprnt.c: 548: flag = 0;
  8751  010036  0E00               	movlw	0
  8752  010038  0100               	movlb	0	; () banked
  8753  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;doprnt.c: 551: switch(*f) {
  8757                           
  8758                           ;doprnt.c: 550: for(;;) {
  8759  01003C  D005               	goto	l8504
  8760  01003E                     l8500:
  8761                           
  8762                           ;doprnt.c: 580: flag |= 0x04;
  8763  01003E  0100               	movlb	0	; () banked
  8764  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  8765                           
  8766                           ;doprnt.c: 581: f++;
  8767  010042  0100               	movlb	0	; () banked
  8768  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  8769  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  8770  010048                     l8504:
  8771  010048  C06E  FFF6         	movff	sprintf@f,tblptrl
  8772  01004C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  8773  010050                     	if	0	;tblptru may be non-zero
  8774  010050                     	endif
  8775  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8776  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  8777  010052  6EF8               	movwf	tblptru,c
  8778  010054                     	endif
  8779  010054  0008               	tblrd		*
  8780  010056  50F5               	movf	tablat,w,c
  8781                           
  8782                           ; Switch size 1, requested type "space"
  8783                           ; Number of cases is 1, Range of values is 48 to 48
  8784                           ; switch strategies available:
  8785                           ; Name         Instructions Cycles
  8786                           ; simple_byte            4     3 (average)
  8787                           ;	Chosen strategy is simple_byte
  8788  010058  0A30               	xorlw	48	; case 48
  8789  01005A  B4D8               	btfsc	status,2,c
  8790  01005C  D7F0               	goto	l8500
  8791                           
  8792                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8793                           
  8794                           ;doprnt.c: 586: }
  8795                           
  8796                           ;doprnt.c: 585: break;
  8797  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
  8798  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  8799  010066                     	if	0	;tblptru may be non-zero
  8800  010066                     	endif
  8801  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8802  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  8803  010068  6EF8               	movwf	tblptru,c
  8804  01006A                     	endif
  8805  01006A  0008               	tblrd		*
  8806  01006C  50F5               	movf	tablat,w,c
  8807  01006E  ECFC  F0A1         	call	_isdigit
  8808  010072  A0D8               	btfss	status,0,c
  8809  010074  D0CB               	goto	l8554
  8810                           
  8811                           ;doprnt.c: 598: width = 0;
  8812  010076  0E00               	movlw	0
  8813  010078  0100               	movlb	0	; () banked
  8814  01007A  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  8815  01007C  0E00               	movlw	0
  8816  01007E  6F8D               	movwf	sprintf@width& (0+255),b
  8817  010080                     l8510:
  8818                           
  8819                           ;doprnt.c: 600: width *= 10;
  8820  010080  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  8821  010084  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  8822  010088  0E00               	movlw	0
  8823  01008A  0100               	movlb	0	; () banked
  8824  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8825  01008E  0E0A               	movlw	10
  8826  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  8827  010092  EC26  F0A1         	call	___wmul	;wreg free
  8828  010096  C060  F08D         	movff	?___wmul,sprintf@width
  8829  01009A  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  8830                           
  8831                           ;doprnt.c: 601: width += *f++ - '0';
  8832  01009E  0ED0               	movlw	208
  8833  0100A0  0100               	movlb	0	; () banked
  8834  0100A2  6F7E               	movwf	??_sprintf& (0+255),b
  8835  0100A4  0EFF               	movlw	255
  8836  0100A6  0100               	movlb	0	; () banked
  8837  0100A8  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  8838  0100AA  C06E  FFF6         	movff	sprintf@f,tblptrl
  8839  0100AE  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  8840  0100B2                     	if	0	;tblptru may be non-zero
  8841  0100B2                     	endif
  8842  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8843  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8844  0100B4  6EF8               	movwf	tblptru,c
  8845  0100B6                     	endif
  8846  0100B6  0008               	tblrd		*
  8847  0100B8  50F5               	movf	tablat,w,c
  8848  0100BA  0100               	movlb	0	; () banked
  8849  0100BC  6F80               	movwf	(??_sprintf+2)& (0+255),b
  8850  0100BE  6B81               	clrf	(??_sprintf+3)& (0+255),b
  8851  0100C0  0100               	movlb	0	; () banked
  8852  0100C2  517E               	movf	??_sprintf& (0+255),w,b
  8853  0100C4  0100               	movlb	0	; () banked
  8854  0100C6  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  8855  0100C8  0100               	movlb	0	; () banked
  8856  0100CA  517F               	movf	(??_sprintf+1)& (0+255),w,b
  8857  0100CC  0100               	movlb	0	; () banked
  8858  0100CE  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  8859  0100D0  0100               	movlb	0	; () banked
  8860  0100D2  5180               	movf	(??_sprintf+2)& (0+255),w,b
  8861  0100D4  0100               	movlb	0	; () banked
  8862  0100D6  278D               	addwf	sprintf@width& (0+255),f,b
  8863  0100D8  0100               	movlb	0	; () banked
  8864  0100DA  5181               	movf	(??_sprintf+3)& (0+255),w,b
  8865  0100DC  0100               	movlb	0	; () banked
  8866  0100DE  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  8867                           
  8868                           ; BSR set to: 0
  8869  0100E0  0100               	movlb	0	; () banked
  8870  0100E2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  8871  0100E4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8875  0100E6  C06E  FFF6         	movff	sprintf@f,tblptrl
  8876  0100EA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  8877  0100EE                     	if	0	;tblptru may be non-zero
  8878  0100EE                     	endif
  8879  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8880  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  8881  0100F0  6EF8               	movwf	tblptru,c
  8882  0100F2                     	endif
  8883  0100F2  0008               	tblrd		*
  8884  0100F4  50F5               	movf	tablat,w,c
  8885  0100F6  ECFC  F0A1         	call	_isdigit
  8886  0100FA  A0D8               	btfss	status,0,c
  8887  0100FC  D087               	goto	l8554
  8888  0100FE  D7C0               	goto	l8510
  8889  010100                     l8518:
  8890                           
  8891                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  8892  010100  C083  FFD9         	movff	sprintf@ap,fsr2l
  8893  010104  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  8894  010108  CFDE F085          	movff	postinc2,sprintf@cp
  8895  01010C  CFDD F086          	movff	postdec2,sprintf@cp+1
  8896  010110  0E02               	movlw	2
  8897  010112  0100               	movlb	0	; () banked
  8898  010114  2783               	addwf	sprintf@ap& (0+255),f,b
  8899  010116  0E00               	movlw	0
  8900  010118  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;doprnt.c: 740: if(!cp)
  8904  01011A  0100               	movlb	0	; () banked
  8905  01011C  5185               	movf	sprintf@cp& (0+255),w,b
  8906  01011E  0100               	movlb	0	; () banked
  8907  010120  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  8908  010122  A4D8               	btfss	status,2,c
  8909  010124  D006               	goto	l8526
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;doprnt.c: 741: cp = "(null)";
  8913  010126  0EB4               	movlw	low STR_48
  8914  010128  0100               	movlb	0	; () banked
  8915  01012A  6F85               	movwf	sprintf@cp& (0+255),b
  8916  01012C  0EFF               	movlw	high STR_48
  8917  01012E  0100               	movlb	0	; () banked
  8918  010130  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  8919  010132                     l8526:
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;doprnt.c: 745: len = 0;
  8923  010132  0E00               	movlw	0
  8924  010134  0100               	movlb	0	; () banked
  8925  010136  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  8926  010138  0E00               	movlw	0
  8927  01013A  6F89               	movwf	sprintf@len& (0+255),b
  8928                           
  8929                           ;doprnt.c: 746: while(cp[len])
  8930  01013C  D003               	goto	l8530
  8931  01013E                     l8528:
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;doprnt.c: 747: len++;
  8935  01013E  0100               	movlb	0	; () banked
  8936  010140  4B89               	infsnz	sprintf@len& (0+255),f,b
  8937  010142  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  8938  010144                     l8530:
  8939                           
  8940                           ; BSR set to: 0
  8941  010144  0100               	movlb	0	; () banked
  8942  010146  5189               	movf	sprintf@len& (0+255),w,b
  8943  010148  0100               	movlb	0	; () banked
  8944  01014A  2585               	addwf	sprintf@cp& (0+255),w,b
  8945  01014C  0100               	movlb	0	; () banked
  8946  01014E  6F7E               	movwf	??_sprintf& (0+255),b
  8947  010150  0100               	movlb	0	; () banked
  8948  010152  518A               	movf	(sprintf@len+1)& (0+255),w,b
  8949  010154  0100               	movlb	0	; () banked
  8950  010156  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  8951  010158  0100               	movlb	0	; () banked
  8952  01015A  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  8953  01015C  C07E  FFF6         	movff	??_sprintf,tblptrl
  8954  010160  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  8955  010164                     	if	0	;tblptru may be non-zero
  8956  010164                     	endif
  8957  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8958  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  8959  010166  6EF8               	movwf	tblptru,c
  8960  010168                     	endif
  8961  010168  0008               	tblrd		*
  8962  01016A  50F5               	movf	tablat,w,c
  8963  01016C  0900               	iorlw	0
  8964  01016E  A4D8               	btfss	status,2,c
  8965  010170  D7E6               	goto	l8528
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;doprnt.c: 757: if(width > len)
  8969                           
  8970                           ; BSR set to: 0
  8971  010172  0100               	movlb	0	; () banked
  8972  010174  518D               	movf	sprintf@width& (0+255),w,b
  8973  010176  0100               	movlb	0	; () banked
  8974  010178  5D89               	subwf	sprintf@len& (0+255),w,b
  8975  01017A  0100               	movlb	0	; () banked
  8976  01017C  518E               	movf	(sprintf@width+1)& (0+255),w,b
  8977  01017E  0100               	movlb	0	; () banked
  8978  010180  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  8979  010182  B0D8               	btfsc	status,0,c
  8980  010184  D009               	goto	l8536
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;doprnt.c: 758: width -= len;
  8984  010186  0100               	movlb	0	; () banked
  8985  010188  5189               	movf	sprintf@len& (0+255),w,b
  8986  01018A  0100               	movlb	0	; () banked
  8987  01018C  5F8D               	subwf	sprintf@width& (0+255),f,b
  8988  01018E  0100               	movlb	0	; () banked
  8989  010190  518A               	movf	(sprintf@len+1)& (0+255),w,b
  8990  010192  0100               	movlb	0	; () banked
  8991  010194  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  8992  010196  D00F               	goto	l8542
  8993  010198                     l8536:
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;doprnt.c: 759: else
  8997                           ;doprnt.c: 760: width = 0;
  8998  010198  0E00               	movlw	0
  8999  01019A  0100               	movlb	0	; () banked
  9000  01019C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  9001  01019E  0E00               	movlw	0
  9002  0101A0  6F8D               	movwf	sprintf@width& (0+255),b
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;doprnt.c: 764: while(width--)
  9006  0101A2  D009               	goto	l8542
  9007  0101A4                     l8538:
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;doprnt.c: 765: ((*sp++ = (' ')));
  9011  0101A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9012  0101A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9013  0101AC  0E20               	movlw	32
  9014  0101AE  6EDF               	movwf	indf2,c
  9015                           
  9016                           ; BSR set to: 0
  9017  0101B0  0100               	movlb	0	; () banked
  9018  0101B2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9019  0101B4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9020  0101B6                     l8542:
  9021                           
  9022                           ; BSR set to: 0
  9023  0101B6  0100               	movlb	0	; () banked
  9024  0101B8  078D               	decf	sprintf@width& (0+255),f,b
  9025  0101BA  A0D8               	btfss	status,0,c
  9026  0101BC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  9027  0101BE  0100               	movlb	0	; () banked
  9028  0101C0  298D               	incf	sprintf@width& (0+255),w,b
  9029  0101C2  E1F0               	bnz	l8538
  9030  0101C4  0100               	movlb	0	; () banked
  9031  0101C6  298E               	incf	(sprintf@width+1)& (0+255),w,b
  9032  0101C8  B4D8               	btfsc	status,2,c
  9033  0101CA  D014               	goto	l8550
  9034  0101CC  D7EB               	goto	l8538
  9035  0101CE                     l8544:
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  9039  0101CE  C085  FFF6         	movff	sprintf@cp,tblptrl
  9040  0101D2  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  9041  0101D6                     	if	0	;tblptru may be non-zero
  9042  0101D6                     	endif
  9043  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9044  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  9045  0101D8  6EF8               	movwf	tblptru,c
  9046  0101DA                     	endif
  9047  0101DA  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9048  0101DE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9049  0101E2  0008               	tblrd		*
  9050  0101E4  CFF5 FFDF          	movff	tablat,indf2
  9051                           
  9052                           ; BSR set to: 0
  9053  0101E8  0100               	movlb	0	; () banked
  9054  0101EA  4B85               	infsnz	sprintf@cp& (0+255),f,b
  9055  0101EC  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  9056                           
  9057                           ; BSR set to: 0
  9058  0101EE  0100               	movlb	0	; () banked
  9059  0101F0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9060  0101F2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9061  0101F4                     l8550:
  9062                           
  9063                           ; BSR set to: 0
  9064  0101F4  0100               	movlb	0	; () banked
  9065  0101F6  0789               	decf	sprintf@len& (0+255),f,b
  9066  0101F8  A0D8               	btfss	status,0,c
  9067  0101FA  078A               	decf	(sprintf@len+1)& (0+255),f,b
  9068  0101FC  0100               	movlb	0	; () banked
  9069  0101FE  2989               	incf	sprintf@len& (0+255),w,b
  9070  010200  E1E6               	bnz	l8544
  9071  010202  0100               	movlb	0	; () banked
  9072  010204  298A               	incf	(sprintf@len+1)& (0+255),w,b
  9073  010206  B4D8               	btfsc	status,2,c
  9074  010208  D111               	goto	l8632
  9075  01020A  D7E1               	goto	l8544
  9076  01020C                     l8554:
  9077  01020C  C06E  FFF6         	movff	sprintf@f,tblptrl
  9078  010210  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  9079  010214  0100               	movlb	0	; () banked
  9080  010216  4B6E               	infsnz	sprintf@f& (0+255),f,b
  9081  010218  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  9082  01021A                     	if	0	;tblptru may be non-zero
  9083  01021A                     	endif
  9084  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9085  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  9086  01021C  6EF8               	movwf	tblptru,c
  9087  01021E                     	endif
  9088  01021E  0008               	tblrd		*
  9089  010220  CFF5 F08C          	movff	tablat,sprintf@c
  9090  010224  0100               	movlb	0	; () banked
  9091  010226  518C               	movf	sprintf@c& (0+255),w,b
  9092                           
  9093                           ; Switch size 1, requested type "space"
  9094                           ; Number of cases is 4, Range of values is 0 to 115
  9095                           ; switch strategies available:
  9096                           ; Name         Instructions Cycles
  9097                           ; simple_byte           13     7 (average)
  9098                           ;	Chosen strategy is simple_byte
  9099  010228  0A00               	xorlw	0	; case 0
  9100  01022A  B4D8               	btfsc	status,2,c
  9101  01022C  D10F               	goto	l8634
  9102  01022E  0A64               	xorlw	100	; case 100
  9103  010230  B4D8               	btfsc	status,2,c
  9104  010232  D007               	goto	l8556
  9105  010234  0A0D               	xorlw	13	; case 105
  9106  010236  B4D8               	btfsc	status,2,c
  9107  010238  D004               	goto	l8556
  9108  01023A  0A1A               	xorlw	26	; case 115
  9109  01023C  B4D8               	btfsc	status,2,c
  9110  01023E  D760               	goto	l8518
  9111  010240  D0F5               	goto	l8632
  9112  010242                     l8556:
  9113                           
  9114                           ;doprnt.c: 1253: {
  9115                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  9116  010242  C083  FFD9         	movff	sprintf@ap,fsr2l
  9117  010246  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  9118  01024A  CFDE F087          	movff	postinc2,sprintf@val
  9119  01024E  CFDD F088          	movff	postdec2,sprintf@val+1
  9120  010252  0E02               	movlw	2
  9121  010254  0100               	movlb	0	; () banked
  9122  010256  2783               	addwf	sprintf@ap& (0+255),f,b
  9123  010258  0E00               	movlw	0
  9124  01025A  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;doprnt.c: 1261: if((int)val < 0) {
  9128  01025C  0100               	movlb	0	; () banked
  9129  01025E  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  9130  010260  D008               	goto	l8566
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;doprnt.c: 1262: flag |= 0x03;
  9134  010262  0E03               	movlw	3
  9135  010264  0100               	movlb	0	; () banked
  9136  010266  138B               	iorwf	sprintf@flag& (0+255),f,b
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;doprnt.c: 1263: val = -val;
  9140  010268  0100               	movlb	0	; () banked
  9141  01026A  6D87               	negf	sprintf@val& (0+255),b
  9142  01026C  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  9143  01026E  B0D8               	btfsc	status,0,c
  9144  010270  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  9145  010272                     l8566:
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;doprnt.c: 1264: }
  9149                           ;doprnt.c: 1266: }
  9150                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9151  010272  0E01               	movlw	1
  9152  010274  0100               	movlb	0	; () banked
  9153  010276  6F8C               	movwf	sprintf@c& (0+255),b
  9154  010278                     l8568:
  9155                           
  9156                           ; BSR set to: 0
  9157  010278  0E05               	movlw	5
  9158  01027A  0100               	movlb	0	; () banked
  9159  01027C  198C               	xorwf	sprintf@c& (0+255),w,b
  9160  01027E  B4D8               	btfsc	status,2,c
  9161  010280  D019               	goto	l8580
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;doprnt.c: 1306: if(val < dpowers[c])
  9165                           
  9166                           ; BSR set to: 0
  9167                           
  9168                           ; BSR set to: 0
  9169  010282  0100               	movlb	0	; () banked
  9170  010284  518C               	movf	sprintf@c& (0+255),w,b
  9171  010286  0D02               	mullw	2
  9172  010288  0E69               	movlw	low _dpowers
  9173  01028A  24F3               	addwf	prodl,w,c
  9174  01028C  6EF6               	movwf	tblptrl,c
  9175  01028E  0EFD               	movlw	high _dpowers
  9176  010290  20F4               	addwfc	prodh,w,c
  9177  010292  6EF7               	movwf	tblptrh,c
  9178  010294                     	if	1	;There are 3 active tblptr bytes
  9179  010294  6AF8               	clrf	tblptru,c
  9180  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  9181  010298  22F8               	addwfc	tblptru,f,c
  9182  01029A                     	endif
  9183  01029A  0009               	tblrd		*+
  9184  01029C  50F5               	movf	tablat,w,c
  9185  01029E  0100               	movlb	0	; () banked
  9186  0102A0  5D87               	subwf	sprintf@val& (0+255),w,b
  9187  0102A2  0009               	tblrd		*+
  9188  0102A4  50F5               	movf	tablat,w,c
  9189  0102A6  0100               	movlb	0	; () banked
  9190  0102A8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  9191  0102AA  A0D8               	btfss	status,0,c
  9192  0102AC  D003               	goto	l8580
  9193                           
  9194                           ; BSR set to: 0
  9195                           
  9196                           ; BSR set to: 0
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;doprnt.c: 1307: break;
  9200  0102AE  0100               	movlb	0	; () banked
  9201  0102B0  2B8C               	incf	sprintf@c& (0+255),f,b
  9202  0102B2  D7E2               	goto	l8568
  9203  0102B4                     l8580:
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9207  0102B4  0100               	movlb	0	; () banked
  9208  0102B6  518D               	movf	sprintf@width& (0+255),w,b
  9209  0102B8  0100               	movlb	0	; () banked
  9210  0102BA  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  9211  0102BC  B4D8               	btfsc	status,2,c
  9212  0102BE  D00B               	goto	l8586
  9213                           
  9214                           ; BSR set to: 0
  9215  0102C0  C08B  F07E         	movff	sprintf@flag,??_sprintf
  9216  0102C4  0E03               	movlw	3
  9217  0102C6  0100               	movlb	0	; () banked
  9218  0102C8  177E               	andwf	??_sprintf& (0+255),f,b
  9219  0102CA  B4D8               	btfsc	status,2,c
  9220  0102CC  D004               	goto	l8586
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;doprnt.c: 1346: width--;
  9224  0102CE  0100               	movlb	0	; () banked
  9225  0102D0  078D               	decf	sprintf@width& (0+255),f,b
  9226  0102D2  A0D8               	btfss	status,0,c
  9227  0102D4  078E               	decf	(sprintf@width+1)& (0+255),f,b
  9228  0102D6                     l8586:
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;doprnt.c: 1381: if(width > c)
  9232  0102D6  0E80               	movlw	128
  9233  0102D8  0100               	movlb	0	; () banked
  9234  0102DA  BF8C               	btfsc	sprintf@c& (0+255),7,b
  9235  0102DC  0E7F               	movlw	127
  9236  0102DE  0100               	movlb	0	; () banked
  9237  0102E0  6F7E               	movwf	??_sprintf& (0+255),b
  9238  0102E2  0100               	movlb	0	; () banked
  9239  0102E4  518D               	movf	sprintf@width& (0+255),w,b
  9240  0102E6  0100               	movlb	0	; () banked
  9241  0102E8  5D8C               	subwf	sprintf@c& (0+255),w,b
  9242  0102EA  0100               	movlb	0	; () banked
  9243  0102EC  518E               	movf	(sprintf@width+1)& (0+255),w,b
  9244  0102EE  0A80               	xorlw	128
  9245  0102F0  0100               	movlb	0	; () banked
  9246  0102F2  597E               	subwfb	??_sprintf& (0+255),w,b
  9247  0102F4  B0D8               	btfsc	status,0,c
  9248  0102F6  D00B               	goto	l8590
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;doprnt.c: 1382: width -= c;
  9252  0102F8  0100               	movlb	0	; () banked
  9253  0102FA  518C               	movf	sprintf@c& (0+255),w,b
  9254  0102FC  0100               	movlb	0	; () banked
  9255  0102FE  5F8D               	subwf	sprintf@width& (0+255),f,b
  9256  010300  0E00               	movlw	0
  9257  010302  0100               	movlb	0	; () banked
  9258  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  9259  010306  0EFF               	movlw	255
  9260  010308  0100               	movlb	0	; () banked
  9261  01030A  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  9262  01030C  D005               	goto	l8592
  9263  01030E                     l8590:
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;doprnt.c: 1383: else
  9267                           ;doprnt.c: 1384: width = 0;
  9268  01030E  0E00               	movlw	0
  9269  010310  0100               	movlb	0	; () banked
  9270  010312  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  9271  010314  0E00               	movlw	0
  9272  010316  6F8D               	movwf	sprintf@width& (0+255),b
  9273  010318                     l8592:
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;doprnt.c: 1387: if(flag & 0x04) {
  9277  010318  0100               	movlb	0	; () banked
  9278  01031A  A58B               	btfss	sprintf@flag& (0+255),2,b
  9279  01031C  D024               	goto	l8608
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;doprnt.c: 1392: if(flag & 0x03)
  9283  01031E  C08B  F07E         	movff	sprintf@flag,??_sprintf
  9284  010322  0E03               	movlw	3
  9285  010324  0100               	movlb	0	; () banked
  9286  010326  177E               	andwf	??_sprintf& (0+255),f,b
  9287  010328  B4D8               	btfsc	status,2,c
  9288  01032A  D009               	goto	l8600
  9289                           
  9290                           ; BSR set to: 0
  9291                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  9292  01032C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9293  010330  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9294  010334  0E2D               	movlw	45
  9295  010336  6EDF               	movwf	indf2,c
  9296                           
  9297                           ; BSR set to: 0
  9298  010338  0100               	movlb	0	; () banked
  9299  01033A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9300  01033C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9301  01033E                     l8600:
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;doprnt.c: 1415: if(width)
  9305  01033E  0100               	movlb	0	; () banked
  9306  010340  518D               	movf	sprintf@width& (0+255),w,b
  9307  010342  0100               	movlb	0	; () banked
  9308  010344  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  9309  010346  B4D8               	btfsc	status,2,c
  9310  010348  D037               	goto	l8622
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  9314                           
  9315                           ; BSR set to: 0
  9316                           
  9317                           ;doprnt.c: 1416: do
  9318  01034A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9319  01034E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9320  010352  0E30               	movlw	48
  9321  010354  6EDF               	movwf	indf2,c
  9322                           
  9323                           ; BSR set to: 0
  9324  010356  0100               	movlb	0	; () banked
  9325  010358  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9326  01035A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;doprnt.c: 1418: while(--width);
  9330  01035C  0100               	movlb	0	; () banked
  9331  01035E  078D               	decf	sprintf@width& (0+255),f,b
  9332  010360  A0D8               	btfss	status,0,c
  9333  010362  078E               	decf	(sprintf@width+1)& (0+255),f,b
  9334  010364  D7EC               	goto	l8600
  9335  010366                     l8608:
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;doprnt.c: 1422: {
  9339                           ;doprnt.c: 1424: if(width
  9340                           ;doprnt.c: 1428: )
  9341  010366  0100               	movlb	0	; () banked
  9342  010368  518D               	movf	sprintf@width& (0+255),w,b
  9343  01036A  0100               	movlb	0	; () banked
  9344  01036C  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  9345  01036E  B4D8               	btfsc	status,2,c
  9346  010370  D013               	goto	l8616
  9347  010372                     l8610:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9351  010372  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9352  010376  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9353  01037A  0E20               	movlw	32
  9354  01037C  6EDF               	movwf	indf2,c
  9355                           
  9356                           ; BSR set to: 0
  9357  01037E  0100               	movlb	0	; () banked
  9358  010380  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9359  010382  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;doprnt.c: 1431: while(--width);
  9363  010384  0100               	movlb	0	; () banked
  9364  010386  078D               	decf	sprintf@width& (0+255),f,b
  9365  010388  A0D8               	btfss	status,0,c
  9366  01038A  078E               	decf	(sprintf@width+1)& (0+255),f,b
  9367  01038C  0100               	movlb	0	; () banked
  9368  01038E  518D               	movf	sprintf@width& (0+255),w,b
  9369  010390  0100               	movlb	0	; () banked
  9370  010392  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  9371  010394  A4D8               	btfss	status,2,c
  9372  010396  D7ED               	goto	l8610
  9373  010398                     l8616:
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;doprnt.c: 1438: if(flag & 0x03)
  9377  010398  C08B  F07E         	movff	sprintf@flag,??_sprintf
  9378  01039C  0E03               	movlw	3
  9379  01039E  0100               	movlb	0	; () banked
  9380  0103A0  177E               	andwf	??_sprintf& (0+255),f,b
  9381  0103A2  B4D8               	btfsc	status,2,c
  9382  0103A4  D009               	goto	l8622
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9386  0103A6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9387  0103AA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9388  0103AE  0E2D               	movlw	45
  9389  0103B0  6EDF               	movwf	indf2,c
  9390                           
  9391                           ; BSR set to: 0
  9392  0103B2  0100               	movlb	0	; () banked
  9393  0103B4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9394  0103B6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9395  0103B8                     l8622:
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;doprnt.c: 1469: }
  9399                           ;doprnt.c: 1472: prec = c;
  9400  0103B8  C08C  F082         	movff	sprintf@c,sprintf@prec
  9401                           
  9402                           ;doprnt.c: 1474: while(prec--) {
  9403  0103BC  D031               	goto	l8630
  9404  0103BE                     l8624:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;doprnt.c: 1478: {
  9408                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9409  0103BE  0100               	movlb	0	; () banked
  9410  0103C0  5182               	movf	sprintf@prec& (0+255),w,b
  9411  0103C2  0D02               	mullw	2
  9412  0103C4  0E69               	movlw	low _dpowers
  9413  0103C6  24F3               	addwf	prodl,w,c
  9414  0103C8  6EF6               	movwf	tblptrl,c
  9415  0103CA  0EFD               	movlw	high _dpowers
  9416  0103CC  20F4               	addwfc	prodh,w,c
  9417  0103CE  6EF7               	movwf	tblptrh,c
  9418  0103D0                     	if	1	;There are 3 active tblptr bytes
  9419  0103D0  6AF8               	clrf	tblptru,c
  9420  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  9421  0103D4  22F8               	addwfc	tblptru,f,c
  9422  0103D6                     	endif
  9423  0103D6  0009               	tblrd		*+
  9424  0103D8  CFF5 F062          	movff	tablat,___lwdiv@divisor
  9425  0103DC  000A               	tblrd		*-
  9426  0103DE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  9427  0103E2  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  9428  0103E6  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  9429  0103EA  EC01  F09D         	call	___lwdiv	;wreg free
  9430  0103EE  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  9431  0103F2  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  9432  0103F6  0E00               	movlw	0
  9433  0103F8  0100               	movlb	0	; () banked
  9434  0103FA  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  9435  0103FC  0E0A               	movlw	10
  9436  0103FE  6F69               	movwf	___lwmod@divisor& (0+255),b
  9437  010400  ECED  F09E         	call	___lwmod	;wreg free
  9438  010404  0100               	movlb	0	; () banked
  9439  010406  5167               	movf	?___lwmod& (0+255),w,b
  9440  010408  0F30               	addlw	48
  9441  01040A  0100               	movlb	0	; () banked
  9442  01040C  6F8C               	movwf	sprintf@c& (0+255),b
  9443                           
  9444                           ; BSR set to: 0
  9445                           ;doprnt.c: 1523: }
  9446                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9447  01040E  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9448  010412  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9449  010416  C08C  FFDF         	movff	sprintf@c,indf2
  9450                           
  9451                           ; BSR set to: 0
  9452  01041A  0100               	movlb	0	; () banked
  9453  01041C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  9454  01041E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  9455  010420                     l8630:
  9456                           
  9457                           ; BSR set to: 0
  9458  010420  0100               	movlb	0	; () banked
  9459  010422  0782               	decf	sprintf@prec& (0+255),f,b
  9460  010424  0100               	movlb	0	; () banked
  9461  010426  2982               	incf	sprintf@prec& (0+255),w,b
  9462  010428  A4D8               	btfss	status,2,c
  9463  01042A  D7C9               	goto	l8624
  9464  01042C                     l8632:
  9465                           
  9466                           ; BSR set to: 0
  9467  01042C  C06E  FFF6         	movff	sprintf@f,tblptrl
  9468  010430  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  9469  010434  0100               	movlb	0	; () banked
  9470  010436  4B6E               	infsnz	sprintf@f& (0+255),f,b
  9471  010438  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  9472  01043A                     	if	0	;tblptru may be non-zero
  9473  01043A                     	endif
  9474  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9475  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  9476  01043C  6EF8               	movwf	tblptru,c
  9477  01043E                     	endif
  9478  01043E  0008               	tblrd		*
  9479  010440  CFF5 F08C          	movff	tablat,sprintf@c
  9480  010444  0100               	movlb	0	; () banked
  9481  010446  518C               	movf	sprintf@c& (0+255),w,b
  9482  010448  A4D8               	btfss	status,2,c
  9483  01044A  D5E1               	goto	l8492
  9484  01044C                     l8634:
  9485                           
  9486                           ;doprnt.c: 1538: *sp = 0;
  9487  01044C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  9488  010450  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  9489  010454  0E00               	movlw	0
  9490  010456  6EDF               	movwf	indf2,c
  9491  010458  0012               	return	
  9492  01045A                     __end_of_sprintf:
  9493                           	opt stack 0
  9494                           tblptru	equ	0xFF8
  9495                           tblptrh	equ	0xFF7
  9496                           tblptrl	equ	0xFF6
  9497                           tablat	equ	0xFF5
  9498                           prodh	equ	0xFF4
  9499                           prodl	equ	0xFF3
  9500                           intcon	equ	0xFF2
  9501                           intcon2	equ	0xFF1
  9502                           postinc0	equ	0xFEE
  9503                           wreg	equ	0xFE8
  9504                           indf1	equ	0xFE7
  9505                           postinc1	equ	0xFE6
  9506                           postdec1	equ	0xFE5
  9507                           fsr1h	equ	0xFE2
  9508                           fsr1l	equ	0xFE1
  9509                           indf2	equ	0xFDF
  9510                           postinc2	equ	0xFDE
  9511                           postdec2	equ	0xFDD
  9512                           fsr2h	equ	0xFDA
  9513                           fsr2l	equ	0xFD9
  9514                           status	equ	0xFD8
  9515                           
  9516 ;; *************** function _isdigit *****************
  9517 ;; Defined at:
  9518 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;  c               1    wreg     unsigned char 
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;  c               1    2[BANK0 ] unsigned char 
  9523 ;; Return value:  Size  Location     Type
  9524 ;;		None               void
  9525 ;; Registers used:
  9526 ;;		wreg, status,2, status,0
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/0
  9529 ;;		On exit  : 0/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9533 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9534 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9535 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9536 ;;Total ram usage:        3 bytes
  9537 ;; Hardware stack levels used:    1
  9538 ;; Hardware stack levels required when called:   11
  9539 ;; This function calls:
  9540 ;;		Nothing
  9541 ;; This function is called by:
  9542 ;;		_sprintf
  9543 ;;		_atoi
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547                           	psect	text39
  9548  0143F8                     __ptext39:
  9549                           	opt stack 0
  9550  0143F8                     _isdigit:
  9551                           	opt stack 13
  9552                           
  9553                           ;incstack = 0
  9554                           ;isdigit@c stored from wreg
  9555  0143F8  0100               	movlb	0	; () banked
  9556  0143FA  6F62               	movwf	isdigit@c& (0+255),b
  9557  0143FC  0E00               	movlw	0
  9558  0143FE  0100               	movlb	0	; () banked
  9559  014400  6F61               	movwf	_isdigit$5795& (0+255),b
  9560                           
  9561                           ; BSR set to: 0
  9562  014402  0E3A               	movlw	58
  9563  014404  0100               	movlb	0	; () banked
  9564  014406  6162               	cpfslt	isdigit@c& (0+255),b
  9565  014408  D007               	goto	l8350
  9566                           
  9567                           ; BSR set to: 0
  9568  01440A  0E2F               	movlw	47
  9569  01440C  0100               	movlb	0	; () banked
  9570  01440E  6562               	cpfsgt	isdigit@c& (0+255),b
  9571  014410  D003               	goto	l8350
  9572                           
  9573                           ; BSR set to: 0
  9574  014412  0E01               	movlw	1
  9575  014414  0100               	movlb	0	; () banked
  9576  014416  6F61               	movwf	_isdigit$5795& (0+255),b
  9577  014418                     l8350:
  9578                           
  9579                           ; BSR set to: 0
  9580  014418  C061  F060         	movff	_isdigit$5795,??_isdigit
  9581  01441C  0100               	movlb	0	; () banked
  9582  01441E  3160               	rrcf	??_isdigit& (0+255),w,b
  9583  014420  0012               	return	
  9584  014422                     __end_of_isdigit:
  9585                           	opt stack 0
  9586                           tblptru	equ	0xFF8
  9587                           tblptrh	equ	0xFF7
  9588                           tblptrl	equ	0xFF6
  9589                           tablat	equ	0xFF5
  9590                           prodh	equ	0xFF4
  9591                           prodl	equ	0xFF3
  9592                           intcon	equ	0xFF2
  9593                           intcon2	equ	0xFF1
  9594                           postinc0	equ	0xFEE
  9595                           wreg	equ	0xFE8
  9596                           indf1	equ	0xFE7
  9597                           postinc1	equ	0xFE6
  9598                           postdec1	equ	0xFE5
  9599                           fsr1h	equ	0xFE2
  9600                           fsr1l	equ	0xFE1
  9601                           indf2	equ	0xFDF
  9602                           postinc2	equ	0xFDE
  9603                           postdec2	equ	0xFDD
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608 ;; *************** function ___wmul *****************
  9609 ;; Defined at:
  9610 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9613 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;  product         2    4[BANK0 ] unsigned int 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  2    0[BANK0 ] unsigned int 
  9618 ;; Registers used:
  9619 ;;		wreg, status,2, status,0, prodl, prodh
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9625 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9626 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9628 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9629 ;;Total ram usage:        6 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:   11
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_sprintf
  9636 ;;		_atoi
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text40
  9641  01424C                     __ptext40:
  9642                           	opt stack 0
  9643  01424C                     ___wmul:
  9644                           	opt stack 13
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;incstack = 0
  9648  01424C  0100               	movlb	0	; () banked
  9649  01424E  5160               	movf	___wmul@multiplier& (0+255),w,b
  9650  014250  0100               	movlb	0	; () banked
  9651  014252  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9652  014254  CFF3 F064          	movff	prodl,___wmul@product
  9653  014258  CFF4 F065          	movff	prodh,___wmul@product+1
  9654  01425C  0100               	movlb	0	; () banked
  9655  01425E  5160               	movf	___wmul@multiplier& (0+255),w,b
  9656  014260  0100               	movlb	0	; () banked
  9657  014262  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9658  014264  50F3               	movf	prodl,w,c
  9659  014266  0100               	movlb	0	; () banked
  9660  014268  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9661  01426A  0100               	movlb	0	; () banked
  9662  01426C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9663  01426E  0100               	movlb	0	; () banked
  9664  014270  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9665  014272  50F3               	movf	prodl,w,c
  9666  014274  0100               	movlb	0	; () banked
  9667  014276  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9668                           
  9669                           ; BSR set to: 0
  9670  014278  C064  F060         	movff	___wmul@product,?___wmul
  9671  01427C  C065  F061         	movff	___wmul@product+1,?___wmul+1
  9672  014280  0012               	return	
  9673  014282                     __end_of___wmul:
  9674                           	opt stack 0
  9675                           tblptru	equ	0xFF8
  9676                           tblptrh	equ	0xFF7
  9677                           tblptrl	equ	0xFF6
  9678                           tablat	equ	0xFF5
  9679                           prodh	equ	0xFF4
  9680                           prodl	equ	0xFF3
  9681                           intcon	equ	0xFF2
  9682                           intcon2	equ	0xFF1
  9683                           postinc0	equ	0xFEE
  9684                           wreg	equ	0xFE8
  9685                           indf1	equ	0xFE7
  9686                           postinc1	equ	0xFE6
  9687                           postdec1	equ	0xFE5
  9688                           fsr1h	equ	0xFE2
  9689                           fsr1l	equ	0xFE1
  9690                           indf2	equ	0xFDF
  9691                           postinc2	equ	0xFDE
  9692                           postdec2	equ	0xFDD
  9693                           fsr2h	equ	0xFDA
  9694                           fsr2l	equ	0xFD9
  9695                           status	equ	0xFD8
  9696                           
  9697 ;; *************** function ___lwmod *****************
  9698 ;; Defined at:
  9699 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  dividend        2    7[BANK0 ] unsigned int 
  9702 ;;  divisor         2    9[BANK0 ] unsigned int 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  counter         1   11[BANK0 ] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  2    7[BANK0 ] unsigned int 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9717 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9718 ;;Total ram usage:        5 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:   11
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		_ringbuf_put_num
  9725 ;;		_sprintf
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           	psect	text41
  9730  013DDA                     __ptext41:
  9731                           	opt stack 0
  9732  013DDA                     ___lwmod:
  9733                           	opt stack 13
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;incstack = 0
  9737  013DDA  0100               	movlb	0	; () banked
  9738  013DDC  5169               	movf	___lwmod@divisor& (0+255),w,b
  9739  013DDE  0100               	movlb	0	; () banked
  9740  013DE0  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  9741  013DE2  B4D8               	btfsc	status,2,c
  9742  013DE4  D026               	goto	l1958
  9743                           
  9744                           ; BSR set to: 0
  9745  013DE6  0E01               	movlw	1
  9746  013DE8  0100               	movlb	0	; () banked
  9747  013DEA  6F6B               	movwf	___lwmod@counter& (0+255),b
  9748  013DEC  D006               	goto	l8388
  9749  013DEE                     l8386:
  9750                           
  9751                           ; BSR set to: 0
  9752  013DEE  0100               	movlb	0	; () banked
  9753  013DF0  90D8               	bcf	status,0,c
  9754  013DF2  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  9755  013DF4  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  9756  013DF6  0100               	movlb	0	; () banked
  9757  013DF8  2B6B               	incf	___lwmod@counter& (0+255),f,b
  9758  013DFA                     l8388:
  9759                           
  9760                           ; BSR set to: 0
  9761  013DFA  0100               	movlb	0	; () banked
  9762  013DFC  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  9763  013DFE  D7F7               	goto	l8386
  9764  013E00                     l8390:
  9765                           
  9766                           ; BSR set to: 0
  9767  013E00  0100               	movlb	0	; () banked
  9768  013E02  5169               	movf	___lwmod@divisor& (0+255),w,b
  9769  013E04  0100               	movlb	0	; () banked
  9770  013E06  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  9771  013E08  0100               	movlb	0	; () banked
  9772  013E0A  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9773  013E0C  0100               	movlb	0	; () banked
  9774  013E0E  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  9775  013E10  A0D8               	btfss	status,0,c
  9776  013E12  D008               	goto	l8394
  9777                           
  9778                           ; BSR set to: 0
  9779  013E14  0100               	movlb	0	; () banked
  9780  013E16  5169               	movf	___lwmod@divisor& (0+255),w,b
  9781  013E18  0100               	movlb	0	; () banked
  9782  013E1A  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  9783  013E1C  0100               	movlb	0	; () banked
  9784  013E1E  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  9785  013E20  0100               	movlb	0	; () banked
  9786  013E22  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  9787  013E24                     l8394:
  9788                           
  9789                           ; BSR set to: 0
  9790  013E24  0100               	movlb	0	; () banked
  9791  013E26  90D8               	bcf	status,0,c
  9792  013E28  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  9793  013E2A  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 0
  9796  013E2C  0100               	movlb	0	; () banked
  9797  013E2E  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  9798  013E30  D7E7               	goto	l8390
  9799  013E32                     l1958:
  9800                           
  9801                           ; BSR set to: 0
  9802  013E32  C067  F067         	movff	___lwmod@dividend,?___lwmod
  9803  013E36  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  9804                           
  9805                           ; BSR set to: 0
  9806  013E3A  0012               	return		;funcret
  9807  013E3C                     __end_of___lwmod:
  9808                           	opt stack 0
  9809                           tblptru	equ	0xFF8
  9810                           tblptrh	equ	0xFF7
  9811                           tblptrl	equ	0xFF6
  9812                           tablat	equ	0xFF5
  9813                           prodh	equ	0xFF4
  9814                           prodl	equ	0xFF3
  9815                           intcon	equ	0xFF2
  9816                           intcon2	equ	0xFF1
  9817                           postinc0	equ	0xFEE
  9818                           wreg	equ	0xFE8
  9819                           indf1	equ	0xFE7
  9820                           postinc1	equ	0xFE6
  9821                           postdec1	equ	0xFE5
  9822                           fsr1h	equ	0xFE2
  9823                           fsr1l	equ	0xFE1
  9824                           indf2	equ	0xFDF
  9825                           postinc2	equ	0xFDE
  9826                           postdec2	equ	0xFDD
  9827                           fsr2h	equ	0xFDA
  9828                           fsr2l	equ	0xFD9
  9829                           status	equ	0xFD8
  9830                           
  9831 ;; *************** function ___lwdiv *****************
  9832 ;; Defined at:
  9833 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  dividend        2    0[BANK0 ] unsigned int 
  9836 ;;  divisor         2    2[BANK0 ] unsigned int 
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;  quotient        2    5[BANK0 ] unsigned int 
  9839 ;;  counter         1    4[BANK0 ] unsigned char 
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  2    0[BANK0 ] unsigned int 
  9842 ;; Registers used:
  9843 ;;		wreg, status,2, status,0
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9849 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9850 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9853 ;;Total ram usage:        7 bytes
  9854 ;; Hardware stack levels used:    1
  9855 ;; Hardware stack levels required when called:   11
  9856 ;; This function calls:
  9857 ;;		Nothing
  9858 ;; This function is called by:
  9859 ;;		_ringbuf_put_num
  9860 ;;		_sprintf
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text42
  9865  013A02                     __ptext42:
  9866                           	opt stack 0
  9867  013A02                     ___lwdiv:
  9868                           	opt stack 13
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;incstack = 0
  9872  013A02  0E00               	movlw	0
  9873  013A04  0100               	movlb	0	; () banked
  9874  013A06  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9875  013A08  0E00               	movlw	0
  9876  013A0A  6F65               	movwf	___lwdiv@quotient& (0+255),b
  9877                           
  9878                           ; BSR set to: 0
  9879  013A0C  0100               	movlb	0	; () banked
  9880  013A0E  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9881  013A10  0100               	movlb	0	; () banked
  9882  013A12  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9883  013A14  B4D8               	btfsc	status,2,c
  9884  013A16  D02C               	goto	l1948
  9885                           
  9886                           ; BSR set to: 0
  9887  013A18  0E01               	movlw	1
  9888  013A1A  0100               	movlb	0	; () banked
  9889  013A1C  6F64               	movwf	___lwdiv@counter& (0+255),b
  9890  013A1E  D006               	goto	l8368
  9891  013A20                     l8366:
  9892                           
  9893                           ; BSR set to: 0
  9894  013A20  0100               	movlb	0	; () banked
  9895  013A22  90D8               	bcf	status,0,c
  9896  013A24  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  9897  013A26  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9898  013A28  0100               	movlb	0	; () banked
  9899  013A2A  2B64               	incf	___lwdiv@counter& (0+255),f,b
  9900  013A2C                     l8368:
  9901                           
  9902                           ; BSR set to: 0
  9903  013A2C  0100               	movlb	0	; () banked
  9904  013A2E  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  9905  013A30  D7F7               	goto	l8366
  9906  013A32                     l8370:
  9907                           
  9908                           ; BSR set to: 0
  9909  013A32  0100               	movlb	0	; () banked
  9910  013A34  90D8               	bcf	status,0,c
  9911  013A36  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  9912  013A38  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9913                           
  9914                           ; BSR set to: 0
  9915  013A3A  0100               	movlb	0	; () banked
  9916  013A3C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9917  013A3E  0100               	movlb	0	; () banked
  9918  013A40  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  9919  013A42  0100               	movlb	0	; () banked
  9920  013A44  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9921  013A46  0100               	movlb	0	; () banked
  9922  013A48  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9923  013A4A  A0D8               	btfss	status,0,c
  9924  013A4C  D00A               	goto	l8378
  9925                           
  9926                           ; BSR set to: 0
  9927  013A4E  0100               	movlb	0	; () banked
  9928  013A50  5162               	movf	___lwdiv@divisor& (0+255),w,b
  9929  013A52  0100               	movlb	0	; () banked
  9930  013A54  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  9931  013A56  0100               	movlb	0	; () banked
  9932  013A58  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9933  013A5A  0100               	movlb	0	; () banked
  9934  013A5C  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9935                           
  9936                           ; BSR set to: 0
  9937  013A5E  0100               	movlb	0	; () banked
  9938  013A60  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  9939  013A62                     l8378:
  9940                           
  9941                           ; BSR set to: 0
  9942  013A62  0100               	movlb	0	; () banked
  9943  013A64  90D8               	bcf	status,0,c
  9944  013A66  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9945  013A68  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  9946                           
  9947                           ; BSR set to: 0
  9948  013A6A  0100               	movlb	0	; () banked
  9949  013A6C  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  9950  013A6E  D7E1               	goto	l8370
  9951  013A70                     l1948:
  9952                           
  9953                           ; BSR set to: 0
  9954  013A70  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  9955  013A74  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9956                           
  9957                           ; BSR set to: 0
  9958  013A78  0012               	return		;funcret
  9959  013A7A                     __end_of___lwdiv:
  9960                           	opt stack 0
  9961                           tblptru	equ	0xFF8
  9962                           tblptrh	equ	0xFF7
  9963                           tblptrl	equ	0xFF6
  9964                           tablat	equ	0xFF5
  9965                           prodh	equ	0xFF4
  9966                           prodl	equ	0xFF3
  9967                           intcon	equ	0xFF2
  9968                           intcon2	equ	0xFF1
  9969                           postinc0	equ	0xFEE
  9970                           wreg	equ	0xFE8
  9971                           indf1	equ	0xFE7
  9972                           postinc1	equ	0xFE6
  9973                           postdec1	equ	0xFE5
  9974                           fsr1h	equ	0xFE2
  9975                           fsr1l	equ	0xFE1
  9976                           indf2	equ	0xFDF
  9977                           postinc2	equ	0xFDE
  9978                           postdec2	equ	0xFDD
  9979                           fsr2h	equ	0xFDA
  9980                           fsr2l	equ	0xFD9
  9981                           status	equ	0xFD8
  9982                           
  9983 ;; *************** function _USB_task *****************
  9984 ;; Defined at:
  9985 ;;		line 66 in file "../My_library/My_usb_cdc.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;		None
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  rx_len          2   20[BANK0 ] int 
  9990 ;;  data            1   22[BANK0 ] unsigned char 
  9991 ;; Return value:  Size  Location     Type
  9992 ;;		None               void
  9993 ;; Registers used:
  9994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10001 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10003 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10004 ;;Total ram usage:        3 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:   14
 10007 ;; This function calls:
 10008 ;;		_get_string_usb
 10009 ;;		_put_string_usb
 10010 ;;		_ringbuf_num
 10011 ;;		_ringbuf_pop
 10012 ;;		_ringbuf_put
 10013 ;; This function is called by:
 10014 ;;		_main
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           	psect	text43
 10019  01375E                     __ptext43:
 10020                           	opt stack 0
 10021  01375E                     _USB_task:
 10022                           	opt stack 16
 10023                           
 10024                           ;My_usb_cdc.c: 67: char data;
 10025                           ;My_usb_cdc.c: 68: int rx_len;
 10026                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;incstack = 0
 10030  01375E  0E76               	movlw	low USB_task@data
 10031  013760  0100               	movlb	0	; () banked
 10032  013762  6F6D               	movwf	get_string_usb@s& (0+255),b
 10033  013764  0E00               	movlw	high USB_task@data
 10034  013766  0100               	movlb	0	; () banked
 10035  013768  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 10036  01376A  0E00               	movlw	0
 10037  01376C  0100               	movlb	0	; () banked
 10038  01376E  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 10039  013770  0E01               	movlw	1
 10040  013772  6F6F               	movwf	get_string_usb@len& (0+255),b
 10041  013774  EC28  F0A0         	call	_get_string_usb	;wreg free
 10042  013778  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 10043  01377C  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 10044                           
 10045                           ;My_usb_cdc.c: 70: if (rx_len) {
 10046  013780  0100               	movlb	0	; () banked
 10047  013782  5174               	movf	USB_task@rx_len& (0+255),w,b
 10048  013784  0100               	movlb	0	; () banked
 10049  013786  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 10050  013788  B4D8               	btfsc	status,2,c
 10051  01378A  D00A               	goto	l1194
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 10055  01378C  0E5B               	movlw	low _usb_rx
 10056  01378E  0100               	movlb	0	; () banked
 10057  013790  6F68               	movwf	ringbuf_put@rb& (0+255),b
 10058  013792  0E01               	movlw	high _usb_rx
 10059  013794  0100               	movlb	0	; () banked
 10060  013796  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10061  013798  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 10062  01379C  EC86  F094         	call	_ringbuf_put	;wreg free
 10063  0137A0                     l1194:
 10064                           
 10065                           ;My_usb_cdc.c: 72: }
 10066                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 10067  0137A0  0E63               	movlw	low _usb_tx
 10068  0137A2  0100               	movlb	0	; () banked
 10069  0137A4  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10070  0137A6  0E01               	movlw	high _usb_tx
 10071  0137A8  0100               	movlb	0	; () banked
 10072  0137AA  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10073  0137AC  EC31  F090         	call	_ringbuf_num	;wreg free
 10074  0137B0  0100               	movlb	0	; () banked
 10075  0137B2  5160               	movf	?_ringbuf_num& (0+255),w,b
 10076  0137B4  0100               	movlb	0	; () banked
 10077  0137B6  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10078  0137B8  B4D8               	btfsc	status,2,c
 10079  0137BA  0012               	return	
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 10083  0137BC  0E63               	movlw	low _usb_tx
 10084  0137BE  0100               	movlb	0	; () banked
 10085  0137C0  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10086  0137C2  0E01               	movlw	high _usb_tx
 10087  0137C4  0100               	movlb	0	; () banked
 10088  0137C6  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10089  0137C8  EC29  F096         	call	_ringbuf_pop	;wreg free
 10090  0137CC  0100               	movlb	0	; () banked
 10091  0137CE  6F76               	movwf	USB_task@data& (0+255),b
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 10095  0137D0  0E76               	movlw	low USB_task@data
 10096  0137D2  0100               	movlb	0	; () banked
 10097  0137D4  6F6C               	movwf	put_string_usb@s& (0+255),b
 10098  0137D6  0E00               	movlw	high USB_task@data
 10099  0137D8  0100               	movlb	0	; () banked
 10100  0137DA  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 10101  0137DC  0E00               	movlw	0
 10102  0137DE  0100               	movlb	0	; () banked
 10103  0137E0  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 10104  0137E2  0E01               	movlw	1
 10105  0137E4  6F6E               	movwf	put_string_usb@len& (0+255),b
 10106  0137E6  ECBA  F0A1         	call	_put_string_usb	;wreg free
 10107  0137EA  0012               	return	
 10108  0137EC                     __end_of_USB_task:
 10109                           	opt stack 0
 10110                           tblptru	equ	0xFF8
 10111                           tblptrh	equ	0xFF7
 10112                           tblptrl	equ	0xFF6
 10113                           tablat	equ	0xFF5
 10114                           prodh	equ	0xFF4
 10115                           prodl	equ	0xFF3
 10116                           intcon	equ	0xFF2
 10117                           intcon2	equ	0xFF1
 10118                           postinc0	equ	0xFEE
 10119                           wreg	equ	0xFE8
 10120                           indf1	equ	0xFE7
 10121                           postinc1	equ	0xFE6
 10122                           postdec1	equ	0xFE5
 10123                           fsr1h	equ	0xFE2
 10124                           fsr1l	equ	0xFE1
 10125                           indf2	equ	0xFDF
 10126                           postinc2	equ	0xFDE
 10127                           postdec2	equ	0xFDD
 10128                           fsr2h	equ	0xFDA
 10129                           fsr2l	equ	0xFD9
 10130                           status	equ	0xFD8
 10131                           
 10132 ;; *************** function _put_string_usb *****************
 10133 ;; Defined at:
 10134 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;  s               2   12[BANK0 ] PTR unsigned char 
 10137 ;;		 -> USB_task@data(1), 
 10138 ;;  len             2   14[BANK0 ] int 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;		None
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  2   12[BANK0 ] int 
 10143 ;; Registers used:
 10144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10150 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10153 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10154 ;;Total ram usage:        4 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; Hardware stack levels required when called:   13
 10157 ;; This function calls:
 10158 ;;		_CDCTxService
 10159 ;;		_is_usb_available
 10160 ;;		_putUSBUSART
 10161 ;; This function is called by:
 10162 ;;		_USB_task
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           	psect	text44
 10167  014374                     __ptext44:
 10168                           	opt stack 0
 10169  014374                     _put_string_usb:
 10170                           	opt stack 16
 10171                           
 10172                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 10173                           
 10174                           ;incstack = 0
 10175  014374  EC9A  F0A2         	call	_is_usb_available	;wreg free
 10176  014378  0900               	iorlw	0
 10177  01437A  B4D8               	btfsc	status,2,c
 10178  01437C  0012               	return	
 10179  01437E  D002               	goto	l9202
 10180  014380                     l9200:
 10181  014380  EC46  F08A         	call	_CDCTxService	;wreg free
 10182  014384                     l9202:
 10183  014384  5028               	movf	_cdc_trf_state,w,c
 10184  014386  A4D8               	btfss	status,2,c
 10185  014388  D7FB               	goto	l9200
 10186                           
 10187                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 10188  01438A  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 10189  01438E  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 10190  014392  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 10191  014396  EC5C  F0A2         	call	_putUSBUSART	;wreg free
 10192                           
 10193                           ;My_usb_cdc.c: 28: CDCTxService();
 10194  01439A  EC46  F08A         	call	_CDCTxService	;wreg free
 10195  01439E  0012               	return	
 10196  0143A0                     __end_of_put_string_usb:
 10197                           	opt stack 0
 10198                           tblptru	equ	0xFF8
 10199                           tblptrh	equ	0xFF7
 10200                           tblptrl	equ	0xFF6
 10201                           tablat	equ	0xFF5
 10202                           prodh	equ	0xFF4
 10203                           prodl	equ	0xFF3
 10204                           intcon	equ	0xFF2
 10205                           intcon2	equ	0xFF1
 10206                           postinc0	equ	0xFEE
 10207                           wreg	equ	0xFE8
 10208                           indf1	equ	0xFE7
 10209                           postinc1	equ	0xFE6
 10210                           postdec1	equ	0xFE5
 10211                           fsr1h	equ	0xFE2
 10212                           fsr1l	equ	0xFE1
 10213                           indf2	equ	0xFDF
 10214                           postinc2	equ	0xFDE
 10215                           postdec2	equ	0xFDD
 10216                           fsr2h	equ	0xFDA
 10217                           fsr2l	equ	0xFD9
 10218                           status	equ	0xFD8
 10219                           
 10220 ;; *************** function _putUSBUSART *****************
 10221 ;; Defined at:
 10222 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  data            2    0[BANK0 ] PTR unsigned char 
 10225 ;;		 -> USB_task@data(1), 
 10226 ;;  length          1    2[BANK0 ] unsigned char 
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;		None               void
 10231 ;; Registers used:
 10232 ;;		wreg, status,2, status,0
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10238 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10242 ;;Total ram usage:        3 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:   11
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_put_string_usb
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text45
 10253  0144B8                     __ptext45:
 10254                           	opt stack 0
 10255  0144B8                     _putUSBUSART:
 10256                           	opt stack 17
 10257                           
 10258                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 10259                           
 10260                           ;incstack = 0
 10261  0144B8  98A0               	bcf	4000,4,c	;volatile
 10262                           
 10263                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 10264  0144BA  5028               	movf	_cdc_trf_state,w,c
 10265  0144BC  A4D8               	btfss	status,2,c
 10266  0144BE  D00A               	goto	l8864
 10267                           
 10268                           ;usb_device_cdc.c: 640: {
 10269                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 10270  0144C0  C060  F11E         	movff	putUSBUSART@data,_pCDCSrc
 10271  0144C4  C061  F11F         	movff	putUSBUSART@data+1,_pCDCSrc+1
 10272  0144C8  C062  F0D3         	movff	putUSBUSART@length,_cdc_tx_len
 10273  0144CC  0E01               	movlw	1
 10274  0144CE  6E27               	movwf	_cdc_mem_type,c
 10275  0144D0  0E01               	movlw	1
 10276  0144D2  6E28               	movwf	_cdc_trf_state,c
 10277  0144D4                     l8864:
 10278                           
 10279                           ;usb_device_cdc.c: 642: }
 10280                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 10281  0144D4  88A0               	bsf	4000,4,c	;volatile
 10282  0144D6  0012               	return		;funcret
 10283  0144D8                     __end_of_putUSBUSART:
 10284                           	opt stack 0
 10285                           tblptru	equ	0xFF8
 10286                           tblptrh	equ	0xFF7
 10287                           tblptrl	equ	0xFF6
 10288                           tablat	equ	0xFF5
 10289                           prodh	equ	0xFF4
 10290                           prodl	equ	0xFF3
 10291                           intcon	equ	0xFF2
 10292                           intcon2	equ	0xFF1
 10293                           postinc0	equ	0xFEE
 10294                           wreg	equ	0xFE8
 10295                           indf1	equ	0xFE7
 10296                           postinc1	equ	0xFE6
 10297                           postdec1	equ	0xFE5
 10298                           fsr1h	equ	0xFE2
 10299                           fsr1l	equ	0xFE1
 10300                           indf2	equ	0xFDF
 10301                           postinc2	equ	0xFDE
 10302                           postdec2	equ	0xFDD
 10303                           fsr2h	equ	0xFDA
 10304                           fsr2l	equ	0xFD9
 10305                           status	equ	0xFD8
 10306                           
 10307 ;; *************** function _get_string_usb *****************
 10308 ;; Defined at:
 10309 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  s               2   13[BANK0 ] PTR unsigned char 
 10312 ;;		 -> USB_task@data(1), 
 10313 ;;  len             2   15[BANK0 ] int 
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;  rx_len          2   18[BANK0 ] int 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  2   13[BANK0 ] int 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10325 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10326 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10327 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10328 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10329 ;;Total ram usage:        7 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:   13
 10332 ;; This function calls:
 10333 ;;		_CDCTxService
 10334 ;;		_getsUSBUSART
 10335 ;;		_is_usb_available
 10336 ;; This function is called by:
 10337 ;;		_USB_task
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text46
 10342  014050                     __ptext46:
 10343                           	opt stack 0
 10344  014050                     _get_string_usb:
 10345                           	opt stack 16
 10346                           
 10347                           ;My_usb_cdc.c: 33: int rx_len;
 10348                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 10349                           
 10350                           ;incstack = 0
 10351  014050  EC9A  F0A2         	call	_is_usb_available	;wreg free
 10352  014054  0900               	iorlw	0
 10353  014056  A4D8               	btfss	status,2,c
 10354  014058  D008               	goto	l9218
 10355                           
 10356                           ;My_usb_cdc.c: 36: return 0;
 10357  01405A  0E00               	movlw	0
 10358  01405C  0100               	movlb	0	; () banked
 10359  01405E  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 10360  014060  0E00               	movlw	0
 10361  014062  6F6D               	movwf	?_get_string_usb& (0+255),b
 10362                           
 10363                           ; BSR set to: 0
 10364  014064  0012               	return	
 10365  014066                     l9216:
 10366  014066  EC46  F08A         	call	_CDCTxService	;wreg free
 10367  01406A                     l9218:
 10368  01406A  5028               	movf	_cdc_trf_state,w,c
 10369  01406C  A4D8               	btfss	status,2,c
 10370  01406E  D7FB               	goto	l9216
 10371                           
 10372                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 10373  014070  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 10374  014074  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 10375  014078  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 10376  01407C  ECA8  F090         	call	_getsUSBUSART	;wreg free
 10377  014080  0100               	movlb	0	; () banked
 10378  014082  6F71               	movwf	??_get_string_usb& (0+255),b
 10379  014084  0100               	movlb	0	; () banked
 10380  014086  5171               	movf	??_get_string_usb& (0+255),w,b
 10381  014088  0100               	movlb	0	; () banked
 10382  01408A  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 10383  01408C  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 10384                           
 10385                           ;My_usb_cdc.c: 40: CDCTxService();
 10386  01408E  EC46  F08A         	call	_CDCTxService	;wreg free
 10387                           
 10388                           ;My_usb_cdc.c: 41: return rx_len;
 10389  014092  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 10390  014096  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 10391  01409A  0012               	return	
 10392  01409C                     __end_of_get_string_usb:
 10393                           	opt stack 0
 10394                           tblptru	equ	0xFF8
 10395                           tblptrh	equ	0xFF7
 10396                           tblptrl	equ	0xFF6
 10397                           tablat	equ	0xFF5
 10398                           prodh	equ	0xFF4
 10399                           prodl	equ	0xFF3
 10400                           intcon	equ	0xFF2
 10401                           intcon2	equ	0xFF1
 10402                           postinc0	equ	0xFEE
 10403                           wreg	equ	0xFE8
 10404                           indf1	equ	0xFE7
 10405                           postinc1	equ	0xFE6
 10406                           postdec1	equ	0xFE5
 10407                           fsr1h	equ	0xFE2
 10408                           fsr1l	equ	0xFE1
 10409                           indf2	equ	0xFDF
 10410                           postinc2	equ	0xFDE
 10411                           postdec2	equ	0xFDD
 10412                           fsr2h	equ	0xFDA
 10413                           fsr2l	equ	0xFD9
 10414                           status	equ	0xFD8
 10415                           
 10416 ;; *************** function _is_usb_available *****************
 10417 ;; Defined at:
 10418 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;		None
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;		None
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      unsigned char 
 10425 ;; Registers used:
 10426 ;;		wreg, status,2, status,0
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10433 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10435 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10436 ;;Total ram usage:        1 bytes
 10437 ;; Hardware stack levels used:    1
 10438 ;; Hardware stack levels required when called:   11
 10439 ;; This function calls:
 10440 ;;		Nothing
 10441 ;; This function is called by:
 10442 ;;		_put_string_usb
 10443 ;;		_get_string_usb
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           	psect	text47
 10448  014534                     __ptext47:
 10449                           	opt stack 0
 10450  014534                     _is_usb_available:
 10451                           	opt stack 17
 10452                           
 10453                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 10454                           
 10455                           ;incstack = 0
 10456  014534  0E00               	movlw	0
 10457  014536  0100               	movlb	0	; () banked
 10458  014538  6F60               	movwf	_is_usb_available$4851& (0+255),b
 10459                           
 10460                           ; BSR set to: 0
 10461  01453A  0E1F               	movlw	31
 10462  01453C  6423               	cpfsgt	_USBDeviceState,c	;volatile
 10463  01453E  D005               	goto	l1162
 10464                           
 10465                           ; BSR set to: 0
 10466  014540  B265               	btfsc	3941,1,c	;volatile
 10467  014542  D003               	goto	l1162
 10468                           
 10469                           ; BSR set to: 0
 10470  014544  0E01               	movlw	1
 10471  014546  0100               	movlb	0	; () banked
 10472  014548  6F60               	movwf	_is_usb_available$4851& (0+255),b
 10473  01454A                     l1162:
 10474                           
 10475                           ; BSR set to: 0
 10476  01454A  0100               	movlb	0	; () banked
 10477  01454C  5160               	movf	_is_usb_available$4851& (0+255),w,b
 10478  01454E  0012               	return	
 10479  014550                     __end_of_is_usb_available:
 10480                           	opt stack 0
 10481                           tblptru	equ	0xFF8
 10482                           tblptrh	equ	0xFF7
 10483                           tblptrl	equ	0xFF6
 10484                           tablat	equ	0xFF5
 10485                           prodh	equ	0xFF4
 10486                           prodl	equ	0xFF3
 10487                           intcon	equ	0xFF2
 10488                           intcon2	equ	0xFF1
 10489                           postinc0	equ	0xFEE
 10490                           wreg	equ	0xFE8
 10491                           indf1	equ	0xFE7
 10492                           postinc1	equ	0xFE6
 10493                           postdec1	equ	0xFE5
 10494                           fsr1h	equ	0xFE2
 10495                           fsr1l	equ	0xFE1
 10496                           indf2	equ	0xFDF
 10497                           postinc2	equ	0xFDE
 10498                           postdec2	equ	0xFDD
 10499                           fsr2h	equ	0xFDA
 10500                           fsr2l	equ	0xFD9
 10501                           status	equ	0xFD8
 10502                           
 10503 ;; *************** function _getsUSBUSART *****************
 10504 ;; Defined at:
 10505 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 10508 ;;		 -> USB_task@data(1), 
 10509 ;;  len             1    9[BANK0 ] unsigned char 
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;		None
 10512 ;; Return value:  Size  Location     Type
 10513 ;;                  1    wreg      unsigned char 
 10514 ;; Registers used:
 10515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10516 ;; Tracked objects:
 10517 ;;		On entry : 0/0
 10518 ;;		On exit  : 0/0
 10519 ;;		Unchanged: 0/0
 10520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10521 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10523 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10524 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10525 ;;Total ram usage:        6 bytes
 10526 ;; Hardware stack levels used:    1
 10527 ;; Hardware stack levels required when called:   12
 10528 ;; This function calls:
 10529 ;;		_USBTransferOnePacket
 10530 ;; This function is called by:
 10531 ;;		_get_string_usb
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           	psect	text48
 10536  012150                     __ptext48:
 10537                           	opt stack 0
 10538  012150                     _getsUSBUSART:
 10539                           	opt stack 16
 10540                           
 10541                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;incstack = 0
 10545  012150  0E00               	movlw	0
 10546  012152  0100               	movlb	0	; () banked
 10547  012154  6FD2               	movwf	_cdc_rx_len& (0+255),b
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 10551  012156  0100               	movlb	0	; () banked
 10552  012158  51D0               	movf	_CDCDataOutHandle& (0+255),w,b
 10553  01215A  0100               	movlb	0	; () banked
 10554  01215C  11D1               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 10555  01215E  B4D8               	btfsc	status,2,c
 10556  012160  D013               	goto	l8830
 10557                           
 10558                           ; BSR set to: 0
 10559  012162  C0D0  FFD9         	movff	_CDCDataOutHandle,fsr2l
 10560  012166  C0D1  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 10561  01216A  0100               	movlb	0	; () banked
 10562  01216C  AEDF               	btfss	indf2,7,c
 10563  01216E  D004               	goto	u8610
 10564  012170  0100               	movlb	0	; () banked
 10565  012172  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10566  012174  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 10567  012176  D002               	goto	u8618
 10568  012178                     u8610:
 10569  012178  0100               	movlb	0	; () banked
 10570  01217A  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10571  01217C                     u8618:
 10572  01217C  0100               	movlb	0	; () banked
 10573  01217E  516A               	movf	??_getsUSBUSART& (0+255),w,b
 10574  012180  0100               	movlb	0	; () banked
 10575  012182  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 10576  012184  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 10577  012186  D005               	goto	l8832
 10578  012188                     l8830:
 10579                           
 10580                           ; BSR set to: 0
 10581  012188  0E00               	movlw	0
 10582  01218A  0100               	movlb	0	; () banked
 10583  01218C  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 10584  01218E  0E00               	movlw	0
 10585  012190  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 10586  012192                     l8832:
 10587                           
 10588                           ; BSR set to: 0
 10589  012192  0100               	movlb	0	; () banked
 10590  012194  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 10591  012196  0100               	movlb	0	; () banked
 10592  012198  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 10593  01219A  A4D8               	btfss	status,2,c
 10594  01219C  D04B               	goto	l8848
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;usb_device_cdc.c: 547: {
 10598                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 10599  01219E  0100               	movlb	0	; () banked
 10600  0121A0  EE20 F001          	lfsr	2,1
 10601  0121A4  51D0               	movf	_CDCDataOutHandle& (0+255),w,b
 10602  0121A6  26D9               	addwf	fsr2l,f,c
 10603  0121A8  51D1               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10604  0121AA  22DA               	addwfc	fsr2h,f,c
 10605  0121AC  0100               	movlb	0	; () banked
 10606  0121AE  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10607  0121B0  5CDE               	subwf	postinc2,w,c
 10608  0121B2  B0D8               	btfsc	status,0,c
 10609  0121B4  D00A               	goto	l8838
 10610                           
 10611                           ; BSR set to: 0
 10612                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 10613  0121B6  0100               	movlb	0	; () banked
 10614  0121B8  EE20 F001          	lfsr	2,1
 10615  0121BC  51D0               	movf	_CDCDataOutHandle& (0+255),w,b
 10616  0121BE  26D9               	addwf	fsr2l,f,c
 10617  0121C0  51D1               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10618  0121C2  22DA               	addwfc	fsr2h,f,c
 10619  0121C4  50DF               	movf	indf2,w,c
 10620  0121C6  0100               	movlb	0	; () banked
 10621  0121C8  6F69               	movwf	getsUSBUSART@len& (0+255),b
 10622  0121CA                     l8838:
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 10626  0121CA  0E00               	movlw	0
 10627  0121CC  0100               	movlb	0	; () banked
 10628  0121CE  6FD2               	movwf	_cdc_rx_len& (0+255),b
 10629  0121D0  D018               	goto	l8844
 10630  0121D2                     l8840:
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 10634  0121D2  0100               	movlb	0	; () banked
 10635  0121D4  51D2               	movf	_cdc_rx_len& (0+255),w,b
 10636  0121D6  0D01               	mullw	1
 10637  0121D8  0E00               	movlw	low _cdc_data_rx
 10638  0121DA  24F3               	addwf	prodl,w,c
 10639  0121DC  6ED9               	movwf	fsr2l,c
 10640  0121DE  0E02               	movlw	high _cdc_data_rx
 10641  0121E0  20F4               	addwfc	prodh,w,c
 10642  0121E2  6EDA               	movwf	fsr2h,c
 10643  0121E4  0100               	movlb	0	; () banked
 10644  0121E6  51D2               	movf	_cdc_rx_len& (0+255),w,b
 10645  0121E8  0D01               	mullw	1
 10646  0121EA  50F3               	movf	prodl,w,c
 10647  0121EC  0100               	movlb	0	; () banked
 10648  0121EE  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 10649  0121F0  6EE1               	movwf	fsr1l,c
 10650  0121F2  50F4               	movf	prodh,w,c
 10651  0121F4  0100               	movlb	0	; () banked
 10652  0121F6  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 10653  0121F8  6EE2               	movwf	fsr1h,c
 10654  0121FA  CFDF FFE7          	movff	indf2,indf1
 10655                           
 10656                           ; BSR set to: 0
 10657  0121FE  0100               	movlb	0	; () banked
 10658  012200  2BD2               	incf	_cdc_rx_len& (0+255),f,b
 10659  012202                     l8844:
 10660                           
 10661                           ; BSR set to: 0
 10662  012202  0100               	movlb	0	; () banked
 10663  012204  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10664  012206  0100               	movlb	0	; () banked
 10665  012208  5DD2               	subwf	_cdc_rx_len& (0+255),w,b
 10666  01220A  A0D8               	btfss	status,0,c
 10667  01220C  D7E2               	goto	l8840
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10671                           
 10672                           ; BSR set to: 0
 10673  01220E  0E00               	movlw	0
 10674  012210  0100               	movlb	0	; () banked
 10675  012212  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10676  012214  0E00               	movlw	low _cdc_data_rx
 10677  012216  0100               	movlb	0	; () banked
 10678  012218  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10679  01221A  0E02               	movlw	high _cdc_data_rx
 10680  01221C  0100               	movlb	0	; () banked
 10681  01221E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10682  012220  0E40               	movlw	64
 10683  012222  0100               	movlb	0	; () banked
 10684  012224  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10685  012226  0E02               	movlw	2
 10686  012228  EC45  F093         	call	_USBTransferOnePacket
 10687  01222C  C060  F0D0         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10688  012230  C061  F0D1         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10689  012234                     l8848:
 10690                           
 10691                           ;usb_device_cdc.c: 567: }
 10692                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 10693  012234  0100               	movlb	0	; () banked
 10694  012236  51D2               	movf	_cdc_rx_len& (0+255),w,b
 10695  012238  0012               	return	
 10696  01223A                     __end_of_getsUSBUSART:
 10697                           	opt stack 0
 10698                           tblptru	equ	0xFF8
 10699                           tblptrh	equ	0xFF7
 10700                           tblptrl	equ	0xFF6
 10701                           tablat	equ	0xFF5
 10702                           prodh	equ	0xFF4
 10703                           prodl	equ	0xFF3
 10704                           intcon	equ	0xFF2
 10705                           intcon2	equ	0xFF1
 10706                           postinc0	equ	0xFEE
 10707                           wreg	equ	0xFE8
 10708                           indf1	equ	0xFE7
 10709                           postinc1	equ	0xFE6
 10710                           postdec1	equ	0xFE5
 10711                           fsr1h	equ	0xFE2
 10712                           fsr1l	equ	0xFE1
 10713                           indf2	equ	0xFDF
 10714                           postinc2	equ	0xFDE
 10715                           postdec2	equ	0xFDD
 10716                           fsr2h	equ	0xFDA
 10717                           fsr2l	equ	0xFD9
 10718                           status	equ	0xFD8
 10719                           
 10720 ;; *************** function _CDCTxService *****************
 10721 ;; Defined at:
 10722 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;		None
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 10727 ;;  i               1   10[BANK0 ] unsigned char 
 10728 ;; Return value:  Size  Location     Type
 10729 ;;		None               void
 10730 ;; Registers used:
 10731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10738 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10740 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10741 ;;Total ram usage:        5 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:   12
 10744 ;; This function calls:
 10745 ;;		_USBTransferOnePacket
 10746 ;; This function is called by:
 10747 ;;		_put_string_usb
 10748 ;;		_get_string_usb
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text49
 10753  01148C                     __ptext49:
 10754                           	opt stack 0
 10755  01148C                     _CDCTxService:
 10756                           	opt stack 16
 10757                           
 10758                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 10759                           ;usb_device_cdc.c: 896: uint8_t i;
 10760                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;incstack = 0
 10764  01148C  98A0               	bcf	4000,4,c	;volatile
 10765                           
 10766                           ;usb_device_cdc.c: 900: {};
 10767                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 10768  01148E  0101               	movlb	1	; () banked
 10769  011490  5125               	movf	_CDCDataInHandle& (0+255),w,b
 10770  011492  0101               	movlb	1	; () banked
 10771  011494  1126               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 10772  011496  B4D8               	btfsc	status,2,c
 10773  011498  D013               	goto	l8872
 10774                           
 10775                           ; BSR set to: 1
 10776  01149A  C125  FFD9         	movff	_CDCDataInHandle,fsr2l
 10777  01149E  C126  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 10778  0114A2  0101               	movlb	1	; () banked
 10779  0114A4  AEDF               	btfss	indf2,7,c
 10780  0114A6  D004               	goto	u8670
 10781  0114A8  0100               	movlb	0	; () banked
 10782  0114AA  6B67               	clrf	??_CDCTxService& (0+255),b
 10783  0114AC  2B67               	incf	??_CDCTxService& (0+255),f,b
 10784  0114AE  D002               	goto	u8678
 10785  0114B0                     u8670:
 10786  0114B0  0100               	movlb	0	; () banked
 10787  0114B2  6B67               	clrf	??_CDCTxService& (0+255),b
 10788  0114B4                     u8678:
 10789  0114B4  0100               	movlb	0	; () banked
 10790  0114B6  5167               	movf	??_CDCTxService& (0+255),w,b
 10791  0114B8  0100               	movlb	0	; () banked
 10792  0114BA  6F68               	movwf	_CDCTxService$2005& (0+255),b
 10793  0114BC  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 10794  0114BE  D005               	goto	l8874
 10795  0114C0                     l8872:
 10796  0114C0  0E00               	movlw	0
 10797  0114C2  0100               	movlb	0	; () banked
 10798  0114C4  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 10799  0114C6  0E00               	movlw	0
 10800  0114C8  6F68               	movwf	_CDCTxService$2005& (0+255),b
 10801  0114CA                     l8874:
 10802                           
 10803                           ; BSR set to: 0
 10804  0114CA  0100               	movlb	0	; () banked
 10805  0114CC  5168               	movf	_CDCTxService$2005& (0+255),w,b
 10806  0114CE  0100               	movlb	0	; () banked
 10807  0114D0  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 10808  0114D2  B4D8               	btfsc	status,2,c
 10809  0114D4  D002               	goto	l8878
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;usb_device_cdc.c: 903: {
 10813                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 10814  0114D6  88A0               	bsf	4000,4,c	;volatile
 10815                           
 10816                           ;usb_device_cdc.c: 905: return;
 10817  0114D8  0012               	return	
 10818  0114DA                     l8878:
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;usb_device_cdc.c: 906: }
 10822                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 10823  0114DA  0E03               	movlw	3
 10824  0114DC  1828               	xorwf	_cdc_trf_state,w,c
 10825  0114DE  A4D8               	btfss	status,2,c
 10826  0114E0  D002               	goto	l504
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 10830  0114E2  0E00               	movlw	0
 10831  0114E4  6E28               	movwf	_cdc_trf_state,c
 10832  0114E6                     l504:
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 10836  0114E6  5028               	movf	_cdc_trf_state,w,c
 10837  0114E8  A4D8               	btfss	status,2,c
 10838  0114EA  D002               	goto	l8884
 10839                           
 10840                           ; BSR set to: 0
 10841                           ;usb_device_cdc.c: 920: {
 10842                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 10843  0114EC  88A0               	bsf	4000,4,c	;volatile
 10844                           
 10845                           ;usb_device_cdc.c: 922: return;
 10846  0114EE  0012               	return	
 10847  0114F0                     l8884:
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;usb_device_cdc.c: 923: }
 10851                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 10852  0114F0  0E02               	movlw	2
 10853  0114F2  1828               	xorwf	_cdc_trf_state,w,c
 10854  0114F4  A4D8               	btfss	status,2,c
 10855  0114F6  D016               	goto	l8890
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;usb_device_cdc.c: 929: {
 10859                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 10860  0114F8  0E01               	movlw	1
 10861  0114FA  0100               	movlb	0	; () banked
 10862  0114FC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10863  0114FE  0E00               	movlw	0
 10864  011500  0100               	movlb	0	; () banked
 10865  011502  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10866  011504  0E00               	movlw	0
 10867  011506  0100               	movlb	0	; () banked
 10868  011508  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10869  01150A  0E00               	movlw	0
 10870  01150C  0100               	movlb	0	; () banked
 10871  01150E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10872  011510  0E02               	movlw	2
 10873  011512  EC45  F093         	call	_USBTransferOnePacket
 10874  011516  C060  F125         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 10875  01151A  C061  F126         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 10876                           
 10877                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 10878  01151E  0E03               	movlw	3
 10879  011520  6E28               	movwf	_cdc_trf_state,c
 10880                           
 10881                           ;usb_device_cdc.c: 933: }
 10882  011522  D06E               	goto	l8934
 10883  011524                     l8890:
 10884                           
 10885                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 10886  011524  0428               	decf	_cdc_trf_state,w,c
 10887  011526  A4D8               	btfss	status,2,c
 10888  011528  D06B               	goto	l8934
 10889                           
 10890                           ;usb_device_cdc.c: 935: {
 10891                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 10892  01152A  0E40               	movlw	64
 10893  01152C  0100               	movlb	0	; () banked
 10894  01152E  65D3               	cpfsgt	_cdc_tx_len& (0+255),b
 10895  011530  D004               	goto	l509
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 10899  011532  0E40               	movlw	64
 10900  011534  0100               	movlb	0	; () banked
 10901  011536  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 10902  011538  D002               	goto	l8896
 10903  01153A                     l509:
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;usb_device_cdc.c: 941: else
 10907                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 10908  01153A  C0D3  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 10909  01153E                     l8896:
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 10913  01153E  0100               	movlb	0	; () banked
 10914  011540  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 10915  011542  0800               	sublw	0
 10916  011544  0100               	movlb	0	; () banked
 10917  011546  25D3               	addwf	_cdc_tx_len& (0+255),w,b
 10918  011548  0100               	movlb	0	; () banked
 10919  01154A  6FD3               	movwf	_cdc_tx_len& (0+255),b
 10920                           
 10921                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 10922  01154C  0E40               	movlw	low _cdc_data_tx
 10923  01154E  0101               	movlb	1	; () banked
 10924  011550  6F1B               	movwf	_pCDCDst& (0+255),b
 10925  011552  0E02               	movlw	high _cdc_data_tx
 10926  011554  0101               	movlb	1	; () banked
 10927  011556  6F1C               	movwf	(_pCDCDst+1)& (0+255),b
 10928                           
 10929                           ; BSR set to: 1
 10930                           ;usb_device_cdc.c: 951: i = byte_to_send;
 10931  011558  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 10932                           
 10933                           ; BSR set to: 1
 10934                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 10935  01155C  5027               	movf	_cdc_mem_type,w,c
 10936  01155E  B4D8               	btfsc	status,2,c
 10937  011560  D013               	goto	l8912
 10938  011562  D02A               	goto	l8922
 10939  011564                     l8904:
 10940                           
 10941                           ;usb_device_cdc.c: 955: {
 10942                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 10943  011564  C11E  FFD9         	movff	_pCDCSrc,fsr2l
 10944  011568  C11F  FFDA         	movff	_pCDCSrc+1,fsr2h
 10945  01156C  C11B  FFE1         	movff	_pCDCDst,fsr1l
 10946  011570  C11C  FFE2         	movff	_pCDCDst+1,fsr1h
 10947  011574  CFDF FFE7          	movff	indf2,indf1
 10948                           
 10949                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 10950  011578  0101               	movlb	1	; () banked
 10951  01157A  4B1B               	infsnz	_pCDCDst& (0+255),f,b
 10952  01157C  2B1C               	incf	(_pCDCDst+1)& (0+255),f,b
 10953                           
 10954                           ; BSR set to: 1
 10955                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 10956  01157E  0101               	movlb	1	; () banked
 10957  011580  4B1E               	infsnz	_pCDCSrc& (0+255),f,b
 10958  011582  2B1F               	incf	(_pCDCSrc+1)& (0+255),f,b
 10959                           
 10960                           ; BSR set to: 1
 10961                           ;usb_device_cdc.c: 959: i--;
 10962  011584  0100               	movlb	0	; () banked
 10963  011586  076A               	decf	CDCTxService@i& (0+255),f,b
 10964  011588                     l8912:
 10965  011588  0100               	movlb	0	; () banked
 10966  01158A  516A               	movf	CDCTxService@i& (0+255),w,b
 10967  01158C  0100               	movlb	0	; () banked
 10968  01158E  B4D8               	btfsc	status,2,c
 10969  011590  D018               	goto	l8924
 10970  011592  D7E8               	goto	l8904
 10971  011594                     l8914:
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;usb_device_cdc.c: 965: {
 10975                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 10976  011594  C11E  FFD9         	movff	_pCDCSrc,fsr2l
 10977  011598  C11F  FFDA         	movff	_pCDCSrc+1,fsr2h
 10978  01159C  C11B  FFE1         	movff	_pCDCDst,fsr1l
 10979  0115A0  C11C  FFE2         	movff	_pCDCDst+1,fsr1h
 10980  0115A4  CFDF FFE7          	movff	indf2,indf1
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 10984  0115A8  0101               	movlb	1	; () banked
 10985  0115AA  4B1B               	infsnz	_pCDCDst& (0+255),f,b
 10986  0115AC  2B1C               	incf	(_pCDCDst+1)& (0+255),f,b
 10987                           
 10988                           ; BSR set to: 1
 10989                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 10990  0115AE  0101               	movlb	1	; () banked
 10991  0115B0  4B1E               	infsnz	_pCDCSrc& (0+255),f,b
 10992  0115B2  2B1F               	incf	(_pCDCSrc+1)& (0+255),f,b
 10993                           
 10994                           ; BSR set to: 1
 10995                           ;usb_device_cdc.c: 969: i--;
 10996  0115B4  0100               	movlb	0	; () banked
 10997  0115B6  076A               	decf	CDCTxService@i& (0+255),f,b
 10998  0115B8                     l8922:
 10999  0115B8  0100               	movlb	0	; () banked
 11000  0115BA  516A               	movf	CDCTxService@i& (0+255),w,b
 11001  0115BC  0100               	movlb	0	; () banked
 11002  0115BE  A4D8               	btfss	status,2,c
 11003  0115C0  D7E9               	goto	l8914
 11004  0115C2                     l8924:
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;usb_device_cdc.c: 970: }
 11008                           ;usb_device_cdc.c: 971: }
 11009                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 11010  0115C2  0100               	movlb	0	; () banked
 11011  0115C4  51D3               	movf	_cdc_tx_len& (0+255),w,b
 11012  0115C6  A4D8               	btfss	status,2,c
 11013  0115C8  D009               	goto	l8932
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;usb_device_cdc.c: 978: {
 11017                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 11018  0115CA  0E40               	movlw	64
 11019  0115CC  0100               	movlb	0	; () banked
 11020  0115CE  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 11021  0115D0  A4D8               	btfss	status,2,c
 11022  0115D2  D002               	goto	l8930
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 11026  0115D4  0E02               	movlw	2
 11027  0115D6  D001               	goto	L1
 11028  0115D8                     l8930:
 11029                           
 11030                           ; BSR set to: 0
 11031                           ;usb_device_cdc.c: 981: else
 11032                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 11033  0115D8  0E03               	movlw	3
 11034  0115DA                     L1:
 11035  0115DA  6E28               	movwf	_cdc_trf_state,c
 11036  0115DC                     l8932:
 11037                           
 11038                           ; BSR set to: 0
 11039                           ;usb_device_cdc.c: 983: }
 11040                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 11041  0115DC  0E01               	movlw	1
 11042  0115DE  0100               	movlb	0	; () banked
 11043  0115E0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11044  0115E2  0E40               	movlw	low _cdc_data_tx
 11045  0115E4  0100               	movlb	0	; () banked
 11046  0115E6  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11047  0115E8  0E02               	movlw	high _cdc_data_tx
 11048  0115EA  0100               	movlb	0	; () banked
 11049  0115EC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11050  0115EE  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 11051  0115F2  0E02               	movlw	2
 11052  0115F4  EC45  F093         	call	_USBTransferOnePacket
 11053  0115F8  C060  F125         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11054  0115FC  C061  F126         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11055  011600                     l8934:
 11056                           
 11057                           ;usb_device_cdc.c: 986: }
 11058                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 11059  011600  88A0               	bsf	4000,4,c	;volatile
 11060  011602  0012               	return		;funcret
 11061  011604                     __end_of_CDCTxService:
 11062                           	opt stack 0
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           prodh	equ	0xFF4
 11068                           prodl	equ	0xFF3
 11069                           intcon	equ	0xFF2
 11070                           intcon2	equ	0xFF1
 11071                           postinc0	equ	0xFEE
 11072                           wreg	equ	0xFE8
 11073                           indf1	equ	0xFE7
 11074                           postinc1	equ	0xFE6
 11075                           postdec1	equ	0xFE5
 11076                           fsr1h	equ	0xFE2
 11077                           fsr1l	equ	0xFE1
 11078                           indf2	equ	0xFDF
 11079                           postinc2	equ	0xFDE
 11080                           postdec2	equ	0xFDD
 11081                           fsr2h	equ	0xFDA
 11082                           fsr2l	equ	0xFD9
 11083                           status	equ	0xFD8
 11084                           
 11085 ;; *************** function _USBTransferOnePacket *****************
 11086 ;; Defined at:
 11087 ;;		line 995 in file "../My_library/usb/usb_device.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;  ep              1    wreg     unsigned char 
 11090 ;;  dir             1    0[BANK0 ] unsigned char 
 11091 ;;  data            2    1[BANK0 ] PTR unsigned char 
 11092 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 11093 ;;  len             1    3[BANK0 ] unsigned char 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;  ep              1    4[BANK0 ] unsigned char 
 11096 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 11097 ;;		 -> NULL(0), BDT(48), 
 11098 ;; Return value:  Size  Location     Type
 11099 ;;                  2    0[BANK0 ] PTR void 
 11100 ;; Registers used:
 11101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11102 ;; Tracked objects:
 11103 ;;		On entry : 0/0
 11104 ;;		On exit  : 0/0
 11105 ;;		Unchanged: 0/0
 11106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11107 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11110 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11111 ;;Total ram usage:        7 bytes
 11112 ;; Hardware stack levels used:    1
 11113 ;; Hardware stack levels required when called:   11
 11114 ;; This function calls:
 11115 ;;		Nothing
 11116 ;; This function is called by:
 11117 ;;		_getsUSBUSART
 11118 ;;		_CDCTxService
 11119 ;;		_USBCDCEventHandler
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           	psect	text50
 11124  01268A                     __ptext50:
 11125                           	opt stack 0
 11126  01268A                     _USBTransferOnePacket:
 11127                           	opt stack 16
 11128                           
 11129                           ;incstack = 0
 11130                           ;USBTransferOnePacket@ep stored from wreg
 11131  01268A  0100               	movlb	0	; () banked
 11132  01268C  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 11133                           
 11134                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 11135                           ;usb_device.c: 1000: if(dir != 0)
 11136  01268E  0100               	movlb	0	; () banked
 11137  012690  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11138  012692  0100               	movlb	0	; () banked
 11139  012694  B4D8               	btfsc	status,2,c
 11140  012696  D008               	goto	l8660
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;usb_device.c: 1001: {
 11144                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 11145  012698  0100               	movlb	0	; () banked
 11146  01269A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11147  01269C  0D02               	mullw	2
 11148  01269E  0E10               	movlw	low _pBDTEntryIn
 11149  0126A0  24F3               	addwf	prodl,w,c
 11150  0126A2  6ED9               	movwf	fsr2l,c
 11151  0126A4  0E00               	movlw	high _pBDTEntryIn
 11152  0126A6  D007               	goto	L2
 11153  0126A8                     l8660:
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;usb_device.c: 1005: else
 11157                           ;usb_device.c: 1006: {
 11158                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 11159  0126A8  0100               	movlb	0	; () banked
 11160  0126AA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11161  0126AC  0D02               	mullw	2
 11162  0126AE  0E0A               	movlw	low _pBDTEntryOut
 11163  0126B0  24F3               	addwf	prodl,w,c
 11164  0126B2  6ED9               	movwf	fsr2l,c
 11165  0126B4  0E01               	movlw	high _pBDTEntryOut
 11166  0126B6                     L2:
 11167  0126B6  20F4               	addwfc	prodh,w,c
 11168  0126B8  6EDA               	movwf	fsr2h,c
 11169  0126BA  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 11170  0126BE  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;usb_device.c: 1009: }
 11174                           ;usb_device.c: 1013: if(handle == 0)
 11175                           
 11176                           ; BSR set to: 0
 11177  0126C2  0100               	movlb	0	; () banked
 11178  0126C4  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11179  0126C6  0100               	movlb	0	; () banked
 11180  0126C8  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11181  0126CA  A4D8               	btfss	status,2,c
 11182  0126CC  D007               	goto	l8668
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;usb_device.c: 1014: {
 11186                           ;usb_device.c: 1015: return 0;
 11187  0126CE  0E00               	movlw	0
 11188  0126D0  0100               	movlb	0	; () banked
 11189  0126D2  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 11190  0126D4  0E00               	movlw	0
 11191  0126D6  0100               	movlb	0	; () banked
 11192  0126D8  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 11193                           
 11194                           ; BSR set to: 0
 11195  0126DA  0012               	return	
 11196  0126DC                     l8668:
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;usb_device.c: 1016: }
 11200                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 11201  0126DC  0100               	movlb	0	; () banked
 11202  0126DE  EE20 F002          	lfsr	2,2
 11203  0126E2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11204  0126E4  26D9               	addwf	fsr2l,f,c
 11205  0126E6  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11206  0126E8  22DA               	addwfc	fsr2h,f,c
 11207  0126EA  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 11208  0126EE  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 11209                           
 11210                           ;usb_device.c: 1030: handle->CNT = len;
 11211  0126F2  0100               	movlb	0	; () banked
 11212  0126F4  EE20 F001          	lfsr	2,1
 11213  0126F8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 11214  0126FA  26D9               	addwf	fsr2l,f,c
 11215  0126FC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 11216  0126FE  22DA               	addwfc	fsr2h,f,c
 11217  012700  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 11221  012704  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11222  012708  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11223  01270C  0E40               	movlw	64
 11224  01270E  16DF               	andwf	indf2,f,c
 11225                           
 11226                           ; BSR set to: 0
 11227                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 11228  012710  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11229  012714  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11230  012718  0E00               	movlw	0
 11231  01271A  86DB               	bsf	plusw2,3,c
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 11235  01271C  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 11236  012720  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 11237  012724  0E00               	movlw	0
 11238  012726  8EDB               	bsf	plusw2,7,c
 11239                           
 11240                           ; BSR set to: 0
 11241                           ;usb_device.c: 1036: if(dir != 0)
 11242  012728  0100               	movlb	0	; () banked
 11243  01272A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 11244  01272C  0100               	movlb	0	; () banked
 11245  01272E  B4D8               	btfsc	status,2,c
 11246  012730  D008               	goto	l8680
 11247                           
 11248                           ; BSR set to: 0
 11249                           ;usb_device.c: 1037: {
 11250                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 11251  012732  0100               	movlb	0	; () banked
 11252  012734  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11253  012736  0D02               	mullw	2
 11254  012738  0E10               	movlw	low _pBDTEntryIn
 11255  01273A  24F3               	addwf	prodl,w,c
 11256  01273C  6ED9               	movwf	fsr2l,c
 11257  01273E  0E00               	movlw	high _pBDTEntryIn
 11258  012740  D007               	goto	L3
 11259  012742                     l8680:
 11260                           
 11261                           ; BSR set to: 0
 11262                           ;usb_device.c: 1041: else
 11263                           ;usb_device.c: 1042: {
 11264                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 11265  012742  0100               	movlb	0	; () banked
 11266  012744  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 11267  012746  0D02               	mullw	2
 11268  012748  0E0A               	movlw	low _pBDTEntryOut
 11269  01274A  24F3               	addwf	prodl,w,c
 11270  01274C  6ED9               	movwf	fsr2l,c
 11271  01274E  0E01               	movlw	high _pBDTEntryOut
 11272  012750                     L3:
 11273  012750  20F4               	addwfc	prodh,w,c
 11274  012752  6EDA               	movwf	fsr2h,c
 11275  012754  0E04               	movlw	4
 11276  012756  1ADF               	xorwf	indf2,f,c
 11277                           
 11278                           ; BSR set to: 0
 11279                           ;usb_device.c: 1045: }
 11280                           ;usb_device.c: 1046: return (void*)handle;
 11281                           
 11282                           ; BSR set to: 0
 11283  012758  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 11284  01275C  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 11285  012760  0012               	return	
 11286  012762                     __end_of_USBTransferOnePacket:
 11287                           	opt stack 0
 11288                           tblptru	equ	0xFF8
 11289                           tblptrh	equ	0xFF7
 11290                           tblptrl	equ	0xFF6
 11291                           tablat	equ	0xFF5
 11292                           prodh	equ	0xFF4
 11293                           prodl	equ	0xFF3
 11294                           intcon	equ	0xFF2
 11295                           intcon2	equ	0xFF1
 11296                           postinc0	equ	0xFEE
 11297                           wreg	equ	0xFE8
 11298                           indf1	equ	0xFE7
 11299                           postinc1	equ	0xFE6
 11300                           postdec1	equ	0xFE5
 11301                           fsr1h	equ	0xFE2
 11302                           fsr1l	equ	0xFE1
 11303                           indf2	equ	0xFDF
 11304                           postinc2	equ	0xFDE
 11305                           postdec2	equ	0xFDD
 11306                           plusw2	equ	0xFDB
 11307                           fsr2h	equ	0xFDA
 11308                           fsr2l	equ	0xFD9
 11309                           status	equ	0xFD8
 11310                           
 11311 ;; *************** function _UART_task *****************
 11312 ;; Defined at:
 11313 ;;		line 43 in file "../My_library/My_UART.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;		None
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;		None
 11318 ;; Return value:  Size  Location     Type
 11319 ;;		None               void
 11320 ;; Registers used:
 11321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11331 ;;Total ram usage:        0 bytes
 11332 ;; Hardware stack levels used:    1
 11333 ;; Hardware stack levels required when called:   12
 11334 ;; This function calls:
 11335 ;;		_ringbuf_num
 11336 ;; This function is called by:
 11337 ;;		_main
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text51
 11342  0144D8                     __ptext51:
 11343                           	opt stack 0
 11344  0144D8                     _UART_task:
 11345                           	opt stack 18
 11346                           
 11347                           ;My_UART.c: 44: if (ringbuf_num(&uart_tx)) {
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;incstack = 0
 11351  0144D8  0E53               	movlw	low _uart_tx
 11352  0144DA  0100               	movlb	0	; () banked
 11353  0144DC  6F60               	movwf	ringbuf_num@rb& (0+255),b
 11354  0144DE  0E01               	movlw	high _uart_tx
 11355  0144E0  0100               	movlb	0	; () banked
 11356  0144E2  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 11357  0144E4  EC31  F090         	call	_ringbuf_num	;wreg free
 11358  0144E8  0100               	movlb	0	; () banked
 11359  0144EA  5160               	movf	?_ringbuf_num& (0+255),w,b
 11360  0144EC  0100               	movlb	0	; () banked
 11361  0144EE  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11362  0144F0  B4D8               	btfsc	status,2,c
 11363  0144F2  0012               	return	
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
 11367  0144F4  889D               	bsf	3997,4,c	;volatile
 11368  0144F6  0012               	return	
 11369  0144F8                     __end_of_UART_task:
 11370                           	opt stack 0
 11371                           tblptru	equ	0xFF8
 11372                           tblptrh	equ	0xFF7
 11373                           tblptrl	equ	0xFF6
 11374                           tablat	equ	0xFF5
 11375                           prodh	equ	0xFF4
 11376                           prodl	equ	0xFF3
 11377                           intcon	equ	0xFF2
 11378                           intcon2	equ	0xFF1
 11379                           postinc0	equ	0xFEE
 11380                           wreg	equ	0xFE8
 11381                           indf1	equ	0xFE7
 11382                           postinc1	equ	0xFE6
 11383                           postdec1	equ	0xFE5
 11384                           fsr1h	equ	0xFE2
 11385                           fsr1l	equ	0xFE1
 11386                           indf2	equ	0xFDF
 11387                           postinc2	equ	0xFDE
 11388                           postdec2	equ	0xFDD
 11389                           plusw2	equ	0xFDB
 11390                           fsr2h	equ	0xFDA
 11391                           fsr2l	equ	0xFD9
 11392                           status	equ	0xFD8
 11393                           
 11394 ;; *************** function _ST7032_task *****************
 11395 ;; Defined at:
 11396 ;;		line 102 in file "../My_library/My_ST7032.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;		None
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;  data            1   17[BANK0 ] unsigned char 
 11401 ;; Return value:  Size  Location     Type
 11402 ;;		None               void
 11403 ;; Registers used:
 11404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11412 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11413 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11414 ;;Total ram usage:        3 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:   13
 11417 ;; This function calls:
 11418 ;;		_ringbuf_num
 11419 ;;		_ringbuf_pop
 11420 ;; This function is called by:
 11421 ;;		_main
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           	psect	text52
 11426  01175C                     __ptext52:
 11427                           	opt stack 0
 11428  01175C                     _ST7032_task:
 11429                           	opt stack 17
 11430                           
 11431                           ;My_ST7032.c: 103: if ((SSP1CON2 & 0x1F) | (SSP1STAT & 0x05)) {
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;incstack = 0
 11435  01175C  CFC7 F06F          	movff	4039,??_ST7032_task	;volatile
 11436  011760  0E05               	movlw	5
 11437  011762  0100               	movlb	0	; () banked
 11438  011764  176F               	andwf	??_ST7032_task& (0+255),f,b
 11439  011766  50C5               	movf	4037,w,c	;volatile
 11440  011768  0B1F               	andlw	31
 11441  01176A  0100               	movlb	0	; () banked
 11442  01176C  116F               	iorwf	??_ST7032_task& (0+255),w,b
 11443  01176E  0900               	iorlw	0
 11444  011770  A4D8               	btfss	status,2,c
 11445  011772  0012               	return	
 11446  011774  D08D               	goto	l9582
 11447  011776                     l9534:
 11448                           
 11449                           ;My_ST7032.c: 112: if (ringbuf_num(&lcd_tx)) {
 11450  011776  0ED4               	movlw	low _lcd_tx
 11451  011778  0100               	movlb	0	; () banked
 11452  01177A  6F60               	movwf	ringbuf_num@rb& (0+255),b
 11453  01177C  0E00               	movlw	high _lcd_tx
 11454  01177E  0100               	movlb	0	; () banked
 11455  011780  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 11456  011782  EC31  F090         	call	_ringbuf_num	;wreg free
 11457  011786  0100               	movlb	0	; () banked
 11458  011788  5160               	movf	?_ringbuf_num& (0+255),w,b
 11459  01178A  0100               	movlb	0	; () banked
 11460  01178C  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11461  01178E  B4D8               	btfsc	status,2,c
 11462  011790  0012               	return	
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;My_ST7032.c: 113: st7032_state = ST7032_START;
 11466  011792  0E01               	movlw	1
 11467  011794  0101               	movlb	1	; () banked
 11468  011796  6F2D               	movwf	ST7032_task@st7032_state& (0+255),b
 11469                           
 11470                           ; BSR set to: 1
 11471                           ;My_ST7032.c: 114: }
 11472                           ;My_ST7032.c: 115: break;
 11473  011798  0012               	return	
 11474  01179A                     l9538:
 11475                           
 11476                           ; BSR set to: 1
 11477                           ;My_ST7032.c: 117: st7032_flag = 1;
 11478  01179A  0E01               	movlw	1
 11479  01179C  0101               	movlb	1	; () banked
 11480  01179E  6F30               	movwf	_st7032_flag& (0+255),b
 11481                           
 11482                           ; BSR set to: 1
 11483                           ;My_ST7032.c: 118: SSP1CON2bits.SEN = 1;
 11484  0117A0  80C5               	bsf	4037,0,c	;volatile
 11485                           
 11486                           ;My_ST7032.c: 119: st7032_state = ST7032_SEND;
 11487  0117A2  0E02               	movlw	2
 11488  0117A4  0101               	movlb	1	; () banked
 11489  0117A6  6F2D               	movwf	ST7032_task@st7032_state& (0+255),b
 11490                           
 11491                           ;My_ST7032.c: 120: break;
 11492  0117A8  0012               	return	
 11493  0117AA                     l9542:
 11494                           
 11495                           ; BSR set to: 1
 11496                           ;My_ST7032.c: 122: if (!st7032_flag) {
 11497  0117AA  0101               	movlb	1	; () banked
 11498  0117AC  5130               	movf	_st7032_flag& (0+255),w,b
 11499  0117AE  B4D8               	btfsc	status,2,c
 11500  0117B0  0012               	return	
 11501                           
 11502                           ; BSR set to: 1
 11503                           ;My_ST7032.c: 125: }
 11504                           ;My_ST7032.c: 126: char data = ringbuf_pop(&lcd_tx);
 11505                           
 11506                           ; BSR set to: 1
 11507                           
 11508                           ; BSR set to: 1
 11509                           ;My_ST7032.c: 124: return;
 11510  0117B2  0ED4               	movlw	low _lcd_tx
 11511  0117B4  0100               	movlb	0	; () banked
 11512  0117B6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 11513  0117B8  0E00               	movlw	high _lcd_tx
 11514  0117BA  0100               	movlb	0	; () banked
 11515  0117BC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 11516  0117BE  EC29  F096         	call	_ringbuf_pop	;wreg free
 11517  0117C2  0100               	movlb	0	; () banked
 11518  0117C4  6F71               	movwf	ST7032_task@data& (0+255),b
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;My_ST7032.c: 127: if (data != 0) {
 11522  0117C6  0100               	movlb	0	; () banked
 11523  0117C8  5171               	movf	ST7032_task@data& (0+255),w,b
 11524  0117CA  0100               	movlb	0	; () banked
 11525  0117CC  B4D8               	btfsc	status,2,c
 11526  0117CE  D006               	goto	l9554
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;My_ST7032.c: 128: st7032_flag = 0;
 11530  0117D0  0E00               	movlw	0
 11531  0117D2  0101               	movlb	1	; () banked
 11532  0117D4  6F30               	movwf	_st7032_flag& (0+255),b
 11533                           
 11534                           ; BSR set to: 1
 11535                           ;My_ST7032.c: 129: SSP1BUF = data;
 11536  0117D6  C071  FFC9         	movff	ST7032_task@data,4041	;volatile
 11537                           
 11538                           ;My_ST7032.c: 130: } else {
 11539  0117DA  0012               	return	
 11540  0117DC                     l9554:
 11541                           
 11542                           ;My_ST7032.c: 131: wait = ringbuf_pop(&lcd_tx);
 11543  0117DC  0ED4               	movlw	low _lcd_tx
 11544  0117DE  0100               	movlb	0	; () banked
 11545  0117E0  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 11546  0117E2  0E00               	movlw	high _lcd_tx
 11547  0117E4  0100               	movlb	0	; () banked
 11548  0117E6  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 11549  0117E8  EC29  F096         	call	_ringbuf_pop	;wreg free
 11550  0117EC  0100               	movlb	0	; () banked
 11551  0117EE  6F6F               	movwf	??_ST7032_task& (0+255),b
 11552  0117F0  0100               	movlb	0	; () banked
 11553  0117F2  516F               	movf	??_ST7032_task& (0+255),w,b
 11554  0117F4  0101               	movlb	1	; () banked
 11555  0117F6  6F21               	movwf	ST7032_task@wait& (0+255),b
 11556  0117F8  6B22               	clrf	(ST7032_task@wait+1)& (0+255),b
 11557                           
 11558                           ;My_ST7032.c: 132: switch (wait) {
 11559  0117FA  D01A               	goto	l9568
 11560  0117FC                     l9556:
 11561                           
 11562                           ;My_ST7032.c: 134: wait = 0;
 11563  0117FC  0E00               	movlw	0
 11564  0117FE  0101               	movlb	1	; () banked
 11565  011800  6F22               	movwf	(ST7032_task@wait+1)& (0+255),b
 11566  011802  0E00               	movlw	0
 11567  011804  D013               	goto	L7
 11568  011806                     l9558:
 11569                           
 11570                           ;My_ST7032.c: 137: wait = 2;
 11571  011806  0E00               	movlw	0
 11572  011808  0101               	movlb	1	; () banked
 11573  01180A  6F22               	movwf	(ST7032_task@wait+1)& (0+255),b
 11574  01180C  0E02               	movlw	2
 11575  01180E  D00E               	goto	L7
 11576  011810                     l9560:
 11577                           
 11578                           ;My_ST7032.c: 140: wait = 25;
 11579  011810  0E00               	movlw	0
 11580  011812  0101               	movlb	1	; () banked
 11581  011814  6F22               	movwf	(ST7032_task@wait+1)& (0+255),b
 11582  011816  0E19               	movlw	25
 11583  011818  D009               	goto	L7
 11584  01181A                     l9562:
 11585                           
 11586                           ;My_ST7032.c: 143: wait = 800;
 11587  01181A  0E03               	movlw	3
 11588  01181C  0101               	movlb	1	; () banked
 11589  01181E  6F22               	movwf	(ST7032_task@wait+1)& (0+255),b
 11590  011820  0E20               	movlw	32
 11591  011822  D004               	goto	L7
 11592  011824                     l9564:
 11593                           
 11594                           ;My_ST7032.c: 146: wait = 1;
 11595  011824  0E00               	movlw	0
 11596  011826  0101               	movlb	1	; () banked
 11597  011828  6F22               	movwf	(ST7032_task@wait+1)& (0+255),b
 11598  01182A  0E01               	movlw	1
 11599  01182C                     L7:
 11600  01182C  6F21               	movwf	ST7032_task@wait& (0+255),b
 11601                           
 11602                           ; BSR set to: 1
 11603                           ;My_ST7032.c: 148: }
 11604                           
 11605                           ;My_ST7032.c: 147: break;
 11606  01182E  D018               	goto	l9570
 11607  011830                     l9568:
 11608                           
 11609                           ; BSR set to: 1
 11610  011830  C121  F06F         	movff	ST7032_task@wait,??_ST7032_task
 11611  011834  C122  F070         	movff	ST7032_task@wait+1,??_ST7032_task+1
 11612                           
 11613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11614                           ; Switch size 1, requested type "space"
 11615                           ; Number of cases is 1, Range of values is 0 to 0
 11616                           ; switch strategies available:
 11617                           ; Name         Instructions Cycles
 11618                           ; simple_byte            4     3 (average)
 11619                           ;	Chosen strategy is simple_byte
 11620  011838  0100               	movlb	0	; () banked
 11621  01183A  5170               	movf	(??_ST7032_task+1)& (0+255),w,b
 11622  01183C  0A00               	xorlw	0	; case 0
 11623  01183E  A4D8               	btfss	status,2,c
 11624  011840  D7F1               	goto	l9564
 11625                           
 11626                           ; BSR set to: 0
 11627                           ; Switch size 1, requested type "space"
 11628                           ; Number of cases is 4, Range of values is 0 to 3
 11629                           ; switch strategies available:
 11630                           ; Name         Instructions Cycles
 11631                           ; simple_byte           13     7 (average)
 11632                           ;	Chosen strategy is simple_byte
 11633  011842  0100               	movlb	0	; () banked
 11634  011844  516F               	movf	??_ST7032_task& (0+255),w,b
 11635  011846  0A00               	xorlw	0	; case 0
 11636  011848  B4D8               	btfsc	status,2,c
 11637  01184A  D7D8               	goto	l9556
 11638  01184C  0A01               	xorlw	1	; case 1
 11639  01184E  B4D8               	btfsc	status,2,c
 11640  011850  D7DA               	goto	l9558
 11641  011852  0A03               	xorlw	3	; case 2
 11642  011854  B4D8               	btfsc	status,2,c
 11643  011856  D7DC               	goto	l9560
 11644  011858  0A01               	xorlw	1	; case 3
 11645  01185A  B4D8               	btfsc	status,2,c
 11646  01185C  D7DE               	goto	l9562
 11647  01185E  D7E2               	goto	l9564
 11648  011860                     l9570:
 11649                           
 11650                           ;My_ST7032.c: 149: st7032_state = ST7032_STOP;
 11651  011860  0E03               	movlw	3
 11652  011862  0101               	movlb	1	; () banked
 11653  011864  6F2D               	movwf	ST7032_task@st7032_state& (0+255),b
 11654                           
 11655                           ; BSR set to: 1
 11656                           ;My_ST7032.c: 150: }
 11657                           ;My_ST7032.c: 151: break;
 11658  011866  0012               	return	
 11659  011868                     l1458:
 11660                           
 11661                           ; BSR set to: 1
 11662                           ;My_ST7032.c: 153: SSP1CON2bits.PEN = 1;
 11663  011868  84C5               	bsf	4037,2,c	;volatile
 11664                           
 11665                           ; BSR set to: 1
 11666                           ;My_ST7032.c: 154: st7032_state = ST7032_WAIT;
 11667  01186A  0E04               	movlw	4
 11668  01186C  0101               	movlb	1	; () banked
 11669  01186E  6F2D               	movwf	ST7032_task@st7032_state& (0+255),b
 11670                           
 11671                           ;My_ST7032.c: 155: break;
 11672  011870  0012               	return	
 11673  011872                     l9574:
 11674                           
 11675                           ; BSR set to: 1
 11676                           ;My_ST7032.c: 157: if (wait == 0) st7032_state = ST7032_IDOLE;
 11677  011872  0101               	movlb	1	; () banked
 11678  011874  5121               	movf	ST7032_task@wait& (0+255),w,b
 11679  011876  0101               	movlb	1	; () banked
 11680  011878  1122               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
 11681  01187A  A4D8               	btfss	status,2,c
 11682  01187C  D004               	goto	l9578
 11683                           
 11684                           ; BSR set to: 1
 11685  01187E  0E00               	movlw	0
 11686  011880  0101               	movlb	1	; () banked
 11687  011882  6F2D               	movwf	ST7032_task@st7032_state& (0+255),b
 11688  011884  0012               	return	
 11689  011886                     l9578:
 11690                           
 11691                           ; BSR set to: 1
 11692                           ;My_ST7032.c: 158: else wait--;
 11693  011886  0101               	movlb	1	; () banked
 11694  011888  0721               	decf	ST7032_task@wait& (0+255),f,b
 11695  01188A  A0D8               	btfss	status,0,c
 11696  01188C  0722               	decf	(ST7032_task@wait+1)& (0+255),f,b
 11697                           
 11698                           ; BSR set to: 1
 11699                           ;My_ST7032.c: 160: }
 11700                           
 11701                           ; BSR set to: 1
 11702                           ;My_ST7032.c: 159: break;
 11703  01188E  0012               	return	
 11704  011890                     l9582:
 11705  011890  0101               	movlb	1	; () banked
 11706  011892  512D               	movf	ST7032_task@st7032_state& (0+255),w,b
 11707                           
 11708                           ; Switch size 1, requested type "space"
 11709                           ; Number of cases is 5, Range of values is 0 to 4
 11710                           ; switch strategies available:
 11711                           ; Name         Instructions Cycles
 11712                           ; simple_byte           16     9 (average)
 11713                           ;	Chosen strategy is simple_byte
 11714  011894  0A00               	xorlw	0	; case 0
 11715  011896  B4D8               	btfsc	status,2,c
 11716  011898  D76E               	goto	l9534
 11717  01189A  0A01               	xorlw	1	; case 1
 11718  01189C  B4D8               	btfsc	status,2,c
 11719  01189E  D77D               	goto	l9538
 11720  0118A0  0A03               	xorlw	3	; case 2
 11721  0118A2  B4D8               	btfsc	status,2,c
 11722  0118A4  D782               	goto	l9542
 11723  0118A6  0A01               	xorlw	1	; case 3
 11724  0118A8  B4D8               	btfsc	status,2,c
 11725  0118AA  D7DE               	goto	l1458
 11726  0118AC  0A07               	xorlw	7	; case 4
 11727  0118AE  A4D8               	btfss	status,2,c
 11728  0118B0  0012               	return	
 11729  0118B2  D7DF               	goto	l9574
 11730  0118B4                     __end_of_ST7032_task:
 11731                           	opt stack 0
 11732                           tblptru	equ	0xFF8
 11733                           tblptrh	equ	0xFF7
 11734                           tblptrl	equ	0xFF6
 11735                           tablat	equ	0xFF5
 11736                           prodh	equ	0xFF4
 11737                           prodl	equ	0xFF3
 11738                           intcon	equ	0xFF2
 11739                           intcon2	equ	0xFF1
 11740                           postinc0	equ	0xFEE
 11741                           wreg	equ	0xFE8
 11742                           indf1	equ	0xFE7
 11743                           postinc1	equ	0xFE6
 11744                           postdec1	equ	0xFE5
 11745                           fsr1h	equ	0xFE2
 11746                           fsr1l	equ	0xFE1
 11747                           indf2	equ	0xFDF
 11748                           postinc2	equ	0xFDE
 11749                           postdec2	equ	0xFDD
 11750                           plusw2	equ	0xFDB
 11751                           fsr2h	equ	0xFDA
 11752                           fsr2l	equ	0xFD9
 11753                           status	equ	0xFD8
 11754                           
 11755 ;; *************** function _ringbuf_pop *****************
 11756 ;; Defined at:
 11757 ;;		line 45 in file "../My_library/My_ringbuf.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 11760 ;;		 -> lcd_tx(8), usb_tx(8), usb_rx(8), uart_tx(8), 
 11761 ;;		 -> terminal_task@command(8), 
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;  ret             1   14[BANK0 ] unsigned char 
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      unsigned char 
 11766 ;; Registers used:
 11767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11773 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11774 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11775 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11776 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11777 ;;Total ram usage:        7 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; Hardware stack levels required when called:   12
 11780 ;; This function calls:
 11781 ;;		_ringbuf_num
 11782 ;; This function is called by:
 11783 ;;		_terminal_task
 11784 ;;		_USB_task
 11785 ;;		_ST7032_task
 11786 ;; This function uses a non-reentrant model
 11787 ;;
 11788                           
 11789                           	psect	text53
 11790  012C52                     __ptext53:
 11791                           	opt stack 0
 11792  012C52                     _ringbuf_pop:
 11793                           	opt stack 17
 11794                           
 11795                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 11796                           
 11797                           ;incstack = 0
 11798  012C52  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 11799  012C56  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 11800  012C5A  EC31  F090         	call	_ringbuf_num	;wreg free
 11801  012C5E  0100               	movlb	0	; () banked
 11802  012C60  5160               	movf	?_ringbuf_num& (0+255),w,b
 11803  012C62  0100               	movlb	0	; () banked
 11804  012C64  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11805  012C66  B4D8               	btfsc	status,2,c
 11806  012C68  D058               	goto	l9108
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 11810  012C6A  0100               	movlb	0	; () banked
 11811  012C6C  EE20 F006          	lfsr	2,6
 11812  012C70  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11813  012C72  26D9               	addwf	fsr2l,f,c
 11814  012C74  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11815  012C76  22DA               	addwfc	fsr2h,f,c
 11816  012C78  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 11817  012C7C  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 11818  012C80  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 11819  012C84  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 11820  012C88  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 11821  012C8C  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 11822  012C90  0100               	movlb	0	; () banked
 11823  012C92  516A               	movf	??_ringbuf_pop& (0+255),w,b
 11824  012C94  0100               	movlb	0	; () banked
 11825  012C96  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 11826  012C98  6ED9               	movwf	fsr2l,c
 11827  012C9A  0100               	movlb	0	; () banked
 11828  012C9C  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 11829  012C9E  0100               	movlb	0	; () banked
 11830  012CA0  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 11831  012CA2  6EDA               	movwf	fsr2h,c
 11832  012CA4  50DF               	movf	indf2,w,c
 11833  012CA6  0100               	movlb	0	; () banked
 11834  012CA8  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 11838  012CAA  0100               	movlb	0	; () banked
 11839  012CAC  EE20 F002          	lfsr	2,2
 11840  012CB0  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11841  012CB2  26D9               	addwf	fsr2l,f,c
 11842  012CB4  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11843  012CB6  22DA               	addwfc	fsr2h,f,c
 11844  012CB8  0100               	movlb	0	; () banked
 11845  012CBA  EE10 F006          	lfsr	1,6
 11846  012CBE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11847  012CC0  26E1               	addwf	fsr1l,f,c
 11848  012CC2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11849  012CC4  22E2               	addwfc	fsr1h,f,c
 11850  012CC6  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 11851  012CCA  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 11852  012CCE  0E01               	movlw	1
 11853  012CD0  0100               	movlb	0	; () banked
 11854  012CD2  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 11855  012CD4  0E00               	movlw	0
 11856  012CD6  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 11857  012CD8  50DE               	movf	postinc2,w,c
 11858  012CDA  0100               	movlb	0	; () banked
 11859  012CDC  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 11860  012CDE  50DE               	movf	postinc2,w,c
 11861  012CE0  0100               	movlb	0	; () banked
 11862  012CE2  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 11863  012CE4  B0D8               	btfsc	status,0,c
 11864  012CE6  D00B               	goto	l9100
 11865                           
 11866                           ; BSR set to: 0
 11867                           ;My_ringbuf.c: 49: rb->tail++;
 11868  012CE8  0100               	movlb	0	; () banked
 11869  012CEA  EE20 F006          	lfsr	2,6
 11870  012CEE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11871  012CF0  26D9               	addwf	fsr2l,f,c
 11872  012CF2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11873  012CF4  22DA               	addwfc	fsr2h,f,c
 11874  012CF6  2ADE               	incf	postinc2,f,c
 11875  012CF8  0E00               	movlw	0
 11876  012CFA  22DD               	addwfc	postdec2,f,c
 11877                           
 11878                           ;My_ringbuf.c: 50: } else {
 11879  012CFC  D00B               	goto	l9102
 11880  012CFE                     l9100:
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;My_ringbuf.c: 51: rb->tail = 0;
 11884  012CFE  0100               	movlb	0	; () banked
 11885  012D00  EE20 F006          	lfsr	2,6
 11886  012D04  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11887  012D06  26D9               	addwf	fsr2l,f,c
 11888  012D08  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11889  012D0A  22DA               	addwfc	fsr2h,f,c
 11890  012D0C  0E00               	movlw	0
 11891  012D0E  6EDE               	movwf	postinc2,c
 11892  012D10  0E00               	movlw	0
 11893  012D12  6EDD               	movwf	postdec2,c
 11894  012D14                     l9102:
 11895                           
 11896                           ; BSR set to: 0
 11897                           ;My_ringbuf.c: 52: }
 11898                           ;My_ringbuf.c: 53: return ret;
 11899  012D14  0100               	movlb	0	; () banked
 11900  012D16  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;My_ringbuf.c: 54: } else {
 11904                           
 11905                           ; BSR set to: 0
 11906  012D18  0012               	return	
 11907  012D1A                     l9108:
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;My_ringbuf.c: 55: return 0;
 11911  012D1A  0E00               	movlw	0
 11912                           
 11913                           ; BSR set to: 0
 11914  012D1C  0012               	return	
 11915  012D1E                     __end_of_ringbuf_pop:
 11916                           	opt stack 0
 11917                           tblptru	equ	0xFF8
 11918                           tblptrh	equ	0xFF7
 11919                           tblptrl	equ	0xFF6
 11920                           tablat	equ	0xFF5
 11921                           prodh	equ	0xFF4
 11922                           prodl	equ	0xFF3
 11923                           intcon	equ	0xFF2
 11924                           intcon2	equ	0xFF1
 11925                           postinc0	equ	0xFEE
 11926                           wreg	equ	0xFE8
 11927                           indf1	equ	0xFE7
 11928                           postinc1	equ	0xFE6
 11929                           postdec1	equ	0xFE5
 11930                           fsr1h	equ	0xFE2
 11931                           fsr1l	equ	0xFE1
 11932                           indf2	equ	0xFDF
 11933                           postinc2	equ	0xFDE
 11934                           postdec2	equ	0xFDD
 11935                           plusw2	equ	0xFDB
 11936                           fsr2h	equ	0xFDA
 11937                           fsr2l	equ	0xFD9
 11938                           status	equ	0xFD8
 11939                           
 11940 ;; *************** function _ST7032_puts *****************
 11941 ;; Defined at:
 11942 ;;		line 43 in file "../My_library/My_ST7032.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;  s               2   16[BANK0 ] PTR const unsigned char 
 11945 ;;		 -> main@s(40), STR_47(9), STR_46(9), 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;		None
 11948 ;; Return value:  Size  Location     Type
 11949 ;;		None               void
 11950 ;; Registers used:
 11951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11952 ;; Tracked objects:
 11953 ;;		On entry : 0/0
 11954 ;;		On exit  : 0/0
 11955 ;;		Unchanged: 0/0
 11956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11957 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11960 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11961 ;;Total ram usage:        2 bytes
 11962 ;; Hardware stack levels used:    1
 11963 ;; Hardware stack levels required when called:   14
 11964 ;; This function calls:
 11965 ;;		_ST7032_put
 11966 ;; This function is called by:
 11967 ;;		_main
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           	psect	text54
 11972  013F54                     __ptext54:
 11973                           	opt stack 0
 11974  013F54                     _ST7032_puts:
 11975                           	opt stack 16
 11976                           
 11977                           ;My_ST7032.c: 44: while (*s) {
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;incstack = 0
 11981  013F54  D016               	goto	l9528
 11982  013F56                     l9524:
 11983                           
 11984                           ;My_ST7032.c: 45: ST7032_put(*s++);
 11985  013F56  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 11986  013F5A  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 11987  013F5E  0E00               	movlw	low (__mediumconst shr (0+16))
 11988  013F60  6EF8               	movwf	tblptru,c
 11989  013F62  0E0E               	movlw	(high __ramtop+-1)
 11990  013F64  64F7               	cpfsgt	tblptrh,c
 11991  013F66  D003               	bra	u9467
 11992  013F68  0008               	tblrd		*
 11993  013F6A  50F5               	movf	tablat,w,c
 11994  013F6C  D005               	bra	u9460
 11995  013F6E                     u9467:
 11996  013F6E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11997  013F72  CFF7 FFE2          	movff	tblptrh,fsr1h
 11998  013F76  50E7               	movf	indf1,w,c
 11999  013F78                     u9460:
 12000  013F78  EC78  F09D         	call	_ST7032_put
 12001  013F7C  0100               	movlb	0	; () banked
 12002  013F7E  4B70               	infsnz	ST7032_puts@s& (0+255),f,b
 12003  013F80  2B71               	incf	(ST7032_puts@s+1)& (0+255),f,b
 12004  013F82                     l9528:
 12005  013F82  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 12006  013F86  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 12007  013F8A  0E00               	movlw	low (__mediumconst shr (0+16))
 12008  013F8C  6EF8               	movwf	tblptru,c
 12009  013F8E  0E0E               	movlw	(high __ramtop+-1)
 12010  013F90  64F7               	cpfsgt	tblptrh,c
 12011  013F92  D003               	bra	u9477
 12012  013F94  0008               	tblrd		*
 12013  013F96  50F5               	movf	tablat,w,c
 12014  013F98  D005               	bra	u9470
 12015  013F9A                     u9477:
 12016  013F9A  CFF6 FFE1          	movff	tblptrl,fsr1l
 12017  013F9E  CFF7 FFE2          	movff	tblptrh,fsr1h
 12018  013FA2  50E7               	movf	indf1,w,c
 12019  013FA4                     u9470:
 12020  013FA4  0900               	iorlw	0
 12021  013FA6  B4D8               	btfsc	status,2,c
 12022  013FA8  0012               	return	
 12023  013FAA  D7D5               	goto	l9524
 12024  013FAC                     __end_of_ST7032_puts:
 12025                           	opt stack 0
 12026                           tblptru	equ	0xFF8
 12027                           tblptrh	equ	0xFF7
 12028                           tblptrl	equ	0xFF6
 12029                           tablat	equ	0xFF5
 12030                           prodh	equ	0xFF4
 12031                           prodl	equ	0xFF3
 12032                           intcon	equ	0xFF2
 12033                           intcon2	equ	0xFF1
 12034                           postinc0	equ	0xFEE
 12035                           wreg	equ	0xFE8
 12036                           indf1	equ	0xFE7
 12037                           postinc1	equ	0xFE6
 12038                           postdec1	equ	0xFE5
 12039                           fsr1h	equ	0xFE2
 12040                           fsr1l	equ	0xFE1
 12041                           indf2	equ	0xFDF
 12042                           postinc2	equ	0xFDE
 12043                           postdec2	equ	0xFDD
 12044                           plusw2	equ	0xFDB
 12045                           fsr2h	equ	0xFDA
 12046                           fsr2l	equ	0xFD9
 12047                           status	equ	0xFD8
 12048                           
 12049 ;; *************** function _ST7032_put *****************
 12050 ;; Defined at:
 12051 ;;		line 35 in file "../My_library/My_ST7032.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  c               1    wreg     unsigned char 
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;  c               1   15[BANK0 ] unsigned char 
 12056 ;; Return value:  Size  Location     Type
 12057 ;;		None               void
 12058 ;; Registers used:
 12059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12060 ;; Tracked objects:
 12061 ;;		On entry : 0/0
 12062 ;;		On exit  : 0/0
 12063 ;;		Unchanged: 0/0
 12064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12068 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12069 ;;Total ram usage:        1 bytes
 12070 ;; Hardware stack levels used:    1
 12071 ;; Hardware stack levels required when called:   13
 12072 ;; This function calls:
 12073 ;;		_ringbuf_put
 12074 ;; This function is called by:
 12075 ;;		_ST7032_puts
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079                           	psect	text55
 12080  013AF0                     __ptext55:
 12081                           	opt stack 0
 12082  013AF0                     _ST7032_put:
 12083                           	opt stack 16
 12084                           
 12085                           ;incstack = 0
 12086                           ;ST7032_put@c stored from wreg
 12087  013AF0  0100               	movlb	0	; () banked
 12088  013AF2  6F6F               	movwf	ST7032_put@c& (0+255),b
 12089                           
 12090                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 12091  013AF4  0ED4               	movlw	low _lcd_tx
 12092  013AF6  0100               	movlb	0	; () banked
 12093  013AF8  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12094  013AFA  0E00               	movlw	high _lcd_tx
 12095  013AFC  0100               	movlb	0	; () banked
 12096  013AFE  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12097  013B00  0E7C               	movlw	124
 12098  013B02  0100               	movlb	0	; () banked
 12099  013B04  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12100  013B06  EC86  F094         	call	_ringbuf_put	;wreg free
 12101                           
 12102                           ;My_ST7032.c: 37: ringbuf_put(&lcd_tx, 0b11000000);
 12103  013B0A  0ED4               	movlw	low _lcd_tx
 12104  013B0C  0100               	movlb	0	; () banked
 12105  013B0E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12106  013B10  0E00               	movlw	high _lcd_tx
 12107  013B12  0100               	movlb	0	; () banked
 12108  013B14  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12109  013B16  0EC0               	movlw	192
 12110  013B18  0100               	movlb	0	; () banked
 12111  013B1A  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12112  013B1C  EC86  F094         	call	_ringbuf_put	;wreg free
 12113                           
 12114                           ;My_ST7032.c: 38: ringbuf_put(&lcd_tx, c);
 12115  013B20  0ED4               	movlw	low _lcd_tx
 12116  013B22  0100               	movlb	0	; () banked
 12117  013B24  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12118  013B26  0E00               	movlw	high _lcd_tx
 12119  013B28  0100               	movlb	0	; () banked
 12120  013B2A  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12121  013B2C  C06F  F06A         	movff	ST7032_put@c,ringbuf_put@asciicode
 12122  013B30  EC86  F094         	call	_ringbuf_put	;wreg free
 12123                           
 12124                           ;My_ST7032.c: 39: ringbuf_put(&lcd_tx, 0);
 12125  013B34  0ED4               	movlw	low _lcd_tx
 12126  013B36  0100               	movlb	0	; () banked
 12127  013B38  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12128  013B3A  0E00               	movlw	high _lcd_tx
 12129  013B3C  0100               	movlb	0	; () banked
 12130  013B3E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12131  013B40  0E00               	movlw	0
 12132  013B42  0100               	movlb	0	; () banked
 12133  013B44  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12134  013B46  EC86  F094         	call	_ringbuf_put	;wreg free
 12135                           
 12136                           ;My_ST7032.c: 40: ringbuf_put(&lcd_tx, 1);
 12137  013B4A  0ED4               	movlw	low _lcd_tx
 12138  013B4C  0100               	movlb	0	; () banked
 12139  013B4E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12140  013B50  0E00               	movlw	high _lcd_tx
 12141  013B52  0100               	movlb	0	; () banked
 12142  013B54  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12143  013B56  0E01               	movlw	1
 12144  013B58  0100               	movlb	0	; () banked
 12145  013B5A  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12146  013B5C  EC86  F094         	call	_ringbuf_put	;wreg free
 12147  013B60  0012               	return		;funcret
 12148  013B62                     __end_of_ST7032_put:
 12149                           	opt stack 0
 12150                           tblptru	equ	0xFF8
 12151                           tblptrh	equ	0xFF7
 12152                           tblptrl	equ	0xFF6
 12153                           tablat	equ	0xFF5
 12154                           prodh	equ	0xFF4
 12155                           prodl	equ	0xFF3
 12156                           intcon	equ	0xFF2
 12157                           intcon2	equ	0xFF1
 12158                           postinc0	equ	0xFEE
 12159                           wreg	equ	0xFE8
 12160                           indf1	equ	0xFE7
 12161                           postinc1	equ	0xFE6
 12162                           postdec1	equ	0xFE5
 12163                           fsr1h	equ	0xFE2
 12164                           fsr1l	equ	0xFE1
 12165                           indf2	equ	0xFDF
 12166                           postinc2	equ	0xFDE
 12167                           postdec2	equ	0xFDD
 12168                           plusw2	equ	0xFDB
 12169                           fsr2h	equ	0xFDA
 12170                           fsr2l	equ	0xFD9
 12171                           status	equ	0xFD8
 12172                           
 12173 ;; *************** function _ST7032_cursor *****************
 12174 ;; Defined at:
 12175 ;;		line 30 in file "../My_library/My_ST7032.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;  col             1    wreg     unsigned char 
 12178 ;;  row             1   17[BANK0 ] unsigned char 
 12179 ;; Auto vars:     Size  Location     Type
 12180 ;;  col             1   20[BANK0 ] unsigned char 
 12181 ;;  row_offsets     2   18[BANK0 ] unsigned char [2]
 12182 ;; Return value:  Size  Location     Type
 12183 ;;		None               void
 12184 ;; Registers used:
 12185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12191 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12192 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12194 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12195 ;;Total ram usage:        4 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; Hardware stack levels required when called:   14
 12198 ;; This function calls:
 12199 ;;		_ST7032_command
 12200 ;; This function is called by:
 12201 ;;		_main
 12202 ;; This function uses a non-reentrant model
 12203 ;;
 12204                           
 12205                           	psect	text56
 12206  0142B6                     __ptext56:
 12207                           	opt stack 0
 12208  0142B6                     _ST7032_cursor:
 12209                           	opt stack 16
 12210                           
 12211                           ;incstack = 0
 12212                           ;ST7032_cursor@col stored from wreg
 12213  0142B6  0100               	movlb	0	; () banked
 12214  0142B8  6F74               	movwf	ST7032_cursor@col& (0+255),b
 12215                           
 12216                           ;My_ST7032.c: 31: uint8_t row_offsets[] = {0x00, 0x40};
 12217  0142BA  C1E7  F072         	movff	ST7032_cursor@F8592,ST7032_cursor@row_offsets
 12218  0142BE  C1E8  F073         	movff	ST7032_cursor@F8592+1,ST7032_cursor@row_offsets+1
 12219                           
 12220                           ;My_ST7032.c: 32: ST7032_command(0x80 | (col + row_offsets[row]), 0);
 12221  0142C2  0E00               	movlw	0
 12222  0142C4  0100               	movlb	0	; () banked
 12223  0142C6  6F6F               	movwf	ST7032_command@wait& (0+255),b
 12224  0142C8  0100               	movlb	0	; () banked
 12225  0142CA  5171               	movf	ST7032_cursor@row& (0+255),w,b
 12226  0142CC  0D01               	mullw	1
 12227  0142CE  0E72               	movlw	low ST7032_cursor@row_offsets
 12228  0142D0  24F3               	addwf	prodl,w,c
 12229  0142D2  6ED9               	movwf	fsr2l,c
 12230  0142D4  0E00               	movlw	high ST7032_cursor@row_offsets
 12231  0142D6  20F4               	addwfc	prodh,w,c
 12232  0142D8  6EDA               	movwf	fsr2h,c
 12233  0142DA  50DF               	movf	indf2,w,c
 12234  0142DC  0100               	movlb	0	; () banked
 12235  0142DE  2574               	addwf	ST7032_cursor@col& (0+255),w,b
 12236  0142E0  0980               	iorlw	128
 12237  0142E2  ECB1  F09D         	call	_ST7032_command
 12238  0142E6  0012               	return		;funcret
 12239  0142E8                     __end_of_ST7032_cursor:
 12240                           	opt stack 0
 12241                           tblptru	equ	0xFF8
 12242                           tblptrh	equ	0xFF7
 12243                           tblptrl	equ	0xFF6
 12244                           tablat	equ	0xFF5
 12245                           prodh	equ	0xFF4
 12246                           prodl	equ	0xFF3
 12247                           intcon	equ	0xFF2
 12248                           intcon2	equ	0xFF1
 12249                           postinc0	equ	0xFEE
 12250                           wreg	equ	0xFE8
 12251                           indf1	equ	0xFE7
 12252                           postinc1	equ	0xFE6
 12253                           postdec1	equ	0xFE5
 12254                           fsr1h	equ	0xFE2
 12255                           fsr1l	equ	0xFE1
 12256                           indf2	equ	0xFDF
 12257                           postinc2	equ	0xFDE
 12258                           postdec2	equ	0xFDD
 12259                           plusw2	equ	0xFDB
 12260                           fsr2h	equ	0xFDA
 12261                           fsr2l	equ	0xFD9
 12262                           status	equ	0xFD8
 12263                           
 12264 ;; *************** function _ST7032_command *****************
 12265 ;; Defined at:
 12266 ;;		line 18 in file "../My_library/My_ST7032.c"
 12267 ;; Parameters:    Size  Location     Type
 12268 ;;  command         1    wreg     unsigned char 
 12269 ;;  wait            1   15[BANK0 ] unsigned char 
 12270 ;; Auto vars:     Size  Location     Type
 12271 ;;  command         1   16[BANK0 ] unsigned char 
 12272 ;; Return value:  Size  Location     Type
 12273 ;;		None               void
 12274 ;; Registers used:
 12275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12276 ;; Tracked objects:
 12277 ;;		On entry : 0/0
 12278 ;;		On exit  : 0/0
 12279 ;;		Unchanged: 0/0
 12280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12281 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12284 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12285 ;;Total ram usage:        2 bytes
 12286 ;; Hardware stack levels used:    1
 12287 ;; Hardware stack levels required when called:   13
 12288 ;; This function calls:
 12289 ;;		_ringbuf_put
 12290 ;; This function is called by:
 12291 ;;		_ST7032_clear
 12292 ;;		_ST7032_cursor
 12293 ;;		_ST7032_init
 12294 ;; This function uses a non-reentrant model
 12295 ;;
 12296                           
 12297                           	psect	text57
 12298  013B62                     __ptext57:
 12299                           	opt stack 0
 12300  013B62                     _ST7032_command:
 12301                           	opt stack 15
 12302                           
 12303                           ;incstack = 0
 12304                           ;ST7032_command@command stored from wreg
 12305  013B62  0100               	movlb	0	; () banked
 12306  013B64  6F70               	movwf	ST7032_command@command& (0+255),b
 12307                           
 12308                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 12309  013B66  0ED4               	movlw	low _lcd_tx
 12310  013B68  0100               	movlb	0	; () banked
 12311  013B6A  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12312  013B6C  0E00               	movlw	high _lcd_tx
 12313  013B6E  0100               	movlb	0	; () banked
 12314  013B70  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12315  013B72  0E7C               	movlw	124
 12316  013B74  0100               	movlb	0	; () banked
 12317  013B76  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12318  013B78  EC86  F094         	call	_ringbuf_put	;wreg free
 12319                           
 12320                           ;My_ST7032.c: 20: ringbuf_put(&lcd_tx, 0x80);
 12321  013B7C  0ED4               	movlw	low _lcd_tx
 12322  013B7E  0100               	movlb	0	; () banked
 12323  013B80  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12324  013B82  0E00               	movlw	high _lcd_tx
 12325  013B84  0100               	movlb	0	; () banked
 12326  013B86  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12327  013B88  0E80               	movlw	128
 12328  013B8A  0100               	movlb	0	; () banked
 12329  013B8C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12330  013B8E  EC86  F094         	call	_ringbuf_put	;wreg free
 12331                           
 12332                           ;My_ST7032.c: 21: ringbuf_put(&lcd_tx, command);
 12333  013B92  0ED4               	movlw	low _lcd_tx
 12334  013B94  0100               	movlb	0	; () banked
 12335  013B96  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12336  013B98  0E00               	movlw	high _lcd_tx
 12337  013B9A  0100               	movlb	0	; () banked
 12338  013B9C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12339  013B9E  C070  F06A         	movff	ST7032_command@command,ringbuf_put@asciicode
 12340  013BA2  EC86  F094         	call	_ringbuf_put	;wreg free
 12341                           
 12342                           ;My_ST7032.c: 22: ringbuf_put(&lcd_tx, 0);
 12343  013BA6  0ED4               	movlw	low _lcd_tx
 12344  013BA8  0100               	movlb	0	; () banked
 12345  013BAA  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12346  013BAC  0E00               	movlw	high _lcd_tx
 12347  013BAE  0100               	movlb	0	; () banked
 12348  013BB0  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12349  013BB2  0E00               	movlw	0
 12350  013BB4  0100               	movlb	0	; () banked
 12351  013BB6  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12352  013BB8  EC86  F094         	call	_ringbuf_put	;wreg free
 12353                           
 12354                           ;My_ST7032.c: 23: ringbuf_put(&lcd_tx, wait);
 12355  013BBC  0ED4               	movlw	low _lcd_tx
 12356  013BBE  0100               	movlb	0	; () banked
 12357  013BC0  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12358  013BC2  0E00               	movlw	high _lcd_tx
 12359  013BC4  0100               	movlb	0	; () banked
 12360  013BC6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12361  013BC8  C06F  F06A         	movff	ST7032_command@wait,ringbuf_put@asciicode
 12362  013BCC  EC86  F094         	call	_ringbuf_put	;wreg free
 12363  013BD0  0012               	return		;funcret
 12364  013BD2                     __end_of_ST7032_command:
 12365                           	opt stack 0
 12366                           tblptru	equ	0xFF8
 12367                           tblptrh	equ	0xFF7
 12368                           tblptrl	equ	0xFF6
 12369                           tablat	equ	0xFF5
 12370                           prodh	equ	0xFF4
 12371                           prodl	equ	0xFF3
 12372                           intcon	equ	0xFF2
 12373                           intcon2	equ	0xFF1
 12374                           postinc0	equ	0xFEE
 12375                           wreg	equ	0xFE8
 12376                           indf1	equ	0xFE7
 12377                           postinc1	equ	0xFE6
 12378                           postdec1	equ	0xFE5
 12379                           fsr1h	equ	0xFE2
 12380                           fsr1l	equ	0xFE1
 12381                           indf2	equ	0xFDF
 12382                           postinc2	equ	0xFDE
 12383                           postdec2	equ	0xFDD
 12384                           plusw2	equ	0xFDB
 12385                           fsr2h	equ	0xFDA
 12386                           fsr2l	equ	0xFD9
 12387                           status	equ	0xFD8
 12388                           
 12389 ;; *************** function _ringbuf_put *****************
 12390 ;; Defined at:
 12391 ;;		line 20 in file "../My_library/My_ringbuf.c"
 12392 ;; Parameters:    Size  Location     Type
 12393 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 12394 ;;		 -> lcd_tx(8), usb_tx(8), usb_rx(8), uart_rx(8), 
 12395 ;;		 -> terminal_task@command(8), 
 12396 ;;  asciicode       1   10[BANK0 ] unsigned char 
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;		None
 12399 ;; Return value:  Size  Location     Type
 12400 ;;		None               void
 12401 ;; Registers used:
 12402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12403 ;; Tracked objects:
 12404 ;;		On entry : 0/0
 12405 ;;		On exit  : 0/0
 12406 ;;		Unchanged: 0/0
 12407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12408 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12410 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12411 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12412 ;;Total ram usage:        7 bytes
 12413 ;; Hardware stack levels used:    1
 12414 ;; Hardware stack levels required when called:   12
 12415 ;; This function calls:
 12416 ;;		_ringbuf_num
 12417 ;; This function is called by:
 12418 ;;		_ringbuf_put_num
 12419 ;;		_ringbuf_put_str
 12420 ;;		_terminal_task
 12421 ;;		_USB_task
 12422 ;;		_ST7032_command
 12423 ;;		_ST7032_put
 12424 ;;		_ST7032_init
 12425 ;;		_ST7032_create_char
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           	psect	text58
 12430  01290C                     __ptext58:
 12431                           	opt stack 0
 12432  01290C                     _ringbuf_put:
 12433                           	opt stack 13
 12434                           
 12435                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 12436                           
 12437                           ;incstack = 0
 12438  01290C  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 12439  012910  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 12440  012914  EC31  F090         	call	_ringbuf_num	;wreg free
 12441  012918  0100               	movlb	0	; () banked
 12442  01291A  EE20 F002          	lfsr	2,2
 12443  01291E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 12444  012920  26D9               	addwf	fsr2l,f,c
 12445  012922  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 12446  012924  22DA               	addwfc	fsr2h,f,c
 12447  012926  50DE               	movf	postinc2,w,c
 12448  012928  0100               	movlb	0	; () banked
 12449  01292A  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 12450  01292C  50DE               	movf	postinc2,w,c
 12451  01292E  0100               	movlb	0	; () banked
 12452  012930  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 12453  012932  B0D8               	btfsc	status,0,c
 12454  012934  0012               	return	
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 12458  012936  0100               	movlb	0	; () banked
 12459  012938  EE20 F004          	lfsr	2,4
 12460  01293C  5168               	movf	ringbuf_put@rb& (0+255),w,b
 12461  01293E  26D9               	addwf	fsr2l,f,c
 12462  012940  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 12463  012942  22DA               	addwfc	fsr2h,f,c
 12464  012944  CFDE F06B          	movff	postinc2,??_ringbuf_put
 12465  012948  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 12466  01294C  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 12467  012950  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 12468  012954  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 12469  012958  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 12470  01295C  0100               	movlb	0	; () banked
 12471  01295E  516B               	movf	??_ringbuf_put& (0+255),w,b
 12472  012960  0100               	movlb	0	; () banked
 12473  012962  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 12474  012964  6ED9               	movwf	fsr2l,c
 12475  012966  0100               	movlb	0	; () banked
 12476  012968  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 12477  01296A  0100               	movlb	0	; () banked
 12478  01296C  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 12479  01296E  6EDA               	movwf	fsr2h,c
 12480  012970  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 12484  012974  0100               	movlb	0	; () banked
 12485  012976  EE20 F002          	lfsr	2,2
 12486  01297A  5168               	movf	ringbuf_put@rb& (0+255),w,b
 12487  01297C  26D9               	addwf	fsr2l,f,c
 12488  01297E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 12489  012980  22DA               	addwfc	fsr2h,f,c
 12490  012982  0100               	movlb	0	; () banked
 12491  012984  EE10 F004          	lfsr	1,4
 12492  012988  5168               	movf	ringbuf_put@rb& (0+255),w,b
 12493  01298A  26E1               	addwf	fsr1l,f,c
 12494  01298C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 12495  01298E  22E2               	addwfc	fsr1h,f,c
 12496  012990  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 12497  012994  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 12498  012998  0E01               	movlw	1
 12499  01299A  0100               	movlb	0	; () banked
 12500  01299C  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 12501  01299E  0E00               	movlw	0
 12502  0129A0  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 12503  0129A2  50DE               	movf	postinc2,w,c
 12504  0129A4  0100               	movlb	0	; () banked
 12505  0129A6  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 12506  0129A8  50DE               	movf	postinc2,w,c
 12507  0129AA  0100               	movlb	0	; () banked
 12508  0129AC  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 12509  0129AE  B0D8               	btfsc	status,0,c
 12510  0129B0  D00B               	goto	l8292
 12511                           
 12512                           ; BSR set to: 0
 12513  0129B2  0100               	movlb	0	; () banked
 12514  0129B4  EE20 F004          	lfsr	2,4
 12515  0129B8  5168               	movf	ringbuf_put@rb& (0+255),w,b
 12516  0129BA  26D9               	addwf	fsr2l,f,c
 12517  0129BC  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 12518  0129BE  22DA               	addwfc	fsr2h,f,c
 12519  0129C0  2ADE               	incf	postinc2,f,c
 12520  0129C2  0E00               	movlw	0
 12521  0129C4  22DD               	addwfc	postdec2,f,c
 12522  0129C6  0012               	return	
 12523  0129C8                     l8292:
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;My_ringbuf.c: 24: else rb->head = 0;
 12527  0129C8  0100               	movlb	0	; () banked
 12528  0129CA  EE20 F004          	lfsr	2,4
 12529  0129CE  5168               	movf	ringbuf_put@rb& (0+255),w,b
 12530  0129D0  26D9               	addwf	fsr2l,f,c
 12531  0129D2  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 12532  0129D4  22DA               	addwfc	fsr2h,f,c
 12533  0129D6  0E00               	movlw	0
 12534  0129D8  6EDE               	movwf	postinc2,c
 12535  0129DA  0E00               	movlw	0
 12536  0129DC  6EDD               	movwf	postdec2,c
 12537                           
 12538                           ; BSR set to: 0
 12539  0129DE  0012               	return	
 12540  0129E0                     __end_of_ringbuf_put:
 12541                           	opt stack 0
 12542                           tblptru	equ	0xFF8
 12543                           tblptrh	equ	0xFF7
 12544                           tblptrl	equ	0xFF6
 12545                           tablat	equ	0xFF5
 12546                           prodh	equ	0xFF4
 12547                           prodl	equ	0xFF3
 12548                           intcon	equ	0xFF2
 12549                           intcon2	equ	0xFF1
 12550                           postinc0	equ	0xFEE
 12551                           wreg	equ	0xFE8
 12552                           indf1	equ	0xFE7
 12553                           postinc1	equ	0xFE6
 12554                           postdec1	equ	0xFE5
 12555                           fsr1h	equ	0xFE2
 12556                           fsr1l	equ	0xFE1
 12557                           indf2	equ	0xFDF
 12558                           postinc2	equ	0xFDE
 12559                           postdec2	equ	0xFDD
 12560                           plusw2	equ	0xFDB
 12561                           fsr2h	equ	0xFDA
 12562                           fsr2l	equ	0xFD9
 12563                           status	equ	0xFD8
 12564                           
 12565 ;; *************** function _ringbuf_num *****************
 12566 ;; Defined at:
 12567 ;;		line 12 in file "../My_library/My_ringbuf.c"
 12568 ;; Parameters:    Size  Location     Type
 12569 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 12570 ;;		 -> lcd_tx(8), usb_tx(8), usb_rx(8), uart_rx(8), 
 12571 ;;		 -> uart_tx(8), terminal_task@command(8), 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;		None
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  2    0[BANK0 ] unsigned int 
 12576 ;; Registers used:
 12577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12578 ;; Tracked objects:
 12579 ;;		On entry : 0/0
 12580 ;;		On exit  : 0/0
 12581 ;;		Unchanged: 0/0
 12582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12585 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12586 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12587 ;;Total ram usage:        8 bytes
 12588 ;; Hardware stack levels used:    1
 12589 ;; Hardware stack levels required when called:   11
 12590 ;; This function calls:
 12591 ;;		Nothing
 12592 ;; This function is called by:
 12593 ;;		_ringbuf_put
 12594 ;;		_ringbuf_pop
 12595 ;;		_ringbuf_backspace
 12596 ;;		_terminal_task
 12597 ;;		_UART_task
 12598 ;;		_USB_task
 12599 ;;		_ST7032_task
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           	psect	text59
 12604  012062                     __ptext59:
 12605                           	opt stack 0
 12606  012062                     _ringbuf_num:
 12607                           	opt stack 13
 12608                           
 12609                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;incstack = 0
 12613  012062  0100               	movlb	0	; () banked
 12614  012064  EE20 F006          	lfsr	2,6
 12615  012068  5160               	movf	ringbuf_num@rb& (0+255),w,b
 12616  01206A  26D9               	addwf	fsr2l,f,c
 12617  01206C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 12618  01206E  22DA               	addwfc	fsr2h,f,c
 12619  012070  0100               	movlb	0	; () banked
 12620  012072  EE10 F004          	lfsr	1,4
 12621  012076  5160               	movf	ringbuf_num@rb& (0+255),w,b
 12622  012078  26E1               	addwf	fsr1l,f,c
 12623  01207A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 12624  01207C  22E2               	addwfc	fsr1h,f,c
 12625  01207E  50DE               	movf	postinc2,w,c
 12626  012080  5CE6               	subwf	postinc1,w,c
 12627  012082  50DE               	movf	postinc2,w,c
 12628  012084  58E6               	subwfb	postinc1,w,c
 12629  012086  A0D8               	btfss	status,0,c
 12630  012088  D028               	goto	l8188
 12631                           
 12632                           ; BSR set to: 0
 12633                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 12634  01208A  0100               	movlb	0	; () banked
 12635  01208C  EE20 F004          	lfsr	2,4
 12636  012090  5160               	movf	ringbuf_num@rb& (0+255),w,b
 12637  012092  26D9               	addwf	fsr2l,f,c
 12638  012094  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 12639  012096  22DA               	addwfc	fsr2h,f,c
 12640  012098  CFDE F062          	movff	postinc2,??_ringbuf_num
 12641  01209C  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 12642  0120A0  0100               	movlb	0	; () banked
 12643  0120A2  EE20 F006          	lfsr	2,6
 12644  0120A6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 12645  0120A8  26D9               	addwf	fsr2l,f,c
 12646  0120AA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 12647  0120AC  22DA               	addwfc	fsr2h,f,c
 12648  0120AE  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 12649  0120B2  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 12650  0120B6  0100               	movlb	0	; () banked
 12651  0120B8  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 12652  0120BA  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 12653  0120BC  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 12654  0120BE  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 12655  0120C0  0100               	movlb	0	; () banked
 12656  0120C2  5162               	movf	??_ringbuf_num& (0+255),w,b
 12657  0120C4  0100               	movlb	0	; () banked
 12658  0120C6  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 12659  0120C8  0100               	movlb	0	; () banked
 12660  0120CA  6F60               	movwf	?_ringbuf_num& (0+255),b
 12661  0120CC  0100               	movlb	0	; () banked
 12662  0120CE  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 12663  0120D0  0100               	movlb	0	; () banked
 12664  0120D2  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 12665  0120D4  0100               	movlb	0	; () banked
 12666  0120D6  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;My_ringbuf.c: 15: } else {
 12670                           
 12671                           ; BSR set to: 0
 12672  0120D8  0012               	return	
 12673  0120DA                     l8188:
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 12677  0120DA  0100               	movlb	0	; () banked
 12678  0120DC  EE20 F004          	lfsr	2,4
 12679  0120E0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 12680  0120E2  26D9               	addwf	fsr2l,f,c
 12681  0120E4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 12682  0120E6  22DA               	addwfc	fsr2h,f,c
 12683  0120E8  CFDE F062          	movff	postinc2,??_ringbuf_num
 12684  0120EC  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 12685  0120F0  0100               	movlb	0	; () banked
 12686  0120F2  EE20 F002          	lfsr	2,2
 12687  0120F6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 12688  0120F8  26D9               	addwf	fsr2l,f,c
 12689  0120FA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 12690  0120FC  22DA               	addwfc	fsr2h,f,c
 12691  0120FE  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 12692  012102  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 12693  012106  0100               	movlb	0	; () banked
 12694  012108  EE20 F006          	lfsr	2,6
 12695  01210C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 12696  01210E  26D9               	addwf	fsr2l,f,c
 12697  012110  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 12698  012112  22DA               	addwfc	fsr2h,f,c
 12699  012114  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 12700  012118  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 12701  01211C  0100               	movlb	0	; () banked
 12702  01211E  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 12703  012120  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 12704  012122  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 12705  012124  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 12706  012126  0100               	movlb	0	; () banked
 12707  012128  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 12708  01212A  0100               	movlb	0	; () banked
 12709  01212C  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 12710  01212E  0100               	movlb	0	; () banked
 12711  012130  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 12712  012132  0100               	movlb	0	; () banked
 12713  012134  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 12714  012136  0100               	movlb	0	; () banked
 12715  012138  5162               	movf	??_ringbuf_num& (0+255),w,b
 12716  01213A  0100               	movlb	0	; () banked
 12717  01213C  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 12718  01213E  0100               	movlb	0	; () banked
 12719  012140  6F60               	movwf	?_ringbuf_num& (0+255),b
 12720  012142  0100               	movlb	0	; () banked
 12721  012144  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 12722  012146  0100               	movlb	0	; () banked
 12723  012148  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 12724  01214A  0100               	movlb	0	; () banked
 12725  01214C  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 12726                           
 12727                           ; BSR set to: 0
 12728  01214E  0012               	return	
 12729  012150                     __end_of_ringbuf_num:
 12730                           	opt stack 0
 12731                           tblptru	equ	0xFF8
 12732                           tblptrh	equ	0xFF7
 12733                           tblptrl	equ	0xFF6
 12734                           tablat	equ	0xFF5
 12735                           prodh	equ	0xFF4
 12736                           prodl	equ	0xFF3
 12737                           intcon	equ	0xFF2
 12738                           intcon2	equ	0xFF1
 12739                           postinc0	equ	0xFEE
 12740                           wreg	equ	0xFE8
 12741                           indf1	equ	0xFE7
 12742                           postinc1	equ	0xFE6
 12743                           postdec1	equ	0xFE5
 12744                           fsr1h	equ	0xFE2
 12745                           fsr1l	equ	0xFE1
 12746                           indf2	equ	0xFDF
 12747                           postinc2	equ	0xFDE
 12748                           postdec2	equ	0xFDD
 12749                           plusw2	equ	0xFDB
 12750                           fsr2h	equ	0xFDA
 12751                           fsr2l	equ	0xFD9
 12752                           status	equ	0xFD8
 12753                           
 12754 ;; *************** function _RTCC_task *****************
 12755 ;; Defined at:
 12756 ;;		line 353 in file "../My_library/My_RTCC.c"
 12757 ;; Parameters:    Size  Location     Type
 12758 ;;		None
 12759 ;; Auto vars:     Size  Location     Type
 12760 ;;		None
 12761 ;; Return value:  Size  Location     Type
 12762 ;;		None               void
 12763 ;; Registers used:
 12764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12765 ;; Tracked objects:
 12766 ;;		On entry : 0/0
 12767 ;;		On exit  : 0/0
 12768 ;;		Unchanged: 0/0
 12769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12774 ;;Total ram usage:        0 bytes
 12775 ;; Hardware stack levels used:    1
 12776 ;; Hardware stack levels required when called:   15
 12777 ;; This function calls:
 12778 ;;		_RTCC_from_RTCC
 12779 ;; This function is called by:
 12780 ;;		_main
 12781 ;; This function uses a non-reentrant model
 12782 ;;
 12783                           
 12784                           	psect	text60
 12785  0141A2                     __ptext60:
 12786                           	opt stack 0
 12787  0141A2                     _RTCC_task:
 12788                           	opt stack 15
 12789                           
 12790                           ;My_RTCC.c: 354: static uint8_t prev_halfsec;
 12791                           ;My_RTCC.c: 355: if (RTCCFGbits.RTCSYNC)return;
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;incstack = 0
 12795  0141A2  010F               	movlb	15	; () banked
 12796  0141A4  B93F               	btfsc	63,4,b	;volatile
 12797  0141A6  0012               	return	
 12798                           
 12799                           ; BSR set to: 15
 12800                           ;My_RTCC.c: 356: now.halfsec = RTCCFGbits.HALFSEC;
 12801                           
 12802                           ; BSR set to: 15
 12803                           
 12804                           ; BSR set to: 15
 12805  0141A8  0E00               	movlw	0
 12806  0141AA  B73F               	btfsc	63,3,b	;volatile
 12807  0141AC  0E01               	movlw	1
 12808  0141AE  0101               	movlb	1	; () banked
 12809  0141B0  6F41               	movwf	(_now+12)& (0+255),b
 12810                           
 12811                           ; BSR set to: 1
 12812                           ;My_RTCC.c: 357: if (prev_halfsec != now.halfsec) {
 12813  0141B2  501D               	movf	RTCC_task@prev_halfsec,w,c
 12814  0141B4  0101               	movlb	1	; () banked
 12815  0141B6  1941               	xorwf	(_now+12)& (0+255),w,b
 12816  0141B8  B4D8               	btfsc	status,2,c
 12817  0141BA  0012               	return	
 12818                           
 12819                           ; BSR set to: 1
 12820                           ;My_RTCC.c: 358: prev_halfsec = now.halfsec;
 12821  0141BC  C141  F01D         	movff	_now+12,RTCC_task@prev_halfsec
 12822                           
 12823                           ;My_RTCC.c: 359: now.colon = now.halfsec;
 12824  0141C0  C141  F140         	movff	_now+12,_now+11
 12825                           
 12826                           ; BSR set to: 1
 12827                           ;My_RTCC.c: 360: time_change_flag = 1;
 12828  0141C4  0E01               	movlw	1
 12829  0141C6  0101               	movlb	1	; () banked
 12830  0141C8  6F32               	movwf	_time_change_flag& (0+255),b
 12831                           
 12832                           ; BSR set to: 1
 12833                           ;My_RTCC.c: 361: RTCC_from_RTCC(&now);
 12834  0141CA  0E35               	movlw	low _now
 12835  0141CC  0100               	movlb	0	; () banked
 12836  0141CE  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12837  0141D0  0E01               	movlw	high _now
 12838  0141D2  0100               	movlb	0	; () banked
 12839  0141D4  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12840  0141D6  ECB5  F0A2         	call	_RTCC_from_RTCC	;wreg free
 12841  0141DA  0012               	return	
 12842  0141DC                     __end_of_RTCC_task:
 12843                           	opt stack 0
 12844                           tblptru	equ	0xFF8
 12845                           tblptrh	equ	0xFF7
 12846                           tblptrl	equ	0xFF6
 12847                           tablat	equ	0xFF5
 12848                           prodh	equ	0xFF4
 12849                           prodl	equ	0xFF3
 12850                           intcon	equ	0xFF2
 12851                           intcon2	equ	0xFF1
 12852                           postinc0	equ	0xFEE
 12853                           wreg	equ	0xFE8
 12854                           indf1	equ	0xFE7
 12855                           postinc1	equ	0xFE6
 12856                           postdec1	equ	0xFE5
 12857                           fsr1h	equ	0xFE2
 12858                           fsr1l	equ	0xFE1
 12859                           indf2	equ	0xFDF
 12860                           postinc2	equ	0xFDE
 12861                           postdec2	equ	0xFDD
 12862                           plusw2	equ	0xFDB
 12863                           fsr2h	equ	0xFDA
 12864                           fsr2l	equ	0xFD9
 12865                           status	equ	0xFD8
 12866                           
 12867 ;; *************** function _RTCC_from_RTCC *****************
 12868 ;; Defined at:
 12869 ;;		line 200 in file "../My_library/My_RTCC.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  tm              2   38[BANK0 ] PTR struct .
 12872 ;;		 -> now(14), 
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;		None
 12875 ;; Return value:  Size  Location     Type
 12876 ;;		None               void
 12877 ;; Registers used:
 12878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12879 ;; Tracked objects:
 12880 ;;		On entry : 0/0
 12881 ;;		On exit  : 0/0
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12884 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12887 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12888 ;;Total ram usage:        2 bytes
 12889 ;; Hardware stack levels used:    1
 12890 ;; Hardware stack levels required when called:   14
 12891 ;; This function calls:
 12892 ;;		_RTCC_to_caltime
 12893 ;;		_caltime_to_epoch
 12894 ;; This function is called by:
 12895 ;;		_RTCC_init
 12896 ;;		_display_time_0802
 12897 ;;		_RTCC_task
 12898 ;;		_print_time
 12899 ;;		_display_time_1602
 12900 ;;		_RTCC_adjust_time_inc
 12901 ;;		_RTCC_adjust_time_dec
 12902 ;; This function uses a non-reentrant model
 12903 ;;
 12904                           
 12905                           	psect	text61
 12906  01456A                     __ptext61:
 12907                           	opt stack 0
 12908  01456A                     _RTCC_from_RTCC:
 12909                           	opt stack 11
 12910                           
 12911                           ;My_RTCC.c: 201: RTCC_to_caltime(tm);
 12912                           
 12913                           ;incstack = 0
 12914  01456A  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 12915  01456E  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 12916  014572  ECAD  F097         	call	_RTCC_to_caltime	;wreg free
 12917                           
 12918                           ;My_RTCC.c: 202: caltime_to_epoch(tm);
 12919  014576  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 12920  01457A  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 12921  01457E  ECB8  F085         	call	_caltime_to_epoch	;wreg free
 12922  014582  0012               	return		;funcret
 12923  014584                     __end_of_RTCC_from_RTCC:
 12924                           	opt stack 0
 12925                           tblptru	equ	0xFF8
 12926                           tblptrh	equ	0xFF7
 12927                           tblptrl	equ	0xFF6
 12928                           tablat	equ	0xFF5
 12929                           prodh	equ	0xFF4
 12930                           prodl	equ	0xFF3
 12931                           intcon	equ	0xFF2
 12932                           intcon2	equ	0xFF1
 12933                           postinc0	equ	0xFEE
 12934                           wreg	equ	0xFE8
 12935                           indf1	equ	0xFE7
 12936                           postinc1	equ	0xFE6
 12937                           postdec1	equ	0xFE5
 12938                           fsr1h	equ	0xFE2
 12939                           fsr1l	equ	0xFE1
 12940                           indf2	equ	0xFDF
 12941                           postinc2	equ	0xFDE
 12942                           postdec2	equ	0xFDD
 12943                           plusw2	equ	0xFDB
 12944                           fsr2h	equ	0xFDA
 12945                           fsr2l	equ	0xFD9
 12946                           status	equ	0xFD8
 12947                           
 12948 ;; *************** function _caltime_to_epoch *****************
 12949 ;; Defined at:
 12950 ;;		line 180 in file "../My_library/My_RTCC.c"
 12951 ;; Parameters:    Size  Location     Type
 12952 ;;  tm              2   25[BANK0 ] PTR struct .
 12953 ;;		 -> now(14), 
 12954 ;; Auto vars:     Size  Location     Type
 12955 ;;  month           1   37[BANK0 ] unsigned char 
 12956 ;;  month           1   32[BANK0 ] unsigned char 
 12957 ;;  year            1   31[BANK0 ] unsigned char 
 12958 ;;  epoch           4   33[BANK0 ] unsigned long 
 12959 ;; Return value:  Size  Location     Type
 12960 ;;		None               void
 12961 ;; Registers used:
 12962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12963 ;; Tracked objects:
 12964 ;;		On entry : 0/0
 12965 ;;		On exit  : 0/0
 12966 ;;		Unchanged: 0/0
 12967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12969 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12970 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12971 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12972 ;;Total ram usage:       13 bytes
 12973 ;; Hardware stack levels used:    1
 12974 ;; Hardware stack levels required when called:   13
 12975 ;; This function calls:
 12976 ;;		___lmul
 12977 ;;		_month_length
 12978 ;; This function is called by:
 12979 ;;		_RTCC_from_RTCC
 12980 ;;		_RTCC_from_caltime
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           	psect	text62
 12985  010B70                     __ptext62:
 12986                           	opt stack 0
 12987  010B70                     _caltime_to_epoch:
 12988                           	opt stack 11
 12989                           
 12990                           ;My_RTCC.c: 181: epoch_t epoch = 0;
 12991                           
 12992                           ;incstack = 0
 12993  010B70  0E00               	movlw	0
 12994  010B72  0100               	movlb	0	; () banked
 12995  010B74  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 12996  010B76  0E00               	movlw	0
 12997  010B78  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 12998  010B7A  0E00               	movlw	0
 12999  010B7C  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 13000  010B7E  0E00               	movlw	0
 13001  010B80  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 13002                           
 13003                           ;My_RTCC.c: 182: for (uint8_t year = 0; year < tm->YY; year++) {
 13004  010B82  0E00               	movlw	0
 13005  010B84  0100               	movlb	0	; () banked
 13006  010B86  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 13007  010B88  D037               	goto	l8326
 13008  010B8A                     l8312:
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;My_RTCC.c: 183: for (uint8_t month = 1; month <= 12; month++) {
 13012  010B8A  0E01               	movlw	1
 13013  010B8C  0100               	movlb	0	; () banked
 13014  010B8E  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 13015  010B90                     l8314:
 13016                           
 13017                           ; BSR set to: 0
 13018  010B90  0E0C               	movlw	12
 13019  010B92  0100               	movlb	0	; () banked
 13020  010B94  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 13021  010B96  D001               	goto	l8318
 13022  010B98  D02D               	goto	l8324
 13023  010B9A                     l8318:
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 13027  010B9A  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 13028  010B9E  0100               	movlb	0	; () banked
 13029  010BA0  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 13030  010BA2  ECFB  F091         	call	_month_length
 13031  010BA6  0100               	movlb	0	; () banked
 13032  010BA8  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13033  010BAA  0100               	movlb	0	; () banked
 13034  010BAC  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13035  010BAE  0100               	movlb	0	; () banked
 13036  010BB0  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13037  010BB2  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13038  010BB4  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13039  010BB6  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13040  010BB8  0E80               	movlw	128
 13041  010BBA  0100               	movlb	0	; () banked
 13042  010BBC  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13043  010BBE  0E51               	movlw	81
 13044  010BC0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13045  010BC2  0E01               	movlw	1
 13046  010BC4  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13047  010BC6  0E00               	movlw	0
 13048  010BC8  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13049  010BCA  EC3D  F09D         	call	___lmul	;wreg free
 13050  010BCE  0100               	movlb	0	; () banked
 13051  010BD0  516D               	movf	?___lmul& (0+255),w,b
 13052  010BD2  0100               	movlb	0	; () banked
 13053  010BD4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13054  010BD6  0100               	movlb	0	; () banked
 13055  010BD8  516E               	movf	(?___lmul+1)& (0+255),w,b
 13056  010BDA  0100               	movlb	0	; () banked
 13057  010BDC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13058  010BDE  0100               	movlb	0	; () banked
 13059  010BE0  516F               	movf	(?___lmul+2)& (0+255),w,b
 13060  010BE2  0100               	movlb	0	; () banked
 13061  010BE4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13062  010BE6  0100               	movlb	0	; () banked
 13063  010BE8  5170               	movf	(?___lmul+3)& (0+255),w,b
 13064  010BEA  0100               	movlb	0	; () banked
 13065  010BEC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13066                           
 13067                           ; BSR set to: 0
 13068  010BEE  0100               	movlb	0	; () banked
 13069  010BF0  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 13070  010BF2  D7CE               	goto	l8314
 13071  010BF4                     l8324:
 13072                           
 13073                           ; BSR set to: 0
 13074  010BF4  0100               	movlb	0	; () banked
 13075  010BF6  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 13076  010BF8                     l8326:
 13077                           
 13078                           ; BSR set to: 0
 13079  010BF8  0100               	movlb	0	; () banked
 13080  010BFA  EE20 F00A          	lfsr	2,10
 13081  010BFE  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13082  010C00  26D9               	addwf	fsr2l,f,c
 13083  010C02  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13084  010C04  22DA               	addwfc	fsr2h,f,c
 13085  010C06  50DE               	movf	postinc2,w,c
 13086  010C08  0100               	movlb	0	; () banked
 13087  010C0A  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 13088  010C0C  A0D8               	btfss	status,0,c
 13089  010C0E  D7BD               	goto	l8312
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;My_RTCC.c: 185: }
 13093                           ;My_RTCC.c: 186: }
 13094                           ;My_RTCC.c: 187: for (uint8_t month = 1; month < tm->MM; month++) {
 13095                           
 13096                           ; BSR set to: 0
 13097  010C10  0E01               	movlw	1
 13098  010C12  0100               	movlb	0	; () banked
 13099  010C14  6F80               	movwf	caltime_to_epoch@month_3467& (0+255),b
 13100  010C16  D032               	goto	l8334
 13101  010C18                     l8330:
 13102                           
 13103                           ; BSR set to: 0
 13104                           ;My_RTCC.c: 188: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 13105  010C18  C080  F066         	movff	caltime_to_epoch@month_3467,month_length@month
 13106  010C1C  0100               	movlb	0	; () banked
 13107  010C1E  EE20 F00A          	lfsr	2,10
 13108  010C22  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13109  010C24  26D9               	addwf	fsr2l,f,c
 13110  010C26  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13111  010C28  22DA               	addwfc	fsr2h,f,c
 13112  010C2A  50DF               	movf	indf2,w,c
 13113  010C2C  ECFB  F091         	call	_month_length
 13114  010C30  0100               	movlb	0	; () banked
 13115  010C32  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13116  010C34  0100               	movlb	0	; () banked
 13117  010C36  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13118  010C38  0100               	movlb	0	; () banked
 13119  010C3A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13120  010C3C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13121  010C3E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13122  010C40  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13123  010C42  0E80               	movlw	128
 13124  010C44  0100               	movlb	0	; () banked
 13125  010C46  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13126  010C48  0E51               	movlw	81
 13127  010C4A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13128  010C4C  0E01               	movlw	1
 13129  010C4E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13130  010C50  0E00               	movlw	0
 13131  010C52  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13132  010C54  EC3D  F09D         	call	___lmul	;wreg free
 13133  010C58  0100               	movlb	0	; () banked
 13134  010C5A  516D               	movf	?___lmul& (0+255),w,b
 13135  010C5C  0100               	movlb	0	; () banked
 13136  010C5E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13137  010C60  0100               	movlb	0	; () banked
 13138  010C62  516E               	movf	(?___lmul+1)& (0+255),w,b
 13139  010C64  0100               	movlb	0	; () banked
 13140  010C66  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13141  010C68  0100               	movlb	0	; () banked
 13142  010C6A  516F               	movf	(?___lmul+2)& (0+255),w,b
 13143  010C6C  0100               	movlb	0	; () banked
 13144  010C6E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13145  010C70  0100               	movlb	0	; () banked
 13146  010C72  5170               	movf	(?___lmul+3)& (0+255),w,b
 13147  010C74  0100               	movlb	0	; () banked
 13148  010C76  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13149                           
 13150                           ; BSR set to: 0
 13151  010C78  0100               	movlb	0	; () banked
 13152  010C7A  2B80               	incf	caltime_to_epoch@month_3467& (0+255),f,b
 13153  010C7C                     l8334:
 13154                           
 13155                           ; BSR set to: 0
 13156  010C7C  0100               	movlb	0	; () banked
 13157  010C7E  EE20 F009          	lfsr	2,9
 13158  010C82  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13159  010C84  26D9               	addwf	fsr2l,f,c
 13160  010C86  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13161  010C88  22DA               	addwfc	fsr2h,f,c
 13162  010C8A  50DE               	movf	postinc2,w,c
 13163  010C8C  0100               	movlb	0	; () banked
 13164  010C8E  5D80               	subwf	caltime_to_epoch@month_3467& (0+255),w,b
 13165  010C90  A0D8               	btfss	status,0,c
 13166  010C92  D7C2               	goto	l8330
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;My_RTCC.c: 189: }
 13170                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 13171                           
 13172                           ; BSR set to: 0
 13173  010C94  0EFF               	movlw	255
 13174  010C96  0100               	movlb	0	; () banked
 13175  010C98  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13176  010C9A  0EFF               	movlw	255
 13177  010C9C  0100               	movlb	0	; () banked
 13178  010C9E  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 13179  010CA0  0100               	movlb	0	; () banked
 13180  010CA2  EE20 F008          	lfsr	2,8
 13181  010CA6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13182  010CA8  26D9               	addwf	fsr2l,f,c
 13183  010CAA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13184  010CAC  22DA               	addwfc	fsr2h,f,c
 13185  010CAE  50DF               	movf	indf2,w,c
 13186  010CB0  0100               	movlb	0	; () banked
 13187  010CB2  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 13188  010CB4  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 13189  010CB6  0100               	movlb	0	; () banked
 13190  010CB8  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13191  010CBA  0100               	movlb	0	; () banked
 13192  010CBC  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 13193  010CBE  0100               	movlb	0	; () banked
 13194  010CC0  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 13195  010CC2  0100               	movlb	0	; () banked
 13196  010CC4  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 13197  010CC6  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 13198  010CCA  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 13199  010CCE  0100               	movlb	0	; () banked
 13200  010CD0  0E00               	movlw	0
 13201  010CD2  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 13202  010CD4  0EFF               	movlw	-1
 13203  010CD6  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 13204  010CD8  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 13205  010CDA  0E80               	movlw	128
 13206  010CDC  0100               	movlb	0	; () banked
 13207  010CDE  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13208  010CE0  0E51               	movlw	81
 13209  010CE2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13210  010CE4  0E01               	movlw	1
 13211  010CE6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13212  010CE8  0E00               	movlw	0
 13213  010CEA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13214  010CEC  EC3D  F09D         	call	___lmul	;wreg free
 13215  010CF0  0100               	movlb	0	; () banked
 13216  010CF2  516D               	movf	?___lmul& (0+255),w,b
 13217  010CF4  0100               	movlb	0	; () banked
 13218  010CF6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13219  010CF8  0100               	movlb	0	; () banked
 13220  010CFA  516E               	movf	(?___lmul+1)& (0+255),w,b
 13221  010CFC  0100               	movlb	0	; () banked
 13222  010CFE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13223  010D00  0100               	movlb	0	; () banked
 13224  010D02  516F               	movf	(?___lmul+2)& (0+255),w,b
 13225  010D04  0100               	movlb	0	; () banked
 13226  010D06  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13227  010D08  0100               	movlb	0	; () banked
 13228  010D0A  5170               	movf	(?___lmul+3)& (0+255),w,b
 13229  010D0C  0100               	movlb	0	; () banked
 13230  010D0E  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13231                           
 13232                           ;My_RTCC.c: 191: epoch += ((epoch_t)60*60) * tm->hh;
 13233  010D10  0100               	movlb	0	; () banked
 13234  010D12  EE20 F006          	lfsr	2,6
 13235  010D16  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13236  010D18  26D9               	addwf	fsr2l,f,c
 13237  010D1A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13238  010D1C  22DA               	addwfc	fsr2h,f,c
 13239  010D1E  50DF               	movf	indf2,w,c
 13240  010D20  0100               	movlb	0	; () banked
 13241  010D22  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13242  010D24  0100               	movlb	0	; () banked
 13243  010D26  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13244  010D28  0100               	movlb	0	; () banked
 13245  010D2A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13246  010D2C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13247  010D2E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13248  010D30  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13249  010D32  0E10               	movlw	16
 13250  010D34  0100               	movlb	0	; () banked
 13251  010D36  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13252  010D38  0E0E               	movlw	14
 13253  010D3A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13254  010D3C  0E00               	movlw	0
 13255  010D3E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13256  010D40  0E00               	movlw	0
 13257  010D42  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13258  010D44  EC3D  F09D         	call	___lmul	;wreg free
 13259  010D48  0100               	movlb	0	; () banked
 13260  010D4A  516D               	movf	?___lmul& (0+255),w,b
 13261  010D4C  0100               	movlb	0	; () banked
 13262  010D4E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13263  010D50  0100               	movlb	0	; () banked
 13264  010D52  516E               	movf	(?___lmul+1)& (0+255),w,b
 13265  010D54  0100               	movlb	0	; () banked
 13266  010D56  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13267  010D58  0100               	movlb	0	; () banked
 13268  010D5A  516F               	movf	(?___lmul+2)& (0+255),w,b
 13269  010D5C  0100               	movlb	0	; () banked
 13270  010D5E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13271  010D60  0100               	movlb	0	; () banked
 13272  010D62  5170               	movf	(?___lmul+3)& (0+255),w,b
 13273  010D64  0100               	movlb	0	; () banked
 13274  010D66  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13275                           
 13276                           ;My_RTCC.c: 192: epoch += ((epoch_t)60) * tm->mm;
 13277  010D68  0100               	movlb	0	; () banked
 13278  010D6A  EE20 F005          	lfsr	2,5
 13279  010D6E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13280  010D70  26D9               	addwf	fsr2l,f,c
 13281  010D72  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13282  010D74  22DA               	addwfc	fsr2h,f,c
 13283  010D76  50DF               	movf	indf2,w,c
 13284  010D78  0100               	movlb	0	; () banked
 13285  010D7A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13286  010D7C  0100               	movlb	0	; () banked
 13287  010D7E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13288  010D80  0100               	movlb	0	; () banked
 13289  010D82  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13290  010D84  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13291  010D86  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13292  010D88  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13293  010D8A  0E3C               	movlw	60
 13294  010D8C  0100               	movlb	0	; () banked
 13295  010D8E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13296  010D90  0E00               	movlw	0
 13297  010D92  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13298  010D94  0E00               	movlw	0
 13299  010D96  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13300  010D98  0E00               	movlw	0
 13301  010D9A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13302  010D9C  EC3D  F09D         	call	___lmul	;wreg free
 13303  010DA0  0100               	movlb	0	; () banked
 13304  010DA2  516D               	movf	?___lmul& (0+255),w,b
 13305  010DA4  0100               	movlb	0	; () banked
 13306  010DA6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13307  010DA8  0100               	movlb	0	; () banked
 13308  010DAA  516E               	movf	(?___lmul+1)& (0+255),w,b
 13309  010DAC  0100               	movlb	0	; () banked
 13310  010DAE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13311  010DB0  0100               	movlb	0	; () banked
 13312  010DB2  516F               	movf	(?___lmul+2)& (0+255),w,b
 13313  010DB4  0100               	movlb	0	; () banked
 13314  010DB6  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13315  010DB8  0100               	movlb	0	; () banked
 13316  010DBA  5170               	movf	(?___lmul+3)& (0+255),w,b
 13317  010DBC  0100               	movlb	0	; () banked
 13318  010DBE  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;My_RTCC.c: 193: epoch += tm->ss;
 13322  010DC0  0100               	movlb	0	; () banked
 13323  010DC2  EE20 F004          	lfsr	2,4
 13324  010DC6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13325  010DC8  26D9               	addwf	fsr2l,f,c
 13326  010DCA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13327  010DCC  22DA               	addwfc	fsr2h,f,c
 13328  010DCE  50DF               	movf	indf2,w,c
 13329  010DD0  0100               	movlb	0	; () banked
 13330  010DD2  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13331  010DD4  0100               	movlb	0	; () banked
 13332  010DD6  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13333  010DD8  0100               	movlb	0	; () banked
 13334  010DDA  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13335  010DDC  0E00               	movlw	0
 13336  010DDE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13337  010DE0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13338  010DE2  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13339                           
 13340                           ; BSR set to: 0
 13341                           ;My_RTCC.c: 195: tm->epoch = epoch;
 13342  010DE4  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 13343  010DE8  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 13344  010DEC  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 13345  010DF0  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 13346  010DF4  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 13347  010DF8  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 13348                           
 13349                           ; BSR set to: 0
 13350  010DFC  0012               	return		;funcret
 13351  010DFE                     __end_of_caltime_to_epoch:
 13352                           	opt stack 0
 13353                           tblptru	equ	0xFF8
 13354                           tblptrh	equ	0xFF7
 13355                           tblptrl	equ	0xFF6
 13356                           tablat	equ	0xFF5
 13357                           prodh	equ	0xFF4
 13358                           prodl	equ	0xFF3
 13359                           intcon	equ	0xFF2
 13360                           intcon2	equ	0xFF1
 13361                           postinc0	equ	0xFEE
 13362                           wreg	equ	0xFE8
 13363                           indf1	equ	0xFE7
 13364                           postinc1	equ	0xFE6
 13365                           postdec1	equ	0xFE5
 13366                           fsr1h	equ	0xFE2
 13367                           fsr1l	equ	0xFE1
 13368                           indf2	equ	0xFDF
 13369                           postinc2	equ	0xFDE
 13370                           postdec2	equ	0xFDD
 13371                           plusw2	equ	0xFDB
 13372                           fsr2h	equ	0xFDA
 13373                           fsr2l	equ	0xFD9
 13374                           status	equ	0xFD8
 13375                           
 13376 ;; *************** function _month_length *****************
 13377 ;; Defined at:
 13378 ;;		line 56 in file "../My_library/My_RTCC.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;  year            1    wreg     unsigned char 
 13381 ;;  month           1    6[BANK0 ] unsigned char 
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;  year            1   11[BANK0 ] unsigned char 
 13384 ;; Return value:  Size  Location     Type
 13385 ;;                  1    wreg      unsigned char 
 13386 ;; Registers used:
 13387 ;;		wreg, status,2, status,0, cstack
 13388 ;; Tracked objects:
 13389 ;;		On entry : 0/0
 13390 ;;		On exit  : 0/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13393 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13394 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13395 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13396 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13397 ;;Total ram usage:        6 bytes
 13398 ;; Hardware stack levels used:    1
 13399 ;; Hardware stack levels required when called:   12
 13400 ;; This function calls:
 13401 ;;		___awmod
 13402 ;; This function is called by:
 13403 ;;		_epoch_to_caltime
 13404 ;;		_caltime_to_epoch
 13405 ;;		_terminal_time
 13406 ;;		_RTCC_adjust_time_inc
 13407 ;;		_RTCC_adjust_time_dec
 13408 ;; This function uses a non-reentrant model
 13409 ;;
 13410                           
 13411                           	psect	text63
 13412  0123F6                     __ptext63:
 13413                           	opt stack 0
 13414  0123F6                     _month_length:
 13415                           	opt stack 11
 13416                           
 13417                           ; BSR set to: 0
 13418                           ;incstack = 0
 13419                           ;month_length@year stored from wreg
 13420  0123F6  0100               	movlb	0	; () banked
 13421  0123F8  6F6B               	movwf	month_length@year& (0+255),b
 13422                           
 13423                           ;My_RTCC.c: 57: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 13424  0123FA  0E02               	movlw	2
 13425  0123FC  0100               	movlb	0	; () banked
 13426  0123FE  1966               	xorwf	month_length@month& (0+255),w,b
 13427  012400  A4D8               	btfss	status,2,c
 13428  012402  D03E               	goto	l8204
 13429                           
 13430                           ; BSR set to: 0
 13431  012404  C06B  F060         	movff	month_length@year,___awmod@dividend
 13432  012408  0100               	movlb	0	; () banked
 13433  01240A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13434  01240C  0E00               	movlw	0
 13435  01240E  0100               	movlb	0	; () banked
 13436  012410  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13437  012412  0E64               	movlw	100
 13438  012414  6F62               	movwf	___awmod@divisor& (0+255),b
 13439  012416  EC81  F09A         	call	___awmod	;wreg free
 13440  01241A  0100               	movlb	0	; () banked
 13441  01241C  5160               	movf	?___awmod& (0+255),w,b
 13442  01241E  0100               	movlb	0	; () banked
 13443  012420  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 13444  012422  A4D8               	btfss	status,2,c
 13445  012424  D002               	goto	u7740
 13446  012426  0E01               	movlw	1
 13447  012428  D001               	goto	u7750
 13448  01242A                     u7740:
 13449  01242A  0E00               	movlw	0
 13450  01242C                     u7750:
 13451  01242C  0800               	sublw	0
 13452  01242E  0100               	movlb	0	; () banked
 13453  012430  6F67               	movwf	??_month_length& (0+255),b
 13454  012432  C06B  F060         	movff	month_length@year,___awmod@dividend
 13455  012436  0100               	movlb	0	; () banked
 13456  012438  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13457  01243A  0E01               	movlw	1
 13458  01243C  0100               	movlb	0	; () banked
 13459  01243E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13460  012440  0E90               	movlw	144
 13461  012442  6F62               	movwf	___awmod@divisor& (0+255),b
 13462  012444  EC81  F09A         	call	___awmod	;wreg free
 13463  012448  0100               	movlb	0	; () banked
 13464  01244A  5160               	movf	?___awmod& (0+255),w,b
 13465  01244C  0100               	movlb	0	; () banked
 13466  01244E  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 13467  012450  A4D8               	btfss	status,2,c
 13468  012452  D004               	goto	u7760
 13469  012454  0100               	movlb	0	; () banked
 13470  012456  6B68               	clrf	(??_month_length+1)& (0+255),b
 13471  012458  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13472  01245A  D002               	goto	u7778
 13473  01245C                     u7760:
 13474  01245C  0100               	movlb	0	; () banked
 13475  01245E  6B68               	clrf	(??_month_length+1)& (0+255),b
 13476  012460                     u7778:
 13477  012460  C06B  F069         	movff	month_length@year,??_month_length+2
 13478  012464  0E03               	movlw	3
 13479  012466  0100               	movlb	0	; () banked
 13480  012468  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13481  01246A  A4D8               	btfss	status,2,c
 13482  01246C  D002               	goto	u7780
 13483  01246E  0E01               	movlw	1
 13484  012470  D001               	goto	u7790
 13485  012472                     u7780:
 13486  012472  0E00               	movlw	0
 13487  012474                     u7790:
 13488  012474  0100               	movlb	0	; () banked
 13489  012476  2568               	addwf	(??_month_length+1)& (0+255),w,b
 13490  012478  0100               	movlb	0	; () banked
 13491  01247A  2567               	addwf	??_month_length& (0+255),w,b
 13492  01247C  0F1C               	addlw	28
 13493                           
 13494                           ; BSR set to: 0
 13495                           
 13496                           ; BSR set to: 0
 13497  01247E  0012               	return	
 13498  012480                     l8204:
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;My_RTCC.c: 58: else return 31 - (((-(month & 1)^month)&13) == 4);
 13502  012480  0100               	movlb	0	; () banked
 13503  012482  5166               	movf	month_length@month& (0+255),w,b
 13504  012484  0B01               	andlw	1
 13505  012486  0100               	movlb	0	; () banked
 13506  012488  6F67               	movwf	??_month_length& (0+255),b
 13507  01248A  6B68               	clrf	(??_month_length+1)& (0+255),b
 13508  01248C  0100               	movlb	0	; () banked
 13509  01248E  1F67               	comf	??_month_length& (0+255),f,b
 13510  012490  1F68               	comf	(??_month_length+1)& (0+255),f,b
 13511  012492  4B67               	infsnz	??_month_length& (0+255),f,b
 13512  012494  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13513  012496  0100               	movlb	0	; () banked
 13514  012498  5166               	movf	month_length@month& (0+255),w,b
 13515  01249A  0100               	movlb	0	; () banked
 13516  01249C  6F69               	movwf	(??_month_length+2)& (0+255),b
 13517  01249E  6B6A               	clrf	(??_month_length+3)& (0+255),b
 13518  0124A0  0100               	movlb	0	; () banked
 13519  0124A2  5167               	movf	??_month_length& (0+255),w,b
 13520  0124A4  0100               	movlb	0	; () banked
 13521  0124A6  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 13522  0124A8  0100               	movlb	0	; () banked
 13523  0124AA  5168               	movf	(??_month_length+1)& (0+255),w,b
 13524  0124AC  0100               	movlb	0	; () banked
 13525  0124AE  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 13526  0124B0  0E0D               	movlw	13
 13527  0124B2  0100               	movlb	0	; () banked
 13528  0124B4  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13529  0124B6  0E00               	movlw	0
 13530  0124B8  176A               	andwf	(??_month_length+3)& (0+255),f,b
 13531  0124BA  0E04               	movlw	4
 13532  0124BC  0100               	movlb	0	; () banked
 13533  0124BE  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 13534  0124C0  0100               	movlb	0	; () banked
 13535  0124C2  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 13536  0124C4  A4D8               	btfss	status,2,c
 13537  0124C6  D002               	goto	u7800
 13538  0124C8  0E01               	movlw	1
 13539  0124CA  D001               	goto	u7810
 13540  0124CC                     u7800:
 13541  0124CC  0E00               	movlw	0
 13542  0124CE                     u7810:
 13543  0124CE  0800               	sublw	0
 13544  0124D0  0F1F               	addlw	31
 13545                           
 13546                           ; BSR set to: 0
 13547  0124D2  0012               	return	
 13548  0124D4                     __end_of_month_length:
 13549                           	opt stack 0
 13550                           tblptru	equ	0xFF8
 13551                           tblptrh	equ	0xFF7
 13552                           tblptrl	equ	0xFF6
 13553                           tablat	equ	0xFF5
 13554                           prodh	equ	0xFF4
 13555                           prodl	equ	0xFF3
 13556                           intcon	equ	0xFF2
 13557                           intcon2	equ	0xFF1
 13558                           postinc0	equ	0xFEE
 13559                           wreg	equ	0xFE8
 13560                           indf1	equ	0xFE7
 13561                           postinc1	equ	0xFE6
 13562                           postdec1	equ	0xFE5
 13563                           fsr1h	equ	0xFE2
 13564                           fsr1l	equ	0xFE1
 13565                           indf2	equ	0xFDF
 13566                           postinc2	equ	0xFDE
 13567                           postdec2	equ	0xFDD
 13568                           plusw2	equ	0xFDB
 13569                           fsr2h	equ	0xFDA
 13570                           fsr2l	equ	0xFD9
 13571                           status	equ	0xFD8
 13572                           
 13573 ;; *************** function ___awmod *****************
 13574 ;; Defined at:
 13575 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 13576 ;; Parameters:    Size  Location     Type
 13577 ;;  dividend        2    0[BANK0 ] int 
 13578 ;;  divisor         2    2[BANK0 ] int 
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;  sign            1    5[BANK0 ] unsigned char 
 13581 ;;  counter         1    4[BANK0 ] unsigned char 
 13582 ;; Return value:  Size  Location     Type
 13583 ;;                  2    0[BANK0 ] int 
 13584 ;; Registers used:
 13585 ;;		wreg, status,2, status,0
 13586 ;; Tracked objects:
 13587 ;;		On entry : 0/0
 13588 ;;		On exit  : 0/0
 13589 ;;		Unchanged: 0/0
 13590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13594 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13595 ;;Total ram usage:        6 bytes
 13596 ;; Hardware stack levels used:    1
 13597 ;; Hardware stack levels required when called:   11
 13598 ;; This function calls:
 13599 ;;		Nothing
 13600 ;; This function is called by:
 13601 ;;		_month_length
 13602 ;; This function uses a non-reentrant model
 13603 ;;
 13604                           
 13605                           	psect	text64
 13606  013502                     __ptext64:
 13607                           	opt stack 0
 13608  013502                     ___awmod:
 13609                           	opt stack 11
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;incstack = 0
 13613  013502  0E00               	movlw	0
 13614  013504  0100               	movlb	0	; () banked
 13615  013506  6F65               	movwf	___awmod@sign& (0+255),b
 13616                           
 13617                           ; BSR set to: 0
 13618  013508  0100               	movlb	0	; () banked
 13619  01350A  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13620  01350C  D008               	goto	l8152
 13621                           
 13622                           ; BSR set to: 0
 13623  01350E  0100               	movlb	0	; () banked
 13624  013510  6D60               	negf	___awmod@dividend& (0+255),b
 13625  013512  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13626  013514  B0D8               	btfsc	status,0,c
 13627  013516  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13628                           
 13629                           ; BSR set to: 0
 13630  013518  0E01               	movlw	1
 13631  01351A  0100               	movlb	0	; () banked
 13632  01351C  6F65               	movwf	___awmod@sign& (0+255),b
 13633  01351E                     l8152:
 13634                           
 13635                           ; BSR set to: 0
 13636  01351E  0100               	movlb	0	; () banked
 13637  013520  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13638  013522  D005               	goto	l8156
 13639                           
 13640                           ; BSR set to: 0
 13641  013524  0100               	movlb	0	; () banked
 13642  013526  6D62               	negf	___awmod@divisor& (0+255),b
 13643  013528  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13644  01352A  B0D8               	btfsc	status,0,c
 13645  01352C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13646  01352E                     l8156:
 13647                           
 13648                           ; BSR set to: 0
 13649  01352E  0100               	movlb	0	; () banked
 13650  013530  5162               	movf	___awmod@divisor& (0+255),w,b
 13651  013532  0100               	movlb	0	; () banked
 13652  013534  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13653  013536  B4D8               	btfsc	status,2,c
 13654  013538  D026               	goto	l8172
 13655                           
 13656                           ; BSR set to: 0
 13657  01353A  0E01               	movlw	1
 13658  01353C  0100               	movlb	0	; () banked
 13659  01353E  6F64               	movwf	___awmod@counter& (0+255),b
 13660  013540  D006               	goto	l8162
 13661  013542                     l8160:
 13662                           
 13663                           ; BSR set to: 0
 13664  013542  0100               	movlb	0	; () banked
 13665  013544  90D8               	bcf	status,0,c
 13666  013546  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13667  013548  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13668  01354A  0100               	movlb	0	; () banked
 13669  01354C  2B64               	incf	___awmod@counter& (0+255),f,b
 13670  01354E                     l8162:
 13671                           
 13672                           ; BSR set to: 0
 13673  01354E  0100               	movlb	0	; () banked
 13674  013550  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13675  013552  D7F7               	goto	l8160
 13676  013554                     l8164:
 13677                           
 13678                           ; BSR set to: 0
 13679  013554  0100               	movlb	0	; () banked
 13680  013556  5162               	movf	___awmod@divisor& (0+255),w,b
 13681  013558  0100               	movlb	0	; () banked
 13682  01355A  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13683  01355C  0100               	movlb	0	; () banked
 13684  01355E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13685  013560  0100               	movlb	0	; () banked
 13686  013562  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13687  013564  A0D8               	btfss	status,0,c
 13688  013566  D008               	goto	l8168
 13689                           
 13690                           ; BSR set to: 0
 13691  013568  0100               	movlb	0	; () banked
 13692  01356A  5162               	movf	___awmod@divisor& (0+255),w,b
 13693  01356C  0100               	movlb	0	; () banked
 13694  01356E  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13695  013570  0100               	movlb	0	; () banked
 13696  013572  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13697  013574  0100               	movlb	0	; () banked
 13698  013576  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13699  013578                     l8168:
 13700                           
 13701                           ; BSR set to: 0
 13702  013578  0100               	movlb	0	; () banked
 13703  01357A  90D8               	bcf	status,0,c
 13704  01357C  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13705  01357E  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13706                           
 13707                           ; BSR set to: 0
 13708  013580  0100               	movlb	0	; () banked
 13709  013582  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13710  013584  D7E7               	goto	l8164
 13711  013586                     l8172:
 13712                           
 13713                           ; BSR set to: 0
 13714  013586  0100               	movlb	0	; () banked
 13715  013588  5165               	movf	___awmod@sign& (0+255),w,b
 13716  01358A  0100               	movlb	0	; () banked
 13717  01358C  B4D8               	btfsc	status,2,c
 13718  01358E  D005               	goto	l8176
 13719                           
 13720                           ; BSR set to: 0
 13721  013590  0100               	movlb	0	; () banked
 13722  013592  6D60               	negf	___awmod@dividend& (0+255),b
 13723  013594  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13724  013596  B0D8               	btfsc	status,0,c
 13725  013598  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13726  01359A                     l8176:
 13727                           
 13728                           ; BSR set to: 0
 13729  01359A  C060  F060         	movff	___awmod@dividend,?___awmod
 13730  01359E  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13731  0135A2  0012               	return	
 13732  0135A4                     __end_of___awmod:
 13733                           	opt stack 0
 13734                           tblptru	equ	0xFF8
 13735                           tblptrh	equ	0xFF7
 13736                           tblptrl	equ	0xFF6
 13737                           tablat	equ	0xFF5
 13738                           prodh	equ	0xFF4
 13739                           prodl	equ	0xFF3
 13740                           intcon	equ	0xFF2
 13741                           intcon2	equ	0xFF1
 13742                           postinc0	equ	0xFEE
 13743                           wreg	equ	0xFE8
 13744                           indf1	equ	0xFE7
 13745                           postinc1	equ	0xFE6
 13746                           postdec1	equ	0xFE5
 13747                           fsr1h	equ	0xFE2
 13748                           fsr1l	equ	0xFE1
 13749                           indf2	equ	0xFDF
 13750                           postinc2	equ	0xFDE
 13751                           postdec2	equ	0xFDD
 13752                           plusw2	equ	0xFDB
 13753                           fsr2h	equ	0xFDA
 13754                           fsr2l	equ	0xFD9
 13755                           status	equ	0xFD8
 13756                           
 13757 ;; *************** function ___lmul *****************
 13758 ;; Defined at:
 13759 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 13760 ;; Parameters:    Size  Location     Type
 13761 ;;  multiplier      4   13[BANK0 ] unsigned long 
 13762 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 13763 ;; Auto vars:     Size  Location     Type
 13764 ;;  product         4   21[BANK0 ] unsigned long 
 13765 ;; Return value:  Size  Location     Type
 13766 ;;                  4   13[BANK0 ] unsigned long 
 13767 ;; Registers used:
 13768 ;;		wreg, status,2, status,0
 13769 ;; Tracked objects:
 13770 ;;		On entry : 0/0
 13771 ;;		On exit  : 0/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13774 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13775 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13777 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13778 ;;Total ram usage:       12 bytes
 13779 ;; Hardware stack levels used:    1
 13780 ;; Hardware stack levels required when called:   11
 13781 ;; This function calls:
 13782 ;;		Nothing
 13783 ;; This function is called by:
 13784 ;;		_get_quot_rem
 13785 ;;		_caltime_to_epoch
 13786 ;;		_RTCC_adjust_time_inc
 13787 ;;		_RTCC_adjust_time_dec
 13788 ;; This function uses a non-reentrant model
 13789 ;;
 13790                           
 13791                           	psect	text65
 13792  013A7A                     __ptext65:
 13793                           	opt stack 0
 13794  013A7A                     ___lmul:
 13795                           	opt stack 12
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;incstack = 0
 13799  013A7A  0E00               	movlw	0
 13800  013A7C  0100               	movlb	0	; () banked
 13801  013A7E  6F75               	movwf	___lmul@product& (0+255),b
 13802  013A80  0E00               	movlw	0
 13803  013A82  6F76               	movwf	(___lmul@product+1)& (0+255),b
 13804  013A84  0E00               	movlw	0
 13805  013A86  6F77               	movwf	(___lmul@product+2)& (0+255),b
 13806  013A88  0E00               	movlw	0
 13807  013A8A  6F78               	movwf	(___lmul@product+3)& (0+255),b
 13808  013A8C                     l8210:
 13809                           
 13810                           ; BSR set to: 0
 13811  013A8C  0100               	movlb	0	; () banked
 13812  013A8E  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 13813  013A90  D010               	goto	l8214
 13814                           
 13815                           ; BSR set to: 0
 13816  013A92  0100               	movlb	0	; () banked
 13817  013A94  5171               	movf	___lmul@multiplicand& (0+255),w,b
 13818  013A96  0100               	movlb	0	; () banked
 13819  013A98  2775               	addwf	___lmul@product& (0+255),f,b
 13820  013A9A  0100               	movlb	0	; () banked
 13821  013A9C  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13822  013A9E  0100               	movlb	0	; () banked
 13823  013AA0  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 13824  013AA2  0100               	movlb	0	; () banked
 13825  013AA4  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13826  013AA6  0100               	movlb	0	; () banked
 13827  013AA8  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 13828  013AAA  0100               	movlb	0	; () banked
 13829  013AAC  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13830  013AAE  0100               	movlb	0	; () banked
 13831  013AB0  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 13832  013AB2                     l8214:
 13833                           
 13834                           ; BSR set to: 0
 13835  013AB2  0100               	movlb	0	; () banked
 13836  013AB4  90D8               	bcf	status,0,c
 13837  013AB6  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 13838  013AB8  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13839  013ABA  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13840  013ABC  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13841                           
 13842                           ; BSR set to: 0
 13843  013ABE  0100               	movlb	0	; () banked
 13844  013AC0  90D8               	bcf	status,0,c
 13845  013AC2  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13846  013AC4  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13847  013AC6  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13848  013AC8  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 13849  013ACA  0100               	movlb	0	; () banked
 13850  013ACC  516D               	movf	___lmul@multiplier& (0+255),w,b
 13851  013ACE  0100               	movlb	0	; () banked
 13852  013AD0  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13853  013AD2  0100               	movlb	0	; () banked
 13854  013AD4  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13855  013AD6  0100               	movlb	0	; () banked
 13856  013AD8  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13857  013ADA  A4D8               	btfss	status,2,c
 13858  013ADC  D7D7               	goto	l8210
 13859                           
 13860                           ; BSR set to: 0
 13861  013ADE  C075  F06D         	movff	___lmul@product,?___lmul
 13862  013AE2  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 13863  013AE6  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 13864  013AEA  C078  F070         	movff	___lmul@product+3,?___lmul+3
 13865                           
 13866                           ; BSR set to: 0
 13867  013AEE  0012               	return		;funcret
 13868  013AF0                     __end_of___lmul:
 13869                           	opt stack 0
 13870                           tblptru	equ	0xFF8
 13871                           tblptrh	equ	0xFF7
 13872                           tblptrl	equ	0xFF6
 13873                           tablat	equ	0xFF5
 13874                           prodh	equ	0xFF4
 13875                           prodl	equ	0xFF3
 13876                           intcon	equ	0xFF2
 13877                           intcon2	equ	0xFF1
 13878                           postinc0	equ	0xFEE
 13879                           wreg	equ	0xFE8
 13880                           indf1	equ	0xFE7
 13881                           postinc1	equ	0xFE6
 13882                           postdec1	equ	0xFE5
 13883                           fsr1h	equ	0xFE2
 13884                           fsr1l	equ	0xFE1
 13885                           indf2	equ	0xFDF
 13886                           postinc2	equ	0xFDE
 13887                           postdec2	equ	0xFDD
 13888                           plusw2	equ	0xFDB
 13889                           fsr2h	equ	0xFDA
 13890                           fsr2l	equ	0xFD9
 13891                           status	equ	0xFD8
 13892                           
 13893 ;; *************** function _RTCC_to_caltime *****************
 13894 ;; Defined at:
 13895 ;;		line 90 in file "../My_library/My_RTCC.c"
 13896 ;; Parameters:    Size  Location     Type
 13897 ;;  tm              2    2[BANK0 ] PTR struct .
 13898 ;;		 -> now(14), 
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;  dumy            1    4[BANK0 ] unsigned char 
 13901 ;; Return value:  Size  Location     Type
 13902 ;;		None               void
 13903 ;; Registers used:
 13904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13905 ;; Tracked objects:
 13906 ;;		On entry : 0/0
 13907 ;;		On exit  : 0/0
 13908 ;;		Unchanged: 0/0
 13909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13913 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13914 ;;Total ram usage:        3 bytes
 13915 ;; Hardware stack levels used:    1
 13916 ;; Hardware stack levels required when called:   12
 13917 ;; This function calls:
 13918 ;;		_x_to_d
 13919 ;; This function is called by:
 13920 ;;		_RTCC_from_RTCC
 13921 ;; This function uses a non-reentrant model
 13922 ;;
 13923                           
 13924                           	psect	text66
 13925  012F5A                     __ptext66:
 13926                           	opt stack 0
 13927  012F5A                     _RTCC_to_caltime:
 13928                           	opt stack 12
 13929  012F5A                     l807:
 13930  012F5A  010F               	movlb	15	; () banked
 13931  012F5C  B93F               	btfsc	63,4,b	;volatile
 13932  012F5E  D7FD               	goto	l807
 13933                           
 13934                           ; BSR set to: 15
 13935                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR0 = 1;
 13936  012F60  010F               	movlb	15	; () banked
 13937  012F62  813F               	bsf	63,0,b	;volatile
 13938                           
 13939                           ;My_RTCC.c: 94: RTCCFGbits.RTCPTR1 = 1;
 13940  012F64  010F               	movlb	15	; () banked
 13941  012F66  833F               	bsf	63,1,b	;volatile
 13942                           
 13943                           ; BSR set to: 15
 13944                           ;My_RTCC.c: 96: tm->YY = x_to_d(RTCVALL);
 13945  012F68  0100               	movlb	0	; () banked
 13946  012F6A  EE20 F00A          	lfsr	2,10
 13947  012F6E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13948  012F70  26D9               	addwf	fsr2l,f,c
 13949  012F72  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13950  012F74  22DA               	addwfc	fsr2h,f,c
 13951  012F76  010F               	movlb	15	; () banked
 13952  012F78  513A               	movf	58,w,b	;volatile
 13953  012F7A  EC7C  F0A2         	call	_x_to_d
 13954  012F7E  6EDF               	movwf	indf2,c
 13955                           
 13956                           ;My_RTCC.c: 97: uint8_t dumy = RTCVALH;
 13957  012F80  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 13958                           
 13959                           ;My_RTCC.c: 98: tm->DD = x_to_d(RTCVALL);
 13960  012F84  0100               	movlb	0	; () banked
 13961  012F86  EE20 F008          	lfsr	2,8
 13962  012F8A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13963  012F8C  26D9               	addwf	fsr2l,f,c
 13964  012F8E  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13965  012F90  22DA               	addwfc	fsr2h,f,c
 13966  012F92  010F               	movlb	15	; () banked
 13967  012F94  513A               	movf	58,w,b	;volatile
 13968  012F96  EC7C  F0A2         	call	_x_to_d
 13969  012F9A  6EDF               	movwf	indf2,c
 13970                           
 13971                           ;My_RTCC.c: 99: tm->MM = x_to_d(RTCVALH);
 13972  012F9C  0100               	movlb	0	; () banked
 13973  012F9E  EE20 F009          	lfsr	2,9
 13974  012FA2  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13975  012FA4  26D9               	addwf	fsr2l,f,c
 13976  012FA6  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13977  012FA8  22DA               	addwfc	fsr2h,f,c
 13978  012FAA  010F               	movlb	15	; () banked
 13979  012FAC  513B               	movf	59,w,b	;volatile
 13980  012FAE  EC7C  F0A2         	call	_x_to_d
 13981  012FB2  6EDF               	movwf	indf2,c
 13982                           
 13983                           ;My_RTCC.c: 100: tm->hh = x_to_d(RTCVALL);
 13984  012FB4  0100               	movlb	0	; () banked
 13985  012FB6  EE20 F006          	lfsr	2,6
 13986  012FBA  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13987  012FBC  26D9               	addwf	fsr2l,f,c
 13988  012FBE  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13989  012FC0  22DA               	addwfc	fsr2h,f,c
 13990  012FC2  010F               	movlb	15	; () banked
 13991  012FC4  513A               	movf	58,w,b	;volatile
 13992  012FC6  EC7C  F0A2         	call	_x_to_d
 13993  012FCA  6EDF               	movwf	indf2,c
 13994                           
 13995                           ;My_RTCC.c: 101: tm->EE = x_to_d(RTCVALH);
 13996  012FCC  0100               	movlb	0	; () banked
 13997  012FCE  EE20 F007          	lfsr	2,7
 13998  012FD2  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13999  012FD4  26D9               	addwf	fsr2l,f,c
 14000  012FD6  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 14001  012FD8  22DA               	addwfc	fsr2h,f,c
 14002  012FDA  010F               	movlb	15	; () banked
 14003  012FDC  513B               	movf	59,w,b	;volatile
 14004  012FDE  EC7C  F0A2         	call	_x_to_d
 14005  012FE2  6EDF               	movwf	indf2,c
 14006                           
 14007                           ;My_RTCC.c: 102: tm->ss = x_to_d(RTCVALL);
 14008  012FE4  0100               	movlb	0	; () banked
 14009  012FE6  EE20 F004          	lfsr	2,4
 14010  012FEA  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 14011  012FEC  26D9               	addwf	fsr2l,f,c
 14012  012FEE  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 14013  012FF0  22DA               	addwfc	fsr2h,f,c
 14014  012FF2  010F               	movlb	15	; () banked
 14015  012FF4  513A               	movf	58,w,b	;volatile
 14016  012FF6  EC7C  F0A2         	call	_x_to_d
 14017  012FFA  6EDF               	movwf	indf2,c
 14018                           
 14019                           ;My_RTCC.c: 103: tm->mm = x_to_d(RTCVALH);
 14020  012FFC  0100               	movlb	0	; () banked
 14021  012FFE  EE20 F005          	lfsr	2,5
 14022  013002  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 14023  013004  26D9               	addwf	fsr2l,f,c
 14024  013006  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 14025  013008  22DA               	addwfc	fsr2h,f,c
 14026  01300A  010F               	movlb	15	; () banked
 14027  01300C  513B               	movf	59,w,b	;volatile
 14028  01300E  EC7C  F0A2         	call	_x_to_d
 14029  013012  6EDF               	movwf	indf2,c
 14030  013014  0012               	return		;funcret
 14031  013016                     __end_of_RTCC_to_caltime:
 14032                           	opt stack 0
 14033                           tblptru	equ	0xFF8
 14034                           tblptrh	equ	0xFF7
 14035                           tblptrl	equ	0xFF6
 14036                           tablat	equ	0xFF5
 14037                           prodh	equ	0xFF4
 14038                           prodl	equ	0xFF3
 14039                           intcon	equ	0xFF2
 14040                           intcon2	equ	0xFF1
 14041                           postinc0	equ	0xFEE
 14042                           wreg	equ	0xFE8
 14043                           indf1	equ	0xFE7
 14044                           postinc1	equ	0xFE6
 14045                           postdec1	equ	0xFE5
 14046                           fsr1h	equ	0xFE2
 14047                           fsr1l	equ	0xFE1
 14048                           indf2	equ	0xFDF
 14049                           postinc2	equ	0xFDE
 14050                           postdec2	equ	0xFDD
 14051                           plusw2	equ	0xFDB
 14052                           fsr2h	equ	0xFDA
 14053                           fsr2l	equ	0xFD9
 14054                           status	equ	0xFD8
 14055                           
 14056 ;; *************** function _x_to_d *****************
 14057 ;; Defined at:
 14058 ;;		line 52 in file "../My_library/My_RTCC.c"
 14059 ;; Parameters:    Size  Location     Type
 14060 ;;  hex             1    wreg     unsigned char 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;  hex             1    1[BANK0 ] unsigned char 
 14063 ;; Return value:  Size  Location     Type
 14064 ;;                  1    wreg      unsigned char 
 14065 ;; Registers used:
 14066 ;;		wreg, status,2, status,0, prodl, prodh
 14067 ;; Tracked objects:
 14068 ;;		On entry : 0/0
 14069 ;;		On exit  : 0/0
 14070 ;;		Unchanged: 0/0
 14071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14076 ;;Total ram usage:        2 bytes
 14077 ;; Hardware stack levels used:    1
 14078 ;; Hardware stack levels required when called:   11
 14079 ;; This function calls:
 14080 ;;		Nothing
 14081 ;; This function is called by:
 14082 ;;		_RTCC_to_caltime
 14083 ;; This function uses a non-reentrant model
 14084 ;;
 14085                           
 14086                           	psect	text67
 14087  0144F8                     __ptext67:
 14088                           	opt stack 0
 14089  0144F8                     _x_to_d:
 14090                           	opt stack 12
 14091                           
 14092                           ;incstack = 0
 14093                           ;x_to_d@hex stored from wreg
 14094  0144F8  0100               	movlb	0	; () banked
 14095  0144FA  6F61               	movwf	x_to_d@hex& (0+255),b
 14096                           
 14097                           ;My_RTCC.c: 53: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 14098  0144FC  C061  F060         	movff	x_to_d@hex,??_x_to_d
 14099  014500  0E0F               	movlw	15
 14100  014502  0100               	movlb	0	; () banked
 14101  014504  1760               	andwf	??_x_to_d& (0+255),f,b
 14102  014506  0100               	movlb	0	; () banked
 14103  014508  3961               	swapf	x_to_d@hex& (0+255),w,b
 14104  01450A  0B0F               	andlw	15
 14105  01450C  0B0F               	andlw	15
 14106  01450E  0D0A               	mullw	10
 14107  014510  50F3               	movf	prodl,w,c
 14108  014512  0100               	movlb	0	; () banked
 14109  014514  2560               	addwf	??_x_to_d& (0+255),w,b
 14110  014516  0012               	return	
 14111  014518                     __end_of_x_to_d:
 14112                           	opt stack 0
 14113                           tblptru	equ	0xFF8
 14114                           tblptrh	equ	0xFF7
 14115                           tblptrl	equ	0xFF6
 14116                           tablat	equ	0xFF5
 14117                           prodh	equ	0xFF4
 14118                           prodl	equ	0xFF3
 14119                           intcon	equ	0xFF2
 14120                           intcon2	equ	0xFF1
 14121                           postinc0	equ	0xFEE
 14122                           wreg	equ	0xFE8
 14123                           indf1	equ	0xFE7
 14124                           postinc1	equ	0xFE6
 14125                           postdec1	equ	0xFE5
 14126                           fsr1h	equ	0xFE2
 14127                           fsr1l	equ	0xFE1
 14128                           indf2	equ	0xFDF
 14129                           postinc2	equ	0xFDE
 14130                           postdec2	equ	0xFDD
 14131                           plusw2	equ	0xFDB
 14132                           fsr2h	equ	0xFDA
 14133                           fsr2l	equ	0xFD9
 14134                           status	equ	0xFD8
 14135                           
 14136 ;; *************** function _ISR *****************
 14137 ;; Defined at:
 14138 ;;		line 39 in file "main.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;		None
 14141 ;; Auto vars:     Size  Location     Type
 14142 ;;		None
 14143 ;; Return value:  Size  Location     Type
 14144 ;;		None               void
 14145 ;; Registers used:
 14146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14147 ;; Tracked objects:
 14148 ;;		On entry : 0/0
 14149 ;;		On exit  : 0/0
 14150 ;;		Unchanged: 0/0
 14151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14155 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14156 ;;Total ram usage:       15 bytes
 14157 ;; Hardware stack levels used:    1
 14158 ;; Hardware stack levels required when called:   10
 14159 ;; This function calls:
 14160 ;;		_ST7032_ISR
 14161 ;;		_UART_ISR
 14162 ;;		_USB_ISR
 14163 ;; This function is called by:
 14164 ;;		Interrupt level 2
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           	psect	intcode
 14169  001008                     __pintcode:
 14170                           	opt stack 0
 14171  001008                     _ISR:
 14172                           	opt stack 11
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;incstack = 0
 14176  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14177  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 14178  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 14179  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 14180  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 14181  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 14182  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 14183  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 14184  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 14185  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 14186  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 14187  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 14188  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 14189  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 14190  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 14191                           
 14192                           ;main.c: 40: USB_ISR();
 14193  001042  ECDD  F0A2         	call	_USB_ISR	;wreg free
 14194                           
 14195                           ;main.c: 41: UART_ISR();
 14196  001046  EC4E  F0A0         	call	_UART_ISR	;wreg free
 14197                           
 14198                           ;main.c: 42: ST7032_ISR();
 14199  00104A  ECC2  F0A2         	call	_ST7032_ISR	;wreg free
 14200                           
 14201                           ;main.c: 43: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 14202  00104E  B4F2               	btfsc	intcon,2,c	;volatile
 14203  001050  AAF2               	btfss	intcon,5,c	;volatile
 14204  001052  D001               	goto	i2l1285
 14205                           
 14206                           ;main.c: 44: INTCONbits.T0IF = 0;
 14207  001054  94F2               	bcf	intcon,2,c	;volatile
 14208  001056                     i2l1285:
 14209                           
 14210                           ;main.c: 45: }
 14211                           ;main.c: 46: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 14212  001056  B09E               	btfsc	3998,0,c	;volatile
 14213  001058  A09D               	btfss	3997,0,c	;volatile
 14214  00105A  D00E               	goto	i2l7942
 14215                           
 14216                           ;main.c: 47: PIR1bits.TMR1IF = 0;
 14217  00105C  909E               	bcf	3998,0,c	;volatile
 14218                           
 14219                           ;main.c: 48: TMR1H = 0xC0;
 14220  00105E  0EC0               	movlw	192
 14221  001060  6ECF               	movwf	4047,c	;volatile
 14222                           
 14223                           ;main.c: 49: LATAbits.LATA0 = !LATAbits.LATA0;
 14224  001062  B089               	btfsc	3977,0,c	;volatile
 14225  001064  D003               	goto	i2u747_40
 14226  001066  6A4C               	clrf	??_ISR& (0+255),c
 14227  001068  2A4C               	incf	??_ISR& (0+255),f,c
 14228  00106A  D001               	goto	i2u748_48
 14229  00106C                     i2u747_40:
 14230  00106C  6A4C               	clrf	??_ISR& (0+255),c
 14231  00106E                     i2u748_48:
 14232  00106E  5089               	movf	3977,w,c	;volatile
 14233  001070  184C               	xorwf	??_ISR,w,c
 14234  001072  0BFE               	andlw	-2
 14235  001074  184C               	xorwf	??_ISR,w,c
 14236  001076  6E89               	movwf	3977,c	;volatile
 14237  001078                     i2l7942:
 14238                           
 14239                           ;main.c: 50: }
 14240                           ;main.c: 51: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 14241  001078  B2A1               	btfsc	4001,1,c	;volatile
 14242  00107A  A2A0               	btfss	4000,1,c	;volatile
 14243  00107C  D001               	goto	i2l1288
 14244                           
 14245                           ;main.c: 52: PIR2bits.TMR3IF = 0;
 14246  00107E  92A1               	bcf	4001,1,c	;volatile
 14247  001080                     i2l1288:
 14248  001080  C05A  FFF5         	movff	??_ISR+14,tablat
 14249  001084  C059  FFF8         	movff	??_ISR+13,tblptru
 14250  001088  C058  FFF7         	movff	??_ISR+12,tblptrh
 14251  00108C  C057  FFF6         	movff	??_ISR+11,tblptrl
 14252  001090  C056  FFF4         	movff	??_ISR+10,prodh
 14253  001094  C055  FFF3         	movff	??_ISR+9,prodl
 14254  001098  C054  FFDA         	movff	??_ISR+8,fsr2h
 14255  00109C  C053  FFD9         	movff	??_ISR+7,fsr2l
 14256  0010A0  C052  FFE2         	movff	??_ISR+6,fsr1h
 14257  0010A4  C051  FFE1         	movff	??_ISR+5,fsr1l
 14258  0010A8  C050  FFEA         	movff	??_ISR+4,fsr0h
 14259  0010AC  C04F  FFE9         	movff	??_ISR+3,fsr0l
 14260  0010B0  C04E  FFFB         	movff	??_ISR+2,pclatu
 14261  0010B4  C04D  FFFA         	movff	??_ISR+1,pclath
 14262  0010B8  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14263  0010BA  0011               	retfie		f
 14264  0010BC                     __end_of_ISR:
 14265                           	opt stack 0
 14266                           pclatu	equ	0xFFB
 14267                           pclath	equ	0xFFA
 14268                           tblptru	equ	0xFF8
 14269                           tblptrh	equ	0xFF7
 14270                           tblptrl	equ	0xFF6
 14271                           tablat	equ	0xFF5
 14272                           prodh	equ	0xFF4
 14273                           prodl	equ	0xFF3
 14274                           intcon	equ	0xFF2
 14275                           intcon2	equ	0xFF1
 14276                           postinc0	equ	0xFEE
 14277                           fsr0h	equ	0xFEA
 14278                           fsr0l	equ	0xFE9
 14279                           wreg	equ	0xFE8
 14280                           indf1	equ	0xFE7
 14281                           postinc1	equ	0xFE6
 14282                           postdec1	equ	0xFE5
 14283                           fsr1h	equ	0xFE2
 14284                           fsr1l	equ	0xFE1
 14285                           indf2	equ	0xFDF
 14286                           postinc2	equ	0xFDE
 14287                           postdec2	equ	0xFDD
 14288                           plusw2	equ	0xFDB
 14289                           fsr2h	equ	0xFDA
 14290                           fsr2l	equ	0xFD9
 14291                           status	equ	0xFD8
 14292                           
 14293 ;; *************** function _USB_ISR *****************
 14294 ;; Defined at:
 14295 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 14296 ;; Parameters:    Size  Location     Type
 14297 ;;		None
 14298 ;; Auto vars:     Size  Location     Type
 14299 ;;		None
 14300 ;; Return value:  Size  Location     Type
 14301 ;;		None               void
 14302 ;; Registers used:
 14303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14304 ;; Tracked objects:
 14305 ;;		On entry : 0/0
 14306 ;;		On exit  : 0/0
 14307 ;;		Unchanged: 0/0
 14308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14313 ;;Total ram usage:        0 bytes
 14314 ;; Hardware stack levels used:    1
 14315 ;; Hardware stack levels required when called:    9
 14316 ;; This function calls:
 14317 ;;		_USBDeviceTasks
 14318 ;; This function is called by:
 14319 ;;		_ISR
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           	psect	text69
 14324  0145BA                     __ptext69:
 14325                           	opt stack 0
 14326  0145BA                     _USB_ISR:
 14327                           	opt stack 11
 14328                           
 14329                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 14330                           
 14331                           ;incstack = 0
 14332  0145BA  EC5A  F08C         	call	_USBDeviceTasks	;wreg free
 14333  0145BE  0012               	return		;funcret
 14334  0145C0                     __end_of_USB_ISR:
 14335                           	opt stack 0
 14336                           pclatu	equ	0xFFB
 14337                           pclath	equ	0xFFA
 14338                           tblptru	equ	0xFF8
 14339                           tblptrh	equ	0xFF7
 14340                           tblptrl	equ	0xFF6
 14341                           tablat	equ	0xFF5
 14342                           prodh	equ	0xFF4
 14343                           prodl	equ	0xFF3
 14344                           intcon	equ	0xFF2
 14345                           intcon2	equ	0xFF1
 14346                           postinc0	equ	0xFEE
 14347                           fsr0h	equ	0xFEA
 14348                           fsr0l	equ	0xFE9
 14349                           wreg	equ	0xFE8
 14350                           indf1	equ	0xFE7
 14351                           postinc1	equ	0xFE6
 14352                           postdec1	equ	0xFE5
 14353                           fsr1h	equ	0xFE2
 14354                           fsr1l	equ	0xFE1
 14355                           indf2	equ	0xFDF
 14356                           postinc2	equ	0xFDE
 14357                           postdec2	equ	0xFDD
 14358                           plusw2	equ	0xFDB
 14359                           fsr2h	equ	0xFDA
 14360                           fsr2l	equ	0xFD9
 14361                           status	equ	0xFD8
 14362                           
 14363 ;; *************** function _USBDeviceTasks *****************
 14364 ;; Defined at:
 14365 ;;		line 489 in file "../My_library/usb/usb_device.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;		None
 14368 ;; Auto vars:     Size  Location     Type
 14369 ;;  i               1   29[COMRAM] unsigned char 
 14370 ;; Return value:  Size  Location     Type
 14371 ;;		None               void
 14372 ;; Registers used:
 14373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14374 ;; Tracked objects:
 14375 ;;		On entry : 0/0
 14376 ;;		On exit  : 0/0
 14377 ;;		Unchanged: 0/0
 14378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14383 ;;Total ram usage:        1 bytes
 14384 ;; Hardware stack levels used:    1
 14385 ;; Hardware stack levels required when called:    8
 14386 ;; This function calls:
 14387 ;;		_USBCtrlEPAllowStatusStage
 14388 ;;		_USBCtrlEPService
 14389 ;;		_USBStallHandler
 14390 ;;		_USBSuspend
 14391 ;;		_USBWakeFromSuspend
 14392 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14393 ;;		i2_USBDeviceInit
 14394 ;; This function is called by:
 14395 ;;		_USB_ISR
 14396 ;; This function uses a non-reentrant model
 14397 ;;
 14398                           
 14399                           	psect	text70
 14400  0118B4                     __ptext70:
 14401                           	opt stack 0
 14402  0118B4                     _USBDeviceTasks:
 14403                           	opt stack 11
 14404                           
 14405                           ;usb_device.c: 491: uint8_t i;
 14406                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 14407                           
 14408                           ;incstack = 0
 14409  0118B4  0423               	decf	_USBDeviceState,w,c	;volatile
 14410  0118B6  B4D8               	btfsc	status,2,c
 14411                           
 14412                           ;usb_device.c: 603: {
 14413                           ;usb_device.c: 613: if(!UCONbits.SE0)
 14414  0118B8  BA65               	btfsc	3941,5,c	;volatile
 14415  0118BA  D008               	goto	i2l6962
 14416                           
 14417                           ;usb_device.c: 614: {
 14418                           ;usb_device.c: 615: {UIR = 0;};
 14419  0118BC  0E00               	movlw	0
 14420  0118BE  6E62               	movwf	3938,c	;volatile
 14421                           
 14422                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 14423  0118C0  010F               	movlb	15	; () banked
 14424  0118C2  8136               	bsf	54,0,b	;volatile
 14425                           
 14426                           ; BSR set to: 15
 14427                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 14428  0118C4  010F               	movlb	15	; () banked
 14429  0118C6  8936               	bsf	54,4,b	;volatile
 14430                           
 14431                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 14432  0118C8  0E02               	movlw	2
 14433  0118CA  6E23               	movwf	_USBDeviceState,c	;volatile
 14434  0118CC                     i2l6962:
 14435                           
 14436                           ;usb_device.c: 622: }
 14437                           ;usb_device.c: 623: }
 14438                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 14439  0118CC  A462               	btfss	3938,2,c	;volatile
 14440  0118CE  D006               	goto	i2l6970
 14441  0118D0  010F               	movlb	15	; () banked
 14442  0118D2  A536               	btfss	54,2,b	;volatile
 14443  0118D4  D003               	goto	i2l6970
 14444                           
 14445                           ; BSR set to: 15
 14446                           ;usb_device.c: 640: {
 14447                           ;usb_device.c: 641: (UIR &= 0xFB);
 14448  0118D6  9462               	bcf	3938,2,c	;volatile
 14449                           
 14450                           ; BSR set to: 15
 14451                           ;usb_device.c: 645: USBWakeFromSuspend();
 14452  0118D8  EC74  F0A1         	call	_USBWakeFromSuspend	;wreg free
 14453  0118DC                     i2l6970:
 14454                           
 14455                           ;usb_device.c: 647: }
 14456                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 14457  0118DC  A265               	btfss	3941,1,c	;volatile
 14458  0118DE  D002               	goto	i2l158
 14459                           
 14460                           ;usb_device.c: 653: {
 14461                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 14462  0118E0  98A1               	bcf	4001,4,c	;volatile
 14463                           
 14464                           ;usb_device.c: 655: return;
 14465  0118E2  0012               	return	
 14466  0118E4                     i2l158:
 14467                           
 14468                           ;usb_device.c: 656: }
 14469                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 14470  0118E4  A062               	btfss	3938,0,c	;volatile
 14471  0118E6  D009               	goto	i2l6984
 14472  0118E8  010F               	movlb	15	; () banked
 14473  0118EA  A136               	btfss	54,0,b	;volatile
 14474  0118EC  D006               	goto	i2l6984
 14475                           
 14476                           ; BSR set to: 15
 14477                           ;usb_device.c: 669: {
 14478                           ;usb_device.c: 670: USBDeviceInit();
 14479  0118EE  ECFF  F08C         	call	i2_USBDeviceInit	;wreg free
 14480                           
 14481                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 14482  0118F2  88A0               	bsf	4000,4,c	;volatile
 14483                           
 14484                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 14485  0118F4  0E04               	movlw	4
 14486  0118F6  6E23               	movwf	_USBDeviceState,c	;volatile
 14487                           
 14488                           ;usb_device.c: 686: (UIR &= 0xFE);
 14489  0118F8  9062               	bcf	3938,0,c	;volatile
 14490  0118FA                     i2l6984:
 14491                           
 14492                           ;usb_device.c: 687: }
 14493                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 14494  0118FA  A862               	btfss	3938,4,c	;volatile
 14495  0118FC  D006               	goto	i2l6992
 14496  0118FE  010F               	movlb	15	; () banked
 14497  011900  A936               	btfss	54,4,b	;volatile
 14498  011902  D003               	goto	i2l6992
 14499                           
 14500                           ; BSR set to: 15
 14501                           ;usb_device.c: 693: {
 14502                           ;usb_device.c: 698: USBSuspend();
 14503  011904  ECD0  F0A1         	call	_USBSuspend	;wreg free
 14504                           
 14505                           ;usb_device.c: 701: (UIR &= 0xEF);
 14506  011908  9862               	bcf	3938,4,c	;volatile
 14507  01190A                     i2l6992:
 14508                           
 14509                           ;usb_device.c: 702: }
 14510                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 14511  01190A  AC62               	btfss	3938,6,c	;volatile
 14512  01190C  D019               	goto	i2l7008
 14513                           
 14514                           ;usb_device.c: 705: {
 14515                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 14516  01190E  010F               	movlb	15	; () banked
 14517  011910  AD36               	btfss	54,6,b	;volatile
 14518  011912  D00E               	goto	i2l6998
 14519                           
 14520                           ; BSR set to: 15
 14521                           ;usb_device.c: 707: {
 14522                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 14523  011914  0E00               	movlw	0
 14524  011916  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14525  011918  0E73               	movlw	115
 14526  01191A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14527  01191C  0E00               	movlw	0
 14528  01191E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14529  011920  0E00               	movlw	0
 14530  011922  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14531  011924  0E00               	movlw	0
 14532  011926  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14533  011928  0E01               	movlw	1
 14534  01192A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14535  01192C  EC8D  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14536  011930                     i2l6998:
 14537                           
 14538                           ;usb_device.c: 709: }
 14539                           ;usb_device.c: 710: (UIR &= 0xBF);
 14540  011930  9C62               	bcf	3938,6,c	;volatile
 14541                           
 14542                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 14543  011932  5026               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14544  011934  A4D8               	btfss	status,2,c
 14545                           
 14546                           ;usb_device.c: 736: {
 14547                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 14548  011936  0626               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 14549                           
 14550                           ;usb_device.c: 738: }
 14551                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 14552  011938  5026               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14553  01193A  B4D8               	btfsc	status,2,c
 14554                           
 14555                           ;usb_device.c: 745: {
 14556                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 14557  01193C  EC8F  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14558  011940                     i2l7008:
 14559                           
 14560                           ;usb_device.c: 747: }
 14561                           ;usb_device.c: 749: }
 14562                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 14563  011940  AA62               	btfss	3938,5,c	;volatile
 14564  011942  D004               	goto	i2l7014
 14565  011944  010F               	movlb	15	; () banked
 14566  011946  BB36               	btfsc	54,5,b	;volatile
 14567                           
 14568                           ; BSR set to: 15
 14569                           ;usb_device.c: 752: {
 14570                           ;usb_device.c: 753: USBStallHandler();
 14571  011948  EC73  F0A0         	call	_USBStallHandler	;wreg free
 14572  01194C                     i2l7014:
 14573                           
 14574                           ;usb_device.c: 754: }
 14575                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 14576  01194C  A262               	btfss	3938,1,c	;volatile
 14577  01194E  D012               	goto	i2l7022
 14578  011950  010F               	movlb	15	; () banked
 14579  011952  A336               	btfss	54,1,b	;volatile
 14580  011954  D00F               	goto	i2l7022
 14581                           
 14582                           ; BSR set to: 15
 14583                           ;usb_device.c: 757: {
 14584                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 14585  011956  0E7F               	movlw	127
 14586  011958  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14587  01195A  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14588  01195C  0E00               	movlw	0
 14589  01195E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14590  011960  0E00               	movlw	0
 14591  011962  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14592  011964  0E00               	movlw	0
 14593  011966  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14594  011968  0E01               	movlw	1
 14595  01196A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14596  01196C  EC8D  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14597                           
 14598                           ;usb_device.c: 759: {UEIR = 0;};
 14599  011970  0E00               	movlw	0
 14600  011972  6E63               	movwf	3939,c	;volatile
 14601  011974                     i2l7022:
 14602                           
 14603                           ;usb_device.c: 767: }
 14604                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 14605  011974  0E04               	movlw	4
 14606  011976  6023               	cpfslt	_USBDeviceState,c	;volatile
 14607  011978  D002               	goto	i2l168
 14608                           
 14609                           ;usb_device.c: 775: {
 14610                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 14611  01197A  98A1               	bcf	4001,4,c	;volatile
 14612                           
 14613                           ;usb_device.c: 777: return;
 14614  01197C  0012               	return	
 14615  01197E                     i2l168:
 14616                           
 14617                           ;usb_device.c: 778: }
 14618                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 14619  01197E  010F               	movlb	15	; () banked
 14620  011980  A736               	btfss	54,3,b	;volatile
 14621  011982  D03B               	goto	i2l169
 14622                           
 14623                           ; BSR set to: 15
 14624                           ;usb_device.c: 784: {
 14625                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 14626  011984  0E00               	movlw	0
 14627  011986  6E4B               	movwf	USBDeviceTasks@i,c
 14628  011988                     i2l7028:
 14629                           
 14630                           ; BSR set to: 15
 14631  011988  0E03               	movlw	3
 14632  01198A  644B               	cpfsgt	USBDeviceTasks@i,c
 14633  01198C  D001               	goto	i2l170
 14634  01198E  D035               	goto	i2l169
 14635  011990                     i2l170:
 14636                           
 14637                           ;usb_device.c: 786: {
 14638                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 14639  011990  A662               	btfss	3938,3,c	;volatile
 14640  011992  D033               	goto	i2l169
 14641                           
 14642                           ;usb_device.c: 788: {
 14643                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 14644  011994  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 14645                           
 14646                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 14647  011998  302D               	rrcf	_USTATcopy,w,c	;volatile
 14648  01199A  32E8               	rrcf	wreg,f,c
 14649  01199C  32E8               	rrcf	wreg,f,c
 14650  01199E  0B0F               	andlw	15
 14651  0119A0  6E2A               	movwf	_endpoint_number,c	;volatile
 14652                           
 14653                           ;usb_device.c: 793: (UIR &= 0xF7);
 14654  0119A2  9662               	bcf	3938,3,c	;volatile
 14655                           
 14656                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 14657  0119A4  B42D               	btfsc	_USTATcopy,2,c	;volatile
 14658  0119A6  D00A               	goto	i2l7042
 14659                           
 14660                           ;usb_device.c: 799: {
 14661                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 14662  0119A8  502A               	movf	_endpoint_number,w,c	;volatile
 14663  0119AA  0D01               	mullw	1
 14664  0119AC  0E18               	movlw	low _ep_data_out
 14665  0119AE  24F3               	addwf	prodl,w,c
 14666  0119B0  6ED9               	movwf	fsr2l,c
 14667  0119B2  0E01               	movlw	high _ep_data_out
 14668  0119B4  20F4               	addwfc	prodh,w,c
 14669  0119B6  6EDA               	movwf	fsr2h,c
 14670  0119B8  0101               	movlb	1	; () banked
 14671  0119BA  D008               	goto	L8
 14672  0119BC                     i2l7042:
 14673                           
 14674                           ;usb_device.c: 802: else
 14675                           ;usb_device.c: 803: {
 14676                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 14677  0119BC  502A               	movf	_endpoint_number,w,c	;volatile
 14678  0119BE  0D01               	mullw	1
 14679  0119C0  0E16               	movlw	low _ep_data_in
 14680  0119C2  24F3               	addwf	prodl,w,c
 14681  0119C4  6ED9               	movwf	fsr2l,c
 14682  0119C6  0E00               	movlw	high _ep_data_in
 14683  0119C8  20F4               	addwfc	prodh,w,c
 14684  0119CA  6EDA               	movwf	fsr2h,c
 14685  0119CC                     L8:
 14686  0119CC  70DF               	btg	indf2,0,c
 14687                           
 14688                           ;usb_device.c: 805: }
 14689                           ;usb_device.c: 810: if(endpoint_number == 0)
 14690  0119CE  502A               	movf	_endpoint_number,w,c	;volatile
 14691  0119D0  A4D8               	btfss	status,2,c
 14692  0119D2  D003               	goto	i2l7048
 14693                           
 14694                           ;usb_device.c: 811: {
 14695                           ;usb_device.c: 812: USBCtrlEPService();
 14696  0119D4  ECC2  F095         	call	_USBCtrlEPService	;wreg free
 14697                           
 14698                           ;usb_device.c: 813: }
 14699  0119D8  D00E               	goto	i2l7050
 14700  0119DA                     i2l7048:
 14701                           
 14702                           ;usb_device.c: 814: else
 14703                           ;usb_device.c: 815: {
 14704                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 14705  0119DA  0E00               	movlw	0
 14706  0119DC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14707  0119DE  0E72               	movlw	114
 14708  0119E0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14709  0119E2  0E2D               	movlw	low _USTATcopy
 14710  0119E4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14711  0119E6  0E00               	movlw	high _USTATcopy
 14712  0119E8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14713  0119EA  0E00               	movlw	0
 14714  0119EC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14715  0119EE  0E00               	movlw	0
 14716  0119F0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14717  0119F2  EC8D  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14718  0119F6                     i2l7050:
 14719  0119F6  2A4B               	incf	USBDeviceTasks@i,f,c
 14720  0119F8  D7C7               	goto	i2l7028
 14721  0119FA                     i2l169:
 14722                           
 14723                           ;usb_device.c: 822: }
 14724                           ;usb_device.c: 823: }
 14725                           ;usb_device.c: 824: }
 14726                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 14727  0119FA  98A1               	bcf	4001,4,c	;volatile
 14728  0119FC  0012               	return		;funcret
 14729  0119FE                     __end_of_USBDeviceTasks:
 14730                           	opt stack 0
 14731                           pclatu	equ	0xFFB
 14732                           pclath	equ	0xFFA
 14733                           tblptru	equ	0xFF8
 14734                           tblptrh	equ	0xFF7
 14735                           tblptrl	equ	0xFF6
 14736                           tablat	equ	0xFF5
 14737                           prodh	equ	0xFF4
 14738                           prodl	equ	0xFF3
 14739                           intcon	equ	0xFF2
 14740                           intcon2	equ	0xFF1
 14741                           postinc0	equ	0xFEE
 14742                           fsr0h	equ	0xFEA
 14743                           fsr0l	equ	0xFE9
 14744                           wreg	equ	0xFE8
 14745                           indf1	equ	0xFE7
 14746                           postinc1	equ	0xFE6
 14747                           postdec1	equ	0xFE5
 14748                           fsr1h	equ	0xFE2
 14749                           fsr1l	equ	0xFE1
 14750                           indf2	equ	0xFDF
 14751                           postinc2	equ	0xFDE
 14752                           postdec2	equ	0xFDD
 14753                           plusw2	equ	0xFDB
 14754                           fsr2h	equ	0xFDA
 14755                           fsr2l	equ	0xFD9
 14756                           status	equ	0xFD8
 14757                           
 14758 ;; *************** function i2_USBDeviceInit *****************
 14759 ;; Defined at:
 14760 ;;		line 298 in file "../My_library/usb/usb_device.c"
 14761 ;; Parameters:    Size  Location     Type
 14762 ;;		None
 14763 ;; Auto vars:     Size  Location     Type
 14764 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 14765 ;; Return value:  Size  Location     Type
 14766 ;;		None               void
 14767 ;; Registers used:
 14768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14769 ;; Tracked objects:
 14770 ;;		On entry : 0/0
 14771 ;;		On exit  : 0/0
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14778 ;;Total ram usage:        1 bytes
 14779 ;; Hardware stack levels used:    1
 14780 ;; Hardware stack levels required when called:    1
 14781 ;; This function calls:
 14782 ;;		i2_memset
 14783 ;; This function is called by:
 14784 ;;		_USBDeviceTasks
 14785 ;; This function uses a non-reentrant model
 14786 ;;
 14787                           
 14788                           	psect	text71
 14789  0119FE                     __ptext71:
 14790                           	opt stack 0
 14791  0119FE                     i2_USBDeviceInit:
 14792                           	opt stack 17
 14793                           
 14794                           ;usb_device.c: 300: uint8_t i;
 14795                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 14796                           
 14797                           ;incstack = 0
 14798  0119FE  98A0               	bcf	4000,4,c	;volatile
 14799                           
 14800                           ;usb_device.c: 305: {UEIR = 0;};
 14801  011A00  0E00               	movlw	0
 14802  011A02  6E63               	movwf	3939,c	;volatile
 14803                           
 14804                           ;usb_device.c: 308: {UIR = 0;};
 14805  011A04  0E00               	movlw	0
 14806  011A06  6E62               	movwf	3938,c	;volatile
 14807                           
 14808                           ;usb_device.c: 311: UEP0 = 0;
 14809  011A08  0E00               	movlw	0
 14810  011A0A  010F               	movlb	15	; () banked
 14811  011A0C  6F26               	movwf	38,b	;volatile
 14812                           
 14813                           ; BSR set to: 15
 14814                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 14815  011A0E  0E27               	movlw	39
 14816  011A10  6E2E               	movwf	i2memset@p1,c
 14817  011A12  0E0F               	movlw	15
 14818  011A14  6E2F               	movwf	i2memset@p1+1,c
 14819  011A16  0E00               	movlw	0
 14820  011A18  6E31               	movwf	i2memset@c+1,c
 14821  011A1A  0E00               	movlw	0
 14822  011A1C  6E30               	movwf	i2memset@c,c
 14823  011A1E  0E00               	movlw	0
 14824  011A20  6E33               	movwf	i2memset@n+1,c
 14825  011A22  0E02               	movlw	2
 14826  011A24  6E32               	movwf	i2memset@n,c
 14827  011A26  ECE6  F0A1         	call	i2_memset	;wreg free
 14828                           
 14829                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14830  011A2A  0E16               	movlw	22
 14831  011A2C  010F               	movlb	15	; () banked
 14832  011A2E  6F39               	movwf	57,b	;volatile
 14833                           
 14834                           ; BSR set to: 15
 14835  011A30  0E9F               	movlw	159
 14836  011A32  010F               	movlb	15	; () banked
 14837  011A34  6F37               	movwf	55,b	;volatile
 14838                           
 14839                           ; BSR set to: 15
 14840  011A36  0E7B               	movlw	123
 14841  011A38  010F               	movlb	15	; () banked
 14842  011A3A  6F36               	movwf	54,b	;volatile
 14843                           
 14844                           ; BSR set to: 15
 14845                           ;usb_device.c: 318: ;
 14846                           ;usb_device.c: 321: ;
 14847                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14848  011A3C  0E00               	movlw	0
 14849  011A3E  6E36               	movwf	i2USBDeviceInit@i,c
 14850  011A40                     i2l6886:
 14851                           
 14852                           ; BSR set to: 15
 14853  011A40  0E0B               	movlw	11
 14854  011A42  6436               	cpfsgt	i2USBDeviceInit@i,c
 14855  011A44  D001               	goto	i2l6890
 14856  011A46  D00E               	goto	i2l146
 14857  011A48                     i2l6890:
 14858                           
 14859                           ;usb_device.c: 325: {
 14860                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 14861  011A48  5036               	movf	i2USBDeviceInit@i,w,c
 14862  011A4A  0D04               	mullw	4
 14863  011A4C  0E00               	movlw	0
 14864  011A4E  24F3               	addwf	prodl,w,c
 14865  011A50  6ED9               	movwf	fsr2l,c
 14866  011A52  0E0D               	movlw	13
 14867  011A54  20F4               	addwfc	prodh,w,c
 14868  011A56  6EDA               	movwf	fsr2h,c
 14869  011A58  6ADE               	clrf	postinc2,c
 14870  011A5A  6ADE               	clrf	postinc2,c
 14871  011A5C  6ADE               	clrf	postinc2,c
 14872  011A5E  6ADD               	clrf	postdec2,c
 14873  011A60  2A36               	incf	i2USBDeviceInit@i,f,c
 14874  011A62  D7EE               	goto	i2l6886
 14875  011A64                     i2l146:
 14876                           
 14877                           ;usb_device.c: 327: }
 14878                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 14879  011A64  8C65               	bsf	3941,6,c	;volatile
 14880                           
 14881                           ;usb_device.c: 333: UADDR = 0x00;
 14882  011A66  0E00               	movlw	0
 14883  011A68  010F               	movlb	15	; () banked
 14884  011A6A  6F38               	movwf	56,b	;volatile
 14885                           
 14886                           ; BSR set to: 15
 14887                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 14888  011A6C  9865               	bcf	3941,4,c	;volatile
 14889                           
 14890                           ; BSR set to: 15
 14891                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 14892  011A6E  9C65               	bcf	3941,6,c	;volatile
 14893                           
 14894                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 14895  011A70  D009               	goto	i2l6910
 14896  011A72                     i2l6902:
 14897                           
 14898                           ;usb_device.c: 343: {
 14899                           ;usb_device.c: 344: (UIR &= 0xF7);
 14900  011A72  9662               	bcf	3938,3,c	;volatile
 14901                           
 14902                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 14903  011A74  0E00               	movlw	0
 14904  011A76  6E0D               	movwf	_inPipes+3,c	;volatile
 14905                           
 14906                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 14907  011A78  0E00               	movlw	0
 14908  011A7A  6E04               	movwf	_outPipes+3,c	;volatile
 14909                           
 14910                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 14911  011A7C  0E00               	movlw	0
 14912  011A7E  6E06               	movwf	_outPipes+5,c	;volatile
 14913  011A80  0E00               	movlw	0
 14914  011A82  6E05               	movwf	_outPipes+4,c	;volatile
 14915  011A84                     i2l6910:
 14916  011A84  B662               	btfsc	3938,3,c	;volatile
 14917  011A86  D7F5               	goto	i2l6902
 14918                           
 14919                           ;usb_device.c: 349: }
 14920                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 14921  011A88  0E01               	movlw	1
 14922  011A8A  6E24               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14923                           
 14924                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 14925  011A8C  0E01               	movlw	1
 14926  011A8E  6E25               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14927                           
 14928                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 14929  011A90  0E00               	movlw	0
 14930  011A92  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14931                           
 14932                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 14933  011A94  0E00               	movlw	0
 14934  011A96  6E21               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14935                           
 14936                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 14937  011A98  0E00               	movlw	0
 14938  011A9A  0101               	movlb	1	; () banked
 14939  011A9C  6F2E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 14940                           
 14941                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 14942  011A9E  0E00               	movlw	0
 14943  011AA0  6E36               	movwf	i2USBDeviceInit@i,c
 14944  011AA2                     i2l6914:
 14945                           
 14946                           ; BSR set to: 1
 14947  011AA2  0E02               	movlw	2
 14948  011AA4  6436               	cpfsgt	i2USBDeviceInit@i,c
 14949  011AA6  D001               	goto	i2l6918
 14950  011AA8  D02E               	goto	i2l6924
 14951  011AAA                     i2l6918:
 14952                           
 14953                           ;usb_device.c: 363: {
 14954                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 14955  011AAA  5036               	movf	i2USBDeviceInit@i,w,c
 14956  011AAC  0D02               	mullw	2
 14957  011AAE  0E10               	movlw	low _pBDTEntryIn
 14958  011AB0  24F3               	addwf	prodl,w,c
 14959  011AB2  6ED9               	movwf	fsr2l,c
 14960  011AB4  0E00               	movlw	high _pBDTEntryIn
 14961  011AB6  20F4               	addwfc	prodh,w,c
 14962  011AB8  6EDA               	movwf	fsr2h,c
 14963  011ABA  0E00               	movlw	0
 14964  011ABC  6EDE               	movwf	postinc2,c
 14965  011ABE  0E00               	movlw	0
 14966  011AC0  6EDD               	movwf	postdec2,c
 14967                           
 14968                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 14969  011AC2  5036               	movf	i2USBDeviceInit@i,w,c
 14970  011AC4  0D02               	mullw	2
 14971  011AC6  0E0A               	movlw	low _pBDTEntryOut
 14972  011AC8  24F3               	addwf	prodl,w,c
 14973  011ACA  6ED9               	movwf	fsr2l,c
 14974  011ACC  0E01               	movlw	high _pBDTEntryOut
 14975  011ACE  20F4               	addwfc	prodh,w,c
 14976  011AD0  6EDA               	movwf	fsr2h,c
 14977  011AD2  0E00               	movlw	0
 14978  011AD4  6EDE               	movwf	postinc2,c
 14979  011AD6  0E00               	movlw	0
 14980  011AD8  6EDD               	movwf	postdec2,c
 14981                           
 14982                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 14983  011ADA  5036               	movf	i2USBDeviceInit@i,w,c
 14984  011ADC  0D01               	mullw	1
 14985  011ADE  0E16               	movlw	low _ep_data_in
 14986  011AE0  24F3               	addwf	prodl,w,c
 14987  011AE2  6ED9               	movwf	fsr2l,c
 14988  011AE4  0E00               	movlw	high _ep_data_in
 14989  011AE6  20F4               	addwfc	prodh,w,c
 14990  011AE8  6EDA               	movwf	fsr2h,c
 14991  011AEA  0E00               	movlw	0
 14992  011AEC  6EDF               	movwf	indf2,c
 14993                           
 14994                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 14995  011AEE  5036               	movf	i2USBDeviceInit@i,w,c
 14996  011AF0  0D01               	mullw	1
 14997  011AF2  0E18               	movlw	low _ep_data_out
 14998  011AF4  24F3               	addwf	prodl,w,c
 14999  011AF6  6ED9               	movwf	fsr2l,c
 15000  011AF8  0E01               	movlw	high _ep_data_out
 15001  011AFA  20F4               	addwfc	prodh,w,c
 15002  011AFC  6EDA               	movwf	fsr2h,c
 15003  011AFE  0E00               	movlw	0
 15004  011B00  6EDF               	movwf	indf2,c
 15005  011B02  2A36               	incf	i2USBDeviceInit@i,f,c
 15006  011B04  D7CE               	goto	i2l6914
 15007  011B06                     i2l6924:
 15008                           
 15009                           ;usb_device.c: 368: }
 15010                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15011  011B06  0E08               	movlw	8
 15012  011B08  6E10               	movwf	_pBDTEntryIn,c
 15013  011B0A  0E0D               	movlw	13
 15014  011B0C  6E11               	movwf	_pBDTEntryIn+1,c
 15015                           
 15016                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 15017  011B0E  0E16               	movlw	22
 15018  011B10  010F               	movlb	15	; () banked
 15019  011B12  6F26               	movwf	38,b	;volatile
 15020                           
 15021                           ; BSR set to: 15
 15022                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15023  011B14  0E0D               	movlw	13
 15024  011B16  010D               	movlb	13	; () banked
 15025  011B18  6F03               	movwf	3,b	;volatile
 15026  011B1A  0E30               	movlw	48
 15027  011B1C  6F02               	movwf	2,b	;volatile
 15028                           
 15029                           ; BSR set to: 13
 15030                           ;usb_device.c: 376: BDT[0].CNT = 8;
 15031  011B1E  0E08               	movlw	8
 15032  011B20  010D               	movlb	13	; () banked
 15033  011B22  6F01               	movwf	1,b	;volatile
 15034                           
 15035                           ; BSR set to: 13
 15036                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 15037  011B24  0E04               	movlw	4
 15038  011B26  010D               	movlb	13	; () banked
 15039  011B28  6F00               	movwf	0,b	;volatile
 15040                           
 15041                           ; BSR set to: 13
 15042                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 15043  011B2A  010D               	movlb	13	; () banked
 15044  011B2C  8F00               	bsf	0,7,b	;volatile
 15045                           
 15046                           ; BSR set to: 13
 15047                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 15048  011B2E  0E00               	movlw	0
 15049  011B30  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 15050                           
 15051                           ; BSR set to: 13
 15052                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 15053  011B32  0E00               	movlw	0
 15054  011B34  6E23               	movwf	_USBDeviceState,c	;volatile
 15055                           
 15056                           ; BSR set to: 13
 15057  011B36  0012               	return		;funcret
 15058  011B38                     __end_ofi2_USBDeviceInit:
 15059                           	opt stack 0
 15060                           pclatu	equ	0xFFB
 15061                           pclath	equ	0xFFA
 15062                           tblptru	equ	0xFF8
 15063                           tblptrh	equ	0xFF7
 15064                           tblptrl	equ	0xFF6
 15065                           tablat	equ	0xFF5
 15066                           prodh	equ	0xFF4
 15067                           prodl	equ	0xFF3
 15068                           intcon	equ	0xFF2
 15069                           intcon2	equ	0xFF1
 15070                           postinc0	equ	0xFEE
 15071                           fsr0h	equ	0xFEA
 15072                           fsr0l	equ	0xFE9
 15073                           wreg	equ	0xFE8
 15074                           indf1	equ	0xFE7
 15075                           postinc1	equ	0xFE6
 15076                           postdec1	equ	0xFE5
 15077                           fsr1h	equ	0xFE2
 15078                           fsr1l	equ	0xFE1
 15079                           indf2	equ	0xFDF
 15080                           postinc2	equ	0xFDE
 15081                           postdec2	equ	0xFDD
 15082                           plusw2	equ	0xFDB
 15083                           fsr2h	equ	0xFDA
 15084                           fsr2l	equ	0xFD9
 15085                           status	equ	0xFD8
 15086                           
 15087 ;; *************** function _USBWakeFromSuspend *****************
 15088 ;; Defined at:
 15089 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 15090 ;; Parameters:    Size  Location     Type
 15091 ;;		None
 15092 ;; Auto vars:     Size  Location     Type
 15093 ;;		None
 15094 ;; Return value:  Size  Location     Type
 15095 ;;		None               void
 15096 ;; Registers used:
 15097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15098 ;; Tracked objects:
 15099 ;;		On entry : 0/0
 15100 ;;		On exit  : 0/0
 15101 ;;		Unchanged: 0/0
 15102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15107 ;;Total ram usage:        0 bytes
 15108 ;; Hardware stack levels used:    1
 15109 ;; Hardware stack levels required when called:    4
 15110 ;; This function calls:
 15111 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15112 ;; This function is called by:
 15113 ;;		_USBDeviceTasks
 15114 ;; This function uses a non-reentrant model
 15115 ;;
 15116                           
 15117                           	psect	text72
 15118  0142E8                     __ptext72:
 15119                           	opt stack 0
 15120  0142E8                     _USBWakeFromSuspend:
 15121                           	opt stack 14
 15122                           
 15123                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 15124                           
 15125                           ; BSR set to: 13
 15126                           ;incstack = 0
 15127  0142E8  0E00               	movlw	0
 15128  0142EA  0101               	movlb	1	; () banked
 15129  0142EC  6F2E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15130                           
 15131                           ; BSR set to: 1
 15132                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 15133  0142EE  0E00               	movlw	0
 15134  0142F0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15135  0142F2  0E74               	movlw	116
 15136  0142F4  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15137  0142F6  0E00               	movlw	0
 15138  0142F8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15139  0142FA  0E00               	movlw	0
 15140  0142FC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15141  0142FE  0E00               	movlw	0
 15142  014300  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15143  014302  0E00               	movlw	0
 15144  014304  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15145  014306  EC8D  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15146                           
 15147                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 15148  01430A  9265               	bcf	3941,1,c	;volatile
 15149                           
 15150                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 15151  01430C  010F               	movlb	15	; () banked
 15152  01430E  9536               	bcf	54,2,b	;volatile
 15153                           
 15154                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 15155  014310  D001               	goto	i2l6578
 15156  014312                     i2l6576:
 15157                           
 15158                           ;usb_device.c: 2342: {
 15159                           ;usb_device.c: 2343: (UIR &= 0xFB);
 15160  014312  9462               	bcf	3938,2,c	;volatile
 15161  014314                     i2l6578:
 15162  014314  A462               	btfss	3938,2,c	;volatile
 15163  014316  0012               	return	
 15164  014318  D7FC               	goto	i2l6576
 15165  01431A                     __end_of_USBWakeFromSuspend:
 15166                           	opt stack 0
 15167                           pclatu	equ	0xFFB
 15168                           pclath	equ	0xFFA
 15169                           tblptru	equ	0xFF8
 15170                           tblptrh	equ	0xFF7
 15171                           tblptrl	equ	0xFF6
 15172                           tablat	equ	0xFF5
 15173                           prodh	equ	0xFF4
 15174                           prodl	equ	0xFF3
 15175                           intcon	equ	0xFF2
 15176                           intcon2	equ	0xFF1
 15177                           postinc0	equ	0xFEE
 15178                           fsr0h	equ	0xFEA
 15179                           fsr0l	equ	0xFE9
 15180                           wreg	equ	0xFE8
 15181                           indf1	equ	0xFE7
 15182                           postinc1	equ	0xFE6
 15183                           postdec1	equ	0xFE5
 15184                           fsr1h	equ	0xFE2
 15185                           fsr1l	equ	0xFE1
 15186                           indf2	equ	0xFDF
 15187                           postinc2	equ	0xFDE
 15188                           postdec2	equ	0xFDD
 15189                           plusw2	equ	0xFDB
 15190                           fsr2h	equ	0xFDA
 15191                           fsr2l	equ	0xFD9
 15192                           status	equ	0xFD8
 15193                           
 15194 ;; *************** function _USBSuspend *****************
 15195 ;; Defined at:
 15196 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 15197 ;; Parameters:    Size  Location     Type
 15198 ;;		None
 15199 ;; Auto vars:     Size  Location     Type
 15200 ;;		None
 15201 ;; Return value:  Size  Location     Type
 15202 ;;		None               void
 15203 ;; Registers used:
 15204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15205 ;; Tracked objects:
 15206 ;;		On entry : 0/0
 15207 ;;		On exit  : 0/0
 15208 ;;		Unchanged: 0/0
 15209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15214 ;;Total ram usage:        0 bytes
 15215 ;; Hardware stack levels used:    1
 15216 ;; Hardware stack levels required when called:    4
 15217 ;; This function calls:
 15218 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15219 ;; This function is called by:
 15220 ;;		_USBDeviceTasks
 15221 ;; This function uses a non-reentrant model
 15222 ;;
 15223                           
 15224                           	psect	text73
 15225  0143A0                     __ptext73:
 15226                           	opt stack 0
 15227  0143A0                     _USBSuspend:
 15228                           	opt stack 14
 15229                           
 15230                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 15231                           
 15232                           ;incstack = 0
 15233  0143A0  010F               	movlb	15	; () banked
 15234  0143A2  8536               	bsf	54,2,b	;volatile
 15235                           
 15236                           ; BSR set to: 15
 15237                           ;usb_device.c: 2271: (UIR &= 0xEF);
 15238  0143A4  9862               	bcf	3938,4,c	;volatile
 15239                           
 15240                           ; BSR set to: 15
 15241                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 15242  0143A6  8265               	bsf	3941,1,c	;volatile
 15243                           
 15244                           ; BSR set to: 15
 15245                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 15246  0143A8  0E01               	movlw	1
 15247  0143AA  0101               	movlb	1	; () banked
 15248  0143AC  6F2E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15249                           
 15250                           ; BSR set to: 1
 15251                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 15252  0143AE  0E00               	movlw	0
 15253  0143B0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15254  0143B2  0E75               	movlw	117
 15255  0143B4  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15256  0143B6  0E00               	movlw	0
 15257  0143B8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15258  0143BA  0E00               	movlw	0
 15259  0143BC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15260  0143BE  0E00               	movlw	0
 15261  0143C0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15262  0143C2  0E00               	movlw	0
 15263  0143C4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15264  0143C6  EC8D  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15265  0143CA  0012               	return		;funcret
 15266  0143CC                     __end_of_USBSuspend:
 15267                           	opt stack 0
 15268                           pclatu	equ	0xFFB
 15269                           pclath	equ	0xFFA
 15270                           tblptru	equ	0xFF8
 15271                           tblptrh	equ	0xFF7
 15272                           tblptrl	equ	0xFF6
 15273                           tablat	equ	0xFF5
 15274                           prodh	equ	0xFF4
 15275                           prodl	equ	0xFF3
 15276                           intcon	equ	0xFF2
 15277                           intcon2	equ	0xFF1
 15278                           postinc0	equ	0xFEE
 15279                           fsr0h	equ	0xFEA
 15280                           fsr0l	equ	0xFE9
 15281                           wreg	equ	0xFE8
 15282                           indf1	equ	0xFE7
 15283                           postinc1	equ	0xFE6
 15284                           postdec1	equ	0xFE5
 15285                           fsr1h	equ	0xFE2
 15286                           fsr1l	equ	0xFE1
 15287                           indf2	equ	0xFDF
 15288                           postinc2	equ	0xFDE
 15289                           postdec2	equ	0xFDD
 15290                           plusw2	equ	0xFDB
 15291                           fsr2h	equ	0xFDA
 15292                           fsr2l	equ	0xFD9
 15293                           status	equ	0xFD8
 15294                           
 15295 ;; *************** function _USBStallHandler *****************
 15296 ;; Defined at:
 15297 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 15298 ;; Parameters:    Size  Location     Type
 15299 ;;		None
 15300 ;; Auto vars:     Size  Location     Type
 15301 ;;		None
 15302 ;; Return value:  Size  Location     Type
 15303 ;;		None               void
 15304 ;; Registers used:
 15305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15306 ;; Tracked objects:
 15307 ;;		On entry : 0/0
 15308 ;;		On exit  : 0/0
 15309 ;;		Unchanged: 0/0
 15310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15315 ;;Total ram usage:        1 bytes
 15316 ;; Hardware stack levels used:    1
 15317 ;; This function calls:
 15318 ;;		Nothing
 15319 ;; This function is called by:
 15320 ;;		_USBDeviceTasks
 15321 ;; This function uses a non-reentrant model
 15322 ;;
 15323                           
 15324                           	psect	text74
 15325  0140E6                     __ptext74:
 15326                           	opt stack 0
 15327  0140E6                     _USBStallHandler:
 15328                           	opt stack 18
 15329                           
 15330                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 15331                           
 15332                           ;incstack = 0
 15333  0140E6  010F               	movlb	15	; () banked
 15334  0140E8  A126               	btfss	38,0,b	;volatile
 15335  0140EA  D01E               	goto	i2l308
 15336                           
 15337                           ; BSR set to: 15
 15338                           ;usb_device.c: 2215: {
 15339                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 15340  0140EC  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15341  0140F0  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15342  0140F4  0E80               	movlw	128
 15343  0140F6  18DE               	xorwf	postinc2,w,c
 15344  0140F8  A4D8               	btfss	status,2,c
 15345  0140FA  D014               	goto	i2l6600
 15346                           
 15347                           ; BSR set to: 15
 15348  0140FC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15349  014100  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15350  014104  0E84               	movlw	132
 15351  014106  18DE               	xorwf	postinc2,w,c
 15352  014108  A4D8               	btfss	status,2,c
 15353  01410A  D00C               	goto	i2l6600
 15354                           
 15355                           ; BSR set to: 15
 15356                           ;usb_device.c: 2218: {
 15357                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15358  01410C  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15359  014110  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15360  014114  0E0C               	movlw	12
 15361  014116  6EDF               	movwf	indf2,c
 15362                           
 15363                           ; BSR set to: 15
 15364                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15365  014118  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15366  01411C  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15367  014120  0E00               	movlw	0
 15368  014122  8EDB               	bsf	plusw2,7,c
 15369  014124                     i2l6600:
 15370                           
 15371                           ; BSR set to: 15
 15372                           ;usb_device.c: 2222: }
 15373                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 15374  014124  010F               	movlb	15	; () banked
 15375  014126  9126               	bcf	38,0,b	;volatile
 15376  014128                     i2l308:
 15377                           
 15378                           ; BSR set to: 15
 15379                           ;usb_device.c: 2224: }
 15380                           ;usb_device.c: 2226: (UIR &= 0xDF);
 15381  014128  9A62               	bcf	3938,5,c	;volatile
 15382                           
 15383                           ; BSR set to: 15
 15384  01412A  0012               	return		;funcret
 15385  01412C                     __end_of_USBStallHandler:
 15386                           	opt stack 0
 15387                           pclatu	equ	0xFFB
 15388                           pclath	equ	0xFFA
 15389                           tblptru	equ	0xFF8
 15390                           tblptrh	equ	0xFF7
 15391                           tblptrl	equ	0xFF6
 15392                           tablat	equ	0xFF5
 15393                           prodh	equ	0xFF4
 15394                           prodl	equ	0xFF3
 15395                           intcon	equ	0xFF2
 15396                           intcon2	equ	0xFF1
 15397                           postinc0	equ	0xFEE
 15398                           fsr0h	equ	0xFEA
 15399                           fsr0l	equ	0xFE9
 15400                           wreg	equ	0xFE8
 15401                           indf1	equ	0xFE7
 15402                           postinc1	equ	0xFE6
 15403                           postdec1	equ	0xFE5
 15404                           fsr1h	equ	0xFE2
 15405                           fsr1l	equ	0xFE1
 15406                           indf2	equ	0xFDF
 15407                           postinc2	equ	0xFDE
 15408                           postdec2	equ	0xFDD
 15409                           plusw2	equ	0xFDB
 15410                           fsr2h	equ	0xFDA
 15411                           fsr2l	equ	0xFD9
 15412                           status	equ	0xFD8
 15413                           
 15414 ;; *************** function _USBCtrlEPService *****************
 15415 ;; Defined at:
 15416 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 15417 ;; Parameters:    Size  Location     Type
 15418 ;;		None
 15419 ;; Auto vars:     Size  Location     Type
 15420 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 15421 ;; Return value:  Size  Location     Type
 15422 ;;		None               void
 15423 ;; Registers used:
 15424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15425 ;; Tracked objects:
 15426 ;;		On entry : 0/0
 15427 ;;		On exit  : 0/0
 15428 ;;		Unchanged: 0/0
 15429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15432 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15433 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15434 ;;Total ram usage:        3 bytes
 15435 ;; Hardware stack levels used:    1
 15436 ;; Hardware stack levels required when called:    7
 15437 ;; This function calls:
 15438 ;;		_USBCtrlTrfInHandler
 15439 ;;		_USBCtrlTrfOutHandler
 15440 ;;		_USBCtrlTrfSetupHandler
 15441 ;; This function is called by:
 15442 ;;		_USBDeviceTasks
 15443 ;; This function uses a non-reentrant model
 15444 ;;
 15445                           
 15446                           	psect	text75
 15447  012B84                     __ptext75:
 15448                           	opt stack 0
 15449  012B84                     _USBCtrlEPService:
 15450                           	opt stack 11
 15451                           
 15452                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 15453                           
 15454                           ; BSR set to: 15
 15455                           ;incstack = 0
 15456  012B84  0E2D               	movlw	45
 15457  012B86  6E26               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 15458                           
 15459                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 15460  012B88  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15461  012B8C  0EFD               	movlw	253
 15462  012B8E  1648               	andwf	??_USBCtrlEPService,f,c
 15463  012B90  A4D8               	btfss	status,2,c
 15464  012B92  D057               	goto	i2l6634
 15465                           
 15466                           ;usb_device.c: 2380: {
 15467                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 15468  012B94  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15469  012B98  90D8               	bcf	status,0,c
 15470  012B9A  3248               	rrcf	??_USBCtrlEPService,f,c
 15471  012B9C  0E3F               	movlw	63
 15472  012B9E  1648               	andwf	??_USBCtrlEPService,f,c
 15473  012BA0  5048               	movf	??_USBCtrlEPService,w,c
 15474  012BA2  0D04               	mullw	4
 15475  012BA4  0E00               	movlw	0
 15476  012BA6  24F3               	addwf	prodl,w,c
 15477  012BA8  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 15478  012BAA  0E0D               	movlw	13
 15479  012BAC  20F4               	addwfc	prodh,w,c
 15480  012BAE  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15481                           
 15482                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15483  012BB0  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15484  012BB4  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15485                           
 15486                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 15487  012BB8  0E04               	movlw	4
 15488  012BBA  1A1B               	xorwf	_pBDTEntryEP0OutNext,f,c
 15489                           
 15490                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 15491  012BBC  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15492  012BC0  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15493  012BC4  30DF               	rrcf	indf2,w,c
 15494  012BC6  32E8               	rrcf	wreg,f,c
 15495  012BC8  0B0F               	andlw	15
 15496  012BCA  0A0D               	xorlw	13
 15497  012BCC  A4D8               	btfss	status,2,c
 15498  012BCE  D036               	goto	i2l6632
 15499                           
 15500                           ;usb_device.c: 2397: {
 15501                           ;usb_device.c: 2398: unsigned char setup_cnt;
 15502                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 15503  012BD0  0E00               	movlw	0
 15504  012BD2  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 15505  012BD4                     i2l6616:
 15506  012BD4  0E07               	movlw	7
 15507  012BD6  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 15508  012BD8  D001               	goto	i2l6620
 15509  012BDA  D023               	goto	i2l6628
 15510  012BDC                     i2l6620:
 15511                           
 15512                           ;usb_device.c: 2405: {
 15513                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 15514  012BDC  EE20 F002          	lfsr	2,2
 15515  012BE0  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15516  012BE2  26D9               	addwf	fsr2l,f,c
 15517  012BE4  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15518  012BE6  22DA               	addwfc	fsr2h,f,c
 15519  012BE8  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 15520  012BEC  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 15521  012BF0  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 15522  012BF4  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 15523  012BF8  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 15524  012BFA  0D01               	mullw	1
 15525  012BFC  0E30               	movlw	48
 15526  012BFE  24F3               	addwf	prodl,w,c
 15527  012C00  6EE1               	movwf	fsr1l,c
 15528  012C02  0E0D               	movlw	13
 15529  012C04  20F4               	addwfc	prodh,w,c
 15530  012C06  6EE2               	movwf	fsr1h,c
 15531  012C08  CFDF FFE7          	movff	indf2,indf1
 15532                           
 15533                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 15534  012C0C  EE20 F002          	lfsr	2,2
 15535  012C10  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15536  012C12  26D9               	addwf	fsr2l,f,c
 15537  012C14  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15538  012C16  22DA               	addwfc	fsr2h,f,c
 15539  012C18  2ADE               	incf	postinc2,f,c
 15540  012C1A  0E00               	movlw	0
 15541  012C1C  22DD               	addwfc	postdec2,f,c
 15542  012C1E  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 15543  012C20  D7D9               	goto	i2l6616
 15544  012C22                     i2l6628:
 15545                           
 15546                           ;usb_device.c: 2408: }
 15547                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 15548  012C22  EE20 F002          	lfsr	2,2
 15549  012C26  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15550  012C28  26D9               	addwf	fsr2l,f,c
 15551  012C2A  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15552  012C2C  22DA               	addwfc	fsr2h,f,c
 15553  012C2E  0E30               	movlw	48
 15554  012C30  6EDE               	movwf	postinc2,c
 15555  012C32  0E0D               	movlw	13
 15556  012C34  6EDD               	movwf	postdec2,c
 15557                           
 15558                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 15559  012C36  ECC0  F09C         	call	_USBCtrlTrfSetupHandler	;wreg free
 15560                           
 15561                           ;usb_device.c: 2413: }
 15562  012C3A  0012               	return	
 15563  012C3C                     i2l6632:
 15564                           
 15565                           ;usb_device.c: 2414: else
 15566                           ;usb_device.c: 2415: {
 15567                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 15568  012C3C  EC7C  F09F         	call	_USBCtrlTrfOutHandler	;wreg free
 15569                           
 15570                           ;usb_device.c: 2418: }
 15571                           ;usb_device.c: 2419: }
 15572  012C40  0012               	return	
 15573  012C42                     i2l6634:
 15574                           
 15575                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 15576  012C42  502D               	movf	_USTATcopy,w,c	;volatile
 15577  012C44  0BFD               	andlw	253
 15578  012C46  0A04               	xorlw	4
 15579  012C48  A4D8               	btfss	status,2,c
 15580  012C4A  0012               	return	
 15581                           
 15582                           ;usb_device.c: 2421: {
 15583                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 15584  012C4C  ECC6  F098         	call	_USBCtrlTrfInHandler	;wreg free
 15585  012C50  0012               	return	
 15586  012C52                     __end_of_USBCtrlEPService:
 15587                           	opt stack 0
 15588                           pclatu	equ	0xFFB
 15589                           pclath	equ	0xFFA
 15590                           tblptru	equ	0xFF8
 15591                           tblptrh	equ	0xFF7
 15592                           tblptrl	equ	0xFF6
 15593                           tablat	equ	0xFF5
 15594                           prodh	equ	0xFF4
 15595                           prodl	equ	0xFF3
 15596                           intcon	equ	0xFF2
 15597                           intcon2	equ	0xFF1
 15598                           postinc0	equ	0xFEE
 15599                           fsr0h	equ	0xFEA
 15600                           fsr0l	equ	0xFE9
 15601                           wreg	equ	0xFE8
 15602                           indf1	equ	0xFE7
 15603                           postinc1	equ	0xFE6
 15604                           postdec1	equ	0xFE5
 15605                           fsr1h	equ	0xFE2
 15606                           fsr1l	equ	0xFE1
 15607                           indf2	equ	0xFDF
 15608                           postinc2	equ	0xFDE
 15609                           postdec2	equ	0xFDD
 15610                           plusw2	equ	0xFDB
 15611                           fsr2h	equ	0xFDA
 15612                           fsr2l	equ	0xFD9
 15613                           status	equ	0xFD8
 15614                           
 15615 ;; *************** function _USBCtrlTrfSetupHandler *****************
 15616 ;; Defined at:
 15617 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 15618 ;; Parameters:    Size  Location     Type
 15619 ;;		None
 15620 ;; Auto vars:     Size  Location     Type
 15621 ;;		None
 15622 ;; Return value:  Size  Location     Type
 15623 ;;		None               void
 15624 ;; Registers used:
 15625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15626 ;; Tracked objects:
 15627 ;;		On entry : 0/0
 15628 ;;		On exit  : 0/0
 15629 ;;		Unchanged: 0/0
 15630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15635 ;;Total ram usage:        0 bytes
 15636 ;; Hardware stack levels used:    1
 15637 ;; Hardware stack levels required when called:    6
 15638 ;; This function calls:
 15639 ;;		_USBCheckStdRequest
 15640 ;;		_USBCtrlEPServiceComplete
 15641 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15642 ;; This function is called by:
 15643 ;;		_USBCtrlEPService
 15644 ;; This function uses a non-reentrant model
 15645 ;;
 15646                           
 15647                           	psect	text76
 15648  013980                     __ptext76:
 15649                           	opt stack 0
 15650  013980                     _USBCtrlTrfSetupHandler:
 15651                           	opt stack 11
 15652                           
 15653                           ;usb_device.c: 2474: shortPacketStatus = 0;
 15654                           
 15655                           ;incstack = 0
 15656  013980  0E00               	movlw	0
 15657  013982  6E2B               	movwf	_shortPacketStatus,c	;volatile
 15658                           
 15659                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 15660  013984  0E00               	movlw	0
 15661  013986  6E22               	movwf	_USBDeferStatusStagePacket,c	;volatile
 15662                           
 15663                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 15664  013988  0E00               	movlw	0
 15665  01398A  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15666                           
 15667                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 15668  01398C  0E00               	movlw	0
 15669  01398E  6E21               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15670                           
 15671                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 15672  013990  0E00               	movlw	0
 15673  013992  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 15674                           
 15675                           ;usb_device.c: 2479: controlTransferState = 0;
 15676  013994  0E00               	movlw	0
 15677  013996  6E29               	movwf	_controlTransferState,c	;volatile
 15678                           
 15679                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15680  013998  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15681  01399C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15682  0139A0  0E7F               	movlw	127
 15683  0139A2  16DF               	andwf	indf2,f,c
 15684                           
 15685                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15686  0139A4  0E04               	movlw	4
 15687  0139A6  1A10               	xorwf	_pBDTEntryIn,f,c
 15688                           
 15689                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15690  0139A8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15691  0139AC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15692  0139B0  0E7F               	movlw	127
 15693  0139B2  16DF               	andwf	indf2,f,c
 15694                           
 15695                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15696  0139B4  0E04               	movlw	4
 15697  0139B6  1A10               	xorwf	_pBDTEntryIn,f,c
 15698                           
 15699                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 15700  0139B8  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15701  0139BC  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15702  0139C0  0E7F               	movlw	127
 15703  0139C2  16DF               	andwf	indf2,f,c
 15704                           
 15705                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 15706  0139C4  0E00               	movlw	0
 15707  0139C6  6E0D               	movwf	_inPipes+3,c	;volatile
 15708                           
 15709                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 15710  0139C8  0E00               	movlw	0
 15711  0139CA  6E0F               	movwf	_inPipes+5,c	;volatile
 15712  0139CC  0E00               	movlw	0
 15713  0139CE  6E0E               	movwf	_inPipes+4,c	;volatile
 15714                           
 15715                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 15716  0139D0  0E00               	movlw	0
 15717  0139D2  6E04               	movwf	_outPipes+3,c	;volatile
 15718                           
 15719                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 15720  0139D4  0E00               	movlw	0
 15721  0139D6  6E06               	movwf	_outPipes+5,c	;volatile
 15722  0139D8  0E00               	movlw	0
 15723  0139DA  6E05               	movwf	_outPipes+4,c	;volatile
 15724                           
 15725                           ;usb_device.c: 2503: USBCheckStdRequest();
 15726  0139DC  ECD8  F092         	call	_USBCheckStdRequest	;wreg free
 15727                           
 15728                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 15729  0139E0  0E00               	movlw	0
 15730  0139E2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15731  0139E4  0E03               	movlw	3
 15732  0139E6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15733  0139E8  0E00               	movlw	0
 15734  0139EA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15735  0139EC  0E00               	movlw	0
 15736  0139EE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15737  0139F0  0E00               	movlw	0
 15738  0139F2  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15739  0139F4  0E00               	movlw	0
 15740  0139F6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15741  0139F8  EC8D  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15742                           
 15743                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 15744  0139FC  ECB9  F08F         	call	_USBCtrlEPServiceComplete	;wreg free
 15745  013A00  0012               	return		;funcret
 15746  013A02                     __end_of_USBCtrlTrfSetupHandler:
 15747                           	opt stack 0
 15748                           pclatu	equ	0xFFB
 15749                           pclath	equ	0xFFA
 15750                           tblptru	equ	0xFF8
 15751                           tblptrh	equ	0xFF7
 15752                           tblptrl	equ	0xFF6
 15753                           tablat	equ	0xFF5
 15754                           prodh	equ	0xFF4
 15755                           prodl	equ	0xFF3
 15756                           intcon	equ	0xFF2
 15757                           intcon2	equ	0xFF1
 15758                           postinc0	equ	0xFEE
 15759                           fsr0h	equ	0xFEA
 15760                           fsr0l	equ	0xFE9
 15761                           wreg	equ	0xFE8
 15762                           indf1	equ	0xFE7
 15763                           postinc1	equ	0xFE6
 15764                           postdec1	equ	0xFE5
 15765                           fsr1h	equ	0xFE2
 15766                           fsr1l	equ	0xFE1
 15767                           indf2	equ	0xFDF
 15768                           postinc2	equ	0xFDE
 15769                           postdec2	equ	0xFDD
 15770                           plusw2	equ	0xFDB
 15771                           fsr2h	equ	0xFDA
 15772                           fsr2l	equ	0xFD9
 15773                           status	equ	0xFD8
 15774                           
 15775 ;; *************** function _USBCtrlEPServiceComplete *****************
 15776 ;; Defined at:
 15777 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 15778 ;; Parameters:    Size  Location     Type
 15779 ;;		None
 15780 ;; Auto vars:     Size  Location     Type
 15781 ;;		None
 15782 ;; Return value:  Size  Location     Type
 15783 ;;		None               void
 15784 ;; Registers used:
 15785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15786 ;; Tracked objects:
 15787 ;;		On entry : 0/0
 15788 ;;		On exit  : 0/0
 15789 ;;		Unchanged: 0/0
 15790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15795 ;;Total ram usage:        0 bytes
 15796 ;; Hardware stack levels used:    1
 15797 ;; Hardware stack levels required when called:    2
 15798 ;; This function calls:
 15799 ;;		_USBCtrlEPAllowDataStage
 15800 ;;		_USBCtrlEPAllowStatusStage
 15801 ;; This function is called by:
 15802 ;;		_USBCtrlTrfSetupHandler
 15803 ;; This function uses a non-reentrant model
 15804 ;;
 15805                           
 15806                           	psect	text77
 15807  011F72                     __ptext77:
 15808                           	opt stack 0
 15809  011F72                     _USBCtrlEPServiceComplete:
 15810                           	opt stack 14
 15811                           
 15812                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 15813                           
 15814                           ;incstack = 0
 15815  011F72  9865               	bcf	3941,4,c	;volatile
 15816                           
 15817                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 15818  011F74  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 15819  011F76  D038               	goto	i2l232
 15820                           
 15821                           ;usb_device.c: 1629: {
 15822                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 15823  011F78  AE04               	btfss	_outPipes+3,7,c	;volatile
 15824  011F7A  D00B               	goto	i2l6192
 15825                           
 15826                           ;usb_device.c: 1631: {
 15827                           ;usb_device.c: 1632: controlTransferState = 2;
 15828  011F7C  0E02               	movlw	2
 15829  011F7E  6E29               	movwf	_controlTransferState,c	;volatile
 15830                           
 15831                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 15832  011F80  5021               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 15833  011F82  B4D8               	btfsc	status,2,c
 15834                           
 15835                           ;usb_device.c: 1644: {
 15836                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 15837  011F84  ECD2  F09A         	call	_USBCtrlEPAllowDataStage	;wreg free
 15838                           
 15839                           ;usb_device.c: 1646: }
 15840                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 15841  011F88  0E00               	movlw	0
 15842  011F8A  6E25               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15843                           
 15844                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 15845  011F8C  0E00               	movlw	0
 15846  011F8E  6E24               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15847                           
 15848                           ;usb_device.c: 1652: }
 15849  011F90  0012               	return	
 15850  011F92                     i2l6192:
 15851                           
 15852                           ;usb_device.c: 1653: else
 15853                           ;usb_device.c: 1654: {
 15854                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 15855  011F92  EE20 F001          	lfsr	2,1
 15856  011F96  501B               	movf	_pBDTEntryEP0OutNext,w,c
 15857  011F98  26D9               	addwf	fsr2l,f,c
 15858  011F9A  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 15859  011F9C  22DA               	addwfc	fsr2h,f,c
 15860  011F9E  0E08               	movlw	8
 15861  011FA0  6EDF               	movwf	indf2,c
 15862                           
 15863                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15864  011FA2  EE20 F002          	lfsr	2,2
 15865  011FA6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 15866  011FA8  26D9               	addwf	fsr2l,f,c
 15867  011FAA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 15868  011FAC  22DA               	addwfc	fsr2h,f,c
 15869  011FAE  0E30               	movlw	48
 15870  011FB0  6EDE               	movwf	postinc2,c
 15871  011FB2  0E0D               	movlw	13
 15872  011FB4  6EDD               	movwf	postdec2,c
 15873                           
 15874                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15875  011FB6  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15876  011FBA  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15877  011FBE  0E0C               	movlw	12
 15878  011FC0  6EDF               	movwf	indf2,c
 15879                           
 15880                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15881  011FC2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15882  011FC6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15883  011FCA  0E00               	movlw	0
 15884  011FCC  8EDB               	bsf	plusw2,7,c
 15885                           
 15886                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 15887  011FCE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15888  011FD2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15889  011FD6  0E04               	movlw	4
 15890  011FD8  6EDF               	movwf	indf2,c
 15891                           
 15892                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15893  011FDA  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15894  011FDE  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15895  011FE2  0E00               	movlw	0
 15896  011FE4  8EDB               	bsf	plusw2,7,c
 15897                           
 15898                           ;usb_device.c: 1665: }
 15899                           ;usb_device.c: 1666: }
 15900  011FE6  0012               	return	
 15901  011FE8                     i2l232:
 15902                           
 15903                           ;usb_device.c: 1667: else
 15904                           ;usb_device.c: 1668: {
 15905                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 15906  011FE8  010D               	movlb	13	; () banked
 15907  011FEA  AF30               	btfss	48,7,b	;volatile
 15908  011FEC  D010               	goto	i2l6212
 15909                           
 15910                           ; BSR set to: 13
 15911                           ;usb_device.c: 1670: {
 15912                           ;usb_device.c: 1671: controlTransferState = 1;
 15913  011FEE  0E01               	movlw	1
 15914  011FF0  6E29               	movwf	_controlTransferState,c	;volatile
 15915                           
 15916                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 15917  011FF2  5020               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 15918  011FF4  B4D8               	btfsc	status,2,c
 15919                           
 15920                           ; BSR set to: 13
 15921                           ;usb_device.c: 1686: {
 15922                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 15923  011FF6  ECD2  F09A         	call	_USBCtrlEPAllowDataStage	;wreg free
 15924                           
 15925                           ;usb_device.c: 1688: }
 15926                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 15927  011FFA  0E00               	movlw	0
 15928  011FFC  6E25               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15929                           
 15930                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 15931  011FFE  0E00               	movlw	0
 15932  012000  6E24               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15933                           
 15934                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 15935  012002  5022               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15936  012004  A4D8               	btfss	status,2,c
 15937  012006  0012               	return	
 15938                           
 15939                           ;usb_device.c: 1713: {
 15940                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 15941  012008  EC8F  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15942                           
 15943                           ;usb_device.c: 1715: }
 15944                           ;usb_device.c: 1716: }
 15945  01200C  0012               	return	
 15946  01200E                     i2l6212:
 15947                           
 15948                           ;usb_device.c: 1717: else
 15949                           ;usb_device.c: 1718: {
 15950                           ;usb_device.c: 1729: controlTransferState = 2;
 15951  01200E  0E02               	movlw	2
 15952  012010  6E29               	movwf	_controlTransferState,c	;volatile
 15953                           
 15954                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 15955  012012  EE20 F001          	lfsr	2,1
 15956  012016  501B               	movf	_pBDTEntryEP0OutNext,w,c
 15957  012018  26D9               	addwf	fsr2l,f,c
 15958  01201A  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 15959  01201C  22DA               	addwfc	fsr2h,f,c
 15960  01201E  0E08               	movlw	8
 15961  012020  6EDF               	movwf	indf2,c
 15962                           
 15963                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15964  012022  EE20 F002          	lfsr	2,2
 15965  012026  501B               	movf	_pBDTEntryEP0OutNext,w,c
 15966  012028  26D9               	addwf	fsr2l,f,c
 15967  01202A  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 15968  01202C  22DA               	addwfc	fsr2h,f,c
 15969  01202E  0E30               	movlw	48
 15970  012030  6EDE               	movwf	postinc2,c
 15971  012032  0E0D               	movlw	13
 15972  012034  6EDD               	movwf	postdec2,c
 15973                           
 15974                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15975  012036  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15976  01203A  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15977  01203E  0E04               	movlw	4
 15978  012040  6EDF               	movwf	indf2,c
 15979                           
 15980                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15981  012042  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15982  012046  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15983  01204A  0E00               	movlw	0
 15984  01204C  8EDB               	bsf	plusw2,7,c
 15985                           
 15986                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 15987  01204E  0E00               	movlw	0
 15988  012050  6E25               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15989                           
 15990                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 15991  012052  0E00               	movlw	0
 15992  012054  6E24               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15993                           
 15994                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 15995  012056  5022               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15996  012058  A4D8               	btfss	status,2,c
 15997  01205A  0012               	return	
 15998                           
 15999                           ;usb_device.c: 1741: {
 16000                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 16001  01205C  EC8F  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16002  012060  0012               	return	
 16003  012062                     __end_of_USBCtrlEPServiceComplete:
 16004                           	opt stack 0
 16005                           pclatu	equ	0xFFB
 16006                           pclath	equ	0xFFA
 16007                           tblptru	equ	0xFF8
 16008                           tblptrh	equ	0xFF7
 16009                           tblptrl	equ	0xFF6
 16010                           tablat	equ	0xFF5
 16011                           prodh	equ	0xFF4
 16012                           prodl	equ	0xFF3
 16013                           intcon	equ	0xFF2
 16014                           intcon2	equ	0xFF1
 16015                           postinc0	equ	0xFEE
 16016                           fsr0h	equ	0xFEA
 16017                           fsr0l	equ	0xFE9
 16018                           wreg	equ	0xFE8
 16019                           indf1	equ	0xFE7
 16020                           postinc1	equ	0xFE6
 16021                           postdec1	equ	0xFE5
 16022                           fsr1h	equ	0xFE2
 16023                           fsr1l	equ	0xFE1
 16024                           indf2	equ	0xFDF
 16025                           postinc2	equ	0xFDE
 16026                           postdec2	equ	0xFDD
 16027                           plusw2	equ	0xFDB
 16028                           fsr2h	equ	0xFDA
 16029                           fsr2l	equ	0xFD9
 16030                           status	equ	0xFD8
 16031                           
 16032 ;; *************** function _USBCtrlEPAllowDataStage *****************
 16033 ;; Defined at:
 16034 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 16035 ;; Parameters:    Size  Location     Type
 16036 ;;		None
 16037 ;; Auto vars:     Size  Location     Type
 16038 ;;		None
 16039 ;; Return value:  Size  Location     Type
 16040 ;;		None               void
 16041 ;; Registers used:
 16042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16043 ;; Tracked objects:
 16044 ;;		On entry : 0/0
 16045 ;;		On exit  : 0/0
 16046 ;;		Unchanged: 0/0
 16047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16052 ;;Total ram usage:        0 bytes
 16053 ;; Hardware stack levels used:    1
 16054 ;; Hardware stack levels required when called:    1
 16055 ;; This function calls:
 16056 ;;		_USBCtrlTrfTxService
 16057 ;; This function is called by:
 16058 ;;		_USBCtrlEPServiceComplete
 16059 ;; This function uses a non-reentrant model
 16060 ;;
 16061                           
 16062                           	psect	text78
 16063  0135A4                     __ptext78:
 16064                           	opt stack 0
 16065  0135A4                     _USBCtrlEPAllowDataStage:
 16066                           	opt stack 14
 16067                           
 16068                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 16069                           
 16070                           ;incstack = 0
 16071  0135A4  0E00               	movlw	0
 16072  0135A6  6E20               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16073                           
 16074                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 16075  0135A8  0E00               	movlw	0
 16076  0135AA  6E21               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16077                           
 16078                           ;usb_device.c: 1493: if(controlTransferState == 2)
 16079  0135AC  0E02               	movlw	2
 16080  0135AE  1829               	xorwf	_controlTransferState,w,c	;volatile
 16081  0135B0  A4D8               	btfss	status,2,c
 16082  0135B2  D01F               	goto	i2l5746
 16083                           
 16084                           ;usb_device.c: 1494: {
 16085                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 16086  0135B4  EE20 F001          	lfsr	2,1
 16087  0135B8  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16088  0135BA  26D9               	addwf	fsr2l,f,c
 16089  0135BC  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16090  0135BE  22DA               	addwfc	fsr2h,f,c
 16091  0135C0  0E08               	movlw	8
 16092  0135C2  6EDF               	movwf	indf2,c
 16093                           
 16094                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16095  0135C4  EE20 F002          	lfsr	2,2
 16096  0135C8  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16097  0135CA  26D9               	addwf	fsr2l,f,c
 16098  0135CC  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16099  0135CE  22DA               	addwfc	fsr2h,f,c
 16100  0135D0  0E38               	movlw	56
 16101  0135D2  6EDE               	movwf	postinc2,c
 16102  0135D4  0E0D               	movlw	13
 16103  0135D6  6EDD               	movwf	postdec2,c
 16104                           
 16105                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16106  0135D8  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16107  0135DC  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16108  0135E0  0E48               	movlw	72
 16109  0135E2  6EDF               	movwf	indf2,c
 16110                           
 16111                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16112  0135E4  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16113  0135E8  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16114  0135EC  0E00               	movlw	0
 16115  0135EE  8EDB               	bsf	plusw2,7,c
 16116                           
 16117                           ;usb_device.c: 1500: }
 16118  0135F0  0012               	return	
 16119  0135F2                     i2l5746:
 16120                           
 16121                           ;usb_device.c: 1501: else
 16122                           ;usb_device.c: 1502: {
 16123                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 16124  0135F2  500E               	movf	_inPipes+4,w,c	;volatile
 16125  0135F4  010D               	movlb	13	; () banked
 16126  0135F6  5D36               	subwf	54,w,b	;volatile
 16127  0135F8  500F               	movf	_inPipes+5,w,c	;volatile
 16128  0135FA  010D               	movlb	13	; () banked
 16129  0135FC  5937               	subwfb	55,w,b	;volatile
 16130  0135FE  B0D8               	btfsc	status,0,c
 16131  013600  D004               	goto	i2l5750
 16132                           
 16133                           ; BSR set to: 13
 16134                           ;usb_device.c: 1506: {
 16135                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 16136  013602  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 16137  013606  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 16138  01360A                     i2l5750:
 16139                           
 16140                           ; BSR set to: 13
 16141                           ;usb_device.c: 1508: }
 16142                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 16143  01360A  EC59  F095         	call	_USBCtrlTrfTxService	;wreg free
 16144                           
 16145                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 16146  01360E  EE20 F002          	lfsr	2,2
 16147  013612  5010               	movf	_pBDTEntryIn,w,c
 16148  013614  26D9               	addwf	fsr2l,f,c
 16149  013616  5011               	movf	_pBDTEntryIn+1,w,c
 16150  013618  22DA               	addwfc	fsr2h,f,c
 16151  01361A  0E38               	movlw	56
 16152  01361C  6EDE               	movwf	postinc2,c
 16153  01361E  0E0D               	movlw	13
 16154  013620  6EDD               	movwf	postdec2,c
 16155                           
 16156                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16157  013622  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16158  013626  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16159  01362A  0E48               	movlw	72
 16160  01362C  6EDF               	movwf	indf2,c
 16161                           
 16162                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16163  01362E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16164  013632  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16165  013636  0E00               	movlw	0
 16166  013638  8EDB               	bsf	plusw2,7,c
 16167  01363A  0012               	return	
 16168  01363C                     __end_of_USBCtrlEPAllowDataStage:
 16169                           	opt stack 0
 16170                           pclatu	equ	0xFFB
 16171                           pclath	equ	0xFFA
 16172                           tblptru	equ	0xFF8
 16173                           tblptrh	equ	0xFF7
 16174                           tblptrl	equ	0xFF6
 16175                           tablat	equ	0xFF5
 16176                           prodh	equ	0xFF4
 16177                           prodl	equ	0xFF3
 16178                           intcon	equ	0xFF2
 16179                           intcon2	equ	0xFF1
 16180                           postinc0	equ	0xFEE
 16181                           fsr0h	equ	0xFEA
 16182                           fsr0l	equ	0xFE9
 16183                           wreg	equ	0xFE8
 16184                           indf1	equ	0xFE7
 16185                           postinc1	equ	0xFE6
 16186                           postdec1	equ	0xFE5
 16187                           fsr1h	equ	0xFE2
 16188                           fsr1l	equ	0xFE1
 16189                           indf2	equ	0xFDF
 16190                           postinc2	equ	0xFDE
 16191                           postdec2	equ	0xFDD
 16192                           plusw2	equ	0xFDB
 16193                           fsr2h	equ	0xFDA
 16194                           fsr2l	equ	0xFD9
 16195                           status	equ	0xFD8
 16196                           
 16197 ;; *************** function _USBCheckStdRequest *****************
 16198 ;; Defined at:
 16199 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 16200 ;; Parameters:    Size  Location     Type
 16201 ;;		None
 16202 ;; Auto vars:     Size  Location     Type
 16203 ;;		None
 16204 ;; Return value:  Size  Location     Type
 16205 ;;		None               void
 16206 ;; Registers used:
 16207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16208 ;; Tracked objects:
 16209 ;;		On entry : 0/0
 16210 ;;		On exit  : 0/0
 16211 ;;		Unchanged: 0/0
 16212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16217 ;;Total ram usage:        0 bytes
 16218 ;; Hardware stack levels used:    1
 16219 ;; Hardware stack levels required when called:    5
 16220 ;; This function calls:
 16221 ;;		_USBStdFeatureReqHandler
 16222 ;;		_USBStdGetDscHandler
 16223 ;;		_USBStdGetStatusHandler
 16224 ;;		_USBStdSetCfgHandler
 16225 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16226 ;; This function is called by:
 16227 ;;		_USBCtrlTrfSetupHandler
 16228 ;; This function uses a non-reentrant model
 16229 ;;
 16230                           
 16231                           	psect	text79
 16232  0125B0                     __ptext79:
 16233                           	opt stack 0
 16234  0125B0                     _USBCheckStdRequest:
 16235                           	opt stack 11
 16236                           
 16237                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 16238                           
 16239                           ;incstack = 0
 16240  0125B0  010D               	movlb	13	; () banked
 16241  0125B2  3930               	swapf	48,w,b	;volatile
 16242  0125B4  32E8               	rrcf	wreg,f,c
 16243  0125B6  0B03               	andlw	3
 16244  0125B8  0900               	iorlw	0
 16245  0125BA  A4D8               	btfss	status,2,c
 16246  0125BC  0012               	return	
 16247  0125BE  D043               	goto	i2l6310
 16248  0125C0                     i2l359:
 16249                           
 16250                           ; BSR set to: 13
 16251                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 16252  0125C0  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16253                           
 16254                           ; BSR set to: 13
 16255                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 16256  0125C2  0E08               	movlw	8
 16257  0125C4  6E23               	movwf	_USBDeviceState,c	;volatile
 16258                           
 16259                           ;usb_device.c: 2699: break;
 16260  0125C6  0012               	return	
 16261  0125C8                     i2l6280:
 16262                           
 16263                           ; BSR set to: 13
 16264                           ;usb_device.c: 2701: USBStdGetDscHandler();
 16265  0125C8  EC9C  F08D         	call	_USBStdGetDscHandler	;wreg free
 16266                           
 16267                           ;usb_device.c: 2702: break;
 16268  0125CC  0012               	return	
 16269  0125CE                     i2l6282:
 16270                           
 16271                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 16272  0125CE  EC6A  F092         	call	_USBStdSetCfgHandler	;wreg free
 16273                           
 16274                           ;usb_device.c: 2705: break;
 16275  0125D2  0012               	return	
 16276  0125D4                     i2l6284:
 16277                           
 16278                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 16279  0125D4  0E2C               	movlw	low _USBActiveConfiguration
 16280  0125D6  6E0A               	movwf	_inPipes,c	;volatile
 16281  0125D8  0E00               	movlw	high _USBActiveConfiguration
 16282  0125DA  6E0B               	movwf	_inPipes+1,c	;volatile
 16283                           
 16284                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16285  0125DC  800D               	bsf	_inPipes+3,0,c	;volatile
 16286                           
 16287                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 16288  0125DE  0E01               	movlw	1
 16289  0125E0  6E0E               	movwf	_inPipes+4,c	;volatile
 16290                           
 16291                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 16292  0125E2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16293                           
 16294                           ;usb_device.c: 2711: break;
 16295  0125E4  0012               	return	
 16296  0125E6                     i2l6292:
 16297                           
 16298                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 16299  0125E6  EC2C  F09A         	call	_USBStdGetStatusHandler	;wreg free
 16300                           
 16301                           ;usb_device.c: 2714: break;
 16302  0125EA  0012               	return	
 16303  0125EC                     i2l6294:
 16304                           
 16305                           ;usb_device.c: 2716: case 3:
 16306                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 16307  0125EC  ECFF  F086         	call	_USBStdFeatureReqHandler	;wreg free
 16308                           
 16309                           ;usb_device.c: 2718: break;
 16310  0125F0  0012               	return	
 16311  0125F2                     i2l6296:
 16312                           
 16313                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 16314  0125F2  010D               	movlb	13	; () banked
 16315  0125F4  5134               	movf	52,w,b	;volatile
 16316  0125F6  0D01               	mullw	1
 16317  0125F8  0E7A               	movlw	low _USBAlternateInterface
 16318  0125FA  24F3               	addwf	prodl,w,c
 16319  0125FC  6E0A               	movwf	_inPipes,c	;volatile
 16320  0125FE  0E01               	movlw	high _USBAlternateInterface
 16321  012600  20F4               	addwfc	prodh,w,c
 16322  012602  6E0B               	movwf	_inPipes+1,c	;volatile
 16323                           
 16324                           ; BSR set to: 13
 16325                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16326  012604  800D               	bsf	_inPipes+3,0,c	;volatile
 16327                           
 16328                           ; BSR set to: 13
 16329                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 16330  012606  0E01               	movlw	1
 16331  012608  6E0E               	movwf	_inPipes+4,c	;volatile
 16332                           
 16333                           ; BSR set to: 13
 16334                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 16335  01260A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16336                           
 16337                           ;usb_device.c: 2724: break;
 16338  01260C  0012               	return	
 16339  01260E                     i2l368:
 16340                           
 16341                           ; BSR set to: 13
 16342                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 16343  01260E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16344                           
 16345                           ; BSR set to: 13
 16346                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 16347  012610  010D               	movlb	13	; () banked
 16348  012612  5134               	movf	52,w,b	;volatile
 16349  012614  0D01               	mullw	1
 16350  012616  0E7A               	movlw	low _USBAlternateInterface
 16351  012618  24F3               	addwf	prodl,w,c
 16352  01261A  6ED9               	movwf	fsr2l,c
 16353  01261C  0E01               	movlw	high _USBAlternateInterface
 16354  01261E  20F4               	addwfc	prodh,w,c
 16355  012620  6EDA               	movwf	fsr2h,c
 16356  012622  CD32 FFDF          	movff	3378,indf2	;volatile
 16357                           
 16358                           ;usb_device.c: 2728: break;
 16359  012626  0012               	return	
 16360  012628                     i2l6306:
 16361                           
 16362                           ; BSR set to: 13
 16363                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 16364  012628  0E00               	movlw	0
 16365  01262A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16366  01262C  0E02               	movlw	2
 16367  01262E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16368  012630  0E00               	movlw	0
 16369  012632  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16370  012634  0E00               	movlw	0
 16371  012636  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16372  012638  0E00               	movlw	0
 16373  01263A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16374  01263C  0E00               	movlw	0
 16375  01263E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16376  012640  EC8D  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16377                           
 16378                           ;usb_device.c: 2735: }
 16379                           
 16380                           ;usb_device.c: 2734: break;
 16381                           
 16382                           ;usb_device.c: 2733: default:
 16383                           
 16384                           ;usb_device.c: 2732: case 12:
 16385                           
 16386                           ;usb_device.c: 2731: break;
 16387  012644  0012               	return	
 16388  012646                     i2l6310:
 16389  012646  010D               	movlb	13	; () banked
 16390  012648  5131               	movf	49,w,b	;volatile
 16391                           
 16392                           ; Switch size 1, requested type "space"
 16393                           ; Number of cases is 11, Range of values is 0 to 12
 16394                           ; switch strategies available:
 16395                           ; Name         Instructions Cycles
 16396                           ; simple_byte           34    18 (average)
 16397                           ;	Chosen strategy is simple_byte
 16398  01264A  0A00               	xorlw	0	; case 0
 16399  01264C  B4D8               	btfsc	status,2,c
 16400  01264E  D7CB               	goto	i2l6292
 16401  012650  0A01               	xorlw	1	; case 1
 16402  012652  B4D8               	btfsc	status,2,c
 16403  012654  D7CB               	goto	i2l6294
 16404  012656  0A02               	xorlw	2	; case 3
 16405  012658  B4D8               	btfsc	status,2,c
 16406  01265A  D7C8               	goto	i2l6294
 16407  01265C  0A06               	xorlw	6	; case 5
 16408  01265E  B4D8               	btfsc	status,2,c
 16409  012660  D7AF               	goto	i2l359
 16410  012662  0A03               	xorlw	3	; case 6
 16411  012664  B4D8               	btfsc	status,2,c
 16412  012666  D7B0               	goto	i2l6280
 16413  012668  0A01               	xorlw	1	; case 7
 16414  01266A  B4D8               	btfsc	status,2,c
 16415  01266C  D7DD               	goto	i2l6306
 16416  01266E  0A0F               	xorlw	15	; case 8
 16417  012670  B4D8               	btfsc	status,2,c
 16418  012672  D7B0               	goto	i2l6284
 16419  012674  0A01               	xorlw	1	; case 9
 16420  012676  B4D8               	btfsc	status,2,c
 16421  012678  D7AA               	goto	i2l6282
 16422  01267A  0A03               	xorlw	3	; case 10
 16423  01267C  B4D8               	btfsc	status,2,c
 16424  01267E  D7B9               	goto	i2l6296
 16425  012680  0A01               	xorlw	1	; case 11
 16426  012682  B4D8               	btfsc	status,2,c
 16427  012684  D7C4               	goto	i2l368
 16428  012686  0A07               	xorlw	7	; case 12
 16429  012688  0012               	return	
 16430  01268A                     __end_of_USBCheckStdRequest:
 16431                           	opt stack 0
 16432                           pclatu	equ	0xFFB
 16433                           pclath	equ	0xFFA
 16434                           tblptru	equ	0xFF8
 16435                           tblptrh	equ	0xFF7
 16436                           tblptrl	equ	0xFF6
 16437                           tablat	equ	0xFF5
 16438                           prodh	equ	0xFF4
 16439                           prodl	equ	0xFF3
 16440                           intcon	equ	0xFF2
 16441                           intcon2	equ	0xFF1
 16442                           postinc0	equ	0xFEE
 16443                           fsr0h	equ	0xFEA
 16444                           fsr0l	equ	0xFE9
 16445                           wreg	equ	0xFE8
 16446                           indf1	equ	0xFE7
 16447                           postinc1	equ	0xFE6
 16448                           postdec1	equ	0xFE5
 16449                           fsr1h	equ	0xFE2
 16450                           fsr1l	equ	0xFE1
 16451                           indf2	equ	0xFDF
 16452                           postinc2	equ	0xFDE
 16453                           postdec2	equ	0xFDD
 16454                           plusw2	equ	0xFDB
 16455                           fsr2h	equ	0xFDA
 16456                           fsr2l	equ	0xFD9
 16457                           status	equ	0xFD8
 16458                           
 16459 ;; *************** function _USBStdSetCfgHandler *****************
 16460 ;; Defined at:
 16461 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 16462 ;; Parameters:    Size  Location     Type
 16463 ;;		None
 16464 ;; Auto vars:     Size  Location     Type
 16465 ;;  i               1   20[COMRAM] unsigned char 
 16466 ;; Return value:  Size  Location     Type
 16467 ;;		None               void
 16468 ;; Registers used:
 16469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16470 ;; Tracked objects:
 16471 ;;		On entry : 0/0
 16472 ;;		On exit  : 0/0
 16473 ;;		Unchanged: 0/0
 16474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16479 ;;Total ram usage:        1 bytes
 16480 ;; Hardware stack levels used:    1
 16481 ;; Hardware stack levels required when called:    4
 16482 ;; This function calls:
 16483 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16484 ;;		i2_memset
 16485 ;; This function is called by:
 16486 ;;		_USBCheckStdRequest
 16487 ;; This function uses a non-reentrant model
 16488 ;;
 16489                           
 16490                           	psect	text80
 16491  0124D4                     __ptext80:
 16492                           	opt stack 0
 16493  0124D4                     _USBStdSetCfgHandler:
 16494                           	opt stack 11
 16495                           
 16496                           ;usb_device.c: 1970: uint8_t i;
 16497                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 16498                           
 16499                           ;incstack = 0
 16500  0124D4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16501                           
 16502                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 16503  0124D6  0E27               	movlw	39
 16504  0124D8  6E2E               	movwf	i2memset@p1,c
 16505  0124DA  0E0F               	movlw	15
 16506  0124DC  6E2F               	movwf	i2memset@p1+1,c
 16507  0124DE  0E00               	movlw	0
 16508  0124E0  6E31               	movwf	i2memset@c+1,c
 16509  0124E2  0E00               	movlw	0
 16510  0124E4  6E30               	movwf	i2memset@c,c
 16511  0124E6  0E00               	movlw	0
 16512  0124E8  6E33               	movwf	i2memset@n+1,c
 16513  0124EA  0E02               	movlw	2
 16514  0124EC  6E32               	movwf	i2memset@n,c
 16515  0124EE  ECE6  F0A1         	call	i2_memset	;wreg free
 16516                           
 16517                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 16518  0124F2  0E00               	movlw	0
 16519  0124F4  6E2E               	movwf	i2memset@p1,c
 16520  0124F6  0E0D               	movlw	13
 16521  0124F8  6E2F               	movwf	i2memset@p1+1,c
 16522  0124FA  0E00               	movlw	0
 16523  0124FC  6E31               	movwf	i2memset@c+1,c
 16524  0124FE  0E00               	movlw	0
 16525  012500  6E30               	movwf	i2memset@c,c
 16526  012502  0E00               	movlw	0
 16527  012504  6E33               	movwf	i2memset@n+1,c
 16528  012506  0E30               	movlw	48
 16529  012508  6E32               	movwf	i2memset@n,c
 16530  01250A  ECE6  F0A1         	call	i2_memset	;wreg free
 16531                           
 16532                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 16533  01250E  8C65               	bsf	3941,6,c	;volatile
 16534                           
 16535                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 16536  012510  0E00               	movlw	0
 16537  012512  6E42               	movwf	USBStdSetCfgHandler@i,c
 16538  012514                     i2l5766:
 16539  012514  0E02               	movlw	2
 16540  012516  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 16541  012518  D001               	goto	i2l5770
 16542  01251A  D016               	goto	i2l5776
 16543  01251C                     i2l5770:
 16544                           
 16545                           ;usb_device.c: 1988: {
 16546                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 16547  01251C  5042               	movf	USBStdSetCfgHandler@i,w,c
 16548  01251E  0D01               	mullw	1
 16549  012520  0E16               	movlw	low _ep_data_in
 16550  012522  24F3               	addwf	prodl,w,c
 16551  012524  6ED9               	movwf	fsr2l,c
 16552  012526  0E00               	movlw	high _ep_data_in
 16553  012528  20F4               	addwfc	prodh,w,c
 16554  01252A  6EDA               	movwf	fsr2h,c
 16555  01252C  0E00               	movlw	0
 16556  01252E  6EDF               	movwf	indf2,c
 16557                           
 16558                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 16559  012530  5042               	movf	USBStdSetCfgHandler@i,w,c
 16560  012532  0D01               	mullw	1
 16561  012534  0E18               	movlw	low _ep_data_out
 16562  012536  24F3               	addwf	prodl,w,c
 16563  012538  6ED9               	movwf	fsr2l,c
 16564  01253A  0E01               	movlw	high _ep_data_out
 16565  01253C  20F4               	addwfc	prodh,w,c
 16566  01253E  6EDA               	movwf	fsr2h,c
 16567  012540  0E00               	movlw	0
 16568  012542  6EDF               	movwf	indf2,c
 16569  012544  2A42               	incf	USBStdSetCfgHandler@i,f,c
 16570  012546  D7E6               	goto	i2l5766
 16571  012548                     i2l5776:
 16572                           
 16573                           ;usb_device.c: 1991: }
 16574                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 16575  012548  0E7A               	movlw	low _USBAlternateInterface
 16576  01254A  6E2E               	movwf	i2memset@p1,c
 16577  01254C  0E01               	movlw	high _USBAlternateInterface
 16578  01254E  6E2F               	movwf	i2memset@p1+1,c
 16579  012550  0E00               	movlw	0
 16580  012552  6E31               	movwf	i2memset@c+1,c
 16581  012554  0E00               	movlw	0
 16582  012556  6E30               	movwf	i2memset@c,c
 16583  012558  0E00               	movlw	0
 16584  01255A  6E33               	movwf	i2memset@n+1,c
 16585  01255C  0E02               	movlw	2
 16586  01255E  6E32               	movwf	i2memset@n,c
 16587  012560  ECE6  F0A1         	call	i2_memset	;wreg free
 16588                           
 16589                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 16590  012564  9C65               	bcf	3941,6,c	;volatile
 16591                           
 16592                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16593  012566  0E08               	movlw	8
 16594  012568  6E10               	movwf	_pBDTEntryIn,c
 16595  01256A  0E0D               	movlw	13
 16596  01256C  6E11               	movwf	_pBDTEntryIn+1,c
 16597                           
 16598                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 16599  01256E  0E00               	movlw	0
 16600  012570  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 16601  012572  0E0D               	movlw	13
 16602  012574  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 16603                           
 16604                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 16605  012576  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 16606  01257A  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 16607                           
 16608                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 16609  01257E  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 16610                           
 16611                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 16612  012582  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 16613  012584  A4D8               	btfss	status,2,c
 16614  012586  D003               	goto	i2l5792
 16615                           
 16616                           ;usb_device.c: 2010: {
 16617                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 16618  012588  0E10               	movlw	16
 16619  01258A  6E23               	movwf	_USBDeviceState,c	;volatile
 16620                           
 16621                           ;usb_device.c: 2013: }
 16622  01258C  0012               	return	
 16623  01258E                     i2l5792:
 16624                           
 16625                           ;usb_device.c: 2014: else
 16626                           ;usb_device.c: 2015: {
 16627                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 16628  01258E  0E00               	movlw	0
 16629  012590  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16630  012592  0E01               	movlw	1
 16631  012594  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16632  012596  0E2C               	movlw	low _USBActiveConfiguration
 16633  012598  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16634  01259A  0E00               	movlw	high _USBActiveConfiguration
 16635  01259C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16636  01259E  0E00               	movlw	0
 16637  0125A0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16638  0125A2  0E01               	movlw	1
 16639  0125A4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16640  0125A6  EC8D  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16641                           
 16642                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 16643  0125AA  0E20               	movlw	32
 16644  0125AC  6E23               	movwf	_USBDeviceState,c	;volatile
 16645  0125AE  0012               	return	
 16646  0125B0                     __end_of_USBStdSetCfgHandler:
 16647                           	opt stack 0
 16648                           pclatu	equ	0xFFB
 16649                           pclath	equ	0xFFA
 16650                           tblptru	equ	0xFF8
 16651                           tblptrh	equ	0xFF7
 16652                           tblptrl	equ	0xFF6
 16653                           tablat	equ	0xFF5
 16654                           prodh	equ	0xFF4
 16655                           prodl	equ	0xFF3
 16656                           intcon	equ	0xFF2
 16657                           intcon2	equ	0xFF1
 16658                           postinc0	equ	0xFEE
 16659                           fsr0h	equ	0xFEA
 16660                           fsr0l	equ	0xFE9
 16661                           wreg	equ	0xFE8
 16662                           indf1	equ	0xFE7
 16663                           postinc1	equ	0xFE6
 16664                           postdec1	equ	0xFE5
 16665                           fsr1h	equ	0xFE2
 16666                           fsr1l	equ	0xFE1
 16667                           indf2	equ	0xFDF
 16668                           postinc2	equ	0xFDE
 16669                           postdec2	equ	0xFDD
 16670                           plusw2	equ	0xFDB
 16671                           fsr2h	equ	0xFDA
 16672                           fsr2l	equ	0xFD9
 16673                           status	equ	0xFD8
 16674                           
 16675 ;; *************** function i2_memset *****************
 16676 ;; Defined at:
 16677 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16678 ;; Parameters:    Size  Location     Type
 16679 ;;  p1              2    0[COMRAM] PTR void 
 16680 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16681 ;;  c               2    2[COMRAM] int 
 16682 ;;  n               2    4[COMRAM] unsigned int 
 16683 ;; Auto vars:     Size  Location     Type
 16684 ;;  memset          2    6[COMRAM] PTR unsigned char 
 16685 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16686 ;; Return value:  Size  Location     Type
 16687 ;;                  2    0[COMRAM] PTR void 
 16688 ;; Registers used:
 16689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16690 ;; Tracked objects:
 16691 ;;		On entry : 0/0
 16692 ;;		On exit  : 0/0
 16693 ;;		Unchanged: 0/0
 16694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16695 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16698 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16699 ;;Total ram usage:        8 bytes
 16700 ;; Hardware stack levels used:    1
 16701 ;; This function calls:
 16702 ;;		Nothing
 16703 ;; This function is called by:
 16704 ;;		_USBStdSetCfgHandler
 16705 ;;		i2_USBDeviceInit
 16706 ;; This function uses a non-reentrant model
 16707 ;;
 16708                           
 16709                           	psect	text81
 16710  0143CC                     __ptext81:
 16711                           	opt stack 0
 16712  0143CC                     i2_memset:
 16713                           	opt stack 17
 16714                           
 16715                           ;incstack = 0
 16716  0143CC  C02E  F034         	movff	i2memset@p1,i2memset@p
 16717  0143D0  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 16718  0143D4  D008               	goto	i2l5700
 16719  0143D6                     i2l5696:
 16720  0143D6  C034  FFD9         	movff	i2memset@p,fsr2l
 16721  0143DA  C035  FFDA         	movff	i2memset@p+1,fsr2h
 16722  0143DE  C030  FFDF         	movff	i2memset@c,indf2
 16723  0143E2  4A34               	infsnz	i2memset@p,f,c
 16724  0143E4  2A35               	incf	i2memset@p+1,f,c
 16725  0143E6                     i2l5700:
 16726  0143E6  0632               	decf	i2memset@n,f,c
 16727  0143E8  A0D8               	btfss	status,0,c
 16728  0143EA  0633               	decf	i2memset@n+1,f,c
 16729  0143EC  2832               	incf	i2memset@n,w,c
 16730  0143EE  E1F3               	bnz	i2l5696
 16731  0143F0  2833               	incf	i2memset@n+1,w,c
 16732  0143F2  B4D8               	btfsc	status,2,c
 16733  0143F4  0012               	return	
 16734  0143F6  D7EF               	goto	i2l5696
 16735  0143F8                     __end_ofi2_memset:
 16736                           	opt stack 0
 16737                           pclatu	equ	0xFFB
 16738                           pclath	equ	0xFFA
 16739                           tblptru	equ	0xFF8
 16740                           tblptrh	equ	0xFF7
 16741                           tblptrl	equ	0xFF6
 16742                           tablat	equ	0xFF5
 16743                           prodh	equ	0xFF4
 16744                           prodl	equ	0xFF3
 16745                           intcon	equ	0xFF2
 16746                           intcon2	equ	0xFF1
 16747                           postinc0	equ	0xFEE
 16748                           fsr0h	equ	0xFEA
 16749                           fsr0l	equ	0xFE9
 16750                           wreg	equ	0xFE8
 16751                           indf1	equ	0xFE7
 16752                           postinc1	equ	0xFE6
 16753                           postdec1	equ	0xFE5
 16754                           fsr1h	equ	0xFE2
 16755                           fsr1l	equ	0xFE1
 16756                           indf2	equ	0xFDF
 16757                           postinc2	equ	0xFDE
 16758                           postdec2	equ	0xFDD
 16759                           plusw2	equ	0xFDB
 16760                           fsr2h	equ	0xFDA
 16761                           fsr2l	equ	0xFD9
 16762                           status	equ	0xFD8
 16763                           
 16764 ;; *************** function _USBStdGetStatusHandler *****************
 16765 ;; Defined at:
 16766 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 16767 ;; Parameters:    Size  Location     Type
 16768 ;;		None
 16769 ;; Auto vars:     Size  Location     Type
 16770 ;;  p               2    1[COMRAM] PTR struct __BDT
 16771 ;;		 -> NULL(0), BDT(48), 
 16772 ;; Return value:  Size  Location     Type
 16773 ;;		None               void
 16774 ;; Registers used:
 16775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16776 ;; Tracked objects:
 16777 ;;		On entry : 0/0
 16778 ;;		On exit  : 0/0
 16779 ;;		Unchanged: 0/0
 16780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16784 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16785 ;;Total ram usage:        3 bytes
 16786 ;; Hardware stack levels used:    1
 16787 ;; This function calls:
 16788 ;;		Nothing
 16789 ;; This function is called by:
 16790 ;;		_USBCheckStdRequest
 16791 ;; This function uses a non-reentrant model
 16792 ;;
 16793                           
 16794                           	psect	text82
 16795  013458                     __ptext82:
 16796                           	opt stack 0
 16797  013458                     _USBStdGetStatusHandler:
 16798                           	opt stack 15
 16799                           
 16800                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 16801                           
 16802                           ;incstack = 0
 16803  013458  0E00               	movlw	0
 16804  01345A  010D               	movlb	13	; () banked
 16805  01345C  6F38               	movwf	56,b	;volatile
 16806                           
 16807                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 16808  01345E  0E00               	movlw	0
 16809  013460  010D               	movlb	13	; () banked
 16810  013462  6F39               	movwf	57,b	;volatile
 16811                           
 16812                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 16813  013464  D038               	goto	i2l5848
 16814  013466                     i2l295:
 16815                           
 16816                           ; BSR set to: 13
 16817                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 16818  013466  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16819                           
 16820                           ; BSR set to: 13
 16821                           ;usb_device.c: 2145: }
 16822                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 16823                           
 16824                           ; BSR set to: 13
 16825                           
 16826                           ; BSR set to: 13
 16827                           ;usb_device.c: 2143: {
 16828                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 16829                           
 16830                           ;usb_device.c: 2142: if(0 == 1)
 16831  013468  041F               	decf	_RemoteWakeup,w,c	;volatile
 16832  01346A  A4D8               	btfss	status,2,c
 16833  01346C  D040               	goto	i2l298
 16834                           
 16835                           ; BSR set to: 13
 16836                           ;usb_device.c: 2148: {
 16837                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 16838  01346E  010D               	movlb	13	; () banked
 16839  013470  8338               	bsf	56,1,b	;volatile
 16840                           
 16841                           ; BSR set to: 13
 16842                           ;usb_device.c: 2150: }
 16843                           ;usb_device.c: 2151: break;
 16844  013472  D03D               	goto	i2l298
 16845  013474                     i2l299:
 16846                           
 16847                           ; BSR set to: 13
 16848                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 16849  013474  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16850                           
 16851                           ;usb_device.c: 2154: break;
 16852  013476  D03B               	goto	i2l298
 16853  013478                     i2l300:
 16854                           
 16855                           ; BSR set to: 13
 16856                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 16857  013478  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16858                           
 16859                           ;usb_device.c: 2160: {
 16860                           ;usb_device.c: 2161: BDT_ENTRY *p;
 16861                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 16862  01347A  010D               	movlb	13	; () banked
 16863  01347C  BF34               	btfsc	52,7,b	;volatile
 16864  01347E  D00B               	goto	i2l5838
 16865                           
 16866                           ; BSR set to: 13
 16867                           ;usb_device.c: 2164: {
 16868                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16869  013480  010D               	movlb	13	; () banked
 16870  013482  5134               	movf	52,w,b	;volatile
 16871  013484  0B0F               	andlw	15
 16872  013486  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16873  013488  502E               	movf	??_USBStdGetStatusHandler,w,c
 16874  01348A  0D02               	mullw	2
 16875  01348C  0E0A               	movlw	low _pBDTEntryOut
 16876  01348E  24F3               	addwf	prodl,w,c
 16877  013490  6ED9               	movwf	fsr2l,c
 16878  013492  0E01               	movlw	high _pBDTEntryOut
 16879  013494  D00A               	goto	L9
 16880  013496                     i2l5838:
 16881                           
 16882                           ; BSR set to: 13
 16883                           ;usb_device.c: 2167: else
 16884                           ;usb_device.c: 2168: {
 16885                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16886  013496  010D               	movlb	13	; () banked
 16887  013498  5134               	movf	52,w,b	;volatile
 16888  01349A  0B0F               	andlw	15
 16889  01349C  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16890  01349E  502E               	movf	??_USBStdGetStatusHandler,w,c
 16891  0134A0  0D02               	mullw	2
 16892  0134A2  0E10               	movlw	low _pBDTEntryIn
 16893  0134A4  24F3               	addwf	prodl,w,c
 16894  0134A6  6ED9               	movwf	fsr2l,c
 16895  0134A8  0E00               	movlw	high _pBDTEntryIn
 16896  0134AA                     L9:
 16897  0134AA  20F4               	addwfc	prodh,w,c
 16898  0134AC  6EDA               	movwf	fsr2h,c
 16899  0134AE  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 16900  0134B2  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 16901                           
 16902                           ; BSR set to: 13
 16903                           ;usb_device.c: 2170: }
 16904                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 16905                           
 16906                           ; BSR set to: 13
 16907  0134B6  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16908  0134BA  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16909  0134BE  AEDF               	btfss	indf2,7,c
 16910  0134C0  D016               	goto	i2l298
 16911                           
 16912                           ; BSR set to: 13
 16913  0134C2  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16914  0134C6  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16915  0134CA  A4DF               	btfss	indf2,2,c
 16916  0134CC  D010               	goto	i2l298
 16917                           
 16918                           ; BSR set to: 13
 16919                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 16920  0134CE  0E01               	movlw	1
 16921  0134D0  010D               	movlb	13	; () banked
 16922  0134D2  6F38               	movwf	56,b	;volatile
 16923                           
 16924                           ; BSR set to: 13
 16925                           ;usb_device.c: 2175: }
 16926                           ;usb_device.c: 2176: }
 16927                           
 16928                           ; BSR set to: 13
 16929                           ;usb_device.c: 2174: break;
 16930  0134D4  D00C               	goto	i2l298
 16931  0134D6                     i2l5848:
 16932                           
 16933                           ; BSR set to: 13
 16934  0134D6  010D               	movlb	13	; () banked
 16935  0134D8  5130               	movf	48,w,b	;volatile
 16936  0134DA  0B1F               	andlw	31
 16937                           
 16938                           ; Switch size 1, requested type "space"
 16939                           ; Number of cases is 3, Range of values is 0 to 2
 16940                           ; switch strategies available:
 16941                           ; Name         Instructions Cycles
 16942                           ; simple_byte           10     6 (average)
 16943                           ;	Chosen strategy is simple_byte
 16944  0134DC  0A00               	xorlw	0	; case 0
 16945  0134DE  B4D8               	btfsc	status,2,c
 16946  0134E0  D7C2               	goto	i2l295
 16947  0134E2  0A01               	xorlw	1	; case 1
 16948  0134E4  B4D8               	btfsc	status,2,c
 16949  0134E6  D7C6               	goto	i2l299
 16950  0134E8  0A03               	xorlw	3	; case 2
 16951  0134EA  B4D8               	btfsc	status,2,c
 16952  0134EC  D7C5               	goto	i2l300
 16953  0134EE                     i2l298:
 16954                           
 16955                           ; BSR set to: 13
 16956                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 16957  0134EE  AE0D               	btfss	_inPipes+3,7,c	;volatile
 16958  0134F0  0012               	return	
 16959                           
 16960                           ; BSR set to: 13
 16961                           ;usb_device.c: 2179: {
 16962                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 16963  0134F2  0E38               	movlw	56
 16964  0134F4  6E0A               	movwf	_inPipes,c	;volatile
 16965  0134F6  0E0D               	movlw	13
 16966  0134F8  6E0B               	movwf	_inPipes+1,c	;volatile
 16967                           
 16968                           ; BSR set to: 13
 16969                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16970  0134FA  800D               	bsf	_inPipes+3,0,c	;volatile
 16971                           
 16972                           ; BSR set to: 13
 16973                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 16974  0134FC  0E02               	movlw	2
 16975  0134FE  6E0E               	movwf	_inPipes+4,c	;volatile
 16976  013500  0012               	return	
 16977  013502                     __end_of_USBStdGetStatusHandler:
 16978                           	opt stack 0
 16979                           pclatu	equ	0xFFB
 16980                           pclath	equ	0xFFA
 16981                           tblptru	equ	0xFF8
 16982                           tblptrh	equ	0xFF7
 16983                           tblptrl	equ	0xFF6
 16984                           tablat	equ	0xFF5
 16985                           prodh	equ	0xFF4
 16986                           prodl	equ	0xFF3
 16987                           intcon	equ	0xFF2
 16988                           intcon2	equ	0xFF1
 16989                           postinc0	equ	0xFEE
 16990                           fsr0h	equ	0xFEA
 16991                           fsr0l	equ	0xFE9
 16992                           wreg	equ	0xFE8
 16993                           indf1	equ	0xFE7
 16994                           postinc1	equ	0xFE6
 16995                           postdec1	equ	0xFE5
 16996                           fsr1h	equ	0xFE2
 16997                           fsr1l	equ	0xFE1
 16998                           indf2	equ	0xFDF
 16999                           postinc2	equ	0xFDE
 17000                           postdec2	equ	0xFDD
 17001                           plusw2	equ	0xFDB
 17002                           fsr2h	equ	0xFDA
 17003                           fsr2l	equ	0xFD9
 17004                           status	equ	0xFD8
 17005                           
 17006 ;; *************** function _USBStdGetDscHandler *****************
 17007 ;; Defined at:
 17008 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 17009 ;; Parameters:    Size  Location     Type
 17010 ;;		None
 17011 ;; Auto vars:     Size  Location     Type
 17012 ;;		None
 17013 ;; Return value:  Size  Location     Type
 17014 ;;		None               void
 17015 ;; Registers used:
 17016 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17017 ;; Tracked objects:
 17018 ;;		On entry : 0/0
 17019 ;;		On exit  : 0/0
 17020 ;;		Unchanged: 0/0
 17021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17026 ;;Total ram usage:        2 bytes
 17027 ;; Hardware stack levels used:    1
 17028 ;; This function calls:
 17029 ;;		Nothing
 17030 ;; This function is called by:
 17031 ;;		_USBCheckStdRequest
 17032 ;; This function uses a non-reentrant model
 17033 ;;
 17034                           
 17035                           	psect	text83
 17036  011B38                     __ptext83:
 17037                           	opt stack 0
 17038  011B38                     _USBStdGetDscHandler:
 17039                           	opt stack 15
 17040                           
 17041                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 17042                           
 17043                           ; BSR set to: 13
 17044                           ;incstack = 0
 17045  011B38  0E80               	movlw	128
 17046  011B3A  010D               	movlb	13	; () banked
 17047  011B3C  1930               	xorwf	48,w,b	;volatile
 17048  011B3E  A4D8               	btfss	status,2,c
 17049  011B40  0012               	return	
 17050                           
 17051                           ; BSR set to: 13
 17052                           ;usb_device.c: 2046: {
 17053                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 17054  011B42  0EC0               	movlw	192
 17055  011B44  6E0D               	movwf	_inPipes+3,c	;volatile
 17056                           
 17057                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 17058  011B46  D085               	goto	i2l5826
 17059  011B48                     i2l5800:
 17060                           
 17061                           ; BSR set to: 13
 17062                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 17063  011B48  0E42               	movlw	low _device_dsc
 17064  011B4A  6E0A               	movwf	_inPipes,c	;volatile
 17065  011B4C  0EFE               	movlw	high _device_dsc
 17066  011B4E  6E0B               	movwf	_inPipes+1,c	;volatile
 17067                           
 17068                           ; BSR set to: 13
 17069                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 17070  011B50  0E00               	movlw	0
 17071  011B52  6E0F               	movwf	_inPipes+5,c	;volatile
 17072  011B54  0E12               	movlw	18
 17073  011B56  6E0E               	movwf	_inPipes+4,c	;volatile
 17074                           
 17075                           ;usb_device.c: 2058: break;
 17076  011B58  0012               	return	
 17077  011B5A                     i2l5804:
 17078                           
 17079                           ; BSR set to: 13
 17080                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 17081  011B5A  010D               	movlb	13	; () banked
 17082  011B5C  5132               	movf	50,w,b	;volatile
 17083  011B5E  A4D8               	btfss	status,2,c
 17084  011B60  D043               	goto	i2l5812
 17085                           
 17086                           ; BSR set to: 13
 17087                           ;usb_device.c: 2064: {
 17088                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 17089  011B62  010D               	movlb	13	; () banked
 17090  011B64  5132               	movf	50,w,b	;volatile
 17091  011B66  0D02               	mullw	2
 17092  011B68  0E79               	movlw	low _USB_CD_Ptr
 17093  011B6A  24F3               	addwf	prodl,w,c
 17094  011B6C  6EF6               	movwf	tblptrl,c
 17095  011B6E  0EFD               	movlw	high _USB_CD_Ptr
 17096  011B70  20F4               	addwfc	prodh,w,c
 17097  011B72  6EF7               	movwf	tblptrh,c
 17098  011B74                     	if	1	;There are 3 active tblptr bytes
 17099  011B74  6AF8               	clrf	tblptru,c
 17100  011B76  0E00               	movlw	low (__mediumconst shr (0+16))
 17101  011B78  22F8               	addwfc	tblptru,f,c
 17102  011B7A                     	endif
 17103  011B7A  0009               	tblrd		*+
 17104  011B7C  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17105  011B80  000A               	tblrd		*-
 17106  011B82  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17107                           
 17108                           ; BSR set to: 13
 17109                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 17110  011B86  0E02               	movlw	2
 17111  011B88  240A               	addwf	_inPipes,w,c	;volatile
 17112  011B8A  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17113  011B8C  0E00               	movlw	0
 17114  011B8E  200B               	addwfc	_inPipes+1,w,c	;volatile
 17115  011B90  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17116  011B92  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17117  011B96  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17118  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 17119  011B9C  6EF8               	movwf	tblptru,c
 17120  011B9E  0E0E               	movlw	(high __ramtop+-1)
 17121  011BA0  64F7               	cpfsgt	tblptrh,c
 17122  011BA2  D003               	bra	i2u469_47
 17123  011BA4  0008               	tblrd		*
 17124  011BA6  50F5               	movf	tablat,w,c
 17125  011BA8  D005               	bra	i2u469_40
 17126  011BAA                     i2u469_47:
 17127  011BAA  CFF6 FFE1          	movff	tblptrl,fsr1l
 17128  011BAE  CFF7 FFE2          	movff	tblptrh,fsr1h
 17129  011BB2  50E7               	movf	indf1,w,c
 17130  011BB4                     i2u469_40:
 17131  011BB4  6E0E               	movwf	_inPipes+4,c	;volatile
 17132                           
 17133                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 17134  011BB6  0E03               	movlw	3
 17135  011BB8  240A               	addwf	_inPipes,w,c	;volatile
 17136  011BBA  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17137  011BBC  0E00               	movlw	0
 17138  011BBE  200B               	addwfc	_inPipes+1,w,c	;volatile
 17139  011BC0  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17140  011BC2  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17141  011BC6  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17142  011BCA  0E00               	movlw	low (__mediumconst shr (0+16))
 17143  011BCC  6EF8               	movwf	tblptru,c
 17144  011BCE  0E0E               	movlw	(high __ramtop+-1)
 17145  011BD0  64F7               	cpfsgt	tblptrh,c
 17146  011BD2  D003               	bra	i2u470_47
 17147  011BD4  0008               	tblrd		*
 17148  011BD6  50F5               	movf	tablat,w,c
 17149  011BD8  D005               	bra	i2u470_40
 17150  011BDA                     i2u470_47:
 17151  011BDA  CFF6 FFE1          	movff	tblptrl,fsr1l
 17152  011BDE  CFF7 FFE2          	movff	tblptrh,fsr1h
 17153  011BE2  50E7               	movf	indf1,w,c
 17154  011BE4                     i2u470_40:
 17155  011BE4  6E0F               	movwf	_inPipes+5,c	;volatile
 17156                           
 17157                           ;usb_device.c: 2076: }
 17158  011BE6  0012               	return	
 17159  011BE8                     i2l5812:
 17160                           
 17161                           ;usb_device.c: 2077: else
 17162                           ;usb_device.c: 2078: {
 17163                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 17164  011BE8  0E00               	movlw	0
 17165  011BEA  6E0D               	movwf	_inPipes+3,c	;volatile
 17166                           
 17167                           ;usb_device.c: 2080: }
 17168                           ;usb_device.c: 2081: break;
 17169  011BEC  0012               	return	
 17170  011BEE                     i2l5814:
 17171                           
 17172                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 17173  011BEE  0E03               	movlw	3
 17174  011BF0  010D               	movlb	13	; () banked
 17175  011BF2  6132               	cpfslt	50,b	;volatile
 17176  011BF4  D028               	goto	i2l5820
 17177                           
 17178                           ; BSR set to: 13
 17179                           ;usb_device.c: 2087: {
 17180                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 17181  011BF6  010D               	movlb	13	; () banked
 17182  011BF8  5132               	movf	50,w,b	;volatile
 17183  011BFA  0D02               	mullw	2
 17184  011BFC  0E73               	movlw	low _USB_SD_Ptr
 17185  011BFE  24F3               	addwf	prodl,w,c
 17186  011C00  6EF6               	movwf	tblptrl,c
 17187  011C02  0EFD               	movlw	high _USB_SD_Ptr
 17188  011C04  20F4               	addwfc	prodh,w,c
 17189  011C06  6EF7               	movwf	tblptrh,c
 17190  011C08                     	if	1	;There are 3 active tblptr bytes
 17191  011C08  6AF8               	clrf	tblptru,c
 17192  011C0A  0E00               	movlw	low (__mediumconst shr (0+16))
 17193  011C0C  22F8               	addwfc	tblptru,f,c
 17194  011C0E                     	endif
 17195  011C0E  0009               	tblrd		*+
 17196  011C10  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17197  011C14  000A               	tblrd		*-
 17198  011C16  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17199                           
 17200                           ; BSR set to: 13
 17201                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 17202  011C1A  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17203  011C1E  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17204  011C22  0E00               	movlw	low (__mediumconst shr (0+16))
 17205  011C24  6EF8               	movwf	tblptru,c
 17206  011C26  0E0E               	movlw	(high __ramtop+-1)
 17207  011C28  64F7               	cpfsgt	tblptrh,c
 17208  011C2A  D003               	bra	i2u472_47
 17209  011C2C  0008               	tblrd		*
 17210  011C2E  50F5               	movf	tablat,w,c
 17211  011C30  D005               	bra	i2u472_40
 17212  011C32                     i2u472_47:
 17213  011C32  CFF6 FFE1          	movff	tblptrl,fsr1l
 17214  011C36  CFF7 FFE2          	movff	tblptrh,fsr1h
 17215  011C3A  50E7               	movf	indf1,w,c
 17216  011C3C                     i2u472_40:
 17217  011C3C  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17218  011C3E  502E               	movf	??_USBStdGetDscHandler,w,c
 17219  011C40  6E0E               	movwf	_inPipes+4,c	;volatile
 17220  011C42  6A0F               	clrf	_inPipes+5,c	;volatile
 17221                           
 17222                           ;usb_device.c: 2092: }
 17223  011C44  0012               	return	
 17224  011C46                     i2l5820:
 17225                           
 17226                           ;usb_device.c: 2102: else
 17227                           ;usb_device.c: 2103: {
 17228                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 17229  011C46  0E00               	movlw	0
 17230  011C48  6E0D               	movwf	_inPipes+3,c	;volatile
 17231                           
 17232                           ;usb_device.c: 2105: }
 17233                           ;usb_device.c: 2106: break;
 17234  011C4A  0012               	return	
 17235  011C4C                     i2l5822:
 17236                           
 17237                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 17238  011C4C  0E00               	movlw	0
 17239  011C4E  6E0D               	movwf	_inPipes+3,c	;volatile
 17240                           
 17241                           ;usb_device.c: 2110: }
 17242                           
 17243                           ;usb_device.c: 2109: break;
 17244  011C50  0012               	return	
 17245  011C52                     i2l5826:
 17246  011C52  010D               	movlb	13	; () banked
 17247  011C54  5133               	movf	51,w,b	;volatile
 17248                           
 17249                           ; Switch size 1, requested type "space"
 17250                           ; Number of cases is 3, Range of values is 1 to 3
 17251                           ; switch strategies available:
 17252                           ; Name         Instructions Cycles
 17253                           ; simple_byte           10     6 (average)
 17254                           ;	Chosen strategy is simple_byte
 17255  011C56  0A01               	xorlw	1	; case 1
 17256  011C58  B4D8               	btfsc	status,2,c
 17257  011C5A  D776               	goto	i2l5800
 17258  011C5C  0A03               	xorlw	3	; case 2
 17259  011C5E  B4D8               	btfsc	status,2,c
 17260  011C60  D77C               	goto	i2l5804
 17261  011C62  0A01               	xorlw	1	; case 3
 17262  011C64  B4D8               	btfsc	status,2,c
 17263  011C66  D7C3               	goto	i2l5814
 17264  011C68  D7F1               	goto	i2l5822
 17265  011C6A                     __end_of_USBStdGetDscHandler:
 17266                           	opt stack 0
 17267                           pclatu	equ	0xFFB
 17268                           pclath	equ	0xFFA
 17269                           tblptru	equ	0xFF8
 17270                           tblptrh	equ	0xFF7
 17271                           tblptrl	equ	0xFF6
 17272                           tablat	equ	0xFF5
 17273                           prodh	equ	0xFF4
 17274                           prodl	equ	0xFF3
 17275                           intcon	equ	0xFF2
 17276                           intcon2	equ	0xFF1
 17277                           postinc0	equ	0xFEE
 17278                           fsr0h	equ	0xFEA
 17279                           fsr0l	equ	0xFE9
 17280                           wreg	equ	0xFE8
 17281                           indf1	equ	0xFE7
 17282                           postinc1	equ	0xFE6
 17283                           postdec1	equ	0xFE5
 17284                           fsr1h	equ	0xFE2
 17285                           fsr1l	equ	0xFE1
 17286                           indf2	equ	0xFDF
 17287                           postinc2	equ	0xFDE
 17288                           postdec2	equ	0xFDD
 17289                           plusw2	equ	0xFDB
 17290                           fsr2h	equ	0xFDA
 17291                           fsr2l	equ	0xFD9
 17292                           status	equ	0xFD8
 17293                           
 17294 ;; *************** function _USBStdFeatureReqHandler *****************
 17295 ;; Defined at:
 17296 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 17297 ;; Parameters:    Size  Location     Type
 17298 ;;		None
 17299 ;; Auto vars:     Size  Location     Type
 17300 ;;  p               2   24[COMRAM] PTR struct __BDT
 17301 ;;		 -> NULL(0), BDT(48), 
 17302 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 17303 ;;		 -> UEP0(1), 
 17304 ;;  current_ep_d    1   23[COMRAM] struct .
 17305 ;; Return value:  Size  Location     Type
 17306 ;;		None               void
 17307 ;; Registers used:
 17308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17309 ;; Tracked objects:
 17310 ;;		On entry : 0/0
 17311 ;;		On exit  : 0/0
 17312 ;;		Unchanged: 0/0
 17313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17315 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17317 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17318 ;;Total ram usage:        6 bytes
 17319 ;; Hardware stack levels used:    1
 17320 ;; Hardware stack levels required when called:    4
 17321 ;; This function calls:
 17322 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17323 ;; This function is called by:
 17324 ;;		_USBCheckStdRequest
 17325 ;; This function uses a non-reentrant model
 17326 ;;
 17327                           
 17328                           	psect	text84
 17329  010DFE                     __ptext84:
 17330                           	opt stack 0
 17331  010DFE                     _USBStdFeatureReqHandler:
 17332                           	opt stack 11
 17333                           
 17334                           ;usb_device.c: 2759: BDT_ENTRY *p;
 17335                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 17336                           ;usb_device.c: 2764: unsigned char* pUEP;
 17337                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 17338                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 17339                           
 17340                           ;incstack = 0
 17341  010DFE  010D               	movlb	13	; () banked
 17342  010E00  0532               	decf	50,w,b	;volatile
 17343  010E02  A4D8               	btfss	status,2,c
 17344  010E04  D010               	goto	i2l374
 17345                           
 17346                           ; BSR set to: 13
 17347  010E06  010D               	movlb	13	; () banked
 17348  010E08  5130               	movf	48,w,b	;volatile
 17349  010E0A  0B1F               	andlw	31
 17350  010E0C  0900               	iorlw	0
 17351  010E0E  A4D8               	btfss	status,2,c
 17352  010E10  D00A               	goto	i2l374
 17353                           
 17354                           ; BSR set to: 13
 17355                           ;usb_device.c: 2804: {
 17356                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 17357  010E12  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17358                           
 17359                           ; BSR set to: 13
 17360                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 17361  010E14  0E03               	movlw	3
 17362  010E16  010D               	movlb	13	; () banked
 17363  010E18  1931               	xorwf	49,w,b	;volatile
 17364  010E1A  A4D8               	btfss	status,2,c
 17365  010E1C  D002               	goto	i2l5866
 17366                           
 17367                           ; BSR set to: 13
 17368                           ;usb_device.c: 2807: RemoteWakeup = 1;
 17369  010E1E  0E01               	movlw	1
 17370  010E20  D001               	goto	L10
 17371  010E22                     i2l5866:
 17372                           
 17373                           ; BSR set to: 13
 17374                           ;usb_device.c: 2808: else
 17375                           ;usb_device.c: 2809: RemoteWakeup = 0;
 17376  010E22  0E00               	movlw	0
 17377  010E24                     L10:
 17378  010E24  6E1F               	movwf	_RemoteWakeup,c	;volatile
 17379  010E26                     i2l374:
 17380                           
 17381                           ; BSR set to: 13
 17382                           ;usb_device.c: 2810: }
 17383                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 17384                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 17385                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 17386                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 17387  010E26  010D               	movlb	13	; () banked
 17388  010E28  5132               	movf	50,w,b	;volatile
 17389  010E2A  A4D8               	btfss	status,2,c
 17390  010E2C  0012               	return	
 17391                           
 17392                           ; BSR set to: 13
 17393  010E2E  010D               	movlb	13	; () banked
 17394  010E30  5130               	movf	48,w,b	;volatile
 17395  010E32  0B1F               	andlw	31
 17396  010E34  0A02               	xorlw	2
 17397  010E36  A4D8               	btfss	status,2,c
 17398  010E38  0012               	return	
 17399                           
 17400                           ; BSR set to: 13
 17401  010E3A  010D               	movlb	13	; () banked
 17402  010E3C  5134               	movf	52,w,b	;volatile
 17403  010E3E  0B0F               	andlw	15
 17404  010E40  0900               	iorlw	0
 17405  010E42  B4D8               	btfsc	status,2,c
 17406  010E44  0012               	return	
 17407                           
 17408                           ; BSR set to: 13
 17409  010E46  010D               	movlb	13	; () banked
 17410  010E48  5134               	movf	52,w,b	;volatile
 17411  010E4A  0B0F               	andlw	15
 17412  010E4C  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17413  010E4E  0E03               	movlw	3
 17414  010E50  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 17415  010E52  0012               	return	
 17416                           
 17417                           ; BSR set to: 13
 17418  010E54  0E20               	movlw	32
 17419  010E56  1823               	xorwf	_USBDeviceState,w,c	;volatile
 17420  010E58  A4D8               	btfss	status,2,c
 17421  010E5A  0012               	return	
 17422                           
 17423                           ; BSR set to: 13
 17424                           ;usb_device.c: 2817: {
 17425                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 17426  010E5C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17427                           
 17428                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 17429  010E5E  010D               	movlb	13	; () banked
 17430  010E60  BF34               	btfsc	52,7,b	;volatile
 17431  010E62  D01B               	goto	i2l5880
 17432                           
 17433                           ; BSR set to: 13
 17434                           ;usb_device.c: 2824: {
 17435                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17436  010E64  010D               	movlb	13	; () banked
 17437  010E66  5134               	movf	52,w,b	;volatile
 17438  010E68  0B0F               	andlw	15
 17439  010E6A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17440  010E6C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17441  010E6E  0D02               	mullw	2
 17442  010E70  0E0A               	movlw	low _pBDTEntryOut
 17443  010E72  24F3               	addwf	prodl,w,c
 17444  010E74  6ED9               	movwf	fsr2l,c
 17445  010E76  0E01               	movlw	high _pBDTEntryOut
 17446  010E78  20F4               	addwfc	prodh,w,c
 17447  010E7A  6EDA               	movwf	fsr2h,c
 17448  010E7C  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17449  010E80  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17450                           
 17451                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 17452  010E84  010D               	movlb	13	; () banked
 17453  010E86  5134               	movf	52,w,b	;volatile
 17454  010E88  0B0F               	andlw	15
 17455  010E8A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17456  010E8C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17457  010E8E  0D01               	mullw	1
 17458  010E90  0E18               	movlw	low _ep_data_out
 17459  010E92  24F3               	addwf	prodl,w,c
 17460  010E94  6ED9               	movwf	fsr2l,c
 17461  010E96  0E01               	movlw	high _ep_data_out
 17462  010E98  D01A               	goto	L11
 17463  010E9A                     i2l5880:
 17464                           
 17465                           ; BSR set to: 13
 17466                           ;usb_device.c: 2828: else
 17467                           ;usb_device.c: 2829: {
 17468                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17469  010E9A  010D               	movlb	13	; () banked
 17470  010E9C  5134               	movf	52,w,b	;volatile
 17471  010E9E  0B0F               	andlw	15
 17472  010EA0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17473  010EA2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17474  010EA4  0D02               	mullw	2
 17475  010EA6  0E10               	movlw	low _pBDTEntryIn
 17476  010EA8  24F3               	addwf	prodl,w,c
 17477  010EAA  6ED9               	movwf	fsr2l,c
 17478  010EAC  0E00               	movlw	high _pBDTEntryIn
 17479  010EAE  20F4               	addwfc	prodh,w,c
 17480  010EB0  6EDA               	movwf	fsr2h,c
 17481  010EB2  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17482  010EB6  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17483                           
 17484                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 17485  010EBA  010D               	movlb	13	; () banked
 17486  010EBC  5134               	movf	52,w,b	;volatile
 17487  010EBE  0B0F               	andlw	15
 17488  010EC0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17489  010EC2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17490  010EC4  0D01               	mullw	1
 17491  010EC6  0E16               	movlw	low _ep_data_in
 17492  010EC8  24F3               	addwf	prodl,w,c
 17493  010ECA  6ED9               	movwf	fsr2l,c
 17494  010ECC  0E00               	movlw	high _ep_data_in
 17495  010ECE                     L11:
 17496  010ECE  20F4               	addwfc	prodh,w,c
 17497  010ED0  6EDA               	movwf	fsr2h,c
 17498  010ED2  50DF               	movf	indf2,w,c
 17499  010ED4  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 17500                           
 17501                           ; BSR set to: 13
 17502                           ;usb_device.c: 2832: }
 17503                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 17504                           
 17505                           ; BSR set to: 13
 17506  010ED6  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 17507  010ED8  D002               	goto	i2l5886
 17508                           
 17509                           ; BSR set to: 13
 17510                           ;usb_device.c: 2839: {
 17511                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 17512  010EDA  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 17513                           
 17514                           ;usb_device.c: 2841: }
 17515  010EDC  D001               	goto	i2l5888
 17516  010EDE                     i2l5886:
 17517                           
 17518                           ; BSR set to: 13
 17519                           ;usb_device.c: 2842: else
 17520                           ;usb_device.c: 2843: {
 17521                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 17522  010EDE  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 17523  010EE0                     i2l5888:
 17524                           
 17525                           ; BSR set to: 13
 17526                           ;usb_device.c: 2845: }
 17527                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 17528  010EE0  010D               	movlb	13	; () banked
 17529  010EE2  BF34               	btfsc	52,7,b	;volatile
 17530  010EE4  D00B               	goto	i2l5892
 17531                           
 17532                           ; BSR set to: 13
 17533                           ;usb_device.c: 2851: {
 17534                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17535  010EE6  010D               	movlb	13	; () banked
 17536  010EE8  5134               	movf	52,w,b	;volatile
 17537  010EEA  0B0F               	andlw	15
 17538  010EEC  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17539  010EEE  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17540  010EF0  0D02               	mullw	2
 17541  010EF2  0E0A               	movlw	low _pBDTEntryOut
 17542  010EF4  24F3               	addwf	prodl,w,c
 17543  010EF6  6ED9               	movwf	fsr2l,c
 17544  010EF8  0E01               	movlw	high _pBDTEntryOut
 17545  010EFA  D00A               	goto	L12
 17546  010EFC                     i2l5892:
 17547                           
 17548                           ; BSR set to: 13
 17549                           ;usb_device.c: 2854: else
 17550                           ;usb_device.c: 2855: {
 17551                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17552  010EFC  010D               	movlb	13	; () banked
 17553  010EFE  5134               	movf	52,w,b	;volatile
 17554  010F00  0B0F               	andlw	15
 17555  010F02  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17556  010F04  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17557  010F06  0D02               	mullw	2
 17558  010F08  0E10               	movlw	low _pBDTEntryIn
 17559  010F0A  24F3               	addwf	prodl,w,c
 17560  010F0C  6ED9               	movwf	fsr2l,c
 17561  010F0E  0E00               	movlw	high _pBDTEntryIn
 17562  010F10                     L12:
 17563  010F10  20F4               	addwfc	prodh,w,c
 17564  010F12  6EDA               	movwf	fsr2h,c
 17565  010F14  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 17566  010F18  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 17567                           
 17568                           ; BSR set to: 13
 17569                           ;usb_device.c: 2857: }
 17570                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 17571                           
 17572                           ; BSR set to: 13
 17573  010F1C  0E03               	movlw	3
 17574  010F1E  010D               	movlb	13	; () banked
 17575  010F20  1931               	xorwf	49,w,b	;volatile
 17576  010F22  A4D8               	btfss	status,2,c
 17577  010F24  D031               	goto	i2l5908
 17578                           
 17579                           ; BSR set to: 13
 17580                           ;usb_device.c: 2861: {
 17581                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 17582  010F26  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17583  010F2A  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17584  010F2E  AEDF               	btfss	indf2,7,c
 17585  010F30  D01E               	goto	i2l5904
 17586                           
 17587                           ; BSR set to: 13
 17588                           ;usb_device.c: 2863: {
 17589                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 17590  010F32  010D               	movlb	13	; () banked
 17591  010F34  BF34               	btfsc	52,7,b	;volatile
 17592  010F36  D00E               	goto	i2l5902
 17593                           
 17594                           ; BSR set to: 13
 17595                           ;usb_device.c: 2867: {
 17596                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17597  010F38  010D               	movlb	13	; () banked
 17598  010F3A  5134               	movf	52,w,b	;volatile
 17599  010F3C  0B0F               	andlw	15
 17600  010F3E  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17601  010F40  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17602  010F42  0D01               	mullw	1
 17603  010F44  0E18               	movlw	low _ep_data_out
 17604  010F46  24F3               	addwf	prodl,w,c
 17605  010F48  6ED9               	movwf	fsr2l,c
 17606  010F4A  0E01               	movlw	high _ep_data_out
 17607  010F4C  20F4               	addwfc	prodh,w,c
 17608  010F4E  6EDA               	movwf	fsr2h,c
 17609  010F50  0101               	movlb	1	; () banked
 17610  010F52  D00C               	goto	L13
 17611  010F54                     i2l5902:
 17612                           
 17613                           ;usb_device.c: 2870: else
 17614                           ;usb_device.c: 2871: {
 17615                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17616  010F54  010D               	movlb	13	; () banked
 17617  010F56  5134               	movf	52,w,b	;volatile
 17618  010F58  0B0F               	andlw	15
 17619  010F5A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17620  010F5C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17621  010F5E  0D01               	mullw	1
 17622  010F60  0E16               	movlw	low _ep_data_in
 17623  010F62  24F3               	addwf	prodl,w,c
 17624  010F64  6ED9               	movwf	fsr2l,c
 17625  010F66  0E00               	movlw	high _ep_data_in
 17626  010F68  20F4               	addwfc	prodh,w,c
 17627  010F6A  6EDA               	movwf	fsr2h,c
 17628  010F6C                     L13:
 17629  010F6C  82DF               	bsf	indf2,1,c
 17630  010F6E                     i2l5904:
 17631                           
 17632                           ;usb_device.c: 2873: }
 17633                           ;usb_device.c: 2874: }
 17634                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 17635  010F6E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17636  010F72  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17637  010F76  0E00               	movlw	0
 17638  010F78  84DB               	bsf	plusw2,2,c
 17639                           
 17640                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 17641  010F7A  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17642  010F7E  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17643  010F82  0E00               	movlw	0
 17644  010F84  8EDB               	bsf	plusw2,7,c
 17645                           
 17646                           ;usb_device.c: 2879: }
 17647  010F86  0012               	return	
 17648  010F88                     i2l5908:
 17649                           
 17650                           ;usb_device.c: 2880: else
 17651                           ;usb_device.c: 2881: {
 17652                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17653  010F88  0E04               	movlw	4
 17654  010F8A  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 17655                           
 17656                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 17657  010F8C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17658  010F90  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17659  010F94  AEDF               	btfss	indf2,7,c
 17660  010F96  D01B               	goto	i2l5918
 17661                           
 17662                           ;usb_device.c: 2888: {
 17663                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 17664  010F98  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17665  010F9C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17666  010FA0  0E7F               	movlw	127
 17667  010FA2  16DF               	andwf	indf2,f,c
 17668                           
 17669                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 17670  010FA4  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17671  010FA8  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17672  010FAC  0E00               	movlw	0
 17673  010FAE  8CDB               	bsf	plusw2,6,c
 17674                           
 17675                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17676  010FB0  0E00               	movlw	0
 17677  010FB2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17678  010FB4  0E05               	movlw	5
 17679  010FB6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17680  010FB8  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17681  010FBC  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17682  010FC0  0E00               	movlw	0
 17683  010FC2  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17684  010FC4  0E02               	movlw	2
 17685  010FC6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17686  010FC8  EC8D  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17687                           
 17688                           ;usb_device.c: 2894: }
 17689  010FCC  D006               	goto	i2l5920
 17690  010FCE                     i2l5918:
 17691                           
 17692                           ;usb_device.c: 2895: else
 17693                           ;usb_device.c: 2896: {
 17694                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 17695  010FCE  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17696  010FD2  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17697  010FD6  0E00               	movlw	0
 17698  010FD8  8CDB               	bsf	plusw2,6,c
 17699  010FDA                     i2l5920:
 17700                           
 17701                           ;usb_device.c: 2899: }
 17702                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17703  010FDA  0E04               	movlw	4
 17704  010FDC  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 17705                           
 17706                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 17707  010FDE  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 17708  010FE0  D006               	goto	i2l393
 17709  010FE2  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17710  010FE6  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17711  010FEA  AEDF               	btfss	indf2,7,c
 17712  010FEC  D033               	goto	i2l5934
 17713  010FEE                     i2l393:
 17714                           
 17715                           ;usb_device.c: 2910: {
 17716                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 17717  010FEE  010D               	movlb	13	; () banked
 17718  010FF0  BF34               	btfsc	52,7,b	;volatile
 17719  010FF2  D00E               	goto	i2l5928
 17720                           
 17721                           ; BSR set to: 13
 17722                           ;usb_device.c: 2912: {
 17723                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17724  010FF4  010D               	movlb	13	; () banked
 17725  010FF6  5134               	movf	52,w,b	;volatile
 17726  010FF8  0B0F               	andlw	15
 17727  010FFA  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17728  010FFC  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17729  010FFE  0D01               	mullw	1
 17730  011000  0E18               	movlw	low _ep_data_out
 17731  011002  24F3               	addwf	prodl,w,c
 17732  011004  6ED9               	movwf	fsr2l,c
 17733  011006  0E01               	movlw	high _ep_data_out
 17734  011008  20F4               	addwfc	prodh,w,c
 17735  01100A  6EDA               	movwf	fsr2h,c
 17736  01100C  0101               	movlb	1	; () banked
 17737  01100E  D00C               	goto	L14
 17738  011010                     i2l5928:
 17739                           
 17740                           ;usb_device.c: 2915: else
 17741                           ;usb_device.c: 2916: {
 17742                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17743  011010  010D               	movlb	13	; () banked
 17744  011012  5134               	movf	52,w,b	;volatile
 17745  011014  0B0F               	andlw	15
 17746  011016  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17747  011018  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17748  01101A  0D01               	mullw	1
 17749  01101C  0E16               	movlw	low _ep_data_in
 17750  01101E  24F3               	addwf	prodl,w,c
 17751  011020  6ED9               	movwf	fsr2l,c
 17752  011022  0E00               	movlw	high _ep_data_in
 17753  011024  20F4               	addwfc	prodh,w,c
 17754  011026  6EDA               	movwf	fsr2h,c
 17755  011028                     L14:
 17756  011028  92DF               	bcf	indf2,1,c
 17757                           
 17758                           ;usb_device.c: 2918: }
 17759                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17760                           
 17761                           ; BSR set to: 13
 17762  01102A  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17763  01102E  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17764  011032  0E3B               	movlw	59
 17765  011034  16DF               	andwf	indf2,f,c
 17766                           
 17767                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17768  011036  0E00               	movlw	0
 17769  011038  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17770  01103A  0E05               	movlw	5
 17771  01103C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17772  01103E  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17773  011042  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17774  011046  0E00               	movlw	0
 17775  011048  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17776  01104A  0E02               	movlw	2
 17777  01104C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17778  01104E  EC8D  F0A1         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17779                           
 17780                           ;usb_device.c: 2924: }
 17781  011052  D006               	goto	i2l5936
 17782  011054                     i2l5934:
 17783                           
 17784                           ;usb_device.c: 2925: else
 17785                           ;usb_device.c: 2926: {
 17786                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17787  011054  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17788  011058  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17789  01105C  0E3B               	movlw	59
 17790  01105E  16DF               	andwf	indf2,f,c
 17791  011060                     i2l5936:
 17792                           
 17793                           ;usb_device.c: 2929: }
 17794                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 17795  011060  010D               	movlb	13	; () banked
 17796  011062  5134               	movf	52,w,b	;volatile
 17797  011064  0B0F               	andlw	15
 17798  011066  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17799  011068  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17800  01106A  0D01               	mullw	1
 17801  01106C  0E26               	movlw	38
 17802  01106E  24F3               	addwf	prodl,w,c
 17803  011070  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 17804  011072  0E0F               	movlw	15
 17805  011074  20F4               	addwfc	prodh,w,c
 17806  011076  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 17807                           
 17808                           ; BSR set to: 13
 17809                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 17810  011078  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 17811  01107C  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 17812  011080  0EFE               	movlw	254
 17813  011082  16DF               	andwf	indf2,f,c
 17814                           
 17815                           ; BSR set to: 13
 17816  011084  0012               	return	
 17817  011086                     __end_of_USBStdFeatureReqHandler:
 17818                           	opt stack 0
 17819                           pclatu	equ	0xFFB
 17820                           pclath	equ	0xFFA
 17821                           tblptru	equ	0xFF8
 17822                           tblptrh	equ	0xFF7
 17823                           tblptrl	equ	0xFF6
 17824                           tablat	equ	0xFF5
 17825                           prodh	equ	0xFF4
 17826                           prodl	equ	0xFF3
 17827                           intcon	equ	0xFF2
 17828                           intcon2	equ	0xFF1
 17829                           postinc0	equ	0xFEE
 17830                           fsr0h	equ	0xFEA
 17831                           fsr0l	equ	0xFE9
 17832                           wreg	equ	0xFE8
 17833                           indf1	equ	0xFE7
 17834                           postinc1	equ	0xFE6
 17835                           postdec1	equ	0xFE5
 17836                           fsr1h	equ	0xFE2
 17837                           fsr1l	equ	0xFE1
 17838                           indf2	equ	0xFDF
 17839                           postinc2	equ	0xFDE
 17840                           postdec2	equ	0xFDD
 17841                           plusw2	equ	0xFDB
 17842                           fsr2h	equ	0xFDA
 17843                           fsr2l	equ	0xFD9
 17844                           status	equ	0xFD8
 17845                           
 17846 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 17847 ;; Defined at:
 17848 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 17849 ;; Parameters:    Size  Location     Type
 17850 ;;  event           2   12[COMRAM] enum E8545
 17851 ;;  pdata           2   14[COMRAM] PTR void 
 17852 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 17853 ;;  size            2   16[COMRAM] unsigned int 
 17854 ;; Auto vars:     Size  Location     Type
 17855 ;;		None
 17856 ;; Return value:  Size  Location     Type
 17857 ;;                  1    wreg      unsigned char 
 17858 ;; Registers used:
 17859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17860 ;; Tracked objects:
 17861 ;;		On entry : 0/0
 17862 ;;		On exit  : 0/0
 17863 ;;		Unchanged: 0/0
 17864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17865 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17868 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17869 ;;Total ram usage:        8 bytes
 17870 ;; Hardware stack levels used:    1
 17871 ;; Hardware stack levels required when called:    3
 17872 ;; This function calls:
 17873 ;;		_CDCInitEP
 17874 ;;		_USBCheckCDCRequest
 17875 ;; This function is called by:
 17876 ;;		_USBDeviceTasks
 17877 ;;		_USBStdSetCfgHandler
 17878 ;;		_USBSuspend
 17879 ;;		_USBWakeFromSuspend
 17880 ;;		_USBCtrlTrfSetupHandler
 17881 ;;		_USBCheckStdRequest
 17882 ;;		_USBStdFeatureReqHandler
 17883 ;; This function uses a non-reentrant model
 17884 ;;
 17885                           
 17886                           	psect	text85
 17887  01431A                     __ptext85:
 17888                           	opt stack 0
 17889  01431A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 17890                           	opt stack 15
 17891                           
 17892                           ;My_usb_cdc.c: 45: switch ((int) event) {
 17893                           
 17894                           ;incstack = 0
 17895  01431A  D006               	goto	i2l5530
 17896  01431C                     i2l5524:
 17897                           
 17898                           ;My_usb_cdc.c: 47: CDCInitEP();
 17899  01431C  ECE9  F09D         	call	_CDCInitEP	;wreg free
 17900                           
 17901                           ;My_usb_cdc.c: 48: break;
 17902  014320  0012               	return	
 17903  014322                     i2l5526:
 17904                           
 17905                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 17906  014322  EC7E  F099         	call	_USBCheckCDCRequest	;wreg free
 17907                           
 17908                           ;My_usb_cdc.c: 52: }
 17909                           
 17910                           ;My_usb_cdc.c: 51: break;
 17911  014326  0012               	return	
 17912  014328                     i2l5530:
 17913  014328  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 17914  01432C  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 17915                           
 17916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17917                           ; Switch size 1, requested type "space"
 17918                           ; Number of cases is 1, Range of values is 0 to 0
 17919                           ; switch strategies available:
 17920                           ; Name         Instructions Cycles
 17921                           ; simple_byte            4     3 (average)
 17922                           ;	Chosen strategy is simple_byte
 17923  014330  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 17924  014332  0A00               	xorlw	0	; case 0
 17925  014334  A4D8               	btfss	status,2,c
 17926  014336  0012               	return	
 17927                           
 17928                           ; Switch size 1, requested type "space"
 17929                           ; Number of cases is 2, Range of values is 1 to 3
 17930                           ; switch strategies available:
 17931                           ; Name         Instructions Cycles
 17932                           ; simple_byte            7     4 (average)
 17933                           ;	Chosen strategy is simple_byte
 17934  014338  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 17935  01433A  0A01               	xorlw	1	; case 1
 17936  01433C  B4D8               	btfsc	status,2,c
 17937  01433E  D7EE               	goto	i2l5524
 17938  014340  0A02               	xorlw	2	; case 3
 17939  014342  A4D8               	btfss	status,2,c
 17940  014344  0012               	return	
 17941  014346  D7ED               	goto	i2l5526
 17942  014348                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 17943                           	opt stack 0
 17944                           pclatu	equ	0xFFB
 17945                           pclath	equ	0xFFA
 17946                           tblptru	equ	0xFF8
 17947                           tblptrh	equ	0xFF7
 17948                           tblptrl	equ	0xFF6
 17949                           tablat	equ	0xFF5
 17950                           prodh	equ	0xFF4
 17951                           prodl	equ	0xFF3
 17952                           intcon	equ	0xFF2
 17953                           intcon2	equ	0xFF1
 17954                           postinc0	equ	0xFEE
 17955                           fsr0h	equ	0xFEA
 17956                           fsr0l	equ	0xFE9
 17957                           wreg	equ	0xFE8
 17958                           indf1	equ	0xFE7
 17959                           postinc1	equ	0xFE6
 17960                           postdec1	equ	0xFE5
 17961                           fsr1h	equ	0xFE2
 17962                           fsr1l	equ	0xFE1
 17963                           indf2	equ	0xFDF
 17964                           postinc2	equ	0xFDE
 17965                           postdec2	equ	0xFDD
 17966                           plusw2	equ	0xFDB
 17967                           fsr2h	equ	0xFDA
 17968                           fsr2l	equ	0xFD9
 17969                           status	equ	0xFD8
 17970                           
 17971 ;; *************** function _USBCheckCDCRequest *****************
 17972 ;; Defined at:
 17973 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 17974 ;; Parameters:    Size  Location     Type
 17975 ;;		None
 17976 ;; Auto vars:     Size  Location     Type
 17977 ;;		None
 17978 ;; Return value:  Size  Location     Type
 17979 ;;		None               void
 17980 ;; Registers used:
 17981 ;;		wreg, status,2, status,0
 17982 ;; Tracked objects:
 17983 ;;		On entry : 0/0
 17984 ;;		On exit  : 0/0
 17985 ;;		Unchanged: 0/0
 17986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17991 ;;Total ram usage:        0 bytes
 17992 ;; Hardware stack levels used:    1
 17993 ;; This function calls:
 17994 ;;		Nothing
 17995 ;; This function is called by:
 17996 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17997 ;; This function uses a non-reentrant model
 17998 ;;
 17999                           
 18000                           	psect	text86
 18001  0132FC                     __ptext86:
 18002                           	opt stack 0
 18003  0132FC                     _USBCheckCDCRequest:
 18004                           	opt stack 17
 18005                           
 18006                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 18007                           
 18008                           ;incstack = 0
 18009  0132FC  010D               	movlb	13	; () banked
 18010  0132FE  5130               	movf	48,w,b	;volatile
 18011  013300  0B1F               	andlw	31
 18012  013302  06E8               	decf	wreg,f,c
 18013  013304  A4D8               	btfss	status,2,c
 18014  013306  0012               	return	
 18015                           
 18016                           ; BSR set to: 13
 18017                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 18018                           
 18019                           ; BSR set to: 13
 18020                           
 18021                           ; BSR set to: 13
 18022  013308  010D               	movlb	13	; () banked
 18023  01330A  3930               	swapf	48,w,b	;volatile
 18024  01330C  32E8               	rrcf	wreg,f,c
 18025  01330E  0B03               	andlw	3
 18026  013310  06E8               	decf	wreg,f,c
 18027  013312  A4D8               	btfss	status,2,c
 18028  013314  0012               	return	
 18029                           
 18030                           ; BSR set to: 13
 18031                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 18032                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 18033                           
 18034                           ; BSR set to: 13
 18035                           
 18036                           ; BSR set to: 13
 18037  013316  010D               	movlb	13	; () banked
 18038  013318  5134               	movf	52,w,b	;volatile
 18039  01331A  B4D8               	btfsc	status,2,c
 18040  01331C  D035               	goto	i2l5404
 18041                           
 18042                           ; BSR set to: 13
 18043  01331E  010D               	movlb	13	; () banked
 18044  013320  0534               	decf	52,w,b	;volatile
 18045  013322  A4D8               	btfss	status,2,c
 18046  013324  0012               	return	
 18047  013326  D030               	goto	i2l5404
 18048  013328                     i2l5380:
 18049                           
 18050                           ; BSR set to: 13
 18051                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18052  013328  0E43               	movlw	low _dummy_encapsulated_cmd_response
 18053  01332A  6E0A               	movwf	_inPipes,c	;volatile
 18054  01332C  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18055  01332E  6E0B               	movwf	_inPipes+1,c	;volatile
 18056                           
 18057                           ; BSR set to: 13
 18058                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 18059  013330  0E00               	movlw	0
 18060  013332  6E0F               	movwf	_inPipes+5,c	;volatile
 18061  013334  0E08               	movlw	8
 18062  013336  6E0E               	movwf	_inPipes+4,c	;volatile
 18063                           
 18064                           ; BSR set to: 13
 18065                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18066  013338  800D               	bsf	_inPipes+3,0,c	;volatile
 18067                           
 18068                           ; BSR set to: 13
 18069                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 18070  01333A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18071                           
 18072                           ;usb_device_cdc.c: 232: break;
 18073  01333C  0012               	return	
 18074  01333E                     i2l5388:
 18075                           
 18076                           ; BSR set to: 13
 18077                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18078  01333E  0E43               	movlw	low _dummy_encapsulated_cmd_response
 18079  013340  6E0A               	movwf	_inPipes,c	;volatile
 18080  013342  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18081  013344  6E0B               	movwf	_inPipes+1,c	;volatile
 18082                           
 18083                           ; BSR set to: 13
 18084                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 18085  013346  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18086                           
 18087                           ;usb_device_cdc.c: 237: break;
 18088  013348  0012               	return	
 18089  01334A                     i2l450:
 18090                           
 18091                           ; BSR set to: 13
 18092                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 18093  01334A  CD36 F005          	movff	3382,_outPipes+4	;volatile
 18094  01334E  CD37 F006          	movff	3383,_outPipes+5	;volatile
 18095                           
 18096                           ; BSR set to: 13
 18097                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 18098  013352  0E73               	movlw	low _line_coding
 18099  013354  6E01               	movwf	_outPipes,c	;volatile
 18100  013356  0E01               	movlw	high _line_coding
 18101  013358  6E02               	movwf	_outPipes+1,c	;volatile
 18102                           
 18103                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 18104  01335A  0E00               	movlw	0
 18105  01335C  6E07               	movwf	_outPipes+6,c	;volatile
 18106  01335E  0E00               	movlw	0
 18107  013360  6E08               	movwf	_outPipes+7,c	;volatile
 18108  013362  0E00               	movlw	0
 18109  013364  6E09               	movwf	_outPipes+8,c	;volatile
 18110                           
 18111                           ; BSR set to: 13
 18112                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 18113  013366  8E04               	bsf	_outPipes+3,7,c	;volatile
 18114                           
 18115                           ;usb_device_cdc.c: 246: break;
 18116  013368  0012               	return	
 18117  01336A                     i2l5396:
 18118                           
 18119                           ; BSR set to: 13
 18120                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 18121  01336A  0E73               	movlw	low _line_coding
 18122  01336C  6E0A               	movwf	_inPipes,c	;volatile
 18123  01336E  0E01               	movlw	high _line_coding
 18124  013370  6E0B               	movwf	_inPipes+1,c	;volatile
 18125                           
 18126                           ; BSR set to: 13
 18127  013372  0E00               	movlw	0
 18128  013374  6E0F               	movwf	_inPipes+5,c	;volatile
 18129  013376  0E07               	movlw	7
 18130  013378  6E0E               	movwf	_inPipes+4,c	;volatile
 18131                           
 18132                           ; BSR set to: 13
 18133  01337A  0EC1               	movlw	193
 18134  01337C  6E0D               	movwf	_inPipes+3,c	;volatile
 18135                           
 18136                           ;usb_device_cdc.c: 253: break;
 18137  01337E  0012               	return	
 18138  013380                     i2l452:
 18139                           
 18140                           ; BSR set to: 13
 18141                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 18142  013380  CD32 F12F          	movff	3378,_control_signal_bitmap	;volatile
 18143                           
 18144                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 18145  013384  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18146                           
 18147                           ; BSR set to: 13
 18148                           ;usb_device_cdc.c: 315: }
 18149                           
 18150                           ; BSR set to: 13
 18151                           ;usb_device_cdc.c: 314: break;
 18152                           
 18153                           ;usb_device_cdc.c: 313: default:
 18154                           
 18155                           ;usb_device_cdc.c: 289: break;
 18156  013386  0012               	return	
 18157  013388                     i2l5404:
 18158                           
 18159                           ; BSR set to: 13
 18160  013388  010D               	movlb	13	; () banked
 18161  01338A  5131               	movf	49,w,b	;volatile
 18162                           
 18163                           ; Switch size 1, requested type "space"
 18164                           ; Number of cases is 5, Range of values is 0 to 34
 18165                           ; switch strategies available:
 18166                           ; Name         Instructions Cycles
 18167                           ; simple_byte           16     9 (average)
 18168                           ;	Chosen strategy is simple_byte
 18169  01338C  0A00               	xorlw	0	; case 0
 18170  01338E  B4D8               	btfsc	status,2,c
 18171  013390  D7CB               	goto	i2l5380
 18172  013392  0A01               	xorlw	1	; case 1
 18173  013394  B4D8               	btfsc	status,2,c
 18174  013396  D7D3               	goto	i2l5388
 18175  013398  0A21               	xorlw	33	; case 32
 18176  01339A  B4D8               	btfsc	status,2,c
 18177  01339C  D7D6               	goto	i2l450
 18178  01339E  0A01               	xorlw	1	; case 33
 18179  0133A0  B4D8               	btfsc	status,2,c
 18180  0133A2  D7E3               	goto	i2l5396
 18181  0133A4  0A03               	xorlw	3	; case 34
 18182  0133A6  A4D8               	btfss	status,2,c
 18183  0133A8  0012               	return	
 18184  0133AA  D7EA               	goto	i2l452
 18185  0133AC                     __end_of_USBCheckCDCRequest:
 18186                           	opt stack 0
 18187                           pclatu	equ	0xFFB
 18188                           pclath	equ	0xFFA
 18189                           tblptru	equ	0xFF8
 18190                           tblptrh	equ	0xFF7
 18191                           tblptrl	equ	0xFF6
 18192                           tablat	equ	0xFF5
 18193                           prodh	equ	0xFF4
 18194                           prodl	equ	0xFF3
 18195                           intcon	equ	0xFF2
 18196                           intcon2	equ	0xFF1
 18197                           postinc0	equ	0xFEE
 18198                           fsr0h	equ	0xFEA
 18199                           fsr0l	equ	0xFE9
 18200                           wreg	equ	0xFE8
 18201                           indf1	equ	0xFE7
 18202                           postinc1	equ	0xFE6
 18203                           postdec1	equ	0xFE5
 18204                           fsr1h	equ	0xFE2
 18205                           fsr1l	equ	0xFE1
 18206                           indf2	equ	0xFDF
 18207                           postinc2	equ	0xFDE
 18208                           postdec2	equ	0xFDD
 18209                           plusw2	equ	0xFDB
 18210                           fsr2h	equ	0xFDA
 18211                           fsr2l	equ	0xFD9
 18212                           status	equ	0xFD8
 18213                           
 18214 ;; *************** function _CDCInitEP *****************
 18215 ;; Defined at:
 18216 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 18217 ;; Parameters:    Size  Location     Type
 18218 ;;		None
 18219 ;; Auto vars:     Size  Location     Type
 18220 ;;		None
 18221 ;; Return value:  Size  Location     Type
 18222 ;;		None               void
 18223 ;; Registers used:
 18224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18225 ;; Tracked objects:
 18226 ;;		On entry : 0/0
 18227 ;;		On exit  : 0/0
 18228 ;;		Unchanged: 0/0
 18229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18234 ;;Total ram usage:        0 bytes
 18235 ;; Hardware stack levels used:    1
 18236 ;; Hardware stack levels required when called:    2
 18237 ;; This function calls:
 18238 ;;		_USBEnableEndpoint
 18239 ;;		i2_USBTransferOnePacket
 18240 ;; This function is called by:
 18241 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18242 ;; This function uses a non-reentrant model
 18243 ;;
 18244                           
 18245                           	psect	text87
 18246  013BD2                     __ptext87:
 18247                           	opt stack 0
 18248  013BD2                     _CDCInitEP:
 18249                           	opt stack 15
 18250                           
 18251                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 18252                           
 18253                           ; BSR set to: 13
 18254                           ;incstack = 0
 18255  013BD2  0E00               	movlw	0
 18256  013BD4  0101               	movlb	1	; () banked
 18257  013BD6  6F73               	movwf	_line_coding& (0+255),b
 18258  013BD8  0E4B               	movlw	75
 18259  013BDA  6F74               	movwf	(_line_coding+1)& (0+255),b
 18260  013BDC  0E00               	movlw	0
 18261  013BDE  6F75               	movwf	(_line_coding+2)& (0+255),b
 18262  013BE0  0E00               	movlw	0
 18263  013BE2  6F76               	movwf	(_line_coding+3)& (0+255),b
 18264                           
 18265                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 18266  013BE4  0E00               	movlw	0
 18267  013BE6  0101               	movlb	1	; () banked
 18268  013BE8  6F77               	movwf	(_line_coding+4)& (0+255),b
 18269                           
 18270                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 18271  013BEA  0E00               	movlw	0
 18272  013BEC  0101               	movlb	1	; () banked
 18273  013BEE  6F78               	movwf	(_line_coding+5)& (0+255),b
 18274                           
 18275                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 18276  013BF0  0E08               	movlw	8
 18277  013BF2  0101               	movlb	1	; () banked
 18278  013BF4  6F79               	movwf	(_line_coding+6)& (0+255),b
 18279                           
 18280                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 18281  013BF6  0E00               	movlw	0
 18282  013BF8  0100               	movlb	0	; () banked
 18283  013BFA  6FD2               	movwf	_cdc_rx_len& (0+255),b
 18284                           
 18285                           ; BSR set to: 0
 18286                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 18287  013BFC  0E1A               	movlw	26
 18288  013BFE  6E36               	movwf	USBEnableEndpoint@options,c
 18289  013C00  0E01               	movlw	1
 18290  013C02  EC96  F0A0         	call	_USBEnableEndpoint
 18291                           
 18292                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 18293  013C06  0E1E               	movlw	30
 18294  013C08  6E36               	movwf	USBEnableEndpoint@options,c
 18295  013C0A  0E02               	movlw	2
 18296  013C0C  EC96  F0A0         	call	_USBEnableEndpoint
 18297                           
 18298                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18299  013C10  0E00               	movlw	0
 18300  013C12  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 18301  013C14  0E00               	movlw	low _cdc_data_rx
 18302  013C16  6E2F               	movwf	i2USBTransferOnePacket@data,c
 18303  013C18  0E02               	movlw	high _cdc_data_rx
 18304  013C1A  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 18305  013C1C  0E40               	movlw	64
 18306  013C1E  6E31               	movwf	i2USBTransferOnePacket@len,c
 18307  013C20  0E02               	movlw	2
 18308  013C22  EC69  F098         	call	i2_USBTransferOnePacket
 18309  013C26  C02E  F0D0         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 18310  013C2A  C02F  F0D1         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18311                           
 18312                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 18313  013C2E  0E00               	movlw	0
 18314  013C30  0101               	movlb	1	; () banked
 18315  013C32  6F25               	movwf	_CDCDataInHandle& (0+255),b
 18316  013C34  0E00               	movlw	0
 18317  013C36  0101               	movlb	1	; () banked
 18318  013C38  6F26               	movwf	(_CDCDataInHandle+1)& (0+255),b
 18319                           
 18320                           ; BSR set to: 1
 18321                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 18322  013C3A  0E00               	movlw	0
 18323  013C3C  6E28               	movwf	_cdc_trf_state,c
 18324                           
 18325                           ; BSR set to: 1
 18326  013C3E  0012               	return		;funcret
 18327  013C40                     __end_of_CDCInitEP:
 18328                           	opt stack 0
 18329                           pclatu	equ	0xFFB
 18330                           pclath	equ	0xFFA
 18331                           tblptru	equ	0xFF8
 18332                           tblptrh	equ	0xFF7
 18333                           tblptrl	equ	0xFF6
 18334                           tablat	equ	0xFF5
 18335                           prodh	equ	0xFF4
 18336                           prodl	equ	0xFF3
 18337                           intcon	equ	0xFF2
 18338                           intcon2	equ	0xFF1
 18339                           postinc0	equ	0xFEE
 18340                           fsr0h	equ	0xFEA
 18341                           fsr0l	equ	0xFE9
 18342                           wreg	equ	0xFE8
 18343                           indf1	equ	0xFE7
 18344                           postinc1	equ	0xFE6
 18345                           postdec1	equ	0xFE5
 18346                           fsr1h	equ	0xFE2
 18347                           fsr1l	equ	0xFE1
 18348                           indf2	equ	0xFDF
 18349                           postinc2	equ	0xFDE
 18350                           postdec2	equ	0xFDD
 18351                           plusw2	equ	0xFDB
 18352                           fsr2h	equ	0xFDA
 18353                           fsr2l	equ	0xFD9
 18354                           status	equ	0xFD8
 18355                           
 18356 ;; *************** function i2_USBTransferOnePacket *****************
 18357 ;; Defined at:
 18358 ;;		line 995 in file "../My_library/usb/usb_device.c"
 18359 ;; Parameters:    Size  Location     Type
 18360 ;;  ep              1    wreg     unsigned char 
 18361 ;;  dir             1    0[COMRAM] unsigned char 
 18362 ;;  data            2    1[COMRAM] PTR unsigned char 
 18363 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18364 ;;  len             1    3[COMRAM] unsigned char 
 18365 ;; Auto vars:     Size  Location     Type
 18366 ;;  ep              1    4[COMRAM] unsigned char 
 18367 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 18368 ;;		 -> NULL(0), BDT(48), 
 18369 ;; Return value:  Size  Location     Type
 18370 ;;                  2    0[COMRAM] PTR void 
 18371 ;; Registers used:
 18372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18379 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18381 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18382 ;;Total ram usage:        7 bytes
 18383 ;; Hardware stack levels used:    1
 18384 ;; This function calls:
 18385 ;;		Nothing
 18386 ;; This function is called by:
 18387 ;;		_CDCInitEP
 18388 ;; This function uses a non-reentrant model
 18389 ;;
 18390                           
 18391                           	psect	text88
 18392  0130D2                     __ptext88:
 18393                           	opt stack 0
 18394  0130D2                     i2_USBTransferOnePacket:
 18395                           	opt stack 16
 18396                           
 18397                           ; BSR set to: 1
 18398                           ;incstack = 0
 18399                           ;i2USBTransferOnePacket@ep stored from wreg
 18400  0130D2  6E32               	movwf	i2USBTransferOnePacket@ep,c
 18401                           
 18402                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18403                           ;usb_device.c: 1000: if(dir != 0)
 18404  0130D4  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18405  0130D6  B4D8               	btfsc	status,2,c
 18406  0130D8  D007               	goto	i2l5340
 18407                           
 18408                           ;usb_device.c: 1001: {
 18409                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18410  0130DA  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18411  0130DC  0D02               	mullw	2
 18412  0130DE  0E10               	movlw	low _pBDTEntryIn
 18413  0130E0  24F3               	addwf	prodl,w,c
 18414  0130E2  6ED9               	movwf	fsr2l,c
 18415  0130E4  0E00               	movlw	high _pBDTEntryIn
 18416  0130E6  D006               	goto	L15
 18417  0130E8                     i2l5340:
 18418                           
 18419                           ;usb_device.c: 1005: else
 18420                           ;usb_device.c: 1006: {
 18421                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18422  0130E8  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18423  0130EA  0D02               	mullw	2
 18424  0130EC  0E0A               	movlw	low _pBDTEntryOut
 18425  0130EE  24F3               	addwf	prodl,w,c
 18426  0130F0  6ED9               	movwf	fsr2l,c
 18427  0130F2  0E01               	movlw	high _pBDTEntryOut
 18428  0130F4                     L15:
 18429  0130F4  20F4               	addwfc	prodh,w,c
 18430  0130F6  6EDA               	movwf	fsr2h,c
 18431  0130F8  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 18432  0130FC  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 18433                           
 18434                           ;usb_device.c: 1009: }
 18435                           ;usb_device.c: 1013: if(handle == 0)
 18436  013100  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18437  013102  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 18438  013104  A4D8               	btfss	status,2,c
 18439  013106  D005               	goto	i2l5348
 18440                           
 18441                           ;usb_device.c: 1014: {
 18442                           ;usb_device.c: 1015: return 0;
 18443  013108  0E00               	movlw	0
 18444  01310A  6E2E               	movwf	?i2_USBTransferOnePacket,c
 18445  01310C  0E00               	movlw	0
 18446  01310E  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 18447  013110  0012               	return	
 18448  013112                     i2l5348:
 18449                           
 18450                           ;usb_device.c: 1016: }
 18451                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18452  013112  EE20 F002          	lfsr	2,2
 18453  013116  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18454  013118  26D9               	addwf	fsr2l,f,c
 18455  01311A  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18456  01311C  22DA               	addwfc	fsr2h,f,c
 18457  01311E  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 18458  013122  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 18459                           
 18460                           ;usb_device.c: 1030: handle->CNT = len;
 18461  013126  EE20 F001          	lfsr	2,1
 18462  01312A  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18463  01312C  26D9               	addwf	fsr2l,f,c
 18464  01312E  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18465  013130  22DA               	addwfc	fsr2h,f,c
 18466  013132  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 18467                           
 18468                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18469  013136  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18470  01313A  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18471  01313E  0E40               	movlw	64
 18472  013140  16DF               	andwf	indf2,f,c
 18473                           
 18474                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18475  013142  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18476  013146  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18477  01314A  0E00               	movlw	0
 18478  01314C  86DB               	bsf	plusw2,3,c
 18479                           
 18480                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18481  01314E  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18482  013152  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18483  013156  0E00               	movlw	0
 18484  013158  8EDB               	bsf	plusw2,7,c
 18485                           
 18486                           ;usb_device.c: 1036: if(dir != 0)
 18487  01315A  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18488  01315C  B4D8               	btfsc	status,2,c
 18489  01315E  D007               	goto	i2l5360
 18490                           
 18491                           ;usb_device.c: 1037: {
 18492                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18493  013160  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18494  013162  0D02               	mullw	2
 18495  013164  0E10               	movlw	low _pBDTEntryIn
 18496  013166  24F3               	addwf	prodl,w,c
 18497  013168  6ED9               	movwf	fsr2l,c
 18498  01316A  0E00               	movlw	high _pBDTEntryIn
 18499  01316C  D006               	goto	L16
 18500  01316E                     i2l5360:
 18501                           
 18502                           ;usb_device.c: 1041: else
 18503                           ;usb_device.c: 1042: {
 18504                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18505  01316E  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18506  013170  0D02               	mullw	2
 18507  013172  0E0A               	movlw	low _pBDTEntryOut
 18508  013174  24F3               	addwf	prodl,w,c
 18509  013176  6ED9               	movwf	fsr2l,c
 18510  013178  0E01               	movlw	high _pBDTEntryOut
 18511  01317A                     L16:
 18512  01317A  20F4               	addwfc	prodh,w,c
 18513  01317C  6EDA               	movwf	fsr2h,c
 18514  01317E  0E04               	movlw	4
 18515  013180  1ADF               	xorwf	indf2,f,c
 18516                           
 18517                           ;usb_device.c: 1045: }
 18518                           ;usb_device.c: 1046: return (void*)handle;
 18519  013182  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 18520  013186  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 18521  01318A  0012               	return	
 18522  01318C                     __end_ofi2_USBTransferOnePacket:
 18523                           	opt stack 0
 18524                           pclatu	equ	0xFFB
 18525                           pclath	equ	0xFFA
 18526                           tblptru	equ	0xFF8
 18527                           tblptrh	equ	0xFF7
 18528                           tblptrl	equ	0xFF6
 18529                           tablat	equ	0xFF5
 18530                           prodh	equ	0xFF4
 18531                           prodl	equ	0xFF3
 18532                           intcon	equ	0xFF2
 18533                           intcon2	equ	0xFF1
 18534                           postinc0	equ	0xFEE
 18535                           fsr0h	equ	0xFEA
 18536                           fsr0l	equ	0xFE9
 18537                           wreg	equ	0xFE8
 18538                           indf1	equ	0xFE7
 18539                           postinc1	equ	0xFE6
 18540                           postdec1	equ	0xFE5
 18541                           fsr1h	equ	0xFE2
 18542                           fsr1l	equ	0xFE1
 18543                           indf2	equ	0xFDF
 18544                           postinc2	equ	0xFDE
 18545                           postdec2	equ	0xFDD
 18546                           plusw2	equ	0xFDB
 18547                           fsr2h	equ	0xFDA
 18548                           fsr2l	equ	0xFD9
 18549                           status	equ	0xFD8
 18550                           
 18551 ;; *************** function _USBEnableEndpoint *****************
 18552 ;; Defined at:
 18553 ;;		line 878 in file "../My_library/usb/usb_device.c"
 18554 ;; Parameters:    Size  Location     Type
 18555 ;;  ep              1    wreg     unsigned char 
 18556 ;;  options         1    8[COMRAM] unsigned char 
 18557 ;; Auto vars:     Size  Location     Type
 18558 ;;  ep              1   11[COMRAM] unsigned char 
 18559 ;;  p               2    9[COMRAM] PTR unsigned char 
 18560 ;;		 -> UEP0(1), 
 18561 ;; Return value:  Size  Location     Type
 18562 ;;		None               void
 18563 ;; Registers used:
 18564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18565 ;; Tracked objects:
 18566 ;;		On entry : 0/0
 18567 ;;		On exit  : 0/0
 18568 ;;		Unchanged: 0/0
 18569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18570 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18571 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18573 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18574 ;;Total ram usage:        4 bytes
 18575 ;; Hardware stack levels used:    1
 18576 ;; Hardware stack levels required when called:    1
 18577 ;; This function calls:
 18578 ;;		_USBConfigureEndpoint
 18579 ;; This function is called by:
 18580 ;;		_CDCInitEP
 18581 ;; This function uses a non-reentrant model
 18582 ;;
 18583                           
 18584                           	psect	text89
 18585  01412C                     __ptext89:
 18586                           	opt stack 0
 18587  01412C                     _USBEnableEndpoint:
 18588                           	opt stack 15
 18589                           
 18590                           ;incstack = 0
 18591                           ;USBEnableEndpoint@ep stored from wreg
 18592  01412C  6E39               	movwf	USBEnableEndpoint@ep,c
 18593                           
 18594                           ;usb_device.c: 880: unsigned char* p;
 18595                           ;usb_device.c: 884: if(options & 0x04)
 18596  01412E  A436               	btfss	USBEnableEndpoint@options,2,c
 18597  014130  D005               	goto	i2l5292
 18598                           
 18599                           ;usb_device.c: 885: {
 18600                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 18601  014132  0E00               	movlw	0
 18602  014134  6E2E               	movwf	USBConfigureEndpoint@direction,c
 18603  014136  5039               	movf	USBEnableEndpoint@ep,w,c
 18604  014138  EC1E  F09B         	call	_USBConfigureEndpoint
 18605  01413C                     i2l5292:
 18606                           
 18607                           ;usb_device.c: 887: }
 18608                           ;usb_device.c: 888: if(options & 0x02)
 18609  01413C  A236               	btfss	USBEnableEndpoint@options,1,c
 18610  01413E  D005               	goto	i2l5296
 18611                           
 18612                           ;usb_device.c: 889: {
 18613                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 18614  014140  0E01               	movlw	1
 18615  014142  6E2E               	movwf	USBConfigureEndpoint@direction,c
 18616  014144  5039               	movf	USBEnableEndpoint@ep,w,c
 18617  014146  EC1E  F09B         	call	_USBConfigureEndpoint
 18618  01414A                     i2l5296:
 18619                           
 18620                           ;usb_device.c: 891: }
 18621                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 18622  01414A  5039               	movf	USBEnableEndpoint@ep,w,c
 18623  01414C  0D01               	mullw	1
 18624  01414E  0E26               	movlw	38
 18625  014150  24F3               	addwf	prodl,w,c
 18626  014152  6E37               	movwf	USBEnableEndpoint@p,c
 18627  014154  0E0F               	movlw	15
 18628  014156  20F4               	addwfc	prodh,w,c
 18629  014158  6E38               	movwf	USBEnableEndpoint@p+1,c
 18630                           
 18631                           ;usb_device.c: 901: *p = options;
 18632  01415A  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 18633  01415E  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 18634  014162  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 18635  014166  0012               	return		;funcret
 18636  014168                     __end_of_USBEnableEndpoint:
 18637                           	opt stack 0
 18638                           pclatu	equ	0xFFB
 18639                           pclath	equ	0xFFA
 18640                           tblptru	equ	0xFF8
 18641                           tblptrh	equ	0xFF7
 18642                           tblptrl	equ	0xFF6
 18643                           tablat	equ	0xFF5
 18644                           prodh	equ	0xFF4
 18645                           prodl	equ	0xFF3
 18646                           intcon	equ	0xFF2
 18647                           intcon2	equ	0xFF1
 18648                           postinc0	equ	0xFEE
 18649                           fsr0h	equ	0xFEA
 18650                           fsr0l	equ	0xFE9
 18651                           wreg	equ	0xFE8
 18652                           indf1	equ	0xFE7
 18653                           postinc1	equ	0xFE6
 18654                           postdec1	equ	0xFE5
 18655                           fsr1h	equ	0xFE2
 18656                           fsr1l	equ	0xFE1
 18657                           indf2	equ	0xFDF
 18658                           postinc2	equ	0xFDE
 18659                           postdec2	equ	0xFDD
 18660                           plusw2	equ	0xFDB
 18661                           fsr2h	equ	0xFDA
 18662                           fsr2l	equ	0xFD9
 18663                           status	equ	0xFD8
 18664                           
 18665 ;; *************** function _USBConfigureEndpoint *****************
 18666 ;; Defined at:
 18667 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 18668 ;; Parameters:    Size  Location     Type
 18669 ;;  EPNum           1    wreg     unsigned char 
 18670 ;;  direction       1    0[COMRAM] unsigned char 
 18671 ;; Auto vars:     Size  Location     Type
 18672 ;;  EPNum           1    5[COMRAM] unsigned char 
 18673 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 18674 ;;		 -> BDT(48), 
 18675 ;; Return value:  Size  Location     Type
 18676 ;;		None               void
 18677 ;; Registers used:
 18678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18679 ;; Tracked objects:
 18680 ;;		On entry : 0/0
 18681 ;;		On exit  : 0/0
 18682 ;;		Unchanged: 0/0
 18683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18684 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18685 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18686 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18687 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18688 ;;Total ram usage:        8 bytes
 18689 ;; Hardware stack levels used:    1
 18690 ;; This function calls:
 18691 ;;		Nothing
 18692 ;; This function is called by:
 18693 ;;		_USBEnableEndpoint
 18694 ;; This function uses a non-reentrant model
 18695 ;;
 18696                           
 18697                           	psect	text90
 18698  01363C                     __ptext90:
 18699                           	opt stack 0
 18700  01363C                     _USBConfigureEndpoint:
 18701                           	opt stack 15
 18702                           
 18703                           ;incstack = 0
 18704                           ;USBConfigureEndpoint@EPNum stored from wreg
 18705  01363C  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 18706                           
 18707                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 18708                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 18709  01363E  0E00               	movlw	0
 18710  013640  6E34               	movwf	USBConfigureEndpoint@handle,c
 18711  013642  0E0D               	movlw	13
 18712  013644  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 18713                           
 18714                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 18715  013646  502E               	movf	USBConfigureEndpoint@direction,w,c
 18716  013648  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 18717  01364A  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 18718  01364C  90D8               	bcf	status,0,c
 18719  01364E  362F               	rlcf	??_USBConfigureEndpoint,f,c
 18720  013650  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 18721  013652  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 18722  013654  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 18723  013656  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 18724  013658  90D8               	bcf	status,0,c
 18725  01365A  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18726  01365C  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18727  01365E  90D8               	bcf	status,0,c
 18728  013660  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18729  013662  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18730  013664  502F               	movf	??_USBConfigureEndpoint,w,c
 18731  013666  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 18732  013668  5030               	movf	??_USBConfigureEndpoint+1,w,c
 18733  01366A  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 18734  01366C  90D8               	bcf	status,0,c
 18735  01366E  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18736  013670  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18737  013672  90D8               	bcf	status,0,c
 18738  013674  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 18739  013676  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 18740  013678  5031               	movf	??_USBConfigureEndpoint+2,w,c
 18741  01367A  2634               	addwf	USBConfigureEndpoint@handle,f,c
 18742  01367C  5032               	movf	??_USBConfigureEndpoint+3,w,c
 18743  01367E  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 18744                           
 18745                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 18746  013680  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18747  013684  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18748  013688  9EDF               	bcf	indf2,7,c
 18749                           
 18750                           ;usb_device.c: 1557: if(direction == 0)
 18751  01368A  502E               	movf	USBConfigureEndpoint@direction,w,c
 18752  01368C  A4D8               	btfss	status,2,c
 18753  01368E  D007               	goto	i2l5282
 18754                           
 18755                           ;usb_device.c: 1558: {
 18756                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 18757  013690  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 18758  013692  0D02               	mullw	2
 18759  013694  0E0A               	movlw	low _pBDTEntryOut
 18760  013696  24F3               	addwf	prodl,w,c
 18761  013698  6ED9               	movwf	fsr2l,c
 18762  01369A  0E01               	movlw	high _pBDTEntryOut
 18763  01369C  D006               	goto	L17
 18764  01369E                     i2l5282:
 18765                           
 18766                           ;usb_device.c: 1561: else
 18767                           ;usb_device.c: 1562: {
 18768                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 18769  01369E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 18770  0136A0  0D02               	mullw	2
 18771  0136A2  0E10               	movlw	low _pBDTEntryIn
 18772  0136A4  24F3               	addwf	prodl,w,c
 18773  0136A6  6ED9               	movwf	fsr2l,c
 18774  0136A8  0E00               	movlw	high _pBDTEntryIn
 18775  0136AA                     L17:
 18776  0136AA  20F4               	addwfc	prodh,w,c
 18777  0136AC  6EDA               	movwf	fsr2h,c
 18778  0136AE  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 18779  0136B2  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 18780                           
 18781                           ;usb_device.c: 1564: }
 18782                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 18783  0136B6  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18784  0136BA  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18785  0136BE  9CDF               	bcf	indf2,6,c
 18786                           
 18787                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 18788  0136C0  EE20 F004          	lfsr	2,4
 18789  0136C4  5034               	movf	USBConfigureEndpoint@handle,w,c
 18790  0136C6  26D9               	addwf	fsr2l,f,c
 18791  0136C8  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 18792  0136CA  22DA               	addwfc	fsr2h,f,c
 18793  0136CC  8CDF               	bsf	indf2,6,c
 18794  0136CE  0012               	return		;funcret
 18795  0136D0                     __end_of_USBConfigureEndpoint:
 18796                           	opt stack 0
 18797                           pclatu	equ	0xFFB
 18798                           pclath	equ	0xFFA
 18799                           tblptru	equ	0xFF8
 18800                           tblptrh	equ	0xFF7
 18801                           tblptrl	equ	0xFF6
 18802                           tablat	equ	0xFF5
 18803                           prodh	equ	0xFF4
 18804                           prodl	equ	0xFF3
 18805                           intcon	equ	0xFF2
 18806                           intcon2	equ	0xFF1
 18807                           postinc0	equ	0xFEE
 18808                           fsr0h	equ	0xFEA
 18809                           fsr0l	equ	0xFE9
 18810                           wreg	equ	0xFE8
 18811                           indf1	equ	0xFE7
 18812                           postinc1	equ	0xFE6
 18813                           postdec1	equ	0xFE5
 18814                           fsr1h	equ	0xFE2
 18815                           fsr1l	equ	0xFE1
 18816                           indf2	equ	0xFDF
 18817                           postinc2	equ	0xFDE
 18818                           postdec2	equ	0xFDD
 18819                           plusw2	equ	0xFDB
 18820                           fsr2h	equ	0xFDA
 18821                           fsr2l	equ	0xFD9
 18822                           status	equ	0xFD8
 18823                           
 18824 ;; *************** function _USBCtrlTrfOutHandler *****************
 18825 ;; Defined at:
 18826 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 18827 ;; Parameters:    Size  Location     Type
 18828 ;;		None
 18829 ;; Auto vars:     Size  Location     Type
 18830 ;;		None
 18831 ;; Return value:  Size  Location     Type
 18832 ;;		None               void
 18833 ;; Registers used:
 18834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18835 ;; Tracked objects:
 18836 ;;		On entry : 0/0
 18837 ;;		On exit  : 0/0
 18838 ;;		Unchanged: 0/0
 18839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18844 ;;Total ram usage:        0 bytes
 18845 ;; Hardware stack levels used:    1
 18846 ;; Hardware stack levels required when called:    2
 18847 ;; This function calls:
 18848 ;;		_USBCtrlTrfRxService
 18849 ;; This function is called by:
 18850 ;;		_USBCtrlEPService
 18851 ;; This function uses a non-reentrant model
 18852 ;;
 18853                           
 18854                           	psect	text91
 18855  013EF8                     __ptext91:
 18856                           	opt stack 0
 18857  013EF8                     _USBCtrlTrfOutHandler:
 18858                           	opt stack 15
 18859                           
 18860                           ;usb_device.c: 2543: if(controlTransferState == 2)
 18861                           
 18862                           ;incstack = 0
 18863  013EF8  0E02               	movlw	2
 18864  013EFA  1829               	xorwf	_controlTransferState,w,c	;volatile
 18865  013EFC  A4D8               	btfss	status,2,c
 18866  013EFE  D003               	goto	i2l6390
 18867                           
 18868                           ;usb_device.c: 2544: {
 18869                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 18870  013F00  EC35  F08E         	call	_USBCtrlTrfRxService	;wreg free
 18871                           
 18872                           ;usb_device.c: 2546: }
 18873  013F04  0012               	return	
 18874  013F06                     i2l6390:
 18875                           
 18876                           ;usb_device.c: 2547: else
 18877                           ;usb_device.c: 2548: {
 18878                           ;usb_device.c: 2551: controlTransferState = 0;
 18879  013F06  0E00               	movlw	0
 18880  013F08  6E29               	movwf	_controlTransferState,c	;volatile
 18881                           
 18882                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 18883  013F0A  501E               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 18884  013F0C  A4D8               	btfss	status,2,c
 18885  013F0E  D01F               	goto	i2l6398
 18886                           
 18887                           ;usb_device.c: 2559: {
 18888                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 18889  013F10  EE20 F001          	lfsr	2,1
 18890  013F14  501B               	movf	_pBDTEntryEP0OutNext,w,c
 18891  013F16  26D9               	addwf	fsr2l,f,c
 18892  013F18  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 18893  013F1A  22DA               	addwfc	fsr2h,f,c
 18894  013F1C  0E08               	movlw	8
 18895  013F1E  6EDF               	movwf	indf2,c
 18896                           
 18897                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18898  013F20  EE20 F002          	lfsr	2,2
 18899  013F24  501B               	movf	_pBDTEntryEP0OutNext,w,c
 18900  013F26  26D9               	addwf	fsr2l,f,c
 18901  013F28  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 18902  013F2A  22DA               	addwfc	fsr2h,f,c
 18903  013F2C  0E30               	movlw	48
 18904  013F2E  6EDE               	movwf	postinc2,c
 18905  013F30  0E0D               	movlw	13
 18906  013F32  6EDD               	movwf	postdec2,c
 18907                           
 18908                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18909  013F34  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18910  013F38  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18911  013F3C  0E0C               	movlw	12
 18912  013F3E  6EDF               	movwf	indf2,c
 18913                           
 18914                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18915  013F40  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18916  013F44  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18917  013F48  0E00               	movlw	0
 18918  013F4A  8EDB               	bsf	plusw2,7,c
 18919                           
 18920                           ;usb_device.c: 2564: }
 18921  013F4C  0012               	return	
 18922  013F4E                     i2l6398:
 18923                           
 18924                           ;usb_device.c: 2565: else
 18925                           ;usb_device.c: 2566: {
 18926                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 18927  013F4E  0E00               	movlw	0
 18928  013F50  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18929  013F52  0012               	return	
 18930  013F54                     __end_of_USBCtrlTrfOutHandler:
 18931                           	opt stack 0
 18932                           pclatu	equ	0xFFB
 18933                           pclath	equ	0xFFA
 18934                           tblptru	equ	0xFF8
 18935                           tblptrh	equ	0xFF7
 18936                           tblptrl	equ	0xFF6
 18937                           tablat	equ	0xFF5
 18938                           prodh	equ	0xFF4
 18939                           prodl	equ	0xFF3
 18940                           intcon	equ	0xFF2
 18941                           intcon2	equ	0xFF1
 18942                           postinc0	equ	0xFEE
 18943                           fsr0h	equ	0xFEA
 18944                           fsr0l	equ	0xFE9
 18945                           wreg	equ	0xFE8
 18946                           indf1	equ	0xFE7
 18947                           postinc1	equ	0xFE6
 18948                           postdec1	equ	0xFE5
 18949                           fsr1h	equ	0xFE2
 18950                           fsr1l	equ	0xFE1
 18951                           indf2	equ	0xFDF
 18952                           postinc2	equ	0xFDE
 18953                           postdec2	equ	0xFDD
 18954                           plusw2	equ	0xFDB
 18955                           fsr2h	equ	0xFDA
 18956                           fsr2l	equ	0xFD9
 18957                           status	equ	0xFD8
 18958                           
 18959 ;; *************** function _USBCtrlTrfRxService *****************
 18960 ;; Defined at:
 18961 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 18962 ;; Parameters:    Size  Location     Type
 18963 ;;		None
 18964 ;; Auto vars:     Size  Location     Type
 18965 ;;  byteToRead      1    1[COMRAM] unsigned char 
 18966 ;;  i               1    0[COMRAM] unsigned char 
 18967 ;; Return value:  Size  Location     Type
 18968 ;;		None               void
 18969 ;; Registers used:
 18970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18971 ;; Tracked objects:
 18972 ;;		On entry : 0/0
 18973 ;;		On exit  : 0/0
 18974 ;;		Unchanged: 0/0
 18975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18980 ;;Total ram usage:        2 bytes
 18981 ;; Hardware stack levels used:    1
 18982 ;; Hardware stack levels required when called:    1
 18983 ;; This function calls:
 18984 ;;		_USBCtrlEPAllowStatusStage
 18985 ;; This function is called by:
 18986 ;;		_USBCtrlTrfOutHandler
 18987 ;; This function uses a non-reentrant model
 18988 ;;
 18989                           
 18990                           	psect	text92
 18991  011C6A                     __ptext92:
 18992                           	opt stack 0
 18993  011C6A                     _USBCtrlTrfRxService:
 18994                           	opt stack 15
 18995                           
 18996                           ;usb_device.c: 1854: uint8_t byteToRead;
 18997                           ;usb_device.c: 1855: uint8_t i;
 18998                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 18999                           
 19000                           ;incstack = 0
 19001  011C6A  EE20 F001          	lfsr	2,1
 19002  011C6E  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19003  011C70  26D9               	addwf	fsr2l,f,c
 19004  011C72  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19005  011C74  22DA               	addwfc	fsr2h,f,c
 19006  011C76  50DF               	movf	indf2,w,c
 19007  011C78  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 19008                           
 19009                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 19010  011C7A  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19011  011C7C  5C05               	subwf	_outPipes+4,w,c	;volatile
 19012  011C7E  0E00               	movlw	0
 19013  011C80  5806               	subwfb	_outPipes+5,w,c	;volatile
 19014  011C82  A0D8               	btfss	status,0,c
 19015                           
 19016                           ;usb_device.c: 1866: {
 19017                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 19018  011C84  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19019                           
 19020                           ;usb_device.c: 1868: }
 19021                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 19022  011C88  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19023  011C8A  5E05               	subwf	_outPipes+4,f,c	;volatile
 19024  011C8C  0E00               	movlw	0
 19025  011C8E  5A06               	subwfb	_outPipes+5,f,c	;volatile
 19026                           
 19027                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 19028  011C90  0E00               	movlw	0
 19029  011C92  6E2E               	movwf	USBCtrlTrfRxService@i,c
 19030  011C94  D011               	goto	i2l6246
 19031  011C96                     i2l6240:
 19032                           
 19033                           ;usb_device.c: 1875: {
 19034                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19035  011C96  502E               	movf	USBCtrlTrfRxService@i,w,c
 19036  011C98  0D01               	mullw	1
 19037  011C9A  0E38               	movlw	56
 19038  011C9C  24F3               	addwf	prodl,w,c
 19039  011C9E  6ED9               	movwf	fsr2l,c
 19040  011CA0  0E0D               	movlw	13
 19041  011CA2  20F4               	addwfc	prodh,w,c
 19042  011CA4  6EDA               	movwf	fsr2h,c
 19043  011CA6  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 19044  011CAA  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 19045  011CAE  CFDF FFE7          	movff	indf2,indf1
 19046  011CB2  4A01               	infsnz	_outPipes,f,c	;volatile
 19047  011CB4  2A02               	incf	_outPipes+1,f,c	;volatile
 19048  011CB6  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 19049  011CB8                     i2l6246:
 19050  011CB8  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19051  011CBA  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 19052  011CBC  A0D8               	btfss	status,0,c
 19053  011CBE  D7EB               	goto	i2l6240
 19054                           
 19055                           ;usb_device.c: 1877: }
 19056                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 19057  011CC0  5005               	movf	_outPipes+4,w,c	;volatile
 19058  011CC2  1006               	iorwf	_outPipes+5,w,c	;volatile
 19059  011CC4  B4D8               	btfsc	status,2,c
 19060  011CC6  D032               	goto	i2l6262
 19061                           
 19062                           ;usb_device.c: 1882: {
 19063                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 19064  011CC8  EE20 F001          	lfsr	2,1
 19065  011CCC  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19066  011CCE  26D9               	addwf	fsr2l,f,c
 19067  011CD0  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19068  011CD2  22DA               	addwfc	fsr2h,f,c
 19069  011CD4  0E08               	movlw	8
 19070  011CD6  6EDF               	movwf	indf2,c
 19071                           
 19072                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19073  011CD8  EE20 F002          	lfsr	2,2
 19074  011CDC  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19075  011CDE  26D9               	addwf	fsr2l,f,c
 19076  011CE0  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19077  011CE2  22DA               	addwfc	fsr2h,f,c
 19078  011CE4  0E38               	movlw	56
 19079  011CE6  6EDE               	movwf	postinc2,c
 19080  011CE8  0E0D               	movlw	13
 19081  011CEA  6EDD               	movwf	postdec2,c
 19082                           
 19083                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 19084  011CEC  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19085  011CF0  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19086  011CF4  BCDF               	btfsc	indf2,6,c
 19087  011CF6  D00D               	goto	i2l6258
 19088                           
 19089                           ;usb_device.c: 1886: {
 19090                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19091  011CF8  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19092  011CFC  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19093  011D00  0E48               	movlw	72
 19094  011D02  6EDF               	movwf	indf2,c
 19095                           
 19096                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19097  011D04  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19098  011D08  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19099  011D0C  0E00               	movlw	0
 19100  011D0E  8EDB               	bsf	plusw2,7,c
 19101                           
 19102                           ;usb_device.c: 1889: }
 19103  011D10  0012               	return	
 19104  011D12                     i2l6258:
 19105                           
 19106                           ;usb_device.c: 1890: else
 19107                           ;usb_device.c: 1891: {
 19108                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 19109  011D12  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19110  011D16  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19111  011D1A  0E08               	movlw	8
 19112  011D1C  6EDF               	movwf	indf2,c
 19113                           
 19114                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19115  011D1E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19116  011D22  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19117  011D26  0E00               	movlw	0
 19118  011D28  8EDB               	bsf	plusw2,7,c
 19119                           
 19120                           ;usb_device.c: 1894: }
 19121                           ;usb_device.c: 1895: }
 19122  011D2A  0012               	return	
 19123  011D2C                     i2l6262:
 19124                           
 19125                           ;usb_device.c: 1896: else
 19126                           ;usb_device.c: 1897: {
 19127                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 19128  011D2C  EE20 F001          	lfsr	2,1
 19129  011D30  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19130  011D32  26D9               	addwf	fsr2l,f,c
 19131  011D34  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19132  011D36  22DA               	addwfc	fsr2h,f,c
 19133  011D38  0E08               	movlw	8
 19134  011D3A  6EDF               	movwf	indf2,c
 19135                           
 19136                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19137  011D3C  EE20 F002          	lfsr	2,2
 19138  011D40  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19139  011D42  26D9               	addwf	fsr2l,f,c
 19140  011D44  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19141  011D46  22DA               	addwfc	fsr2h,f,c
 19142  011D48  0E30               	movlw	48
 19143  011D4A  6EDE               	movwf	postinc2,c
 19144  011D4C  0E0D               	movlw	13
 19145  011D4E  6EDD               	movwf	postdec2,c
 19146                           
 19147                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 19148  011D50  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19149  011D54  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19150  011D58  0E04               	movlw	4
 19151  011D5A  6EDF               	movwf	indf2,c
 19152                           
 19153                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19154  011D5C  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19155  011D60  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19156  011D64  0E00               	movlw	0
 19157  011D66  8EDB               	bsf	plusw2,7,c
 19158                           
 19159                           ;usb_device.c: 1926: }
 19160                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 19161                           
 19162                           ;usb_device.c: 1915: {
 19163                           ;usb_device.c: 1921: outPipes[0].pFunc();
 19164  011D68  9E04               	bcf	_outPipes+3,7,c	;volatile
 19165                           
 19166                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 19167  011D6A  5022               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19168  011D6C  A4D8               	btfss	status,2,c
 19169  011D6E  0012               	return	
 19170                           
 19171                           ;usb_device.c: 1942: {
 19172                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 19173  011D70  EC8F  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19174  011D74  0012               	return	
 19175  011D76                     __end_of_USBCtrlTrfRxService:
 19176                           	opt stack 0
 19177                           pclatu	equ	0xFFB
 19178                           pclath	equ	0xFFA
 19179                           tblptru	equ	0xFF8
 19180                           tblptrh	equ	0xFF7
 19181                           tblptrl	equ	0xFF6
 19182                           tablat	equ	0xFF5
 19183                           prodh	equ	0xFF4
 19184                           prodl	equ	0xFF3
 19185                           intcon	equ	0xFF2
 19186                           intcon2	equ	0xFF1
 19187                           postinc0	equ	0xFEE
 19188                           fsr0h	equ	0xFEA
 19189                           fsr0l	equ	0xFE9
 19190                           wreg	equ	0xFE8
 19191                           indf1	equ	0xFE7
 19192                           postinc1	equ	0xFE6
 19193                           postdec1	equ	0xFE5
 19194                           fsr1h	equ	0xFE2
 19195                           fsr1l	equ	0xFE1
 19196                           indf2	equ	0xFDF
 19197                           postinc2	equ	0xFDE
 19198                           postdec2	equ	0xFDD
 19199                           plusw2	equ	0xFDB
 19200                           fsr2h	equ	0xFDA
 19201                           fsr2l	equ	0xFD9
 19202                           status	equ	0xFD8
 19203                           
 19204 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 19205 ;; Defined at:
 19206 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 19207 ;; Parameters:    Size  Location     Type
 19208 ;;		None
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;		None
 19211 ;; Return value:  Size  Location     Type
 19212 ;;		None               void
 19213 ;; Registers used:
 19214 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19215 ;; Tracked objects:
 19216 ;;		On entry : 0/0
 19217 ;;		On exit  : 0/0
 19218 ;;		Unchanged: 0/0
 19219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19224 ;;Total ram usage:        0 bytes
 19225 ;; Hardware stack levels used:    1
 19226 ;; This function calls:
 19227 ;;		Nothing
 19228 ;; This function is called by:
 19229 ;;		_USBDeviceTasks
 19230 ;;		_USBCtrlEPServiceComplete
 19231 ;;		_USBCtrlTrfRxService
 19232 ;; This function uses a non-reentrant model
 19233 ;;
 19234                           
 19235                           	psect	text93
 19236  012D1E                     __ptext93:
 19237                           	opt stack 0
 19238  012D1E                     _USBCtrlEPAllowStatusStage:
 19239                           	opt stack 15
 19240                           
 19241                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 19242                           
 19243                           ;incstack = 0
 19244  012D1E  5024               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 19245  012D20  A4D8               	btfss	status,2,c
 19246  012D22  0012               	return	
 19247                           
 19248                           ;usb_device.c: 1424: {
 19249                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 19250  012D24  0E01               	movlw	1
 19251  012D26  6E24               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 19252                           
 19253                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 19254  012D28  5025               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 19255  012D2A  A4D8               	btfss	status,2,c
 19256  012D2C  0012               	return	
 19257                           
 19258                           ;usb_device.c: 1427: {
 19259                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 19260  012D2E  0E01               	movlw	1
 19261  012D30  6E25               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 19262                           
 19263                           ;usb_device.c: 1432: if(controlTransferState == 2)
 19264  012D32  0E02               	movlw	2
 19265  012D34  1829               	xorwf	_controlTransferState,w,c	;volatile
 19266  012D36  A4D8               	btfss	status,2,c
 19267  012D38  D015               	goto	i2l5716
 19268                           
 19269                           ;usb_device.c: 1433: {
 19270                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 19271  012D3A  EE20 F001          	lfsr	2,1
 19272  012D3E  5010               	movf	_pBDTEntryIn,w,c
 19273  012D40  26D9               	addwf	fsr2l,f,c
 19274  012D42  5011               	movf	_pBDTEntryIn+1,w,c
 19275  012D44  22DA               	addwfc	fsr2h,f,c
 19276  012D46  0E00               	movlw	0
 19277  012D48  6EDF               	movwf	indf2,c
 19278                           
 19279                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19280  012D4A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19281  012D4E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19282  012D52  0E48               	movlw	72
 19283  012D54  6EDF               	movwf	indf2,c
 19284                           
 19285                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19286  012D56  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19287  012D5A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19288  012D5E  0E00               	movlw	0
 19289  012D60  8EDB               	bsf	plusw2,7,c
 19290                           
 19291                           ;usb_device.c: 1437: }
 19292  012D62  0012               	return	
 19293  012D64                     i2l5716:
 19294                           
 19295                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 19296  012D64  0429               	decf	_controlTransferState,w,c	;volatile
 19297  012D66  A4D8               	btfss	status,2,c
 19298  012D68  0012               	return	
 19299                           
 19300                           ;usb_device.c: 1439: {
 19301                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 19302  012D6A  0E00               	movlw	0
 19303  012D6C  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19304                           
 19305                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 19306  012D6E  EE20 F001          	lfsr	2,1
 19307  012D72  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19308  012D74  26D9               	addwf	fsr2l,f,c
 19309  012D76  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19310  012D78  22DA               	addwfc	fsr2h,f,c
 19311  012D7A  0E08               	movlw	8
 19312  012D7C  6EDF               	movwf	indf2,c
 19313                           
 19314                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19315  012D7E  EE20 F002          	lfsr	2,2
 19316  012D82  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19317  012D84  26D9               	addwf	fsr2l,f,c
 19318  012D86  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19319  012D88  22DA               	addwfc	fsr2h,f,c
 19320  012D8A  0E30               	movlw	48
 19321  012D8C  6EDE               	movwf	postinc2,c
 19322  012D8E  0E0D               	movlw	13
 19323  012D90  6EDD               	movwf	postdec2,c
 19324                           
 19325                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19326  012D92  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19327  012D96  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19328  012D9A  0E04               	movlw	4
 19329  012D9C  6EDF               	movwf	indf2,c
 19330                           
 19331                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19332  012D9E  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19333  012DA2  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19334  012DA6  0E00               	movlw	0
 19335  012DA8  8EDB               	bsf	plusw2,7,c
 19336                           
 19337                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 19338  012DAA  0E01               	movlw	1
 19339  012DAC  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19340                           
 19341                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 19342  012DAE  EE20 F001          	lfsr	2,1
 19343  012DB2  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19344  012DB4  26D9               	addwf	fsr2l,f,c
 19345  012DB6  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19346  012DB8  22DA               	addwfc	fsr2h,f,c
 19347  012DBA  0E08               	movlw	8
 19348  012DBC  6EDF               	movwf	indf2,c
 19349                           
 19350                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19351  012DBE  EE20 F002          	lfsr	2,2
 19352  012DC2  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19353  012DC4  26D9               	addwf	fsr2l,f,c
 19354  012DC6  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19355  012DC8  22DA               	addwfc	fsr2h,f,c
 19356  012DCA  0E30               	movlw	48
 19357  012DCC  6EDE               	movwf	postinc2,c
 19358  012DCE  0E0D               	movlw	13
 19359  012DD0  6EDD               	movwf	postdec2,c
 19360                           
 19361                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 19362  012DD2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19363  012DD6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19364  012DDA  0E80               	movlw	128
 19365  012DDC  6EDF               	movwf	indf2,c
 19366  012DDE  0012               	return	
 19367  012DE0                     __end_of_USBCtrlEPAllowStatusStage:
 19368                           	opt stack 0
 19369                           pclatu	equ	0xFFB
 19370                           pclath	equ	0xFFA
 19371                           tblptru	equ	0xFF8
 19372                           tblptrh	equ	0xFF7
 19373                           tblptrl	equ	0xFF6
 19374                           tablat	equ	0xFF5
 19375                           prodh	equ	0xFF4
 19376                           prodl	equ	0xFF3
 19377                           intcon	equ	0xFF2
 19378                           intcon2	equ	0xFF1
 19379                           postinc0	equ	0xFEE
 19380                           fsr0h	equ	0xFEA
 19381                           fsr0l	equ	0xFE9
 19382                           wreg	equ	0xFE8
 19383                           indf1	equ	0xFE7
 19384                           postinc1	equ	0xFE6
 19385                           postdec1	equ	0xFE5
 19386                           fsr1h	equ	0xFE2
 19387                           fsr1l	equ	0xFE1
 19388                           indf2	equ	0xFDF
 19389                           postinc2	equ	0xFDE
 19390                           postdec2	equ	0xFDD
 19391                           plusw2	equ	0xFDB
 19392                           fsr2h	equ	0xFDA
 19393                           fsr2l	equ	0xFD9
 19394                           status	equ	0xFD8
 19395                           
 19396 ;; *************** function _USBCtrlTrfInHandler *****************
 19397 ;; Defined at:
 19398 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 19399 ;; Parameters:    Size  Location     Type
 19400 ;;		None
 19401 ;; Auto vars:     Size  Location     Type
 19402 ;;  lastDTS         1    1[COMRAM] unsigned char 
 19403 ;; Return value:  Size  Location     Type
 19404 ;;		None               void
 19405 ;; Registers used:
 19406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19407 ;; Tracked objects:
 19408 ;;		On entry : 0/0
 19409 ;;		On exit  : 0/0
 19410 ;;		Unchanged: 0/0
 19411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19416 ;;Total ram usage:        1 bytes
 19417 ;; Hardware stack levels used:    1
 19418 ;; Hardware stack levels required when called:    1
 19419 ;; This function calls:
 19420 ;;		_USBCtrlTrfTxService
 19421 ;; This function is called by:
 19422 ;;		_USBCtrlEPService
 19423 ;; This function uses a non-reentrant model
 19424 ;;
 19425                           
 19426                           	psect	text94
 19427  01318C                     __ptext94:
 19428                           	opt stack 0
 19429  01318C                     _USBCtrlTrfInHandler:
 19430                           	opt stack 16
 19431                           
 19432                           ;usb_device.c: 2597: uint8_t lastDTS;
 19433                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 19434                           
 19435                           ;incstack = 0
 19436  01318C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19437  013190  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19438  013194  0E00               	movlw	0
 19439  013196  BCDF               	btfsc	indf2,6,c
 19440  013198  0E01               	movlw	1
 19441  01319A  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 19442                           
 19443                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19444  01319C  0E04               	movlw	4
 19445  01319E  1A10               	xorwf	_pBDTEntryIn,f,c
 19446                           
 19447                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 19448  0131A0  0E08               	movlw	8
 19449  0131A2  1823               	xorwf	_USBDeviceState,w,c	;volatile
 19450  0131A4  A4D8               	btfss	status,2,c
 19451  0131A6  D00D               	goto	i2l6414
 19452                           
 19453                           ;usb_device.c: 2608: {
 19454                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 19455  0131A8  010D               	movlb	13	; () banked
 19456  0131AA  5132               	movf	50,w,b	;volatile
 19457  0131AC  0B7F               	andlw	127
 19458  0131AE  010F               	movlb	15	; () banked
 19459  0131B0  6F38               	movwf	56,b	;volatile
 19460                           
 19461                           ; BSR set to: 15
 19462                           ;usb_device.c: 2610: if(UADDR != 0u)
 19463  0131B2  010F               	movlb	15	; () banked
 19464  0131B4  5138               	movf	56,w,b	;volatile
 19465  0131B6  B4D8               	btfsc	status,2,c
 19466  0131B8  D002               	goto	i2l6412
 19467                           
 19468                           ; BSR set to: 15
 19469                           ;usb_device.c: 2611: {
 19470                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 19471  0131BA  0E10               	movlw	16
 19472  0131BC  D001               	goto	L18
 19473  0131BE                     i2l6412:
 19474                           
 19475                           ; BSR set to: 15
 19476                           ;usb_device.c: 2614: else
 19477                           ;usb_device.c: 2615: {
 19478                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 19479  0131BE  0E04               	movlw	4
 19480  0131C0                     L18:
 19481  0131C0  6E23               	movwf	_USBDeviceState,c	;volatile
 19482  0131C2                     i2l6414:
 19483                           
 19484                           ;usb_device.c: 2617: }
 19485                           ;usb_device.c: 2618: }
 19486                           ;usb_device.c: 2621: if(controlTransferState == 1)
 19487  0131C2  0429               	decf	_controlTransferState,w,c	;volatile
 19488  0131C4  A4D8               	btfss	status,2,c
 19489  0131C6  D03A               	goto	i2l345
 19490                           
 19491                           ;usb_device.c: 2622: {
 19492                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 19493  0131C8  EE20 F002          	lfsr	2,2
 19494  0131CC  5010               	movf	_pBDTEntryIn,w,c
 19495  0131CE  26D9               	addwf	fsr2l,f,c
 19496  0131D0  5011               	movf	_pBDTEntryIn+1,w,c
 19497  0131D2  22DA               	addwfc	fsr2h,f,c
 19498  0131D4  0E38               	movlw	56
 19499  0131D6  6EDE               	movwf	postinc2,c
 19500  0131D8  0E0D               	movlw	13
 19501  0131DA  6EDD               	movwf	postdec2,c
 19502                           
 19503                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 19504  0131DC  EC59  F095         	call	_USBCtrlTrfTxService	;wreg free
 19505                           
 19506                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 19507  0131E0  0E02               	movlw	2
 19508  0131E2  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 19509  0131E4  A4D8               	btfss	status,2,c
 19510  0131E6  D00D               	goto	i2l6426
 19511                           
 19512                           ;usb_device.c: 2631: {
 19513                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 19514  0131E8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19515  0131EC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19516  0131F0  0E04               	movlw	4
 19517  0131F2  6EDF               	movwf	indf2,c
 19518                           
 19519                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19520  0131F4  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19521  0131F8  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19522  0131FC  0E00               	movlw	0
 19523  0131FE  8EDB               	bsf	plusw2,7,c
 19524                           
 19525                           ;usb_device.c: 2636: }
 19526  013200  0012               	return	
 19527  013202                     i2l6426:
 19528                           
 19529                           ;usb_device.c: 2637: else
 19530                           ;usb_device.c: 2638: {
 19531                           ;usb_device.c: 2639: if(lastDTS == 0)
 19532  013202  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 19533  013204  A4D8               	btfss	status,2,c
 19534  013206  D00D               	goto	i2l6432
 19535                           
 19536                           ;usb_device.c: 2640: {
 19537                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19538  013208  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19539  01320C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19540  013210  0E48               	movlw	72
 19541  013212  6EDF               	movwf	indf2,c
 19542                           
 19543                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19544  013214  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19545  013218  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19546  01321C  0E00               	movlw	0
 19547  01321E  8EDB               	bsf	plusw2,7,c
 19548                           
 19549                           ;usb_device.c: 2643: }
 19550  013220  0012               	return	
 19551  013222                     i2l6432:
 19552                           
 19553                           ;usb_device.c: 2644: else
 19554                           ;usb_device.c: 2645: {
 19555                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 19556  013222  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19557  013226  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19558  01322A  0E08               	movlw	8
 19559  01322C  6EDF               	movwf	indf2,c
 19560                           
 19561                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19562  01322E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19563  013232  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19564  013236  0E00               	movlw	0
 19565  013238  8EDB               	bsf	plusw2,7,c
 19566                           
 19567                           ;usb_device.c: 2648: }
 19568                           ;usb_device.c: 2649: }
 19569                           ;usb_device.c: 2650: }
 19570  01323A  0012               	return	
 19571  01323C                     i2l345:
 19572                           
 19573                           ;usb_device.c: 2651: else
 19574                           ;usb_device.c: 2652: {
 19575                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 19576  01323C  BE04               	btfsc	_outPipes+3,7,c	;volatile
 19577                           
 19578                           ;usb_device.c: 2661: }
 19579                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 19580                           
 19581                           ;usb_device.c: 2659: {
 19582                           ;usb_device.c: 2660: outPipes[0].pFunc();
 19583  01323E  9E04               	bcf	_outPipes+3,7,c	;volatile
 19584                           
 19585                           ;usb_device.c: 2663: }
 19586                           ;usb_device.c: 2665: controlTransferState = 0;
 19587  013240  0E00               	movlw	0
 19588  013242  6E29               	movwf	_controlTransferState,c	;volatile
 19589  013244  0012               	return	
 19590  013246                     __end_of_USBCtrlTrfInHandler:
 19591                           	opt stack 0
 19592                           pclatu	equ	0xFFB
 19593                           pclath	equ	0xFFA
 19594                           tblptru	equ	0xFF8
 19595                           tblptrh	equ	0xFF7
 19596                           tblptrl	equ	0xFF6
 19597                           tablat	equ	0xFF5
 19598                           prodh	equ	0xFF4
 19599                           prodl	equ	0xFF3
 19600                           intcon	equ	0xFF2
 19601                           intcon2	equ	0xFF1
 19602                           postinc0	equ	0xFEE
 19603                           fsr0h	equ	0xFEA
 19604                           fsr0l	equ	0xFE9
 19605                           wreg	equ	0xFE8
 19606                           indf1	equ	0xFE7
 19607                           postinc1	equ	0xFE6
 19608                           postdec1	equ	0xFE5
 19609                           fsr1h	equ	0xFE2
 19610                           fsr1l	equ	0xFE1
 19611                           indf2	equ	0xFDF
 19612                           postinc2	equ	0xFDE
 19613                           postdec2	equ	0xFDD
 19614                           plusw2	equ	0xFDB
 19615                           fsr2h	equ	0xFDA
 19616                           fsr2l	equ	0xFD9
 19617                           status	equ	0xFD8
 19618                           
 19619 ;; *************** function _USBCtrlTrfTxService *****************
 19620 ;; Defined at:
 19621 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 19622 ;; Parameters:    Size  Location     Type
 19623 ;;		None
 19624 ;; Auto vars:     Size  Location     Type
 19625 ;;  byteToSend      1    0[COMRAM] unsigned char 
 19626 ;; Return value:  Size  Location     Type
 19627 ;;		None               void
 19628 ;; Registers used:
 19629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19630 ;; Tracked objects:
 19631 ;;		On entry : 0/0
 19632 ;;		On exit  : 0/0
 19633 ;;		Unchanged: 0/0
 19634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19639 ;;Total ram usage:        1 bytes
 19640 ;; Hardware stack levels used:    1
 19641 ;; This function calls:
 19642 ;;		Nothing
 19643 ;; This function is called by:
 19644 ;;		_USBCtrlEPAllowDataStage
 19645 ;;		_USBCtrlTrfInHandler
 19646 ;; This function uses a non-reentrant model
 19647 ;;
 19648                           
 19649                           	psect	text95
 19650  012AB2                     __ptext95:
 19651                           	opt stack 0
 19652  012AB2                     _USBCtrlTrfTxService:
 19653                           	opt stack 14
 19654                           
 19655                           ;usb_device.c: 1773: uint8_t byteToSend;
 19656                           ;usb_device.c: 1777: byteToSend = 8;
 19657                           
 19658                           ;incstack = 0
 19659  012AB2  0E08               	movlw	8
 19660  012AB4  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 19661                           
 19662                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 19663  012AB6  500F               	movf	_inPipes+5,w,c	;volatile
 19664  012AB8  E110               	bnz	i2l5550
 19665  012ABA  0E08               	movlw	8
 19666  012ABC  5C0E               	subwf	_inPipes+4,w,c	;volatile
 19667  012ABE  B0D8               	btfsc	status,0,c
 19668  012AC0  D00C               	goto	i2l5550
 19669                           
 19670                           ;usb_device.c: 1779: {
 19671                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 19672  012AC2  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 19673                           
 19674                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 19675  012AC6  502B               	movf	_shortPacketStatus,w,c	;volatile
 19676  012AC8  A4D8               	btfss	status,2,c
 19677  012ACA  D002               	goto	i2l5546
 19678                           
 19679                           ;usb_device.c: 1788: {
 19680                           ;usb_device.c: 1789: shortPacketStatus = 1;
 19681  012ACC  0E01               	movlw	1
 19682  012ACE  D004               	goto	L19
 19683  012AD0                     i2l5546:
 19684                           
 19685                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 19686  012AD0  042B               	decf	_shortPacketStatus,w,c	;volatile
 19687  012AD2  A4D8               	btfss	status,2,c
 19688  012AD4  D002               	goto	i2l5550
 19689                           
 19690                           ;usb_device.c: 1792: {
 19691                           ;usb_device.c: 1793: shortPacketStatus = 2;
 19692  012AD6  0E02               	movlw	2
 19693  012AD8                     L19:
 19694  012AD8  6E2B               	movwf	_shortPacketStatus,c	;volatile
 19695  012ADA                     i2l5550:
 19696                           
 19697                           ;usb_device.c: 1794: }
 19698                           ;usb_device.c: 1795: }
 19699                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 19700  012ADA  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19701  012ADC  5E0E               	subwf	_inPipes+4,f,c	;volatile
 19702  012ADE  0E00               	movlw	0
 19703  012AE0  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 19704                           
 19705                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 19706  012AE2  EE20 F001          	lfsr	2,1
 19707  012AE6  5010               	movf	_pBDTEntryIn,w,c
 19708  012AE8  26D9               	addwf	fsr2l,f,c
 19709  012AEA  5011               	movf	_pBDTEntryIn+1,w,c
 19710  012AEC  22DA               	addwfc	fsr2h,f,c
 19711  012AEE  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 19712                           
 19713                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 19714  012AF2  0E38               	movlw	56
 19715  012AF4  0101               	movlb	1	; () banked
 19716  012AF6  6F27               	movwf	_pDst& (0+255),b
 19717  012AF8  0E0D               	movlw	13
 19718  012AFA  0101               	movlb	1	; () banked
 19719  012AFC  6F28               	movwf	(_pDst+1)& (0+255),b
 19720                           
 19721                           ; BSR set to: 1
 19722                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 19723  012AFE  A00D               	btfss	_inPipes+3,0,c	;volatile
 19724  012B00  D01D               	goto	i2l5568
 19725  012B02  D03C               	goto	i2l5578
 19726  012B04                     i2l5560:
 19727                           
 19728                           ; BSR set to: 1
 19729                           ;usb_device.c: 1812: {
 19730                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 19731  012B04  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 19732  012B08  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19733  012B0C  0E00               	movlw	low (__mediumconst shr (0+16))
 19734  012B0E  6EF8               	movwf	tblptru,c
 19735  012B10  C127  FFD9         	movff	_pDst,fsr2l
 19736  012B14  C128  FFDA         	movff	_pDst+1,fsr2h
 19737  012B18  0E0E               	movlw	(high __ramtop+-1)
 19738  012B1A  64F7               	cpfsgt	tblptrh,c
 19739  012B1C  D003               	bra	i2u438_47
 19740  012B1E  0008               	tblrd		*
 19741  012B20  50F5               	movf	tablat,w,c
 19742  012B22  D005               	bra	i2u438_40
 19743  012B24                     i2u438_47:
 19744  012B24  CFF6 FFE1          	movff	tblptrl,fsr1l
 19745  012B28  CFF7 FFE2          	movff	tblptrh,fsr1h
 19746  012B2C  50E7               	movf	indf1,w,c
 19747  012B2E                     i2u438_40:
 19748  012B2E  6EDF               	movwf	indf2,c
 19749  012B30  4A0A               	infsnz	_inPipes,f,c	;volatile
 19750  012B32  2A0B               	incf	_inPipes+1,f,c	;volatile
 19751  012B34  0101               	movlb	1	; () banked
 19752  012B36  4B27               	infsnz	_pDst& (0+255),f,b
 19753  012B38  2B28               	incf	(_pDst+1)& (0+255),f,b
 19754                           
 19755                           ; BSR set to: 1
 19756                           ;usb_device.c: 1814: byteToSend--;
 19757  012B3A  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19758  012B3C                     i2l5568:
 19759                           
 19760                           ; BSR set to: 1
 19761  012B3C  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19762  012B3E  B4D8               	btfsc	status,2,c
 19763  012B40  0012               	return	
 19764  012B42  D7E0               	goto	i2l5560
 19765  012B44                     i2l5570:
 19766                           
 19767                           ; BSR set to: 1
 19768                           ;usb_device.c: 1820: {
 19769                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 19770  012B44  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 19771  012B48  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19772  012B4C  0E00               	movlw	low (__mediumconst shr (0+16))
 19773  012B4E  6EF8               	movwf	tblptru,c
 19774  012B50  C127  FFD9         	movff	_pDst,fsr2l
 19775  012B54  C128  FFDA         	movff	_pDst+1,fsr2h
 19776  012B58  0E0E               	movlw	(high __ramtop+-1)
 19777  012B5A  64F7               	cpfsgt	tblptrh,c
 19778  012B5C  D003               	bra	i2u440_47
 19779  012B5E  0008               	tblrd		*
 19780  012B60  50F5               	movf	tablat,w,c
 19781  012B62  D005               	bra	i2u440_40
 19782  012B64                     i2u440_47:
 19783  012B64  CFF6 FFE1          	movff	tblptrl,fsr1l
 19784  012B68  CFF7 FFE2          	movff	tblptrh,fsr1h
 19785  012B6C  50E7               	movf	indf1,w,c
 19786  012B6E                     i2u440_40:
 19787  012B6E  6EDF               	movwf	indf2,c
 19788  012B70  4A0A               	infsnz	_inPipes,f,c	;volatile
 19789  012B72  2A0B               	incf	_inPipes+1,f,c	;volatile
 19790  012B74  0101               	movlb	1	; () banked
 19791  012B76  4B27               	infsnz	_pDst& (0+255),f,b
 19792  012B78  2B28               	incf	(_pDst+1)& (0+255),f,b
 19793                           
 19794                           ; BSR set to: 1
 19795                           ;usb_device.c: 1822: byteToSend--;
 19796  012B7A  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19797  012B7C                     i2l5578:
 19798                           
 19799                           ; BSR set to: 1
 19800  012B7C  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19801  012B7E  B4D8               	btfsc	status,2,c
 19802  012B80  0012               	return	
 19803  012B82  D7E0               	goto	i2l5570
 19804  012B84                     __end_of_USBCtrlTrfTxService:
 19805                           	opt stack 0
 19806                           pclatu	equ	0xFFB
 19807                           pclath	equ	0xFFA
 19808                           tblptru	equ	0xFF8
 19809                           tblptrh	equ	0xFF7
 19810                           tblptrl	equ	0xFF6
 19811                           tablat	equ	0xFF5
 19812                           prodh	equ	0xFF4
 19813                           prodl	equ	0xFF3
 19814                           intcon	equ	0xFF2
 19815                           intcon2	equ	0xFF1
 19816                           postinc0	equ	0xFEE
 19817                           fsr0h	equ	0xFEA
 19818                           fsr0l	equ	0xFE9
 19819                           wreg	equ	0xFE8
 19820                           indf1	equ	0xFE7
 19821                           postinc1	equ	0xFE6
 19822                           postdec1	equ	0xFE5
 19823                           fsr1h	equ	0xFE2
 19824                           fsr1l	equ	0xFE1
 19825                           indf2	equ	0xFDF
 19826                           postinc2	equ	0xFDE
 19827                           postdec2	equ	0xFDD
 19828                           plusw2	equ	0xFDB
 19829                           fsr2h	equ	0xFDA
 19830                           fsr2l	equ	0xFD9
 19831                           status	equ	0xFD8
 19832                           
 19833 ;; *************** function _UART_ISR *****************
 19834 ;; Defined at:
 19835 ;;		line 29 in file "../My_library/My_UART.c"
 19836 ;; Parameters:    Size  Location     Type
 19837 ;;		None
 19838 ;; Auto vars:     Size  Location     Type
 19839 ;;  ascii           1   15[COMRAM] unsigned char 
 19840 ;; Return value:  Size  Location     Type
 19841 ;;		None               void
 19842 ;; Registers used:
 19843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19844 ;; Tracked objects:
 19845 ;;		On entry : 0/0
 19846 ;;		On exit  : 0/0
 19847 ;;		Unchanged: 0/0
 19848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19853 ;;Total ram usage:        1 bytes
 19854 ;; Hardware stack levels used:    1
 19855 ;; Hardware stack levels required when called:    2
 19856 ;; This function calls:
 19857 ;;		i2_ringbuf_num
 19858 ;;		i2_ringbuf_pop
 19859 ;;		i2_ringbuf_put
 19860 ;; This function is called by:
 19861 ;;		_ISR
 19862 ;; This function uses a non-reentrant model
 19863 ;;
 19864                           
 19865                           	psect	text96
 19866  01409C                     __ptext96:
 19867                           	opt stack 0
 19868  01409C                     _UART_ISR:
 19869                           	opt stack 18
 19870                           
 19871                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 19872                           
 19873                           ; BSR set to: 1
 19874                           ;incstack = 0
 19875  01409C  B89D               	btfsc	3997,4,c	;volatile
 19876  01409E  A89E               	btfss	3998,4,c	;volatile
 19877  0140A0  D013               	goto	i2l1110
 19878                           
 19879                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
 19880  0140A2  0E53               	movlw	low _uart_tx
 19881  0140A4  6E2E               	movwf	i2ringbuf_num@rb,c
 19882  0140A6  0E01               	movlw	high _uart_tx
 19883  0140A8  6E2F               	movwf	i2ringbuf_num@rb+1,c
 19884  0140AA  EC0B  F098         	call	i2_ringbuf_num	;wreg free
 19885  0140AE  502E               	movf	?i2_ringbuf_num,w,c
 19886  0140B0  102F               	iorwf	?i2_ringbuf_num+1,w,c
 19887  0140B2  B4D8               	btfsc	status,2,c
 19888  0140B4  D008               	goto	i2l1111
 19889                           
 19890                           ;My_UART.c: 32: TXREG1 = ringbuf_pop(&uart_tx);
 19891  0140B6  0E53               	movlw	low _uart_tx
 19892  0140B8  6E36               	movwf	i2ringbuf_pop@rb,c
 19893  0140BA  0E01               	movlw	high _uart_tx
 19894  0140BC  6E37               	movwf	i2ringbuf_pop@rb+1,c
 19895  0140BE  ECD6  F099         	call	i2_ringbuf_pop	;wreg free
 19896  0140C2  6EAE               	movwf	4014,c	;volatile
 19897                           
 19898                           ;My_UART.c: 33: } else {
 19899  0140C4  D001               	goto	i2l1110
 19900  0140C6                     i2l1111:
 19901                           
 19902                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
 19903  0140C6  989D               	bcf	3997,4,c	;volatile
 19904  0140C8                     i2l1110:
 19905                           
 19906                           ;My_UART.c: 35: }
 19907                           ;My_UART.c: 36: }
 19908                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 19909  0140C8  AA9D               	btfss	3997,5,c	;volatile
 19910  0140CA  0012               	return	
 19911  0140CC  AA9E               	btfss	3998,5,c	;volatile
 19912  0140CE  0012               	return	
 19913                           
 19914                           ;My_UART.c: 38: char ascii = RCREG1;
 19915  0140D0  CFAF F03D          	movff	4015,UART_ISR@ascii	;volatile
 19916                           
 19917                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
 19918  0140D4  0E4B               	movlw	low _uart_rx
 19919  0140D6  6E36               	movwf	i2ringbuf_put@rb,c
 19920  0140D8  0E01               	movlw	high _uart_rx
 19921  0140DA  6E37               	movwf	i2ringbuf_put@rb+1,c
 19922  0140DC  C03D  F038         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 19923  0140E0  EC23  F099         	call	i2_ringbuf_put	;wreg free
 19924  0140E4  0012               	return	
 19925  0140E6                     __end_of_UART_ISR:
 19926                           	opt stack 0
 19927                           pclatu	equ	0xFFB
 19928                           pclath	equ	0xFFA
 19929                           tblptru	equ	0xFF8
 19930                           tblptrh	equ	0xFF7
 19931                           tblptrl	equ	0xFF6
 19932                           tablat	equ	0xFF5
 19933                           prodh	equ	0xFF4
 19934                           prodl	equ	0xFF3
 19935                           intcon	equ	0xFF2
 19936                           intcon2	equ	0xFF1
 19937                           postinc0	equ	0xFEE
 19938                           fsr0h	equ	0xFEA
 19939                           fsr0l	equ	0xFE9
 19940                           wreg	equ	0xFE8
 19941                           indf1	equ	0xFE7
 19942                           postinc1	equ	0xFE6
 19943                           postdec1	equ	0xFE5
 19944                           fsr1h	equ	0xFE2
 19945                           fsr1l	equ	0xFE1
 19946                           indf2	equ	0xFDF
 19947                           postinc2	equ	0xFDE
 19948                           postdec2	equ	0xFDD
 19949                           plusw2	equ	0xFDB
 19950                           fsr2h	equ	0xFDA
 19951                           fsr2l	equ	0xFD9
 19952                           status	equ	0xFD8
 19953                           
 19954 ;; *************** function i2_ringbuf_put *****************
 19955 ;; Defined at:
 19956 ;;		line 20 in file "../My_library/My_ringbuf.c"
 19957 ;; Parameters:    Size  Location     Type
 19958 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 19959 ;;		 -> lcd_tx(8), usb_tx(8), usb_rx(8), uart_rx(8), 
 19960 ;;		 -> terminal_task@command(8), 
 19961 ;;  asciicode       1   10[COMRAM] unsigned char 
 19962 ;; Auto vars:     Size  Location     Type
 19963 ;;		None
 19964 ;; Return value:  Size  Location     Type
 19965 ;;		None               void
 19966 ;; Registers used:
 19967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19968 ;; Tracked objects:
 19969 ;;		On entry : 0/0
 19970 ;;		On exit  : 0/0
 19971 ;;		Unchanged: 0/0
 19972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19973 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19975 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19976 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19977 ;;Total ram usage:        7 bytes
 19978 ;; Hardware stack levels used:    1
 19979 ;; Hardware stack levels required when called:    1
 19980 ;; This function calls:
 19981 ;;		i2_ringbuf_num
 19982 ;; This function is called by:
 19983 ;;		_UART_ISR
 19984 ;; This function uses a non-reentrant model
 19985 ;;
 19986                           
 19987                           	psect	text97
 19988  013246                     __ptext97:
 19989                           	opt stack 0
 19990  013246                     i2_ringbuf_put:
 19991                           	opt stack 18
 19992                           
 19993                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 19994                           
 19995                           ;incstack = 0
 19996  013246  C036  F02E         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 19997  01324A  C037  F02F         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 19998  01324E  EC0B  F098         	call	i2_ringbuf_num	;wreg free
 19999  013252  EE20 F002          	lfsr	2,2
 20000  013256  5036               	movf	i2ringbuf_put@rb,w,c
 20001  013258  26D9               	addwf	fsr2l,f,c
 20002  01325A  5037               	movf	i2ringbuf_put@rb+1,w,c
 20003  01325C  22DA               	addwfc	fsr2h,f,c
 20004  01325E  50DE               	movf	postinc2,w,c
 20005  013260  5C2E               	subwf	?i2_ringbuf_num,w,c
 20006  013262  50DE               	movf	postinc2,w,c
 20007  013264  582F               	subwfb	?i2_ringbuf_num+1,w,c
 20008  013266  B0D8               	btfsc	status,0,c
 20009  013268  0012               	return	
 20010                           
 20011                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 20012  01326A  EE20 F004          	lfsr	2,4
 20013  01326E  5036               	movf	i2ringbuf_put@rb,w,c
 20014  013270  26D9               	addwf	fsr2l,f,c
 20015  013272  5037               	movf	i2ringbuf_put@rb+1,w,c
 20016  013274  22DA               	addwfc	fsr2h,f,c
 20017  013276  CFDE F039          	movff	postinc2,??i2_ringbuf_put
 20018  01327A  CFDD F03A          	movff	postdec2,??i2_ringbuf_put+1
 20019  01327E  C036  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 20020  013282  C037  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 20021  013286  CFDE F03B          	movff	postinc2,??i2_ringbuf_put+2
 20022  01328A  CFDD F03C          	movff	postdec2,??i2_ringbuf_put+3
 20023  01328E  5039               	movf	??i2_ringbuf_put,w,c
 20024  013290  243B               	addwf	??i2_ringbuf_put+2,w,c
 20025  013292  6ED9               	movwf	fsr2l,c
 20026  013294  503A               	movf	??i2_ringbuf_put+1,w,c
 20027  013296  203C               	addwfc	??i2_ringbuf_put+3,w,c
 20028  013298  6EDA               	movwf	fsr2h,c
 20029  01329A  C038  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 20030                           
 20031                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20032  01329E  EE20 F002          	lfsr	2,2
 20033  0132A2  5036               	movf	i2ringbuf_put@rb,w,c
 20034  0132A4  26D9               	addwf	fsr2l,f,c
 20035  0132A6  5037               	movf	i2ringbuf_put@rb+1,w,c
 20036  0132A8  22DA               	addwfc	fsr2h,f,c
 20037  0132AA  EE10 F004          	lfsr	1,4
 20038  0132AE  5036               	movf	i2ringbuf_put@rb,w,c
 20039  0132B0  26E1               	addwf	fsr1l,f,c
 20040  0132B2  5037               	movf	i2ringbuf_put@rb+1,w,c
 20041  0132B4  22E2               	addwfc	fsr1h,f,c
 20042  0132B6  CFE6 F03B          	movff	postinc1,??i2_ringbuf_put+2
 20043  0132BA  CFE5 F03C          	movff	postdec1,??i2_ringbuf_put+3
 20044  0132BE  0E01               	movlw	1
 20045  0132C0  263B               	addwf	??i2_ringbuf_put+2,f,c
 20046  0132C2  0E00               	movlw	0
 20047  0132C4  223C               	addwfc	??i2_ringbuf_put+3,f,c
 20048  0132C6  50DE               	movf	postinc2,w,c
 20049  0132C8  5C3B               	subwf	??i2_ringbuf_put+2,w,c
 20050  0132CA  50DE               	movf	postinc2,w,c
 20051  0132CC  583C               	subwfb	??i2_ringbuf_put+3,w,c
 20052  0132CE  B0D8               	btfsc	status,0,c
 20053  0132D0  D00A               	goto	i2l7322
 20054  0132D2  EE20 F004          	lfsr	2,4
 20055  0132D6  5036               	movf	i2ringbuf_put@rb,w,c
 20056  0132D8  26D9               	addwf	fsr2l,f,c
 20057  0132DA  5037               	movf	i2ringbuf_put@rb+1,w,c
 20058  0132DC  22DA               	addwfc	fsr2h,f,c
 20059  0132DE  2ADE               	incf	postinc2,f,c
 20060  0132E0  0E00               	movlw	0
 20061  0132E2  22DD               	addwfc	postdec2,f,c
 20062  0132E4  0012               	return	
 20063  0132E6                     i2l7322:
 20064                           
 20065                           ;My_ringbuf.c: 24: else rb->head = 0;
 20066  0132E6  EE20 F004          	lfsr	2,4
 20067  0132EA  5036               	movf	i2ringbuf_put@rb,w,c
 20068  0132EC  26D9               	addwf	fsr2l,f,c
 20069  0132EE  5037               	movf	i2ringbuf_put@rb+1,w,c
 20070  0132F0  22DA               	addwfc	fsr2h,f,c
 20071  0132F2  0E00               	movlw	0
 20072  0132F4  6EDE               	movwf	postinc2,c
 20073  0132F6  0E00               	movlw	0
 20074  0132F8  6EDD               	movwf	postdec2,c
 20075  0132FA  0012               	return	
 20076  0132FC                     __end_ofi2_ringbuf_put:
 20077                           	opt stack 0
 20078                           pclatu	equ	0xFFB
 20079                           pclath	equ	0xFFA
 20080                           tblptru	equ	0xFF8
 20081                           tblptrh	equ	0xFF7
 20082                           tblptrl	equ	0xFF6
 20083                           tablat	equ	0xFF5
 20084                           prodh	equ	0xFF4
 20085                           prodl	equ	0xFF3
 20086                           intcon	equ	0xFF2
 20087                           intcon2	equ	0xFF1
 20088                           postinc0	equ	0xFEE
 20089                           fsr0h	equ	0xFEA
 20090                           fsr0l	equ	0xFE9
 20091                           wreg	equ	0xFE8
 20092                           indf1	equ	0xFE7
 20093                           postinc1	equ	0xFE6
 20094                           postdec1	equ	0xFE5
 20095                           fsr1h	equ	0xFE2
 20096                           fsr1l	equ	0xFE1
 20097                           indf2	equ	0xFDF
 20098                           postinc2	equ	0xFDE
 20099                           postdec2	equ	0xFDD
 20100                           plusw2	equ	0xFDB
 20101                           fsr2h	equ	0xFDA
 20102                           fsr2l	equ	0xFD9
 20103                           status	equ	0xFD8
 20104                           
 20105 ;; *************** function i2_ringbuf_pop *****************
 20106 ;; Defined at:
 20107 ;;		line 45 in file "../My_library/My_ringbuf.c"
 20108 ;; Parameters:    Size  Location     Type
 20109 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 20110 ;;		 -> lcd_tx(8), usb_tx(8), usb_rx(8), uart_tx(8), 
 20111 ;;		 -> terminal_task@command(8), 
 20112 ;; Auto vars:     Size  Location     Type
 20113 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 20114 ;; Return value:  Size  Location     Type
 20115 ;;                  1    wreg      unsigned char 
 20116 ;; Registers used:
 20117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20118 ;; Tracked objects:
 20119 ;;		On entry : 0/0
 20120 ;;		On exit  : 0/0
 20121 ;;		Unchanged: 0/0
 20122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20125 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20126 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20127 ;;Total ram usage:        7 bytes
 20128 ;; Hardware stack levels used:    1
 20129 ;; Hardware stack levels required when called:    1
 20130 ;; This function calls:
 20131 ;;		i2_ringbuf_num
 20132 ;; This function is called by:
 20133 ;;		_UART_ISR
 20134 ;; This function uses a non-reentrant model
 20135 ;;
 20136                           
 20137                           	psect	text98
 20138  0133AC                     __ptext98:
 20139                           	opt stack 0
 20140  0133AC                     i2_ringbuf_pop:
 20141                           	opt stack 18
 20142                           
 20143                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 20144                           
 20145                           ;incstack = 0
 20146  0133AC  C036  F02E         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 20147  0133B0  C037  F02F         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 20148  0133B4  EC0B  F098         	call	i2_ringbuf_num	;wreg free
 20149  0133B8  502E               	movf	?i2_ringbuf_num,w,c
 20150  0133BA  102F               	iorwf	?i2_ringbuf_num+1,w,c
 20151  0133BC  B4D8               	btfsc	status,2,c
 20152  0133BE  D04A               	goto	i2l7340
 20153                           
 20154                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 20155  0133C0  EE20 F006          	lfsr	2,6
 20156  0133C4  5036               	movf	i2ringbuf_pop@rb,w,c
 20157  0133C6  26D9               	addwf	fsr2l,f,c
 20158  0133C8  5037               	movf	i2ringbuf_pop@rb+1,w,c
 20159  0133CA  22DA               	addwfc	fsr2h,f,c
 20160  0133CC  CFDE F038          	movff	postinc2,??i2_ringbuf_pop
 20161  0133D0  CFDD F039          	movff	postdec2,??i2_ringbuf_pop+1
 20162  0133D4  C036  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 20163  0133D8  C037  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 20164  0133DC  CFDE F03A          	movff	postinc2,??i2_ringbuf_pop+2
 20165  0133E0  CFDD F03B          	movff	postdec2,??i2_ringbuf_pop+3
 20166  0133E4  5038               	movf	??i2_ringbuf_pop,w,c
 20167  0133E6  243A               	addwf	??i2_ringbuf_pop+2,w,c
 20168  0133E8  6ED9               	movwf	fsr2l,c
 20169  0133EA  5039               	movf	??i2_ringbuf_pop+1,w,c
 20170  0133EC  203B               	addwfc	??i2_ringbuf_pop+3,w,c
 20171  0133EE  6EDA               	movwf	fsr2h,c
 20172  0133F0  50DF               	movf	indf2,w,c
 20173  0133F2  6E3C               	movwf	i2ringbuf_pop@ret,c
 20174                           
 20175                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 20176  0133F4  EE20 F002          	lfsr	2,2
 20177  0133F8  5036               	movf	i2ringbuf_pop@rb,w,c
 20178  0133FA  26D9               	addwf	fsr2l,f,c
 20179  0133FC  5037               	movf	i2ringbuf_pop@rb+1,w,c
 20180  0133FE  22DA               	addwfc	fsr2h,f,c
 20181  013400  EE10 F006          	lfsr	1,6
 20182  013404  5036               	movf	i2ringbuf_pop@rb,w,c
 20183  013406  26E1               	addwf	fsr1l,f,c
 20184  013408  5037               	movf	i2ringbuf_pop@rb+1,w,c
 20185  01340A  22E2               	addwfc	fsr1h,f,c
 20186  01340C  CFE6 F03A          	movff	postinc1,??i2_ringbuf_pop+2
 20187  013410  CFE5 F03B          	movff	postdec1,??i2_ringbuf_pop+3
 20188  013414  0E01               	movlw	1
 20189  013416  263A               	addwf	??i2_ringbuf_pop+2,f,c
 20190  013418  0E00               	movlw	0
 20191  01341A  223B               	addwfc	??i2_ringbuf_pop+3,f,c
 20192  01341C  50DE               	movf	postinc2,w,c
 20193  01341E  5C3A               	subwf	??i2_ringbuf_pop+2,w,c
 20194  013420  50DE               	movf	postinc2,w,c
 20195  013422  583B               	subwfb	??i2_ringbuf_pop+3,w,c
 20196  013424  B0D8               	btfsc	status,0,c
 20197  013426  D00A               	goto	i2l7332
 20198                           
 20199                           ;My_ringbuf.c: 49: rb->tail++;
 20200  013428  EE20 F006          	lfsr	2,6
 20201  01342C  5036               	movf	i2ringbuf_pop@rb,w,c
 20202  01342E  26D9               	addwf	fsr2l,f,c
 20203  013430  5037               	movf	i2ringbuf_pop@rb+1,w,c
 20204  013432  22DA               	addwfc	fsr2h,f,c
 20205  013434  2ADE               	incf	postinc2,f,c
 20206  013436  0E00               	movlw	0
 20207  013438  22DD               	addwfc	postdec2,f,c
 20208                           
 20209                           ;My_ringbuf.c: 50: } else {
 20210  01343A  D00A               	goto	i2l7334
 20211  01343C                     i2l7332:
 20212                           
 20213                           ;My_ringbuf.c: 51: rb->tail = 0;
 20214  01343C  EE20 F006          	lfsr	2,6
 20215  013440  5036               	movf	i2ringbuf_pop@rb,w,c
 20216  013442  26D9               	addwf	fsr2l,f,c
 20217  013444  5037               	movf	i2ringbuf_pop@rb+1,w,c
 20218  013446  22DA               	addwfc	fsr2h,f,c
 20219  013448  0E00               	movlw	0
 20220  01344A  6EDE               	movwf	postinc2,c
 20221  01344C  0E00               	movlw	0
 20222  01344E  6EDD               	movwf	postdec2,c
 20223  013450                     i2l7334:
 20224                           
 20225                           ;My_ringbuf.c: 52: }
 20226                           ;My_ringbuf.c: 53: return ret;
 20227  013450  503C               	movf	i2ringbuf_pop@ret,w,c
 20228                           
 20229                           ;My_ringbuf.c: 54: } else {
 20230  013452  0012               	return	
 20231  013454                     i2l7340:
 20232                           
 20233                           ;My_ringbuf.c: 55: return 0;
 20234  013454  0E00               	movlw	0
 20235  013456  0012               	return	
 20236  013458                     __end_ofi2_ringbuf_pop:
 20237                           	opt stack 0
 20238                           pclatu	equ	0xFFB
 20239                           pclath	equ	0xFFA
 20240                           tblptru	equ	0xFF8
 20241                           tblptrh	equ	0xFF7
 20242                           tblptrl	equ	0xFF6
 20243                           tablat	equ	0xFF5
 20244                           prodh	equ	0xFF4
 20245                           prodl	equ	0xFF3
 20246                           intcon	equ	0xFF2
 20247                           intcon2	equ	0xFF1
 20248                           postinc0	equ	0xFEE
 20249                           fsr0h	equ	0xFEA
 20250                           fsr0l	equ	0xFE9
 20251                           wreg	equ	0xFE8
 20252                           indf1	equ	0xFE7
 20253                           postinc1	equ	0xFE6
 20254                           postdec1	equ	0xFE5
 20255                           fsr1h	equ	0xFE2
 20256                           fsr1l	equ	0xFE1
 20257                           indf2	equ	0xFDF
 20258                           postinc2	equ	0xFDE
 20259                           postdec2	equ	0xFDD
 20260                           plusw2	equ	0xFDB
 20261                           fsr2h	equ	0xFDA
 20262                           fsr2l	equ	0xFD9
 20263                           status	equ	0xFD8
 20264                           
 20265 ;; *************** function i2_ringbuf_num *****************
 20266 ;; Defined at:
 20267 ;;		line 12 in file "../My_library/My_ringbuf.c"
 20268 ;; Parameters:    Size  Location     Type
 20269 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 20270 ;;		 -> lcd_tx(8), usb_tx(8), usb_rx(8), uart_rx(8), 
 20271 ;;		 -> uart_tx(8), terminal_task@command(8), 
 20272 ;; Auto vars:     Size  Location     Type
 20273 ;;		None
 20274 ;; Return value:  Size  Location     Type
 20275 ;;                  2    0[COMRAM] unsigned int 
 20276 ;; Registers used:
 20277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20278 ;; Tracked objects:
 20279 ;;		On entry : 0/0
 20280 ;;		On exit  : 0/0
 20281 ;;		Unchanged: 0/0
 20282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20285 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20286 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20287 ;;Total ram usage:        8 bytes
 20288 ;; Hardware stack levels used:    1
 20289 ;; This function calls:
 20290 ;;		Nothing
 20291 ;; This function is called by:
 20292 ;;		_UART_ISR
 20293 ;;		i2_ringbuf_put
 20294 ;;		i2_ringbuf_pop
 20295 ;; This function uses a non-reentrant model
 20296 ;;
 20297                           
 20298                           	psect	text99
 20299  013016                     __ptext99:
 20300                           	opt stack 0
 20301  013016                     i2_ringbuf_num:
 20302                           	opt stack 18
 20303                           
 20304                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 20305                           
 20306                           ;incstack = 0
 20307  013016  EE20 F006          	lfsr	2,6
 20308  01301A  502E               	movf	i2ringbuf_num@rb,w,c
 20309  01301C  26D9               	addwf	fsr2l,f,c
 20310  01301E  502F               	movf	i2ringbuf_num@rb+1,w,c
 20311  013020  22DA               	addwfc	fsr2h,f,c
 20312  013022  EE10 F004          	lfsr	1,4
 20313  013026  502E               	movf	i2ringbuf_num@rb,w,c
 20314  013028  26E1               	addwf	fsr1l,f,c
 20315  01302A  502F               	movf	i2ringbuf_num@rb+1,w,c
 20316  01302C  22E2               	addwfc	fsr1h,f,c
 20317  01302E  50DE               	movf	postinc2,w,c
 20318  013030  5CE6               	subwf	postinc1,w,c
 20319  013032  50DE               	movf	postinc2,w,c
 20320  013034  58E6               	subwfb	postinc1,w,c
 20321  013036  A0D8               	btfss	status,0,c
 20322  013038  D01F               	goto	i2l6948
 20323                           
 20324                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 20325  01303A  EE20 F004          	lfsr	2,4
 20326  01303E  502E               	movf	i2ringbuf_num@rb,w,c
 20327  013040  26D9               	addwf	fsr2l,f,c
 20328  013042  502F               	movf	i2ringbuf_num@rb+1,w,c
 20329  013044  22DA               	addwfc	fsr2h,f,c
 20330  013046  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 20331  01304A  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 20332  01304E  EE20 F006          	lfsr	2,6
 20333  013052  502E               	movf	i2ringbuf_num@rb,w,c
 20334  013054  26D9               	addwf	fsr2l,f,c
 20335  013056  502F               	movf	i2ringbuf_num@rb+1,w,c
 20336  013058  22DA               	addwfc	fsr2h,f,c
 20337  01305A  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 20338  01305E  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 20339  013062  1E32               	comf	??i2_ringbuf_num+2,f,c
 20340  013064  1E33               	comf	??i2_ringbuf_num+3,f,c
 20341  013066  4A32               	infsnz	??i2_ringbuf_num+2,f,c
 20342  013068  2A33               	incf	??i2_ringbuf_num+3,f,c
 20343  01306A  5030               	movf	??i2_ringbuf_num,w,c
 20344  01306C  2432               	addwf	??i2_ringbuf_num+2,w,c
 20345  01306E  6E2E               	movwf	?i2_ringbuf_num,c
 20346  013070  5031               	movf	??i2_ringbuf_num+1,w,c
 20347  013072  2033               	addwfc	??i2_ringbuf_num+3,w,c
 20348  013074  6E2F               	movwf	?i2_ringbuf_num+1,c
 20349                           
 20350                           ;My_ringbuf.c: 15: } else {
 20351  013076  0012               	return	
 20352  013078                     i2l6948:
 20353                           
 20354                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 20355  013078  EE20 F004          	lfsr	2,4
 20356  01307C  502E               	movf	i2ringbuf_num@rb,w,c
 20357  01307E  26D9               	addwf	fsr2l,f,c
 20358  013080  502F               	movf	i2ringbuf_num@rb+1,w,c
 20359  013082  22DA               	addwfc	fsr2h,f,c
 20360  013084  CFDE F030          	movff	postinc2,??i2_ringbuf_num
 20361  013088  CFDD F031          	movff	postdec2,??i2_ringbuf_num+1
 20362  01308C  EE20 F002          	lfsr	2,2
 20363  013090  502E               	movf	i2ringbuf_num@rb,w,c
 20364  013092  26D9               	addwf	fsr2l,f,c
 20365  013094  502F               	movf	i2ringbuf_num@rb+1,w,c
 20366  013096  22DA               	addwfc	fsr2h,f,c
 20367  013098  CFDE F032          	movff	postinc2,??i2_ringbuf_num+2
 20368  01309C  CFDD F033          	movff	postdec2,??i2_ringbuf_num+3
 20369  0130A0  EE20 F006          	lfsr	2,6
 20370  0130A4  502E               	movf	i2ringbuf_num@rb,w,c
 20371  0130A6  26D9               	addwf	fsr2l,f,c
 20372  0130A8  502F               	movf	i2ringbuf_num@rb+1,w,c
 20373  0130AA  22DA               	addwfc	fsr2h,f,c
 20374  0130AC  CFDE F034          	movff	postinc2,??i2_ringbuf_num+4
 20375  0130B0  CFDD F035          	movff	postdec2,??i2_ringbuf_num+5
 20376  0130B4  1E34               	comf	??i2_ringbuf_num+4,f,c
 20377  0130B6  1E35               	comf	??i2_ringbuf_num+5,f,c
 20378  0130B8  4A34               	infsnz	??i2_ringbuf_num+4,f,c
 20379  0130BA  2A35               	incf	??i2_ringbuf_num+5,f,c
 20380  0130BC  5032               	movf	??i2_ringbuf_num+2,w,c
 20381  0130BE  2634               	addwf	??i2_ringbuf_num+4,f,c
 20382  0130C0  5033               	movf	??i2_ringbuf_num+3,w,c
 20383  0130C2  2235               	addwfc	??i2_ringbuf_num+5,f,c
 20384  0130C4  5030               	movf	??i2_ringbuf_num,w,c
 20385  0130C6  2434               	addwf	??i2_ringbuf_num+4,w,c
 20386  0130C8  6E2E               	movwf	?i2_ringbuf_num,c
 20387  0130CA  5031               	movf	??i2_ringbuf_num+1,w,c
 20388  0130CC  2035               	addwfc	??i2_ringbuf_num+5,w,c
 20389  0130CE  6E2F               	movwf	?i2_ringbuf_num+1,c
 20390  0130D0  0012               	return	
 20391  0130D2                     __end_ofi2_ringbuf_num:
 20392                           	opt stack 0
 20393                           pclatu	equ	0xFFB
 20394                           pclath	equ	0xFFA
 20395                           tblptru	equ	0xFF8
 20396                           tblptrh	equ	0xFF7
 20397                           tblptrl	equ	0xFF6
 20398                           tablat	equ	0xFF5
 20399                           prodh	equ	0xFF4
 20400                           prodl	equ	0xFF3
 20401                           intcon	equ	0xFF2
 20402                           intcon2	equ	0xFF1
 20403                           postinc0	equ	0xFEE
 20404                           fsr0h	equ	0xFEA
 20405                           fsr0l	equ	0xFE9
 20406                           wreg	equ	0xFE8
 20407                           indf1	equ	0xFE7
 20408                           postinc1	equ	0xFE6
 20409                           postdec1	equ	0xFE5
 20410                           fsr1h	equ	0xFE2
 20411                           fsr1l	equ	0xFE1
 20412                           indf2	equ	0xFDF
 20413                           postinc2	equ	0xFDE
 20414                           postdec2	equ	0xFDD
 20415                           plusw2	equ	0xFDB
 20416                           fsr2h	equ	0xFDA
 20417                           fsr2l	equ	0xFD9
 20418                           status	equ	0xFD8
 20419                           
 20420 ;; *************** function _ST7032_ISR *****************
 20421 ;; Defined at:
 20422 ;;		line 92 in file "../My_library/My_ST7032.c"
 20423 ;; Parameters:    Size  Location     Type
 20424 ;;		None
 20425 ;; Auto vars:     Size  Location     Type
 20426 ;;		None
 20427 ;; Return value:  Size  Location     Type
 20428 ;;		None               void
 20429 ;; Registers used:
 20430 ;;		wreg, status,2
 20431 ;; Tracked objects:
 20432 ;;		On entry : 0/0
 20433 ;;		On exit  : 0/0
 20434 ;;		Unchanged: 0/0
 20435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20440 ;;Total ram usage:        0 bytes
 20441 ;; Hardware stack levels used:    1
 20442 ;; This function calls:
 20443 ;;		Nothing
 20444 ;; This function is called by:
 20445 ;;		_ISR
 20446 ;; This function uses a non-reentrant model
 20447 ;;
 20448                           
 20449                           	psect	text100
 20450  014584                     __ptext100:
 20451                           	opt stack 0
 20452  014584                     _ST7032_ISR:
 20453                           	opt stack 20
 20454                           
 20455                           ;My_ST7032.c: 93: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
 20456                           
 20457                           ;incstack = 0
 20458  014584  B69D               	btfsc	3997,3,c	;volatile
 20459  014586  A69E               	btfss	3998,3,c	;volatile
 20460  014588  D004               	goto	i2l7580
 20461                           
 20462                           ;My_ST7032.c: 94: PIR1bits.SSP1IF = 0;
 20463  01458A  969E               	bcf	3998,3,c	;volatile
 20464                           
 20465                           ;My_ST7032.c: 95: st7032_flag = 1;
 20466  01458C  0E01               	movlw	1
 20467  01458E  0101               	movlb	1	; () banked
 20468  014590  6F30               	movwf	_st7032_flag& (0+255),b
 20469  014592                     i2l7580:
 20470                           
 20471                           ;My_ST7032.c: 96: }
 20472                           ;My_ST7032.c: 97: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
 20473  014592  A6A0               	btfss	4000,3,c	;volatile
 20474  014594  0012               	return	
 20475  014596  A6A1               	btfss	4001,3,c	;volatile
 20476  014598  0012               	return	
 20477                           
 20478                           ;My_ST7032.c: 98: PIR2bits.BCL1IF = 0;
 20479  01459A  96A1               	bcf	4001,3,c	;volatile
 20480  01459C  0012               	return	
 20481  01459E                     __end_of_ST7032_ISR:
 20482                           	opt stack 0
 20483                           pclatu	equ	0xFFB
 20484                           pclath	equ	0xFFA
 20485                           tblptru	equ	0xFF8
 20486                           tblptrh	equ	0xFF7
 20487                           tblptrl	equ	0xFF6
 20488                           tablat	equ	0xFF5
 20489                           prodh	equ	0xFF4
 20490                           prodl	equ	0xFF3
 20491                           intcon	equ	0xFF2
 20492                           intcon2	equ	0xFF1
 20493                           postinc0	equ	0xFEE
 20494                           fsr0h	equ	0xFEA
 20495                           fsr0l	equ	0xFE9
 20496                           wreg	equ	0xFE8
 20497                           indf1	equ	0xFE7
 20498                           postinc1	equ	0xFE6
 20499                           postdec1	equ	0xFE5
 20500                           fsr1h	equ	0xFE2
 20501                           fsr1l	equ	0xFE1
 20502                           indf2	equ	0xFDF
 20503                           postinc2	equ	0xFDE
 20504                           postdec2	equ	0xFDD
 20505                           plusw2	equ	0xFDB
 20506                           fsr2h	equ	0xFDA
 20507                           fsr2l	equ	0xFD9
 20508                           status	equ	0xFD8
 20509                           pclatu	equ	0xFFB
 20510                           pclath	equ	0xFFA
 20511                           tblptru	equ	0xFF8
 20512                           tblptrh	equ	0xFF7
 20513                           tblptrl	equ	0xFF6
 20514                           tablat	equ	0xFF5
 20515                           prodh	equ	0xFF4
 20516                           prodl	equ	0xFF3
 20517                           intcon	equ	0xFF2
 20518                           intcon2	equ	0xFF1
 20519                           postinc0	equ	0xFEE
 20520                           fsr0h	equ	0xFEA
 20521                           fsr0l	equ	0xFE9
 20522                           wreg	equ	0xFE8
 20523                           indf1	equ	0xFE7
 20524                           postinc1	equ	0xFE6
 20525                           postdec1	equ	0xFE5
 20526                           fsr1h	equ	0xFE2
 20527                           fsr1l	equ	0xFE1
 20528                           indf2	equ	0xFDF
 20529                           postinc2	equ	0xFDE
 20530                           postdec2	equ	0xFDD
 20531                           plusw2	equ	0xFDB
 20532                           fsr2h	equ	0xFDA
 20533                           fsr2l	equ	0xFD9
 20534                           status	equ	0xFD8
 20535                           
 20536                           	psect	rparam
 20537  0000                     pclatu	equ	0xFFB
 20538                           pclath	equ	0xFFA
 20539                           tblptru	equ	0xFF8
 20540                           tblptrh	equ	0xFF7
 20541                           tblptrl	equ	0xFF6
 20542                           tablat	equ	0xFF5
 20543                           prodh	equ	0xFF4
 20544                           prodl	equ	0xFF3
 20545                           intcon	equ	0xFF2
 20546                           intcon2	equ	0xFF1
 20547                           postinc0	equ	0xFEE
 20548                           fsr0h	equ	0xFEA
 20549                           fsr0l	equ	0xFE9
 20550                           wreg	equ	0xFE8
 20551                           indf1	equ	0xFE7
 20552                           postinc1	equ	0xFE6
 20553                           postdec1	equ	0xFE5
 20554                           fsr1h	equ	0xFE2
 20555                           fsr1l	equ	0xFE1
 20556                           indf2	equ	0xFDF
 20557                           postinc2	equ	0xFDE
 20558                           postdec2	equ	0xFDD
 20559                           plusw2	equ	0xFDB
 20560                           fsr2h	equ	0xFDA
 20561                           fsr2l	equ	0xFD9
 20562                           status	equ	0xFD8
 20563                           
 20564                           	psect	temp
 20565  00005B                     btemp:
 20566                           	opt stack 0
 20567  00005B                     	ds	1
 20568  0000                     int$flags	set	btemp
 20569                           pclatu	equ	0xFFB
 20570                           pclath	equ	0xFFA
 20571                           tblptru	equ	0xFF8
 20572                           tblptrh	equ	0xFF7
 20573                           tblptrl	equ	0xFF6
 20574                           tablat	equ	0xFF5
 20575                           prodh	equ	0xFF4
 20576                           prodl	equ	0xFF3
 20577                           intcon	equ	0xFF2
 20578                           intcon2	equ	0xFF1
 20579                           postinc0	equ	0xFEE
 20580                           fsr0h	equ	0xFEA
 20581                           fsr0l	equ	0xFE9
 20582                           wreg	equ	0xFE8
 20583                           indf1	equ	0xFE7
 20584                           postinc1	equ	0xFE6
 20585                           postdec1	equ	0xFE5
 20586                           fsr1h	equ	0xFE2
 20587                           fsr1l	equ	0xFE1
 20588                           indf2	equ	0xFDF
 20589                           postinc2	equ	0xFDE
 20590                           postdec2	equ	0xFDD
 20591                           plusw2	equ	0xFDB
 20592                           fsr2h	equ	0xFDA
 20593                           fsr2l	equ	0xFD9
 20594                           status	equ	0xFD8


Data Sizes:
    Strings     422
    Constant    239
    Data        5
    BSS         2809
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    112     124
    BANK1           256    105     234
    BANK2           256      0     228
    BANK3           256     40     240
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[9]), STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_48(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), STR_47(CODE[9]), STR_46(CODE[9]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    display_time_0802@line1	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    display_time_0802@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    display_time_0802@line0	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> main@s(BANK3[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(BANK0[8]), usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 235
		 -> STR_43(CODE[235]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(BANK0[8]), usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(BANK0[8]), usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), 
		 -> uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 

    S3119ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> ST7032_init@buf(BANK4[200]), main_init@uartrx(BANK3[100]), main_init@uarttx(BIGRAMl[1000]), main_init@usbrx(BANK3[100]), 
		 -> main_init@usbtx(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> lcd_tx(BANK0[8]), usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), 
		 -> uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->_ringbuf_put
    _ringbuf_backspace->_ringbuf_num
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _display_time_0802->_display_dec
    _display_dec->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USB_task->_get_string_usb
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _UART_task->_ringbuf_num
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _ST7032_command->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0  316702
                                            111 BANK0      1     1      0
                                              0 BANK3     40    40      0
                          _RTCC_task
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                        _ST7032_task
                          _UART_task
                           _USB_task
                  _display_time_0802
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  165672
                                            105 BANK0      6     2      4
                                              0 BANK1    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  10     0     10  126418
                                             95 BANK0     10     0     10
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  110168
                                             86 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   60702
                                             79 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   30837
                                             47 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   10483
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15564
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    4893
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    9923
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   10766
                                             15 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1646
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   52474
                           _OSC_init
                          _RTCC_init
                        _ST7032_init
                          _UART_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   31233
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _ST7032_clear                                         0     0      0   10092
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17067
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9844
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_time_0802                                    6     0      6   34466
                                             55 BANK0      6     0      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    1061
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_dec                                          8     4      4   21337
                                             47 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   12740
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8776
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   21202
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1372
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    4096
                                             15 BANK0      3     3      0
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2659
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ST7032_puts                                          2     0      2    9293
                                             16 BANK0      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (2) _ST7032_put                                           1     1      0    8752
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (1) _ST7032_cursor                                        4     3      1   10667
                                             17 BANK0      4     3      1
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (3) _ST7032_command                                       2     1      1   10092
                                             15 BANK0      2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8721
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1372
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7223
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7223
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0   33321
                                             30 COMRAM    15    15      0
                         _ST7032_ISR
                           _UART_ISR
                            _USB_ISR
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) _ST7032_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _ST7032_clear
     _ST7032_command
       _ringbuf_put
         _ringbuf_num
   _ST7032_cursor
     _ST7032_command
       _ringbuf_put
         _ringbuf_num
   _ST7032_puts
     _ST7032_put
       _ringbuf_put
         _ringbuf_num
   _ST7032_task
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _UART_task
     _ringbuf_num
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _display_time_0802
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _display_dec
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
     _strcat
     _strcpy
   _main_init
     _OSC_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _ST7032_init
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _UART_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _ST7032_ISR
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100     28      F0      12       93.8%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      E4      10       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      EA       7       91.4%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     70      7C       5       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45C       8        0.0%
DATA                 0      0     C2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Nov 13 08:53:40 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FD73  
                         _ringbuf_put_num 38FE                              ?_display_dec 008F  
                         _ringbuf_put_str 3D14                              ___awdiv@sign 0065  
                                      _ms 0114                             _USBDeviceInit 1604  
                     ___wmul@multiplicand 0062                         ??_RTCC_from_epoch 0091  
                      __size_of_CDCInitEP 006E                              __CFG_CP0$OFF 000000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 003A      USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C  
                                     l207 420A                                       l208 4208  
                                     l146 167A               __end_of_USBStdGetDscHandler 1C6A  
                                     l504 14E6                                       l509 153A  
                                     l813 2762                                       l662 402A  
                                     l726 3900                                       l807 2F5A  
                                     l657 4180                                       l826 1386  
                                     _BDT 000D00                                       _ISR 1008  
                                     _UIE 000F36                                       _UIR 000F62  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                                _USBSuspend 43A0  
                                     _now 0135                         _RTCC_from_caltime 444A  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0042  
                                     prod 000FF3                               ?_ST7032_ISR 002E  
                                     wreg 000FE8                            _USBDeviceTasks 18B4  
                              _TXSTA1bits 000FAD                            _USBDeviceState 0023  
                             ?_ST7032_put 002E                        ?_RTCC_from_caltime 008F  
                   ??_USBCtrlTrfRxService 002E                  __size_ofi2_USBDeviceInit 013A  
                          ??_getsUSBUSART 006A                  USBEnableEndpoint@options 0036  
                                    ?_ISR 002E                    __end_of_get_string_usb 409C  
                        _terminal_at_hand 3D78                                      l1162 454A  
                                    l1194 37A0                                      l1458 1868  
              USBConfigureEndpoint@handle 0034                                      l1698 1F68  
                                    l1948 3A70                                      l1958 3E32  
                                    l1895 2F48                                      l9000 0784  
                                    l8210 3A8C                                      l8204 2480  
                                    l9100 2CFE                                      l9004 07CC  
                                    l8214 3AB2                                      l9102 2D14  
                                    l9030 4198                                      l8160 3542  
                                    l8152 351E                                      l8312 0B8A  
                                    l9200 4380                                      l8240 2E3C  
                                    l8232 2E12                                      l8400 3D16  
                      __CFG_WPFP$PAGE_127 000000                                      l8162 354E  
                                    l8330 0C18                                      l8314 0B90  
                                    l9202 4384                                      l8250 2E72  
                                    l8242 2E42                                      l8226 2DFC  
                                    l9042 402C                                      l8164 3554  
                                    l8172 3586                                      l8156 352E  
                                    l8324 0BF4                                      l9108 2D1A  
                                    l8500 003E                                      l8404 3D4E  
                                    l8334 0C7C                                      l8318 0B9A  
                                    l8326 0BF8                                      l8350 4418  
                                    l8510 0080                                      l8238 2E30  
                                    l8254 2E80                                      l8270 2EDC  
                                    l9118 3714                                      l8176 359A  
                                    l8168 3578                                      l9216 4066  
                                    l8600 033E                                      l8504 0048  
                                    l9160 422A                                      l8280 2F36  
                                    l8272 2EE2                                      l9128 3C56  
                                    l9080 3910                                      l9218 406A  
                                    l8370 3A32                                      l8610 0372  
                                    l8530 0144                                      l9154 3CFA  
                                    l8258 2E94                                      l9090 3972  
                                    l9410 08E6                                      l9402 083C  
                                    l8188 20DA                                      l8292 29C8  
                                    l8268 2ECC                                      l9084 3932  
                                    l9420 093C                                      l9412 08EA  
                                    l8366 3A20                                      l8390 3E00  
                                    l8630 0420                                      l8622 03B8  
                                    l8550 01F4                                      l8542 01B6  
                                    l8526 0132                                      l8518 0100  
                                    l9158 421E                                      l8702 3E9E  
                                    l9166 2A28                                      l9406 0866  
                                    l8368 3A2C                                      l8624 03BE  
                                    l8616 0398                                      l8608 0366  
                                    l8544 01CE                                      l8536 0198  
                                    l8528 013E                                      l8632 042C  
                                    l8472 13F8                                      l8704 3EAA  
                                    l9168 2A40                                      l8378 3A62  
                                    l8394 3E24                                      l8386 3DEE  
                                    l8538 01A4                                      l8634 044C  
                                    l8554 020C                                      l8474 13FC  
                                    l8650 428C                                      l8730 1EE0  
                                    l8714 1E82                                      l9450 0AC0  
                                    l9442 0A64                                      l9434 09DC  
                                    l9426 098A                                      l9418 0938  
                                    l9524 3F56                                      l8660 26A8  
                                    l8388 3DFA                                      l8580 02B4  
                                    l8556 0242                                      l8492 000E  
                                    l9292 11F8                                      l8732 1F2A  
                                    l8716 1E88                                      l8708 3EE8  
                                    l9444 0A8E                                      l9436 09E0  
                                    l9428 098E                                      l9542 17AA  
                                    l9534 1776                                      l8830 2188  
                                    l8590 030E                                      l8566 0272  
                                    l9294 1210                                      l8478 1404  
                                    l8654 429E                                      l8734 1F30  
                                    l8726 1ECE                                      l9454 0ADC  
                                    l9528 3F82                                      l9560 1810  
                                    l8680 2742                                      l8904 1564  
                                    l8912 1588                                      l8840 21D2  
                                    l8832 2192                                      l8592 0318  
                                    l8568 0278                                      l8760 165A  
                                    l9448 0AB8                                      l9562 181A  
                                    l9570 1860                                      l9554 17DC  
                                    l9538 179A                                      l8930 15D8  
                                    l8914 1594                                      l8922 15B8  
                                    l8586 02D6                                      l8498 002C  
                                    l9458 0B1C                                      l9466 0B52  
                                    l9564 1824                                      l9556 17FC  
                                    l8668 26DC                                      l8932 15DC  
                                    l8924 15C2                                      l8844 2202  
                                    l8772 1688                                      l8780 169A  
                                    l8756 1650                                      l9732 1DB8  
                                    l9574 1872                                      l9558 1806  
                                    l9582 1890                                      l8934 1600  
                                    l8838 21CA                                      l8950 3E46  
                                    l9568 1830                                      l8872 14C0  
                                    l8848 2234                                      l8864 44D4  
                                    l8952 3E4C                                      l8784 16BA  
                                    l9578 1886                                      l8890 1524  
                                    l8874 14CA                                      l8954 3E5C  
                                    l8794 172A                                      l8698 3DC0  
                                    l8962 04A2                                      l8884 14F0  
                                    l8956 3E68                                      l8788 16C4  
                                    l8980 05F6                                      l8972 053E  
                                    l8964 04AE                                      l9764 1E7C  
                                    l8878 14DA                                      l8974 0576  
                                    STR_1 FFDE                                      l8896 153E  
                                    l8992 06CC                                      l8984 063E  
                                    l8968 04F6                                      STR_2 FFA9  
                                    STR_3 FFE6                                      l8994 0704  
                                    l8978 05BE                                      STR_4 FFFA  
                                    STR_5 FFFA                                      l8988 0684  
                                    STR_6 FFE6                                      STR_7 FFFC  
                                    l8998 074C                                      STR_8 FFAA  
                                    STR_9 FFF8                     ??_USBCtrlTrfTxService 002E  
                                    u8080 3D40                                      u8090 3D70  
                                    u8087 3D36                                      _UCFG 000F39  
                                    u7800 24CC                                      u8097 3D66  
                                    u7810 24CE                                      u8610 2178  
                                    u7740 242A                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u7750 242C  
                                    u7760 245C                                      u8800 3E92  
                                    u8618 217C                                      _UEIE 000F37  
                                    u7780 2472                                      u9460 3F78  
                                    u7790 2474                                      u9470 3FA4  
                                    u8670 14B0                                      u8807 3E88  
                                    u7778 2460                                      u9467 3F6E  
                                    u9477 3F9A                                      u8678 14B4  
                                    u9670 1DF4                                      _UEIR 000F63  
                                    _UCON 000F65                                      u9688 1DF8  
                         _CDCDataInHandle 0125                       ??_RTCC_from_caltime 0091  
  USBStdFeatureReqHandler@current_ep_data 0045                                      _pDst 0127  
                                    _atoi 1E80                                      _main 1D76  
                ??i2_USBTransferOnePacket 0032                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 0110                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 41DC                                      btemp 005B  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 45C0  
                                    pclat 000FFA                                      prodh 000FF4  
                                    prodl 000FF3                                      start 10BC  
                           __CFG_IESO$OFF 000000                __end_of_USBCheckStdRequest 268A  
                  ??_USBCtrlTrfOutHandler 0030                              ?_ST7032_init 002E  
                            ?_ST7032_task 002E                            terminal_task@i 01E4  
                            ?_ST7032_puts 0070                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0042                           ??_terminal_task 00CD  
                         ??_terminal_time 00BE                     __end_ofi2_ringbuf_pop 3458  
                   __end_ofi2_ringbuf_num 30D2                     __end_ofi2_ringbuf_put 32FC  
                      terminal_task@ascii 01E3                                     ??_ISR 004C  
                ??_USBStdGetStatusHandler 002E                              print_time@tx 008F  
                          ?_USBDeviceInit 002E                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
               __end_of_RTCC_from_caltime 4470                                     ?_atoi 0066  
                                   ?_main 002E                   __size_of_put_string_usb 002C  
                          ??_get_quot_rem 007D                           __end_of___awdiv 2E9E  
                                   _ADRES 000FC3                                     STR_20 FFE3  
                                   STR_13 FFF6                                     STR_30 FFD4  
                                   STR_31 FFF0                                     STR_15 FFA3  
                                   STR_23 FF43                                     STR_32 FFC9  
                                   STR_40 FFBB                                     STR_24 FFAC  
                                   STR_33 FFE1                                     STR_41 FFCF  
                                   STR_25 FF74                                     STR_26 FFEC  
                                   STR_42 FFEE                                     STR_34 FFE7  
                                   STR_35 FFCD                                     STR_27 FFEB  
                                   STR_19 FFE3                                     STR_43 FE58  
                                   STR_36 FFD9                                     STR_44 FF88  
                                   STR_28 FF68                           __end_of___awmod 35A4  
                                   STR_29 FFE9                                     STR_37 FFF2  
                                   STR_45 FF91                                     STR_38 FFC2  
                                   STR_46 FF7F                                     STR_39 FFF4  
                                   STR_47 FF9A                                     STR_48 FFB4  
       __size_of_USBCtrlEPServiceComplete 00F0                           __end_of___lldiv 2F5A  
                         ___awdiv@divisor 0062                    __end_of_USBDeviceTasks 19FE  
                                   _LATB2 007C52                 ?_USBCtrlEPServiceComplete 002E  
                         __end_of___lwdiv 3A7A                           __end_of___lwmod 3E3C  
                                   i2l300 3478                                     i2l232 1FE8  
                                   i2l146 1A64                                     i2l170 1990  
                                   i2l308 4128                                     i2l158 18E4  
                                   i2l168 197E                                     i2l345 323C  
                                   i2l169 19FA                                     i2l450 334A  
                                   i2l452 3380                                     i2l374 0E26  
                                   i2l295 3466                                     i2l359 25C0  
                                   i2l368 260E                                     i2l393 0FEE  
                                   i2l298 34EE                                     i2l299 3474  
                                   _UADDR 000F38                           ___awdiv@counter 0064  
                 ST7032_task@st7032_state 012D                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
      __size_of_USBCtrlEPAllowStatusStage 00C2                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000                          __end_of_UART_ISR 40E6  
         __end_of_USBCtrlEPAllowDataStage 363C                                     _sd000 FE54  
                                   _sd001 FDBE                                     _sd002 FDF2  
                ST7032_cursor@row_offsets 0072                    __size_of_ST7032_cursor 0032  
                    caltime_to_epoch@year 007F                                i2memset@p1 002E  
                      __size_of_UART_init 0022                           __end_of_dpowers FD73  
                      __size_of_UART_task 0020                          __end_of_OSC_init 45BA  
                         __end_of_isdigit 4422                        __size_of_RTCC_init 006A  
                         ?_get_string_usb 006D                        __size_of_RTCC_task 003A  
                        ringbuf_delete@rb 0060                                     atoi@a 006B  
                                   atoi@s 0066                                     main@s 03C8  
                            display_dec@s 0093                                     tablat 000FF5  
                                   plusw2 000FDB                         __end_of_CDCInitEP 3C40  
                        __end_of_USB_init 4534                          __end_of_USB_task 37EC  
              __size_of_ringbuf_backspace 008E                                     status 000FD8  
                         __end_of_sprintf 045A                          __end_ofi2_memset 43F8  
                       month_length@month 0066                   __end_of_ringbuf_put_num 3980  
                 __end_of_ringbuf_put_str 3D78                             ?_ST7032_clear 002E  
                     terminal_task@i_4276 01E2                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00DC                           __initialization 3878  
                     __size_of_ST7032_ISR 001A                           terminal_task@rx 00CB  
                         terminal_task@tx 00C9                           terminal_time@tx 00B6  
                            __end_of_atoi 1F72                              __end_of_main 1E80  
                     __size_of_ST7032_put 0072                     _control_signal_bitmap 012F  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
               __size_of_USBCtrlEPService 00CE                             print_time@str 0091  
                                  ??_atoi 0068                                    ??_main 00CF  
                           __activetblptr 000003                           ?_USBDeviceTasks 002E  
                             ?_USBSuspend 002E                              _cdc_mem_type 0027  
                             ST7032_put@c 006F                                    _BCL1IF 007D0B  
                 __end_of_USBDeviceAttach 4214                          _CDCDataOutHandle 00D0  
                       _getsUSBUSART$1957 006B                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                     display_time_0802@tm 0097                          ___awdiv@dividend 0060  
                               ??_USB_ISR 004C                           getsUSBUSART@len 0069  
                   __size_of_CDCTxService 0178                                    i2l1110 40C8  
                                  i2l1111 40C6                                    i2l1285 1056  
                                  i2l1288 1080                            __CFG_WDTEN$OFF 000000  
                                  i2l5340 30E8                                    i2l5404 3388  
                                  i2l6212 200E                                    i2l6310 2646  
                                  i2l7022 1974                                    i2l7014 194C  
                                  i2l6240 1C96                                    i2l5360 316E  
                                  i2l7008 1940                                    i2l5282 369E  
                                  i2l5530 4328                                    i2l6306 2628  
                                  i2l7050 19F6                                    i2l7042 19BC  
                                  i2l6412 31BE                                    i2l5292 413C  
                                  i2l5348 3112                                    i2l5380 3328  
                                  i2l5524 431C                                    i2l5700 43E6  
                                  i2l7028 1988                                    i2l5550 2ADA  
                                  i2l6414 31C2                                    i2l6262 1D2C  
                                  i2l6246 1CB8                                    i2l5526 4322  
                                  i2l5560 2B04                                    i2l6432 3222  
                                  i2l5296 414A                                    i2l5800 1B48  
                                  i2l6280 25C8                                    i2l6192 1F92  
                                  i2l6600 4124                                    i2l7048 19DA  
                                  i2l7322 32E6                                    i2l5570 2B44  
                                  i2l5546 2AD0                                    i2l6426 3202  
                                  i2l6258 1D12                                    i2l6282 25CE  
                                  i2l7332 343C                                    i2l7340 3454  
                                  i2l5716 2D64                                    i2l5396 336A  
                                  i2l5388 333E                                    i2l5820 1C46  
                                  i2l5812 1BE8                                    i2l5804 1B5A  
                                  i2l6292 25E6                                    i2l6284 25D4  
                                  i2l6620 2BDC                                    i2l7334 3450  
                                  i2l6390 3F06                                    i2l5902 0F54  
                                  i2l5822 1C4C                                    i2l5814 1BEE  
                                  i2l6294 25EC                                    i2l5750 360A  
                                  i2l5568 2B3C                                    i2l5920 0FDA  
                                  i2l5904 0F6E                                    i2l6296 25F2  
                                  i2l6616 2BD4                                    i2l6632 2C3C  
                                  i2l5578 2B7C                                    i2l5826 1C52  
                                  i2l5770 251C                                    i2l5746 35F2  
                                  i2l6634 2C42                                    i2l5908 0F88  
                                  i2l6628 2C22                                    i2l6398 3F4E  
                                  i2l5934 1054                                    i2l5918 0FCE  
                                  i2l5838 3496                                    i2l5766 2514  
                                  i2l6902 1A72                                    i2l6910 1A84  
                                  i2l5936 1060                                    i2l5928 1010  
                                  i2l5880 0E9A                                    i2l5848 34D6  
                                  i2l5696 43D6                                    i2l5792 258E  
                                  i2l5776 2548                                    i2l6576 4312  
                                  i2l5866 0E22                                    i2l6578 4314  
                                  i2l6914 1AA2                                    i2l7580 4592  
                                  i2l5892 0EFC                                    i2l6924 1B06  
                                  i2l5886 0EDE                                    i2l6918 1AAA  
                                  i2l5888 0EE0                                    i2l6890 1A48  
                                  i2l6970 18DC                                    i2l6962 18CC  
                                  i2l6948 3078                                    i2l6886 1A40  
                                  i2l7942 1078                                    i2l6992 190A  
                                  i2l6984 18FA                                    i2l6998 1930  
                                  _RCREG1 000FAF                             CDCTxService@i 006A  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                  i2USBTransferOnePacket@ep 0032  
                       ??i2_USBDeviceInit 0036                           i2ringbuf_pop@rb 0036  
                         i2ringbuf_num@rb 002E           __size_ofi2_USBTransferOnePacket 00BA  
                         i2ringbuf_put@rb 0036                            __CFG_WPDIS$OFF 000000  
                          ??_ST7032_clear 0071                  __end_of_is_usb_available 4550  
                      _terminal_task$6350 01E0                        epoch_to_caltime@tm 0081  
                    get_string_usb@rx_len 0072                         _shortPacketStatus 002B  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                 __size_of_ST7032_command 0070                          ringbuf_put_num@i 0074  
                         USBDeviceTasks@i 004B                             _ST7032_cursor 42B6  
                   caltime_to_epoch@epoch 0081               USBStdFeatureReqHandler@pUEP 0043  
                      _terminal_time$6351 00BE                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002F                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                                  ___lmul 3A7A                              ?_putUSBUSART 0060  
                         _caltime_to_RTCC 2762                                    ___wmul 424C  
                      ??_epoch_to_caltime 0083                         __end_of_UART_init 44B8  
                               ??___awdiv 0064                         __end_of_UART_task 44F8  
                               ??___awmod 0064                                    _d_to_x 4422  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 223A  
                    ringbuf_put_num@value 0071                              ?_timer0_init 002E  
                       __end_of_RTCC_init 3CAA                              ?_timer1_init 0060  
                               ??___lwdiv 0064                         __end_of_RTCC_task 41DC  
                               ??___lwmod 006B                              ?_timer3_init 002E  
                                  _lcd_tx 00D4                         _USBEnableEndpoint 412C  
         __size_of_USBStdGetStatusHandler 00AA                                    _memset 4282  
                                  clear_0 3880                                    clear_1 3892  
                                  clear_2 389E                           put_string_usb@s 006C  
                                  clear_3 38AA                                    clear_4 38B6  
                                  clear_5 38C2                                    clear_6 38CE  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0066  
                         ___awmod@divisor 0062                           ___awmod@counter 0064  
                                  _x_to_d 44F8                        ?_USBEnableEndpoint 0036  
              __size_of_RTCC_from_caltime 0026                                    _usb_rx 015B  
                                  _usb_tx 0163                      __size_of_display_dec 006A  
                                  _strcat 3E3C                                    _strcmp 3E9C  
                                  _strcpy 4214             __size_of_USBTransferOnePacket 00D8  
               __size_of_caltime_to_epoch 028E                        _terminal_operation 29E0  
                               ??_isdigit 0060                              _st7032_state 0131  
                            _CDCTxService 148C                              __mediumconst FD68  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 0037  
                               ??_sprintf 007E                       ?_terminal_operation 00BF  
                             _CtrlTrfData 000D38                      _controlTransferState 0029  
                    __CFG_LS48MHZ$SYS48X8 000000                                __accesstop 0060  
                 __end_of__initialization 38F4                              __pbssBIGRAMl 04C8  
                    __end_of_get_quot_rem 290C                             ___rparam_used 000001  
                         _RTCC_from_epoch 4550                  __size_of_USBStallHandler 0046  
                        ?_ringbuf_put_num 006F                          ?_ringbuf_put_str 006F  
                    __CFG_WPEND$PAGE_WPFP 000000                            ?_ST7032_cursor 0071  
                     __size_of_USBSuspend 002C                          terminal_task@op0 0280  
                        terminal_task@op1 0299                          terminal_task@op2 02B2  
                        terminal_task@op3 02CB                          terminal_task@buf 017C  
                          __pcstackCOMRAM 002E                 __end_of_USBEnableEndpoint 4168  
                           __end_of_sd000 FE58                             __end_of_sd001 FDF2  
                           __end_of_sd002 FE26                          terminal_time@op0 00B8  
                        terminal_time@op1 00BA                          terminal_time@op2 00BC  
                            __pidataBANK1 45C0                                 ?_UART_ISR 002E  
                    ??_terminal_operation 00C9                  __end_of_terminal_at_hand 3DDA  
        __size_of_USBCtrlEPAllowDataStage 0098                      __size_of_ST7032_init 00DE  
                    __size_of_ST7032_task 0158                      __size_of_ST7032_puts 0058  
           __size_of_USBConfigureEndpoint 0094                                 ?_OSC_init 002E  
             __end_of_USBCtrlTrfInHandler 3246                           __CFG_DSWDTPS$G2 000000  
                          _put_string_usb 4374                    i2_USBTransferOnePacket 30D2  
                    terminal_task@command 016B                                 ?_USB_init 002E  
                               ?_USB_task 002E                         _CDCTxService$2005 0068  
                            ??_ST7032_ISR 002E                                _cdc_notice 0100  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002E  
                              _cdc_rx_len 00D2                                _cdc_tx_len 00D3  
                            ??_ST7032_put 006F                caltime_to_epoch@month_3467 0080  
                ??_USBCtrlTrfSetupHandler 0048                          ?_USBDeviceAttach 002E  
                  _USBStdGetStatusHandler 3458                              sprintf@width 008D  
                      __size_of_main_init 00DE                                __pbssBANK0 00D0  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                      ST7032_command@wait 006F                   __end_of_caltime_to_RTCC 2838  
                         _RTCC_to_caltime 2F5A               __size_of_USBWakeFromSuspend 0032  
                             _pBDTEntryIn 0010          __end_of_USBCtrlEPServiceComplete 2062  
             __size_of_USBCheckCDCRequest 00B0                     __end_of_weekday_3char FE42  
                   RTCC_task@prev_halfsec 001D                      USBCtrlTrfRxService@i 002E  
                      __end_of_ST7032_ISR 459E                                   ?___lmul 006D  
                              ??_UART_ISR 003D                                   ?___wmul 0060  
                          ST7032_init@buf 0400                                   ?_d_to_x 002E  
                            ST7032_puts@s 0070                        __end_of_ST7032_put 3B62  
                  __end_of_put_string_usb 43A0                                ??_OSC_init 0060  
                                 ?_memset 0060                            ___lmul@product 0075  
                              _device_dsc FE42                          _USBCtrlEPService 2B84  
                                 ?_x_to_d 002E                                _ep_data_in 0016  
                                 ?_strcat 0060                                   ?_strcmp 0060  
                                 ?_strcpy 0060               __end_of_USBCtrlTrfRxService 1D76  
                      _USBCheckStdRequest 25B0                                ??_USB_init 0069  
                       _configDescriptor1 FD7B                                ??_USB_task 0074  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                    __end_of_ST7032_clear 45AC                                ??i2_memset 0034  
             __end_of_USBCtrlTrfTxService 2B84                       _USBStdSetCfgHandler 24D4  
                  I2C_LCD_SetCursor@F8620 01E5                           __CFG_WDTPS$1024 000000  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00BF  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                     ?_USBCheckStdRequest 002E              __size_of_USBStdGetDscHandler 0132  
                                 _UIEbits 000F36                                   _USB_ISR 45BA  
                 __end_of_RTCC_from_epoch 456A                          ST7032_cursor@col 0074  
                    timer1_init@prescaler 0062                                   _UIRbits 000F62  
                        ST7032_cursor@row 0071                          i2ringbuf_pop@ret 003C  
                        __CFG_CFGPLLEN$ON 000000                             _cdc_trf_state 0028  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                           ??_ST7032_cursor 0072  
                       RTCC_from_epoch@tm 008F                                   _pCDCDst 011B  
                                 _pCDCSrc 011E                     __size_of_getsUSBUSART 00EA  
                  display_time_0802@line0 0099                    display_time_0802@line1 009B  
                                 __Hparam 0000                            _ST7032_command 3B62  
                    ?_USBStdSetCfgHandler 002E                                 _CDCInitEP 3BD2  
                                 __Lparam 0000                         ringbuf_put_num@rb 006F  
              __size_of_USBEnableEndpoint 003C                         ringbuf_put_str@rb 006F  
                            USB_task@data 0076                      ??_USBCheckStdRequest 0048  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 0060  
                                 ___awdiv 2DE0                           __size_of___lmul 0076  
                                 ___awmod 3502                                   ___lldiv 2E9E  
                        ??_USBDeviceTasks 004B                           __size_of___wmul 0036  
                   ringbuf_put_num@digits 0073                                   ___lwdiv 3A02  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002E  
                                 ___lwmod 3DDA                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 0B70                     __end_of_terminal_time 0806  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 2318                      __size_of_putUSBUSART 0020  
             epoch_to_caltime@month_cache 01E9                                   __pcinit 3878  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FDBE                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 1D76                                   __ptext1 0806  
                                 __ptext2 29E0                                   __ptext3 045A  
                                 __ptext4 3D78                                   __ptext5 37EC  
                                 __ptext6 3D14                                   __ptext7 444A  
                                 __ptext8 3E9C                                   __ptext9 1E80  
                                 _inPipes 000A                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0020               _USBDeferOUTDataStagePackets 0021  
                               _T0CONbits 000FD5                           __size_of_strcat 0060  
                        _time_change_flag 0132                          _caltime_to_epoch 0B70  
                         __size_of_strcmp 005C                           __size_of_strcpy 0038  
                            __size_of_ISR 00B4                                 _T1CONbits 000FCD  
                                 _dpowers FD69                              ??_USBSuspend 0042  
                 __size_of_RTCC_from_RTCC 001A                                   _isdigit 43F8  
                               _T3CONbits 000F79                          ___awmod@dividend 0060  
                               _T5CONbits 000F22                           i2_USBDeviceInit 19FE  
                        i2USBDeviceInit@i 0036                                   _uart_rx 014B  
                                 _uart_tx 0153                        __end_of_USB_CD_Ptr FD7B  
                                 _sprintf 0000           __size_of_USBCtrlTrfSetupHandler 0082  
                 __end_of_RTCC_to_caltime 3016                     __size_of_get_quot_rem 00D4  
                    end_of_initialization 38F4                              _getsUSBUSART 2150  
                  __size_ofi2_ringbuf_pop 00AC                    __size_ofi2_ringbuf_num 00BC  
                  __size_ofi2_ringbuf_put 00B6                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FD79                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 001B                            ??_month_length 0067  
                          display_dec@dec 0091                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                          display_dec@str 008F           _dummy_encapsulated_cmd_response 0143  
                  __end_of_ST7032_command 3BD2                  ?_USBStdFeatureReqHandler 002E  
                        ?_caltime_to_RTCC 0069                     ??_USBStdSetCfgHandler 0042  
                         ___lldiv@divisor 0064                      timer3_init@prescaler 0061  
                              ?_CDCInitEP 002E                           ___lldiv@counter 006C  
                       ?_is_usb_available 002E                        __end_of_USBSuspend 43CC  
                          ??_ringbuf_init 0066                   _USBCtrlEPAllowDataStage 35A4  
                      ??_is_usb_available 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                _USBCtrlEPServiceComplete 1F72                                   strcmp@r 0065  
              _USBStatusStageEnabledFlag1 0024                _USBStatusStageEnabledFlag2 0025  
                      USBEnableEndpoint@p 0037                                 _UART_init 4496  
                               _UART_task 44D8                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 3C40                                 _RTCC_task 41A2  
               epoch_to_caltime@day_cache 0129                    i2ringbuf_put@asciicode 0038  
                      ST7032_cursor@F8592 01E7                              _get_quot_rem 2838  
                              _print_time 37EC                            _ringbuf_delete 4470  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 001E                       RTCC_from_caltime@tm 008F  
               USBConfigureEndpoint@EPNum 0033                ?_USBCtrlEPAllowStatusStage 002E  
                        ?_RTCC_from_epoch 008F       USER_USB_CALLBACK_EVENT_HANDLER@size 003E  
                               _USTATcopy 002D                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 2762                           ?_ST7032_command 006F  
                        __CFG_IOL1WAY$OFF 000000                         putUSBUSART@length 0062  
                     __CFG_MSSP7B_EN$MSK7 000000                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 3980                            ringbuf_pop@ret 006E  
                           ??_display_dec 0093                             i2_ringbuf_pop 33AC  
                           i2_ringbuf_num 3016                   ?i2_USBTransferOnePacket 002E  
                           i2_ringbuf_put 3246                     __end_of_USBDeviceInit 175C  
                       ?_terminal_at_hand 00AF                            __end_of___lmul 3AF0  
                   ST7032_command@command 0070                            __end_of___wmul 4282  
                          __end_of_d_to_x 444A                     __size_of_ST7032_clear 000E  
                       __size_of_UART_ISR 004A                   __end_ofi2_USBDeviceInit 1B38  
                  __end_of_ringbuf_delete 4496                                ?_UART_init 002E  
                      ??_terminal_at_hand 00B6                                 i2memset@c 0030  
                               i2memset@n 0032                                 i2memset@p 0034  
                              ?_UART_task 002E                            __end_of_memset 42B6  
                              ?_RTCC_init 002E                         __size_of_OSC_init 000E  
                              ?_RTCC_task 002E                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 012E                            __end_of_x_to_d 4518  
                          __end_of_strcat 3E9C                     epoch_to_caltime@month 008A  
                          __end_of_strcmp 3EF8                            __end_of_strcpy 424C  
                     start_initialization 3878                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002E                               __end_of_ISR 10BC  
           USBCtrlTrfRxService@byteToRead 002F                         __size_of_USB_init 001C  
                       __size_of_USB_task 008E                               _cdc_data_rx 0200  
                             _cdc_data_tx 0240                         __size_ofi2_memset 002C  
                           UART_ISR@ascii 003D              __end_of_USBConfigureEndpoint 36D0  
                        ?_RTCC_to_caltime 0062           __end_of_USBStdFeatureReqHandler 1086  
       __end_of_USBCtrlEPAllowStatusStage 2DE0                  __end_of_USBCtrlEPService 2C52  
               ??_USBCtrlEPAllowDataStage 002F                               ??_CDCInitEP 003A  
                          USBDeviceInit@i 0068                             ??_ST7032_init 0071  
                            _ST7032_clear 459E                             ??_ST7032_task 006F  
                           ??_ST7032_puts 0072                    _pBDTEntryEP0OutCurrent 0019  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 318C                       ringbuf_put_num@temp 0075  
                                ??___lmul 0075                            ?i2_ringbuf_pop 0036  
                          ?i2_ringbuf_num 002E                            ?i2_ringbuf_put 0036  
                                ??___wmul 0064                       _USBStdGetDscHandler 1B38  
                                ??_d_to_x 0068               __size_of_terminal_operation 00D2  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 01E5  
                             _st7032_flag 0130                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcat 0064                                  ??_strcmp 0064  
                                ??_strcpy 0064                      __end_of_month_length 24D4  
                          _RTCC_from_RTCC 456A                    _USBActiveConfiguration 002C  
          __end_of_USBStdGetStatusHandler 3502                               ?_print_time 008F  
                     __end_of_display_dec 3D14                               __pbssCOMRAM 0001  
                          USB_task@rx_len 0074                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 017C  
                           __pcstackBANK3 03C8              __size_of_USBCtrlTrfInHandler 00BA  
                    __end_of_ringbuf_init 4000                      ?_USBStdGetDscHandler 002E  
                            _isdigit$5795 0061                                  ?_USB_ISR 002E  
              __end_of_USBWakeFromSuspend 431A                               sprintf@flag 008B  
                             sprintf@prec 0082                           _USBStallHandler 40E6  
                            _pBDTEntryOut 010A                __end_of_USBCheckCDCRequest 33AC  
                __end_of_caltime_to_epoch 0DFE                           millis_timer@cnt 012B  
                __size_of_USBDeviceAttach 0038                          ??_put_string_usb 0070  
                        ___lwdiv@dividend 0060                                 __pintcode 1008  
                           __pmediumconst FD68                                  ?___awdiv 0060  
                               __ptext100 4584                                  ?___awmod 0060  
                                ?___lldiv 0060                                  ?___lwdiv 0060  
                                ?___lwmod 0067                     _is_usb_available$4851 0060  
                  __end_of_RTCC_from_RTCC 4584                       __end_of_ST7032_init 23F6  
                     __end_of_ST7032_task 18B4                       __end_of_ST7032_puts 3FAC  
                        ?i2_USBDeviceInit 002E                               ??_UART_init 0060  
              USBCBSendResume@delay_count 0123                               ??_UART_task 0068  
                             ??_RTCC_init 0091                               ??_RTCC_task 0088  
                    _USBTransferOnePacket 268A                                 _main_init 223A  
                                ?_isdigit 002E                          _epoch_to_caltime 129A  
                    __CFG_RTCOSC$T1OSCREF 000000                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 3F54                       ringbuf_backspace@rb 0068  
                   ??_USBStdGetDscHandler 002E                           ST7032_task@data 0071  
                             _ep_data_out 0118                          ___lwdiv@quotient 0065  
                   terminal_at_hand@value 00B5                           ST7032_task@wait 0121  
                                ?_sprintf 006C              __size_of_USBCtrlTrfRxService 010C  
           USBConfigureEndpoint@direction 002E                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00D2  
                ringbuf_init@internal_buf 0062                            ___wmul@product 0064  
                                _LATAbits 000F89                ??_USBCtrlEPServiceComplete 002F  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 008C                     __end_of_ST7032_cursor 42E8  
                         ??i2_ringbuf_pop 0038                           ??i2_ringbuf_num 0030  
                         ??i2_ringbuf_put 0039                                  i2u440_40 2B6E  
                                i2u440_47 2B64                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u438_40 2B2E  
                                i2u470_40 1BE4                                  i2u438_47 2B24  
                                i2u470_47 1BDA                                  i2u472_40 1C3C  
                                i2u472_47 1C32                                  _PIR5bits 000F98  
              epoch_to_caltime@year_cache 0133                                  i2u469_40 1BB4  
                                i2u469_47 1BAA                 USBCtrlEPService@setup_cnt 004A  
                                i2u747_40 106C                                  i2u748_48 106E  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 006B                                  _RCONbits 000FD0  
                       _display_time_0802 1086                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26                _USBDeferINDataStagePackets 0020  
                                _UART_ISR 409C                     terminal_operation@op0 00C1  
                   terminal_operation@op1 00C3                     terminal_operation@op2 00C5  
                   terminal_operation@op3 00C7                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0060  
                           ??_timer1_init 0061               __size_of_USBCheckStdRequest 00DA  
                           ??_timer3_init 0060                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                        ?_display_time_0802 0097  
                             _display_dec 3CAA                      _USBConfigureEndpoint 363C  
                                _OSC_init 45AC                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 0288                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0060  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                                _USB_init 4518                                  _USB_task 375E  
                              ?_main_init 002E                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002E                       ??_display_time_0802 009D  
                            _RemoteWakeup 001F                                  i2_memset 43CC  
                       ??_ringbuf_put_num 0074                         ??_ringbuf_put_str 0073  
                           ringbuf_pop@rb 0068                             ringbuf_num@rb 0060  
                 __end_of_USBStallHandler 412C                             ringbuf_put@rb 0068  
                        ??_ST7032_command 0070                         ___lmul@multiplier 006D  
                             _INTCON2bits 000FF1                                 copy_data0 38E8  
             ??_USBCtrlEPAllowStatusStage 002E               __end_of_USBStdSetCfgHandler 25B0  
                        __size_of_USB_ISR 0006                      epoch_to_caltime@year 0089  
                         main_init@uartrx 0300                           main_init@uarttx 04C8  
                  __size_of_terminal_task 036A                    __size_of_terminal_time 03AC  
                 __size_of_get_string_usb 004C                        __end_of_device_dsc FE54  
                 ?_USBCtrlTrfSetupHandler 002E                 __end_of_display_time_0802 129A  
                 USBStdGetStatusHandler@p 002F                                  __Hrparam 0000  
                             _ST7032_init 2318                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                               _ST7032_task 175C  
                             _ST7032_puts 3F54                                  _SetupPkt 000D30  
                           _weekday_3char FE26                     __size_of_month_length 00DE  
                      ringbuf_put_str@str 0071                     ?_USBConfigureEndpoint 002E  
                __size_of_caltime_to_RTCC 00D6                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                        __size_of___lldiv 00BC                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                       __end_of_ringbuf_pop 2D1E  
                     __end_of_ringbuf_num 2150                       __end_of_ringbuf_put 29E0  
                     __end_of_putUSBUSART 44D8                               _line_coding 0173  
                          ??_CDCTxService 0067                       __end_of_timer0_init 41A2  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 4050  
                              sprintf@len 0089                       __end_of_timer3_init 4374  
                              sprintf@val 0087                                strcat@from 0062  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 014A  
                         ___lwdiv@divisor 0062                           ___lwdiv@counter 0064  
                    timer0_init@prescaler 0061                                  __ptext10 38FE  
                                __ptext11 4470                                  __ptext20 41DC  
                                __ptext12 36D0                                  __ptext21 4496  
                                __ptext13 223A                                  __ptext30 2762  
                                __ptext22 2318                                  __ptext14 4348  
                                __ptext31 4422                                  __ptext23 3FAC  
                                __ptext15 4000                                  __ptext40 424C  
                                __ptext32 2DE0                                  __ptext24 459E  
                                __ptext16 4168                                  __ptext41 3DDA  
                                __ptext33 45AC                                  __ptext25 3C40  
                                __ptext17 4518                                  __ptext50 268A  
                                __ptext42 3A02                                  __ptext34 1086  
                                __ptext26 4550                                  __ptext18 1604  
                                __ptext51 44D8                                  __ptext43 375E  
                                __ptext35 4214                                  __ptext27 129A  
                                __ptext19 4282                                  __ptext60 41A2  
                                __ptext52 175C                                  __ptext44 4374  
                                __ptext36 3CAA                                  __ptext28 2838  
                                __ptext61 456A                                  __ptext53 2C52  
                                __ptext45 44B8                                  __ptext37 3E3C  
                                __ptext29 2E9E                                  __ptext70 18B4  
                                __ptext62 0B70                                  __ptext54 3F54  
                                __ptext46 4050                                  __ptext38 0000  
                                __ptext71 19FE                                  __ptext63 23F6  
                                __ptext55 3AF0                                  __ptext47 4534  
                                __ptext39 43F8                                  __ptext80 24D4  
                                __ptext72 42E8                                  __ptext64 3502  
                                __ptext56 42B6                                  __ptext48 2150  
                                __ptext81 43CC                                  __ptext73 43A0  
                                __ptext65 3A7A                                  __ptext57 3B62  
                                __ptext49 148C                                  __ptext90 363C  
                                __ptext82 3458                                  __ptext74 40E6  
                                __ptext66 2F5A                                  __ptext58 290C  
                                __ptext91 3EF8                                  __ptext83 1B38  
                                __ptext75 2B84                                  __ptext67 44F8  
                                __ptext59 2062                                  __ptext92 1C6A  
                                __ptext84 0DFE                                  __ptext76 3980  
                                __ptext93 2D1E                                  __ptext85 431A  
                                __ptext77 1F72                                  __ptext69 45BA  
                                __ptext94 318C                                  __ptext86 32FC  
                                __ptext78 35A4                                  __ptext95 2AB2  
                                __ptext87 3BD2                                  __ptext79 25B0  
                                __ptext96 409C                                  __ptext88 30D2  
                                __ptext97 3246                                  __ptext89 412C  
                                __ptext98 33AC                                  __ptext99 3016  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
               __size_of_terminal_at_hand 0062                          __size_of_sprintf 045A  
                              strcpy@from 0062                      terminal_at_hand@hand 00B1  
                           __size_of_atoi 00F2            __end_of_USBCtrlTrfSetupHandler 3A02  
                           __size_of_main 010A                         ?_USBCtrlEPService 002E  
                            _month_length 23F6                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0048                  __size_of_RTCC_from_epoch 001A  
                     _USBCtrlTrfInHandler 318C                                  _outPipes 0001  
                        ??_ringbuf_delete 0062                      _USBCtrlTrfOutHandler 3EF8  
                                int$flags 005B                              _ringbuf_init 3FAC  
                                atoi@sign 006A                 _USBCtrlEPAllowStatusStage 2D1E  
                               x_to_d@hex 0061                              _SSP1STATbits 000FC7  
                  ??_USBTransferOnePacket 0064                             _terminal_task 0806  
                           _terminal_time 045A                 _USBDeferStatusStagePacket 0022  
                            ??_print_time 0091                  CDCTxService@byte_to_send 006B  
                          main_init@usbrx 0364                            main_init@usbtx 08B0  
                             ??_main_init 0091                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 006A  
                              _ST7032_ISR 4584                      ?_USBCtrlTrfInHandler 002E  
           USBCtrlTrfTxService@byteToSend 002E                                _ST7032_put 3AF0  
                         display_dec@edit 0092                                  isdigit@c 0062  
                                memset@p1 0060                          ?_USBStallHandler 002E  
                USBStdFeatureReqHandler@p 0046                          get_quot_rem@quot 0079  
               terminal_task@command_init 0134                         RTCC_to_caltime@tm 0062  
                                intlevel2 0000                                 sprintf@ap 0083  
                               sprintf@cp 0085                                 sprintf@sp 006C  
                  __size_of_USBDeviceInit 0158   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4348  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0040  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 003A           _USER_USB_CALLBACK_EVENT_HANDLER 431A  
                        ___lwmod@dividend 0067              i2USBTransferOnePacket@handle 0033  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00B4                       terminal_at_hand@min 00B3  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 36D0  
              __size_of_display_time_0802 0214                  __end_of_epoch_to_caltime 148C  
                __size_of_RTCC_to_caltime 00BC                                _OSCCONbits 000FD3  
              __end_of_terminal_operation 2AB2                        __end_of_print_time 3878  
              i2USBTransferOnePacket@data 002F                        ??_caltime_to_epoch 007B  
                      ?_ringbuf_backspace 0068                    ??_USBConfigureEndpoint 002F  
                   ?_USBCtrlTrfOutHandler 002E                               _ringbuf_pop 2C52  
                             _ringbuf_num 2062                               _ringbuf_put 290C  
                             _putUSBUSART 44B8                       _USBCtrlTrfRxService 1C6A  
                             _timer0_init 4168                        _USBWakeFromSuspend 42E8  
                             _timer1_init 4000                               _timer3_init 4348  
                          ?_terminal_task 00C9                            ?_terminal_time 00B6  
                 _USBStdFeatureReqHandler 0DFE                        _USBCheckCDCRequest 32FC  
                     _USBCtrlTrfTxService 2AB2                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                                  sprintf@c 008C  
                                sprintf@f 006E                                  strcat@cp 0064  
                                strcat@to 0060                       ?_USBWakeFromSuspend 002E  
                                strcmp@s1 0060                                  strcmp@s2 0062  
                        _is_usb_available 4534                          ___lldiv@quotient 0068  
                         ___lwmod@divisor 0069                         caltime_to_RTCC@tm 0069  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002F  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 017A                           ___lwmod@counter 006B  
                      terminal_at_hand@tx 00AF                       ?_USBCheckCDCRequest 002E  
               i2USBTransferOnePacket@dir 002E                 i2USBTransferOnePacket@len 0031  
                     USBEnableEndpoint@ep 0039                           _endpoint_number 002A  
                    ?_USBCtrlTrfRxService 002E           epoch_to_caltime@day_since_epoch 0085  
                           ?_getsUSBUSART 0067                  ?_USBCtrlEPAllowDataStage 002E  
                          _get_string_usb 4050                      ?_USBCtrlTrfTxService 002E  
               __end_of_ringbuf_backspace 375E              _USBStatusStageTimeoutCounter 0026  
                    ??_USBWakeFromSuspend 0042                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 1604                      ??_USBCheckCDCRequest 002E  
                              _USB_CD_Ptr FD79                          ??_RTCC_from_RTCC 0088  
