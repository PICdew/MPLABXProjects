

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jul 18 21:12:18 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0014                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  001E                     	;# 
    57  001F                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0094                     	;# 
    64  0095                     	;# 
    65  0096                     	;# 
    66  0097                     	;# 
    67  0098                     	;# 
    68  0099                     	;# 
    69  009A                     	;# 
    70  009B                     	;# 
    71  009B                     	;# 
    72  009C                     	;# 
    73  009D                     	;# 
    74  009E                     	;# 
    75  010C                     	;# 
    76  010D                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0113                     	;# 
    80  0114                     	;# 
    81  0115                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  0118                     	;# 
    85  0119                     	;# 
    86  011A                     	;# 
    87  011B                     	;# 
    88  011D                     	;# 
    89  011E                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  0191                     	;# 
    93  0191                     	;# 
    94  0192                     	;# 
    95  0193                     	;# 
    96  0193                     	;# 
    97  0193                     	;# 
    98  0194                     	;# 
    99  0195                     	;# 
   100  0196                     	;# 
   101  0199                     	;# 
   102  019A                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019E                     	;# 
   111  019F                     	;# 
   112  020C                     	;# 
   113  020D                     	;# 
   114  0211                     	;# 
   115  0211                     	;# 
   116  0212                     	;# 
   117  0212                     	;# 
   118  0213                     	;# 
   119  0213                     	;# 
   120  0214                     	;# 
   121  0214                     	;# 
   122  0215                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0216                     	;# 
   126  0216                     	;# 
   127  0217                     	;# 
   128  0217                     	;# 
   129  0219                     	;# 
   130  021A                     	;# 
   131  021B                     	;# 
   132  021C                     	;# 
   133  021D                     	;# 
   134  021E                     	;# 
   135  021F                     	;# 
   136  0291                     	;# 
   137  0291                     	;# 
   138  0292                     	;# 
   139  0293                     	;# 
   140  0294                     	;# 
   141  0295                     	;# 
   142  0295                     	;# 
   143  0296                     	;# 
   144  0298                     	;# 
   145  0298                     	;# 
   146  0299                     	;# 
   147  029A                     	;# 
   148  029B                     	;# 
   149  029C                     	;# 
   150  029C                     	;# 
   151  029D                     	;# 
   152  029E                     	;# 
   153  029E                     	;# 
   154  0311                     	;# 
   155  0311                     	;# 
   156  0312                     	;# 
   157  0313                     	;# 
   158  0318                     	;# 
   159  0318                     	;# 
   160  0319                     	;# 
   161  031A                     	;# 
   162  0394                     	;# 
   163  0395                     	;# 
   164  0396                     	;# 
   165  039A                     	;# 
   166  039C                     	;# 
   167  039D                     	;# 
   168  039E                     	;# 
   169  039F                     	;# 
   170  0415                     	;# 
   171  0416                     	;# 
   172  0417                     	;# 
   173  041C                     	;# 
   174  041D                     	;# 
   175  041E                     	;# 
   176  0FE4                     	;# 
   177  0FE5                     	;# 
   178  0FE6                     	;# 
   179  0FE7                     	;# 
   180  0FE8                     	;# 
   181  0FE9                     	;# 
   182  0FEA                     	;# 
   183  0FEB                     	;# 
   184  0FED                     	;# 
   185  0FEE                     	;# 
   186  0FEF                     	;# 
   187                           
   188                           	psect	idataBANK0
   189  02D3                     __pidataBANK0:	
   190                           
   191                           ;initializer for main@last_scan
   192  02D3  347F               	retlw	127
   193  02D4  3400               	retlw	0
   194  000B                     _INTCONbits	set	11
   195  0011                     _PIR1bits	set	17
   196  001B                     _PR2	set	27
   197  0018                     _T1CONbits	set	24
   198  001C                     _T2CONbits	set	28
   199  0017                     _TMR1H	set	23
   200  0016                     _TMR1L	set	22
   201  008D                     _RCIF	set	141
   202  005A                     _TMR0IF	set	90
   203  0088                     _TMR1IF	set	136
   204  009B                     _ADRES	set	155
   205  009D                     _ADCON0bits	set	157
   206  009E                     _ADCON1bits	set	158
   207  0095                     _OPTION_REGbits	set	149
   208  0099                     _OSCCON	set	153
   209  0091                     _PIE1bits	set	145
   210  008C                     _TRISA	set	140
   211  008D                     _TRISB	set	141
   212  0117                     _FVRCON	set	279
   213  0862                     _LATA2	set	2146
   214  0863                     _LATA3	set	2147
   215  0866                     _LATA6	set	2150
   216  0867                     _LATA7	set	2151
   217  086C                     _LATB4	set	2156
   218  086D                     _LATB5	set	2157
   219  018C                     _ANSELA	set	396
   220  018D                     _ANSELB	set	397
   221  0199                     _RCREG	set	409
   222  019D                     _RCSTA	set	413
   223  019C                     _SPBRGH	set	412
   224  019B                     _SPBRGL	set	411
   225  019A                     _TXREG	set	410
   226  019E                     _TXSTA	set	414
   227  0CFB                     _BRG16	set	3323
   228  0CEF                     _SPEN	set	3311
   229  0293                     _CCP1CONbits	set	659
   230  029A                     _CCP2CONbits	set	666
   231  0291                     _CCPR1L	set	657
   232  0291                     _CCPR1Lbits	set	657
   233  0298                     _CCPR2L	set	664
   234  0298                     _CCPR2Lbits	set	664
   235  029E                     _CCPTMRSbits	set	670
   236                           
   237                           ; #config settings
   238  0000                     
   239                           	psect	cinit
   240  0022                     start_initialization:	
   241  0022                     __initialization:	
   242                           
   243                           ; Clear objects allocated to BANK0
   244  0022  3020               	movlw	low __pbssBANK0
   245  0023  0084               	movwf	4
   246  0024  3000               	movlw	high __pbssBANK0
   247  0025  0085               	movwf	5
   248  0026  3011               	movlw	17
   249  0027  3182  22CD  3180   	fcall	clear_ram0
   250                           
   251                           ; Initialize objects allocated to BANK0
   252  002A  3182  22D3  3180   	fcall	__pidataBANK0	;fetch initializer
   253  002D  00BE               	movwf	__pdataBANK0& (0+127)
   254  002E  3182  22D4         	fcall	__pidataBANK0+1	;fetch initializer
   255  0030  00BF               	movwf	(__pdataBANK0+1)& (0+127)
   256  0031                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259  0031                     __end_of__initialization:	
   260  0031  0020               	movlb	0
   261  0032  3180  2834         	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	bssBANK0
   264  0020                     __pbssBANK0:	
   265  0020                     _rx_buf:	
   266  0020                     	ds	7
   267  0027                     _d1:	
   268  0027                     	ds	3
   269  002A                     _tx_buf:	
   270  002A                     	ds	7
   271                           
   272                           	psect	dataBANK0
   273  003E                     __pdataBANK0:	
   274  003E                     main@last_scan:	
   275  003E                     	ds	2
   276                           
   277                           	psect	clrtext
   278  02CD                     clear_ram0:	
   279                           ;	Called with FSR0 containing the base address, and
   280                           ;	WREG with the size to clear
   281                           
   282  02CD  0064               	clrwdt	;clear the watchdog before getting into this loop
   283  02CE                     clrloop0:	
   284  02CE  0180               	clrf	0	;clear RAM location pointed to by FSR
   285  02CF  3101               	addfsr 0,1
   286  02D0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   287  02D1  2ACE               	goto	clrloop0	;have we reached the end yet?
   288  02D2  3400               	retlw	0	;all done for this memory range, return
   289                           
   290                           	psect	cstackBANK1
   291  00A0                     __pcstackBANK1:	
   292  00A0                     main@buf:	
   293                           
   294                           ; 40 bytes @ 0x0
   295  00A0                     	ds	40
   296  00C8                     main@scan:	
   297                           
   298                           ; 2 bytes @ 0x28
   299  00C8                     	ds	2
   300  00CA                     main@sub:	
   301                           
   302                           ; 2 bytes @ 0x2A
   303  00CA                     	ds	2
   304                           
   305                           	psect	cstackCOMMON
   306  0070                     __pcstackCOMMON:	
   307  0070                     ?_timer0_init:	
   308  0070                     ?_timer1_init:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0070                     ?_ADC_init:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_UART_init:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ?_interrupt_TXIF:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_tx_send:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ?_isr:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_PWM_init:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_PWM_set:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_drive:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_ringbuf_pop:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_ringbuf_num:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 2 bytes @ 0x0
   343                           
   344                           
   345                           ; 2 bytes @ 0x0
   346  0070                     	ds	2
   347  0072                     ??_ringbuf_num:	
   348                           
   349                           ; 0 bytes @ 0x2
   350  0072                     	ds	4
   351  0076                     ringbuf_num@rb:	
   352                           
   353                           ; 1 bytes @ 0x6
   354  0076                     	ds	1
   355  0077                     ?_ringbuf_put:	
   356  0077                     ??_ringbuf_pop:	
   357                           ; 0 bytes @ 0x7
   358                           
   359  0077                     ringbuf_put@asciicode:	
   360                           ; 0 bytes @ 0x7
   361                           
   362                           
   363                           ; 1 bytes @ 0x7
   364  0077                     	ds	1
   365  0078                     ??_ringbuf_put:	
   366                           
   367                           ; 0 bytes @ 0x8
   368  0078                     	ds	5
   369  007D                     ??_interrupt_TXIF:	
   370                           
   371                           ; 0 bytes @ 0xD
   372  007D                     	ds	1
   373                           
   374                           	psect	cstackBANK0
   375  0031                     __pcstackBANK0:	
   376  0031                     ringbuf_put@rb:	
   377  0031                     ringbuf_pop@ret:	
   378                           ; 1 bytes @ 0x0
   379                           
   380                           
   381                           ; 1 bytes @ 0x0
   382  0031                     	ds	1
   383  0032                     ??_tx_send:	
   384  0032                     ringbuf_pop@rb:	
   385                           ; 0 bytes @ 0x1
   386                           
   387                           
   388                           ; 1 bytes @ 0x1
   389  0032                     	ds	1
   390  0033                     tx_send@asciicode:	
   391                           
   392                           ; 1 bytes @ 0x2
   393  0033                     	ds	1
   394  0034                     ??_isr:	
   395                           
   396                           ; 0 bytes @ 0x3
   397  0034                     	ds	2
   398  0036                     isr@ascii:	
   399                           
   400                           ; 1 bytes @ 0x5
   401  0036                     	ds	1
   402  0037                     ??_timer0_init:	
   403  0037                     ??_timer1_init:	
   404                           ; 0 bytes @ 0x6
   405                           
   406  0037                     ??_ADC_init:	
   407                           ; 0 bytes @ 0x6
   408                           
   409  0037                     ?_ringbuf_init:	
   410                           ; 0 bytes @ 0x6
   411                           
   412  0037                     ??_UART_init:	
   413                           ; 0 bytes @ 0x6
   414                           
   415  0037                     ??_PWM_init:	
   416                           ; 0 bytes @ 0x6
   417                           
   418  0037                     ??_PWM_set:	
   419                           ; 0 bytes @ 0x6
   420                           
   421  0037                     ??_drive:	
   422                           ; 0 bytes @ 0x6
   423                           
   424  0037                     ?_ADC:	
   425                           ; 0 bytes @ 0x6
   426                           
   427  0037                     ADC_init@p_ref:	
   428                           ; 2 bytes @ 0x6
   429                           
   430  0037                     ringbuf_init@internal_buf:	
   431                           ; 1 bytes @ 0x6
   432                           
   433  0037                     PWM_set@value:	
   434                           ; 1 bytes @ 0x6
   435                           
   436  0037                     drive@dir:	
   437                           ; 1 bytes @ 0x6
   438                           
   439                           
   440                           ; 1 bytes @ 0x6
   441  0037                     	ds	1
   442  0038                     timer0_init@prescaler:	
   443  0038                     timer1_init@prescaler:	
   444                           ; 1 bytes @ 0x7
   445                           
   446  0038                     ringbuf_init@bufsize:	
   447                           ; 1 bytes @ 0x7
   448                           
   449                           
   450                           ; 2 bytes @ 0x7
   451  0038                     	ds	1
   452  0039                     ??_ADC:	
   453                           
   454                           ; 0 bytes @ 0x8
   455  0039                     	ds	1
   456  003A                     ??_ringbuf_init:	
   457  003A                     ADC@ch:	
   458                           ; 0 bytes @ 0x9
   459                           
   460                           
   461                           ; 1 bytes @ 0x9
   462  003A                     	ds	1
   463  003B                     ringbuf_init@rb:	
   464                           
   465                           ; 1 bytes @ 0xA
   466  003B                     	ds	1
   467  003C                     ??_main:	
   468                           
   469                           ; 0 bytes @ 0xB
   470  003C                     	ds	2
   471                           
   472                           	psect	maintext
   473  0034                     __pmaintext:	
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 108 in file "PIC16F1827-Inverted_Pendulum01.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  sub             2   42[BANK1 ] int 
   484 ;;  scan            2   40[BANK1 ] unsigned int 
   485 ;;  buf            40    0[BANK1 ] unsigned char [40]
   486 ;;  i               1    0        unsigned char 
   487 ;; Return value:  Size  Location     Type
   488 ;;                  2  219[None  ] int 
   489 ;; Registers used:
   490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : B1F/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   496 ;;      Params:         0       0       0       0       0       0
   497 ;;      Locals:         0       0      44       0       0       0
   498 ;;      Temps:          0       2       0       0       0       0
   499 ;;      Totals:         0       2      44       0       0       0
   500 ;;Total ram usage:       46 bytes
   501 ;; Hardware stack levels required when called:    5
   502 ;; This function calls:
   503 ;;		_ADC
   504 ;;		_ADC_init
   505 ;;		_PWM_init
   506 ;;		_PWM_set
   507 ;;		_UART_init
   508 ;;		_drive
   509 ;;		_ringbuf_init
   510 ;;		_timer0_init
   511 ;;		_timer1_init
   512 ;; This function is called by:
   513 ;;		Startup code after reset
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           
   518                           ;psect for function _main
   519  0034                     _main:	
   520                           
   521                           ;PIC16F1827-Inverted_Pendulum01.c: 109: OSCCON = 0x70;
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   525  0034  3070               	movlw	112
   526  0035  0021               	movlb	1	; select bank1
   527  0036  0099               	movwf	25	;volatile
   528                           
   529                           ;PIC16F1827-Inverted_Pendulum01.c: 110: ANSELA = 0x01;
   530  0037  3001               	movlw	1
   531  0038  0023               	movlb	3	; select bank3
   532  0039  008C               	movwf	12	;volatile
   533                           
   534                           ;PIC16F1827-Inverted_Pendulum01.c: 111: ANSELB = 0x00;
   535  003A  018D               	clrf	13	;volatile
   536                           
   537                           ;PIC16F1827-Inverted_Pendulum01.c: 112: TRISA = 0x01;
   538  003B  3001               	movlw	1
   539  003C  0021               	movlb	1	; select bank1
   540  003D  008C               	movwf	12	;volatile
   541                           
   542                           ;PIC16F1827-Inverted_Pendulum01.c: 113: TRISB = 0x02;
   543  003E  3002               	movlw	2
   544  003F  008D               	movwf	13	;volatile
   545                           
   546                           ;PIC16F1827-Inverted_Pendulum01.c: 115: UART_init();
   547  0040  3182  22B3  3180   	fcall	_UART_init
   548                           
   549                           ;PIC16F1827-Inverted_Pendulum01.c: 116: ADC_init(0);
   550  0043  3000               	movlw	0
   551  0044  3182  225F  3180   	fcall	_ADC_init
   552                           
   553                           ;PIC16F1827-Inverted_Pendulum01.c: 117: timer0_init(2);
   554  0047  3002               	movlw	2
   555  0048  3182  2244  3180   	fcall	_timer0_init
   556                           
   557                           ;PIC16F1827-Inverted_Pendulum01.c: 118: timer1_init(2);
   558  004B  3002               	movlw	2
   559  004C  3182  2290  3180   	fcall	_timer1_init
   560                           
   561                           ;PIC16F1827-Inverted_Pendulum01.c: 119: PWM_init();
   562  004F  3181  21E4  3180   	fcall	_PWM_init
   563                           
   564                           ;PIC16F1827-Inverted_Pendulum01.c: 121: char buf[40];
   565                           ;PIC16F1827-Inverted_Pendulum01.c: 122: ringbuf_init(&tx_buf, buf, sizeof (buf));
   566  0052  30A0               	movlw	(low (main@buf| 0))& (0+255)
   567  0053  0020               	movlb	0	; select bank0
   568  0054  00BC               	movwf	??_main
   569  0055  083C               	movf	??_main,w
   570  0056  00B7               	movwf	ringbuf_init@internal_buf
   571  0057  3028               	movlw	40
   572  0058  00B8               	movwf	ringbuf_init@bufsize
   573  0059  3000               	movlw	0
   574  005A  00B9               	movwf	ringbuf_init@bufsize+1
   575  005B  302A               	movlw	(low (_tx_buf| 0))& (0+255)
   576  005C  3182  2206  3180   	fcall	_ringbuf_init
   577                           
   578                           ;PIC16F1827-Inverted_Pendulum01.c: 124: INTCONbits.GIE = 1;
   579  005F  178B               	bsf	11,7	;volatile
   580  0060                     l1511:	
   581                           ;PIC16F1827-Inverted_Pendulum01.c: 126: uint8_t i;
   582                           ;PIC16F1827-Inverted_Pendulum01.c: 128: while (1) {
   583                           
   584                           
   585                           ;PIC16F1827-Inverted_Pendulum01.c: 129: uint16_t scan = ADC(0);
   586  0060  3000               	movlw	0
   587  0061  3182  2225  3180   	fcall	_ADC
   588  0064  0020               	movlb	0	; select bank0
   589  0065  0838               	movf	?_ADC+1,w
   590  0066  0021               	movlb	1	; select bank1
   591  0067  00C9               	movwf	(main@scan+1)^(0+128)
   592  0068  0020               	movlb	0	; select bank0
   593  0069  0837               	movf	?_ADC,w
   594  006A  0021               	movlb	1	; select bank1
   595  006B  00C8               	movwf	main@scan^(0+128)
   596                           
   597                           ;PIC16F1827-Inverted_Pendulum01.c: 130: static uint16_t last_scan = 127;
   598                           ;PIC16F1827-Inverted_Pendulum01.c: 131: int16_t sub = scan - last_scan;
   599  006C  0020               	movlb	0	; select bank0
   600  006D  093E               	comf	main@last_scan,w
   601  006E  00BC               	movwf	??_main
   602  006F  093F               	comf	main@last_scan+1,w
   603  0070  00BD               	movwf	??_main+1
   604  0071  0ABC               	incf	??_main,f
   605  0072  1903               	skipnz
   606  0073  0ABD               	incf	??_main+1,f
   607  0074  0021               	movlb	1	; select bank1
   608  0075  0848               	movf	main@scan^(0+128),w
   609  0076  0020               	movlb	0	; select bank0
   610  0077  073C               	addwf	??_main,w
   611  0078  0021               	movlb	1	; select bank1
   612  0079  00CA               	movwf	main@sub^(0+128)
   613  007A  0849               	movf	(main@scan+1)^(0+128),w
   614  007B  0020               	movlb	0	; select bank0
   615  007C  3D3D               	addwfc	??_main+1,w
   616  007D  0021               	movlb	1	; select bank1
   617  007E  00CB               	movwf	(main@sub+1)^(0+128)
   618                           
   619                           ;PIC16F1827-Inverted_Pendulum01.c: 132: last_scan = scan;
   620  007F  0849               	movf	(main@scan+1)^(0+128),w
   621  0080  0020               	movlb	0	; select bank0
   622  0081  00BF               	movwf	main@last_scan+1
   623  0082  0021               	movlb	1	; select bank1
   624  0083  0848               	movf	main@scan^(0+128),w
   625  0084  0020               	movlb	0	; select bank0
   626  0085  00BE               	movwf	main@last_scan
   627                           
   628                           ;PIC16F1827-Inverted_Pendulum01.c: 133: if (sub > 0) {
   629  0086  0021               	movlb	1	; select bank1
   630  0087  084B               	movf	(main@sub+1)^(0+128),w
   631  0088  3A80               	xorlw	128
   632  0089  0020               	movlb	0	; select bank0
   633  008A  00BC               	movwf	??_main
   634  008B  3080               	movlw	128
   635  008C  023C               	subwf	??_main,w
   636  008D  1D03               	skipz
   637  008E  2892               	goto	u665
   638  008F  3001               	movlw	1
   639  0090  0021               	movlb	1	; select bank1
   640  0091  024A               	subwf	main@sub^(0+128),w
   641  0092                     u665:	
   642  0092  1C03               	skipc
   643  0093  28A0               	goto	l223
   644                           
   645                           ;PIC16F1827-Inverted_Pendulum01.c: 134: drive(1);
   646  0094  3001               	movlw	1
   647  0095  3181  21B9  3180   	fcall	_drive
   648                           
   649                           ;PIC16F1827-Inverted_Pendulum01.c: 135: PWM_set(sub);
   650  0098  0021               	movlb	1	; select bank1
   651  0099  084A               	movf	main@sub^(0+128),w
   652  009A  3182  22A3  3180   	fcall	_PWM_set
   653                           
   654                           ;PIC16F1827-Inverted_Pendulum01.c: 136: LATB4 = 1;
   655  009D  0022               	movlb	2	; select bank2
   656  009E  160D               	bsf	13,4	;volatile
   657  009F  28B7               	goto	l1539
   658  00A0                     l223:	
   659                           ;PIC16F1827-Inverted_Pendulum01.c: 138: } else if (sub < 0) {
   660                           
   661                           ;PIC16F1827-Inverted_Pendulum01.c: 137: LATB5 = 0;
   662                           
   663  00A0  0021               	movlb	1	; select bank1
   664  00A1  1FCB               	btfss	(main@sub+1)^(0+128),7
   665  00A2  28B1               	goto	l1535
   666                           
   667                           ;PIC16F1827-Inverted_Pendulum01.c: 139: drive(2);
   668  00A3  3002               	movlw	2
   669  00A4  3181  21B9  3180   	fcall	_drive
   670                           
   671                           ;PIC16F1827-Inverted_Pendulum01.c: 140: PWM_set(-sub);
   672  00A7  0021               	movlb	1	; select bank1
   673  00A8  034A               	decf	main@sub^(0+128),w
   674  00A9  3AFF               	xorlw	255
   675  00AA  3182  22A3  3180   	fcall	_PWM_set
   676                           
   677                           ;PIC16F1827-Inverted_Pendulum01.c: 141: LATB4 = 0;
   678  00AD  0022               	movlb	2	; select bank2
   679  00AE  120D               	bcf	13,4	;volatile
   680                           
   681                           ;PIC16F1827-Inverted_Pendulum01.c: 142: LATB5 = 1;
   682  00AF  168D               	bsf	13,5	;volatile
   683                           
   684                           ;PIC16F1827-Inverted_Pendulum01.c: 143: } else {
   685  00B0  28B8               	goto	l1541
   686  00B1                     l1535:	
   687                           
   688                           ;PIC16F1827-Inverted_Pendulum01.c: 144: drive(0);
   689  00B1  3000               	movlw	0
   690  00B2  3181  21B9  3180   	fcall	_drive
   691                           
   692                           ;PIC16F1827-Inverted_Pendulum01.c: 145: LATB4 = 0;
   693  00B5  0022               	movlb	2	; select bank2
   694  00B6  120D               	bcf	13,4	;volatile
   695  00B7                     l1539:	
   696                           
   697                           ;PIC16F1827-Inverted_Pendulum01.c: 146: LATB5 = 0;
   698  00B7  128D               	bcf	13,5	;volatile
   699  00B8                     l1541:	
   700                           
   701                           ;PIC16F1827-Inverted_Pendulum01.c: 147: }
   702                           ;PIC16F1827-Inverted_Pendulum01.c: 148: _delay((unsigned long)((10)*(32000000/4000.0)));
   703  00B8  3068               	movlw	104
   704  00B9  0020               	movlb	0	; select bank0
   705  00BA  00BD               	movwf	??_main+1
   706  00BB  30E4               	movlw	228
   707  00BC  00BC               	movwf	??_main
   708  00BD                     u687:	
   709  00BD  0BBC               	decfsz	??_main,f
   710  00BE  28BD               	goto	u687
   711  00BF  0BBD               	decfsz	??_main+1,f
   712  00C0  28BD               	goto	u687
   713  00C1  0000               	nop
   714  00C2  2860               	goto	l1511
   715  00C3                     __end_of_main:	
   716                           ;PIC16F1827-Inverted_Pendulum01.c: 149: }
   717                           ;PIC16F1827-Inverted_Pendulum01.c: 150: return 0;
   718                           ;	Return value of _main is never used
   719                           
   720                           
   721                           	psect	text1
   722  0290                     __ptext1:	
   723 ;; *************** function _timer1_init *****************
   724 ;; Defined at:
   725 ;;		line 71 in file "../My_header\My_header.h"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  prescaler       1    wreg     unsigned char 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  prescaler       1    7[BANK0 ] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;		None               void
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   739 ;;      Params:         0       0       0       0       0       0
   740 ;;      Locals:         0       1       0       0       0       0
   741 ;;      Temps:          0       1       0       0       0       0
   742 ;;      Totals:         0       2       0       0       0       0
   743 ;;Total ram usage:        2 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    4
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _timer1_init
   755  0290                     _timer1_init:	
   756                           
   757                           ;incstack = 0
   758                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
   759                           ;timer1_init@prescaler stored from wreg
   760  0290  0020               	movlb	0	; select bank0
   761  0291  00B8               	movwf	timer1_init@prescaler
   762                           
   763                           ;My_header\My_header.h: 72: T1CONbits.TMR1ON = 1;
   764  0292  1418               	bsf	24,0	;volatile
   765                           
   766                           ;My_header\My_header.h: 73: T1CONbits.TMR1CS = 0;
   767  0293  303F               	movlw	-193
   768  0294  0598               	andwf	24,f	;volatile
   769                           
   770                           ;My_header\My_header.h: 74: T1CONbits.T1CKPS = prescaler;
   771  0295  0838               	movf	timer1_init@prescaler,w
   772  0296  00B7               	movwf	??_timer1_init
   773  0297  0EB7               	swapf	??_timer1_init,f
   774  0298  0818               	movf	24,w	;volatile
   775  0299  0637               	xorwf	??_timer1_init,w
   776  029A  39CF               	andlw	-49
   777  029B  0637               	xorwf	??_timer1_init,w
   778  029C  0098               	movwf	24	;volatile
   779                           
   780                           ;My_header\My_header.h: 75: TMR1H = 0x00;
   781  029D  0197               	clrf	23	;volatile
   782                           
   783                           ;My_header\My_header.h: 76: TMR1L = 0x00;
   784  029E  0196               	clrf	22	;volatile
   785                           
   786                           ;My_header\My_header.h: 77: PIE1bits.TMR1IE = 1;
   787  029F  0021               	movlb	1	; select bank1
   788  02A0  1411               	bsf	17,0	;volatile
   789                           
   790                           ;My_header\My_header.h: 78: INTCONbits.PEIE = 1;
   791  02A1  170B               	bsf	11,6	;volatile
   792  02A2  0008               	return
   793  02A3                     __end_of_timer1_init:	
   794                           
   795                           	psect	text2
   796  0244                     __ptext2:	
   797 ;; *************** function _timer0_init *****************
   798 ;; Defined at:
   799 ;;		line 33 in file "../My_header\My_header.h"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  prescaler       1    wreg     unsigned char 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  prescaler       1    7[BANK0 ] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;		None               void
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   813 ;;      Params:         0       0       0       0       0       0
   814 ;;      Locals:         0       1       0       0       0       0
   815 ;;      Temps:          0       1       0       0       0       0
   816 ;;      Totals:         0       2       0       0       0       0
   817 ;;Total ram usage:        2 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    4
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _timer0_init
   829  0244                     _timer0_init:	
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
   833                           ;timer0_init@prescaler stored from wreg
   834  0244  0020               	movlb	0	; select bank0
   835  0245  00B8               	movwf	timer0_init@prescaler
   836                           
   837                           ;My_header\My_header.h: 34: if (prescaler == 0) {
   838  0246  0838               	movf	timer0_init@prescaler,w
   839  0247  1D03               	btfss	3,2
   840  0248  2A4C               	goto	l89
   841                           
   842                           ;My_header\My_header.h: 35: OPTION_REGbits.PSA = 1;
   843  0249  0021               	movlb	1	; select bank1
   844  024A  1595               	bsf	21,3	;volatile
   845                           
   846                           ;My_header\My_header.h: 36: } else {
   847  024B  2A5A               	goto	l1311
   848  024C                     l89:	
   849                           
   850                           ;My_header\My_header.h: 37: OPTION_REGbits.PSA = 0;
   851  024C  0021               	movlb	1	; select bank1
   852  024D  1195               	bcf	21,3	;volatile
   853                           
   854                           ;My_header\My_header.h: 38: OPTION_REGbits.PS = prescaler - 1;
   855  024E  30FF               	movlw	255
   856  024F  0020               	movlb	0	; select bank0
   857  0250  0738               	addwf	timer0_init@prescaler,w
   858  0251  00B7               	movwf	??_timer0_init
   859  0252  0021               	movlb	1	; select bank1
   860  0253  0815               	movf	21,w	;volatile
   861  0254  0020               	movlb	0	; select bank0
   862  0255  0637               	xorwf	??_timer0_init,w
   863  0256  39F8               	andlw	-8
   864  0257  0637               	xorwf	??_timer0_init,w
   865  0258  0021               	movlb	1	; select bank1
   866  0259  0095               	movwf	21	;volatile
   867  025A                     l1311:	
   868                           
   869                           ;My_header\My_header.h: 39: }
   870                           ;My_header\My_header.h: 40: OPTION_REGbits.TMR0CS = 0;
   871  025A  1295               	bcf	21,5	;volatile
   872                           
   873                           ;My_header\My_header.h: 41: OPTION_REGbits.TMR0SE = 0;
   874  025B  1215               	bcf	21,4	;volatile
   875                           
   876                           ;My_header\My_header.h: 42: INTCONbits.TMR0IE = 1;
   877  025C  168B               	bsf	11,5	;volatile
   878                           
   879                           ;My_header\My_header.h: 43: INTCONbits.PEIE = 1;
   880  025D  170B               	bsf	11,6	;volatile
   881  025E  0008               	return
   882  025F                     __end_of_timer0_init:	
   883                           
   884                           	psect	text3
   885  0206                     __ptext3:	
   886 ;; *************** function _ringbuf_init *****************
   887 ;; Defined at:
   888 ;;		line 24 in file "../My_header\My_ringbuf.h"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  rb              1    wreg     PTR struct ringbuf
   891 ;;		 -> tx_buf(7), 
   892 ;;  internal_buf    1    6[BANK0 ] PTR unsigned char 
   893 ;;		 -> main@buf(40), 
   894 ;;  bufsize         2    7[BANK0 ] unsigned int 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  rb              1   10[BANK0 ] PTR struct ringbuf
   897 ;;		 -> tx_buf(7), 
   898 ;; Return value:  Size  Location     Type
   899 ;;		None               void
   900 ;; Registers used:
   901 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   907 ;;      Params:         0       3       0       0       0       0
   908 ;;      Locals:         0       1       0       0       0       0
   909 ;;      Temps:          0       1       0       0       0       0
   910 ;;      Totals:         0       5       0       0       0       0
   911 ;;Total ram usage:        5 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; Hardware stack levels required when called:    4
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_main
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           
   922                           ;psect for function _ringbuf_init
   923  0206                     _ringbuf_init:	
   924                           
   925                           ;incstack = 0
   926                           ; Regs used in _ringbuf_init: [wreg+fsr1l+fsr1h+status,2+status,0]
   927                           ;ringbuf_init@rb stored from wreg
   928  0206  0020               	movlb	0	; select bank0
   929  0207  00BB               	movwf	ringbuf_init@rb
   930                           
   931                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
   932  0208  0837               	movf	ringbuf_init@internal_buf,w
   933  0209  00BA               	movwf	??_ringbuf_init
   934  020A  083B               	movf	ringbuf_init@rb,w
   935  020B  0086               	movwf	6
   936  020C  0187               	clrf	7
   937  020D  083A               	movf	??_ringbuf_init,w
   938  020E  0081               	movwf	1
   939                           
   940                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
   941  020F  0A3B               	incf	ringbuf_init@rb,w
   942  0210  0086               	movwf	6
   943  0211  0187               	clrf	7
   944  0212  0838               	movf	ringbuf_init@bufsize,w
   945  0213  3FC0               	movwi [0]fsr1
   946  0214  0839               	movf	ringbuf_init@bufsize+1,w
   947  0215  3FC1               	movwi [1]fsr1
   948                           
   949                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
   950  0216  083B               	movf	ringbuf_init@rb,w
   951  0217  3E03               	addlw	3
   952  0218  0086               	movwf	6
   953  0219  0187               	clrf	7
   954  021A  3000               	movlw	0
   955  021B  3FC0               	movwi [0]fsr1
   956  021C  3FC1               	movwi [1]fsr1
   957                           
   958                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
   959  021D  083B               	movf	ringbuf_init@rb,w
   960  021E  3E05               	addlw	5
   961  021F  0086               	movwf	6
   962  0220  0187               	clrf	7
   963  0221  3000               	movlw	0
   964  0222  3FC0               	movwi [0]fsr1
   965  0223  3FC1               	movwi [1]fsr1
   966  0224  0008               	return
   967  0225                     __end_of_ringbuf_init:	
   968                           
   969                           	psect	text4
   970  01B9                     __ptext4:	
   971 ;; *************** function _drive *****************
   972 ;; Defined at:
   973 ;;		line 79 in file "PIC16F1827-Inverted_Pendulum01.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  dir             1    wreg     unsigned char 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  dir             1    6[BANK0 ] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;		None               void
   980 ;; Registers used:
   981 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   987 ;;      Params:         0       0       0       0       0       0
   988 ;;      Locals:         0       1       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0
   990 ;;      Totals:         0       1       0       0       0       0
   991 ;;Total ram usage:        1 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    4
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _drive
  1003  01B9                     _drive:	
  1004                           
  1005                           ;incstack = 0
  1006                           ; Regs used in _drive: [wreg-fsr0h+status,2+status,0]
  1007                           ;drive@dir stored from wreg
  1008  01B9  0020               	movlb	0	; select bank0
  1009  01BA  00B7               	movwf	drive@dir
  1010                           
  1011                           ;PIC16F1827-Inverted_Pendulum01.c: 80: switch (dir) {
  1012  01BB  29D4               	goto	l1415
  1013  01BC                     l212:	
  1014                           ;PIC16F1827-Inverted_Pendulum01.c: 81: case 0:
  1015                           
  1016                           
  1017                           ;PIC16F1827-Inverted_Pendulum01.c: 82: LATA6 = 0;
  1018  01BC  0022               	movlb	2	; select bank2
  1019  01BD  130C               	bcf	12,6	;volatile
  1020                           
  1021                           ;PIC16F1827-Inverted_Pendulum01.c: 83: LATA7 = 0;
  1022  01BE  138C               	bcf	12,7	;volatile
  1023                           
  1024                           ;PIC16F1827-Inverted_Pendulum01.c: 84: LATA2 = 0;
  1025  01BF  110C               	bcf	12,2	;volatile
  1026                           
  1027                           ;PIC16F1827-Inverted_Pendulum01.c: 85: LATA3 = 0;
  1028  01C0  118C               	bcf	12,3	;volatile
  1029                           
  1030                           ;PIC16F1827-Inverted_Pendulum01.c: 86: break;
  1031  01C1  0008               	return
  1032  01C2                     l214:	
  1033                           ;PIC16F1827-Inverted_Pendulum01.c: 87: case 1:
  1034                           
  1035                           
  1036                           ;PIC16F1827-Inverted_Pendulum01.c: 88: LATA6 = 1;
  1037  01C2  0022               	movlb	2	; select bank2
  1038  01C3  170C               	bsf	12,6	;volatile
  1039                           
  1040                           ;PIC16F1827-Inverted_Pendulum01.c: 89: LATA7 = 0;
  1041  01C4  138C               	bcf	12,7	;volatile
  1042                           
  1043                           ;PIC16F1827-Inverted_Pendulum01.c: 90: LATA2 = 1;
  1044  01C5  150C               	bsf	12,2	;volatile
  1045                           
  1046                           ;PIC16F1827-Inverted_Pendulum01.c: 91: LATA3 = 0;
  1047  01C6  118C               	bcf	12,3	;volatile
  1048                           
  1049                           ;PIC16F1827-Inverted_Pendulum01.c: 92: break;
  1050  01C7  0008               	return
  1051  01C8                     l215:	
  1052                           ;PIC16F1827-Inverted_Pendulum01.c: 93: case 2:
  1053                           
  1054                           
  1055                           ;PIC16F1827-Inverted_Pendulum01.c: 94: LATA6 = 0;
  1056  01C8  0022               	movlb	2	; select bank2
  1057  01C9  130C               	bcf	12,6	;volatile
  1058                           
  1059                           ;PIC16F1827-Inverted_Pendulum01.c: 95: LATA7 = 1;
  1060  01CA  178C               	bsf	12,7	;volatile
  1061                           
  1062                           ;PIC16F1827-Inverted_Pendulum01.c: 96: LATA2 = 0;
  1063  01CB  110C               	bcf	12,2	;volatile
  1064                           
  1065                           ;PIC16F1827-Inverted_Pendulum01.c: 97: LATA3 = 1;
  1066  01CC  158C               	bsf	12,3	;volatile
  1067                           
  1068                           ;PIC16F1827-Inverted_Pendulum01.c: 98: break;
  1069  01CD  0008               	return
  1070  01CE                     l216:	
  1071                           ;PIC16F1827-Inverted_Pendulum01.c: 99: case 3:
  1072                           
  1073                           
  1074                           ;PIC16F1827-Inverted_Pendulum01.c: 100: LATA6 = 1;
  1075  01CE  0022               	movlb	2	; select bank2
  1076  01CF  170C               	bsf	12,6	;volatile
  1077                           
  1078                           ;PIC16F1827-Inverted_Pendulum01.c: 101: LATA7 = 1;
  1079  01D0  178C               	bsf	12,7	;volatile
  1080                           
  1081                           ;PIC16F1827-Inverted_Pendulum01.c: 102: LATA2 = 1;
  1082  01D1  150C               	bsf	12,2	;volatile
  1083                           
  1084                           ;PIC16F1827-Inverted_Pendulum01.c: 103: LATA3 = 1;
  1085  01D2  158C               	bsf	12,3	;volatile
  1086                           
  1087                           ;PIC16F1827-Inverted_Pendulum01.c: 105: }
  1088                           
  1089                           ;PIC16F1827-Inverted_Pendulum01.c: 104: break;
  1090  01D3  0008               	return
  1091  01D4                     l1415:	
  1092  01D4  0020               	movlb	0	; select bank0
  1093  01D5  0837               	movf	drive@dir,w
  1094                           
  1095                           ; Switch size 1, requested type "space"
  1096                           ; Number of cases is 4, Range of values is 0 to 3
  1097                           ; switch strategies available:
  1098                           ; Name         Instructions Cycles
  1099                           ; simple_byte           13     7 (average)
  1100                           ; direct_byte           14     6 (fixed)
  1101                           ; jumptable            260     6 (fixed)
  1102                           ;	Chosen strategy is simple_byte
  1103  01D6  3A00               	xorlw	0	; case 0
  1104  01D7  1903               	skipnz
  1105  01D8  29BC               	goto	l212
  1106  01D9  3A01               	xorlw	1	; case 1
  1107  01DA  1903               	skipnz
  1108  01DB  29C2               	goto	l214
  1109  01DC  3A03               	xorlw	3	; case 2
  1110  01DD  1903               	skipnz
  1111  01DE  29C8               	goto	l215
  1112  01DF  3A01               	xorlw	1	; case 3
  1113  01E0  1903               	skipnz
  1114  01E1  29CE               	goto	l216
  1115  01E2  29E3               	goto	l217
  1116  01E3                     l217:	
  1117  01E3  0008               	return
  1118  01E4                     __end_of_drive:	
  1119                           
  1120                           	psect	text5
  1121  02B3                     __ptext5:	
  1122 ;; *************** function _UART_init *****************
  1123 ;; Defined at:
  1124 ;;		line 237 in file "../My_header\My_header.h"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;		None               void
  1131 ;; Registers used:
  1132 ;;		wreg, status,2
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1138 ;;      Params:         0       0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0
  1141 ;;      Totals:         0       0       0       0       0       0
  1142 ;;Total ram usage:        0 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    4
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _UART_init
  1154  02B3                     _UART_init:	
  1155                           
  1156                           ;My_header\My_header.h: 238: SPEN = 1;
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in _UART_init: [wreg+status,2]
  1160  02B3  0023               	movlb	3	; select bank3
  1161  02B4  179D               	bsf	29,7	;volatile
  1162                           
  1163                           ;My_header\My_header.h: 239: RCSTA = 0x90;
  1164  02B5  3090               	movlw	144
  1165  02B6  009D               	movwf	29	;volatile
  1166                           
  1167                           ;My_header\My_header.h: 240: BRG16 = 0;
  1168  02B7  119F               	bcf	31,3	;volatile
  1169                           
  1170                           ;My_header\My_header.h: 241: SPBRGH = 0;
  1171  02B8  019C               	clrf	28	;volatile
  1172                           
  1173                           ;My_header\My_header.h: 242: SPBRGL = 207;
  1174  02B9  30CF               	movlw	207
  1175  02BA  009B               	movwf	27	;volatile
  1176                           
  1177                           ;My_header\My_header.h: 243: TXSTA = 0x24;
  1178  02BB  3024               	movlw	36
  1179  02BC  009E               	movwf	30	;volatile
  1180                           
  1181                           ;My_header\My_header.h: 244: PIE1bits.RCIE = 1;
  1182  02BD  0021               	movlb	1	; select bank1
  1183  02BE  1691               	bsf	17,5	;volatile
  1184                           
  1185                           ;My_header\My_header.h: 245: INTCONbits.PEIE = 1;
  1186  02BF  170B               	bsf	11,6	;volatile
  1187  02C0  0008               	return
  1188  02C1                     __end_of_UART_init:	
  1189                           
  1190                           	psect	text6
  1191  02A3                     __ptext6:	
  1192 ;; *************** function _PWM_set *****************
  1193 ;; Defined at:
  1194 ;;		line 72 in file "PIC16F1827-Inverted_Pendulum01.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  value           1    wreg     unsigned char 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  value           1    6[BANK0 ] unsigned char 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;		None               void
  1201 ;; Registers used:
  1202 ;;		wreg, status,2, status,0
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1208 ;;      Params:         0       0       0       0       0       0
  1209 ;;      Locals:         0       1       0       0       0       0
  1210 ;;      Temps:          0       0       0       0       0       0
  1211 ;;      Totals:         0       1       0       0       0       0
  1212 ;;Total ram usage:        1 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    4
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _PWM_set
  1224  02A3                     _PWM_set:	
  1225                           
  1226                           ;incstack = 0
  1227                           ; Regs used in _PWM_set: [wreg+status,2+status,0]
  1228                           ;PWM_set@value stored from wreg
  1229  02A3  0020               	movlb	0	; select bank0
  1230  02A4  00B7               	movwf	PWM_set@value
  1231                           
  1232                           ;PIC16F1827-Inverted_Pendulum01.c: 73: CCP1CONbits.DC1B = 0;
  1233  02A5  30CF               	movlw	-49
  1234  02A6  0025               	movlb	5	; select bank5
  1235  02A7  0593               	andwf	19,f	;volatile
  1236                           
  1237                           ;PIC16F1827-Inverted_Pendulum01.c: 74: CCPR1L = value;
  1238  02A8  0020               	movlb	0	; select bank0
  1239  02A9  0837               	movf	PWM_set@value,w
  1240  02AA  0025               	movlb	5	; select bank5
  1241  02AB  0091               	movwf	17	;volatile
  1242                           
  1243                           ;PIC16F1827-Inverted_Pendulum01.c: 75: CCP2CONbits.DC2B = 0;
  1244  02AC  30CF               	movlw	-49
  1245  02AD  059A               	andwf	26,f	;volatile
  1246                           
  1247                           ;PIC16F1827-Inverted_Pendulum01.c: 76: CCPR2L = value;
  1248  02AE  0020               	movlb	0	; select bank0
  1249  02AF  0837               	movf	PWM_set@value,w
  1250  02B0  0025               	movlb	5	; select bank5
  1251  02B1  0098               	movwf	24	;volatile
  1252  02B2  0008               	return
  1253  02B3                     __end_of_PWM_set:	
  1254                           
  1255                           	psect	text7
  1256  01E4                     __ptext7:	
  1257 ;; *************** function _PWM_init *****************
  1258 ;; Defined at:
  1259 ;;		line 53 in file "PIC16F1827-Inverted_Pendulum01.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;		None               void
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1273 ;;      Params:         0       0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0
  1276 ;;      Totals:         0       0       0       0       0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    4
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _PWM_init
  1289  01E4                     _PWM_init:	
  1290                           
  1291                           ;PIC16F1827-Inverted_Pendulum01.c: 54: CCP1CONbits.CCP1M = 12;
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  1295  01E4  0025               	movlb	5	; select bank5
  1296  01E5  0813               	movf	19,w	;volatile
  1297  01E6  39F0               	andlw	-16
  1298  01E7  380C               	iorlw	12
  1299  01E8  0093               	movwf	19	;volatile
  1300                           
  1301                           ;PIC16F1827-Inverted_Pendulum01.c: 55: CCP1CONbits.P1M = 0;
  1302  01E9  303F               	movlw	-193
  1303  01EA  0593               	andwf	19,f	;volatile
  1304                           
  1305                           ;PIC16F1827-Inverted_Pendulum01.c: 56: CCPTMRSbits.C1TSEL = 0;
  1306  01EB  30FC               	movlw	-4
  1307  01EC  059E               	andwf	30,f	;volatile
  1308                           
  1309                           ;PIC16F1827-Inverted_Pendulum01.c: 57: CCPR1Lbits.CCPR1L = 0;
  1310  01ED  0191               	clrf	17	;volatile
  1311                           
  1312                           ;PIC16F1827-Inverted_Pendulum01.c: 58: CCP1CONbits.DC1B = 0;
  1313  01EE  30CF               	movlw	-49
  1314  01EF  0593               	andwf	19,f	;volatile
  1315                           
  1316                           ;PIC16F1827-Inverted_Pendulum01.c: 60: CCP2CONbits.CCP2M = 12;
  1317  01F0  081A               	movf	26,w	;volatile
  1318  01F1  39F0               	andlw	-16
  1319  01F2  380C               	iorlw	12
  1320  01F3  009A               	movwf	26	;volatile
  1321                           
  1322                           ;PIC16F1827-Inverted_Pendulum01.c: 61: CCP2CONbits.P2M = 0;
  1323  01F4  303F               	movlw	-193
  1324  01F5  059A               	andwf	26,f	;volatile
  1325                           
  1326                           ;PIC16F1827-Inverted_Pendulum01.c: 62: CCPTMRSbits.C2TSEL = 0;
  1327  01F6  30F3               	movlw	-13
  1328  01F7  059E               	andwf	30,f	;volatile
  1329                           
  1330                           ;PIC16F1827-Inverted_Pendulum01.c: 63: CCPR2Lbits.CCPR2L = 0;
  1331  01F8  0198               	clrf	24	;volatile
  1332                           
  1333                           ;PIC16F1827-Inverted_Pendulum01.c: 64: CCP2CONbits.DC2B = 0;
  1334  01F9  30CF               	movlw	-49
  1335  01FA  059A               	andwf	26,f	;volatile
  1336                           
  1337                           ;PIC16F1827-Inverted_Pendulum01.c: 66: T2CONbits.T2OUTPS = 0;
  1338  01FB  3087               	movlw	-121
  1339  01FC  0020               	movlb	0	; select bank0
  1340  01FD  059C               	andwf	28,f	;volatile
  1341                           
  1342                           ;PIC16F1827-Inverted_Pendulum01.c: 67: T2CONbits.T2CKPS = 2;
  1343  01FE  081C               	movf	28,w	;volatile
  1344  01FF  39FC               	andlw	-4
  1345  0200  3802               	iorlw	2
  1346  0201  009C               	movwf	28	;volatile
  1347                           
  1348                           ;PIC16F1827-Inverted_Pendulum01.c: 68: PR2 = 20 - 1;
  1349  0202  3013               	movlw	19
  1350  0203  009B               	movwf	27	;volatile
  1351                           
  1352                           ;PIC16F1827-Inverted_Pendulum01.c: 69: T2CONbits.TMR2ON = 1;
  1353  0204  151C               	bsf	28,2	;volatile
  1354  0205  0008               	return
  1355  0206                     __end_of_PWM_init:	
  1356                           
  1357                           	psect	text8
  1358  025F                     __ptext8:	
  1359 ;; *************** function _ADC_init *****************
  1360 ;; Defined at:
  1361 ;;		line 161 in file "../My_header\My_header.h"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  p_ref           1    wreg     unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  p_ref           1    6[BANK0 ] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;		None               void
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1375 ;;      Params:         0       0       0       0       0       0
  1376 ;;      Locals:         0       1       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0
  1378 ;;      Totals:         0       1       0       0       0       0
  1379 ;;Total ram usage:        1 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    4
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _ADC_init
  1391  025F                     _ADC_init:	
  1392                           
  1393                           ;incstack = 0
  1394                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
  1395                           ;ADC_init@p_ref stored from wreg
  1396  025F  0020               	movlb	0	; select bank0
  1397  0260  00B7               	movwf	ADC_init@p_ref
  1398                           
  1399                           ;My_header\My_header.h: 162: ADCON1bits.ADFM = 0;
  1400  0261  0021               	movlb	1	; select bank1
  1401  0262  139E               	bcf	30,7	;volatile
  1402                           
  1403                           ;My_header\My_header.h: 163: ADCON1bits.ADCS = 6;
  1404  0263  081E               	movf	30,w	;volatile
  1405  0264  398F               	andlw	-113
  1406  0265  3860               	iorlw	96
  1407  0266  009E               	movwf	30	;volatile
  1408                           
  1409                           ;My_header\My_header.h: 164: ADCON1bits.ADNREF = 0;
  1410  0267  111E               	bcf	30,2	;volatile
  1411                           
  1412                           ;My_header\My_header.h: 165: ADCON1bits.ADPREF = p_ref;
  1413  0268  081E               	movf	30,w	;volatile
  1414  0269  0020               	movlb	0	; select bank0
  1415  026A  0637               	xorwf	ADC_init@p_ref,w
  1416  026B  39FC               	andlw	-4
  1417  026C  0637               	xorwf	ADC_init@p_ref,w
  1418  026D  0021               	movlb	1	; select bank1
  1419  026E  009E               	movwf	30	;volatile
  1420                           
  1421                           ;My_header\My_header.h: 166: if (p_ref == 3) FVRCON = 0x83;
  1422  026F  3003               	movlw	3
  1423  0270  0020               	movlb	0	; select bank0
  1424  0271  0637               	xorwf	ADC_init@p_ref,w
  1425  0272  1D03               	btfss	3,2
  1426  0273  0008               	return
  1427  0274  3083               	movlw	131
  1428  0275  0022               	movlb	2	; select bank2
  1429  0276  0097               	movwf	23	;volatile
  1430  0277  0008               	return
  1431  0278                     __end_of_ADC_init:	
  1432                           
  1433                           	psect	text9
  1434  0225                     __ptext9:	
  1435 ;; *************** function _ADC *****************
  1436 ;; Defined at:
  1437 ;;		line 172 in file "../My_header\My_header.h"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  ch              1    wreg     unsigned char 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  ch              1    9[BANK0 ] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  2    6[BANK0 ] unsigned int 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1451 ;;      Params:         0       2       0       0       0       0
  1452 ;;      Locals:         0       1       0       0       0       0
  1453 ;;      Temps:          0       1       0       0       0       0
  1454 ;;      Totals:         0       4       0       0       0       0
  1455 ;;Total ram usage:        4 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    4
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _ADC
  1467  0225                     _ADC:	
  1468                           
  1469                           ;incstack = 0
  1470                           ; Regs used in _ADC: [wreg+status,2+status,0]
  1471                           ;ADC@ch stored from wreg
  1472  0225  0020               	movlb	0	; select bank0
  1473  0226  00BA               	movwf	ADC@ch
  1474                           
  1475                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
  1476  0227  083A               	movf	ADC@ch,w
  1477  0228  00B9               	movwf	??_ADC
  1478  0229  0DB9               	rlf	??_ADC,f
  1479  022A  0DB9               	rlf	??_ADC,f
  1480  022B  0021               	movlb	1	; select bank1
  1481  022C  081D               	movf	29,w	;volatile
  1482  022D  0020               	movlb	0	; select bank0
  1483  022E  0639               	xorwf	??_ADC,w
  1484  022F  3983               	andlw	-125
  1485  0230  0639               	xorwf	??_ADC,w
  1486  0231  0021               	movlb	1	; select bank1
  1487  0232  009D               	movwf	29	;volatile
  1488                           
  1489                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
  1490  0233  141D               	bsf	29,0	;volatile
  1491                           
  1492                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
  1493  0234  0020               	movlb	0	; select bank0
  1494  0235  1311               	bcf	17,6	;volatile
  1495                           
  1496                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
  1497  0236  0021               	movlb	1	; select bank1
  1498  0237  149D               	bsf	29,1	;volatile
  1499  0238                     l101:	
  1500                           ;My_header\My_header.h: 178: while (!PIR1bits.ADIF);
  1501                           
  1502  0238  0020               	movlb	0	; select bank0
  1503  0239  1F11               	btfss	17,6	;volatile
  1504  023A  2A38               	goto	l101
  1505                           
  1506                           ;My_header\My_header.h: 179: return ADRES;
  1507  023B  0021               	movlb	1	; select bank1
  1508  023C  081C               	movf	28,w	;volatile
  1509  023D  0020               	movlb	0	; select bank0
  1510  023E  00B8               	movwf	?_ADC+1
  1511  023F  0021               	movlb	1	; select bank1
  1512  0240  081B               	movf	27,w	;volatile
  1513  0241  0020               	movlb	0	; select bank0
  1514  0242  00B7               	movwf	?_ADC
  1515  0243  0008               	return
  1516  0244                     __end_of_ADC:	
  1517                           
  1518                           	psect	intentry
  1519  0004                     __pintentry:	
  1520 ;; *************** function _isr *****************
  1521 ;; Defined at:
  1522 ;;		line 36 in file "PIC16F1827-Inverted_Pendulum01.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  ascii           1    5[BANK0 ] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;		None               void
  1529 ;; Registers used:
  1530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1536 ;;      Params:         0       0       0       0       0       0
  1537 ;;      Locals:         0       1       0       0       0       0
  1538 ;;      Temps:          0       2       0       0       0       0
  1539 ;;      Totals:         0       3       0       0       0       0
  1540 ;;Total ram usage:        3 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    3
  1543 ;; This function calls:
  1544 ;;		_interrupt_TXIF
  1545 ;;		_tx_send
  1546 ;; This function is called by:
  1547 ;;		Interrupt level 1
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551  0004                     _isr:	
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1555  0004  3180               	pagesel	$
  1556  0005  0020               	movlb	0	; select bank0
  1557  0006  087F               	movf	127,w
  1558  0007  00B5               	movwf	??_isr+1
  1559                           
  1560                           ;PIC16F1827-Inverted_Pendulum01.c: 37: interrupt_TXIF();
  1561  0008  3182  2278  3180   	fcall	_interrupt_TXIF
  1562                           
  1563                           ;PIC16F1827-Inverted_Pendulum01.c: 38: if (TMR0IF) {
  1564  000B  190B               	btfsc	11,2	;volatile
  1565                           
  1566                           ;PIC16F1827-Inverted_Pendulum01.c: 39: TMR0IF = 0;
  1567  000C  110B               	bcf	11,2	;volatile
  1568                           
  1569                           ;PIC16F1827-Inverted_Pendulum01.c: 40: }
  1570                           ;PIC16F1827-Inverted_Pendulum01.c: 41: if (TMR1IF) {
  1571  000D  0020               	movlb	0	; select bank0
  1572  000E  1811               	btfsc	17,0	;volatile
  1573                           
  1574                           ;PIC16F1827-Inverted_Pendulum01.c: 42: TMR1IF = 0;
  1575  000F  1011               	bcf	17,0	;volatile
  1576                           
  1577                           ;PIC16F1827-Inverted_Pendulum01.c: 45: }
  1578                           ;PIC16F1827-Inverted_Pendulum01.c: 46: if (RCIF) {
  1579  0010  1E91               	btfss	17,5	;volatile
  1580  0011  281C               	goto	i1l202
  1581                           
  1582                           ;PIC16F1827-Inverted_Pendulum01.c: 47: RCIF = 0;
  1583  0012  1291               	bcf	17,5	;volatile
  1584                           
  1585                           ;PIC16F1827-Inverted_Pendulum01.c: 48: char ascii = RCREG;
  1586  0013  0023               	movlb	3	; select bank3
  1587  0014  0819               	movf	25,w	;volatile
  1588  0015  0020               	movlb	0	; select bank0
  1589  0016  00B4               	movwf	??_isr
  1590  0017  0834               	movf	??_isr,w
  1591  0018  00B6               	movwf	isr@ascii
  1592                           
  1593                           ;PIC16F1827-Inverted_Pendulum01.c: 49: tx_send(ascii);
  1594  0019  0836               	movf	isr@ascii,w
  1595  001A  3182  22C1         	fcall	_tx_send
  1596  001C                     i1l202:	
  1597  001C  0020               	movlb	0	; select bank0
  1598  001D  0835               	movf	??_isr+1,w
  1599  001E  00FF               	movwf	127
  1600  001F  0009               	retfie
  1601  0020                     __end_of_isr:	
  1602                           
  1603                           	psect	text11
  1604  02C1                     __ptext11:	
  1605 ;; *************** function _tx_send *****************
  1606 ;; Defined at:
  1607 ;;		line 259 in file "../My_header\My_header.h"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  asciicode       1    wreg     unsigned char 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  asciicode       1    2[BANK0 ] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;		None               void
  1614 ;; Registers used:
  1615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1621 ;;      Params:         0       0       0       0       0       0
  1622 ;;      Locals:         0       1       0       0       0       0
  1623 ;;      Temps:          0       1       0       0       0       0
  1624 ;;      Totals:         0       2       0       0       0       0
  1625 ;;Total ram usage:        2 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    2
  1628 ;; This function calls:
  1629 ;;		_ringbuf_put
  1630 ;; This function is called by:
  1631 ;;		_isr
  1632 ;;		_tx_sendn
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _tx_send
  1638  02C1                     _tx_send:	
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _tx_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1642                           ;tx_send@asciicode stored from wreg
  1643  02C1  0020               	movlb	0	; select bank0
  1644  02C2  00B3               	movwf	tx_send@asciicode
  1645                           
  1646                           ;My_header\My_header.h: 260: ringbuf_put(&tx_buf, asciicode);
  1647  02C3  0833               	movf	tx_send@asciicode,w
  1648  02C4  00B2               	movwf	??_tx_send
  1649  02C5  0832               	movf	??_tx_send,w
  1650  02C6  00F7               	movwf	ringbuf_put@asciicode
  1651  02C7  302A               	movlw	(low (_tx_buf| 0))& (0+255)
  1652  02C8  3180  20C3         	fcall	_ringbuf_put
  1653                           
  1654                           ;My_header\My_header.h: 261: PIE1bits.TXIE = 1;
  1655  02CA  0021               	movlb	1	; select bank1
  1656  02CB  1611               	bsf	17,4	;volatile
  1657  02CC  0008               	return
  1658  02CD                     __end_of_tx_send:	
  1659                           
  1660                           	psect	text12
  1661  00C3                     __ptext12:	
  1662 ;; *************** function _ringbuf_put *****************
  1663 ;; Defined at:
  1664 ;;		line 39 in file "../My_header\My_ringbuf.h"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  rb              1    wreg     PTR struct ringbuf
  1667 ;;		 -> tx_buf(7), 
  1668 ;;  asciicode       1    7[COMMON] unsigned char 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  rb              1    0[BANK0 ] PTR struct ringbuf
  1671 ;;		 -> tx_buf(7), 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;		None               void
  1674 ;; Registers used:
  1675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1681 ;;      Params:         1       0       0       0       0       0
  1682 ;;      Locals:         0       1       0       0       0       0
  1683 ;;      Temps:          6       0       0       0       0       0
  1684 ;;      Totals:         7       1       0       0       0       0
  1685 ;;Total ram usage:        8 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    1
  1688 ;; This function calls:
  1689 ;;		_ringbuf_num
  1690 ;; This function is called by:
  1691 ;;		_tx_send
  1692 ;;		_ringbuf_put_num
  1693 ;;		_ringbuf_put_str
  1694 ;;		_tx_sends
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           
  1699                           ;psect for function _ringbuf_put
  1700  00C3                     _ringbuf_put:	
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in _ringbuf_put: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1704                           ;ringbuf_put@rb stored from wreg
  1705  00C3  0020               	movlb	0	; select bank0
  1706  00C4  00B1               	movwf	ringbuf_put@rb
  1707                           
  1708                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  1709  00C5  0A31               	incf	ringbuf_put@rb,w
  1710  00C6  0086               	movwf	6
  1711  00C7  0187               	clrf	7
  1712  00C8  3F40               	moviw [0]fsr1
  1713  00C9  00F8               	movwf	??_ringbuf_put
  1714  00CA  3F41               	moviw [1]fsr1
  1715  00CB  00F9               	movwf	??_ringbuf_put+1
  1716  00CC  0831               	movf	ringbuf_put@rb,w
  1717  00CD  3181  2119  3180   	fcall	_ringbuf_num
  1718  00D0  0879               	movf	??_ringbuf_put+1,w
  1719  00D1  0271               	subwf	?_ringbuf_num+1,w
  1720  00D2  1D03               	skipz
  1721  00D3  28D6               	goto	u47_25
  1722  00D4  0878               	movf	??_ringbuf_put,w
  1723  00D5  0270               	subwf	?_ringbuf_num,w
  1724  00D6                     u47_25:	
  1725  00D6  1803               	skipnc
  1726  00D7  0008               	return
  1727                           
  1728                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  1729  00D8  0877               	movf	ringbuf_put@asciicode,w
  1730  00D9  00F8               	movwf	??_ringbuf_put
  1731  00DA  0020               	movlb	0	; select bank0
  1732  00DB  0831               	movf	ringbuf_put@rb,w
  1733  00DC  0086               	movwf	6
  1734  00DD  0187               	clrf	7
  1735  00DE  0831               	movf	ringbuf_put@rb,w
  1736  00DF  3E03               	addlw	3
  1737  00E0  0084               	movwf	4
  1738  00E1  0185               	clrf	5
  1739  00E2  0800               	movf	0,w
  1740  00E3  0701               	addwf	1,w
  1741  00E4  00F9               	movwf	??_ringbuf_put+1
  1742  00E5  0879               	movf	??_ringbuf_put+1,w
  1743  00E6  0086               	movwf	6
  1744  00E7  0187               	clrf	7
  1745  00E8  0878               	movf	??_ringbuf_put,w
  1746  00E9  0081               	movwf	1
  1747                           
  1748                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  1749  00EA  0A31               	incf	ringbuf_put@rb,w
  1750  00EB  0086               	movwf	6
  1751  00EC  0187               	clrf	7
  1752  00ED  3F40               	moviw [0]fsr1
  1753  00EE  00F8               	movwf	??_ringbuf_put
  1754  00EF  3F41               	moviw [1]fsr1
  1755  00F0  00F9               	movwf	??_ringbuf_put+1
  1756  00F1  0831               	movf	ringbuf_put@rb,w
  1757  00F2  3E03               	addlw	3
  1758  00F3  0086               	movwf	6
  1759  00F4  0187               	clrf	7
  1760  00F5  3F40               	moviw [0]fsr1
  1761  00F6  00FA               	movwf	??_ringbuf_put+2
  1762  00F7  3F41               	moviw [1]fsr1
  1763  00F8  00FB               	movwf	??_ringbuf_put+3
  1764  00F9  087A               	movf	??_ringbuf_put+2,w
  1765  00FA  3E01               	addlw	1
  1766  00FB  00FC               	movwf	??_ringbuf_put+4
  1767  00FC  3000               	movlw	0
  1768  00FD  3D7B               	addwfc	??_ringbuf_put+3,w
  1769  00FE  00FD               	movwf	??_ringbuf_put+5
  1770  00FF  0879               	movf	??_ringbuf_put+1,w
  1771  0100  027D               	subwf	??_ringbuf_put+5,w
  1772  0101  1D03               	skipz
  1773  0102  2905               	goto	u48_25
  1774  0103  0878               	movf	??_ringbuf_put,w
  1775  0104  027C               	subwf	??_ringbuf_put+4,w
  1776  0105                     u48_25:	
  1777  0105  1803               	skipnc
  1778  0106  2911               	goto	i1l1283
  1779  0107  0831               	movf	ringbuf_put@rb,w
  1780  0108  3E03               	addlw	3
  1781  0109  0086               	movwf	6
  1782  010A  0187               	clrf	7
  1783  010B  3001               	movlw	1
  1784  010C  0781               	addwf	1,f
  1785  010D  3141               	addfsr 1,1
  1786  010E  1803               	skipnc
  1787  010F  0A81               	incf	1,f
  1788  0110  0008               	return
  1789  0111                     i1l1283:	
  1790                           
  1791                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  1792  0111  0831               	movf	ringbuf_put@rb,w
  1793  0112  3E03               	addlw	3
  1794  0113  0086               	movwf	6
  1795  0114  0187               	clrf	7
  1796  0115  3000               	movlw	0
  1797  0116  3FC0               	movwi [0]fsr1
  1798  0117  3FC1               	movwi [1]fsr1
  1799  0118  0008               	return
  1800  0119                     __end_of_ringbuf_put:	
  1801                           
  1802                           	psect	text13
  1803  0278                     __ptext13:	
  1804 ;; *************** function _interrupt_TXIF *****************
  1805 ;; Defined at:
  1806 ;;		line 248 in file "../My_header\My_header.h"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;		None               void
  1813 ;; Registers used:
  1814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1820 ;;      Params:         0       0       0       0       0       0
  1821 ;;      Locals:         0       0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0
  1823 ;;      Totals:         0       0       0       0       0       0
  1824 ;;Total ram usage:        0 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    2
  1827 ;; This function calls:
  1828 ;;		_ringbuf_num
  1829 ;;		_ringbuf_pop
  1830 ;; This function is called by:
  1831 ;;		_isr
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _interrupt_TXIF
  1837  0278                     _interrupt_TXIF:	
  1838                           
  1839                           ;My_header\My_header.h: 249: if (PIE1bits.TXIE && PIR1bits.TXIF) {
  1840                           
  1841                           ;incstack = 0
  1842                           ; Regs used in _interrupt_TXIF: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1843  0278  0021               	movlb	1	; select bank1
  1844  0279  1E11               	btfss	17,4	;volatile
  1845  027A  0008               	return
  1846  027B  0020               	movlb	0	; select bank0
  1847  027C  1E11               	btfss	17,4	;volatile
  1848  027D  0008               	return
  1849                           
  1850                           ;My_header\My_header.h: 250: PIR1bits.TXIF = 0;
  1851  027E  1211               	bcf	17,4	;volatile
  1852                           
  1853                           ;My_header\My_header.h: 251: if (ringbuf_num(&tx_buf) > 0) {
  1854  027F  302A               	movlw	(low (_tx_buf| 0))& (0+255)
  1855  0280  3181  2119  3182   	fcall	_ringbuf_num
  1856  0283  0870               	movf	?_ringbuf_num,w
  1857  0284  0471               	iorwf	?_ringbuf_num+1,w
  1858  0285  1903               	btfsc	3,2
  1859  0286  2A8D               	goto	i1l160
  1860                           
  1861                           ;My_header\My_header.h: 252: TXREG = ringbuf_pop(&tx_buf);
  1862  0287  302A               	movlw	(low (_tx_buf| 0))& (0+255)
  1863  0288  3181  216B         	fcall	_ringbuf_pop
  1864  028A  0023               	movlb	3	; select bank3
  1865  028B  009A               	movwf	26	;volatile
  1866                           
  1867                           ;My_header\My_header.h: 253: } else {
  1868  028C  0008               	return
  1869  028D                     i1l160:	
  1870                           
  1871                           ;My_header\My_header.h: 254: PIE1bits.TXIE = 0;
  1872  028D  0021               	movlb	1	; select bank1
  1873  028E  1211               	bcf	17,4	;volatile
  1874  028F  0008               	return
  1875  0290                     __end_of_interrupt_TXIF:	
  1876                           
  1877                           	psect	text14
  1878  016B                     __ptext14:	
  1879 ;; *************** function _ringbuf_pop *****************
  1880 ;; Defined at:
  1881 ;;		line 64 in file "../My_header\My_ringbuf.h"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  rb              1    wreg     PTR struct ringbuf
  1884 ;;		 -> tx_buf(7), 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  rb              1    1[BANK0 ] PTR struct ringbuf
  1887 ;;		 -> tx_buf(7), 
  1888 ;;  ret             1    0[BANK0 ] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      unsigned char 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1898 ;;      Params:         0       0       0       0       0       0
  1899 ;;      Locals:         0       2       0       0       0       0
  1900 ;;      Temps:          6       0       0       0       0       0
  1901 ;;      Totals:         6       2       0       0       0       0
  1902 ;;Total ram usage:        8 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    1
  1905 ;; This function calls:
  1906 ;;		_ringbuf_num
  1907 ;; This function is called by:
  1908 ;;		_interrupt_TXIF
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _ringbuf_pop
  1914  016B                     _ringbuf_pop:	
  1915                           
  1916                           ;incstack = 0
  1917                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1918                           ;ringbuf_pop@rb stored from wreg
  1919  016B  0020               	movlb	0	; select bank0
  1920  016C  00B2               	movwf	ringbuf_pop@rb
  1921                           
  1922                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  1923  016D  0832               	movf	ringbuf_pop@rb,w
  1924  016E  3181  2119  3181   	fcall	_ringbuf_num
  1925  0171  0870               	movf	?_ringbuf_num,w
  1926  0172  0471               	iorwf	?_ringbuf_num+1,w
  1927  0173  1903               	btfsc	3,2
  1928  0174  29B7               	goto	i1l1301
  1929                           
  1930                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  1931  0175  0020               	movlb	0	; select bank0
  1932  0176  0832               	movf	ringbuf_pop@rb,w
  1933  0177  0086               	movwf	6
  1934  0178  0187               	clrf	7
  1935  0179  0832               	movf	ringbuf_pop@rb,w
  1936  017A  3E05               	addlw	5
  1937  017B  0084               	movwf	4
  1938  017C  0185               	clrf	5
  1939  017D  0800               	movf	0,w
  1940  017E  0701               	addwf	1,w
  1941  017F  00F7               	movwf	??_ringbuf_pop
  1942  0180  0877               	movf	??_ringbuf_pop,w
  1943  0181  0086               	movwf	6
  1944  0182  0187               	clrf	7
  1945  0183  0801               	movf	1,w
  1946  0184  00F8               	movwf	??_ringbuf_pop+1
  1947  0185  0878               	movf	??_ringbuf_pop+1,w
  1948  0186  00B1               	movwf	ringbuf_pop@ret
  1949                           
  1950                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  1951  0187  0A32               	incf	ringbuf_pop@rb,w
  1952  0188  0086               	movwf	6
  1953  0189  0187               	clrf	7
  1954  018A  3F40               	moviw [0]fsr1
  1955  018B  00F7               	movwf	??_ringbuf_pop
  1956  018C  3F41               	moviw [1]fsr1
  1957  018D  00F8               	movwf	??_ringbuf_pop+1
  1958  018E  0832               	movf	ringbuf_pop@rb,w
  1959  018F  3E05               	addlw	5
  1960  0190  0086               	movwf	6
  1961  0191  0187               	clrf	7
  1962  0192  3F40               	moviw [0]fsr1
  1963  0193  00F9               	movwf	??_ringbuf_pop+2
  1964  0194  3F41               	moviw [1]fsr1
  1965  0195  00FA               	movwf	??_ringbuf_pop+3
  1966  0196  0879               	movf	??_ringbuf_pop+2,w
  1967  0197  3E01               	addlw	1
  1968  0198  00FB               	movwf	??_ringbuf_pop+4
  1969  0199  3000               	movlw	0
  1970  019A  3D7A               	addwfc	??_ringbuf_pop+3,w
  1971  019B  00FC               	movwf	??_ringbuf_pop+5
  1972  019C  0878               	movf	??_ringbuf_pop+1,w
  1973  019D  027C               	subwf	??_ringbuf_pop+5,w
  1974  019E  1D03               	skipz
  1975  019F  29A2               	goto	u50_25
  1976  01A0  0877               	movf	??_ringbuf_pop,w
  1977  01A1  027B               	subwf	??_ringbuf_pop+4,w
  1978  01A2                     u50_25:	
  1979  01A2  1803               	skipnc
  1980  01A3  29AE               	goto	i1l1293
  1981                           
  1982                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  1983  01A4  0832               	movf	ringbuf_pop@rb,w
  1984  01A5  3E05               	addlw	5
  1985  01A6  0086               	movwf	6
  1986  01A7  0187               	clrf	7
  1987  01A8  3001               	movlw	1
  1988  01A9  0781               	addwf	1,f
  1989  01AA  3141               	addfsr 1,1
  1990  01AB  1803               	skipnc
  1991  01AC  0A81               	incf	1,f
  1992                           
  1993                           ;My_header\My_ringbuf.h: 69: } else {
  1994  01AD  29B5               	goto	i1l1295
  1995  01AE                     i1l1293:	
  1996                           
  1997                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  1998  01AE  0832               	movf	ringbuf_pop@rb,w
  1999  01AF  3E05               	addlw	5
  2000  01B0  0086               	movwf	6
  2001  01B1  0187               	clrf	7
  2002  01B2  3000               	movlw	0
  2003  01B3  3FC0               	movwi [0]fsr1
  2004  01B4  3FC1               	movwi [1]fsr1
  2005  01B5                     i1l1295:	
  2006                           
  2007                           ;My_header\My_ringbuf.h: 71: }
  2008                           ;My_header\My_ringbuf.h: 72: return ret;
  2009  01B5  0831               	movf	ringbuf_pop@ret,w
  2010                           
  2011                           ;My_header\My_ringbuf.h: 73: } else {
  2012  01B6  0008               	return
  2013  01B7                     i1l1301:	
  2014                           
  2015                           ;My_header\My_ringbuf.h: 74: return 0;
  2016  01B7  3000               	movlw	0
  2017  01B8  0008               	return
  2018  01B9                     __end_of_ringbuf_pop:	
  2019                           
  2020                           	psect	text15
  2021  0119                     __ptext15:	
  2022 ;; *************** function _ringbuf_num *****************
  2023 ;; Defined at:
  2024 ;;		line 31 in file "../My_header\My_ringbuf.h"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  rb              1    wreg     PTR struct ringbuf
  2027 ;;		 -> tx_buf(7), 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  rb              1    6[COMMON] PTR struct ringbuf
  2030 ;;		 -> tx_buf(7), 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2    0[COMMON] unsigned int 
  2033 ;; Registers used:
  2034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2040 ;;      Params:         2       0       0       0       0       0
  2041 ;;      Locals:         1       0       0       0       0       0
  2042 ;;      Temps:          4       0       0       0       0       0
  2043 ;;      Totals:         7       0       0       0       0       0
  2044 ;;Total ram usage:        7 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_ringbuf_put
  2050 ;;		_ringbuf_pop
  2051 ;;		_interrupt_TXIF
  2052 ;;		_ringbuf_backspace
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _ringbuf_num
  2058  0119                     _ringbuf_num:	
  2059                           
  2060                           ;incstack = 0
  2061                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  2062                           ;ringbuf_num@rb stored from wreg
  2063  0119  00F6               	movwf	ringbuf_num@rb
  2064                           
  2065                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  2066  011A  0876               	movf	ringbuf_num@rb,w
  2067  011B  3E05               	addlw	5
  2068  011C  0086               	movwf	6
  2069  011D  0187               	clrf	7
  2070  011E  3F40               	moviw [0]fsr1
  2071  011F  00F2               	movwf	??_ringbuf_num
  2072  0120  3F41               	moviw [1]fsr1
  2073  0121  00F3               	movwf	??_ringbuf_num+1
  2074  0122  0876               	movf	ringbuf_num@rb,w
  2075  0123  3E03               	addlw	3
  2076  0124  0086               	movwf	6
  2077  0125  0187               	clrf	7
  2078  0126  3F40               	moviw [0]fsr1
  2079  0127  00F4               	movwf	??_ringbuf_num+2
  2080  0128  3F41               	moviw [1]fsr1
  2081  0129  00F5               	movwf	??_ringbuf_num+3
  2082  012A  0873               	movf	??_ringbuf_num+1,w
  2083  012B  0275               	subwf	??_ringbuf_num+3,w
  2084  012C  1D03               	skipz
  2085  012D  2930               	goto	u46_25
  2086  012E  0872               	movf	??_ringbuf_num,w
  2087  012F  0274               	subwf	??_ringbuf_num+2,w
  2088  0130                     u46_25:	
  2089  0130  1C03               	skipc
  2090  0131  294A               	goto	i1l1271
  2091                           
  2092                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  2093  0132  0876               	movf	ringbuf_num@rb,w
  2094  0133  3E03               	addlw	3
  2095  0134  0086               	movwf	6
  2096  0135  0187               	clrf	7
  2097  0136  0876               	movf	ringbuf_num@rb,w
  2098  0137  3E05               	addlw	5
  2099  0138  0084               	movwf	4
  2100  0139  0185               	clrf	5
  2101  013A  3F00               	moviw [0]fsr0
  2102  013B  00F2               	movwf	??_ringbuf_num
  2103  013C  3F01               	moviw [1]fsr0
  2104  013D  00F3               	movwf	??_ringbuf_num+1
  2105  013E  09F2               	comf	??_ringbuf_num,f
  2106  013F  09F3               	comf	??_ringbuf_num+1,f
  2107  0140  0AF2               	incf	??_ringbuf_num,f
  2108  0141  1903               	skipnz
  2109  0142  0AF3               	incf	??_ringbuf_num+1,f
  2110  0143  3F40               	moviw [0]fsr1
  2111  0144  0772               	addwf	??_ringbuf_num,w
  2112  0145  00F0               	movwf	?_ringbuf_num
  2113  0146  3F41               	moviw [1]fsr1
  2114  0147  3D73               	addwfc	??_ringbuf_num+1,w
  2115  0148  00F1               	movwf	?_ringbuf_num+1
  2116                           
  2117                           ;My_header\My_ringbuf.h: 34: } else {
  2118  0149  0008               	return
  2119  014A                     i1l1271:	
  2120                           
  2121                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  2122  014A  0876               	movf	ringbuf_num@rb,w
  2123  014B  3E03               	addlw	3
  2124  014C  0086               	movwf	6
  2125  014D  0187               	clrf	7
  2126  014E  0876               	movf	ringbuf_num@rb,w
  2127  014F  3E05               	addlw	5
  2128  0150  0084               	movwf	4
  2129  0151  0185               	clrf	5
  2130  0152  3F00               	moviw [0]fsr0
  2131  0153  00F2               	movwf	??_ringbuf_num
  2132  0154  3F01               	moviw [1]fsr0
  2133  0155  00F3               	movwf	??_ringbuf_num+1
  2134  0156  09F2               	comf	??_ringbuf_num,f
  2135  0157  09F3               	comf	??_ringbuf_num+1,f
  2136  0158  0AF2               	incf	??_ringbuf_num,f
  2137  0159  1903               	skipnz
  2138  015A  0AF3               	incf	??_ringbuf_num+1,f
  2139  015B  0A76               	incf	ringbuf_num@rb,w
  2140  015C  0084               	movwf	4
  2141  015D  0185               	clrf	5
  2142  015E  3F00               	moviw [0]fsr0
  2143  015F  0772               	addwf	??_ringbuf_num,w
  2144  0160  00F4               	movwf	??_ringbuf_num+2
  2145  0161  3F01               	moviw [1]fsr0
  2146  0162  3D73               	addwfc	??_ringbuf_num+1,w
  2147  0163  00F5               	movwf	??_ringbuf_num+3
  2148  0164  3F40               	moviw [0]fsr1
  2149  0165  0774               	addwf	??_ringbuf_num+2,w
  2150  0166  00F0               	movwf	?_ringbuf_num
  2151  0167  3F41               	moviw [1]fsr1
  2152  0168  3D75               	addwfc	??_ringbuf_num+3,w
  2153  0169  00F1               	movwf	?_ringbuf_num+1
  2154  016A  0008               	return
  2155  016B                     __end_of_ringbuf_num:	
  2156  007E                     btemp	set	126	;btemp
  2157  007E                     wtemp	set	126
  2158  007E                     wtemp0	set	126
  2159  0080                     wtemp1	set	128
  2160  0082                     wtemp2	set	130
  2161  0084                     wtemp3	set	132
  2162  0086                     wtemp4	set	134
  2163  0088                     wtemp5	set	136
  2164  007F                     wtemp6	set	127
  2165  007E                     ttemp	set	126
  2166  007E                     ttemp0	set	126
  2167  0081                     ttemp1	set	129
  2168  0084                     ttemp2	set	132
  2169  0087                     ttemp3	set	135
  2170  007F                     ttemp4	set	127
  2171  007E                     ltemp	set	126
  2172  007E                     ltemp0	set	126
  2173  0082                     ltemp1	set	130
  2174  0086                     ltemp2	set	134
  2175  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      32
    BANK1            80     44      44
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ringbuf_put_str@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_put_num@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    rx_buf.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_put@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf(BANK1[40]), 

    ringbuf_init@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _interrupt_TXIF->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num

Critical Paths under _main in BANK0

    _main->_ringbuf_init

Critical Paths under _isr in BANK0

    _isr->_tx_send
    _tx_send->_ringbuf_put
    _interrupt_TXIF->_ringbuf_pop

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0     893
                                             11 BANK0      2     2      0
                                              0 BANK1     44    44      0
                                _ADC
                           _ADC_init
                           _PWM_init
                            _PWM_set
                          _UART_init
                              _drive
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          2     2      0      31
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          2     2      0      62
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         5     2      3     382
                                              6 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _drive                                                1     1      0      31
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_set                                              1     1      0      62
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             1     1      0      62
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     2      2      31
                                              6 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0    2268
                                              3 BANK0      3     3      0
                     _interrupt_TXIF
                            _tx_send
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              2     2      0    1171
                                              1 BANK0      2     2      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ringbuf_put                                          8     7      1    1140
                                              7 COMMON     7     6      1
                                              0 BANK0      1     1      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _interrupt_TXIF                                       0     0      0    1063
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (4) _ringbuf_pop                                          8     8      0     678
                                              7 COMMON     6     6      0
                                              0 BANK0      2     2      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (5) _ringbuf_num                                          7     5      2     385
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _ADC_init
   _PWM_init
   _PWM_set
   _UART_init
   _drive
   _ringbuf_init
   _timer0_init
   _timer1_init

 _isr (ROOT)
   _interrupt_TXIF
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _tx_send
     _ringbuf_put
       _ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      D      20       6       40.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2C      2C       8       55.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      5A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jul 18 21:12:18 2015

             __CFG_CP$OFF 0000                        l89 024C                        _d1 0027  
  __end_of_interrupt_TXIF 0290                       l101 0238                       l212 01BC  
                     l214 01C2                       l215 01C8                       l223 00A0  
                     l216 01CE                       l217 01E3                       _ADC 0225  
                     _PR2 001B              __CFG_CPD$OFF 0000                       u665 0092  
                     u687 00BD                       _isr 0004              __CFG_BORV$LO 0000  
                     wreg 0009                      ?_ADC 0037              __CFG_LVP$OFF 0000  
                    l1311 025A                      l1415 01D4                      l1511 0060  
                    l1541 00B8                      l1535 00B1                      l1539 00B7  
                    ?_isr 0070                      _RCIF 008D                      _SPEN 0CEF  
            __CFG_WRT$OFF 0000                      _main 0034                      fsr0h 0005  
                    fsr1h 0007                      fsr0l 0004                      indf0 0000  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
                    ltemp 007E           __end_of_PWM_set 02B3                      start 0020  
                    ttemp 007E          __end_of_ADC_init 0278                      wtemp 007E  
           __CFG_IESO$OFF 0000                     ??_ADC 0039                     ADC@ch 003A  
           ADC_init@p_ref 0037                     ??_isr 0034             __CFG_PLLEN$ON 0000  
         ?_interrupt_TXIF 0070                     ?_main 0070                     _ADRES 009B  
                   _BRG16 0CFB             __CFG_WDTE$OFF 0000                     _LATA2 0862  
                   _LATA3 0863                     _LATB4 086C                     _LATA6 0866  
                   _LATB5 086D                     _LATA7 0867                     i1l202 001C  
                   i1l160 028D                     _RCREG 0199                     _RCSTA 019D  
                   _TMR1H 0017                     _TMR1L 0016                     u50_25 01A2  
                   u46_25 0130                     u47_25 00D6                     u48_25 0105  
                   _TRISA 008C                     _TRISB 008D                     _TXREG 019A  
                   _TXSTA 019E            __CFG_FCMEN$OFF 0000        __size_of_UART_init 000E  
                   _drive 01B9            __CFG_BOREN$OFF 0000                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
        __end_of_PWM_init 0206                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __end_of_tx_send 02CD  
          __CFG_MCLRE$OFF 0000           __initialization 0022              __end_of_main 00C3  
     ringbuf_init@bufsize 0038                    ??_main 003C                    ?_drive 0070  
                  _CCPR1L 0291                    _CCPR2L 0298                    _ANSELA 018C  
                  _ANSELB 018D                 ??_PWM_set 0037                    i1l1301 01B7  
                  i1l1271 014A                    i1l1283 0111                    i1l1293 01AE  
                  i1l1295 01B5                    _FVRCON 0117                    _OSCCON 0099  
                  _TMR0IF 005A                    _TMR1IF 0088                    _SPBRGH 019C  
                  _SPBRGL 019B             main@last_scan 003E            __CFG_PWRTE$OFF 0000  
            ?_ringbuf_pop 0070              ?_ringbuf_num 0070              ?_ringbuf_put 0077  
       __end_of_UART_init 02C1              ?_timer0_init 0070              ?_timer1_init 0070  
                  _rx_buf 0020                    _tx_buf 002A                 ?_ADC_init 0070  
               ??_tx_send 0032   __end_of__initialization 0031            __pcstackCOMMON 0070  
            __pidataBANK0 02D3             __end_of_drive 01E4                 ?_PWM_init 0070  
          _OPTION_REGbits 0095                ??_ADC_init 0037                   ??_drive 0037  
              __pbssBANK0 0020                __pmaintext 0034          ??_interrupt_TXIF 007D  
              __pintentry 0004                ??_PWM_init 0037      timer1_init@prescaler 0038  
                 _PWM_set 02A3              PWM_set@value 0037             ?_ringbuf_init 0037  
    __size_of_ringbuf_pop 004E      __size_of_ringbuf_num 0052      __size_of_ringbuf_put 0056  
         __CFG_STVREN$OFF 0000      __size_of_timer0_init 001B      __size_of_timer1_init 0013  
                 __ptext1 0290                   __ptext2 0244                   __ptext3 0206  
                 __ptext4 01B9                   __ptext5 02B3                   __ptext6 02A3  
                 __ptext7 01E4                   __ptext8 025F                   __ptext9 0225  
            __size_of_ADC 001F                 _T1CONbits 0018                 _T2CONbits 001C  
            __size_of_isr 001C                   main@buf 00A0                   clrloop0 02CE  
                 main@sub 00CA                   _tx_send 02C1      end_of_initialization 0031  
          ??_ringbuf_init 003A                 _UART_init 02B3          __CFG_FOSC$INTOSC 0000  
       __size_of_ADC_init 0019               _CCP1CONbits 0293               _CCP2CONbits 029A  
          ringbuf_init@rb 003B            ringbuf_pop@ret 0031                ?_UART_init 0070  
     start_initialization 0022               __end_of_ADC 0244         __size_of_PWM_init 0022  
             __end_of_isr 0020               _CCPTMRSbits 029E               __pdataBANK0 003E  
               ___latbits 0001             __pcstackBANK0 0031             __pcstackBANK1 00A0  
    __end_of_ringbuf_init 0225          tx_send@asciicode 0033                  ?_PWM_set 0070  
             ??_UART_init 0037                  _ADC_init 025F            __size_of_drive 002B  
                ?_tx_send 0070  ringbuf_init@internal_buf 0037                 clear_ram0 02CD  
                _PIE1bits 0091                  _PIR1bits 0011             ??_ringbuf_pop 0077  
           ??_ringbuf_num 0072             ??_ringbuf_put 0078             ??_timer0_init 0037  
           ??_timer1_init 0037                _ADCON0bits 009D                _ADCON1bits 009E  
                _PWM_init 01E4   __size_of_interrupt_TXIF 0018             ringbuf_pop@rb 0032  
           ringbuf_num@rb 0076             ringbuf_put@rb 0031          __size_of_PWM_set 0010  
              _CCPR1Lbits 0291                _CCPR2Lbits 0298       __end_of_ringbuf_pop 01B9  
     __end_of_ringbuf_num 016B       __end_of_ringbuf_put 0119       __end_of_timer0_init 025F  
   __size_of_ringbuf_init 001F       __end_of_timer1_init 02A3      timer0_init@prescaler 0038  
                __ptext11 02C1                  __ptext12 00C3                  __ptext13 0278  
                __ptext14 016B                  __ptext15 0119          __size_of_tx_send 000C  
           __size_of_main 008F              _ringbuf_init 0206                  main@scan 00C8  
                drive@dir 0037                _INTCONbits 000B      ringbuf_put@asciicode 0077  
                isr@ascii 0036                  intlevel1 0000         __CFG_CLKOUTEN$OFF 0000  
             _ringbuf_pop 016B               _ringbuf_num 0119               _ringbuf_put 00C3  
             _timer0_init 0244               _timer1_init 0290            _interrupt_TXIF 0278  
