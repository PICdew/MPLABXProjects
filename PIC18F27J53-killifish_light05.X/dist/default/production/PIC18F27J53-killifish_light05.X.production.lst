

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Jan 12 20:51:36 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    17                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81                           	dabs	1,0xD00,48,_BDT
    82                           	dabs	1,0xD38,8,_CtrlTrfData
    83                           	dabs	1,0xD30,8,_SetupPkt
    84  0000                     
    85                           	psect	idataBANK1
    86  0000'                    __pidataBANK1:
    87                           	opt stack 0
    88                           
    89                           ;initializer for I2C_LCD_SetCursor@F8685
    90  0000' 00                 	db	0
    91  0001' 40                 	db	64
    92                           
    93                           ;initializer for ST7032_cursor@F8640
    94  0002' 00                 	db	0
    95  0003' 40                 	db	64
    96                           
    97                           ;initializer for epoch_to_caltime@month_cache
    98  0004' 01                 	db	1
    99                           
   100                           	psect	mediumconst
   101  0000'                    __pmediumconst:
   102                           	opt stack 0
   103  0000' 00                 	db	0
   104  0001'                    _dpowers:
   105                           	opt stack 0
   106  0001' 0001               	dw	1
   107  0003' 000A               	dw	10
   108  0005' 0064               	dw	100
   109  0007' 03E8               	dw	1000
   110  0009' 2710               	dw	10000
   111  000B'                    __end_of_dpowers:
   112                           	opt stack 0
   113  000B'                    _USB_SD_Ptr:
   114                           	opt stack 0
   115  000B' 00'                	db	low _sd000
   116  000C' 00'                	db	high _sd000
   117  000D' 00'                	db	low _sd001
   118  000E' 00'                	db	high _sd001
   119  000F' 00'                	db	low _sd002
   120  0010' 00'                	db	high _sd002
   121  0011'                    __end_of_USB_SD_Ptr:
   122                           	opt stack 0
   123  0011'                    _USB_CD_Ptr:
   124                           	opt stack 0
   125  0011' 00'                	db	low _configDescriptor1
   126  0012' 00'                	db	high _configDescriptor1
   127  0013'                    __end_of_USB_CD_Ptr:
   128                           	opt stack 0
   129  0013'                    _configDescriptor1:
   130                           	opt stack 0
   131  0013' 09                 	db	9
   132  0014' 02                 	db	2
   133  0015' 43                 	db	67
   134  0016' 00                 	db	0
   135  0017' 02                 	db	2
   136  0018' 01                 	db	1
   137  0019' 00                 	db	0
   138  001A' C0                 	db	192
   139  001B' 32                 	db	50
   140  001C' 09                 	db	9
   141  001D' 04                 	db	4
   142  001E' 00                 	db	0
   143  001F' 00                 	db	0
   144  0020' 01                 	db	1
   145  0021' 02                 	db	2
   146  0022' 02                 	db	2
   147  0023' 01                 	db	1
   148  0024' 00                 	db	0
   149  0025' 05                 	db	5
   150  0026' 24                 	db	36
   151  0027' 00                 	db	0
   152  0028' 10                 	db	16
   153  0029' 01                 	db	1
   154  002A' 04                 	db	4
   155  002B' 24                 	db	36
   156  002C' 02                 	db	2
   157  002D' 02                 	db	2
   158  002E' 05                 	db	5
   159  002F' 24                 	db	36
   160  0030' 06                 	db	6
   161  0031' 00                 	db	0
   162  0032' 01                 	db	1
   163  0033' 05                 	db	5
   164  0034' 24                 	db	36
   165  0035' 01                 	db	1
   166  0036' 00                 	db	0
   167  0037' 01                 	db	1
   168  0038' 07                 	db	7
   169  0039' 05                 	db	5
   170  003A' 81                 	db	129
   171  003B' 03                 	db	3
   172  003C' 08                 	db	8
   173  003D' 00                 	db	0
   174  003E' 02                 	db	2
   175  003F' 09                 	db	9
   176  0040' 04                 	db	4
   177  0041' 01                 	db	1
   178  0042' 00                 	db	0
   179  0043' 02                 	db	2
   180  0044' 0A                 	db	10
   181  0045' 00                 	db	0
   182  0046' 00                 	db	0
   183  0047' 00                 	db	0
   184  0048' 07                 	db	7
   185  0049' 05                 	db	5
   186  004A' 02                 	db	2
   187  004B' 02                 	db	2
   188  004C' 40                 	db	64
   189  004D' 00                 	db	0
   190  004E' 00                 	db	0
   191  004F' 07                 	db	7
   192  0050' 05                 	db	5
   193  0051' 82                 	db	130
   194  0052' 02                 	db	2
   195  0053' 40                 	db	64
   196  0054' 00                 	db	0
   197  0055' 00                 	db	0
   198  0056'                    __end_of_configDescriptor1:
   199                           	opt stack 0
   200  0056'                    _sd001:
   201                           	opt stack 0
   202  0056' 34                 	db	52
   203  0057' 03                 	db	3
   204  0058' 004D               	dw	77
   205  005A' 0069               	dw	105
   206  005C' 0063               	dw	99
   207  005E' 0072               	dw	114
   208  0060' 006F               	dw	111
   209  0062' 0063               	dw	99
   210  0064' 0068               	dw	104
   211  0066' 0069               	dw	105
   212  0068' 0070               	dw	112
   213  006A' 0020               	dw	32
   214  006C' 0054               	dw	84
   215  006E' 0065               	dw	101
   216  0070' 0063               	dw	99
   217  0072' 0068               	dw	104
   218  0074' 006E               	dw	110
   219  0076' 006F               	dw	111
   220  0078' 006C               	dw	108
   221  007A' 006F               	dw	111
   222  007C' 0067               	dw	103
   223  007E' 0079               	dw	121
   224  0080' 0020               	dw	32
   225  0082' 0049               	dw	73
   226  0084' 006E               	dw	110
   227  0086' 0063               	dw	99
   228  0088' 002E               	dw	46
   229  008A'                    __end_of_sd001:
   230                           	opt stack 0
   231  008A'                    _sd002:
   232                           	opt stack 0
   233  008A' 34                 	db	52
   234  008B' 03                 	db	3
   235  008C' 0043               	dw	67
   236  008E' 0044               	dw	68
   237  0090' 0043               	dw	67
   238  0092' 0020               	dw	32
   239  0094' 0052               	dw	82
   240  0096' 0053               	dw	83
   241  0098' 002D               	dw	45
   242  009A' 0032               	dw	50
   243  009C' 0033               	dw	51
   244  009E' 0032               	dw	50
   245  00A0' 0020               	dw	32
   246  00A2' 0045               	dw	69
   247  00A4' 006D               	dw	109
   248  00A6' 0075               	dw	117
   249  00A8' 006C               	dw	108
   250  00AA' 0061               	dw	97
   251  00AC' 0074               	dw	116
   252  00AE' 0069               	dw	105
   253  00B0' 006F               	dw	111
   254  00B2' 006E               	dw	110
   255  00B4' 0020               	dw	32
   256  00B6' 0044               	dw	68
   257  00B8' 0065               	dw	101
   258  00BA' 006D               	dw	109
   259  00BC' 006F               	dw	111
   260  00BE'                    __end_of_sd002:
   261                           	opt stack 0
   262  00BE'                    _weekday_3char:
   263                           	opt stack 0
   264  00BE' 53                 	db	83
   265  00BF' 55                 	db	85
   266  00C0' 4E                 	db	78
   267  00C1' 00                 	db	0
   268  00C2' 4D                 	db	77
   269  00C3' 4F                 	db	79
   270  00C4' 4E                 	db	78
   271  00C5' 00                 	db	0
   272  00C6' 54                 	db	84
   273  00C7' 55                 	db	85
   274  00C8' 45                 	db	69
   275  00C9' 00                 	db	0
   276  00CA' 57                 	db	87
   277  00CB' 45                 	db	69
   278  00CC' 44                 	db	68
   279  00CD' 00                 	db	0
   280  00CE' 54                 	db	84
   281  00CF' 48                 	db	72
   282  00D0' 55                 	db	85
   283  00D1' 00                 	db	0
   284  00D2' 46                 	db	70
   285  00D3' 52                 	db	82
   286  00D4' 49                 	db	73
   287  00D5' 00                 	db	0
   288  00D6' 53                 	db	83
   289  00D7' 41                 	db	65
   290  00D8' 54                 	db	84
   291  00D9' 00                 	db	0
   292  00DA'                    __end_of_weekday_3char:
   293                           	opt stack 0
   294  00DA'                    _device_dsc:
   295                           	opt stack 0
   296  00DA' 12                 	db	18
   297  00DB' 01                 	db	1
   298  00DC' 0200               	dw	512
   299  00DE' 02                 	db	2
   300  00DF' 00                 	db	0
   301  00E0' 00                 	db	0
   302  00E1' 08                 	db	8
   303  00E2' 04D8               	dw	1240
   304  00E4' 000A               	dw	10
   305  00E6' 0100               	dw	256
   306  00E8' 01                 	db	1
   307  00E9' 02                 	db	2
   308  00EA' 00                 	db	0
   309  00EB' 01                 	db	1
   310  00EC'                    __end_of_device_dsc:
   311                           	opt stack 0
   312  00EC'                    _sd000:
   313                           	opt stack 0
   314  00EC' 04                 	db	4
   315  00ED' 03                 	db	3
   316  00EE' 0409               	dw	1033
   317  00F0'                    __end_of_sd000:
   318                           	opt stack 0
   319  0000                     _PPSCONbits	set	3775
   320  0000                     _RPOR3	set	3779
   321  0000                     _RPOR4	set	3780
   322  0000                     _RPOR5	set	3781
   323  0000                     _ANCON0	set	3912
   324  0000                     _ANCON1	set	3913
   325  0000                     _CCP3CONbits	set	3861
   326  0000                     _CCP4CONbits	set	3858
   327  0000                     _CCPR3L	set	3862
   328  0000                     _CCPR3Lbits	set	3862
   329  0000                     _CCPR4L	set	3859
   330  0000                     _CCPR4Lbits	set	3859
   331  0000                     _CCPTMRS0bits	set	3922
   332  0000                     _CCPTMRS1bits	set	3921
   333  0000                     _PADCFG1bits	set	3900
   334  0000                     _RTCCAL	set	3902
   335  0000                     _RTCCFGbits	set	3903
   336  0000                     _RTCVALH	set	3899
   337  0000                     _RTCVALL	set	3898
   338  0000                     _T5CONbits	set	3874
   339  0000                     _UADDR	set	3896
   340  0000                     _UCFG	set	3897
   341  0000                     _UEIE	set	3895
   342  0000                     _UEP0bits	set	3878
   343  0000                     _UIE	set	3894
   344  0000                     _UIEbits	set	3894
   345  0000                     _UEP0	set	3878
   346  0000                     _UEP1	set	3879
   347  0000                     _ADRES	set	4035
   348  0000                     _ADCON0bits	set	4034
   349  0000                     _ADCON1bits	set	4033
   350  0000                     _BAUDCON1bits	set	3966
   351  0000                     _CCP1CONbits	set	4026
   352  0000                     _CCP2CONbits	set	4020
   353  0000                     _CCPR1L	set	4027
   354  0000                     _CCPR1Lbits	set	4027
   355  0000                     _CCPR2L	set	4021
   356  0000                     _CCPR2Lbits	set	4021
   357  0000                     _CTMUCONH	set	4019
   358  0000                     _CTMUCONHbits	set	4019
   359  0000                     _CTMUCONL	set	4018
   360  0000                     _CTMUCONLbits	set	4018
   361  0000                     _CTMUICON	set	4017
   362  0000                     _EECON2	set	4007
   363  0000                     _INTCON2bits	set	4081
   364  0000                     _INTCONbits	set	4082
   365  0000                     _IPR1bits	set	3999
   366  0000                     _IPR2bits	set	4002
   367  0000                     _IPR5bits	set	3993
   368  0000                     _LATBbits	set	3978
   369  0000                     _OSCCONbits	set	4051
   370  0000                     _OSCTUNEbits	set	3995
   371  0000                     _PIE1bits	set	3997
   372  0000                     _PIE2bits	set	4000
   373  0000                     _PIE5bits	set	3985
   374  0000                     _PIR1bits	set	3998
   375  0000                     _PIR2bits	set	4001
   376  0000                     _PIR5bits	set	3992
   377  0000                     _PORTAbits	set	3968
   378  0000                     _PR2	set	4043
   379  0000                     _RCONbits	set	4048
   380  0000                     _RCREG1	set	4015
   381  0000                     _RCSTA1bits	set	4012
   382  0000                     _SPBRG1	set	4016
   383  0000                     _SPBRGH1	set	3967
   384  0000                     _SSP1ADD	set	4040
   385  0000                     _SSP1BUF	set	4041
   386  0000                     _SSP1CON1	set	4038
   387  0000                     _SSP1CON1bits	set	4038
   388  0000                     _SSP1CON2	set	4037
   389  0000                     _SSP1CON2bits	set	4037
   390  0000                     _SSP1STAT	set	4039
   391  0000                     _SSP1STATbits	set	4039
   392  0000                     _SSPBUF	set	4041
   393  0000                     _T0CONbits	set	4053
   394  0000                     _T1CONbits	set	4045
   395  0000                     _T2CONbits	set	4042
   396  0000                     _T3CONbits	set	3961
   397  0000                     _TMR1H	set	4047
   398  0000                     _TRISA	set	3986
   399  0000                     _TRISB	set	3987
   400  0000                     _TRISC	set	3988
   401  0000                     _TXREG1	set	4014
   402  0000                     _TXSTA1bits	set	4013
   403  0000                     _UCON	set	3941
   404  0000                     _UCONbits	set	3941
   405  0000                     _UEIR	set	3939
   406  0000                     _UIR	set	3938
   407  0000                     _UIRbits	set	3938
   408  0000                     _USTAT	set	3940
   409  0000                     _BCL1IF	set	32011
   410  0000                     _LATB2	set	31826
   411  0000                     _SSP1IF	set	31987
   412  00F0'                    STR_43:
   413  00F0' 09                 	db	9
   414  00F1' 2A                 	db	42
   415  00F2' 2A                 	db	42
   416  00F3' 2A                 	db	42
   417  00F4' 2A                 	db	42
   418  00F5' 2A                 	db	42
   419  00F6' 2A                 	db	42
   420  00F7' 2A                 	db	42
   421  00F8' 2A                 	db	42
   422  00F9' 2A                 	db	42
   423  00FA' 2A                 	db	42
   424  00FB' 2A                 	db	42
   425  00FC' 2A                 	db	42
   426  00FD' 2A                 	db	42
   427  00FE' 2A                 	db	42
   428  00FF' 2A                 	db	42
   429  0100' 2A                 	db	42
   430  0101' 2A                 	db	42
   431  0102' 2A                 	db	42
   432  0103' 2A                 	db	42
   433  0104' 2A                 	db	42
   434  0105' 2A                 	db	42
   435  0106' 2A                 	db	42
   436  0107' 2A                 	db	42
   437  0108' 2A                 	db	42
   438  0109' 2A                 	db	42
   439  010A' 2A                 	db	42
   440  010B' 0A                 	db	10
   441  010C' 09                 	db	9
   442  010D' 2A                 	db	42
   443  010E' 2A                 	db	42
   444  010F' 2A                 	db	42
   445  0110' 2A                 	db	42
   446  0111' 20                 	db	32
   447  0112' 4B                 	db	75	;'K'
   448  0113' 69                 	db	105	;'i'
   449  0114' 6C                 	db	108	;'l'
   450  0115' 6C                 	db	108	;'l'
   451  0116' 69                 	db	105	;'i'
   452  0117' 66                 	db	102	;'f'
   453  0118' 69                 	db	105	;'i'
   454  0119' 73                 	db	115	;'s'
   455  011A' 68                 	db	104	;'h'
   456  011B' 20                 	db	32
   457  011C' 4C                 	db	76	;'L'
   458  011D' 69                 	db	105	;'i'
   459  011E' 67                 	db	103	;'g'
   460  011F' 68                 	db	104	;'h'
   461  0120' 74                 	db	116	;'t'
   462  0121' 20                 	db	32
   463  0122' 20                 	db	32
   464  0123' 2A                 	db	42
   465  0124' 2A                 	db	42
   466  0125' 2A                 	db	42
   467  0126' 2A                 	db	42
   468  0127' 0A                 	db	10
   469  0128' 09                 	db	9
   470  0129' 2A                 	db	42
   471  012A' 2A                 	db	42
   472  012B' 2A                 	db	42
   473  012C' 2A                 	db	42
   474  012D' 20                 	db	32
   475  012E' 4D                 	db	77	;'M'
   476  012F' 61                 	db	97	;'a'
   477  0130' 64                 	db	100	;'d'
   478  0131' 65                 	db	101	;'e'
   479  0132' 20                 	db	32
   480  0133' 62                 	db	98	;'b'
   481  0134' 79                 	db	121	;'y'
   482  0135' 20                 	db	32
   483  0136' 40                 	db	64	;'@'
   484  0137' 52                 	db	82	;'R'
   485  0138' 79                 	db	121	;'y'
   486  0139' 6F                 	db	111	;'o'
   487  013A' 6B                 	db	107	;'k'
   488  013B' 65                 	db	101	;'e'
   489  013C' 72                 	db	114	;'r'
   490  013D' 69                 	db	105	;'i'
   491  013E' 20                 	db	32
   492  013F' 2A                 	db	42
   493  0140' 2A                 	db	42
   494  0141' 2A                 	db	42
   495  0142' 2A                 	db	42
   496  0143' 0A                 	db	10
   497  0144' 09                 	db	9
   498  0145' 2A                 	db	42
   499  0146' 2A                 	db	42
   500  0147' 2A                 	db	42
   501  0148' 2A                 	db	42
   502  0149' 2A                 	db	42
   503  014A' 2A                 	db	42
   504  014B' 2A                 	db	42
   505  014C' 2A                 	db	42
   506  014D' 2A                 	db	42
   507  014E' 2A                 	db	42
   508  014F' 2A                 	db	42
   509  0150' 2A                 	db	42
   510  0151' 2A                 	db	42
   511  0152' 2A                 	db	42
   512  0153' 2A                 	db	42
   513  0154' 2A                 	db	42
   514  0155' 2A                 	db	42
   515  0156' 2A                 	db	42
   516  0157' 2A                 	db	42
   517  0158' 2A                 	db	42
   518  0159' 2A                 	db	42
   519  015A' 2A                 	db	42
   520  015B' 2A                 	db	42
   521  015C' 2A                 	db	42
   522  015D' 2A                 	db	42
   523  015E' 2A                 	db	42
   524  015F' 0A                 	db	10
   525  0160' 0A                 	db	10
   526  0161' 09                 	db	9
   527  0162' 63                 	db	99	;'c'
   528  0163' 6F                 	db	111	;'o'
   529  0164' 6D                 	db	109	;'m'
   530  0165' 6D                 	db	109	;'m'
   531  0166' 61                 	db	97	;'a'
   532  0167' 6E                 	db	110	;'n'
   533  0168' 64                 	db	100	;'d'
   534  0169' 20                 	db	32
   535  016A' 09                 	db	9
   536  016B' 6F                 	db	111	;'o'
   537  016C' 70                 	db	112	;'p'
   538  016D' 65                 	db	101	;'e'
   539  016E' 6C                 	db	108	;'l'
   540  016F' 61                 	db	97	;'a'
   541  0170' 6E                 	db	110	;'n'
   542  0171' 64                 	db	100	;'d'
   543  0172' 31                 	db	49	;'1'
   544  0173' 09                 	db	9
   545  0174' 6F                 	db	111	;'o'
   546  0175' 70                 	db	112	;'p'
   547  0176' 65                 	db	101	;'e'
   548  0177' 6C                 	db	108	;'l'
   549  0178' 61                 	db	97	;'a'
   550  0179' 6E                 	db	110	;'n'
   551  017A' 64                 	db	100	;'d'
   552  017B' 32                 	db	50	;'2'
   553  017C' 0A                 	db	10
   554  017D' 0A                 	db	10
   555  017E' 09                 	db	9
   556  017F' 70                 	db	112	;'p'
   557  0180' 72                 	db	114	;'r'
   558  0181' 69                 	db	105	;'i'
   559  0182' 6E                 	db	110	;'n'
   560  0183' 74                 	db	116	;'t'
   561  0184' 5F                 	db	95	;'_'
   562  0185' 74                 	db	116	;'t'
   563  0186' 69                 	db	105	;'i'
   564  0187' 6D                 	db	109	;'m'
   565  0188' 65                 	db	101	;'e'
   566  0189' 28                 	db	40
   567  018A' 74                 	db	116	;'t'
   568  018B' 29                 	db	41
   569  018C' 0A                 	db	10
   570  018D' 09                 	db	9
   571  018E' 61                 	db	97	;'a'
   572  018F' 64                 	db	100	;'d'
   573  0190' 6A                 	db	106	;'j'
   574  0191' 75                 	db	117	;'u'
   575  0192' 73                 	db	115	;'s'
   576  0193' 74                 	db	116	;'t'
   577  0194' 5F                 	db	95	;'_'
   578  0195' 74                 	db	116	;'t'
   579  0196' 69                 	db	105	;'i'
   580  0197' 6D                 	db	109	;'m'
   581  0198' 65                 	db	101	;'e'
   582  0199' 28                 	db	40
   583  019A' 61                 	db	97	;'a'
   584  019B' 74                 	db	116	;'t'
   585  019C' 29                 	db	41
   586  019D' 20                 	db	32
   587  019E' 5B                 	db	91	;'['
   588  019F' 68                 	db	104	;'h'
   589  01A0' 61                 	db	97	;'a'
   590  01A1' 6E                 	db	110	;'n'
   591  01A2' 64                 	db	100	;'d'
   592  01A3' 3A                 	db	58	;':'
   593  01A4' 79                 	db	121	;'y'
   594  01A5' 2C                 	db	44
   595  01A6' 4D                 	db	77	;'M'
   596  01A7' 2C                 	db	44
   597  01A8' 64                 	db	100	;'d'
   598  01A9' 2C                 	db	44
   599  01AA' 68                 	db	104	;'h'
   600  01AB' 2C                 	db	44
   601  01AC' 6D                 	db	109	;'m'
   602  01AD' 2C                 	db	44
   603  01AE' 73                 	db	115	;'s'
   604  01AF' 5D                 	db	93	;']'
   605  01B0' 20                 	db	32
   606  01B1' 5B                 	db	91	;'['
   607  01B2' 76                 	db	118	;'v'
   608  01B3' 61                 	db	97	;'a'
   609  01B4' 6C                 	db	108	;'l'
   610  01B5' 75                 	db	117	;'u'
   611  01B6' 65                 	db	101	;'e'
   612  01B7' 28                 	db	40
   613  01B8' 64                 	db	100	;'d'
   614  01B9' 65                 	db	101	;'e'
   615  01BA' 63                 	db	99	;'c'
   616  01BB' 69                 	db	105	;'i'
   617  01BC' 6D                 	db	109	;'m'
   618  01BD' 61                 	db	97	;'a'
   619  01BE' 6C                 	db	108	;'l'
   620  01BF' 29                 	db	41
   621  01C0' 5D                 	db	93	;']'
   622  01C1' 0A                 	db	10
   623  01C2' 09                 	db	9
   624  01C3' 70                 	db	112	;'p'
   625  01C4' 77                 	db	119	;'w'
   626  01C5' 6D                 	db	109	;'m'
   627  01C6' 20                 	db	32
   628  01C7' 5B                 	db	91	;'['
   629  01C8' 63                 	db	99	;'c'
   630  01C9' 6F                 	db	111	;'o'
   631  01CA' 6C                 	db	108	;'l'
   632  01CB' 6F                 	db	111	;'o'
   633  01CC' 72                 	db	114	;'r'
   634  01CD' 3A                 	db	58	;':'
   635  01CE' 52                 	db	82	;'R'
   636  01CF' 2C                 	db	44
   637  01D0' 47                 	db	71	;'G'
   638  01D1' 2C                 	db	44
   639  01D2' 42                 	db	66	;'B'
   640  01D3' 2C                 	db	44
   641  01D4' 57                 	db	87	;'W'
   642  01D5' 5D                 	db	93	;']'
   643  01D6' 20                 	db	32
   644  01D7' 5B                 	db	91	;'['
   645  01D8' 76                 	db	118	;'v'
   646  01D9' 61                 	db	97	;'a'
   647  01DA' 6C                 	db	108	;'l'
   648  01DB' 75                 	db	117	;'u'
   649  01DC' 65                 	db	101	;'e'
   650  01DD' 28                 	db	40
   651  01DE' 25                 	db	37
   652  01DF' 29                 	db	41
   653  01E0' 3A                 	db	58	;':'
   654  01E1' 30                 	db	48	;'0'
   655  01E2' 7E                 	db	126
   656  01E3' 31                 	db	49	;'1'
   657  01E4' 30                 	db	48	;'0'
   658  01E5' 30                 	db	48	;'0'
   659  01E6' 5D                 	db	93	;']'
   660  01E7' 0A                 	db	10
   661  01E8' 09                 	db	9
   662  01E9' 70                 	db	112	;'p'
   663  01EA' 77                 	db	119	;'w'
   664  01EB' 6D                 	db	109	;'m'
   665  01EC' 20                 	db	32
   666  01ED' 63                 	db	99	;'c'
   667  01EE' 6C                 	db	108	;'l'
   668  01EF' 65                 	db	101	;'e'
   669  01F0' 61                 	db	97	;'a'
   670  01F1' 72                 	db	114	;'r'
   671  01F2' 0A                 	db	10
   672  01F3' 09                 	db	9
   673  01F4' 73                 	db	115	;'s'
   674  01F5' 65                 	db	101	;'e'
   675  01F6' 74                 	db	116	;'t'
   676  01F7' 20                 	db	32
   677  01F8' 74                 	db	116	;'t'
   678  01F9' 69                 	db	105	;'i'
   679  01FA' 6D                 	db	109	;'m'
   680  01FB' 65                 	db	101	;'e'
   681  01FC' 5F                 	db	95	;'_'
   682  01FD' 73                 	db	115	;'s'
   683  01FE' 79                 	db	121	;'y'
   684  01FF' 6E                 	db	110	;'n'
   685  0200' 63                 	db	99	;'c'
   686  0201' 5F                 	db	95	;'_'
   687  0202' 6D                 	db	109	;'m'
   688  0203' 6F                 	db	111	;'o'
   689  0204' 64                 	db	100	;'d'
   690  0205' 65                 	db	101	;'e'
   691  0206' 28                 	db	40
   692  0207' 73                 	db	115	;'s'
   693  0208' 79                 	db	121	;'y'
   694  0209' 6E                 	db	110	;'n'
   695  020A' 63                 	db	99	;'c'
   696  020B' 29                 	db	41
   697  020C' 0A                 	db	10
   698  020D' 09                 	db	9
   699  020E' 73                 	db	115	;'s'
   700  020F' 65                 	db	101	;'e'
   701  0210' 74                 	db	116	;'t'
   702  0211' 20                 	db	32
   703  0212' 41                 	db	65	;'A'
   704  0213' 44                 	db	68	;'D'
   705  0214' 43                 	db	67	;'C'
   706  0215' 5F                 	db	95	;'_'
   707  0216' 6D                 	db	109	;'m'
   708  0217' 6F                 	db	111	;'o'
   709  0218' 64                 	db	100	;'d'
   710  0219' 65                 	db	101	;'e'
   711  021A' 28                 	db	40
   712  021B' 61                 	db	97	;'a'
   713  021C' 64                 	db	100	;'d'
   714  021D' 63                 	db	99	;'c'
   715  021E' 29                 	db	41
   716  021F' 0A                 	db	10
   717  0220' 09                 	db	9
   718  0221' 52                 	db	82	;'R'
   719  0222' 45                 	db	69	;'E'
   720  0223' 53                 	db	83	;'S'
   721  0224' 45                 	db	69	;'E'
   722  0225' 54                 	db	84	;'T'
   723  0226' 28                 	db	40
   724  0227' 29                 	db	41
   725  0228' 3B                 	db	59	;';'
   726  0229' 0A                 	db	10
   727  022A' 00                 	db	0
   728  022B'                    STR_23:
   729  022B' 09                 	db	9
   730  022C' 32                 	db	50	;'2'
   731  022D' 30                 	db	48	;'0'
   732  022E' 25                 	db	37
   733  022F' 30                 	db	48	;'0'
   734  0230' 32                 	db	50	;'2'
   735  0231' 64                 	db	100	;'d'
   736  0232' 2F                 	db	47
   737  0233' 25                 	db	37
   738  0234' 30                 	db	48	;'0'
   739  0235' 32                 	db	50	;'2'
   740  0236' 64                 	db	100	;'d'
   741  0237' 2F                 	db	47
   742  0238' 25                 	db	37
   743  0239' 30                 	db	48	;'0'
   744  023A' 32                 	db	50	;'2'
   745  023B' 64                 	db	100	;'d'
   746  023C' 28                 	db	40
   747  023D' 25                 	db	37
   748  023E' 73                 	db	115	;'s'
   749  023F' 29                 	db	41
   750  0240' 25                 	db	37
   751  0241' 30                 	db	48	;'0'
   752  0242' 32                 	db	50	;'2'
   753  0243' 64                 	db	100	;'d'
   754  0244' 3A                 	db	58	;':'
   755  0245' 25                 	db	37
   756  0246' 30                 	db	48	;'0'
   757  0247' 32                 	db	50	;'2'
   758  0248' 64                 	db	100	;'d'
   759  0249' 2D                 	db	45
   760  024A' 25                 	db	37
   761  024B' 30                 	db	48	;'0'
   762  024C' 32                 	db	50	;'2'
   763  024D' 64                 	db	100	;'d'
   764  024E' 0A                 	db	10
   765  024F' 00                 	db	0
   766  0250'                    STR_46:
   767  0250' 57                 	db	87	;'W'
   768  0251' 52                 	db	82	;'R'
   769  0252' 45                 	db	69	;'E'
   770  0253' 4E                 	db	78	;'N'
   771  0254' 3D                 	db	61	;'='
   772  0255' 25                 	db	37
   773  0256' 64                 	db	100	;'d'
   774  0257' 2C                 	db	44
   775  0258' 45                 	db	69	;'E'
   776  0259' 4E                 	db	78	;'N'
   777  025A' 3D                 	db	61	;'='
   778  025B' 25                 	db	37
   779  025C' 64                 	db	100	;'d'
   780  025D' 0A                 	db	10
   781  025E' 00                 	db	0
   782  025F'                    STR_28:
   783  025F' 61                 	db	97	;'a'
   784  0260' 64                 	db	100	;'d'
   785  0261' 6A                 	db	106	;'j'
   786  0262' 75                 	db	117	;'u'
   787  0263' 73                 	db	115	;'s'
   788  0264' 74                 	db	116	;'t'
   789  0265' 5F                 	db	95	;'_'
   790  0266' 74                 	db	116	;'t'
   791  0267' 69                 	db	105	;'i'
   792  0268' 6D                 	db	109	;'m'
   793  0269' 65                 	db	101	;'e'
   794  026A' 00                 	db	0
   795  026B'                    STR_25:
   796  026B' 70                 	db	112	;'p'
   797  026C' 72                 	db	114	;'r'
   798  026D' 69                 	db	105	;'i'
   799  026E' 6E                 	db	110	;'n'
   800  026F' 74                 	db	116	;'t'
   801  0270' 5F                 	db	95	;'_'
   802  0271' 74                 	db	116	;'t'
   803  0272' 69                 	db	105	;'i'
   804  0273' 6D                 	db	109	;'m'
   805  0274' 65                 	db	101	;'e'
   806  0275' 00                 	db	0
   807  0276'                    STR_44:
   808  0276' 52                 	db	82	;'R'
   809  0277' 45                 	db	69	;'E'
   810  0278' 53                 	db	83	;'S'
   811  0279' 45                 	db	69	;'E'
   812  027A' 54                 	db	84	;'T'
   813  027B' 28                 	db	40
   814  027C' 29                 	db	41
   815  027D' 3B                 	db	59	;';'
   816  027E' 00                 	db	0
   817  027F'                    STR_15:
   818  027F' 20                 	db	32
   819  0280' 20                 	db	32
   820  0281' 20                 	db	32
   821  0282' 20                 	db	32
   822  0283' 20                 	db	32
   823  0284' 20                 	db	32
   824  0285' 20                 	db	32
   825  0286' 20                 	db	32
   826  0287' 00                 	db	0
   827  0288'                    STR_24:
   828  0288' 09                 	db	9
   829  0289' 65                 	db	101	;'e'
   830  028A' 72                 	db	114	;'r'
   831  028B' 72                 	db	114	;'r'
   832  028C' 6F                 	db	111	;'o'
   833  028D' 72                 	db	114	;'r'
   834  028E' 0A                 	db	10
   835  028F' 00                 	db	0
   836  0290'                    STR_62:
   837  0290' 28                 	db	40
   838  0291' 6E                 	db	110	;'n'
   839  0292' 75                 	db	117	;'u'
   840  0293' 6C                 	db	108	;'l'
   841  0294' 6C                 	db	108	;'l'
   842  0295' 29                 	db	41
   843  0296' 00                 	db	0
   844  0297'                    STR_40:
   845  0297' 73                 	db	115	;'s'
   846  0298' 65                 	db	101	;'e'
   847  0299' 63                 	db	99	;'c'
   848  029A' 6F                 	db	111	;'o'
   849  029B' 6E                 	db	110	;'n'
   850  029C' 64                 	db	100	;'d'
   851  029D' 00                 	db	0
   852  029E'                    STR_38:
   853  029E' 6D                 	db	109	;'m'
   854  029F' 69                 	db	105	;'i'
   855  02A0' 6E                 	db	110	;'n'
   856  02A1' 75                 	db	117	;'u'
   857  02A2' 74                 	db	116	;'t'
   858  02A3' 65                 	db	101	;'e'
   859  02A4' 00                 	db	0
   860  02A5'                    STR_61:
   861  02A5' 63                 	db	99	;'c'
   862  02A6' 6C                 	db	108	;'l'
   863  02A7' 65                 	db	101	;'e'
   864  02A8' 61                 	db	97	;'a'
   865  02A9' 72                 	db	114	;'r'
   866  02AA' 00                 	db	0
   867  02AB'                    STR_32:
   868  02AB' 6D                 	db	109	;'m'
   869  02AC' 6F                 	db	111	;'o'
   870  02AD' 6E                 	db	110	;'n'
   871  02AE' 74                 	db	116	;'t'
   872  02AF' 68                 	db	104	;'h'
   873  02B0' 00                 	db	0
   874  02B1'                    STR_48:
   875  02B1' 73                 	db	115	;'s'
   876  02B2' 79                 	db	121	;'y'
   877  02B3' 6E                 	db	110	;'n'
   878  02B4' 63                 	db	99	;'c'
   879  02B5' 00                 	db	0
   880  02B6'                    STR_41:
   881  02B6' 68                 	db	104	;'h'
   882  02B7' 65                 	db	101	;'e'
   883  02B8' 6C                 	db	108	;'l'
   884  02B9' 70                 	db	112	;'p'
   885  02BA' 00                 	db	0
   886  02BB'                    STR_30:
   887  02BB' 79                 	db	121	;'y'
   888  02BC' 65                 	db	101	;'e'
   889  02BD' 61                 	db	97	;'a'
   890  02BE' 72                 	db	114	;'r'
   891  02BF' 00                 	db	0
   892  02C0'                    STR_36:
   893  02C0' 68                 	db	104	;'h'
   894  02C1' 6F                 	db	111	;'o'
   895  02C2' 75                 	db	117	;'u'
   896  02C3' 72                 	db	114	;'r'
   897  02C4' 00                 	db	0
   898  02C5'                    STR_1:
   899  02C5' 25                 	db	37
   900  02C6' 30                 	db	48	;'0'
   901  02C7' 32                 	db	50	;'2'
   902  02C8' 64                 	db	100	;'d'
   903  02C9' 00                 	db	0
   904  02CA'                    STR_50:
   905  02CA' 41                 	db	65	;'A'
   906  02CB' 44                 	db	68	;'D'
   907  02CC' 43                 	db	67	;'C'
   908  02CD' 00                 	db	0
   909  02CE'                    STR_52:
   910  02CE' 50                 	db	80	;'P'
   911  02CF' 57                 	db	87	;'W'
   912  02D0' 4D                 	db	77	;'M'
   913  02D1' 00                 	db	0
   914  02D2'                    STR_49:
   915  02D2' 61                 	db	97	;'a'
   916  02D3' 64                 	db	100	;'d'
   917  02D4' 63                 	db	99	;'c'
   918  02D5' 00                 	db	0
   919  02D6'                    STR_51:
   920  02D6' 70                 	db	112	;'p'
   921  02D7' 77                 	db	119	;'w'
   922  02D8' 6D                 	db	109	;'m'
   923  02D9' 00                 	db	0
   924  02DA'                    STR_47:
   925  02DA' 73                 	db	115	;'s'
   926  02DB' 65                 	db	101	;'e'
   927  02DC' 74                 	db	116	;'t'
   928  02DD' 00                 	db	0
   929  02DE'                    STR_19:
   930  02DE' 08                 	db	8
   931  02DF' 20                 	db	32
   932  02E0' 08                 	db	8
   933  02E1' 00                 	db	0
   934  02E2'                    STR_34:
   935  02E2' 64                 	db	100	;'d'
   936  02E3' 61                 	db	97	;'a'
   937  02E4' 79                 	db	121	;'y'
   938  02E5' 00                 	db	0
   939  02E6'                    STR_45:
   940  02E6' 65                 	db	101	;'e'
   941  02E7' 6E                 	db	110	;'n'
   942  02E8' 00                 	db	0
   943  02E9'                    STR_27:
   944  02E9' 61                 	db	97	;'a'
   945  02EA' 74                 	db	116	;'t'
   946  02EB' 00                 	db	0
   947  02EC'                    STR_42:
   948  02EC' 3F                 	db	63	;'?'
   949  02ED' 00                 	db	0
   950  02EE'                    STR_58:
   951  02EE' 42                 	db	66	;'B'
   952  02EF' 00                 	db	0
   953  02F0'                    STR_56:
   954  02F0' 47                 	db	71	;'G'
   955  02F1' 00                 	db	0
   956  02F2'                    STR_54:
   957  02F2' 52                 	db	82	;'R'
   958  02F3' 00                 	db	0
   959  02F4'                    STR_60:
   960  02F4' 57                 	db	87	;'W'
   961  02F5' 00                 	db	0
   962  02F6'                    STR_57:
   963  02F6' 62                 	db	98	;'b'
   964  02F7' 00                 	db	0
   965  02F8'                    STR_55:
   966  02F8' 67                 	db	103	;'g'
   967  02F9' 00                 	db	0
   968  02FA'                    STR_59:
   969  02FA' 77                 	db	119	;'w'
   970  02FB' 00                 	db	0
   971  02FC'                    STR_39:
   972  02FC' 73                 	db	115	;'s'
   973  02FD' 00                 	db	0
   974  02FE' 28                 	db	40
   975  02FF' 00                 	db	0
   976  0300'                    STR_9:
   977  0300' 2D                 	db	45
   978  0301' 00                 	db	0
   979  0302'                    STR_4:
   980  0302' 2F                 	db	47
   981  0303' 00                 	db	0
   982  0304'                    STR_7:
   983  0304' 3A                 	db	58	;':'
   984  0305' 00                 	db	0
   985  0000                     
   986                           ; #config settings
   987  0306' 00                 	db	0	; dummy byte at the end
   988  0000                     
   989                           	psect	cinit
   990  0000'                    __pcinit:
   991                           	opt stack 0
   992  0000'                    start_initialization:
   993                           	opt stack 0
   994  0000'                    __initialization:
   995                           	opt stack 0
   996                           
   997                           ; Clear objects allocated to BIGRAMl (2500 bytes)
   998  0000' EE00' F000'        	lfsr	0,__pbssBIGRAMl
   999  0004' EE19 F0C4          	lfsr	1,2500
  1000  0008'                    clear_0:
  1001  0008' 6AEE               	clrf	postinc0,c
  1002  000A' 50E5               	movf	postdec1,w,c
  1003  000C' 50E1               	movf	fsr1l,w,c
  1004  000E' E1FC               	bnz	clear_0
  1005  0010' 50E2               	movf	fsr1h,w,c
  1006  0012' E1FA               	bnz	clear_0
  1007                           
  1008                           ; Clear objects allocated to BANK6 (250 bytes)
  1009  0014' EE00' F000'        	lfsr	0,__pbssBANK6
  1010  0018' 0EFA               	movlw	250
  1011  001A'                    clear_1:
  1012  001A' 6AEE               	clrf	postinc0,c
  1013  001C' 06E8               	decf	wreg,f,c
  1014  001E' E1FD               	bnz	clear_1
  1015                           
  1016                           ; Clear objects allocated to BANK5 (250 bytes)
  1017  0020' EE00' F000'        	lfsr	0,__pbssBANK5
  1018  0024' 0EFA               	movlw	250
  1019  0026'                    clear_2:
  1020  0026' 6AEE               	clrf	postinc0,c
  1021  0028' 06E8               	decf	wreg,f,c
  1022  002A' E1FD               	bnz	clear_2
  1023                           
  1024                           ; Clear objects allocated to BANK4 (200 bytes)
  1025  002C' EE00' F000'        	lfsr	0,__pbssBANK4
  1026  0030' 0EC8               	movlw	200
  1027  0032'                    clear_3:
  1028  0032' 6AEE               	clrf	postinc0,c
  1029  0034' 06E8               	decf	wreg,f,c
  1030  0036' E1FD               	bnz	clear_3
  1031                           
  1032                           ; Clear objects allocated to BANK3 (128 bytes)
  1033  0038' EE00' F000'        	lfsr	0,__pbssBANK3
  1034  003C' 0E80               	movlw	128
  1035  003E'                    clear_4:
  1036  003E' 6AEE               	clrf	postinc0,c
  1037  0040' 06E8               	decf	wreg,f,c
  1038  0042' E1FD               	bnz	clear_4
  1039                           
  1040                           ; Clear objects allocated to BANK2 (228 bytes)
  1041  0044' EE00' F000'        	lfsr	0,__pbssBANK2
  1042  0048' 0EE4               	movlw	228
  1043  004A'                    clear_5:
  1044  004A' 6AEE               	clrf	postinc0,c
  1045  004C' 06E8               	decf	wreg,f,c
  1046  004E' E1FD               	bnz	clear_5
  1047                           
  1048                           ; Clear objects allocated to BANK1 (136 bytes)
  1049  0050' EE00' F000'        	lfsr	0,__pbssBANK1
  1050  0054' 0E88               	movlw	136
  1051  0056'                    clear_6:
  1052  0056' 6AEE               	clrf	postinc0,c
  1053  0058' 06E8               	decf	wreg,f,c
  1054  005A' E1FD               	bnz	clear_6
  1055                           
  1056                           ; Clear objects allocated to BANK0 (30 bytes)
  1057  005C' EE00' F000'        	lfsr	0,__pbssBANK0
  1058  0060' 0E1E               	movlw	30
  1059  0062'                    clear_7:
  1060  0062' 6AEE               	clrf	postinc0,c
  1061  0064' 06E8               	decf	wreg,f,c
  1062  0066' E1FD               	bnz	clear_7
  1063                           
  1064                           ; Clear objects allocated to COMRAM (31 bytes)
  1065  0068' EE00' F000'        	lfsr	0,__pbssCOMRAM
  1066  006C' 0E1F               	movlw	31
  1067  006E'                    clear_8:
  1068  006E' 6AEE               	clrf	postinc0,c
  1069  0070' 06E8               	decf	wreg,f,c
  1070  0072' E1FD               	bnz	clear_8
  1071                           
  1072                           ; Initialize objects allocated to BANK1 (5 bytes)
  1073                           ; load TBLPTR registers with __pidataBANK1
  1074  0074' 0E00'              	movlw	low __pidataBANK1
  1075  0076' 6EF6               	movwf	tblptrl,c
  1076  0078' 0E00'              	movlw	high __pidataBANK1
  1077  007A' 6EF7               	movwf	tblptrh,c
  1078  007C' 0E00'              	movlw	low (__pidataBANK1 shr (0+16))
  1079  007E' 6EF8               	movwf	tblptru,c
  1080  0080' EE00' F000'        	lfsr	0,__pdataBANK1
  1081  0084' EE10 F005          	lfsr	1,5
  1082  0088'                    copy_data0:
  1083  0088' 0009               	tblrd		*+
  1084  008A' CFF5 FFEE          	movff	tablat,postinc0
  1085  008E' 50E5               	movf	postdec1,w,c
  1086  0090' 50E1               	movf	fsr1l,w,c
  1087  0092' E1FA               	bnz	copy_data0
  1088  0094'                    end_of_initialization:
  1089                           	opt stack 0
  1090  0094'                    __end_of__initialization:
  1091                           	opt stack 0
  1092  0094' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1093  0096' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1094  0098' 0100               	movlb	0
  1095  009A' EF00' F000'        	goto	_main	;jump to C main() function
  1096                           tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           postdec1	equ	0xFE5
  1103                           fsr1h	equ	0xFE2
  1104                           fsr1l	equ	0xFE1
  1105                           
  1106                           	psect	bssCOMRAM
  1107  0000'                    __pbssCOMRAM:
  1108                           	opt stack 0
  1109  0000'                    _inPipes:
  1110                           	opt stack 0
  1111  0000'                    	ds	6
  1112  0006'                    _pBDTEntryIn:
  1113                           	opt stack 0
  1114  0006'                    	ds	6
  1115  000C'                    _CDCDataOutHandle:
  1116                           	opt stack 0
  1117  000C'                    	ds	2
  1118  000E'                    _pBDTEntryEP0OutCurrent:
  1119                           	opt stack 0
  1120  000E'                    	ds	2
  1121  0010'                    _pBDTEntryEP0OutNext:
  1122                           	opt stack 0
  1123  0010'                    	ds	2
  1124  0012'                    _BothEP0OutUOWNsSet:
  1125                           	opt stack 0
  1126  0012'                    	ds	1
  1127  0013'                    _RemoteWakeup:
  1128                           	opt stack 0
  1129  0013'                    	ds	1
  1130  0014'                    _USBDeferStatusStagePacket:
  1131                           	opt stack 0
  1132  0014'                    	ds	1
  1133  0015'                    _USBDeviceState:
  1134                           	opt stack 0
  1135  0015'                    	ds	1
  1136  0016'                    _USBStatusStageTimeoutCounter:
  1137                           	opt stack 0
  1138  0016'                    	ds	1
  1139  0017'                    _cdc_rx_len:
  1140                           	opt stack 0
  1141  0017'                    	ds	1
  1142  0018'                    _cdc_trf_state:
  1143                           	opt stack 0
  1144  0018'                    	ds	1
  1145  0019'                    _cdc_tx_len:
  1146                           	opt stack 0
  1147  0019'                    	ds	1
  1148  001A'                    _controlTransferState:
  1149                           	opt stack 0
  1150  001A'                    	ds	1
  1151  001B'                    _endpoint_number:
  1152                           	opt stack 0
  1153  001B'                    	ds	1
  1154  001C'                    _shortPacketStatus:
  1155                           	opt stack 0
  1156  001C'                    	ds	1
  1157  001D'                    _USBActiveConfiguration:
  1158                           	opt stack 0
  1159  001D'                    	ds	1
  1160  001E'                    _USTATcopy:
  1161                           	opt stack 0
  1162  001E'                    	ds	1
  1163                           tblptru	equ	0xFF8
  1164                           tblptrh	equ	0xFF7
  1165                           tblptrl	equ	0xFF6
  1166                           tablat	equ	0xFF5
  1167                           postinc0	equ	0xFEE
  1168                           wreg	equ	0xFE8
  1169                           postdec1	equ	0xFE5
  1170                           fsr1h	equ	0xFE2
  1171                           fsr1l	equ	0xFE1
  1172                           
  1173                           	psect	bssBANK0
  1174  0000'                    __pbssBANK0:
  1175                           	opt stack 0
  1176  0000'                    _outPipes:
  1177                           	opt stack 0
  1178  0000'                    	ds	9
  1179  0009'                    RTCC_task@prev_halfsec:
  1180                           	opt stack 0
  1181  0009'                    	ds	1
  1182  000A'                    ST7032_task@st7032_state:
  1183                           	opt stack 0
  1184  000A'                    	ds	1
  1185  000B'                    _I2C_sent_flag:
  1186                           	opt stack 0
  1187  000B'                    	ds	1
  1188  000C'                    _USBDeferINDataStagePackets:
  1189                           	opt stack 0
  1190  000C'                    	ds	1
  1191  000D'                    _USBDeferOUTDataStagePackets:
  1192                           	opt stack 0
  1193  000D'                    	ds	1
  1194  000E'                    _USBStatusStageEnabledFlag1:
  1195                           	opt stack 0
  1196  000E'                    	ds	1
  1197  000F'                    _USBStatusStageEnabledFlag2:
  1198                           	opt stack 0
  1199  000F'                    	ds	1
  1200  0010'                    _cdc_mem_type:
  1201                           	opt stack 0
  1202  0010'                    	ds	1
  1203  0011'                    _light_mode:
  1204                           	opt stack 0
  1205  0011'                    	ds	1
  1206  0012'                    _time_change_flag:
  1207                           	opt stack 0
  1208  0012'                    	ds	1
  1209  0013'                    terminal_task@command_init:
  1210                           	opt stack 0
  1211  0013'                    	ds	1
  1212  0014'                    _lcd_tx:
  1213                           	opt stack 0
  1214  0014'                    	ds	8
  1215  001C'                    light_task@_6017:
  1216                           	opt stack 0
  1217  001C'                    	ds	1
  1218  001D'                    light_task@n:
  1219                           	opt stack 0
  1220  001D'                    	ds	1
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           fsr1h	equ	0xFE2
  1229                           fsr1l	equ	0xFE1
  1230                           
  1231                           	psect	bssBANK1
  1232  0000'                    __pbssBANK1:
  1233                           	opt stack 0
  1234  0000'                    _cdc_notice:
  1235                           	opt stack 0
  1236  0000'                    	ds	10
  1237  000A'                    _pBDTEntryOut:
  1238                           	opt stack 0
  1239  000A'                    	ds	6
  1240  0010'                    _BaudRateGen:
  1241                           	opt stack 0
  1242  0010'                    	ds	4
  1243  0014'                    _ms:
  1244                           	opt stack 0
  1245  0014'                    	ds	4
  1246  0018'                    _ep_data_in:
  1247                           	opt stack 0
  1248  0018'                    	ds	3
  1249  001B'                    _ep_data_out:
  1250                           	opt stack 0
  1251  001B'                    	ds	3
  1252  001E'                    _pCDCDst:
  1253                           	opt stack 0
  1254  001E'                    	ds	3
  1255  0021'                    _pCDCSrc:
  1256                           	opt stack 0
  1257  0021'                    	ds	3
  1258  0024'                    ST7032_task@wait:
  1259                           	opt stack 0
  1260  0024'                    	ds	2
  1261  0026'                    _CDCDataInHandle:
  1262                           	opt stack 0
  1263  0026'                    	ds	2
  1264  0028'                    _pDst:
  1265                           	opt stack 0
  1266  0028'                    	ds	2
  1267  002A'                    epoch_to_caltime@day_cache:
  1268                           	opt stack 0
  1269  002A'                    	ds	2
  1270  002C'                    millis_timer@cnt:
  1271                           	opt stack 0
  1272  002C'                    	ds	2
  1273  002E'                    _ADC_flag:
  1274                           	opt stack 0
  1275  002E'                    	ds	1
  1276  002F'                    _I2C_busy:
  1277                           	opt stack 0
  1278  002F'                    	ds	1
  1279  0030'                    _I2C_cfct_flag:
  1280                           	opt stack 0
  1281  0030'                    	ds	1
  1282  0031'                    _USBBusIsSuspended:
  1283                           	opt stack 0
  1284  0031'                    	ds	1
  1285  0032'                    _control_signal_bitmap:
  1286                           	opt stack 0
  1287  0032'                    	ds	1
  1288  0033'                    _st7032_state:
  1289                           	opt stack 0
  1290  0033'                    	ds	1
  1291  0034'                    epoch_to_caltime@year_cache:
  1292                           	opt stack 0
  1293  0034'                    	ds	1
  1294  0035'                    _now:
  1295                           	opt stack 0
  1296  0035'                    	ds	14
  1297  0043'                    _dummy_encapsulated_cmd_response:
  1298                           	opt stack 0
  1299  0043'                    	ds	8
  1300  004B'                    _uart_rx:
  1301                           	opt stack 0
  1302  004B'                    	ds	8
  1303  0053'                    _uart_tx:
  1304                           	opt stack 0
  1305  0053'                    	ds	8
  1306  005B'                    _usb_rx:
  1307                           	opt stack 0
  1308  005B'                    	ds	8
  1309  0063'                    _usb_tx:
  1310                           	opt stack 0
  1311  0063'                    	ds	8
  1312  006B'                    terminal_task@command:
  1313                           	opt stack 0
  1314  006B'                    	ds	8
  1315  0073'                    _line_coding:
  1316                           	opt stack 0
  1317  0073'                    	ds	7
  1318  007A'                    _sw_B:
  1319                           	opt stack 0
  1320  007A'                    	ds	4
  1321  007E'                    _sw_G:
  1322                           	opt stack 0
  1323  007E'                    	ds	4
  1324  0082'                    _sw_R:
  1325                           	opt stack 0
  1326  0082'                    	ds	4
  1327  0086'                    _USBAlternateInterface:
  1328                           	opt stack 0
  1329  0086'                    	ds	2
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           postdec1	equ	0xFE5
  1337                           fsr1h	equ	0xFE2
  1338                           fsr1l	equ	0xFE1
  1339                           
  1340                           	psect	dataBANK1
  1341  0000'                    __pdataBANK1:
  1342                           	opt stack 0
  1343  0000'                    I2C_LCD_SetCursor@F8685:
  1344                           	opt stack 0
  1345  0000'                    	ds	2
  1346  0002'                    ST7032_cursor@F8640:
  1347                           	opt stack 0
  1348  0002'                    	ds	2
  1349  0004'                    epoch_to_caltime@month_cache:
  1350                           	opt stack 0
  1351  0004'                    	ds	1
  1352                           tblptru	equ	0xFF8
  1353                           tblptrh	equ	0xFF7
  1354                           tblptrl	equ	0xFF6
  1355                           tablat	equ	0xFF5
  1356                           postinc0	equ	0xFEE
  1357                           wreg	equ	0xFE8
  1358                           postdec1	equ	0xFE5
  1359                           fsr1h	equ	0xFE2
  1360                           fsr1l	equ	0xFE1
  1361                           
  1362                           	psect	bssBANK2
  1363  0000'                    __pbssBANK2:
  1364                           	opt stack 0
  1365  0000'                    _cdc_data_rx:
  1366                           	opt stack 0
  1367  0000'                    	ds	64
  1368  0040'                    _cdc_data_tx:
  1369                           	opt stack 0
  1370  0040'                    	ds	64
  1371  0080'                    terminal_task@op0:
  1372                           	opt stack 0
  1373  0080'                    	ds	25
  1374  0099'                    terminal_task@op1:
  1375                           	opt stack 0
  1376  0099'                    	ds	25
  1377  00B2'                    terminal_task@op2:
  1378                           	opt stack 0
  1379  00B2'                    	ds	25
  1380  00CB'                    terminal_task@op3:
  1381                           	opt stack 0
  1382  00CB'                    	ds	25
  1383                           tblptru	equ	0xFF8
  1384                           tblptrh	equ	0xFF7
  1385                           tblptrl	equ	0xFF6
  1386                           tablat	equ	0xFF5
  1387                           postinc0	equ	0xFEE
  1388                           wreg	equ	0xFE8
  1389                           postdec1	equ	0xFE5
  1390                           fsr1h	equ	0xFE2
  1391                           fsr1l	equ	0xFE1
  1392                           
  1393                           	psect	bssBANK3
  1394  0000'                    __pbssBANK3:
  1395                           	opt stack 0
  1396  0000'                    _readBuffer:
  1397                           	opt stack 0
  1398  0000'                    	ds	64
  1399  0040'                    _writeBuffer:
  1400                           	opt stack 0
  1401  0040'                    	ds	64
  1402                           tblptru	equ	0xFF8
  1403                           tblptrh	equ	0xFF7
  1404                           tblptrl	equ	0xFF6
  1405                           tablat	equ	0xFF5
  1406                           postinc0	equ	0xFEE
  1407                           wreg	equ	0xFE8
  1408                           postdec1	equ	0xFE5
  1409                           fsr1h	equ	0xFE2
  1410                           fsr1l	equ	0xFE1
  1411                           
  1412                           	psect	bssBANK4
  1413  0000'                    __pbssBANK4:
  1414                           	opt stack 0
  1415  0000'                    ST7032_init@buf:
  1416                           	opt stack 0
  1417  0000'                    	ds	200
  1418                           tblptru	equ	0xFF8
  1419                           tblptrh	equ	0xFF7
  1420                           tblptrl	equ	0xFF6
  1421                           tablat	equ	0xFF5
  1422                           postinc0	equ	0xFEE
  1423                           wreg	equ	0xFE8
  1424                           postdec1	equ	0xFE5
  1425                           fsr1h	equ	0xFE2
  1426                           fsr1l	equ	0xFE1
  1427                           
  1428                           	psect	bssBANK5
  1429  0000'                    __pbssBANK5:
  1430                           	opt stack 0
  1431  0000'                    USB_CDC_buffer_init@rxbuf:
  1432                           	opt stack 0
  1433  0000'                    	ds	250
  1434                           tblptru	equ	0xFF8
  1435                           tblptrh	equ	0xFF7
  1436                           tblptrl	equ	0xFF6
  1437                           tablat	equ	0xFF5
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           postdec1	equ	0xFE5
  1441                           fsr1h	equ	0xFE2
  1442                           fsr1l	equ	0xFE1
  1443                           
  1444                           	psect	bssBANK6
  1445  0000'                    __pbssBANK6:
  1446                           	opt stack 0
  1447  0000'                    main_init@rxbuf:
  1448                           	opt stack 0
  1449  0000'                    	ds	250
  1450                           tblptru	equ	0xFF8
  1451                           tblptrh	equ	0xFF7
  1452                           tblptrl	equ	0xFF6
  1453                           tablat	equ	0xFF5
  1454                           postinc0	equ	0xFEE
  1455                           wreg	equ	0xFE8
  1456                           postdec1	equ	0xFE5
  1457                           fsr1h	equ	0xFE2
  1458                           fsr1l	equ	0xFE1
  1459                           
  1460                           	psect	bssBIGRAMl
  1461  0000'                    __pbssBIGRAMl:
  1462                           	opt stack 0
  1463  0000'                    USB_CDC_buffer_init@txbuf:
  1464                           	opt stack 0
  1465  0000'                    	ds	1500
  1466  05DC'                    main_init@txbuf:
  1467                           	opt stack 0
  1468  05DC'                    	ds	1000
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           postdec1	equ	0xFE5
  1476                           fsr1h	equ	0xFE2
  1477                           fsr1l	equ	0xFE1
  1478                           
  1479                           	psect	cstackBANK3
  1480  0000'                    __pcstackBANK3:
  1481                           	opt stack 0
  1482  0000'                    terminal_task@buf:
  1483                           	opt stack 0
  1484                           
  1485                           ; 100 bytes @ 0x0
  1486  0000'                    	ds	100
  1487  0064'                    _terminal_task$6897:
  1488                           	opt stack 0
  1489                           
  1490                           ; 2 bytes @ 0x64
  1491  0064'                    	ds	2
  1492  0066'                    terminal_task@i_4539:
  1493                           	opt stack 0
  1494                           
  1495                           ; 1 bytes @ 0x66
  1496  0066'                    	ds	1
  1497  0067'                    terminal_task@ascii:
  1498                           	opt stack 0
  1499                           
  1500                           ; 1 bytes @ 0x67
  1501  0067'                    	ds	1
  1502  0068'                    terminal_task@i:
  1503                           	opt stack 0
  1504                           
  1505                           ; 1 bytes @ 0x68
  1506  0068'                    	ds	1
  1507                           tblptru	equ	0xFF8
  1508                           tblptrh	equ	0xFF7
  1509                           tblptrl	equ	0xFF6
  1510                           tablat	equ	0xFF5
  1511                           postinc0	equ	0xFEE
  1512                           wreg	equ	0xFE8
  1513                           postdec1	equ	0xFE5
  1514                           fsr1h	equ	0xFE2
  1515                           fsr1l	equ	0xFE1
  1516                           
  1517                           	psect	cstackBANK1
  1518  0000'                    __pcstackBANK1:
  1519                           	opt stack 0
  1520  0000'                    terminal_operation@str:
  1521                           	opt stack 0
  1522                           
  1523                           ; 30 bytes @ 0x0
  1524  0000'                    	ds	30
  1525  001E'                    _terminal_operation$6899:
  1526                           	opt stack 0
  1527                           
  1528                           ; 2 bytes @ 0x1E
  1529  001E'                    	ds	2
  1530  0020'                    _terminal_operation$6900:
  1531                           	opt stack 0
  1532                           
  1533                           ; 2 bytes @ 0x20
  1534  0020'                    	ds	2
  1535                           tblptru	equ	0xFF8
  1536                           tblptrh	equ	0xFF7
  1537                           tblptrl	equ	0xFF6
  1538                           tablat	equ	0xFF5
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           postdec1	equ	0xFE5
  1542                           fsr1h	equ	0xFE2
  1543                           fsr1l	equ	0xFE1
  1544                           
  1545                           	psect	cstackBANK0
  1546  0000'                    __pcstackBANK0:
  1547                           	opt stack 0
  1548  0000'                    ??_timer1_init:
  1549  0000'                    ?_strcmp:
  1550                           	opt stack 0
  1551  0000'                    ?_ringbuf_num:
  1552                           	opt stack 0
  1553  0000'                    ?___wmul:
  1554                           	opt stack 0
  1555  0000'                    ?___awmod:
  1556                           	opt stack 0
  1557  0000'                    ?___lldiv:
  1558                           	opt stack 0
  1559  0000'                    ?___llmod:
  1560                           	opt stack 0
  1561  0000'                    timer0_init@prescaler:
  1562                           	opt stack 0
  1563  0000'                    timer3_init@prescaler:
  1564                           	opt stack 0
  1565  0000'                    x_to_d@hex:
  1566                           	opt stack 0
  1567  0000'                    _isdigit$6309:
  1568                           	opt stack 0
  1569  0000'                    ringbuf_init@rb:
  1570                           	opt stack 0
  1571  0000'                    ringbuf_num@rb:
  1572                           	opt stack 0
  1573  0000'                    ringbuf_delete@rb:
  1574                           	opt stack 0
  1575  0000'                    ___wmul@multiplier:
  1576                           	opt stack 0
  1577  0000'                    ___awmod@dividend:
  1578                           	opt stack 0
  1579  0000'                    strcmp@s1:
  1580                           	opt stack 0
  1581  0000'                    ___lldiv@dividend:
  1582                           	opt stack 0
  1583  0000'                    ___llmod@dividend:
  1584                           	opt stack 0
  1585                           
  1586                           ; 4 bytes @ 0x0
  1587  0000'                    	ds	1
  1588  0001'                    timer1_init@prescaler:
  1589                           	opt stack 0
  1590  0001'                    isdigit@c:
  1591                           	opt stack 0
  1592  0001'                    RTCC_to_caltime@tm:
  1593                           	opt stack 0
  1594                           
  1595                           ; 2 bytes @ 0x1
  1596  0001'                    	ds	1
  1597  0002'                    ??_ringbuf_num:
  1598  0002'                    ringbuf_init@internal_buf:
  1599                           	opt stack 0
  1600  0002'                    ___wmul@multiplicand:
  1601                           	opt stack 0
  1602  0002'                    ___awmod@divisor:
  1603                           	opt stack 0
  1604  0002'                    strcmp@s2:
  1605                           	opt stack 0
  1606                           
  1607                           ; 2 bytes @ 0x2
  1608  0002'                    	ds	1
  1609  0003'                    RTCC_to_caltime@dumy:
  1610                           	opt stack 0
  1611                           
  1612                           ; 1 bytes @ 0x3
  1613  0003'                    	ds	1
  1614  0004'                    ___awmod@counter:
  1615                           	opt stack 0
  1616  0004'                    strcmp@r:
  1617                           	opt stack 0
  1618  0004'                    ringbuf_init@bufsize:
  1619                           	opt stack 0
  1620  0004'                    ___wmul@product:
  1621                           	opt stack 0
  1622  0004'                    ___lldiv@divisor:
  1623                           	opt stack 0
  1624  0004'                    ___llmod@divisor:
  1625                           	opt stack 0
  1626                           
  1627                           ; 4 bytes @ 0x4
  1628  0004'                    	ds	1
  1629  0005'                    ___awmod@sign:
  1630                           	opt stack 0
  1631                           
  1632                           ; 1 bytes @ 0x5
  1633  0005'                    	ds	1
  1634  0006'                    ??_month_length:
  1635  0006'                    ?_atoi:
  1636                           	opt stack 0
  1637  0006'                    ?___lwdiv:
  1638                           	opt stack 0
  1639  0006'                    atoi@s:
  1640                           	opt stack 0
  1641  0006'                    ___lwdiv@dividend:
  1642                           	opt stack 0
  1643                           
  1644                           ; 2 bytes @ 0x6
  1645  0006'                    	ds	2
  1646  0008'                    ??_atoi:
  1647  0008'                    ringbuf_put@rb:
  1648                           	opt stack 0
  1649  0008'                    ringbuf_pop@rb:
  1650                           	opt stack 0
  1651  0008'                    ringbuf_backspace@rb:
  1652                           	opt stack 0
  1653  0008'                    ___lwdiv@divisor:
  1654                           	opt stack 0
  1655  0008'                    ___lldiv@quotient:
  1656                           	opt stack 0
  1657                           
  1658                           ; 4 bytes @ 0x8
  1659  0008'                    	ds	2
  1660  000A'                    ??_ringbuf_pop:
  1661  000A'                    ??_ringbuf_backspace:
  1662  000A'                    ringbuf_put@data:
  1663                           	opt stack 0
  1664  000A'                    month_length@year:
  1665                           	opt stack 0
  1666  000A'                    atoi@sign:
  1667                           	opt stack 0
  1668  000A'                    ___lwdiv@counter:
  1669                           	opt stack 0
  1670                           
  1671                           ; 1 bytes @ 0xA
  1672  000A'                    	ds	1
  1673  000B'                    ??_ringbuf_put:
  1674  000B'                    atoi@a:
  1675                           	opt stack 0
  1676  000B'                    ___lwdiv@quotient:
  1677                           	opt stack 0
  1678                           
  1679                           ; 2 bytes @ 0xB
  1680  000B'                    	ds	1
  1681  000C'                    ___lldiv@counter:
  1682                           	opt stack 0
  1683                           
  1684                           ; 1 bytes @ 0xC
  1685  000C'                    	ds	1
  1686  000D'                    ?___awdiv:
  1687                           	opt stack 0
  1688  000D'                    ?___lwmod:
  1689                           	opt stack 0
  1690  000D'                    ?___lmul:
  1691                           	opt stack 0
  1692  000D'                    ___awdiv@dividend:
  1693                           	opt stack 0
  1694  000D'                    ___lwmod@dividend:
  1695                           	opt stack 0
  1696  000D'                    ___lmul@multiplier:
  1697                           	opt stack 0
  1698                           
  1699                           ; 4 bytes @ 0xD
  1700  000D'                    	ds	2
  1701  000F'                    ringbuf_put_str@rb:
  1702                           	opt stack 0
  1703  000F'                    ___awdiv@divisor:
  1704                           	opt stack 0
  1705  000F'                    ___lwmod@divisor:
  1706                           	opt stack 0
  1707                           
  1708                           ; 2 bytes @ 0xF
  1709  000F'                    	ds	2
  1710  0011'                    ?_sprintf:
  1711                           	opt stack 0
  1712  0011'                    ___awdiv@counter:
  1713                           	opt stack 0
  1714  0011'                    ringbuf_put_num@rb:
  1715                           	opt stack 0
  1716  0011'                    ringbuf_put_str@str:
  1717                           	opt stack 0
  1718  0011'                    sprintf@sp:
  1719                           	opt stack 0
  1720  0011'                    ___lmul@multiplicand:
  1721                           	opt stack 0
  1722                           
  1723                           ; 4 bytes @ 0x11
  1724  0011'                    	ds	1
  1725  0012'                    ___awdiv@sign:
  1726                           	opt stack 0
  1727                           
  1728                           ; 1 bytes @ 0x12
  1729  0012'                    	ds	1
  1730  0013'                    ringbuf_put_num@value:
  1731                           	opt stack 0
  1732  0013'                    sprintf@f:
  1733                           	opt stack 0
  1734  0013'                    ___awdiv@quotient:
  1735                           	opt stack 0
  1736                           
  1737                           ; 2 bytes @ 0x13
  1738  0013'                    	ds	2
  1739  0015'                    ringbuf_put_num@digits:
  1740                           	opt stack 0
  1741  0015'                    d_to_x@dec:
  1742                           	opt stack 0
  1743  0015'                    PWM_set@value:
  1744                           	opt stack 0
  1745  0015'                    ___lmul@product:
  1746                           	opt stack 0
  1747                           
  1748                           ; 4 bytes @ 0x15
  1749  0015'                    	ds	1
  1750  0016'                    ringbuf_put_num@i:
  1751                           	opt stack 0
  1752  0016'                    caltime_to_RTCC@tm:
  1753                           	opt stack 0
  1754                           
  1755                           ; 2 bytes @ 0x16
  1756  0016'                    	ds	1
  1757  0017'                    ??_PWM_set:
  1758  0017'                    ringbuf_put_num@temp:
  1759                           	opt stack 0
  1760                           
  1761                           ; 2 bytes @ 0x17
  1762  0017'                    	ds	2
  1763  0019'                    ?_get_quot_rem:
  1764                           	opt stack 0
  1765  0019'                    PWM_set@color:
  1766                           	opt stack 0
  1767  0019'                    get_quot_rem@quot:
  1768                           	opt stack 0
  1769  0019'                    caltime_to_epoch@tm:
  1770                           	opt stack 0
  1771                           
  1772                           ; 2 bytes @ 0x19
  1773  0019'                    	ds	2
  1774  001B'                    ??_caltime_to_epoch:
  1775  001B'                    get_quot_rem@div:
  1776                           	opt stack 0
  1777                           
  1778                           ; 1 bytes @ 0x1B
  1779  001B'                    	ds	2
  1780  001D'                    get_quot_rem@num:
  1781                           	opt stack 0
  1782                           
  1783                           ; 4 bytes @ 0x1D
  1784  001D'                    	ds	2
  1785  001F'                    caltime_to_epoch@year:
  1786                           	opt stack 0
  1787                           
  1788                           ; 1 bytes @ 0x1F
  1789  001F'                    	ds	1
  1790  0020'                    caltime_to_epoch@month_3637:
  1791                           	opt stack 0
  1792                           
  1793                           ; 1 bytes @ 0x20
  1794  0020'                    	ds	1
  1795  0021'                    epoch_to_caltime@tm:
  1796                           	opt stack 0
  1797  0021'                    caltime_to_epoch@epoch:
  1798                           	opt stack 0
  1799                           
  1800                           ; 4 bytes @ 0x21
  1801  0021'                    	ds	2
  1802  0023'                    ??_sprintf:
  1803  0023'                    ??_epoch_to_caltime:
  1804                           
  1805                           ; 0 bytes @ 0x23
  1806  0023'                    	ds	2
  1807  0025'                    caltime_to_epoch@month:
  1808                           	opt stack 0
  1809  0025'                    epoch_to_caltime@day_since_epoch:
  1810                           	opt stack 0
  1811                           
  1812                           ; 2 bytes @ 0x25
  1813  0025'                    	ds	1
  1814  0026'                    RTCC_from_RTCC@tm:
  1815                           	opt stack 0
  1816                           
  1817                           ; 2 bytes @ 0x26
  1818  0026'                    	ds	1
  1819  0027'                    sprintf@prec:
  1820                           	opt stack 0
  1821  0027'                    epoch_to_caltime@day:
  1822                           	opt stack 0
  1823                           
  1824                           ; 2 bytes @ 0x27
  1825  0027'                    	ds	1
  1826  0028'                    ??_light_task:
  1827  0028'                    sprintf@ap:
  1828                           	opt stack 0
  1829                           
  1830                           ; 2 bytes @ 0x28
  1831  0028'                    	ds	1
  1832  0029'                    epoch_to_caltime@year:
  1833                           	opt stack 0
  1834                           
  1835                           ; 1 bytes @ 0x29
  1836  0029'                    	ds	1
  1837  002A'                    epoch_to_caltime@month:
  1838                           	opt stack 0
  1839  002A'                    sprintf@cp:
  1840                           	opt stack 0
  1841                           
  1842                           ; 2 bytes @ 0x2A
  1843  002A'                    	ds	1
  1844  002B'                    epoch_to_caltime@num:
  1845                           	opt stack 0
  1846                           
  1847                           ; 4 bytes @ 0x2B
  1848  002B'                    	ds	1
  1849  002C'                    light_task@value:
  1850                           	opt stack 0
  1851  002C'                    sprintf@val:
  1852                           	opt stack 0
  1853                           
  1854                           ; 2 bytes @ 0x2C
  1855  002C'                    	ds	1
  1856  002D'                    light_task@value_6018:
  1857                           	opt stack 0
  1858                           
  1859                           ; 1 bytes @ 0x2D
  1860  002D'                    	ds	1
  1861  002E'                    sprintf@len:
  1862                           	opt stack 0
  1863  002E'                    light_task@temp:
  1864                           	opt stack 0
  1865                           
  1866                           ; 4 bytes @ 0x2E
  1867  002E'                    	ds	1
  1868  002F'                    RTCC_from_caltime@tm:
  1869                           	opt stack 0
  1870  002F'                    RTCC_from_epoch@tm:
  1871                           	opt stack 0
  1872                           
  1873                           ; 2 bytes @ 0x2F
  1874  002F'                    	ds	1
  1875  0030'                    sprintf@flag:
  1876                           	opt stack 0
  1877                           
  1878                           ; 1 bytes @ 0x30
  1879  0030'                    	ds	1
  1880  0031'                    sprintf@c:
  1881                           	opt stack 0
  1882                           
  1883                           ; 1 bytes @ 0x31
  1884  0031'                    	ds	1
  1885  0032'                    light_task@i:
  1886                           	opt stack 0
  1887  0032'                    sprintf@width:
  1888                           	opt stack 0
  1889                           
  1890                           ; 2 bytes @ 0x32
  1891  0032'                    	ds	2
  1892  0034'                    print_time@tx:
  1893                           	opt stack 0
  1894                           
  1895                           ; 2 bytes @ 0x34
  1896  0034'                    	ds	2
  1897  0036'                    print_time@str:
  1898                           	opt stack 0
  1899                           
  1900                           ; 30 bytes @ 0x36
  1901  0036'                    	ds	30
  1902  0054'                    terminal_at_hand@tx:
  1903                           	opt stack 0
  1904                           
  1905                           ; 2 bytes @ 0x54
  1906  0054'                    	ds	2
  1907  0056'                    terminal_at_hand@hand:
  1908                           	opt stack 0
  1909                           
  1910                           ; 2 bytes @ 0x56
  1911  0056'                    	ds	2
  1912  0058'                    terminal_at_hand@min:
  1913                           	opt stack 0
  1914                           
  1915                           ; 1 bytes @ 0x58
  1916  0058'                    	ds	1
  1917  0059'                    terminal_at_hand@max:
  1918                           	opt stack 0
  1919                           
  1920                           ; 1 bytes @ 0x59
  1921  0059'                    	ds	1
  1922  005A'                    terminal_at_hand@value:
  1923                           	opt stack 0
  1924                           
  1925                           ; 1 bytes @ 0x5A
  1926  005A'                    	ds	1
  1927  005B'                    terminal_time@tx:
  1928                           	opt stack 0
  1929                           
  1930                           ; 2 bytes @ 0x5B
  1931  005B'                    	ds	2
  1932  005D'                    terminal_time@op0:
  1933                           	opt stack 0
  1934                           
  1935                           ; 2 bytes @ 0x5D
  1936  005D'                    	ds	2
  1937  005F'                    terminal_time@op1:
  1938                           	opt stack 0
  1939                           
  1940                           ; 2 bytes @ 0x5F
  1941  005F'                    	ds	2
  1942  0061'                    terminal_time@op2:
  1943                           	opt stack 0
  1944                           
  1945                           ; 2 bytes @ 0x61
  1946  0061'                    	ds	2
  1947  0063'                    _terminal_time$6898:
  1948                           	opt stack 0
  1949                           
  1950                           ; 1 bytes @ 0x63
  1951  0063'                    	ds	1
  1952  0064'                    terminal_operation@tx:
  1953                           	opt stack 0
  1954                           
  1955                           ; 2 bytes @ 0x64
  1956  0064'                    	ds	2
  1957  0066'                    terminal_operation@op0:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0x66
  1961  0066'                    	ds	2
  1962  0068'                    terminal_operation@op1:
  1963                           	opt stack 0
  1964                           
  1965                           ; 2 bytes @ 0x68
  1966  0068'                    	ds	2
  1967  006A'                    terminal_operation@op2:
  1968                           	opt stack 0
  1969                           
  1970                           ; 2 bytes @ 0x6A
  1971  006A'                    	ds	2
  1972  006C'                    terminal_operation@op3:
  1973                           	opt stack 0
  1974                           
  1975                           ; 2 bytes @ 0x6C
  1976  006C'                    	ds	2
  1977  006E'                    ??_terminal_operation:
  1978                           
  1979                           ; 0 bytes @ 0x6E
  1980  006E'                    	ds	2
  1981  0070'                    terminal_task@tx:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x70
  1985  0070'                    	ds	2
  1986  0072'                    terminal_task@rx:
  1987                           	opt stack 0
  1988                           
  1989                           ; 2 bytes @ 0x72
  1990  0072'                    	ds	2
  1991  0074'                    ??_terminal_task:
  1992                           
  1993                           ; 0 bytes @ 0x74
  1994  0074'                    	ds	2
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           postinc0	equ	0xFEE
  2000                           wreg	equ	0xFE8
  2001                           postdec1	equ	0xFE5
  2002                           fsr1h	equ	0xFE2
  2003                           fsr1l	equ	0xFE1
  2004                           
  2005                           	psect	cstackCOMRAM
  2006  0000'                    __pcstackCOMRAM:
  2007                           	opt stack 0
  2008  0000'                    ?i2_ringbuf_num:
  2009                           	opt stack 0
  2010  0000'                    button_timer_interrupt@bt:
  2011                           	opt stack 0
  2012  0000'                    i2ringbuf_num@rb:
  2013                           	opt stack 0
  2014                           
  2015                           ; 2 bytes @ 0x0
  2016  0000'                    	ds	2
  2017  0002'                    ??i2_ringbuf_num:
  2018  0002'                    button_timer_interrupt@sw_value:
  2019                           	opt stack 0
  2020                           
  2021                           ; 1 bytes @ 0x2
  2022  0002'                    	ds	1
  2023  0003'                    
  2024                           ; 0 bytes @ 0x3
  2025  0003'                    	ds	5
  2026  0008'                    i2ringbuf_put@rb:
  2027                           	opt stack 0
  2028  0008'                    i2ringbuf_pop@rb:
  2029                           	opt stack 0
  2030                           
  2031                           ; 2 bytes @ 0x8
  2032  0008'                    	ds	2
  2033  000A'                    ??i2_ringbuf_pop:
  2034  000A'                    i2ringbuf_put@data:
  2035                           	opt stack 0
  2036                           
  2037                           ; 1 bytes @ 0xA
  2038  000A'                    	ds	1
  2039  000B'                    ??i2_ringbuf_put:
  2040                           
  2041                           ; 0 bytes @ 0xB
  2042  000B'                    	ds	3
  2043  000E'                    i2ringbuf_pop@ret:
  2044                           	opt stack 0
  2045                           
  2046                           ; 1 bytes @ 0xE
  2047  000E'                    	ds	1
  2048  000F'                    UART_ISR@ascii:
  2049                           	opt stack 0
  2050                           
  2051                           ; 1 bytes @ 0xF
  2052  000F'                    	ds	1
  2053  0010'                    ??_ISR:
  2054                           
  2055                           ; 0 bytes @ 0x10
  2056  0010'                    	ds	15
  2057  001F'                    ??_strcmp:
  2058  001F'                    ??_isdigit:
  2059  001F'                    ??_timer0_init:
  2060  001F'                    ??_timer3_init:
  2061  001F'                    ??_x_to_d:
  2062  001F'                    timer1_init@clock_select:
  2063                           	opt stack 0
  2064  001F'                    ADC_init@p_ref:
  2065                           	opt stack 0
  2066  001F'                    ringbuf_pop@ret:
  2067                           	opt stack 0
  2068  001F'                    month_length@month:
  2069                           	opt stack 0
  2070  001F'                    PWM_init@PR:
  2071                           	opt stack 0
  2072  001F'                    ___llmod@counter:
  2073                           	opt stack 0
  2074  001F'                    ___lwmod@counter:
  2075                           	opt stack 0
  2076                           
  2077                           ; 1 bytes @ 0x1F
  2078  001F'                    	ds	1
  2079  0020'                    tblptru	equ	0xFF8
  2080                           tblptrh	equ	0xFF7
  2081                           tblptrl	equ	0xFF6
  2082                           tablat	equ	0xFF5
  2083                           postinc0	equ	0xFEE
  2084                           wreg	equ	0xFE8
  2085                           postdec1	equ	0xFE5
  2086                           fsr1h	equ	0xFE2
  2087                           fsr1l	equ	0xFE1
  2088                           
  2089                           ; 0 bytes @ 0x20
  2090 ;;
  2091 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2092 ;;
  2093 ;; *************** function _main *****************
  2094 ;; Defined at:
  2095 ;;		line 310 in file "PIC18F27J53-killifish_light05.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;		None
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  2  1609[None  ] int 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2113 ;;Total ram usage:        0 bytes
  2114 ;; Hardware stack levels required when called:   13
  2115 ;; This function calls:
  2116 ;;		_RTCC_from_RTCC
  2117 ;;		_RTCC_from_epoch
  2118 ;;		_RTCC_task
  2119 ;;		_UART_task
  2120 ;;		_light_task
  2121 ;;		_main_init
  2122 ;;		_terminal_task
  2123 ;; This function is called by:
  2124 ;;		Startup code after reset
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text0
  2129  0000'                    __ptext0:
  2130                           	opt stack 0
  2131  0000'                    _main:
  2132                           	opt stack 18
  2133                           
  2134                           ;PIC18F27J53-killifish_light05.c: 311: main_init();
  2135                           
  2136                           ;incstack = 0
  2137  0000' EC00' F000'        	call	_main_init	;wreg free
  2138                           
  2139                           ;PIC18F27J53-killifish_light05.c: 313: RTCC_from_RTCC(&now);
  2140  0004' 0E00'              	movlw	low _now
  2141  0006' 0100               	movlb	0	; () banked
  2142  0008' 6F00'              	movwf	RTCC_from_RTCC@tm& (0+255),b
  2143  000A' 0E00'              	movlw	high _now
  2144  000C' 0100               	movlb	0	; () banked
  2145  000E' 6F00'              	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  2146  0010' EC00' F000'        	call	_RTCC_from_RTCC	;wreg free
  2147                           
  2148                           ;PIC18F27J53-killifish_light05.c: 314: if (now.DD == 0) {
  2149  0014' 0101               	movlb	1	; () banked
  2150  0016' 5100'              	movf	(_now+8)& (0+255),w,b
  2151  0018' A4D8               	btfss	status,2,c
  2152  001A' D011               	goto	l10063
  2153                           
  2154                           ; BSR set to: 1
  2155                           ;PIC18F27J53-killifish_light05.c: 315: now.epoch = 0;
  2156  001C' 0E00               	movlw	0
  2157  001E' 0101               	movlb	1	; () banked
  2158  0020' 6F00'              	movwf	_now& (0+255),b
  2159  0022' 0E00               	movlw	0
  2160  0024' 6F00'              	movwf	(_now+1)& (0+255),b
  2161  0026' 0E00               	movlw	0
  2162  0028' 6F00'              	movwf	(_now+2)& (0+255),b
  2163  002A' 0E00               	movlw	0
  2164  002C' 6F00'              	movwf	(_now+3)& (0+255),b
  2165                           
  2166                           ; BSR set to: 1
  2167                           ;PIC18F27J53-killifish_light05.c: 316: RTCC_from_epoch(&now);
  2168  002E' 0E00'              	movlw	low _now
  2169  0030' 0100               	movlb	0	; () banked
  2170  0032' 6F00'              	movwf	RTCC_from_epoch@tm& (0+255),b
  2171  0034' 0E00'              	movlw	high _now
  2172  0036' 0100               	movlb	0	; () banked
  2173  0038' 6F00'              	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  2174  003A' EC00' F000'        	call	_RTCC_from_epoch	;wreg free
  2175  003E'                    l10063:
  2176                           
  2177                           ;PIC18F27J53-killifish_light05.c: 320: INTCONbits.GIE = 0;
  2178  003E' 9EF2               	bcf	intcon,7,c	;volatile
  2179                           
  2180                           ;PIC18F27J53-killifish_light05.c: 321: RTCC_task();
  2181  0040' EC00' F000'        	call	_RTCC_task	;wreg free
  2182                           
  2183                           ;PIC18F27J53-killifish_light05.c: 322: terminal_task(&uart_tx, &uart_rx);
  2184  0044' 0E00'              	movlw	low _uart_tx
  2185  0046' 0100               	movlb	0	; () banked
  2186  0048' 6F00'              	movwf	terminal_task@tx& (0+255),b
  2187  004A' 0E00'              	movlw	high _uart_tx
  2188  004C' 0100               	movlb	0	; () banked
  2189  004E' 6F00'              	movwf	(terminal_task@tx+1)& (0+255),b
  2190  0050' 0E00'              	movlw	low _uart_rx
  2191  0052' 0100               	movlb	0	; () banked
  2192  0054' 6F00'              	movwf	terminal_task@rx& (0+255),b
  2193  0056' 0E00'              	movlw	high _uart_rx
  2194  0058' 0100               	movlb	0	; () banked
  2195  005A' 6F00'              	movwf	(terminal_task@rx+1)& (0+255),b
  2196  005C' EC00' F000'        	call	_terminal_task	;wreg free
  2197                           
  2198                           ;PIC18F27J53-killifish_light05.c: 323: UART_task();
  2199  0060' EC00' F000'        	call	_UART_task	;wreg free
  2200                           
  2201                           ;PIC18F27J53-killifish_light05.c: 324: light_task();
  2202  0064' EC00' F000'        	call	_light_task	;wreg free
  2203                           
  2204                           ;PIC18F27J53-killifish_light05.c: 325: INTCONbits.GIE = 1;
  2205  0068' 8EF2               	bsf	intcon,7,c	;volatile
  2206  006A' D7E9               	goto	l10063
  2207  006C'                    __end_of_main:
  2208                           	opt stack 0
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           intcon	equ	0xFF2
  2214                           postinc0	equ	0xFEE
  2215                           wreg	equ	0xFE8
  2216                           postdec1	equ	0xFE5
  2217                           fsr1h	equ	0xFE2
  2218                           fsr1l	equ	0xFE1
  2219                           status	equ	0xFD8
  2220                           
  2221 ;; *************** function _terminal_task *****************
  2222 ;; Defined at:
  2223 ;;		line 8 in file "../My_library/My_terminal.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  tx              2  112[BANK0 ] PTR struct ringbuf
  2226 ;;		 -> uart_tx(8), 
  2227 ;;  rx              2  114[BANK0 ] PTR struct ringbuf
  2228 ;;		 -> uart_rx(8), 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  i               1  102[BANK3 ] unsigned char 
  2231 ;;  i               1  104[BANK3 ] unsigned char 
  2232 ;;  ascii           1  103[BANK3 ] unsigned char 
  2233 ;;  buf           100    0[BANK3 ] unsigned char [100]
  2234 ;; Return value:  Size  Location     Type
  2235 ;;		None               void
  2236 ;; Registers used:
  2237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2244 ;;      Locals:         0       0       0       0     105       0       0       0       0       0       0       0       
      +0       0       0       0
  2245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2246 ;;      Totals:         0       6       0       0     105       0       0       0       0       0       0       0       
      +0       0       0       0
  2247 ;;Total ram usage:      111 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:   12
  2250 ;; This function calls:
  2251 ;;		_ringbuf_backspace
  2252 ;;		_ringbuf_delete
  2253 ;;		_ringbuf_init
  2254 ;;		_ringbuf_num
  2255 ;;		_ringbuf_pop
  2256 ;;		_ringbuf_put
  2257 ;;		_ringbuf_put_num
  2258 ;;		_ringbuf_put_str
  2259 ;;		_terminal_operation
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text1
  2266  0000'                    __ptext1:
  2267                           	opt stack 0
  2268  0000'                    _terminal_task:
  2269                           	opt stack 18
  2270                           
  2271                           ;My_terminal.c: 9: static ringbuf_t command;
  2272                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2273                           ;My_terminal.c: 11: if (command_init == 0) {
  2274                           
  2275                           ;incstack = 0
  2276  0000' 0100               	movlb	0	; () banked
  2277  0002' 5100'              	movf	terminal_task@command_init& (0+255),w,b
  2278  0004' 0100               	movlb	0	; () banked
  2279  0006' A4D8               	btfss	status,2,c
  2280  0008' D016               	goto	l9553
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;My_terminal.c: 12: command_init = 1;
  2284  000A' 0E01               	movlw	1
  2285  000C' 0100               	movlb	0	; () banked
  2286  000E' 6F00'              	movwf	terminal_task@command_init& (0+255),b
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;My_terminal.c: 13: char buf[100];
  2290                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2291  0010' 0E00'              	movlw	low terminal_task@command
  2292  0012' 0100               	movlb	0	; () banked
  2293  0014' 6F00'              	movwf	ringbuf_init@rb& (0+255),b
  2294  0016' 0E00'              	movlw	high terminal_task@command
  2295  0018' 0100               	movlb	0	; () banked
  2296  001A' 6F00'              	movwf	(ringbuf_init@rb+1)& (0+255),b
  2297  001C' 0E00'              	movlw	low terminal_task@buf
  2298  001E' 0100               	movlb	0	; () banked
  2299  0020' 6F00'              	movwf	ringbuf_init@internal_buf& (0+255),b
  2300  0022' 0E00'              	movlw	high terminal_task@buf
  2301  0024' 0100               	movlb	0	; () banked
  2302  0026' 6F00'              	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2303  0028' 0E00               	movlw	0
  2304  002A' 0100               	movlb	0	; () banked
  2305  002C' 6F00'              	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2306  002E' 0E64               	movlw	100
  2307  0030' 6F00'              	movwf	ringbuf_init@bufsize& (0+255),b
  2308  0032' EC00' F000'        	call	_ringbuf_init	;wreg free
  2309  0036'                    l9553:
  2310                           
  2311                           ;My_terminal.c: 15: }
  2312                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2313  0036' C072' F000'        	movff	terminal_task@rx,ringbuf_num@rb
  2314  003A' C073' F001'        	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2315  003E' EC00' F000'        	call	_ringbuf_num	;wreg free
  2316  0042' 0100               	movlb	0	; () banked
  2317  0044' 5100'              	movf	?_ringbuf_num& (0+255),w,b
  2318  0046' 0100               	movlb	0	; () banked
  2319  0048' 1100'              	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2320  004A' B4D8               	btfsc	status,2,c
  2321  004C' 0012               	return	
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2325  004E' C072' F008'        	movff	terminal_task@rx,ringbuf_pop@rb
  2326  0052' C073' F009'        	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2327  0056' EC00' F000'        	call	_ringbuf_pop	;wreg free
  2328  005A' 0103               	movlb	3	; () banked
  2329  005C' 6F00'              	movwf	terminal_task@ascii& (0+255),b
  2330                           
  2331                           ;My_terminal.c: 18: switch (ascii) {
  2332  005E' D176               	goto	l9617
  2333  0060'                    l9557:
  2334                           
  2335                           ; BSR set to: 3
  2336                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2337  0060' 0E00'              	movlw	low terminal_task@command
  2338  0062' 0100               	movlb	0	; () banked
  2339  0064' 6F00'              	movwf	ringbuf_put@rb& (0+255),b
  2340  0066' 0E00'              	movlw	high terminal_task@command
  2341  0068' 0100               	movlb	0	; () banked
  2342  006A' 6F00'              	movwf	(ringbuf_put@rb+1)& (0+255),b
  2343  006C' 0E00               	movlw	0
  2344  006E' 0100               	movlb	0	; () banked
  2345  0070' 6F00'              	movwf	ringbuf_put@data& (0+255),b
  2346  0072' EC00' F000'        	call	_ringbuf_put	;wreg free
  2347                           
  2348                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2349  0076' C070' F008'        	movff	terminal_task@tx,ringbuf_put@rb
  2350  007A' C071' F009'        	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2351  007E' 0E09               	movlw	9
  2352  0080' 0100               	movlb	0	; () banked
  2353  0082' 6F00'              	movwf	ringbuf_put@data& (0+255),b
  2354  0084' EC00' F000'        	call	_ringbuf_put	;wreg free
  2355                           
  2356                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2357  0088' 0E00'              	movlw	low terminal_task@command
  2358  008A' 0100               	movlb	0	; () banked
  2359  008C' 6F00'              	movwf	ringbuf_num@rb& (0+255),b
  2360  008E' 0E00'              	movlw	high terminal_task@command
  2361  0090' 0100               	movlb	0	; () banked
  2362  0092' 6F00'              	movwf	(ringbuf_num@rb+1)& (0+255),b
  2363  0094' EC00' F000'        	call	_ringbuf_num	;wreg free
  2364  0098' 0EFF               	movlw	255
  2365  009A' 0100               	movlb	0	; () banked
  2366  009C' 2500'              	addwf	?_ringbuf_num& (0+255),w,b
  2367  009E' 0103               	movlb	3	; () banked
  2368  00A0' 6F00'              	movwf	_terminal_task$6897& (0+255),b
  2369  00A2' 0EFF               	movlw	255
  2370  00A4' 0100               	movlb	0	; () banked
  2371  00A6' 2100'              	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2372  00A8' 0103               	movlb	3	; () banked
  2373  00AA' 6F00'              	movwf	(_terminal_task$6897+1)& (0+255),b
  2374                           
  2375                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2376  00AC' C070' F011'        	movff	terminal_task@tx,ringbuf_put_num@rb
  2377  00B0' C071' F012'        	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2378  00B4' C064' F013'        	movff	_terminal_task$6897,ringbuf_put_num@value
  2379  00B8' C065' F014'        	movff	_terminal_task$6897+1,ringbuf_put_num@value+1
  2380  00BC' 0E02               	movlw	2
  2381  00BE' 0100               	movlb	0	; () banked
  2382  00C0' 6F00'              	movwf	ringbuf_put_num@digits& (0+255),b
  2383  00C2' EC00' F000'        	call	_ringbuf_put_num	;wreg free
  2384                           
  2385                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2386  00C6' C070' F008'        	movff	terminal_task@tx,ringbuf_put@rb
  2387  00CA' C071' F009'        	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2388  00CE' 0E0A               	movlw	10
  2389  00D0' 0100               	movlb	0	; () banked
  2390  00D2' 6F00'              	movwf	ringbuf_put@data& (0+255),b
  2391  00D4' EC00' F000'        	call	_ringbuf_put	;wreg free
  2392                           
  2393                           ;My_terminal.c: 24: static char op0[25];
  2394                           ;My_terminal.c: 25: static char op1[25];
  2395                           ;My_terminal.c: 26: static char op2[25];
  2396                           ;My_terminal.c: 27: static char op3[25];
  2397                           ;My_terminal.c: 28: uint8_t i;
  2398                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2399  00D8' 0E00               	movlw	0
  2400  00DA' 0103               	movlb	3	; () banked
  2401  00DC' 6F00'              	movwf	terminal_task@i& (0+255),b
  2402  00DE' D002               	goto	l9563
  2403  00E0'                    l9561:
  2404                           
  2405                           ; BSR set to: 3
  2406  00E0' 0103               	movlb	3	; () banked
  2407  00E2' 2B00'              	incf	terminal_task@i& (0+255),f,b
  2408  00E4'                    l9563:
  2409                           
  2410                           ; BSR set to: 3
  2411  00E4' 0E00'              	movlw	low terminal_task@command
  2412  00E6' 0100               	movlb	0	; () banked
  2413  00E8' 6F00'              	movwf	ringbuf_pop@rb& (0+255),b
  2414  00EA' 0E00'              	movlw	high terminal_task@command
  2415  00EC' 0100               	movlb	0	; () banked
  2416  00EE' 6F00'              	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2417  00F0' EC00' F000'        	call	_ringbuf_pop	;wreg free
  2418  00F4' 0100               	movlb	0	; () banked
  2419  00F6' 6F00'              	movwf	??_terminal_task& (0+255),b
  2420  00F8' 0103               	movlb	3	; () banked
  2421  00FA' 5100'              	movf	terminal_task@i& (0+255),w,b
  2422  00FC' 0D01               	mullw	1
  2423  00FE' 0E00'              	movlw	low terminal_task@op0
  2424  0100' 24F3               	addwf	prodl,w,c
  2425  0102' 6ED9               	movwf	fsr2l,c
  2426  0104' 0E00'              	movlw	high terminal_task@op0
  2427  0106' 20F4               	addwfc	prodh,w,c
  2428  0108' 6EDA               	movwf	fsr2h,c
  2429  010A' C074' FFDF         	movff	??_terminal_task,indf2
  2430  010E' 50DF               	movf	indf2,w,c
  2431  0110' A4D8               	btfss	status,2,c
  2432  0112' D7E6               	goto	l9561
  2433                           
  2434                           ; BSR set to: 3
  2435                           ;My_terminal.c: 30: op0[i] = '\0';
  2436                           
  2437                           ; BSR set to: 3
  2438  0114' 0103               	movlb	3	; () banked
  2439  0116' 5100'              	movf	terminal_task@i& (0+255),w,b
  2440  0118' 0D01               	mullw	1
  2441  011A' 0E00'              	movlw	low terminal_task@op0
  2442  011C' 24F3               	addwf	prodl,w,c
  2443  011E' 6ED9               	movwf	fsr2l,c
  2444  0120' 0E00'              	movlw	high terminal_task@op0
  2445  0122' 20F4               	addwfc	prodh,w,c
  2446  0124' 6EDA               	movwf	fsr2h,c
  2447  0126' 0E00               	movlw	0
  2448  0128' 6EDF               	movwf	indf2,c
  2449                           
  2450                           ; BSR set to: 3
  2451                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2452  012A' 0E00               	movlw	0
  2453  012C' 0103               	movlb	3	; () banked
  2454  012E' 6F00'              	movwf	terminal_task@i& (0+255),b
  2455  0130' D002               	goto	l9571
  2456  0132'                    l9569:
  2457                           
  2458                           ; BSR set to: 3
  2459  0132' 0103               	movlb	3	; () banked
  2460  0134' 2B00'              	incf	terminal_task@i& (0+255),f,b
  2461  0136'                    l9571:
  2462                           
  2463                           ; BSR set to: 3
  2464  0136' 0E00'              	movlw	low terminal_task@command
  2465  0138' 0100               	movlb	0	; () banked
  2466  013A' 6F00'              	movwf	ringbuf_pop@rb& (0+255),b
  2467  013C' 0E00'              	movlw	high terminal_task@command
  2468  013E' 0100               	movlb	0	; () banked
  2469  0140' 6F00'              	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2470  0142' EC00' F000'        	call	_ringbuf_pop	;wreg free
  2471  0146' 0100               	movlb	0	; () banked
  2472  0148' 6F00'              	movwf	??_terminal_task& (0+255),b
  2473  014A' 0103               	movlb	3	; () banked
  2474  014C' 5100'              	movf	terminal_task@i& (0+255),w,b
  2475  014E' 0D01               	mullw	1
  2476  0150' 0E00'              	movlw	low terminal_task@op1
  2477  0152' 24F3               	addwf	prodl,w,c
  2478  0154' 6ED9               	movwf	fsr2l,c
  2479  0156' 0E00'              	movlw	high terminal_task@op1
  2480  0158' 20F4               	addwfc	prodh,w,c
  2481  015A' 6EDA               	movwf	fsr2h,c
  2482  015C' C074' FFDF         	movff	??_terminal_task,indf2
  2483  0160' 50DF               	movf	indf2,w,c
  2484  0162' A4D8               	btfss	status,2,c
  2485  0164' D7E6               	goto	l9569
  2486                           
  2487                           ; BSR set to: 3
  2488                           ;My_terminal.c: 32: op1[i] = '\0';
  2489                           
  2490                           ; BSR set to: 3
  2491  0166' 0103               	movlb	3	; () banked
  2492  0168' 5100'              	movf	terminal_task@i& (0+255),w,b
  2493  016A' 0D01               	mullw	1
  2494  016C' 0E00'              	movlw	low terminal_task@op1
  2495  016E' 24F3               	addwf	prodl,w,c
  2496  0170' 6ED9               	movwf	fsr2l,c
  2497  0172' 0E00'              	movlw	high terminal_task@op1
  2498  0174' 20F4               	addwfc	prodh,w,c
  2499  0176' 6EDA               	movwf	fsr2h,c
  2500  0178' 0E00               	movlw	0
  2501  017A' 6EDF               	movwf	indf2,c
  2502                           
  2503                           ; BSR set to: 3
  2504                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2505  017C' 0E00               	movlw	0
  2506  017E' 0103               	movlb	3	; () banked
  2507  0180' 6F00'              	movwf	terminal_task@i& (0+255),b
  2508  0182' D002               	goto	l9579
  2509  0184'                    l9577:
  2510                           
  2511                           ; BSR set to: 3
  2512  0184' 0103               	movlb	3	; () banked
  2513  0186' 2B00'              	incf	terminal_task@i& (0+255),f,b
  2514  0188'                    l9579:
  2515                           
  2516                           ; BSR set to: 3
  2517  0188' 0E00'              	movlw	low terminal_task@command
  2518  018A' 0100               	movlb	0	; () banked
  2519  018C' 6F00'              	movwf	ringbuf_pop@rb& (0+255),b
  2520  018E' 0E00'              	movlw	high terminal_task@command
  2521  0190' 0100               	movlb	0	; () banked
  2522  0192' 6F00'              	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2523  0194' EC00' F000'        	call	_ringbuf_pop	;wreg free
  2524  0198' 0100               	movlb	0	; () banked
  2525  019A' 6F00'              	movwf	??_terminal_task& (0+255),b
  2526  019C' 0103               	movlb	3	; () banked
  2527  019E' 5100'              	movf	terminal_task@i& (0+255),w,b
  2528  01A0' 0D01               	mullw	1
  2529  01A2' 0E00'              	movlw	low terminal_task@op2
  2530  01A4' 24F3               	addwf	prodl,w,c
  2531  01A6' 6ED9               	movwf	fsr2l,c
  2532  01A8' 0E00'              	movlw	high terminal_task@op2
  2533  01AA' 20F4               	addwfc	prodh,w,c
  2534  01AC' 6EDA               	movwf	fsr2h,c
  2535  01AE' C074' FFDF         	movff	??_terminal_task,indf2
  2536  01B2' 50DF               	movf	indf2,w,c
  2537  01B4' A4D8               	btfss	status,2,c
  2538  01B6' D7E6               	goto	l9577
  2539                           
  2540                           ; BSR set to: 3
  2541                           ;My_terminal.c: 34: op2[i] = '\0';
  2542                           
  2543                           ; BSR set to: 3
  2544  01B8' 0103               	movlb	3	; () banked
  2545  01BA' 5100'              	movf	terminal_task@i& (0+255),w,b
  2546  01BC' 0D01               	mullw	1
  2547  01BE' 0E00'              	movlw	low terminal_task@op2
  2548  01C0' 24F3               	addwf	prodl,w,c
  2549  01C2' 6ED9               	movwf	fsr2l,c
  2550  01C4' 0E00'              	movlw	high terminal_task@op2
  2551  01C6' 20F4               	addwfc	prodh,w,c
  2552  01C8' 6EDA               	movwf	fsr2h,c
  2553  01CA' 0E00               	movlw	0
  2554  01CC' 6EDF               	movwf	indf2,c
  2555                           
  2556                           ; BSR set to: 3
  2557                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2558  01CE' 0E00               	movlw	0
  2559  01D0' 0103               	movlb	3	; () banked
  2560  01D2' 6F00'              	movwf	terminal_task@i& (0+255),b
  2561  01D4' D002               	goto	l9587
  2562  01D6'                    l9585:
  2563                           
  2564                           ; BSR set to: 3
  2565  01D6' 0103               	movlb	3	; () banked
  2566  01D8' 2B00'              	incf	terminal_task@i& (0+255),f,b
  2567  01DA'                    l9587:
  2568                           
  2569                           ; BSR set to: 3
  2570  01DA' 0E00'              	movlw	low terminal_task@command
  2571  01DC' 0100               	movlb	0	; () banked
  2572  01DE' 6F00'              	movwf	ringbuf_pop@rb& (0+255),b
  2573  01E0' 0E00'              	movlw	high terminal_task@command
  2574  01E2' 0100               	movlb	0	; () banked
  2575  01E4' 6F00'              	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2576  01E6' EC00' F000'        	call	_ringbuf_pop	;wreg free
  2577  01EA' 0100               	movlb	0	; () banked
  2578  01EC' 6F00'              	movwf	??_terminal_task& (0+255),b
  2579  01EE' 0103               	movlb	3	; () banked
  2580  01F0' 5100'              	movf	terminal_task@i& (0+255),w,b
  2581  01F2' 0D01               	mullw	1
  2582  01F4' 0E00'              	movlw	low terminal_task@op3
  2583  01F6' 24F3               	addwf	prodl,w,c
  2584  01F8' 6ED9               	movwf	fsr2l,c
  2585  01FA' 0E00'              	movlw	high terminal_task@op3
  2586  01FC' 20F4               	addwfc	prodh,w,c
  2587  01FE' 6EDA               	movwf	fsr2h,c
  2588  0200' C074' FFDF         	movff	??_terminal_task,indf2
  2589  0204' 50DF               	movf	indf2,w,c
  2590  0206' A4D8               	btfss	status,2,c
  2591  0208' D7E6               	goto	l9585
  2592                           
  2593                           ; BSR set to: 3
  2594                           ;My_terminal.c: 36: op3[i] = '\0';
  2595                           
  2596                           ; BSR set to: 3
  2597  020A' 0103               	movlb	3	; () banked
  2598  020C' 5100'              	movf	terminal_task@i& (0+255),w,b
  2599  020E' 0D01               	mullw	1
  2600  0210' 0E00'              	movlw	low terminal_task@op3
  2601  0212' 24F3               	addwf	prodl,w,c
  2602  0214' 6ED9               	movwf	fsr2l,c
  2603  0216' 0E00'              	movlw	high terminal_task@op3
  2604  0218' 20F4               	addwfc	prodh,w,c
  2605  021A' 6EDA               	movwf	fsr2h,c
  2606  021C' 0E00               	movlw	0
  2607  021E' 6EDF               	movwf	indf2,c
  2608                           
  2609                           ; BSR set to: 3
  2610                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2611  0220' C070' F064'        	movff	terminal_task@tx,terminal_operation@tx
  2612  0224' C071' F065'        	movff	terminal_task@tx+1,terminal_operation@tx+1
  2613  0228' 0E00'              	movlw	low terminal_task@op0
  2614  022A' 0100               	movlb	0	; () banked
  2615  022C' 6F00'              	movwf	terminal_operation@op0& (0+255),b
  2616  022E' 0E00'              	movlw	high terminal_task@op0
  2617  0230' 0100               	movlb	0	; () banked
  2618  0232' 6F00'              	movwf	(terminal_operation@op0+1)& (0+255),b
  2619  0234' 0E00'              	movlw	low terminal_task@op1
  2620  0236' 0100               	movlb	0	; () banked
  2621  0238' 6F00'              	movwf	terminal_operation@op1& (0+255),b
  2622  023A' 0E00'              	movlw	high terminal_task@op1
  2623  023C' 0100               	movlb	0	; () banked
  2624  023E' 6F00'              	movwf	(terminal_operation@op1+1)& (0+255),b
  2625  0240' 0E00'              	movlw	low terminal_task@op2
  2626  0242' 0100               	movlb	0	; () banked
  2627  0244' 6F00'              	movwf	terminal_operation@op2& (0+255),b
  2628  0246' 0E00'              	movlw	high terminal_task@op2
  2629  0248' 0100               	movlb	0	; () banked
  2630  024A' 6F00'              	movwf	(terminal_operation@op2+1)& (0+255),b
  2631  024C' 0E00'              	movlw	low terminal_task@op3
  2632  024E' 0100               	movlb	0	; () banked
  2633  0250' 6F00'              	movwf	terminal_operation@op3& (0+255),b
  2634  0252' 0E00'              	movlw	high terminal_task@op3
  2635  0254' 0100               	movlb	0	; () banked
  2636  0256' 6F00'              	movwf	(terminal_operation@op3+1)& (0+255),b
  2637  0258' EC00' F000'        	call	_terminal_operation	;wreg free
  2638                           
  2639                           ;My_terminal.c: 38: break;
  2640  025C' 0012               	return	
  2641  025E'                    l9593:
  2642                           
  2643                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2644  025E' 0E00'              	movlw	low terminal_task@command
  2645  0260' 0100               	movlb	0	; () banked
  2646  0262' 6F00'              	movwf	ringbuf_put@rb& (0+255),b
  2647  0264' 0E00'              	movlw	high terminal_task@command
  2648  0266' 0100               	movlb	0	; () banked
  2649  0268' 6F00'              	movwf	(ringbuf_put@rb+1)& (0+255),b
  2650  026A' 0E00               	movlw	0
  2651  026C' 0100               	movlb	0	; () banked
  2652  026E' 6F00'              	movwf	ringbuf_put@data& (0+255),b
  2653  0270' EC00' F000'        	call	_ringbuf_put	;wreg free
  2654                           
  2655                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2656  0274' C070' F008'        	movff	terminal_task@tx,ringbuf_put@rb
  2657  0278' C071' F009'        	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2658  027C' 0E20               	movlw	32
  2659  027E' 0100               	movlb	0	; () banked
  2660  0280' 6F00'              	movwf	ringbuf_put@data& (0+255),b
  2661  0282' EC00' F000'        	call	_ringbuf_put	;wreg free
  2662                           
  2663                           ;My_terminal.c: 42: break;
  2664  0286' 0012               	return	
  2665  0288'                    l9595:
  2666                           
  2667                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2668  0288' 0E00'              	movlw	low terminal_task@command
  2669  028A' 0100               	movlb	0	; () banked
  2670  028C' 6F00'              	movwf	ringbuf_backspace@rb& (0+255),b
  2671  028E' 0E00'              	movlw	high terminal_task@command
  2672  0290' 0100               	movlb	0	; () banked
  2673  0292' 6F00'              	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2674  0294' EC00' F000'        	call	_ringbuf_backspace	;wreg free
  2675                           
  2676                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2677  0298' C070' F00F'        	movff	terminal_task@tx,ringbuf_put_str@rb
  2678  029C' C071' F010'        	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2679  02A0' 0E00'              	movlw	low STR_19
  2680  02A2' 0100               	movlb	0	; () banked
  2681  02A4' 6F00'              	movwf	ringbuf_put_str@str& (0+255),b
  2682  02A6' 0E00'              	movlw	high STR_19
  2683  02A8' 0100               	movlb	0	; () banked
  2684  02AA' 6F00'              	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2685  02AC' EC00' F000'        	call	_ringbuf_put_str	;wreg free
  2686                           
  2687                           ;My_terminal.c: 46: break;
  2688  02B0' 0012               	return	
  2689  02B2'                    l9599:
  2690                           
  2691                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2692  02B2' 0E00               	movlw	0
  2693  02B4' 0103               	movlb	3	; () banked
  2694  02B6' 6F00'              	movwf	terminal_task@i_4539& (0+255),b
  2695  02B8' D00E               	goto	l9605
  2696  02BA'                    l9601:
  2697  02BA' C070' F00F'        	movff	terminal_task@tx,ringbuf_put_str@rb
  2698  02BE' C071' F010'        	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2699  02C2' 0E00'              	movlw	low STR_19
  2700  02C4' 0100               	movlb	0	; () banked
  2701  02C6' 6F00'              	movwf	ringbuf_put_str@str& (0+255),b
  2702  02C8' 0E00'              	movlw	high STR_19
  2703  02CA' 0100               	movlb	0	; () banked
  2704  02CC' 6F00'              	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2705  02CE' EC00' F000'        	call	_ringbuf_put_str	;wreg free
  2706  02D2' 0103               	movlb	3	; () banked
  2707  02D4' 2B00'              	incf	terminal_task@i_4539& (0+255),f,b
  2708  02D6'                    l9605:
  2709                           
  2710                           ; BSR set to: 3
  2711  02D6' 0E00'              	movlw	low terminal_task@command
  2712  02D8' 0100               	movlb	0	; () banked
  2713  02DA' 6F00'              	movwf	ringbuf_num@rb& (0+255),b
  2714  02DC' 0E00'              	movlw	high terminal_task@command
  2715  02DE' 0100               	movlb	0	; () banked
  2716  02E0' 6F00'              	movwf	(ringbuf_num@rb+1)& (0+255),b
  2717  02E2' EC00' F000'        	call	_ringbuf_num	;wreg free
  2718  02E6' 0103               	movlb	3	; () banked
  2719  02E8' 5100'              	movf	terminal_task@i_4539& (0+255),w,b
  2720  02EA' 0100               	movlb	0	; () banked
  2721  02EC' 6F00'              	movwf	??_terminal_task& (0+255),b
  2722  02EE' 6B00'              	clrf	(??_terminal_task+1)& (0+255),b
  2723  02F0' 0100               	movlb	0	; () banked
  2724  02F2' 5100'              	movf	?_ringbuf_num& (0+255),w,b
  2725  02F4' 0100               	movlb	0	; () banked
  2726  02F6' 5D00'              	subwf	??_terminal_task& (0+255),w,b
  2727  02F8' 0100               	movlb	0	; () banked
  2728  02FA' 5100'              	movf	(?_ringbuf_num+1)& (0+255),w,b
  2729  02FC' 0100               	movlb	0	; () banked
  2730  02FE' 5900'              	subwfb	(??_terminal_task+1)& (0+255),w,b
  2731  0300' A0D8               	btfss	status,0,c
  2732  0302' D7DB               	goto	l9601
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2736                           
  2737                           ; BSR set to: 0
  2738  0304' 0E00'              	movlw	low terminal_task@command
  2739  0306' 0100               	movlb	0	; () banked
  2740  0308' 6F00'              	movwf	ringbuf_delete@rb& (0+255),b
  2741  030A' 0E00'              	movlw	high terminal_task@command
  2742  030C' 0100               	movlb	0	; () banked
  2743  030E' 6F00'              	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2744  0310' EC00' F000'        	call	_ringbuf_delete	;wreg free
  2745                           
  2746                           ;My_terminal.c: 50: break;
  2747  0314' 0012               	return	
  2748  0316'                    l9609:
  2749                           
  2750                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2751  0316' 0E1F               	movlw	31
  2752  0318' 0103               	movlb	3	; () banked
  2753  031A' 6500'              	cpfsgt	terminal_task@ascii& (0+255),b
  2754  031C' 0012               	return	
  2755                           
  2756                           ; BSR set to: 3
  2757  031E' 0E7F               	movlw	127
  2758  0320' 0103               	movlb	3	; () banked
  2759  0322' 6100'              	cpfslt	terminal_task@ascii& (0+255),b
  2760  0324' 0012               	return	
  2761                           
  2762                           ; BSR set to: 3
  2763                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2764  0326' 0E00'              	movlw	low terminal_task@command
  2765  0328' 0100               	movlb	0	; () banked
  2766  032A' 6F00'              	movwf	ringbuf_put@rb& (0+255),b
  2767  032C' 0E00'              	movlw	high terminal_task@command
  2768  032E' 0100               	movlb	0	; () banked
  2769  0330' 6F00'              	movwf	(ringbuf_put@rb+1)& (0+255),b
  2770  0332' C067' F00A'        	movff	terminal_task@ascii,ringbuf_put@data
  2771  0336' EC00' F000'        	call	_ringbuf_put	;wreg free
  2772                           
  2773                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2774  033A' C070' F008'        	movff	terminal_task@tx,ringbuf_put@rb
  2775  033E' C071' F009'        	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2776  0342' C067' F00A'        	movff	terminal_task@ascii,ringbuf_put@data
  2777  0346' EC00' F000'        	call	_ringbuf_put	;wreg free
  2778                           
  2779                           ;My_terminal.c: 57: }
  2780                           
  2781                           ;My_terminal.c: 55: }
  2782                           ;My_terminal.c: 56: break;
  2783  034A' 0012               	return	
  2784  034C'                    l9617:
  2785  034C' 0103               	movlb	3	; () banked
  2786  034E' 5100'              	movf	terminal_task@ascii& (0+255),w,b
  2787                           
  2788                           ; Switch size 1, requested type "space"
  2789                           ; Number of cases is 4, Range of values is 8 to 127
  2790                           ; switch strategies available:
  2791                           ; Name         Instructions Cycles
  2792                           ; simple_byte           13     7 (average)
  2793                           ;	Chosen strategy is simple_byte
  2794  0350' 0A08               	xorlw	8	; case 8
  2795  0352' B4D8               	btfsc	status,2,c
  2796  0354' D799               	goto	l9595
  2797  0356' 0A05               	xorlw	5	; case 13
  2798  0358' B4D8               	btfsc	status,2,c
  2799  035A' D682               	goto	l9557
  2800  035C' 0A2D               	xorlw	45	; case 32
  2801  035E' B4D8               	btfsc	status,2,c
  2802  0360' D77E               	goto	l9593
  2803  0362' 0A5F               	xorlw	95	; case 127
  2804  0364' B4D8               	btfsc	status,2,c
  2805  0366' D7A5               	goto	l9599
  2806  0368' D7D6               	goto	l9609
  2807  036A'                    __end_of_terminal_task:
  2808                           	opt stack 0
  2809                           tblptru	equ	0xFF8
  2810                           tblptrh	equ	0xFF7
  2811                           tblptrl	equ	0xFF6
  2812                           tablat	equ	0xFF5
  2813                           prodh	equ	0xFF4
  2814                           prodl	equ	0xFF3
  2815                           intcon	equ	0xFF2
  2816                           postinc0	equ	0xFEE
  2817                           wreg	equ	0xFE8
  2818                           postdec1	equ	0xFE5
  2819                           fsr1h	equ	0xFE2
  2820                           fsr1l	equ	0xFE1
  2821                           indf2	equ	0xFDF
  2822                           fsr2h	equ	0xFDA
  2823                           fsr2l	equ	0xFD9
  2824                           status	equ	0xFD8
  2825                           
  2826 ;; *************** function _terminal_operation *****************
  2827 ;; Defined at:
  2828 ;;		line 170 in file "PIC18F27J53-killifish_light05.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  tx              2  100[BANK0 ] PTR struct ringbuf
  2831 ;;		 -> uart_tx(8), 
  2832 ;;  op0             2  102[BANK0 ] PTR unsigned char 
  2833 ;;		 -> terminal_task@op0(25), 
  2834 ;;  op1             2  104[BANK0 ] PTR unsigned char 
  2835 ;;		 -> terminal_task@op1(25), 
  2836 ;;  op2             2  106[BANK0 ] PTR unsigned char 
  2837 ;;		 -> terminal_task@op2(25), 
  2838 ;;  op3             2  108[BANK0 ] PTR unsigned char 
  2839 ;;		 -> terminal_task@op3(25), 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  str            30    0[BANK1 ] unsigned char [30]
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2851 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2852 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2853 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2854 ;;      Totals:         0      12      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2855 ;;Total ram usage:       46 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:   11
  2858 ;; This function calls:
  2859 ;;		_PWM_set
  2860 ;;		___awdiv
  2861 ;;		___wmul
  2862 ;;		_atoi
  2863 ;;		_ringbuf_put_str
  2864 ;;		_sprintf
  2865 ;;		_strcmp
  2866 ;;		_terminal_time
  2867 ;; This function is called by:
  2868 ;;		_terminal_task
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text2
  2873  0000'                    __ptext2:
  2874                           	opt stack 0
  2875  0000'                    _terminal_operation:
  2876                           	opt stack 18
  2877                           
  2878                           ;PIC18F27J53-killifish_light05.c: 171: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2879                           
  2880                           ;incstack = 0
  2881  0000' C066' F000'        	movff	terminal_operation@op0,strcmp@s1
  2882  0004' C067' F001'        	movff	terminal_operation@op0+1,strcmp@s1+1
  2883  0008' 0E00'              	movlw	low STR_41
  2884  000A' 0100               	movlb	0	; () banked
  2885  000C' 6F00'              	movwf	strcmp@s2& (0+255),b
  2886  000E' 0E00'              	movlw	high STR_41
  2887  0010' 0100               	movlb	0	; () banked
  2888  0012' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  2889  0014' EC00' F000'        	call	_strcmp	;wreg free
  2890  0018' 0100               	movlb	0	; () banked
  2891  001A' 5100'              	movf	?_strcmp& (0+255),w,b
  2892  001C' 0100               	movlb	0	; () banked
  2893  001E' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  2894  0020' B4D8               	btfsc	status,2,c
  2895  0022' D012               	goto	l9299
  2896                           
  2897                           ; BSR set to: 0
  2898  0024' C066' F000'        	movff	terminal_operation@op0,strcmp@s1
  2899  0028' C067' F001'        	movff	terminal_operation@op0+1,strcmp@s1+1
  2900  002C' 0E00'              	movlw	low STR_42
  2901  002E' 0100               	movlb	0	; () banked
  2902  0030' 6F00'              	movwf	strcmp@s2& (0+255),b
  2903  0032' 0E00'              	movlw	high STR_42
  2904  0034' 0100               	movlb	0	; () banked
  2905  0036' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  2906  0038' EC00' F000'        	call	_strcmp	;wreg free
  2907  003C' 0100               	movlb	0	; () banked
  2908  003E' 5100'              	movf	?_strcmp& (0+255),w,b
  2909  0040' 0100               	movlb	0	; () banked
  2910  0042' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  2911  0044' A4D8               	btfss	status,2,c
  2912  0046' D00C               	goto	l9301
  2913  0048'                    l9299:
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;PIC18F27J53-killifish_light05.c: 172: ringbuf_put_str(tx,
  2917                           ;PIC18F27J53-killifish_light05.c: 173: "\t**************************\n"
  2918                           ;PIC18F27J53-killifish_light05.c: 174: "\t**** Killifish Light  ****\n"
  2919                           ;PIC18F27J53-killifish_light05.c: 175: "\t**** Made by @Ryokeri ****\n"
  2920                           ;PIC18F27J53-killifish_light05.c: 176: "\t**************************\n\n"
  2921                           ;PIC18F27J53-killifish_light05.c: 177: "\tcommand \topeland1\topeland2\n\n"
  2922                           ;PIC18F27J53-killifish_light05.c: 178: "\tprint_time(t)\n"
  2923                           ;PIC18F27J53-killifish_light05.c: 179: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  2924  0048' C064' F00F'        	movff	terminal_operation@tx,ringbuf_put_str@rb
  2925  004C' C065' F010'        	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2926  0050' 0E00'              	movlw	low STR_43
  2927  0052' 0100               	movlb	0	; () banked
  2928  0054' 6F00'              	movwf	ringbuf_put_str@str& (0+255),b
  2929  0056' 0E00'              	movlw	high STR_43
  2930  0058' 0100               	movlb	0	; () banked
  2931  005A' 6F00'              	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2932  005C' EC00' F000'        	call	_ringbuf_put_str	;wreg free
  2933  0060'                    l9301:
  2934                           
  2935                           ;PIC18F27J53-killifish_light05.c: 186: }
  2936                           ;PIC18F27J53-killifish_light05.c: 187: terminal_time(tx, op0, op1, op2);
  2937  0060' C064' F05B'        	movff	terminal_operation@tx,terminal_time@tx
  2938  0064' C065' F05C'        	movff	terminal_operation@tx+1,terminal_time@tx+1
  2939  0068' C066' F05D'        	movff	terminal_operation@op0,terminal_time@op0
  2940  006C' C067' F05E'        	movff	terminal_operation@op0+1,terminal_time@op0+1
  2941  0070' C068' F05F'        	movff	terminal_operation@op1,terminal_time@op1
  2942  0074' C069' F060'        	movff	terminal_operation@op1+1,terminal_time@op1+1
  2943  0078' C06A' F061'        	movff	terminal_operation@op2,terminal_time@op2
  2944  007C' C06B' F062'        	movff	terminal_operation@op2+1,terminal_time@op2+1
  2945  0080' EC00' F000'        	call	_terminal_time	;wreg free
  2946                           
  2947                           ;PIC18F27J53-killifish_light05.c: 188: if (!strcmp(op0, "RESET();")) {
  2948  0084' C066' F000'        	movff	terminal_operation@op0,strcmp@s1
  2949  0088' C067' F001'        	movff	terminal_operation@op0+1,strcmp@s1+1
  2950  008C' 0E00'              	movlw	low STR_44
  2951  008E' 0100               	movlb	0	; () banked
  2952  0090' 6F00'              	movwf	strcmp@s2& (0+255),b
  2953  0092' 0E00'              	movlw	high STR_44
  2954  0094' 0100               	movlb	0	; () banked
  2955  0096' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  2956  0098' EC00' F000'        	call	_strcmp	;wreg free
  2957  009C' 0100               	movlb	0	; () banked
  2958  009E' 5100'              	movf	?_strcmp& (0+255),w,b
  2959  00A0' 0100               	movlb	0	; () banked
  2960  00A2' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  2961  00A4' B4D8               	btfsc	status,2,c
  2962                           
  2963                           ; BSR set to: 0
  2964  00A6' 00FF               	reset		;# 
  2965                           
  2966                           ;PIC18F27J53-killifish_light05.c: 190: }
  2967                           ;PIC18F27J53-killifish_light05.c: 191: if (!strcmp(op0, "en")) {
  2968  00A8' C066' F000'        	movff	terminal_operation@op0,strcmp@s1
  2969  00AC' C067' F001'        	movff	terminal_operation@op0+1,strcmp@s1+1
  2970  00B0' 0E00'              	movlw	low STR_45
  2971  00B2' 0100               	movlb	0	; () banked
  2972  00B4' 6F00'              	movwf	strcmp@s2& (0+255),b
  2973  00B6' 0E00'              	movlw	high STR_45
  2974  00B8' 0100               	movlb	0	; () banked
  2975  00BA' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  2976  00BC' EC00' F000'        	call	_strcmp	;wreg free
  2977  00C0' 0100               	movlb	0	; () banked
  2978  00C2' 5100'              	movf	?_strcmp& (0+255),w,b
  2979  00C4' 0100               	movlb	0	; () banked
  2980  00C6' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  2981  00C8' A4D8               	btfss	status,2,c
  2982  00CA' D036               	goto	l9313
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;PIC18F27J53-killifish_light05.c: 192: char str[30];
  2986                           ;PIC18F27J53-killifish_light05.c: 193: sprintf(str, "WREN=%d,EN=%d\n", RTCCFGbits.RTCWRE
      +                          N, RTCCFGbits.RTCEN);
  2987  00CC' 0E00'              	movlw	low terminal_operation@str
  2988  00CE' 0100               	movlb	0	; () banked
  2989  00D0' 6F00'              	movwf	sprintf@sp& (0+255),b
  2990  00D2' 0E00'              	movlw	high terminal_operation@str
  2991  00D4' 0100               	movlb	0	; () banked
  2992  00D6' 6F00'              	movwf	(sprintf@sp+1)& (0+255),b
  2993  00D8' 0E00'              	movlw	low STR_46
  2994  00DA' 0100               	movlb	0	; () banked
  2995  00DC' 6F00'              	movwf	sprintf@f& (0+255),b
  2996  00DE' 0E00'              	movlw	high STR_46
  2997  00E0' 0100               	movlb	0	; () banked
  2998  00E2' 6F00'              	movwf	(sprintf@f+1)& (0+255),b
  2999  00E4' 010F               	movlb	15	; () banked
  3000  00E6' AB3F               	btfss	63,5,b	;volatile
  3001  00E8' D004               	goto	u9490
  3002  00EA' 0100               	movlb	0	; () banked
  3003  00EC' 6B00'              	clrf	??_terminal_operation& (0+255),b
  3004  00EE' 2B00'              	incf	??_terminal_operation& (0+255),f,b
  3005  00F0' D002               	goto	u9498
  3006  00F2'                    u9490:
  3007  00F2' 0100               	movlb	0	; () banked
  3008  00F4' 6B00'              	clrf	??_terminal_operation& (0+255),b
  3009  00F6'                    u9498:
  3010  00F6' 0100               	movlb	0	; () banked
  3011  00F8' 5100'              	movf	??_terminal_operation& (0+255),w,b
  3012  00FA' 0100               	movlb	0	; () banked
  3013  00FC' 6F00'              	movwf	(?_sprintf+4)& (0+255),b
  3014  00FE' 6B00'              	clrf	(?_sprintf+5)& (0+255),b
  3015  0100' 010F               	movlb	15	; () banked
  3016  0102' AF3F               	btfss	63,7,b	;volatile
  3017  0104' D004               	goto	u9500
  3018  0106' 0100               	movlb	0	; () banked
  3019  0108' 6B00'              	clrf	(??_terminal_operation+1)& (0+255),b
  3020  010A' 2B00'              	incf	(??_terminal_operation+1)& (0+255),f,b
  3021  010C' D002               	goto	u9508
  3022  010E'                    u9500:
  3023  010E' 0100               	movlb	0	; () banked
  3024  0110' 6B00'              	clrf	(??_terminal_operation+1)& (0+255),b
  3025  0112'                    u9508:
  3026  0112' 0100               	movlb	0	; () banked
  3027  0114' 5100'              	movf	(??_terminal_operation+1)& (0+255),w,b
  3028  0116' 0100               	movlb	0	; () banked
  3029  0118' 6F00'              	movwf	(?_sprintf+6)& (0+255),b
  3030  011A' 6B00'              	clrf	(?_sprintf+7)& (0+255),b
  3031  011C' EC00' F000'        	call	_sprintf	;wreg free
  3032                           
  3033                           ;PIC18F27J53-killifish_light05.c: 194: ringbuf_put_str(tx, str);
  3034  0120' C064' F00F'        	movff	terminal_operation@tx,ringbuf_put_str@rb
  3035  0124' C065' F010'        	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  3036  0128' 0E00'              	movlw	low terminal_operation@str
  3037  012A' 0100               	movlb	0	; () banked
  3038  012C' 6F00'              	movwf	ringbuf_put_str@str& (0+255),b
  3039  012E' 0E00'              	movlw	high terminal_operation@str
  3040  0130' 0100               	movlb	0	; () banked
  3041  0132' 6F00'              	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3042  0134' EC00' F000'        	call	_ringbuf_put_str	;wreg free
  3043  0138'                    l9313:
  3044                           
  3045                           ;PIC18F27J53-killifish_light05.c: 195: }
  3046                           ;PIC18F27J53-killifish_light05.c: 196: if (!strcmp(op0, "set")) {
  3047  0138' C066' F000'        	movff	terminal_operation@op0,strcmp@s1
  3048  013C' C067' F001'        	movff	terminal_operation@op0+1,strcmp@s1+1
  3049  0140' 0E00'              	movlw	low STR_47
  3050  0142' 0100               	movlb	0	; () banked
  3051  0144' 6F00'              	movwf	strcmp@s2& (0+255),b
  3052  0146' 0E00'              	movlw	high STR_47
  3053  0148' 0100               	movlb	0	; () banked
  3054  014A' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3055  014C' EC00' F000'        	call	_strcmp	;wreg free
  3056  0150' 0100               	movlb	0	; () banked
  3057  0152' 5100'              	movf	?_strcmp& (0+255),w,b
  3058  0154' 0100               	movlb	0	; () banked
  3059  0156' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3060  0158' A4D8               	btfss	status,2,c
  3061  015A' D03C               	goto	l9325
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;PIC18F27J53-killifish_light05.c: 197: if (!strcmp(op1, "sync")) {
  3065  015C' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3066  0160' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3067  0164' 0E00'              	movlw	low STR_48
  3068  0166' 0100               	movlb	0	; () banked
  3069  0168' 6F00'              	movwf	strcmp@s2& (0+255),b
  3070  016A' 0E00'              	movlw	high STR_48
  3071  016C' 0100               	movlb	0	; () banked
  3072  016E' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3073  0170' EC00' F000'        	call	_strcmp	;wreg free
  3074  0174' 0100               	movlb	0	; () banked
  3075  0176' 5100'              	movf	?_strcmp& (0+255),w,b
  3076  0178' 0100               	movlb	0	; () banked
  3077  017A' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3078  017C' A4D8               	btfss	status,2,c
  3079  017E' D003               	goto	l9319
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;PIC18F27J53-killifish_light05.c: 198: light_mode = TIME_SYNC_mode;
  3083  0180' 0E00               	movlw	0
  3084  0182' 0100               	movlb	0	; () banked
  3085  0184' 6F00'              	movwf	_light_mode& (0+255),b
  3086  0186'                    l9319:
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;PIC18F27J53-killifish_light05.c: 199: }
  3090                           ;PIC18F27J53-killifish_light05.c: 200: if (!strcmp(op1, "adc") || !strcmp(op1, "ADC")) {
  3091  0186' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3092  018A' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3093  018E' 0E00'              	movlw	low STR_49
  3094  0190' 0100               	movlb	0	; () banked
  3095  0192' 6F00'              	movwf	strcmp@s2& (0+255),b
  3096  0194' 0E00'              	movlw	high STR_49
  3097  0196' 0100               	movlb	0	; () banked
  3098  0198' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3099  019A' EC00' F000'        	call	_strcmp	;wreg free
  3100  019E' 0100               	movlb	0	; () banked
  3101  01A0' 5100'              	movf	?_strcmp& (0+255),w,b
  3102  01A2' 0100               	movlb	0	; () banked
  3103  01A4' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3104  01A6' B4D8               	btfsc	status,2,c
  3105  01A8' D012               	goto	l9323
  3106                           
  3107                           ; BSR set to: 0
  3108  01AA' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3109  01AE' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3110  01B2' 0E00'              	movlw	low STR_50
  3111  01B4' 0100               	movlb	0	; () banked
  3112  01B6' 6F00'              	movwf	strcmp@s2& (0+255),b
  3113  01B8' 0E00'              	movlw	high STR_50
  3114  01BA' 0100               	movlb	0	; () banked
  3115  01BC' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3116  01BE' EC00' F000'        	call	_strcmp	;wreg free
  3117  01C2' 0100               	movlb	0	; () banked
  3118  01C4' 5100'              	movf	?_strcmp& (0+255),w,b
  3119  01C6' 0100               	movlb	0	; () banked
  3120  01C8' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3121  01CA' A4D8               	btfss	status,2,c
  3122  01CC' D003               	goto	l9325
  3123  01CE'                    l9323:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;PIC18F27J53-killifish_light05.c: 201: light_mode = ADC_mode;
  3127  01CE' 0E01               	movlw	1
  3128  01D0' 0100               	movlb	0	; () banked
  3129  01D2' 6F00'              	movwf	_light_mode& (0+255),b
  3130  01D4'                    l9325:
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;PIC18F27J53-killifish_light05.c: 202: }
  3134                           ;PIC18F27J53-killifish_light05.c: 203: }
  3135                           ;PIC18F27J53-killifish_light05.c: 204: if (!strcmp(op0, "pwm") || !strcmp(op0, "PWM")) {
  3136  01D4' C066' F000'        	movff	terminal_operation@op0,strcmp@s1
  3137  01D8' C067' F001'        	movff	terminal_operation@op0+1,strcmp@s1+1
  3138  01DC' 0E00'              	movlw	low STR_51
  3139  01DE' 0100               	movlb	0	; () banked
  3140  01E0' 6F00'              	movwf	strcmp@s2& (0+255),b
  3141  01E2' 0E00'              	movlw	high STR_51
  3142  01E4' 0100               	movlb	0	; () banked
  3143  01E6' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3144  01E8' EC00' F000'        	call	_strcmp	;wreg free
  3145  01EC' 0100               	movlb	0	; () banked
  3146  01EE' 5100'              	movf	?_strcmp& (0+255),w,b
  3147  01F0' 0100               	movlb	0	; () banked
  3148  01F2' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3149  01F4' B4D8               	btfsc	status,2,c
  3150  01F6' D012               	goto	l9329
  3151                           
  3152                           ; BSR set to: 0
  3153  01F8' C066' F000'        	movff	terminal_operation@op0,strcmp@s1
  3154  01FC' C067' F001'        	movff	terminal_operation@op0+1,strcmp@s1+1
  3155  0200' 0E00'              	movlw	low STR_52
  3156  0202' 0100               	movlb	0	; () banked
  3157  0204' 6F00'              	movwf	strcmp@s2& (0+255),b
  3158  0206' 0E00'              	movlw	high STR_52
  3159  0208' 0100               	movlb	0	; () banked
  3160  020A' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3161  020C' EC00' F000'        	call	_strcmp	;wreg free
  3162  0210' 0100               	movlb	0	; () banked
  3163  0212' 5100'              	movf	?_strcmp& (0+255),w,b
  3164  0214' 0100               	movlb	0	; () banked
  3165  0216' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3166  0218' A4D8               	btfss	status,2,c
  3167  021A' 0012               	return	
  3168  021C'                    l9329:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;PIC18F27J53-killifish_light05.c: 205: if (!strcmp(op1, "r") || !strcmp(op1, "R")) {
  3172  021C' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3173  0220' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3174  0224' 0E00'              	movlw	low (STR_61+4)
  3175  0226' 0100               	movlb	0	; () banked
  3176  0228' 6F00'              	movwf	strcmp@s2& (0+255),b
  3177  022A' 0E00'              	movlw	high (STR_61+4)
  3178  022C' 0100               	movlb	0	; () banked
  3179  022E' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3180  0230' EC00' F000'        	call	_strcmp	;wreg free
  3181  0234' 0100               	movlb	0	; () banked
  3182  0236' 5100'              	movf	?_strcmp& (0+255),w,b
  3183  0238' 0100               	movlb	0	; () banked
  3184  023A' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3185  023C' B4D8               	btfsc	status,2,c
  3186  023E' D012               	goto	l9333
  3187                           
  3188                           ; BSR set to: 0
  3189  0240' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3190  0244' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3191  0248' 0E00'              	movlw	low STR_54
  3192  024A' 0100               	movlb	0	; () banked
  3193  024C' 6F00'              	movwf	strcmp@s2& (0+255),b
  3194  024E' 0E00'              	movlw	high STR_54
  3195  0250' 0100               	movlb	0	; () banked
  3196  0252' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3197  0254' EC00' F000'        	call	_strcmp	;wreg free
  3198  0258' 0100               	movlb	0	; () banked
  3199  025A' 5100'              	movf	?_strcmp& (0+255),w,b
  3200  025C' 0100               	movlb	0	; () banked
  3201  025E' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3202  0260' A4D8               	btfss	status,2,c
  3203  0262' D02E               	goto	l9341
  3204  0264'                    l9333:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;PIC18F27J53-killifish_light05.c: 206: light_mode = COMMAND_mode;
  3208  0264' 0E02               	movlw	2
  3209  0266' 0100               	movlb	0	; () banked
  3210  0268' 6F00'              	movwf	_light_mode& (0+255),b
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;PIC18F27J53-killifish_light05.c: 207: PWM_set(0, atoi(op2) * 250 / 100);
  3214  026A' C06A' F006'        	movff	terminal_operation@op2,atoi@s
  3215  026E' C06B' F007'        	movff	terminal_operation@op2+1,atoi@s+1
  3216  0272' EC00' F000'        	call	_atoi	;wreg free
  3217  0276' C006' F01E'        	movff	?_atoi,_terminal_operation$6899
  3218  027A' C007' F01F'        	movff	?_atoi+1,_terminal_operation$6899+1
  3219                           
  3220                           ;PIC18F27J53-killifish_light05.c: 207: PWM_set(0, atoi(op2) * 250 / 100);
  3221  027E' C01E' F000'        	movff	_terminal_operation$6899,___wmul@multiplier
  3222  0282' C01F' F001'        	movff	_terminal_operation$6899+1,___wmul@multiplier+1
  3223  0286' 0E00               	movlw	0
  3224  0288' 0100               	movlb	0	; () banked
  3225  028A' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
  3226  028C' 0EFA               	movlw	250
  3227  028E' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
  3228  0290' EC00' F000'        	call	___wmul	;wreg free
  3229  0294' C000' F00D'        	movff	?___wmul,___awdiv@dividend
  3230  0298' C001' F00E'        	movff	?___wmul+1,___awdiv@dividend+1
  3231  029C' 0E00               	movlw	0
  3232  029E' 0100               	movlb	0	; () banked
  3233  02A0' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
  3234  02A2' 0E64               	movlw	100
  3235  02A4' 6F00'              	movwf	___awdiv@divisor& (0+255),b
  3236  02A6' EC00' F000'        	call	___awdiv	;wreg free
  3237  02AA' C00D' F020'        	movff	?___awdiv,_terminal_operation$6900
  3238  02AE' C00E' F021'        	movff	?___awdiv+1,_terminal_operation$6900+1
  3239                           
  3240                           ;PIC18F27J53-killifish_light05.c: 207: PWM_set(0, atoi(op2) * 250 / 100);
  3241  02B2' C020' F015'        	movff	_terminal_operation$6900,PWM_set@value
  3242  02B6' C021' F016'        	movff	_terminal_operation$6900+1,PWM_set@value+1
  3243  02BA' 0E00               	movlw	0
  3244  02BC' EC00' F000'        	call	_PWM_set
  3245  02C0'                    l9341:
  3246                           
  3247                           ;PIC18F27J53-killifish_light05.c: 208: }
  3248                           ;PIC18F27J53-killifish_light05.c: 209: if (!strcmp(op1, "g") || !strcmp(op1, "G")) {
  3249  02C0' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3250  02C4' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3251  02C8' 0E00'              	movlw	low STR_55
  3252  02CA' 0100               	movlb	0	; () banked
  3253  02CC' 6F00'              	movwf	strcmp@s2& (0+255),b
  3254  02CE' 0E00'              	movlw	high STR_55
  3255  02D0' 0100               	movlb	0	; () banked
  3256  02D2' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3257  02D4' EC00' F000'        	call	_strcmp	;wreg free
  3258  02D8' 0100               	movlb	0	; () banked
  3259  02DA' 5100'              	movf	?_strcmp& (0+255),w,b
  3260  02DC' 0100               	movlb	0	; () banked
  3261  02DE' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3262  02E0' B4D8               	btfsc	status,2,c
  3263  02E2' D012               	goto	l9345
  3264                           
  3265                           ; BSR set to: 0
  3266  02E4' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3267  02E8' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3268  02EC' 0E00'              	movlw	low STR_56
  3269  02EE' 0100               	movlb	0	; () banked
  3270  02F0' 6F00'              	movwf	strcmp@s2& (0+255),b
  3271  02F2' 0E00'              	movlw	high STR_56
  3272  02F4' 0100               	movlb	0	; () banked
  3273  02F6' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3274  02F8' EC00' F000'        	call	_strcmp	;wreg free
  3275  02FC' 0100               	movlb	0	; () banked
  3276  02FE' 5100'              	movf	?_strcmp& (0+255),w,b
  3277  0300' 0100               	movlb	0	; () banked
  3278  0302' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3279  0304' A4D8               	btfss	status,2,c
  3280  0306' D02E               	goto	l9353
  3281  0308'                    l9345:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;PIC18F27J53-killifish_light05.c: 210: light_mode = COMMAND_mode;
  3285  0308' 0E02               	movlw	2
  3286  030A' 0100               	movlb	0	; () banked
  3287  030C' 6F00'              	movwf	_light_mode& (0+255),b
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;PIC18F27J53-killifish_light05.c: 211: PWM_set(1, atoi(op2) * 250 / 100);
  3291  030E' C06A' F006'        	movff	terminal_operation@op2,atoi@s
  3292  0312' C06B' F007'        	movff	terminal_operation@op2+1,atoi@s+1
  3293  0316' EC00' F000'        	call	_atoi	;wreg free
  3294  031A' C006' F01E'        	movff	?_atoi,_terminal_operation$6899
  3295  031E' C007' F01F'        	movff	?_atoi+1,_terminal_operation$6899+1
  3296                           
  3297                           ;PIC18F27J53-killifish_light05.c: 211: PWM_set(1, atoi(op2) * 250 / 100);
  3298  0322' C01E' F000'        	movff	_terminal_operation$6899,___wmul@multiplier
  3299  0326' C01F' F001'        	movff	_terminal_operation$6899+1,___wmul@multiplier+1
  3300  032A' 0E00               	movlw	0
  3301  032C' 0100               	movlb	0	; () banked
  3302  032E' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
  3303  0330' 0EFA               	movlw	250
  3304  0332' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
  3305  0334' EC00' F000'        	call	___wmul	;wreg free
  3306  0338' C000' F00D'        	movff	?___wmul,___awdiv@dividend
  3307  033C' C001' F00E'        	movff	?___wmul+1,___awdiv@dividend+1
  3308  0340' 0E00               	movlw	0
  3309  0342' 0100               	movlb	0	; () banked
  3310  0344' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
  3311  0346' 0E64               	movlw	100
  3312  0348' 6F00'              	movwf	___awdiv@divisor& (0+255),b
  3313  034A' EC00' F000'        	call	___awdiv	;wreg free
  3314  034E' C00D' F020'        	movff	?___awdiv,_terminal_operation$6900
  3315  0352' C00E' F021'        	movff	?___awdiv+1,_terminal_operation$6900+1
  3316                           
  3317                           ;PIC18F27J53-killifish_light05.c: 211: PWM_set(1, atoi(op2) * 250 / 100);
  3318  0356' C020' F015'        	movff	_terminal_operation$6900,PWM_set@value
  3319  035A' C021' F016'        	movff	_terminal_operation$6900+1,PWM_set@value+1
  3320  035E' 0E01               	movlw	1
  3321  0360' EC00' F000'        	call	_PWM_set
  3322  0364'                    l9353:
  3323                           
  3324                           ;PIC18F27J53-killifish_light05.c: 212: }
  3325                           ;PIC18F27J53-killifish_light05.c: 213: if (!strcmp(op1, "b") || !strcmp(op1, "B")) {
  3326  0364' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3327  0368' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3328  036C' 0E00'              	movlw	low STR_57
  3329  036E' 0100               	movlb	0	; () banked
  3330  0370' 6F00'              	movwf	strcmp@s2& (0+255),b
  3331  0372' 0E00'              	movlw	high STR_57
  3332  0374' 0100               	movlb	0	; () banked
  3333  0376' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3334  0378' EC00' F000'        	call	_strcmp	;wreg free
  3335  037C' 0100               	movlb	0	; () banked
  3336  037E' 5100'              	movf	?_strcmp& (0+255),w,b
  3337  0380' 0100               	movlb	0	; () banked
  3338  0382' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3339  0384' B4D8               	btfsc	status,2,c
  3340  0386' D012               	goto	l9357
  3341                           
  3342                           ; BSR set to: 0
  3343  0388' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3344  038C' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3345  0390' 0E00'              	movlw	low STR_58
  3346  0392' 0100               	movlb	0	; () banked
  3347  0394' 6F00'              	movwf	strcmp@s2& (0+255),b
  3348  0396' 0E00'              	movlw	high STR_58
  3349  0398' 0100               	movlb	0	; () banked
  3350  039A' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3351  039C' EC00' F000'        	call	_strcmp	;wreg free
  3352  03A0' 0100               	movlb	0	; () banked
  3353  03A2' 5100'              	movf	?_strcmp& (0+255),w,b
  3354  03A4' 0100               	movlb	0	; () banked
  3355  03A6' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3356  03A8' A4D8               	btfss	status,2,c
  3357  03AA' D02E               	goto	l9365
  3358  03AC'                    l9357:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;PIC18F27J53-killifish_light05.c: 214: light_mode = COMMAND_mode;
  3362  03AC' 0E02               	movlw	2
  3363  03AE' 0100               	movlb	0	; () banked
  3364  03B0' 6F00'              	movwf	_light_mode& (0+255),b
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;PIC18F27J53-killifish_light05.c: 215: PWM_set(2, atoi(op2) * 250 / 100);
  3368  03B2' C06A' F006'        	movff	terminal_operation@op2,atoi@s
  3369  03B6' C06B' F007'        	movff	terminal_operation@op2+1,atoi@s+1
  3370  03BA' EC00' F000'        	call	_atoi	;wreg free
  3371  03BE' C006' F01E'        	movff	?_atoi,_terminal_operation$6899
  3372  03C2' C007' F01F'        	movff	?_atoi+1,_terminal_operation$6899+1
  3373                           
  3374                           ;PIC18F27J53-killifish_light05.c: 215: PWM_set(2, atoi(op2) * 250 / 100);
  3375  03C6' C01E' F000'        	movff	_terminal_operation$6899,___wmul@multiplier
  3376  03CA' C01F' F001'        	movff	_terminal_operation$6899+1,___wmul@multiplier+1
  3377  03CE' 0E00               	movlw	0
  3378  03D0' 0100               	movlb	0	; () banked
  3379  03D2' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
  3380  03D4' 0EFA               	movlw	250
  3381  03D6' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
  3382  03D8' EC00' F000'        	call	___wmul	;wreg free
  3383  03DC' C000' F00D'        	movff	?___wmul,___awdiv@dividend
  3384  03E0' C001' F00E'        	movff	?___wmul+1,___awdiv@dividend+1
  3385  03E4' 0E00               	movlw	0
  3386  03E6' 0100               	movlb	0	; () banked
  3387  03E8' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
  3388  03EA' 0E64               	movlw	100
  3389  03EC' 6F00'              	movwf	___awdiv@divisor& (0+255),b
  3390  03EE' EC00' F000'        	call	___awdiv	;wreg free
  3391  03F2' C00D' F020'        	movff	?___awdiv,_terminal_operation$6900
  3392  03F6' C00E' F021'        	movff	?___awdiv+1,_terminal_operation$6900+1
  3393                           
  3394                           ;PIC18F27J53-killifish_light05.c: 215: PWM_set(2, atoi(op2) * 250 / 100);
  3395  03FA' C020' F015'        	movff	_terminal_operation$6900,PWM_set@value
  3396  03FE' C021' F016'        	movff	_terminal_operation$6900+1,PWM_set@value+1
  3397  0402' 0E02               	movlw	2
  3398  0404' EC00' F000'        	call	_PWM_set
  3399  0408'                    l9365:
  3400                           
  3401                           ;PIC18F27J53-killifish_light05.c: 216: }
  3402                           ;PIC18F27J53-killifish_light05.c: 217: if (!strcmp(op1, "w") || !strcmp(op1, "W")) {
  3403  0408' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3404  040C' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3405  0410' 0E00'              	movlw	low STR_59
  3406  0412' 0100               	movlb	0	; () banked
  3407  0414' 6F00'              	movwf	strcmp@s2& (0+255),b
  3408  0416' 0E00'              	movlw	high STR_59
  3409  0418' 0100               	movlb	0	; () banked
  3410  041A' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3411  041C' EC00' F000'        	call	_strcmp	;wreg free
  3412  0420' 0100               	movlb	0	; () banked
  3413  0422' 5100'              	movf	?_strcmp& (0+255),w,b
  3414  0424' 0100               	movlb	0	; () banked
  3415  0426' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3416  0428' B4D8               	btfsc	status,2,c
  3417  042A' D012               	goto	l9369
  3418                           
  3419                           ; BSR set to: 0
  3420  042C' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3421  0430' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3422  0434' 0E00'              	movlw	low STR_60
  3423  0436' 0100               	movlb	0	; () banked
  3424  0438' 6F00'              	movwf	strcmp@s2& (0+255),b
  3425  043A' 0E00'              	movlw	high STR_60
  3426  043C' 0100               	movlb	0	; () banked
  3427  043E' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3428  0440' EC00' F000'        	call	_strcmp	;wreg free
  3429  0444' 0100               	movlb	0	; () banked
  3430  0446' 5100'              	movf	?_strcmp& (0+255),w,b
  3431  0448' 0100               	movlb	0	; () banked
  3432  044A' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3433  044C' A4D8               	btfss	status,2,c
  3434  044E' D02E               	goto	l9377
  3435  0450'                    l9369:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;PIC18F27J53-killifish_light05.c: 218: light_mode = COMMAND_mode;
  3439  0450' 0E02               	movlw	2
  3440  0452' 0100               	movlb	0	; () banked
  3441  0454' 6F00'              	movwf	_light_mode& (0+255),b
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;PIC18F27J53-killifish_light05.c: 219: PWM_set(3, atoi(op2) * 250 / 100);
  3445  0456' C06A' F006'        	movff	terminal_operation@op2,atoi@s
  3446  045A' C06B' F007'        	movff	terminal_operation@op2+1,atoi@s+1
  3447  045E' EC00' F000'        	call	_atoi	;wreg free
  3448  0462' C006' F01E'        	movff	?_atoi,_terminal_operation$6899
  3449  0466' C007' F01F'        	movff	?_atoi+1,_terminal_operation$6899+1
  3450                           
  3451                           ;PIC18F27J53-killifish_light05.c: 219: PWM_set(3, atoi(op2) * 250 / 100);
  3452  046A' C01E' F000'        	movff	_terminal_operation$6899,___wmul@multiplier
  3453  046E' C01F' F001'        	movff	_terminal_operation$6899+1,___wmul@multiplier+1
  3454  0472' 0E00               	movlw	0
  3455  0474' 0100               	movlb	0	; () banked
  3456  0476' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
  3457  0478' 0EFA               	movlw	250
  3458  047A' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
  3459  047C' EC00' F000'        	call	___wmul	;wreg free
  3460  0480' C000' F00D'        	movff	?___wmul,___awdiv@dividend
  3461  0484' C001' F00E'        	movff	?___wmul+1,___awdiv@dividend+1
  3462  0488' 0E00               	movlw	0
  3463  048A' 0100               	movlb	0	; () banked
  3464  048C' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
  3465  048E' 0E64               	movlw	100
  3466  0490' 6F00'              	movwf	___awdiv@divisor& (0+255),b
  3467  0492' EC00' F000'        	call	___awdiv	;wreg free
  3468  0496' C00D' F020'        	movff	?___awdiv,_terminal_operation$6900
  3469  049A' C00E' F021'        	movff	?___awdiv+1,_terminal_operation$6900+1
  3470                           
  3471                           ;PIC18F27J53-killifish_light05.c: 219: PWM_set(3, atoi(op2) * 250 / 100);
  3472  049E' C020' F015'        	movff	_terminal_operation$6900,PWM_set@value
  3473  04A2' C021' F016'        	movff	_terminal_operation$6900+1,PWM_set@value+1
  3474  04A6' 0E03               	movlw	3
  3475  04A8' EC00' F000'        	call	_PWM_set
  3476  04AC'                    l9377:
  3477                           
  3478                           ;PIC18F27J53-killifish_light05.c: 220: }
  3479                           ;PIC18F27J53-killifish_light05.c: 221: if (!strcmp(op1, "clear")) {
  3480  04AC' C068' F000'        	movff	terminal_operation@op1,strcmp@s1
  3481  04B0' C069' F001'        	movff	terminal_operation@op1+1,strcmp@s1+1
  3482  04B4' 0E00'              	movlw	low STR_61
  3483  04B6' 0100               	movlb	0	; () banked
  3484  04B8' 6F00'              	movwf	strcmp@s2& (0+255),b
  3485  04BA' 0E00'              	movlw	high STR_61
  3486  04BC' 0100               	movlb	0	; () banked
  3487  04BE' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3488  04C0' EC00' F000'        	call	_strcmp	;wreg free
  3489  04C4' 0100               	movlb	0	; () banked
  3490  04C6' 5100'              	movf	?_strcmp& (0+255),w,b
  3491  04C8' 0100               	movlb	0	; () banked
  3492  04CA' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3493  04CC' A4D8               	btfss	status,2,c
  3494  04CE' 0012               	return	
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;PIC18F27J53-killifish_light05.c: 222: light_mode = COMMAND_mode;
  3498  04D0' 0E02               	movlw	2
  3499  04D2' 0100               	movlb	0	; () banked
  3500  04D4' 6F00'              	movwf	_light_mode& (0+255),b
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;PIC18F27J53-killifish_light05.c: 223: PWM_set(0, 0);
  3504  04D6' 0E00               	movlw	0
  3505  04D8' 0100               	movlb	0	; () banked
  3506  04DA' 6F00'              	movwf	(PWM_set@value+1)& (0+255),b
  3507  04DC' 0E00               	movlw	0
  3508  04DE' 6F00'              	movwf	PWM_set@value& (0+255),b
  3509  04E0' 0E00               	movlw	0
  3510  04E2' EC00' F000'        	call	_PWM_set
  3511                           
  3512                           ;PIC18F27J53-killifish_light05.c: 224: PWM_set(1, 0);
  3513  04E6' 0E00               	movlw	0
  3514  04E8' 0100               	movlb	0	; () banked
  3515  04EA' 6F00'              	movwf	(PWM_set@value+1)& (0+255),b
  3516  04EC' 0E00               	movlw	0
  3517  04EE' 6F00'              	movwf	PWM_set@value& (0+255),b
  3518  04F0' 0E01               	movlw	1
  3519  04F2' EC00' F000'        	call	_PWM_set
  3520                           
  3521                           ;PIC18F27J53-killifish_light05.c: 225: PWM_set(2, 0);
  3522  04F6' 0E00               	movlw	0
  3523  04F8' 0100               	movlb	0	; () banked
  3524  04FA' 6F00'              	movwf	(PWM_set@value+1)& (0+255),b
  3525  04FC' 0E00               	movlw	0
  3526  04FE' 6F00'              	movwf	PWM_set@value& (0+255),b
  3527  0500' 0E02               	movlw	2
  3528  0502' EC00' F000'        	call	_PWM_set
  3529                           
  3530                           ;PIC18F27J53-killifish_light05.c: 226: PWM_set(3, 0);
  3531  0506' 0E00               	movlw	0
  3532  0508' 0100               	movlb	0	; () banked
  3533  050A' 6F00'              	movwf	(PWM_set@value+1)& (0+255),b
  3534  050C' 0E00               	movlw	0
  3535  050E' 6F00'              	movwf	PWM_set@value& (0+255),b
  3536  0510' 0E03               	movlw	3
  3537  0512' EC00' F000'        	call	_PWM_set
  3538  0516' 0012               	return	
  3539  0518'                    __end_of_terminal_operation:
  3540                           	opt stack 0
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           prodh	equ	0xFF4
  3546                           prodl	equ	0xFF3
  3547                           intcon	equ	0xFF2
  3548                           postinc0	equ	0xFEE
  3549                           wreg	equ	0xFE8
  3550                           postdec1	equ	0xFE5
  3551                           fsr1h	equ	0xFE2
  3552                           fsr1l	equ	0xFE1
  3553                           indf2	equ	0xFDF
  3554                           fsr2h	equ	0xFDA
  3555                           fsr2l	equ	0xFD9
  3556                           status	equ	0xFD8
  3557                           
  3558 ;; *************** function _terminal_time *****************
  3559 ;; Defined at:
  3560 ;;		line 93 in file "../My_library/My_terminal.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  tx              2   91[BANK0 ] PTR struct ringbuf
  3563 ;;		 -> uart_tx(8), 
  3564 ;;  op0             2   93[BANK0 ] PTR unsigned char 
  3565 ;;		 -> terminal_task@op0(25), 
  3566 ;;  op1             2   95[BANK0 ] PTR unsigned char 
  3567 ;;		 -> terminal_task@op1(25), 
  3568 ;;  op2             2   97[BANK0 ] PTR unsigned char 
  3569 ;;		 -> terminal_task@op2(25), 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;		None               void
  3574 ;; Registers used:
  3575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3581 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3584 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3585 ;;Total ram usage:        9 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:   10
  3588 ;; This function calls:
  3589 ;;		_atoi
  3590 ;;		_month_length
  3591 ;;		_print_time
  3592 ;;		_strcmp
  3593 ;;		_terminal_at_hand
  3594 ;; This function is called by:
  3595 ;;		_terminal_operation
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text3
  3600  0000'                    __ptext3:
  3601                           	opt stack 0
  3602  0000'                    _terminal_time:
  3603                           	opt stack 18
  3604                           
  3605                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3606                           
  3607                           ;incstack = 0
  3608  0000' C05D' F000'        	movff	terminal_time@op0,strcmp@s1
  3609  0004' C05E' F001'        	movff	terminal_time@op0+1,strcmp@s1+1
  3610  0008' 0E00'              	movlw	low STR_25
  3611  000A' 0100               	movlb	0	; () banked
  3612  000C' 6F00'              	movwf	strcmp@s2& (0+255),b
  3613  000E' 0E00'              	movlw	high STR_25
  3614  0010' 0100               	movlb	0	; () banked
  3615  0012' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3616  0014' EC00' F000'        	call	_strcmp	;wreg free
  3617  0018' 0100               	movlb	0	; () banked
  3618  001A' 5100'              	movf	?_strcmp& (0+255),w,b
  3619  001C' 0100               	movlb	0	; () banked
  3620  001E' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3621  0020' B4D8               	btfsc	status,2,c
  3622  0022' D012               	goto	l9063
  3623                           
  3624                           ; BSR set to: 0
  3625  0024' C05D' F000'        	movff	terminal_time@op0,strcmp@s1
  3626  0028' C05E' F001'        	movff	terminal_time@op0+1,strcmp@s1+1
  3627  002C' 0E00'              	movlw	low (STR_27+1)
  3628  002E' 0100               	movlb	0	; () banked
  3629  0030' 6F00'              	movwf	strcmp@s2& (0+255),b
  3630  0032' 0E00'              	movlw	high (STR_27+1)
  3631  0034' 0100               	movlb	0	; () banked
  3632  0036' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3633  0038' EC00' F000'        	call	_strcmp	;wreg free
  3634  003C' 0100               	movlb	0	; () banked
  3635  003E' 5100'              	movf	?_strcmp& (0+255),w,b
  3636  0040' 0100               	movlb	0	; () banked
  3637  0042' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3638  0044' A4D8               	btfss	status,2,c
  3639  0046' D006               	goto	l9065
  3640  0048'                    l9063:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;My_terminal.c: 95: print_time(tx);
  3644  0048' C05B' F034'        	movff	terminal_time@tx,print_time@tx
  3645  004C' C05C' F035'        	movff	terminal_time@tx+1,print_time@tx+1
  3646  0050' EC00' F000'        	call	_print_time	;wreg free
  3647  0054'                    l9065:
  3648                           
  3649                           ;My_terminal.c: 96: }
  3650                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3651  0054' C05D' F000'        	movff	terminal_time@op0,strcmp@s1
  3652  0058' C05E' F001'        	movff	terminal_time@op0+1,strcmp@s1+1
  3653  005C' 0E00'              	movlw	low STR_27
  3654  005E' 0100               	movlb	0	; () banked
  3655  0060' 6F00'              	movwf	strcmp@s2& (0+255),b
  3656  0062' 0E00'              	movlw	high STR_27
  3657  0064' 0100               	movlb	0	; () banked
  3658  0066' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3659  0068' EC00' F000'        	call	_strcmp	;wreg free
  3660  006C' 0100               	movlb	0	; () banked
  3661  006E' 5100'              	movf	?_strcmp& (0+255),w,b
  3662  0070' 0100               	movlb	0	; () banked
  3663  0072' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3664  0074' B4D8               	btfsc	status,2,c
  3665  0076' D012               	goto	l9069
  3666                           
  3667                           ; BSR set to: 0
  3668  0078' C05D' F000'        	movff	terminal_time@op0,strcmp@s1
  3669  007C' C05E' F001'        	movff	terminal_time@op0+1,strcmp@s1+1
  3670  0080' 0E00'              	movlw	low STR_28
  3671  0082' 0100               	movlb	0	; () banked
  3672  0084' 6F00'              	movwf	strcmp@s2& (0+255),b
  3673  0086' 0E00'              	movlw	high STR_28
  3674  0088' 0100               	movlb	0	; () banked
  3675  008A' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3676  008C' EC00' F000'        	call	_strcmp	;wreg free
  3677  0090' 0100               	movlb	0	; () banked
  3678  0092' 5100'              	movf	?_strcmp& (0+255),w,b
  3679  0094' 0100               	movlb	0	; () banked
  3680  0096' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3681  0098' A4D8               	btfss	status,2,c
  3682  009A' 0012               	return	
  3683  009C'                    l9069:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3687  009C' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  3688  00A0' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  3689  00A4' 0E00'              	movlw	low (STR_34+2)
  3690  00A6' 0100               	movlb	0	; () banked
  3691  00A8' 6F00'              	movwf	strcmp@s2& (0+255),b
  3692  00AA' 0E00'              	movlw	high (STR_34+2)
  3693  00AC' 0100               	movlb	0	; () banked
  3694  00AE' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3695  00B0' EC00' F000'        	call	_strcmp	;wreg free
  3696  00B4' 0100               	movlb	0	; () banked
  3697  00B6' 5100'              	movf	?_strcmp& (0+255),w,b
  3698  00B8' 0100               	movlb	0	; () banked
  3699  00BA' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3700  00BC' B4D8               	btfsc	status,2,c
  3701  00BE' D012               	goto	l9073
  3702                           
  3703                           ; BSR set to: 0
  3704  00C0' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  3705  00C4' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  3706  00C8' 0E00'              	movlw	low STR_30
  3707  00CA' 0100               	movlb	0	; () banked
  3708  00CC' 6F00'              	movwf	strcmp@s2& (0+255),b
  3709  00CE' 0E00'              	movlw	high STR_30
  3710  00D0' 0100               	movlb	0	; () banked
  3711  00D2' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3712  00D4' EC00' F000'        	call	_strcmp	;wreg free
  3713  00D8' 0100               	movlb	0	; () banked
  3714  00DA' 5100'              	movf	?_strcmp& (0+255),w,b
  3715  00DC' 0100               	movlb	0	; () banked
  3716  00DE' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3717  00E0' A4D8               	btfss	status,2,c
  3718  00E2' D01C               	goto	l9075
  3719  00E4'                    l9073:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3723  00E4' C05B' F054'        	movff	terminal_time@tx,terminal_at_hand@tx
  3724  00E8' C05C' F055'        	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3725  00EC' 0E00'              	movlw	low (_now+10)
  3726  00EE' 0100               	movlb	0	; () banked
  3727  00F0' 6F00'              	movwf	terminal_at_hand@hand& (0+255),b
  3728  00F2' 0E00'              	movlw	high (_now+10)
  3729  00F4' 0100               	movlb	0	; () banked
  3730  00F6' 6F00'              	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3731  00F8' 0E00               	movlw	0
  3732  00FA' 0100               	movlb	0	; () banked
  3733  00FC' 6F00'              	movwf	terminal_at_hand@min& (0+255),b
  3734  00FE' 0E63               	movlw	99
  3735  0100' 0100               	movlb	0	; () banked
  3736  0102' 6F00'              	movwf	terminal_at_hand@max& (0+255),b
  3737  0104' C061' F006'        	movff	terminal_time@op2,atoi@s
  3738  0108' C062' F007'        	movff	terminal_time@op2+1,atoi@s+1
  3739  010C' EC00' F000'        	call	_atoi	;wreg free
  3740  0110' 0100               	movlb	0	; () banked
  3741  0112' 5100'              	movf	?_atoi& (0+255),w,b
  3742  0114' 0100               	movlb	0	; () banked
  3743  0116' 6F00'              	movwf	terminal_at_hand@value& (0+255),b
  3744  0118' EC00' F000'        	call	_terminal_at_hand	;wreg free
  3745  011C'                    l9075:
  3746                           
  3747                           ;My_terminal.c: 100: }
  3748                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3749  011C' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  3750  0120' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  3751  0124' 0E00'              	movlw	low (STR_52+2)
  3752  0126' 0100               	movlb	0	; () banked
  3753  0128' 6F00'              	movwf	strcmp@s2& (0+255),b
  3754  012A' 0E00'              	movlw	high (STR_52+2)
  3755  012C' 0100               	movlb	0	; () banked
  3756  012E' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3757  0130' EC00' F000'        	call	_strcmp	;wreg free
  3758  0134' 0100               	movlb	0	; () banked
  3759  0136' 5100'              	movf	?_strcmp& (0+255),w,b
  3760  0138' 0100               	movlb	0	; () banked
  3761  013A' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3762  013C' B4D8               	btfsc	status,2,c
  3763  013E' D012               	goto	l9079
  3764                           
  3765                           ; BSR set to: 0
  3766  0140' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  3767  0144' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  3768  0148' 0E00'              	movlw	low STR_32
  3769  014A' 0100               	movlb	0	; () banked
  3770  014C' 6F00'              	movwf	strcmp@s2& (0+255),b
  3771  014E' 0E00'              	movlw	high STR_32
  3772  0150' 0100               	movlb	0	; () banked
  3773  0152' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3774  0154' EC00' F000'        	call	_strcmp	;wreg free
  3775  0158' 0100               	movlb	0	; () banked
  3776  015A' 5100'              	movf	?_strcmp& (0+255),w,b
  3777  015C' 0100               	movlb	0	; () banked
  3778  015E' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3779  0160' A4D8               	btfss	status,2,c
  3780  0162' D01C               	goto	l9081
  3781  0164'                    l9079:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3785  0164' C05B' F054'        	movff	terminal_time@tx,terminal_at_hand@tx
  3786  0168' C05C' F055'        	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3787  016C' 0E00'              	movlw	low (_now+9)
  3788  016E' 0100               	movlb	0	; () banked
  3789  0170' 6F00'              	movwf	terminal_at_hand@hand& (0+255),b
  3790  0172' 0E00'              	movlw	high (_now+9)
  3791  0174' 0100               	movlb	0	; () banked
  3792  0176' 6F00'              	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3793  0178' 0E01               	movlw	1
  3794  017A' 0100               	movlb	0	; () banked
  3795  017C' 6F00'              	movwf	terminal_at_hand@min& (0+255),b
  3796  017E' 0E0C               	movlw	12
  3797  0180' 0100               	movlb	0	; () banked
  3798  0182' 6F00'              	movwf	terminal_at_hand@max& (0+255),b
  3799  0184' C061' F006'        	movff	terminal_time@op2,atoi@s
  3800  0188' C062' F007'        	movff	terminal_time@op2+1,atoi@s+1
  3801  018C' EC00' F000'        	call	_atoi	;wreg free
  3802  0190' 0100               	movlb	0	; () banked
  3803  0192' 5100'              	movf	?_atoi& (0+255),w,b
  3804  0194' 0100               	movlb	0	; () banked
  3805  0196' 6F00'              	movwf	terminal_at_hand@value& (0+255),b
  3806  0198' EC00' F000'        	call	_terminal_at_hand	;wreg free
  3807  019C'                    l9081:
  3808                           
  3809                           ;My_terminal.c: 103: }
  3810                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3811  019C' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  3812  01A0' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  3813  01A4' 0E00'              	movlw	low (STR_1+3)
  3814  01A6' 0100               	movlb	0	; () banked
  3815  01A8' 6F00'              	movwf	strcmp@s2& (0+255),b
  3816  01AA' 0E00'              	movlw	high (STR_1+3)
  3817  01AC' 0100               	movlb	0	; () banked
  3818  01AE' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3819  01B0' EC00' F000'        	call	_strcmp	;wreg free
  3820  01B4' 0100               	movlb	0	; () banked
  3821  01B6' 5100'              	movf	?_strcmp& (0+255),w,b
  3822  01B8' 0100               	movlb	0	; () banked
  3823  01BA' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3824  01BC' B4D8               	btfsc	status,2,c
  3825  01BE' D012               	goto	l9085
  3826                           
  3827                           ; BSR set to: 0
  3828  01C0' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  3829  01C4' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  3830  01C8' 0E00'              	movlw	low STR_34
  3831  01CA' 0100               	movlb	0	; () banked
  3832  01CC' 6F00'              	movwf	strcmp@s2& (0+255),b
  3833  01CE' 0E00'              	movlw	high STR_34
  3834  01D0' 0100               	movlb	0	; () banked
  3835  01D2' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3836  01D4' EC00' F000'        	call	_strcmp	;wreg free
  3837  01D8' 0100               	movlb	0	; () banked
  3838  01DA' 5100'              	movf	?_strcmp& (0+255),w,b
  3839  01DC' 0100               	movlb	0	; () banked
  3840  01DE' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3841  01E0' A4D8               	btfss	status,2,c
  3842  01E2' D023               	goto	l9089
  3843  01E4'                    l9085:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3847  01E4' C03E' F01F'        	movff	_now+9,month_length@month
  3848  01E8' 0101               	movlb	1	; () banked
  3849  01EA' 5100'              	movf	(_now+10)& (0+255),w,b
  3850  01EC' EC00' F000'        	call	_month_length
  3851  01F0' 0100               	movlb	0	; () banked
  3852  01F2' 6F00'              	movwf	_terminal_time$6898& (0+255),b
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3856  01F4' C05B' F054'        	movff	terminal_time@tx,terminal_at_hand@tx
  3857  01F8' C05C' F055'        	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3858  01FC' 0E00'              	movlw	low (_now+8)
  3859  01FE' 0100               	movlb	0	; () banked
  3860  0200' 6F00'              	movwf	terminal_at_hand@hand& (0+255),b
  3861  0202' 0E00'              	movlw	high (_now+8)
  3862  0204' 0100               	movlb	0	; () banked
  3863  0206' 6F00'              	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3864  0208' 0E01               	movlw	1
  3865  020A' 0100               	movlb	0	; () banked
  3866  020C' 6F00'              	movwf	terminal_at_hand@min& (0+255),b
  3867  020E' C063' F059'        	movff	_terminal_time$6898,terminal_at_hand@max
  3868  0212' C061' F006'        	movff	terminal_time@op2,atoi@s
  3869  0216' C062' F007'        	movff	terminal_time@op2+1,atoi@s+1
  3870  021A' EC00' F000'        	call	_atoi	;wreg free
  3871  021E' 0100               	movlb	0	; () banked
  3872  0220' 5100'              	movf	?_atoi& (0+255),w,b
  3873  0222' 0100               	movlb	0	; () banked
  3874  0224' 6F00'              	movwf	terminal_at_hand@value& (0+255),b
  3875  0226' EC00' F000'        	call	_terminal_at_hand	;wreg free
  3876  022A'                    l9089:
  3877                           
  3878                           ;My_terminal.c: 106: }
  3879                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3880  022A' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  3881  022E' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  3882  0232' 0E00'              	movlw	low (STR_32+4)
  3883  0234' 0100               	movlb	0	; () banked
  3884  0236' 6F00'              	movwf	strcmp@s2& (0+255),b
  3885  0238' 0E00'              	movlw	high (STR_32+4)
  3886  023A' 0100               	movlb	0	; () banked
  3887  023C' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3888  023E' EC00' F000'        	call	_strcmp	;wreg free
  3889  0242' 0100               	movlb	0	; () banked
  3890  0244' 5100'              	movf	?_strcmp& (0+255),w,b
  3891  0246' 0100               	movlb	0	; () banked
  3892  0248' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3893  024A' B4D8               	btfsc	status,2,c
  3894  024C' D012               	goto	l9093
  3895                           
  3896                           ; BSR set to: 0
  3897  024E' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  3898  0252' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  3899  0256' 0E00'              	movlw	low STR_36
  3900  0258' 0100               	movlb	0	; () banked
  3901  025A' 6F00'              	movwf	strcmp@s2& (0+255),b
  3902  025C' 0E00'              	movlw	high STR_36
  3903  025E' 0100               	movlb	0	; () banked
  3904  0260' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3905  0262' EC00' F000'        	call	_strcmp	;wreg free
  3906  0266' 0100               	movlb	0	; () banked
  3907  0268' 5100'              	movf	?_strcmp& (0+255),w,b
  3908  026A' 0100               	movlb	0	; () banked
  3909  026C' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3910  026E' A4D8               	btfss	status,2,c
  3911  0270' D01C               	goto	l9095
  3912  0272'                    l9093:
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3916  0272' C05B' F054'        	movff	terminal_time@tx,terminal_at_hand@tx
  3917  0276' C05C' F055'        	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3918  027A' 0E00'              	movlw	low (_now+6)
  3919  027C' 0100               	movlb	0	; () banked
  3920  027E' 6F00'              	movwf	terminal_at_hand@hand& (0+255),b
  3921  0280' 0E00'              	movlw	high (_now+6)
  3922  0282' 0100               	movlb	0	; () banked
  3923  0284' 6F00'              	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3924  0286' 0E00               	movlw	0
  3925  0288' 0100               	movlb	0	; () banked
  3926  028A' 6F00'              	movwf	terminal_at_hand@min& (0+255),b
  3927  028C' 0E17               	movlw	23
  3928  028E' 0100               	movlb	0	; () banked
  3929  0290' 6F00'              	movwf	terminal_at_hand@max& (0+255),b
  3930  0292' C061' F006'        	movff	terminal_time@op2,atoi@s
  3931  0296' C062' F007'        	movff	terminal_time@op2+1,atoi@s+1
  3932  029A' EC00' F000'        	call	_atoi	;wreg free
  3933  029E' 0100               	movlb	0	; () banked
  3934  02A0' 5100'              	movf	?_atoi& (0+255),w,b
  3935  02A2' 0100               	movlb	0	; () banked
  3936  02A4' 6F00'              	movwf	terminal_at_hand@value& (0+255),b
  3937  02A6' EC00' F000'        	call	_terminal_at_hand	;wreg free
  3938  02AA'                    l9095:
  3939                           
  3940                           ;My_terminal.c: 109: }
  3941                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3942  02AA' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  3943  02AE' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  3944  02B2' 0E00'              	movlw	low (STR_51+2)
  3945  02B4' 0100               	movlb	0	; () banked
  3946  02B6' 6F00'              	movwf	strcmp@s2& (0+255),b
  3947  02B8' 0E00'              	movlw	high (STR_51+2)
  3948  02BA' 0100               	movlb	0	; () banked
  3949  02BC' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3950  02BE' EC00' F000'        	call	_strcmp	;wreg free
  3951  02C2' 0100               	movlb	0	; () banked
  3952  02C4' 5100'              	movf	?_strcmp& (0+255),w,b
  3953  02C6' 0100               	movlb	0	; () banked
  3954  02C8' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3955  02CA' B4D8               	btfsc	status,2,c
  3956  02CC' D012               	goto	l9099
  3957                           
  3958                           ; BSR set to: 0
  3959  02CE' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  3960  02D2' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  3961  02D6' 0E00'              	movlw	low STR_38
  3962  02D8' 0100               	movlb	0	; () banked
  3963  02DA' 6F00'              	movwf	strcmp@s2& (0+255),b
  3964  02DC' 0E00'              	movlw	high STR_38
  3965  02DE' 0100               	movlb	0	; () banked
  3966  02E0' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  3967  02E2' EC00' F000'        	call	_strcmp	;wreg free
  3968  02E6' 0100               	movlb	0	; () banked
  3969  02E8' 5100'              	movf	?_strcmp& (0+255),w,b
  3970  02EA' 0100               	movlb	0	; () banked
  3971  02EC' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  3972  02EE' A4D8               	btfss	status,2,c
  3973  02F0' D01C               	goto	l9101
  3974  02F2'                    l9099:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3978  02F2' C05B' F054'        	movff	terminal_time@tx,terminal_at_hand@tx
  3979  02F6' C05C' F055'        	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3980  02FA' 0E00'              	movlw	low (_now+5)
  3981  02FC' 0100               	movlb	0	; () banked
  3982  02FE' 6F00'              	movwf	terminal_at_hand@hand& (0+255),b
  3983  0300' 0E00'              	movlw	high (_now+5)
  3984  0302' 0100               	movlb	0	; () banked
  3985  0304' 6F00'              	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3986  0306' 0E00               	movlw	0
  3987  0308' 0100               	movlb	0	; () banked
  3988  030A' 6F00'              	movwf	terminal_at_hand@min& (0+255),b
  3989  030C' 0E3B               	movlw	59
  3990  030E' 0100               	movlb	0	; () banked
  3991  0310' 6F00'              	movwf	terminal_at_hand@max& (0+255),b
  3992  0312' C061' F006'        	movff	terminal_time@op2,atoi@s
  3993  0316' C062' F007'        	movff	terminal_time@op2+1,atoi@s+1
  3994  031A' EC00' F000'        	call	_atoi	;wreg free
  3995  031E' 0100               	movlb	0	; () banked
  3996  0320' 5100'              	movf	?_atoi& (0+255),w,b
  3997  0322' 0100               	movlb	0	; () banked
  3998  0324' 6F00'              	movwf	terminal_at_hand@value& (0+255),b
  3999  0326' EC00' F000'        	call	_terminal_at_hand	;wreg free
  4000  032A'                    l9101:
  4001                           
  4002                           ;My_terminal.c: 112: }
  4003                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4004  032A' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  4005  032E' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  4006  0332' 0E00'              	movlw	low STR_39
  4007  0334' 0100               	movlb	0	; () banked
  4008  0336' 6F00'              	movwf	strcmp@s2& (0+255),b
  4009  0338' 0E00'              	movlw	high STR_39
  4010  033A' 0100               	movlb	0	; () banked
  4011  033C' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  4012  033E' EC00' F000'        	call	_strcmp	;wreg free
  4013  0342' 0100               	movlb	0	; () banked
  4014  0344' 5100'              	movf	?_strcmp& (0+255),w,b
  4015  0346' 0100               	movlb	0	; () banked
  4016  0348' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  4017  034A' B4D8               	btfsc	status,2,c
  4018  034C' D012               	goto	l9105
  4019                           
  4020                           ; BSR set to: 0
  4021  034E' C05F' F000'        	movff	terminal_time@op1,strcmp@s1
  4022  0352' C060' F001'        	movff	terminal_time@op1+1,strcmp@s1+1
  4023  0356' 0E00'              	movlw	low STR_40
  4024  0358' 0100               	movlb	0	; () banked
  4025  035A' 6F00'              	movwf	strcmp@s2& (0+255),b
  4026  035C' 0E00'              	movlw	high STR_40
  4027  035E' 0100               	movlb	0	; () banked
  4028  0360' 6F00'              	movwf	(strcmp@s2+1)& (0+255),b
  4029  0362' EC00' F000'        	call	_strcmp	;wreg free
  4030  0366' 0100               	movlb	0	; () banked
  4031  0368' 5100'              	movf	?_strcmp& (0+255),w,b
  4032  036A' 0100               	movlb	0	; () banked
  4033  036C' 1100'              	iorwf	(?_strcmp+1)& (0+255),w,b
  4034  036E' A4D8               	btfss	status,2,c
  4035  0370' 0012               	return	
  4036  0372'                    l9105:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4040  0372' C05B' F054'        	movff	terminal_time@tx,terminal_at_hand@tx
  4041  0376' C05C' F055'        	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4042  037A' 0E00'              	movlw	low (_now+4)
  4043  037C' 0100               	movlb	0	; () banked
  4044  037E' 6F00'              	movwf	terminal_at_hand@hand& (0+255),b
  4045  0380' 0E00'              	movlw	high (_now+4)
  4046  0382' 0100               	movlb	0	; () banked
  4047  0384' 6F00'              	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4048  0386' 0E00               	movlw	0
  4049  0388' 0100               	movlb	0	; () banked
  4050  038A' 6F00'              	movwf	terminal_at_hand@min& (0+255),b
  4051  038C' 0E3B               	movlw	59
  4052  038E' 0100               	movlb	0	; () banked
  4053  0390' 6F00'              	movwf	terminal_at_hand@max& (0+255),b
  4054  0392' C061' F006'        	movff	terminal_time@op2,atoi@s
  4055  0396' C062' F007'        	movff	terminal_time@op2+1,atoi@s+1
  4056  039A' EC00' F000'        	call	_atoi	;wreg free
  4057  039E' 0100               	movlb	0	; () banked
  4058  03A0' 5100'              	movf	?_atoi& (0+255),w,b
  4059  03A2' 0100               	movlb	0	; () banked
  4060  03A4' 6F00'              	movwf	terminal_at_hand@value& (0+255),b
  4061  03A6' EC00' F000'        	call	_terminal_at_hand	;wreg free
  4062  03AA' 0012               	return	
  4063  03AC'                    __end_of_terminal_time:
  4064                           	opt stack 0
  4065                           tblptru	equ	0xFF8
  4066                           tblptrh	equ	0xFF7
  4067                           tblptrl	equ	0xFF6
  4068                           tablat	equ	0xFF5
  4069                           prodh	equ	0xFF4
  4070                           prodl	equ	0xFF3
  4071                           intcon	equ	0xFF2
  4072                           postinc0	equ	0xFEE
  4073                           wreg	equ	0xFE8
  4074                           postdec1	equ	0xFE5
  4075                           fsr1h	equ	0xFE2
  4076                           fsr1l	equ	0xFE1
  4077                           indf2	equ	0xFDF
  4078                           fsr2h	equ	0xFDA
  4079                           fsr2l	equ	0xFD9
  4080                           status	equ	0xFD8
  4081                           
  4082 ;; *************** function _terminal_at_hand *****************
  4083 ;; Defined at:
  4084 ;;		line 82 in file "../My_library/My_terminal.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  tx              2   84[BANK0 ] PTR struct ringbuf
  4087 ;;		 -> uart_tx(8), 
  4088 ;;  hand            2   86[BANK0 ] PTR unsigned char 
  4089 ;;		 -> now(14), 
  4090 ;;  min             1   88[BANK0 ] unsigned char 
  4091 ;;  max             1   89[BANK0 ] unsigned char 
  4092 ;;  value           1   90[BANK0 ] unsigned char 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;		None               void
  4097 ;; Registers used:
  4098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4104 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4107 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4108 ;;Total ram usage:        7 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    9
  4111 ;; This function calls:
  4112 ;;		_RTCC_from_caltime
  4113 ;;		_print_time
  4114 ;;		_ringbuf_put_str
  4115 ;; This function is called by:
  4116 ;;		_terminal_time
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text4
  4121  0000'                    __ptext4:
  4122                           	opt stack 0
  4123  0000'                    _terminal_at_hand:
  4124                           	opt stack 18
  4125                           
  4126                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4127                           
  4128                           ;incstack = 0
  4129  0000' 0100               	movlb	0	; () banked
  4130  0002' 5100'              	movf	terminal_at_hand@min& (0+255),w,b
  4131  0004' 0100               	movlb	0	; () banked
  4132  0006' 5D00'              	subwf	terminal_at_hand@value& (0+255),w,b
  4133  0008' A0D8               	btfss	status,0,c
  4134  000A' D01E               	goto	l9013
  4135                           
  4136                           ; BSR set to: 0
  4137  000C' 0100               	movlb	0	; () banked
  4138  000E' 5100'              	movf	terminal_at_hand@value& (0+255),w,b
  4139  0010' 0100               	movlb	0	; () banked
  4140  0012' 5D00'              	subwf	terminal_at_hand@max& (0+255),w,b
  4141  0014' A0D8               	btfss	status,0,c
  4142  0016' D018               	goto	l9013
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;My_terminal.c: 84: *hand = value;
  4146  0018' C056' FFD9         	movff	terminal_at_hand@hand,fsr2l
  4147  001C' C057' FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4148  0020' C05A' FFDF         	movff	terminal_at_hand@value,indf2
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4152  0024' 0E00'              	movlw	low _now
  4153  0026' 0100               	movlb	0	; () banked
  4154  0028' 6F00'              	movwf	RTCC_from_caltime@tm& (0+255),b
  4155  002A' 0E00'              	movlw	high _now
  4156  002C' 0100               	movlb	0	; () banked
  4157  002E' 6F00'              	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  4158  0030' EC00' F000'        	call	_RTCC_from_caltime	;wreg free
  4159                           
  4160                           ;My_terminal.c: 86: time_change_flag = 1;
  4161  0034' 0E01               	movlw	1
  4162  0036' 0100               	movlb	0	; () banked
  4163  0038' 6F00'              	movwf	_time_change_flag& (0+255),b
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;My_terminal.c: 87: print_time(tx);
  4167  003A' C054' F034'        	movff	terminal_at_hand@tx,print_time@tx
  4168  003E' C055' F035'        	movff	terminal_at_hand@tx+1,print_time@tx+1
  4169  0042' EC00' F000'        	call	_print_time	;wreg free
  4170                           
  4171                           ;My_terminal.c: 88: } else {
  4172  0046' 0012               	return	
  4173  0048'                    l9013:
  4174                           
  4175                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  4176  0048' C054' F00F'        	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  4177  004C' C055' F010'        	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  4178  0050' 0E00'              	movlw	low STR_24
  4179  0052' 0100               	movlb	0	; () banked
  4180  0054' 6F00'              	movwf	ringbuf_put_str@str& (0+255),b
  4181  0056' 0E00'              	movlw	high STR_24
  4182  0058' 0100               	movlb	0	; () banked
  4183  005A' 6F00'              	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4184  005C' EC00' F000'        	call	_ringbuf_put_str	;wreg free
  4185  0060' 0012               	return	
  4186  0062'                    __end_of_terminal_at_hand:
  4187                           	opt stack 0
  4188                           tblptru	equ	0xFF8
  4189                           tblptrh	equ	0xFF7
  4190                           tblptrl	equ	0xFF6
  4191                           tablat	equ	0xFF5
  4192                           prodh	equ	0xFF4
  4193                           prodl	equ	0xFF3
  4194                           intcon	equ	0xFF2
  4195                           postinc0	equ	0xFEE
  4196                           wreg	equ	0xFE8
  4197                           postdec1	equ	0xFE5
  4198                           fsr1h	equ	0xFE2
  4199                           fsr1l	equ	0xFE1
  4200                           indf2	equ	0xFDF
  4201                           fsr2h	equ	0xFDA
  4202                           fsr2l	equ	0xFD9
  4203                           status	equ	0xFD8
  4204                           
  4205 ;; *************** function _print_time *****************
  4206 ;; Defined at:
  4207 ;;		line 68 in file "../My_library/My_terminal.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  tx              2   52[BANK0 ] PTR struct ringbuf
  4210 ;;		 -> uart_tx(8), 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  str            30   54[BANK0 ] unsigned char [30]
  4213 ;; Return value:  Size  Location     Type
  4214 ;;		None               void
  4215 ;; Registers used:
  4216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4222 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4223 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4225 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4226 ;;Total ram usage:       32 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    8
  4229 ;; This function calls:
  4230 ;;		_RTCC_from_RTCC
  4231 ;;		_ringbuf_put_str
  4232 ;;		_sprintf
  4233 ;; This function is called by:
  4234 ;;		_terminal_at_hand
  4235 ;;		_terminal_time
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text5
  4240  0000'                    __ptext5:
  4241                           	opt stack 0
  4242  0000'                    _print_time:
  4243                           	opt stack 18
  4244                           
  4245                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  4246                           
  4247                           ;incstack = 0
  4248  0000' 0E00'              	movlw	low _now
  4249  0002' 0100               	movlb	0	; () banked
  4250  0004' 6F00'              	movwf	RTCC_from_RTCC@tm& (0+255),b
  4251  0006' 0E00'              	movlw	high _now
  4252  0008' 0100               	movlb	0	; () banked
  4253  000A' 6F00'              	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  4254  000C' EC00' F000'        	call	_RTCC_from_RTCC	;wreg free
  4255                           
  4256                           ;My_terminal.c: 70: char str[30];
  4257                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4258                           ;My_terminal.c: 72: now.YY,
  4259                           ;My_terminal.c: 73: now.MM,
  4260                           ;My_terminal.c: 74: now.DD,
  4261                           ;My_terminal.c: 75: weekday_3char[now.EE],
  4262                           ;My_terminal.c: 76: now.hh,
  4263                           ;My_terminal.c: 77: now.mm,
  4264                           ;My_terminal.c: 78: now.ss);
  4265  0010' 0E00'              	movlw	low print_time@str
  4266  0012' 0100               	movlb	0	; () banked
  4267  0014' 6F00'              	movwf	sprintf@sp& (0+255),b
  4268  0016' 0E00'              	movlw	high print_time@str
  4269  0018' 0100               	movlb	0	; () banked
  4270  001A' 6F00'              	movwf	(sprintf@sp+1)& (0+255),b
  4271  001C' 0E00'              	movlw	low STR_23
  4272  001E' 0100               	movlb	0	; () banked
  4273  0020' 6F00'              	movwf	sprintf@f& (0+255),b
  4274  0022' 0E00'              	movlw	high STR_23
  4275  0024' 0100               	movlb	0	; () banked
  4276  0026' 6F00'              	movwf	(sprintf@f+1)& (0+255),b
  4277  0028' C03F' F015'        	movff	_now+10,?_sprintf+4
  4278  002C' 0100               	movlb	0	; () banked
  4279  002E' 6B00'              	clrf	(?_sprintf+5)& (0+255),b
  4280  0030' C03E' F017'        	movff	_now+9,?_sprintf+6
  4281  0034' 0100               	movlb	0	; () banked
  4282  0036' 6B00'              	clrf	(?_sprintf+7)& (0+255),b
  4283  0038' C03D' F019'        	movff	_now+8,?_sprintf+8
  4284  003C' 0100               	movlb	0	; () banked
  4285  003E' 6B00'              	clrf	(?_sprintf+9)& (0+255),b
  4286  0040' 0101               	movlb	1	; () banked
  4287  0042' 5100'              	movf	(_now+7)& (0+255),w,b
  4288  0044' 0D04               	mullw	4
  4289  0046' 0E00'              	movlw	low _weekday_3char
  4290  0048' 24F3               	addwf	prodl,w,c
  4291  004A' 0100               	movlb	0	; () banked
  4292  004C' 6F00'              	movwf	(?_sprintf+10)& (0+255),b
  4293  004E' 0E00'              	movlw	high _weekday_3char
  4294  0050' 20F4               	addwfc	prodh,w,c
  4295  0052' 0100               	movlb	0	; () banked
  4296  0054' 6F00'              	movwf	(?_sprintf+11)& (0+255),b
  4297  0056' C03B' F01D'        	movff	_now+6,?_sprintf+12
  4298  005A' 0100               	movlb	0	; () banked
  4299  005C' 6B00'              	clrf	(?_sprintf+13)& (0+255),b
  4300  005E' C03A' F01F'        	movff	_now+5,?_sprintf+14
  4301  0062' 0100               	movlb	0	; () banked
  4302  0064' 6B00'              	clrf	(?_sprintf+15)& (0+255),b
  4303  0066' C039' F021'        	movff	_now+4,?_sprintf+16
  4304  006A' 0100               	movlb	0	; () banked
  4305  006C' 6B00'              	clrf	(?_sprintf+17)& (0+255),b
  4306  006E' EC00' F000'        	call	_sprintf	;wreg free
  4307                           
  4308                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  4309  0072' C034' F00F'        	movff	print_time@tx,ringbuf_put_str@rb
  4310  0076' C035' F010'        	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4311  007A' 0E00'              	movlw	low print_time@str
  4312  007C' 0100               	movlb	0	; () banked
  4313  007E' 6F00'              	movwf	ringbuf_put_str@str& (0+255),b
  4314  0080' 0E00'              	movlw	high print_time@str
  4315  0082' 0100               	movlb	0	; () banked
  4316  0084' 6F00'              	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4317  0086' EC00' F000'        	call	_ringbuf_put_str	;wreg free
  4318  008A' 0012               	return		;funcret
  4319  008C'                    __end_of_print_time:
  4320                           	opt stack 0
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodh	equ	0xFF4
  4326                           prodl	equ	0xFF3
  4327                           intcon	equ	0xFF2
  4328                           postinc0	equ	0xFEE
  4329                           wreg	equ	0xFE8
  4330                           postdec1	equ	0xFE5
  4331                           fsr1h	equ	0xFE2
  4332                           fsr1l	equ	0xFE1
  4333                           indf2	equ	0xFDF
  4334                           fsr2h	equ	0xFDA
  4335                           fsr2l	equ	0xFD9
  4336                           status	equ	0xFD8
  4337                           
  4338 ;; *************** function _sprintf *****************
  4339 ;; Defined at:
  4340 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  sp              2   17[BANK0 ] PTR unsigned char 
  4343 ;;		 -> terminal_operation@str(30), print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  4344 ;;  f               2   19[BANK0 ] PTR const unsigned char 
  4345 ;;		 -> STR_46(15), STR_23(37), STR_21(5), STR_1(5), 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  tmpval          4    0        struct .
  4348 ;;  width           2   50[BANK0 ] int 
  4349 ;;  len             2   46[BANK0 ] unsigned int 
  4350 ;;  val             2   44[BANK0 ] unsigned int 
  4351 ;;  cp              2   42[BANK0 ] PTR const unsigned char 
  4352 ;;		 -> STR_62(7), weekday_3char(28), 
  4353 ;;  ap              2   40[BANK0 ] PTR void [1]
  4354 ;;		 -> ?_sprintf(2), 
  4355 ;;  c               1   49[BANK0 ] char 
  4356 ;;  flag            1   48[BANK0 ] unsigned char 
  4357 ;;  prec            1   39[BANK0 ] char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  2   17[BANK0 ] int 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4367 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4370 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4371 ;;Total ram usage:       35 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    5
  4374 ;; This function calls:
  4375 ;;		___lwdiv
  4376 ;;		___lwmod
  4377 ;;		___wmul
  4378 ;;		_isdigit
  4379 ;; This function is called by:
  4380 ;;		_print_time
  4381 ;;		_terminal_operation
  4382 ;;		_display_dec
  4383 ;;		_print_time_dec
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text6
  4388  0000'                    __ptext6:
  4389                           	opt stack 0
  4390  0000'                    _sprintf:
  4391                           	opt stack 20
  4392                           
  4393                           ;doprnt.c: 494: va_list ap;
  4394                           ;doprnt.c: 499: signed char c;
  4395                           ;doprnt.c: 501: int width;
  4396                           ;doprnt.c: 506: signed char prec;
  4397                           ;doprnt.c: 508: unsigned char flag;
  4398                           ;doprnt.c: 523: union {
  4399                           ;doprnt.c: 524: unsigned long vd;
  4400                           ;doprnt.c: 525: double integ;
  4401                           ;doprnt.c: 526: } tmpval;
  4402                           ;doprnt.c: 528: unsigned int val;
  4403                           ;doprnt.c: 529: unsigned len;
  4404                           ;doprnt.c: 530: const char * cp;
  4405                           ;doprnt.c: 533: *ap = __va_start();
  4406                           
  4407                           ;incstack = 0
  4408  0000' 0E00'              	movlw	low (?_sprintf+4)
  4409  0002' 0100               	movlb	0	; () banked
  4410  0004' 6F00'              	movwf	sprintf@ap& (0+255),b
  4411  0006' 0E00'              	movlw	high (?_sprintf+4)
  4412  0008' 0100               	movlb	0	; () banked
  4413  000A' 6F00'              	movwf	(sprintf@ap+1)& (0+255),b
  4414                           
  4415                           ;doprnt.c: 536: while(c = *f++) {
  4416  000C' D20F               	goto	l8985
  4417  000E'                    l8845:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;doprnt.c: 538: if(c != '%')
  4421  000E' 0E25               	movlw	37
  4422  0010' 0100               	movlb	0	; () banked
  4423  0012' 1900'              	xorwf	sprintf@c& (0+255),w,b
  4424  0014' B4D8               	btfsc	status,2,c
  4425  0016' D00A               	goto	l8851
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;doprnt.c: 540: {
  4429                           ;doprnt.c: 541: ((*sp++ = (c)));
  4430  0018' C011' FFD9         	movff	sprintf@sp,fsr2l
  4431  001C' C012' FFDA         	movff	sprintf@sp+1,fsr2h
  4432  0020' C031' FFDF         	movff	sprintf@c,indf2
  4433                           
  4434                           ; BSR set to: 0
  4435  0024' 0100               	movlb	0	; () banked
  4436  0026' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  4437  0028' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  4438                           
  4439                           ;doprnt.c: 542: continue;
  4440  002A' D200               	goto	l8985
  4441  002C'                    l8851:
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;doprnt.c: 543: }
  4445                           ;doprnt.c: 546: width = 0;
  4446  002C' 0E00               	movlw	0
  4447  002E' 0100               	movlb	0	; () banked
  4448  0030' 6F00'              	movwf	(sprintf@width+1)& (0+255),b
  4449  0032' 0E00               	movlw	0
  4450  0034' 6F00'              	movwf	sprintf@width& (0+255),b
  4451                           
  4452                           ;doprnt.c: 548: flag = 0;
  4453  0036' 0E00               	movlw	0
  4454  0038' 0100               	movlb	0	; () banked
  4455  003A' 6F00'              	movwf	sprintf@flag& (0+255),b
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;doprnt.c: 551: switch(*f) {
  4459                           
  4460                           ;doprnt.c: 550: for(;;) {
  4461  003C' D005               	goto	l8857
  4462  003E'                    l8853:
  4463                           
  4464                           ;doprnt.c: 580: flag |= 0x04;
  4465  003E' 0100               	movlb	0	; () banked
  4466  0040' 8500'              	bsf	sprintf@flag& (0+255),2,b
  4467                           
  4468                           ;doprnt.c: 581: f++;
  4469  0042' 0100               	movlb	0	; () banked
  4470  0044' 4B00'              	infsnz	sprintf@f& (0+255),f,b
  4471  0046' 2B00'              	incf	(sprintf@f+1)& (0+255),f,b
  4472  0048'                    l8857:
  4473  0048' C013' FFF6         	movff	sprintf@f,tblptrl
  4474  004C' C014' FFF7         	movff	sprintf@f+1,tblptrh
  4475  0050'                    	if	0	;tblptru may be non-zero
  4476  0050'                    	endif
  4477  0050'                    	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4478  0050' 0E00'              	movlw	low (__mediumconst shr (0+16))
  4479  0052' 6EF8               	movwf	tblptru,c
  4480  0054'                    	endif
  4481  0054' 0008               	tblrd		*
  4482  0056' 50F5               	movf	tablat,w,c
  4483                           
  4484                           ; Switch size 1, requested type "space"
  4485                           ; Number of cases is 1, Range of values is 48 to 48
  4486                           ; switch strategies available:
  4487                           ; Name         Instructions Cycles
  4488                           ; simple_byte            4     3 (average)
  4489                           ;	Chosen strategy is simple_byte
  4490  0058' 0A30               	xorlw	48	; case 48
  4491  005A' B4D8               	btfsc	status,2,c
  4492  005C' D7F0               	goto	l8853
  4493                           
  4494                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4495                           
  4496                           ;doprnt.c: 586: }
  4497                           
  4498                           ;doprnt.c: 585: break;
  4499  005E' C013' FFF6         	movff	sprintf@f,tblptrl
  4500  0062' C014' FFF7         	movff	sprintf@f+1,tblptrh
  4501  0066'                    	if	0	;tblptru may be non-zero
  4502  0066'                    	endif
  4503  0066'                    	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4504  0066' 0E00'              	movlw	low (__mediumconst shr (0+16))
  4505  0068' 6EF8               	movwf	tblptru,c
  4506  006A'                    	endif
  4507  006A' 0008               	tblrd		*
  4508  006C' 50F5               	movf	tablat,w,c
  4509  006E' EC00' F000'        	call	_isdigit
  4510  0072' A0D8               	btfss	status,0,c
  4511  0074' D0CB               	goto	l8907
  4512                           
  4513                           ;doprnt.c: 598: width = 0;
  4514  0076' 0E00               	movlw	0
  4515  0078' 0100               	movlb	0	; () banked
  4516  007A' 6F00'              	movwf	(sprintf@width+1)& (0+255),b
  4517  007C' 0E00               	movlw	0
  4518  007E' 6F00'              	movwf	sprintf@width& (0+255),b
  4519  0080'                    l8863:
  4520                           
  4521                           ;doprnt.c: 600: width *= 10;
  4522  0080' C032' F000'        	movff	sprintf@width,___wmul@multiplier
  4523  0084' C033' F001'        	movff	sprintf@width+1,___wmul@multiplier+1
  4524  0088' 0E00               	movlw	0
  4525  008A' 0100               	movlb	0	; () banked
  4526  008C' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
  4527  008E' 0E0A               	movlw	10
  4528  0090' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
  4529  0092' EC00' F000'        	call	___wmul	;wreg free
  4530  0096' C000' F032'        	movff	?___wmul,sprintf@width
  4531  009A' C001' F033'        	movff	?___wmul+1,sprintf@width+1
  4532                           
  4533                           ;doprnt.c: 601: width += *f++ - '0';
  4534  009E' 0ED0               	movlw	208
  4535  00A0' 0100               	movlb	0	; () banked
  4536  00A2' 6F00'              	movwf	??_sprintf& (0+255),b
  4537  00A4' 0EFF               	movlw	255
  4538  00A6' 0100               	movlb	0	; () banked
  4539  00A8' 6F00'              	movwf	(??_sprintf+1)& (0+255),b
  4540  00AA' C013' FFF6         	movff	sprintf@f,tblptrl
  4541  00AE' C014' FFF7         	movff	sprintf@f+1,tblptrh
  4542  00B2'                    	if	0	;tblptru may be non-zero
  4543  00B2'                    	endif
  4544  00B2'                    	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4545  00B2' 0E00'              	movlw	low (__mediumconst shr (0+16))
  4546  00B4' 6EF8               	movwf	tblptru,c
  4547  00B6'                    	endif
  4548  00B6' 0008               	tblrd		*
  4549  00B8' 50F5               	movf	tablat,w,c
  4550  00BA' 0100               	movlb	0	; () banked
  4551  00BC' 6F00'              	movwf	(??_sprintf+2)& (0+255),b
  4552  00BE' 6B00'              	clrf	(??_sprintf+3)& (0+255),b
  4553  00C0' 0100               	movlb	0	; () banked
  4554  00C2' 5100'              	movf	??_sprintf& (0+255),w,b
  4555  00C4' 0100               	movlb	0	; () banked
  4556  00C6' 2700'              	addwf	(??_sprintf+2)& (0+255),f,b
  4557  00C8' 0100               	movlb	0	; () banked
  4558  00CA' 5100'              	movf	(??_sprintf+1)& (0+255),w,b
  4559  00CC' 0100               	movlb	0	; () banked
  4560  00CE' 2300'              	addwfc	(??_sprintf+3)& (0+255),f,b
  4561  00D0' 0100               	movlb	0	; () banked
  4562  00D2' 5100'              	movf	(??_sprintf+2)& (0+255),w,b
  4563  00D4' 0100               	movlb	0	; () banked
  4564  00D6' 2700'              	addwf	sprintf@width& (0+255),f,b
  4565  00D8' 0100               	movlb	0	; () banked
  4566  00DA' 5100'              	movf	(??_sprintf+3)& (0+255),w,b
  4567  00DC' 0100               	movlb	0	; () banked
  4568  00DE' 2300'              	addwfc	(sprintf@width+1)& (0+255),f,b
  4569                           
  4570                           ; BSR set to: 0
  4571  00E0' 0100               	movlb	0	; () banked
  4572  00E2' 4B00'              	infsnz	sprintf@f& (0+255),f,b
  4573  00E4' 2B00'              	incf	(sprintf@f+1)& (0+255),f,b
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4577  00E6' C013' FFF6         	movff	sprintf@f,tblptrl
  4578  00EA' C014' FFF7         	movff	sprintf@f+1,tblptrh
  4579  00EE'                    	if	0	;tblptru may be non-zero
  4580  00EE'                    	endif
  4581  00EE'                    	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4582  00EE' 0E00'              	movlw	low (__mediumconst shr (0+16))
  4583  00F0' 6EF8               	movwf	tblptru,c
  4584  00F2'                    	endif
  4585  00F2' 0008               	tblrd		*
  4586  00F4' 50F5               	movf	tablat,w,c
  4587  00F6' EC00' F000'        	call	_isdigit
  4588  00FA' A0D8               	btfss	status,0,c
  4589  00FC' D087               	goto	l8907
  4590  00FE' D7C0               	goto	l8863
  4591  0100'                    l8871:
  4592                           
  4593                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4594  0100' C028' FFD9         	movff	sprintf@ap,fsr2l
  4595  0104' C029' FFDA         	movff	sprintf@ap+1,fsr2h
  4596  0108' CFDE F02A'         	movff	postinc2,sprintf@cp
  4597  010C' CFDD F02B'         	movff	postdec2,sprintf@cp+1
  4598  0110' 0E02               	movlw	2
  4599  0112' 0100               	movlb	0	; () banked
  4600  0114' 2700'              	addwf	sprintf@ap& (0+255),f,b
  4601  0116' 0E00               	movlw	0
  4602  0118' 2300'              	addwfc	(sprintf@ap+1)& (0+255),f,b
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;doprnt.c: 740: if(!cp)
  4606  011A' 0100               	movlb	0	; () banked
  4607  011C' 5100'              	movf	sprintf@cp& (0+255),w,b
  4608  011E' 0100               	movlb	0	; () banked
  4609  0120' 1100'              	iorwf	(sprintf@cp+1)& (0+255),w,b
  4610  0122' A4D8               	btfss	status,2,c
  4611  0124' D006               	goto	l8879
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;doprnt.c: 741: cp = "(null)";
  4615  0126' 0E00'              	movlw	low STR_62
  4616  0128' 0100               	movlb	0	; () banked
  4617  012A' 6F00'              	movwf	sprintf@cp& (0+255),b
  4618  012C' 0E00'              	movlw	high STR_62
  4619  012E' 0100               	movlb	0	; () banked
  4620  0130' 6F00'              	movwf	(sprintf@cp+1)& (0+255),b
  4621  0132'                    l8879:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;doprnt.c: 745: len = 0;
  4625  0132' 0E00               	movlw	0
  4626  0134' 0100               	movlb	0	; () banked
  4627  0136' 6F00'              	movwf	(sprintf@len+1)& (0+255),b
  4628  0138' 0E00               	movlw	0
  4629  013A' 6F00'              	movwf	sprintf@len& (0+255),b
  4630                           
  4631                           ;doprnt.c: 746: while(cp[len])
  4632  013C' D003               	goto	l8883
  4633  013E'                    l8881:
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;doprnt.c: 747: len++;
  4637  013E' 0100               	movlb	0	; () banked
  4638  0140' 4B00'              	infsnz	sprintf@len& (0+255),f,b
  4639  0142' 2B00'              	incf	(sprintf@len+1)& (0+255),f,b
  4640  0144'                    l8883:
  4641                           
  4642                           ; BSR set to: 0
  4643  0144' 0100               	movlb	0	; () banked
  4644  0146' 5100'              	movf	sprintf@len& (0+255),w,b
  4645  0148' 0100               	movlb	0	; () banked
  4646  014A' 2500'              	addwf	sprintf@cp& (0+255),w,b
  4647  014C' 0100               	movlb	0	; () banked
  4648  014E' 6F00'              	movwf	??_sprintf& (0+255),b
  4649  0150' 0100               	movlb	0	; () banked
  4650  0152' 5100'              	movf	(sprintf@len+1)& (0+255),w,b
  4651  0154' 0100               	movlb	0	; () banked
  4652  0156' 2100'              	addwfc	(sprintf@cp+1)& (0+255),w,b
  4653  0158' 0100               	movlb	0	; () banked
  4654  015A' 6F00'              	movwf	(??_sprintf+1)& (0+255),b
  4655  015C' C023' FFF6         	movff	??_sprintf,tblptrl
  4656  0160' C024' FFF7         	movff	??_sprintf+1,tblptrh
  4657  0164'                    	if	0	;tblptru may be non-zero
  4658  0164'                    	endif
  4659  0164'                    	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4660  0164' 0E00'              	movlw	low (__mediumconst shr (0+16))
  4661  0166' 6EF8               	movwf	tblptru,c
  4662  0168'                    	endif
  4663  0168' 0008               	tblrd		*
  4664  016A' 50F5               	movf	tablat,w,c
  4665  016C' 0900               	iorlw	0
  4666  016E' A4D8               	btfss	status,2,c
  4667  0170' D7E6               	goto	l8881
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;doprnt.c: 757: if(width > len)
  4671                           
  4672                           ; BSR set to: 0
  4673  0172' 0100               	movlb	0	; () banked
  4674  0174' 5100'              	movf	sprintf@width& (0+255),w,b
  4675  0176' 0100               	movlb	0	; () banked
  4676  0178' 5D00'              	subwf	sprintf@len& (0+255),w,b
  4677  017A' 0100               	movlb	0	; () banked
  4678  017C' 5100'              	movf	(sprintf@width+1)& (0+255),w,b
  4679  017E' 0100               	movlb	0	; () banked
  4680  0180' 5900'              	subwfb	(sprintf@len+1)& (0+255),w,b
  4681  0182' B0D8               	btfsc	status,0,c
  4682  0184' D009               	goto	l8889
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;doprnt.c: 758: width -= len;
  4686  0186' 0100               	movlb	0	; () banked
  4687  0188' 5100'              	movf	sprintf@len& (0+255),w,b
  4688  018A' 0100               	movlb	0	; () banked
  4689  018C' 5F00'              	subwf	sprintf@width& (0+255),f,b
  4690  018E' 0100               	movlb	0	; () banked
  4691  0190' 5100'              	movf	(sprintf@len+1)& (0+255),w,b
  4692  0192' 0100               	movlb	0	; () banked
  4693  0194' 5B00'              	subwfb	(sprintf@width+1)& (0+255),f,b
  4694  0196' D00F               	goto	l8895
  4695  0198'                    l8889:
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;doprnt.c: 759: else
  4699                           ;doprnt.c: 760: width = 0;
  4700  0198' 0E00               	movlw	0
  4701  019A' 0100               	movlb	0	; () banked
  4702  019C' 6F00'              	movwf	(sprintf@width+1)& (0+255),b
  4703  019E' 0E00               	movlw	0
  4704  01A0' 6F00'              	movwf	sprintf@width& (0+255),b
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;doprnt.c: 764: while(width--)
  4708  01A2' D009               	goto	l8895
  4709  01A4'                    l8891:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4713  01A4' C011' FFD9         	movff	sprintf@sp,fsr2l
  4714  01A8' C012' FFDA         	movff	sprintf@sp+1,fsr2h
  4715  01AC' 0E20               	movlw	32
  4716  01AE' 6EDF               	movwf	indf2,c
  4717                           
  4718                           ; BSR set to: 0
  4719  01B0' 0100               	movlb	0	; () banked
  4720  01B2' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  4721  01B4' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  4722  01B6'                    l8895:
  4723                           
  4724                           ; BSR set to: 0
  4725  01B6' 0100               	movlb	0	; () banked
  4726  01B8' 0700'              	decf	sprintf@width& (0+255),f,b
  4727  01BA' A0D8               	btfss	status,0,c
  4728  01BC' 0700'              	decf	(sprintf@width+1)& (0+255),f,b
  4729  01BE' 0100               	movlb	0	; () banked
  4730  01C0' 2900'              	incf	sprintf@width& (0+255),w,b
  4731  01C2' E1F0               	bnz	l8891
  4732  01C4' 0100               	movlb	0	; () banked
  4733  01C6' 2900'              	incf	(sprintf@width+1)& (0+255),w,b
  4734  01C8' B4D8               	btfsc	status,2,c
  4735  01CA' D014               	goto	l8903
  4736  01CC' D7EB               	goto	l8891
  4737  01CE'                    l8897:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4741  01CE' C02A' FFF6         	movff	sprintf@cp,tblptrl
  4742  01D2' C02B' FFF7         	movff	sprintf@cp+1,tblptrh
  4743  01D6'                    	if	0	;tblptru may be non-zero
  4744  01D6'                    	endif
  4745  01D6'                    	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4746  01D6' 0E00'              	movlw	low (__mediumconst shr (0+16))
  4747  01D8' 6EF8               	movwf	tblptru,c
  4748  01DA'                    	endif
  4749  01DA' C011' FFD9         	movff	sprintf@sp,fsr2l
  4750  01DE' C012' FFDA         	movff	sprintf@sp+1,fsr2h
  4751  01E2' 0008               	tblrd		*
  4752  01E4' CFF5 FFDF          	movff	tablat,indf2
  4753                           
  4754                           ; BSR set to: 0
  4755  01E8' 0100               	movlb	0	; () banked
  4756  01EA' 4B00'              	infsnz	sprintf@cp& (0+255),f,b
  4757  01EC' 2B00'              	incf	(sprintf@cp+1)& (0+255),f,b
  4758                           
  4759                           ; BSR set to: 0
  4760  01EE' 0100               	movlb	0	; () banked
  4761  01F0' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  4762  01F2' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  4763  01F4'                    l8903:
  4764                           
  4765                           ; BSR set to: 0
  4766  01F4' 0100               	movlb	0	; () banked
  4767  01F6' 0700'              	decf	sprintf@len& (0+255),f,b
  4768  01F8' A0D8               	btfss	status,0,c
  4769  01FA' 0700'              	decf	(sprintf@len+1)& (0+255),f,b
  4770  01FC' 0100               	movlb	0	; () banked
  4771  01FE' 2900'              	incf	sprintf@len& (0+255),w,b
  4772  0200' E1E6               	bnz	l8897
  4773  0202' 0100               	movlb	0	; () banked
  4774  0204' 2900'              	incf	(sprintf@len+1)& (0+255),w,b
  4775  0206' B4D8               	btfsc	status,2,c
  4776  0208' D111               	goto	l8985
  4777  020A' D7E1               	goto	l8897
  4778  020C'                    l8907:
  4779  020C' C013' FFF6         	movff	sprintf@f,tblptrl
  4780  0210' C014' FFF7         	movff	sprintf@f+1,tblptrh
  4781  0214' 0100               	movlb	0	; () banked
  4782  0216' 4B00'              	infsnz	sprintf@f& (0+255),f,b
  4783  0218' 2B00'              	incf	(sprintf@f+1)& (0+255),f,b
  4784  021A'                    	if	0	;tblptru may be non-zero
  4785  021A'                    	endif
  4786  021A'                    	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4787  021A' 0E00'              	movlw	low (__mediumconst shr (0+16))
  4788  021C' 6EF8               	movwf	tblptru,c
  4789  021E'                    	endif
  4790  021E' 0008               	tblrd		*
  4791  0220' CFF5 F031'         	movff	tablat,sprintf@c
  4792  0224' 0100               	movlb	0	; () banked
  4793  0226' 5100'              	movf	sprintf@c& (0+255),w,b
  4794                           
  4795                           ; Switch size 1, requested type "space"
  4796                           ; Number of cases is 4, Range of values is 0 to 115
  4797                           ; switch strategies available:
  4798                           ; Name         Instructions Cycles
  4799                           ; simple_byte           13     7 (average)
  4800                           ;	Chosen strategy is simple_byte
  4801  0228' 0A00               	xorlw	0	; case 0
  4802  022A' B4D8               	btfsc	status,2,c
  4803  022C' D10F               	goto	l8987
  4804  022E' 0A64               	xorlw	100	; case 100
  4805  0230' B4D8               	btfsc	status,2,c
  4806  0232' D007               	goto	l8909
  4807  0234' 0A0D               	xorlw	13	; case 105
  4808  0236' B4D8               	btfsc	status,2,c
  4809  0238' D004               	goto	l8909
  4810  023A' 0A1A               	xorlw	26	; case 115
  4811  023C' B4D8               	btfsc	status,2,c
  4812  023E' D760               	goto	l8871
  4813  0240' D0F5               	goto	l8985
  4814  0242'                    l8909:
  4815                           
  4816                           ;doprnt.c: 1253: {
  4817                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4818  0242' C028' FFD9         	movff	sprintf@ap,fsr2l
  4819  0246' C029' FFDA         	movff	sprintf@ap+1,fsr2h
  4820  024A' CFDE F02C'         	movff	postinc2,sprintf@val
  4821  024E' CFDD F02D'         	movff	postdec2,sprintf@val+1
  4822  0252' 0E02               	movlw	2
  4823  0254' 0100               	movlb	0	; () banked
  4824  0256' 2700'              	addwf	sprintf@ap& (0+255),f,b
  4825  0258' 0E00               	movlw	0
  4826  025A' 2300'              	addwfc	(sprintf@ap+1)& (0+255),f,b
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;doprnt.c: 1261: if((int)val < 0) {
  4830  025C' 0100               	movlb	0	; () banked
  4831  025E' AF00'              	btfss	(sprintf@val+1)& (0+255),7,b
  4832  0260' D008               	goto	l8919
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;doprnt.c: 1262: flag |= 0x03;
  4836  0262' 0E03               	movlw	3
  4837  0264' 0100               	movlb	0	; () banked
  4838  0266' 1300'              	iorwf	sprintf@flag& (0+255),f,b
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;doprnt.c: 1263: val = -val;
  4842  0268' 0100               	movlb	0	; () banked
  4843  026A' 6D00'              	negf	sprintf@val& (0+255),b
  4844  026C' 1F00'              	comf	(sprintf@val+1)& (0+255),f,b
  4845  026E' B0D8               	btfsc	status,0,c
  4846  0270' 2B00'              	incf	(sprintf@val+1)& (0+255),f,b
  4847  0272'                    l8919:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;doprnt.c: 1264: }
  4851                           ;doprnt.c: 1266: }
  4852                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4853  0272' 0E01               	movlw	1
  4854  0274' 0100               	movlb	0	; () banked
  4855  0276' 6F00'              	movwf	sprintf@c& (0+255),b
  4856  0278'                    l8921:
  4857                           
  4858                           ; BSR set to: 0
  4859  0278' 0E05               	movlw	5
  4860  027A' 0100               	movlb	0	; () banked
  4861  027C' 1900'              	xorwf	sprintf@c& (0+255),w,b
  4862  027E' B4D8               	btfsc	status,2,c
  4863  0280' D019               	goto	l8933
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;doprnt.c: 1306: if(val < dpowers[c])
  4867                           
  4868                           ; BSR set to: 0
  4869                           
  4870                           ; BSR set to: 0
  4871  0282' 0100               	movlb	0	; () banked
  4872  0284' 5100'              	movf	sprintf@c& (0+255),w,b
  4873  0286' 0D02               	mullw	2
  4874  0288' 0E00'              	movlw	low _dpowers
  4875  028A' 24F3               	addwf	prodl,w,c
  4876  028C' 6EF6               	movwf	tblptrl,c
  4877  028E' 0E00'              	movlw	high _dpowers
  4878  0290' 20F4               	addwfc	prodh,w,c
  4879  0292' 6EF7               	movwf	tblptrh,c
  4880  0294'                    	if	1	;There are 3 active tblptr bytes
  4881  0294' 6AF8               	clrf	tblptru,c
  4882  0296' 0E00'              	movlw	low (__mediumconst shr (0+16))
  4883  0298' 22F8               	addwfc	tblptru,f,c
  4884  029A'                    	endif
  4885  029A' 0009               	tblrd		*+
  4886  029C' 50F5               	movf	tablat,w,c
  4887  029E' 0100               	movlb	0	; () banked
  4888  02A0' 5D00'              	subwf	sprintf@val& (0+255),w,b
  4889  02A2' 0009               	tblrd		*+
  4890  02A4' 50F5               	movf	tablat,w,c
  4891  02A6' 0100               	movlb	0	; () banked
  4892  02A8' 5900'              	subwfb	(sprintf@val+1)& (0+255),w,b
  4893  02AA' A0D8               	btfss	status,0,c
  4894  02AC' D003               	goto	l8933
  4895                           
  4896                           ; BSR set to: 0
  4897                           
  4898                           ; BSR set to: 0
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;doprnt.c: 1307: break;
  4902  02AE' 0100               	movlb	0	; () banked
  4903  02B0' 2B00'              	incf	sprintf@c& (0+255),f,b
  4904  02B2' D7E2               	goto	l8921
  4905  02B4'                    l8933:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4909  02B4' 0100               	movlb	0	; () banked
  4910  02B6' 5100'              	movf	sprintf@width& (0+255),w,b
  4911  02B8' 0100               	movlb	0	; () banked
  4912  02BA' 1100'              	iorwf	(sprintf@width+1)& (0+255),w,b
  4913  02BC' B4D8               	btfsc	status,2,c
  4914  02BE' D00B               	goto	l8939
  4915                           
  4916                           ; BSR set to: 0
  4917  02C0' C030' F023'        	movff	sprintf@flag,??_sprintf
  4918  02C4' 0E03               	movlw	3
  4919  02C6' 0100               	movlb	0	; () banked
  4920  02C8' 1700'              	andwf	??_sprintf& (0+255),f,b
  4921  02CA' B4D8               	btfsc	status,2,c
  4922  02CC' D004               	goto	l8939
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;doprnt.c: 1346: width--;
  4926  02CE' 0100               	movlb	0	; () banked
  4927  02D0' 0700'              	decf	sprintf@width& (0+255),f,b
  4928  02D2' A0D8               	btfss	status,0,c
  4929  02D4' 0700'              	decf	(sprintf@width+1)& (0+255),f,b
  4930  02D6'                    l8939:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;doprnt.c: 1381: if(width > c)
  4934  02D6' 0E80               	movlw	128
  4935  02D8' 0100               	movlb	0	; () banked
  4936  02DA' BF00'              	btfsc	sprintf@c& (0+255),7,b
  4937  02DC' 0E7F               	movlw	127
  4938  02DE' 0100               	movlb	0	; () banked
  4939  02E0' 6F00'              	movwf	??_sprintf& (0+255),b
  4940  02E2' 0100               	movlb	0	; () banked
  4941  02E4' 5100'              	movf	sprintf@width& (0+255),w,b
  4942  02E6' 0100               	movlb	0	; () banked
  4943  02E8' 5D00'              	subwf	sprintf@c& (0+255),w,b
  4944  02EA' 0100               	movlb	0	; () banked
  4945  02EC' 5100'              	movf	(sprintf@width+1)& (0+255),w,b
  4946  02EE' 0A80               	xorlw	128
  4947  02F0' 0100               	movlb	0	; () banked
  4948  02F2' 5900'              	subwfb	??_sprintf& (0+255),w,b
  4949  02F4' B0D8               	btfsc	status,0,c
  4950  02F6' D00B               	goto	l8943
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;doprnt.c: 1382: width -= c;
  4954  02F8' 0100               	movlb	0	; () banked
  4955  02FA' 5100'              	movf	sprintf@c& (0+255),w,b
  4956  02FC' 0100               	movlb	0	; () banked
  4957  02FE' 5F00'              	subwf	sprintf@width& (0+255),f,b
  4958  0300' 0E00               	movlw	0
  4959  0302' 0100               	movlb	0	; () banked
  4960  0304' BF00'              	btfsc	sprintf@c& (0+255),7,b
  4961  0306' 0EFF               	movlw	255
  4962  0308' 0100               	movlb	0	; () banked
  4963  030A' 5B00'              	subwfb	(sprintf@width+1)& (0+255),f,b
  4964  030C' D005               	goto	l8945
  4965  030E'                    l8943:
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;doprnt.c: 1383: else
  4969                           ;doprnt.c: 1384: width = 0;
  4970  030E' 0E00               	movlw	0
  4971  0310' 0100               	movlb	0	; () banked
  4972  0312' 6F00'              	movwf	(sprintf@width+1)& (0+255),b
  4973  0314' 0E00               	movlw	0
  4974  0316' 6F00'              	movwf	sprintf@width& (0+255),b
  4975  0318'                    l8945:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;doprnt.c: 1387: if(flag & 0x04) {
  4979  0318' 0100               	movlb	0	; () banked
  4980  031A' A500'              	btfss	sprintf@flag& (0+255),2,b
  4981  031C' D024               	goto	l8961
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;doprnt.c: 1392: if(flag & 0x03)
  4985  031E' C030' F023'        	movff	sprintf@flag,??_sprintf
  4986  0322' 0E03               	movlw	3
  4987  0324' 0100               	movlb	0	; () banked
  4988  0326' 1700'              	andwf	??_sprintf& (0+255),f,b
  4989  0328' B4D8               	btfsc	status,2,c
  4990  032A' D009               	goto	l8953
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4994  032C' C011' FFD9         	movff	sprintf@sp,fsr2l
  4995  0330' C012' FFDA         	movff	sprintf@sp+1,fsr2h
  4996  0334' 0E2D               	movlw	45
  4997  0336' 6EDF               	movwf	indf2,c
  4998                           
  4999                           ; BSR set to: 0
  5000  0338' 0100               	movlb	0	; () banked
  5001  033A' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  5002  033C' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  5003  033E'                    l8953:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;doprnt.c: 1415: if(width)
  5007  033E' 0100               	movlb	0	; () banked
  5008  0340' 5100'              	movf	sprintf@width& (0+255),w,b
  5009  0342' 0100               	movlb	0	; () banked
  5010  0344' 1100'              	iorwf	(sprintf@width+1)& (0+255),w,b
  5011  0346' B4D8               	btfsc	status,2,c
  5012  0348' D037               	goto	l8975
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5016                           
  5017                           ; BSR set to: 0
  5018                           
  5019                           ;doprnt.c: 1416: do
  5020  034A' C011' FFD9         	movff	sprintf@sp,fsr2l
  5021  034E' C012' FFDA         	movff	sprintf@sp+1,fsr2h
  5022  0352' 0E30               	movlw	48
  5023  0354' 6EDF               	movwf	indf2,c
  5024                           
  5025                           ; BSR set to: 0
  5026  0356' 0100               	movlb	0	; () banked
  5027  0358' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  5028  035A' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;doprnt.c: 1418: while(--width);
  5032  035C' 0100               	movlb	0	; () banked
  5033  035E' 0700'              	decf	sprintf@width& (0+255),f,b
  5034  0360' A0D8               	btfss	status,0,c
  5035  0362' 0700'              	decf	(sprintf@width+1)& (0+255),f,b
  5036  0364' D7EC               	goto	l8953
  5037  0366'                    l8961:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;doprnt.c: 1422: {
  5041                           ;doprnt.c: 1424: if(width
  5042                           ;doprnt.c: 1428: )
  5043  0366' 0100               	movlb	0	; () banked
  5044  0368' 5100'              	movf	sprintf@width& (0+255),w,b
  5045  036A' 0100               	movlb	0	; () banked
  5046  036C' 1100'              	iorwf	(sprintf@width+1)& (0+255),w,b
  5047  036E' B4D8               	btfsc	status,2,c
  5048  0370' D013               	goto	l8969
  5049  0372'                    l8963:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5053  0372' C011' FFD9         	movff	sprintf@sp,fsr2l
  5054  0376' C012' FFDA         	movff	sprintf@sp+1,fsr2h
  5055  037A' 0E20               	movlw	32
  5056  037C' 6EDF               	movwf	indf2,c
  5057                           
  5058                           ; BSR set to: 0
  5059  037E' 0100               	movlb	0	; () banked
  5060  0380' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  5061  0382' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;doprnt.c: 1431: while(--width);
  5065  0384' 0100               	movlb	0	; () banked
  5066  0386' 0700'              	decf	sprintf@width& (0+255),f,b
  5067  0388' A0D8               	btfss	status,0,c
  5068  038A' 0700'              	decf	(sprintf@width+1)& (0+255),f,b
  5069  038C' 0100               	movlb	0	; () banked
  5070  038E' 5100'              	movf	sprintf@width& (0+255),w,b
  5071  0390' 0100               	movlb	0	; () banked
  5072  0392' 1100'              	iorwf	(sprintf@width+1)& (0+255),w,b
  5073  0394' A4D8               	btfss	status,2,c
  5074  0396' D7ED               	goto	l8963
  5075  0398'                    l8969:
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;doprnt.c: 1438: if(flag & 0x03)
  5079  0398' C030' F023'        	movff	sprintf@flag,??_sprintf
  5080  039C' 0E03               	movlw	3
  5081  039E' 0100               	movlb	0	; () banked
  5082  03A0' 1700'              	andwf	??_sprintf& (0+255),f,b
  5083  03A2' B4D8               	btfsc	status,2,c
  5084  03A4' D009               	goto	l8975
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5088  03A6' C011' FFD9         	movff	sprintf@sp,fsr2l
  5089  03AA' C012' FFDA         	movff	sprintf@sp+1,fsr2h
  5090  03AE' 0E2D               	movlw	45
  5091  03B0' 6EDF               	movwf	indf2,c
  5092                           
  5093                           ; BSR set to: 0
  5094  03B2' 0100               	movlb	0	; () banked
  5095  03B4' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  5096  03B6' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  5097  03B8'                    l8975:
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;doprnt.c: 1469: }
  5101                           ;doprnt.c: 1472: prec = c;
  5102  03B8' C031' F027'        	movff	sprintf@c,sprintf@prec
  5103                           
  5104                           ;doprnt.c: 1474: while(prec--) {
  5105  03BC' D031               	goto	l8983
  5106  03BE'                    l8977:
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;doprnt.c: 1478: {
  5110                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5111  03BE' 0100               	movlb	0	; () banked
  5112  03C0' 5100'              	movf	sprintf@prec& (0+255),w,b
  5113  03C2' 0D02               	mullw	2
  5114  03C4' 0E00'              	movlw	low _dpowers
  5115  03C6' 24F3               	addwf	prodl,w,c
  5116  03C8' 6EF6               	movwf	tblptrl,c
  5117  03CA' 0E00'              	movlw	high _dpowers
  5118  03CC' 20F4               	addwfc	prodh,w,c
  5119  03CE' 6EF7               	movwf	tblptrh,c
  5120  03D0'                    	if	1	;There are 3 active tblptr bytes
  5121  03D0' 6AF8               	clrf	tblptru,c
  5122  03D2' 0E00'              	movlw	low (__mediumconst shr (0+16))
  5123  03D4' 22F8               	addwfc	tblptru,f,c
  5124  03D6'                    	endif
  5125  03D6' 0009               	tblrd		*+
  5126  03D8' CFF5 F008'         	movff	tablat,___lwdiv@divisor
  5127  03DC' 000A               	tblrd		*-
  5128  03DE' CFF5 F009'         	movff	tablat,___lwdiv@divisor+1
  5129  03E2' C02C' F006'        	movff	sprintf@val,___lwdiv@dividend
  5130  03E6' C02D' F007'        	movff	sprintf@val+1,___lwdiv@dividend+1
  5131  03EA' EC00' F000'        	call	___lwdiv	;wreg free
  5132  03EE' C006' F00D'        	movff	?___lwdiv,___lwmod@dividend
  5133  03F2' C007' F00E'        	movff	?___lwdiv+1,___lwmod@dividend+1
  5134  03F6' 0E00               	movlw	0
  5135  03F8' 0100               	movlb	0	; () banked
  5136  03FA' 6F00'              	movwf	(___lwmod@divisor+1)& (0+255),b
  5137  03FC' 0E0A               	movlw	10
  5138  03FE' 6F00'              	movwf	___lwmod@divisor& (0+255),b
  5139  0400' EC00' F000'        	call	___lwmod	;wreg free
  5140  0404' 0100               	movlb	0	; () banked
  5141  0406' 5100'              	movf	?___lwmod& (0+255),w,b
  5142  0408' 0F30               	addlw	48
  5143  040A' 0100               	movlb	0	; () banked
  5144  040C' 6F00'              	movwf	sprintf@c& (0+255),b
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;doprnt.c: 1523: }
  5148                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5149  040E' C011' FFD9         	movff	sprintf@sp,fsr2l
  5150  0412' C012' FFDA         	movff	sprintf@sp+1,fsr2h
  5151  0416' C031' FFDF         	movff	sprintf@c,indf2
  5152                           
  5153                           ; BSR set to: 0
  5154  041A' 0100               	movlb	0	; () banked
  5155  041C' 4B00'              	infsnz	sprintf@sp& (0+255),f,b
  5156  041E' 2B00'              	incf	(sprintf@sp+1)& (0+255),f,b
  5157  0420'                    l8983:
  5158                           
  5159                           ; BSR set to: 0
  5160  0420' 0100               	movlb	0	; () banked
  5161  0422' 0700'              	decf	sprintf@prec& (0+255),f,b
  5162  0424' 0100               	movlb	0	; () banked
  5163  0426' 2900'              	incf	sprintf@prec& (0+255),w,b
  5164  0428' A4D8               	btfss	status,2,c
  5165  042A' D7C9               	goto	l8977
  5166  042C'                    l8985:
  5167                           
  5168                           ; BSR set to: 0
  5169  042C' C013' FFF6         	movff	sprintf@f,tblptrl
  5170  0430' C014' FFF7         	movff	sprintf@f+1,tblptrh
  5171  0434' 0100               	movlb	0	; () banked
  5172  0436' 4B00'              	infsnz	sprintf@f& (0+255),f,b
  5173  0438' 2B00'              	incf	(sprintf@f+1)& (0+255),f,b
  5174  043A'                    	if	0	;tblptru may be non-zero
  5175  043A'                    	endif
  5176  043A'                    	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5177  043A' 0E00'              	movlw	low (__mediumconst shr (0+16))
  5178  043C' 6EF8               	movwf	tblptru,c
  5179  043E'                    	endif
  5180  043E' 0008               	tblrd		*
  5181  0440' CFF5 F031'         	movff	tablat,sprintf@c
  5182  0444' 0100               	movlb	0	; () banked
  5183  0446' 5100'              	movf	sprintf@c& (0+255),w,b
  5184  0448' A4D8               	btfss	status,2,c
  5185  044A' D5E1               	goto	l8845
  5186  044C'                    l8987:
  5187                           
  5188                           ;doprnt.c: 1538: *sp = 0;
  5189  044C' C011' FFD9         	movff	sprintf@sp,fsr2l
  5190  0450' C012' FFDA         	movff	sprintf@sp+1,fsr2h
  5191  0454' 0E00               	movlw	0
  5192  0456' 6EDF               	movwf	indf2,c
  5193  0458' 0012               	return	
  5194  045A'                    __end_of_sprintf:
  5195                           	opt stack 0
  5196                           tblptru	equ	0xFF8
  5197                           tblptrh	equ	0xFF7
  5198                           tblptrl	equ	0xFF6
  5199                           tablat	equ	0xFF5
  5200                           prodh	equ	0xFF4
  5201                           prodl	equ	0xFF3
  5202                           intcon	equ	0xFF2
  5203                           postinc0	equ	0xFEE
  5204                           wreg	equ	0xFE8
  5205                           postdec1	equ	0xFE5
  5206                           fsr1h	equ	0xFE2
  5207                           fsr1l	equ	0xFE1
  5208                           indf2	equ	0xFDF
  5209                           postinc2	equ	0xFDE
  5210                           postdec2	equ	0xFDD
  5211                           fsr2h	equ	0xFDA
  5212                           fsr2l	equ	0xFD9
  5213                           status	equ	0xFD8
  5214                           
  5215 ;; *************** function _ringbuf_put_str *****************
  5216 ;; Defined at:
  5217 ;;		line 39 in file "../My_library/My_ringbuf.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5220 ;;		 -> uart_tx(8), 
  5221 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  5222 ;;		 -> terminal_operation@str(30), STR_43(315), STR_24(8), print_time@str(30), 
  5223 ;;		 -> STR_22(3), print_time_dec@str(10), STR_20(4), STR_19(4), 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;		None
  5226 ;; Return value:  Size  Location     Type
  5227 ;;		None               void
  5228 ;; Registers used:
  5229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5235 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5238 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5239 ;;Total ram usage:        4 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:    6
  5242 ;; This function calls:
  5243 ;;		_ringbuf_put
  5244 ;; This function is called by:
  5245 ;;		_terminal_task
  5246 ;;		_print_time
  5247 ;;		_terminal_at_hand
  5248 ;;		_terminal_operation
  5249 ;;		_print_time_dec
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text7
  5254  0000'                    __ptext7:
  5255                           	opt stack 0
  5256  0000'                    _ringbuf_put_str:
  5257                           	opt stack 20
  5258                           
  5259                           ;My_ringbuf.c: 40: while (*str) {
  5260                           
  5261                           ;incstack = 0
  5262  0000' D01C               	goto	l8757
  5263  0002'                    l8753:
  5264                           
  5265                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  5266  0002' C00F' F008'        	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5267  0006' C010' F009'        	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5268  000A' C011' FFF6         	movff	ringbuf_put_str@str,tblptrl
  5269  000E' C012' FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5270  0012' 0E00'              	movlw	low (__mediumconst shr (0+16))
  5271  0014' 6EF8               	movwf	tblptru,c
  5272  0016' 0EFF'              	movlw	(high __ramtop+-1)
  5273  0018' 64F7               	cpfsgt	tblptrh,c
  5274  001A' D003               	bra	u8757
  5275  001C' 0008               	tblrd		*
  5276  001E' 50F5               	movf	tablat,w,c
  5277  0020' D005               	bra	u8750
  5278  0022'                    u8757:
  5279  0022' CFF6 FFE9          	movff	tblptrl,fsr0l
  5280  0026' CFF7 FFEA          	movff	tblptrh,fsr0h
  5281  002A' 50EF               	movf	indf0,w,c
  5282  002C'                    u8750:
  5283  002C' 0100               	movlb	0	; () banked
  5284  002E' 6F00'              	movwf	ringbuf_put@data& (0+255),b
  5285  0030' EC00' F000'        	call	_ringbuf_put	;wreg free
  5286  0034' 0100               	movlb	0	; () banked
  5287  0036' 4B00'              	infsnz	ringbuf_put_str@str& (0+255),f,b
  5288  0038' 2B00'              	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5289  003A'                    l8757:
  5290  003A' C011' FFF6         	movff	ringbuf_put_str@str,tblptrl
  5291  003E' C012' FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5292  0042' 0E00'              	movlw	low (__mediumconst shr (0+16))
  5293  0044' 6EF8               	movwf	tblptru,c
  5294  0046' 0EFF'              	movlw	(high __ramtop+-1)
  5295  0048' 64F7               	cpfsgt	tblptrh,c
  5296  004A' D003               	bra	u8767
  5297  004C' 0008               	tblrd		*
  5298  004E' 50F5               	movf	tablat,w,c
  5299  0050' D005               	bra	u8760
  5300  0052'                    u8767:
  5301  0052' CFF6 FFE9          	movff	tblptrl,fsr0l
  5302  0056' CFF7 FFEA          	movff	tblptrh,fsr0h
  5303  005A' 50EF               	movf	indf0,w,c
  5304  005C'                    u8760:
  5305  005C' 0900               	iorlw	0
  5306  005E' B4D8               	btfsc	status,2,c
  5307  0060' 0012               	return	
  5308  0062' D7CF               	goto	l8753
  5309  0064'                    __end_of_ringbuf_put_str:
  5310                           	opt stack 0
  5311                           tblptru	equ	0xFF8
  5312                           tblptrh	equ	0xFF7
  5313                           tblptrl	equ	0xFF6
  5314                           tablat	equ	0xFF5
  5315                           prodh	equ	0xFF4
  5316                           prodl	equ	0xFF3
  5317                           intcon	equ	0xFF2
  5318                           indf0	equ	0xFEF
  5319                           postinc0	equ	0xFEE
  5320                           fsr0h	equ	0xFEA
  5321                           fsr0l	equ	0xFE9
  5322                           wreg	equ	0xFE8
  5323                           postdec1	equ	0xFE5
  5324                           fsr1h	equ	0xFE2
  5325                           fsr1l	equ	0xFE1
  5326                           indf2	equ	0xFDF
  5327                           postinc2	equ	0xFDE
  5328                           postdec2	equ	0xFDD
  5329                           fsr2h	equ	0xFDA
  5330                           fsr2l	equ	0xFD9
  5331                           status	equ	0xFD8
  5332                           
  5333 ;; *************** function _RTCC_from_caltime *****************
  5334 ;; Defined at:
  5335 ;;		line 204 in file "../My_library/My_RTCC.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  tm              2   47[BANK0 ] PTR struct .
  5338 ;;		 -> now(14), 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;		None               void
  5343 ;; Registers used:
  5344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5354 ;;Total ram usage:        2 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    7
  5357 ;; This function calls:
  5358 ;;		_caltime_to_RTCC
  5359 ;;		_caltime_to_epoch
  5360 ;;		_epoch_to_caltime
  5361 ;; This function is called by:
  5362 ;;		_terminal_at_hand
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text8
  5367  0000'                    __ptext8:
  5368                           	opt stack 0
  5369  0000'                    _RTCC_from_caltime:
  5370                           	opt stack 19
  5371                           
  5372                           ;My_RTCC.c: 205: caltime_to_epoch(tm);
  5373                           
  5374                           ;incstack = 0
  5375  0000' C02F' F019'        	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5376  0004' C030' F01A'        	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5377  0008' EC00' F000'        	call	_caltime_to_epoch	;wreg free
  5378                           
  5379                           ;My_RTCC.c: 206: epoch_to_caltime(tm);
  5380  000C' C02F' F021'        	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5381  0010' C030' F022'        	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5382  0014' EC00' F000'        	call	_epoch_to_caltime	;wreg free
  5383                           
  5384                           ;My_RTCC.c: 207: caltime_to_RTCC(tm);
  5385  0018' C02F' F016'        	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5386  001C' C030' F017'        	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5387  0020' EC00' F000'        	call	_caltime_to_RTCC	;wreg free
  5388  0024' 0012               	return		;funcret
  5389  0026'                    __end_of_RTCC_from_caltime:
  5390                           	opt stack 0
  5391                           tblptru	equ	0xFF8
  5392                           tblptrh	equ	0xFF7
  5393                           tblptrl	equ	0xFF6
  5394                           tablat	equ	0xFF5
  5395                           prodh	equ	0xFF4
  5396                           prodl	equ	0xFF3
  5397                           intcon	equ	0xFF2
  5398                           indf0	equ	0xFEF
  5399                           postinc0	equ	0xFEE
  5400                           fsr0h	equ	0xFEA
  5401                           fsr0l	equ	0xFE9
  5402                           wreg	equ	0xFE8
  5403                           postdec1	equ	0xFE5
  5404                           fsr1h	equ	0xFE2
  5405                           fsr1l	equ	0xFE1
  5406                           indf2	equ	0xFDF
  5407                           postinc2	equ	0xFDE
  5408                           postdec2	equ	0xFDD
  5409                           fsr2h	equ	0xFDA
  5410                           fsr2l	equ	0xFD9
  5411                           status	equ	0xFD8
  5412                           
  5413 ;; *************** function _strcmp *****************
  5414 ;; Defined at:
  5415 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5418 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5419 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5420 ;;		 -> STR_61(6), STR_60(2), STR_59(2), STR_58(2), 
  5421 ;;		 -> STR_57(2), STR_56(2), STR_55(2), STR_54(2), 
  5422 ;;		 -> STR_53(2), STR_52(4), STR_51(4), STR_50(4), 
  5423 ;;		 -> STR_49(4), STR_48(5), STR_47(4), STR_45(3), 
  5424 ;;		 -> STR_44(9), STR_42(2), STR_41(5), STR_40(7), 
  5425 ;;		 -> STR_39(2), STR_38(7), STR_37(2), STR_36(5), 
  5426 ;;		 -> STR_35(2), STR_34(4), STR_33(2), STR_32(6), 
  5427 ;;		 -> STR_31(2), STR_30(5), STR_29(2), STR_28(12), 
  5428 ;;		 -> STR_27(3), STR_26(2), STR_25(11), 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;  r               1    4[BANK0 ] char 
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  2    0[BANK0 ] int 
  5433 ;; Registers used:
  5434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5440 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5442 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5443 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5444 ;;Total ram usage:        6 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    4
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_terminal_time
  5451 ;;		_terminal_operation
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text9
  5456  0000'                    __ptext9:
  5457                           	opt stack 0
  5458  0000'                    _strcmp:
  5459                           	opt stack 23
  5460                           
  5461                           ;incstack = 0
  5462  0000' D006               	goto	l9019
  5463  0002'                    l9017:
  5464  0002' 0100               	movlb	0	; () banked
  5465  0004' 4B00'              	infsnz	strcmp@s1& (0+255),f,b
  5466  0006' 2B00'              	incf	(strcmp@s1+1)& (0+255),f,b
  5467  0008' 0100               	movlb	0	; () banked
  5468  000A' 4B00'              	infsnz	strcmp@s2& (0+255),f,b
  5469  000C' 2B00'              	incf	(strcmp@s2+1)& (0+255),f,b
  5470  000E'                    l9019:
  5471  000E' C000' FFD9         	movff	strcmp@s1,fsr2l
  5472  0012' C001' FFDA         	movff	strcmp@s1+1,fsr2h
  5473  0016' 50DF               	movf	indf2,w,c
  5474  0018' 6E00'              	movwf	??_strcmp& (0+255),c
  5475  001A' C002' FFF6         	movff	strcmp@s2,tblptrl
  5476  001E' C003' FFF7         	movff	strcmp@s2+1,tblptrh
  5477  0022'                    	if	0	;tblptru may be non-zero
  5478  0022'                    	endif
  5479  0022'                    	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5480  0022' 0E00'              	movlw	low (__mediumconst shr (0+16))
  5481  0024' 6EF8               	movwf	tblptru,c
  5482  0026'                    	endif
  5483  0026' 0008               	tblrd		*
  5484  0028' 50F5               	movf	tablat,w,c
  5485  002A' 0800               	sublw	0
  5486  002C' 241F'              	addwf	??_strcmp,w,c
  5487  002E' 0100               	movlb	0	; () banked
  5488  0030' 6F00'              	movwf	strcmp@r& (0+255),b
  5489  0032' 0100               	movlb	0	; () banked
  5490  0034' 5100'              	movf	strcmp@r& (0+255),w,b
  5491  0036' A4D8               	btfss	status,2,c
  5492  0038' D007               	goto	l9023
  5493                           
  5494                           ; BSR set to: 0
  5495  003A' C000' FFD9         	movff	strcmp@s1,fsr2l
  5496  003E' C001' FFDA         	movff	strcmp@s1+1,fsr2h
  5497  0042' 50DF               	movf	indf2,w,c
  5498  0044' A4D8               	btfss	status,2,c
  5499  0046' D7DD               	goto	l9017
  5500  0048'                    l9023:
  5501                           
  5502                           ; BSR set to: 0
  5503  0048' 0100               	movlb	0	; () banked
  5504  004A' 5100'              	movf	strcmp@r& (0+255),w,b
  5505  004C' 0100               	movlb	0	; () banked
  5506  004E' 6F00'              	movwf	?_strcmp& (0+255),b
  5507  0050' 6B00'              	clrf	(?_strcmp+1)& (0+255),b
  5508  0052' BF00'              	btfsc	?_strcmp& (0+255),7,b
  5509  0054' 0700'              	decf	(?_strcmp+1)& (0+255),f,b
  5510  0056' 0012               	return	
  5511  0058'                    __end_of_strcmp:
  5512                           	opt stack 0
  5513                           tblptru	equ	0xFF8
  5514                           tblptrh	equ	0xFF7
  5515                           tblptrl	equ	0xFF6
  5516                           tablat	equ	0xFF5
  5517                           prodh	equ	0xFF4
  5518                           prodl	equ	0xFF3
  5519                           intcon	equ	0xFF2
  5520                           indf0	equ	0xFEF
  5521                           postinc0	equ	0xFEE
  5522                           fsr0h	equ	0xFEA
  5523                           fsr0l	equ	0xFE9
  5524                           wreg	equ	0xFE8
  5525                           postdec1	equ	0xFE5
  5526                           fsr1h	equ	0xFE2
  5527                           fsr1l	equ	0xFE1
  5528                           indf2	equ	0xFDF
  5529                           postinc2	equ	0xFDE
  5530                           postdec2	equ	0xFDD
  5531                           fsr2h	equ	0xFDA
  5532                           fsr2l	equ	0xFD9
  5533                           status	equ	0xFD8
  5534                           
  5535 ;; *************** function _atoi *****************
  5536 ;; Defined at:
  5537 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5540 ;;		 -> terminal_task@op2(25), 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  a               2   11[BANK0 ] int 
  5543 ;;  sign            1   10[BANK0 ] unsigned char 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  2    6[BANK0 ] int 
  5546 ;; Registers used:
  5547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5554 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5555 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5556 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5557 ;;Total ram usage:        7 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    5
  5560 ;; This function calls:
  5561 ;;		___wmul
  5562 ;;		_isdigit
  5563 ;; This function is called by:
  5564 ;;		_terminal_time
  5565 ;;		_terminal_operation
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text10
  5570  0000'                    __ptext10:
  5571                           	opt stack 0
  5572  0000'                    _atoi:
  5573                           	opt stack 22
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;incstack = 0
  5577  0000' D003               	goto	l9031
  5578  0002'                    l9029:
  5579  0002' 0100               	movlb	0	; () banked
  5580  0004' 4B00'              	infsnz	atoi@s& (0+255),f,b
  5581  0006' 2B00'              	incf	(atoi@s+1)& (0+255),f,b
  5582  0008'                    l9031:
  5583  0008' C006' FFD9         	movff	atoi@s,fsr2l
  5584  000C' C007' FFDA         	movff	atoi@s+1,fsr2h
  5585  0010' 0E20               	movlw	32
  5586  0012' 18DE               	xorwf	postinc2,w,c
  5587  0014' B4D8               	btfsc	status,2,c
  5588  0016' D7F5               	goto	l9029
  5589  0018' C006' FFD9         	movff	atoi@s,fsr2l
  5590  001C' C007' FFDA         	movff	atoi@s+1,fsr2h
  5591  0020' 0E09               	movlw	9
  5592  0022' 18DE               	xorwf	postinc2,w,c
  5593  0024' B4D8               	btfsc	status,2,c
  5594  0026' D7ED               	goto	l9029
  5595  0028' 0E00               	movlw	0
  5596  002A' 0100               	movlb	0	; () banked
  5597  002C' 6F00'              	movwf	(atoi@a+1)& (0+255),b
  5598  002E' 0E00               	movlw	0
  5599  0030' 6F00'              	movwf	atoi@a& (0+255),b
  5600  0032' 0E00               	movlw	0
  5601  0034' 0100               	movlb	0	; () banked
  5602  0036' 6F00'              	movwf	atoi@sign& (0+255),b
  5603                           
  5604                           ; BSR set to: 0
  5605  0038' C006' FFD9         	movff	atoi@s,fsr2l
  5606  003C' C007' FFDA         	movff	atoi@s+1,fsr2h
  5607  0040' 0E2D               	movlw	45
  5608  0042' 18DE               	xorwf	postinc2,w,c
  5609  0044' A4D8               	btfss	status,2,c
  5610  0046' D003               	goto	l9041
  5611                           
  5612                           ; BSR set to: 0
  5613  0048' 0100               	movlb	0	; () banked
  5614  004A' 2B00'              	incf	atoi@sign& (0+255),f,b
  5615  004C' D02E               	goto	l9047
  5616  004E'                    l9041:
  5617                           
  5618                           ; BSR set to: 0
  5619  004E' C006' FFD9         	movff	atoi@s,fsr2l
  5620  0052' C007' FFDA         	movff	atoi@s+1,fsr2h
  5621  0056' 0E2B               	movlw	43
  5622  0058' 18DE               	xorwf	postinc2,w,c
  5623  005A' A4D8               	btfss	status,2,c
  5624  005C' D029               	goto	l9049
  5625  005E' D025               	goto	l9047
  5626  0060'                    l9045:
  5627  0060' C00B' F000'        	movff	atoi@a,___wmul@multiplier
  5628  0064' C00C' F001'        	movff	atoi@a+1,___wmul@multiplier+1
  5629  0068' 0E00               	movlw	0
  5630  006A' 0100               	movlb	0	; () banked
  5631  006C' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
  5632  006E' 0E0A               	movlw	10
  5633  0070' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
  5634  0072' EC00' F000'        	call	___wmul	;wreg free
  5635  0076' C006' FFD9         	movff	atoi@s,fsr2l
  5636  007A' C007' FFDA         	movff	atoi@s+1,fsr2h
  5637  007E' 50DF               	movf	indf2,w,c
  5638  0080' 0100               	movlb	0	; () banked
  5639  0082' 6F00'              	movwf	??_atoi& (0+255),b
  5640  0084' 6B00'              	clrf	(??_atoi+1)& (0+255),b
  5641  0086' 0100               	movlb	0	; () banked
  5642  0088' 5100'              	movf	?___wmul& (0+255),w,b
  5643  008A' 0100               	movlb	0	; () banked
  5644  008C' 2700'              	addwf	??_atoi& (0+255),f,b
  5645  008E' 0100               	movlb	0	; () banked
  5646  0090' 5100'              	movf	(?___wmul+1)& (0+255),w,b
  5647  0092' 0100               	movlb	0	; () banked
  5648  0094' 2300'              	addwfc	(??_atoi+1)& (0+255),f,b
  5649  0096' 0ED0               	movlw	208
  5650  0098' 0100               	movlb	0	; () banked
  5651  009A' 2500'              	addwf	??_atoi& (0+255),w,b
  5652  009C' 0100               	movlb	0	; () banked
  5653  009E' 6F00'              	movwf	atoi@a& (0+255),b
  5654  00A0' 0EFF               	movlw	255
  5655  00A2' 0100               	movlb	0	; () banked
  5656  00A4' 2100'              	addwfc	(??_atoi+1)& (0+255),w,b
  5657  00A6' 0100               	movlb	0	; () banked
  5658  00A8' 6F00'              	movwf	(atoi@a+1)& (0+255),b
  5659  00AA'                    l9047:
  5660                           
  5661                           ; BSR set to: 0
  5662  00AA' 0100               	movlb	0	; () banked
  5663  00AC' 4B00'              	infsnz	atoi@s& (0+255),f,b
  5664  00AE' 2B00'              	incf	(atoi@s+1)& (0+255),f,b
  5665  00B0'                    l9049:
  5666                           
  5667                           ; BSR set to: 0
  5668  00B0' C006' FFD9         	movff	atoi@s,fsr2l
  5669  00B4' C007' FFDA         	movff	atoi@s+1,fsr2h
  5670  00B8' 50DF               	movf	indf2,w,c
  5671  00BA' EC00' F000'        	call	_isdigit
  5672  00BE' B0D8               	btfsc	status,0,c
  5673  00C0' D7CF               	goto	l9045
  5674  00C2' 0100               	movlb	0	; () banked
  5675  00C4' 5100'              	movf	atoi@sign& (0+255),w,b
  5676  00C6' 0100               	movlb	0	; () banked
  5677  00C8' B4D8               	btfsc	status,2,c
  5678  00CA' D00E               	goto	l1851
  5679                           
  5680                           ; BSR set to: 0
  5681  00CC' C00B' F008'        	movff	atoi@a,??_atoi
  5682  00D0' C00C' F009'        	movff	atoi@a+1,??_atoi+1
  5683  00D4' 0100               	movlb	0	; () banked
  5684  00D6' 1F00'              	comf	??_atoi& (0+255),f,b
  5685  00D8' 1F00'              	comf	(??_atoi+1)& (0+255),f,b
  5686  00DA' 4B00'              	infsnz	??_atoi& (0+255),f,b
  5687  00DC' 2B00'              	incf	(??_atoi+1)& (0+255),f,b
  5688  00DE' C008' F006'        	movff	??_atoi,?_atoi
  5689  00E2' C009' F007'        	movff	??_atoi+1,?_atoi+1
  5690  00E6' 0012               	return	
  5691  00E8'                    l1851:
  5692                           
  5693                           ; BSR set to: 0
  5694  00E8' C00B' F006'        	movff	atoi@a,?_atoi
  5695  00EC' C00C' F007'        	movff	atoi@a+1,?_atoi+1
  5696                           
  5697                           ; BSR set to: 0
  5698  00F0' 0012               	return		;funcret
  5699  00F2'                    __end_of_atoi:
  5700                           	opt stack 0
  5701                           tblptru	equ	0xFF8
  5702                           tblptrh	equ	0xFF7
  5703                           tblptrl	equ	0xFF6
  5704                           tablat	equ	0xFF5
  5705                           prodh	equ	0xFF4
  5706                           prodl	equ	0xFF3
  5707                           intcon	equ	0xFF2
  5708                           indf0	equ	0xFEF
  5709                           postinc0	equ	0xFEE
  5710                           fsr0h	equ	0xFEA
  5711                           fsr0l	equ	0xFE9
  5712                           wreg	equ	0xFE8
  5713                           postdec1	equ	0xFE5
  5714                           fsr1h	equ	0xFE2
  5715                           fsr1l	equ	0xFE1
  5716                           indf2	equ	0xFDF
  5717                           postinc2	equ	0xFDE
  5718                           postdec2	equ	0xFDD
  5719                           fsr2h	equ	0xFDA
  5720                           fsr2l	equ	0xFD9
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function _isdigit *****************
  5724 ;; Defined at:
  5725 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  c               1    wreg     unsigned char 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  c               1    1[BANK0 ] unsigned char 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;		None               void
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5743 ;;Total ram usage:        3 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    4
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_sprintf
  5750 ;;		_atoi
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text11
  5755  0000'                    __ptext11:
  5756                           	opt stack 0
  5757  0000'                    _isdigit:
  5758                           	opt stack 20
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;incstack = 0
  5762                           ;isdigit@c stored from wreg
  5763  0000' 0100               	movlb	0	; () banked
  5764  0002' 6F00'              	movwf	isdigit@c& (0+255),b
  5765  0004' 0E00               	movlw	0
  5766  0006' 0100               	movlb	0	; () banked
  5767  0008' 6F00'              	movwf	_isdigit$6309& (0+255),b
  5768                           
  5769                           ; BSR set to: 0
  5770  000A' 0E3A               	movlw	58
  5771  000C' 0100               	movlb	0	; () banked
  5772  000E' 6100'              	cpfslt	isdigit@c& (0+255),b
  5773  0010' D007               	goto	l8703
  5774                           
  5775                           ; BSR set to: 0
  5776  0012' 0E2F               	movlw	47
  5777  0014' 0100               	movlb	0	; () banked
  5778  0016' 6500'              	cpfsgt	isdigit@c& (0+255),b
  5779  0018' D003               	goto	l8703
  5780                           
  5781                           ; BSR set to: 0
  5782  001A' 0E01               	movlw	1
  5783  001C' 0100               	movlb	0	; () banked
  5784  001E' 6F00'              	movwf	_isdigit$6309& (0+255),b
  5785  0020'                    l8703:
  5786                           
  5787                           ; BSR set to: 0
  5788  0020' C000' F01F'        	movff	_isdigit$6309,??_isdigit
  5789  0024' 301F'              	rrcf	??_isdigit,w,c
  5790  0026' 0012               	return	
  5791  0028'                    __end_of_isdigit:
  5792                           	opt stack 0
  5793                           tblptru	equ	0xFF8
  5794                           tblptrh	equ	0xFF7
  5795                           tblptrl	equ	0xFF6
  5796                           tablat	equ	0xFF5
  5797                           prodh	equ	0xFF4
  5798                           prodl	equ	0xFF3
  5799                           intcon	equ	0xFF2
  5800                           indf0	equ	0xFEF
  5801                           postinc0	equ	0xFEE
  5802                           fsr0h	equ	0xFEA
  5803                           fsr0l	equ	0xFE9
  5804                           wreg	equ	0xFE8
  5805                           postdec1	equ	0xFE5
  5806                           fsr1h	equ	0xFE2
  5807                           fsr1l	equ	0xFE1
  5808                           indf2	equ	0xFDF
  5809                           postinc2	equ	0xFDE
  5810                           postdec2	equ	0xFDD
  5811                           fsr2h	equ	0xFDA
  5812                           fsr2l	equ	0xFD9
  5813                           status	equ	0xFD8
  5814                           
  5815 ;; *************** function _ringbuf_put_num *****************
  5816 ;; Defined at:
  5817 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  rb              2   17[BANK0 ] PTR struct ringbuf
  5820 ;;		 -> uart_tx(8), 
  5821 ;;  value           2   19[BANK0 ] const unsigned int 
  5822 ;;  digits          1   21[BANK0 ] unsigned char 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  i               1   22[BANK0 ] unsigned char 
  5825 ;;  temp            2   23[BANK0 ] unsigned int 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;		None               void
  5828 ;; Registers used:
  5829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5835 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;Total ram usage:        8 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    6
  5842 ;; This function calls:
  5843 ;;		___lwdiv
  5844 ;;		___lwmod
  5845 ;;		_ringbuf_put
  5846 ;; This function is called by:
  5847 ;;		_terminal_task
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text12
  5852  0000'                    __ptext12:
  5853                           	opt stack 0
  5854  0000'                    _ringbuf_put_num:
  5855                           	opt stack 23
  5856                           
  5857                           ;My_ringbuf.c: 29: while (digits--) {
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;incstack = 0
  5861  0000' D039               	goto	l9237
  5862  0002'                    l774:
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5866  0002' C013' F017'        	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5867  0006' C014' F018'        	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5871  000A' 0E00               	movlw	0
  5872  000C' 0100               	movlb	0	; () banked
  5873  000E' 6F00'              	movwf	ringbuf_put_num@i& (0+255),b
  5874  0010' D011               	goto	l9231
  5875  0012'                    l9227:
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;My_ringbuf.c: 32: temp /= 10;
  5879  0012' C017' F006'        	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5880  0016' C018' F007'        	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5881  001A' 0E00               	movlw	0
  5882  001C' 0100               	movlb	0	; () banked
  5883  001E' 6F00'              	movwf	(___lwdiv@divisor+1)& (0+255),b
  5884  0020' 0E0A               	movlw	10
  5885  0022' 6F00'              	movwf	___lwdiv@divisor& (0+255),b
  5886  0024' EC00' F000'        	call	___lwdiv	;wreg free
  5887  0028' C006' F017'        	movff	?___lwdiv,ringbuf_put_num@temp
  5888  002C' C007' F018'        	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5889  0030' 0100               	movlb	0	; () banked
  5890  0032' 2B00'              	incf	ringbuf_put_num@i& (0+255),f,b
  5891  0034'                    l9231:
  5892                           
  5893                           ; BSR set to: 0
  5894  0034' 0100               	movlb	0	; () banked
  5895  0036' 5100'              	movf	ringbuf_put_num@digits& (0+255),w,b
  5896  0038' 0100               	movlb	0	; () banked
  5897  003A' 5D00'              	subwf	ringbuf_put_num@i& (0+255),w,b
  5898  003C' A0D8               	btfss	status,0,c
  5899  003E' D7E9               	goto	l9227
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;My_ringbuf.c: 33: }
  5903                           ;My_ringbuf.c: 34: temp %= 10;
  5904                           
  5905                           ; BSR set to: 0
  5906  0040' C017' F00D'        	movff	ringbuf_put_num@temp,___lwmod@dividend
  5907  0044' C018' F00E'        	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5908  0048' 0E00               	movlw	0
  5909  004A' 0100               	movlb	0	; () banked
  5910  004C' 6F00'              	movwf	(___lwmod@divisor+1)& (0+255),b
  5911  004E' 0E0A               	movlw	10
  5912  0050' 6F00'              	movwf	___lwmod@divisor& (0+255),b
  5913  0052' EC00' F000'        	call	___lwmod	;wreg free
  5914  0056' C00D' F017'        	movff	?___lwmod,ringbuf_put_num@temp
  5915  005A' C00E' F018'        	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5916                           
  5917                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5918  005E' C011' F008'        	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5919  0062' C012' F009'        	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5920  0066' 0100               	movlb	0	; () banked
  5921  0068' 5100'              	movf	ringbuf_put_num@temp& (0+255),w,b
  5922  006A' 0F30               	addlw	48
  5923  006C' 0100               	movlb	0	; () banked
  5924  006E' 6F00'              	movwf	ringbuf_put@data& (0+255),b
  5925  0070' EC00' F000'        	call	_ringbuf_put	;wreg free
  5926  0074'                    l9237:
  5927  0074' 0100               	movlb	0	; () banked
  5928  0076' 0700'              	decf	ringbuf_put_num@digits& (0+255),f,b
  5929  0078' 0100               	movlb	0	; () banked
  5930  007A' 2900'              	incf	ringbuf_put_num@digits& (0+255),w,b
  5931  007C' B4D8               	btfsc	status,2,c
  5932  007E' 0012               	return	
  5933  0080' D7C0               	goto	l774
  5934  0082'                    __end_of_ringbuf_put_num:
  5935                           	opt stack 0
  5936                           tblptru	equ	0xFF8
  5937                           tblptrh	equ	0xFF7
  5938                           tblptrl	equ	0xFF6
  5939                           tablat	equ	0xFF5
  5940                           prodh	equ	0xFF4
  5941                           prodl	equ	0xFF3
  5942                           intcon	equ	0xFF2
  5943                           indf0	equ	0xFEF
  5944                           postinc0	equ	0xFEE
  5945                           fsr0h	equ	0xFEA
  5946                           fsr0l	equ	0xFE9
  5947                           wreg	equ	0xFE8
  5948                           postdec1	equ	0xFE5
  5949                           fsr1h	equ	0xFE2
  5950                           fsr1l	equ	0xFE1
  5951                           indf2	equ	0xFDF
  5952                           postinc2	equ	0xFDE
  5953                           postdec2	equ	0xFDD
  5954                           fsr2h	equ	0xFDA
  5955                           fsr2l	equ	0xFD9
  5956                           status	equ	0xFD8
  5957                           
  5958 ;; *************** function _ringbuf_put *****************
  5959 ;; Defined at:
  5960 ;;		line 20 in file "../My_library/My_ringbuf.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5963 ;;		 -> usb_rx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
  5964 ;;		 -> lcd_tx(8), 
  5965 ;;  data            1   10[BANK0 ] unsigned char 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;		None
  5968 ;; Return value:  Size  Location     Type
  5969 ;;		None               void
  5970 ;; Registers used:
  5971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5977 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;Total ram usage:        7 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    5
  5984 ;; This function calls:
  5985 ;;		_ringbuf_num
  5986 ;; This function is called by:
  5987 ;;		_ringbuf_put_num
  5988 ;;		_ringbuf_put_str
  5989 ;;		_terminal_task
  5990 ;;		_ST7032_command
  5991 ;;		_ST7032_put
  5992 ;;		_ST7032_create_char
  5993 ;;		_ST7032_init
  5994 ;;		_USB_CDC_task
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text13
  5999  0000'                    __ptext13:
  6000                           	opt stack 0
  6001  0000'                    _ringbuf_put:
  6002                           	opt stack 20
  6003                           
  6004                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;incstack = 0
  6008  0000' C008' F000'        	movff	ringbuf_put@rb,ringbuf_num@rb
  6009  0004' C009' F001'        	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  6010  0008' EC00' F000'        	call	_ringbuf_num	;wreg free
  6011  000C' 0100               	movlb	0	; () banked
  6012  000E' EE20 F002          	lfsr	2,2
  6013  0012' 5100'              	movf	ringbuf_put@rb& (0+255),w,b
  6014  0014' 26D9               	addwf	fsr2l,f,c
  6015  0016' 5100'              	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6016  0018' 22DA               	addwfc	fsr2h,f,c
  6017  001A' 50DE               	movf	postinc2,w,c
  6018  001C' 0100               	movlb	0	; () banked
  6019  001E' 5D00'              	subwf	?_ringbuf_num& (0+255),w,b
  6020  0020' 50DE               	movf	postinc2,w,c
  6021  0022' 0100               	movlb	0	; () banked
  6022  0024' 5900'              	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  6023  0026' B0D8               	btfsc	status,0,c
  6024  0028' 0012               	return	
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
  6028  002A' 0100               	movlb	0	; () banked
  6029  002C' EE20 F004          	lfsr	2,4
  6030  0030' 5100'              	movf	ringbuf_put@rb& (0+255),w,b
  6031  0032' 26D9               	addwf	fsr2l,f,c
  6032  0034' 5100'              	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6033  0036' 22DA               	addwfc	fsr2h,f,c
  6034  0038' CFDE F00B'         	movff	postinc2,??_ringbuf_put
  6035  003C' CFDD F00C'         	movff	postdec2,??_ringbuf_put+1
  6036  0040' C008' FFD9         	movff	ringbuf_put@rb,fsr2l
  6037  0044' C009' FFDA         	movff	ringbuf_put@rb+1,fsr2h
  6038  0048' CFDE F00D'         	movff	postinc2,??_ringbuf_put+2
  6039  004C' CFDD F00E'         	movff	postdec2,??_ringbuf_put+3
  6040  0050' 0100               	movlb	0	; () banked
  6041  0052' 5100'              	movf	??_ringbuf_put& (0+255),w,b
  6042  0054' 0100               	movlb	0	; () banked
  6043  0056' 2500'              	addwf	(??_ringbuf_put+2)& (0+255),w,b
  6044  0058' 6ED9               	movwf	fsr2l,c
  6045  005A' 0100               	movlb	0	; () banked
  6046  005C' 5100'              	movf	(??_ringbuf_put+1)& (0+255),w,b
  6047  005E' 0100               	movlb	0	; () banked
  6048  0060' 2100'              	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  6049  0062' 6EDA               	movwf	fsr2h,c
  6050  0064' C00A' FFDF         	movff	ringbuf_put@data,indf2
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  6054  0068' 0100               	movlb	0	; () banked
  6055  006A' EE20 F002          	lfsr	2,2
  6056  006E' 5100'              	movf	ringbuf_put@rb& (0+255),w,b
  6057  0070' 26D9               	addwf	fsr2l,f,c
  6058  0072' 5100'              	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6059  0074' 22DA               	addwfc	fsr2h,f,c
  6060  0076' 0100               	movlb	0	; () banked
  6061  0078' EE10 F004          	lfsr	1,4
  6062  007C' 5100'              	movf	ringbuf_put@rb& (0+255),w,b
  6063  007E' 26E1               	addwf	fsr1l,f,c
  6064  0080' 5100'              	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6065  0082' 22E2               	addwfc	fsr1h,f,c
  6066  0084' CFE6 F00D'         	movff	postinc1,??_ringbuf_put+2
  6067  0088' CFE5 F00E'         	movff	postdec1,??_ringbuf_put+3
  6068  008C' 0E01               	movlw	1
  6069  008E' 0100               	movlb	0	; () banked
  6070  0090' 2700'              	addwf	(??_ringbuf_put+2)& (0+255),f,b
  6071  0092' 0E00               	movlw	0
  6072  0094' 2300'              	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  6073  0096' 50DE               	movf	postinc2,w,c
  6074  0098' 0100               	movlb	0	; () banked
  6075  009A' 5D00'              	subwf	(??_ringbuf_put+2)& (0+255),w,b
  6076  009C' 50DE               	movf	postinc2,w,c
  6077  009E' 0100               	movlb	0	; () banked
  6078  00A0' 5900'              	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  6079  00A2' B0D8               	btfsc	status,0,c
  6080  00A4' D00B               	goto	l8645
  6081                           
  6082                           ; BSR set to: 0
  6083  00A6' 0100               	movlb	0	; () banked
  6084  00A8' EE20 F004          	lfsr	2,4
  6085  00AC' 5100'              	movf	ringbuf_put@rb& (0+255),w,b
  6086  00AE' 26D9               	addwf	fsr2l,f,c
  6087  00B0' 5100'              	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6088  00B2' 22DA               	addwfc	fsr2h,f,c
  6089  00B4' 2ADE               	incf	postinc2,f,c
  6090  00B6' 0E00               	movlw	0
  6091  00B8' 22DD               	addwfc	postdec2,f,c
  6092  00BA' 0012               	return	
  6093  00BC'                    l8645:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;My_ringbuf.c: 24: else rb->head = 0;
  6097  00BC' 0100               	movlb	0	; () banked
  6098  00BE' EE20 F004          	lfsr	2,4
  6099  00C2' 5100'              	movf	ringbuf_put@rb& (0+255),w,b
  6100  00C4' 26D9               	addwf	fsr2l,f,c
  6101  00C6' 5100'              	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6102  00C8' 22DA               	addwfc	fsr2h,f,c
  6103  00CA' 0E00               	movlw	0
  6104  00CC' 6EDE               	movwf	postinc2,c
  6105  00CE' 0E00               	movlw	0
  6106  00D0' 6EDD               	movwf	postdec2,c
  6107                           
  6108                           ; BSR set to: 0
  6109  00D2' 0012               	return	
  6110  00D4'                    __end_of_ringbuf_put:
  6111                           	opt stack 0
  6112                           tblptru	equ	0xFF8
  6113                           tblptrh	equ	0xFF7
  6114                           tblptrl	equ	0xFF6
  6115                           tablat	equ	0xFF5
  6116                           prodh	equ	0xFF4
  6117                           prodl	equ	0xFF3
  6118                           intcon	equ	0xFF2
  6119                           indf0	equ	0xFEF
  6120                           postinc0	equ	0xFEE
  6121                           fsr0h	equ	0xFEA
  6122                           fsr0l	equ	0xFE9
  6123                           wreg	equ	0xFE8
  6124                           postinc1	equ	0xFE6
  6125                           postdec1	equ	0xFE5
  6126                           fsr1h	equ	0xFE2
  6127                           fsr1l	equ	0xFE1
  6128                           indf2	equ	0xFDF
  6129                           postinc2	equ	0xFDE
  6130                           postdec2	equ	0xFDD
  6131                           fsr2h	equ	0xFDA
  6132                           fsr2l	equ	0xFD9
  6133                           status	equ	0xFD8
  6134                           
  6135 ;; *************** function ___lwmod *****************
  6136 ;; Defined at:
  6137 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  dividend        2   13[BANK0 ] unsigned int 
  6140 ;;  divisor         2   15[BANK0 ] unsigned int 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  counter         1   31[COMRAM] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  2   13[BANK0 ] unsigned int 
  6145 ;; Registers used:
  6146 ;;		wreg, status,2, status,0
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6155 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6156 ;;Total ram usage:        5 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    4
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_ringbuf_put_num
  6163 ;;		_sprintf
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text14
  6168  0000'                    __ptext14:
  6169                           	opt stack 0
  6170  0000'                    ___lwmod:
  6171                           	opt stack 20
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;incstack = 0
  6175  0000' 0100               	movlb	0	; () banked
  6176  0002' 5100'              	movf	___lwmod@divisor& (0+255),w,b
  6177  0004' 0100               	movlb	0	; () banked
  6178  0006' 1100'              	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6179  0008' B4D8               	btfsc	status,2,c
  6180  000A' D023               	goto	l2111
  6181                           
  6182                           ; BSR set to: 0
  6183  000C' 0E01               	movlw	1
  6184  000E' 6E1F'              	movwf	___lwmod@counter,c
  6185  0010' D005               	goto	l8741
  6186  0012'                    l8739:
  6187                           
  6188                           ; BSR set to: 0
  6189  0012' 0100               	movlb	0	; () banked
  6190  0014' 90D8               	bcf	status,0,c
  6191  0016' 3700'              	rlcf	___lwmod@divisor& (0+255),f,b
  6192  0018' 3700'              	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6193  001A' 2A1F'              	incf	___lwmod@counter,f,c
  6194  001C'                    l8741:
  6195                           
  6196                           ; BSR set to: 0
  6197  001C' 0100               	movlb	0	; () banked
  6198  001E' AF00'              	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6199  0020' D7F8               	goto	l8739
  6200  0022'                    l8743:
  6201                           
  6202                           ; BSR set to: 0
  6203  0022' 0100               	movlb	0	; () banked
  6204  0024' 5100'              	movf	___lwmod@divisor& (0+255),w,b
  6205  0026' 0100               	movlb	0	; () banked
  6206  0028' 5D00'              	subwf	___lwmod@dividend& (0+255),w,b
  6207  002A' 0100               	movlb	0	; () banked
  6208  002C' 5100'              	movf	(___lwmod@divisor+1)& (0+255),w,b
  6209  002E' 0100               	movlb	0	; () banked
  6210  0030' 5900'              	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6211  0032' A0D8               	btfss	status,0,c
  6212  0034' D008               	goto	l8747
  6213                           
  6214                           ; BSR set to: 0
  6215  0036' 0100               	movlb	0	; () banked
  6216  0038' 5100'              	movf	___lwmod@divisor& (0+255),w,b
  6217  003A' 0100               	movlb	0	; () banked
  6218  003C' 5F00'              	subwf	___lwmod@dividend& (0+255),f,b
  6219  003E' 0100               	movlb	0	; () banked
  6220  0040' 5100'              	movf	(___lwmod@divisor+1)& (0+255),w,b
  6221  0042' 0100               	movlb	0	; () banked
  6222  0044' 5B00'              	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6223  0046'                    l8747:
  6224                           
  6225                           ; BSR set to: 0
  6226  0046' 0100               	movlb	0	; () banked
  6227  0048' 90D8               	bcf	status,0,c
  6228  004A' 3300'              	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6229  004C' 3300'              	rrcf	___lwmod@divisor& (0+255),f,b
  6230                           
  6231                           ; BSR set to: 0
  6232  004E' 2E1F'              	decfsz	___lwmod@counter,f,c
  6233  0050' D7E8               	goto	l8743
  6234  0052'                    l2111:
  6235                           
  6236                           ; BSR set to: 0
  6237  0052' C00D' F00D'        	movff	___lwmod@dividend,?___lwmod
  6238  0056' C00E' F00E'        	movff	___lwmod@dividend+1,?___lwmod+1
  6239                           
  6240                           ; BSR set to: 0
  6241  005A' 0012               	return		;funcret
  6242  005C'                    __end_of___lwmod:
  6243                           	opt stack 0
  6244                           tblptru	equ	0xFF8
  6245                           tblptrh	equ	0xFF7
  6246                           tblptrl	equ	0xFF6
  6247                           tablat	equ	0xFF5
  6248                           prodh	equ	0xFF4
  6249                           prodl	equ	0xFF3
  6250                           intcon	equ	0xFF2
  6251                           indf0	equ	0xFEF
  6252                           postinc0	equ	0xFEE
  6253                           fsr0h	equ	0xFEA
  6254                           fsr0l	equ	0xFE9
  6255                           wreg	equ	0xFE8
  6256                           postinc1	equ	0xFE6
  6257                           postdec1	equ	0xFE5
  6258                           fsr1h	equ	0xFE2
  6259                           fsr1l	equ	0xFE1
  6260                           indf2	equ	0xFDF
  6261                           postinc2	equ	0xFDE
  6262                           postdec2	equ	0xFDD
  6263                           fsr2h	equ	0xFDA
  6264                           fsr2l	equ	0xFD9
  6265                           status	equ	0xFD8
  6266                           
  6267 ;; *************** function _ringbuf_pop *****************
  6268 ;; Defined at:
  6269 ;;		line 45 in file "../My_library/My_ringbuf.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6272 ;;		 -> usb_tx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
  6273 ;;		 -> lcd_tx(8), 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  ret             1   31[COMRAM] unsigned char 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      unsigned char 
  6278 ;; Registers used:
  6279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6288 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6289 ;;Total ram usage:        7 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    5
  6292 ;; This function calls:
  6293 ;;		_ringbuf_num
  6294 ;; This function is called by:
  6295 ;;		_terminal_task
  6296 ;;		_ST7032_task
  6297 ;;		_USB_CDC_task
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text15
  6302  0000'                    __ptext15:
  6303                           	opt stack 0
  6304  0000'                    _ringbuf_pop:
  6305                           	opt stack 24
  6306                           
  6307                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;incstack = 0
  6311  0000' C008' F000'        	movff	ringbuf_pop@rb,ringbuf_num@rb
  6312  0004' C009' F001'        	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  6313  0008' EC00' F000'        	call	_ringbuf_num	;wreg free
  6314  000C' 0100               	movlb	0	; () banked
  6315  000E' 5100'              	movf	?_ringbuf_num& (0+255),w,b
  6316  0010' 0100               	movlb	0	; () banked
  6317  0012' 1100'              	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6318  0014' B4D8               	btfsc	status,2,c
  6319  0016' D056               	goto	l9255
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  6323  0018' 0100               	movlb	0	; () banked
  6324  001A' EE20 F006          	lfsr	2,6
  6325  001E' 5100'              	movf	ringbuf_pop@rb& (0+255),w,b
  6326  0020' 26D9               	addwf	fsr2l,f,c
  6327  0022' 5100'              	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6328  0024' 22DA               	addwfc	fsr2h,f,c
  6329  0026' CFDE F00A'         	movff	postinc2,??_ringbuf_pop
  6330  002A' CFDD F00B'         	movff	postdec2,??_ringbuf_pop+1
  6331  002E' C008' FFD9         	movff	ringbuf_pop@rb,fsr2l
  6332  0032' C009' FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  6333  0036' CFDE F00C'         	movff	postinc2,??_ringbuf_pop+2
  6334  003A' CFDD F00D'         	movff	postdec2,??_ringbuf_pop+3
  6335  003E' 0100               	movlb	0	; () banked
  6336  0040' 5100'              	movf	??_ringbuf_pop& (0+255),w,b
  6337  0042' 0100               	movlb	0	; () banked
  6338  0044' 2500'              	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  6339  0046' 6ED9               	movwf	fsr2l,c
  6340  0048' 0100               	movlb	0	; () banked
  6341  004A' 5100'              	movf	(??_ringbuf_pop+1)& (0+255),w,b
  6342  004C' 0100               	movlb	0	; () banked
  6343  004E' 2100'              	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  6344  0050' 6EDA               	movwf	fsr2h,c
  6345  0052' 50DF               	movf	indf2,w,c
  6346  0054' 6E1F'              	movwf	ringbuf_pop@ret,c
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  6350  0056' 0100               	movlb	0	; () banked
  6351  0058' EE20 F002          	lfsr	2,2
  6352  005C' 5100'              	movf	ringbuf_pop@rb& (0+255),w,b
  6353  005E' 26D9               	addwf	fsr2l,f,c
  6354  0060' 5100'              	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6355  0062' 22DA               	addwfc	fsr2h,f,c
  6356  0064' 0100               	movlb	0	; () banked
  6357  0066' EE10 F006          	lfsr	1,6
  6358  006A' 5100'              	movf	ringbuf_pop@rb& (0+255),w,b
  6359  006C' 26E1               	addwf	fsr1l,f,c
  6360  006E' 5100'              	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6361  0070' 22E2               	addwfc	fsr1h,f,c
  6362  0072' CFE6 F00C'         	movff	postinc1,??_ringbuf_pop+2
  6363  0076' CFE5 F00D'         	movff	postdec1,??_ringbuf_pop+3
  6364  007A' 0E01               	movlw	1
  6365  007C' 0100               	movlb	0	; () banked
  6366  007E' 2700'              	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  6367  0080' 0E00               	movlw	0
  6368  0082' 2300'              	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  6369  0084' 50DE               	movf	postinc2,w,c
  6370  0086' 0100               	movlb	0	; () banked
  6371  0088' 5D00'              	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  6372  008A' 50DE               	movf	postinc2,w,c
  6373  008C' 0100               	movlb	0	; () banked
  6374  008E' 5900'              	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  6375  0090' B0D8               	btfsc	status,0,c
  6376  0092' D00B               	goto	l9247
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;My_ringbuf.c: 49: rb->tail++;
  6380  0094' 0100               	movlb	0	; () banked
  6381  0096' EE20 F006          	lfsr	2,6
  6382  009A' 5100'              	movf	ringbuf_pop@rb& (0+255),w,b
  6383  009C' 26D9               	addwf	fsr2l,f,c
  6384  009E' 5100'              	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6385  00A0' 22DA               	addwfc	fsr2h,f,c
  6386  00A2' 2ADE               	incf	postinc2,f,c
  6387  00A4' 0E00               	movlw	0
  6388  00A6' 22DD               	addwfc	postdec2,f,c
  6389                           
  6390                           ;My_ringbuf.c: 50: } else {
  6391  00A8' D00B               	goto	l9249
  6392  00AA'                    l9247:
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;My_ringbuf.c: 51: rb->tail = 0;
  6396  00AA' 0100               	movlb	0	; () banked
  6397  00AC' EE20 F006          	lfsr	2,6
  6398  00B0' 5100'              	movf	ringbuf_pop@rb& (0+255),w,b
  6399  00B2' 26D9               	addwf	fsr2l,f,c
  6400  00B4' 5100'              	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6401  00B6' 22DA               	addwfc	fsr2h,f,c
  6402  00B8' 0E00               	movlw	0
  6403  00BA' 6EDE               	movwf	postinc2,c
  6404  00BC' 0E00               	movlw	0
  6405  00BE' 6EDD               	movwf	postdec2,c
  6406  00C0'                    l9249:
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;My_ringbuf.c: 52: }
  6410                           ;My_ringbuf.c: 53: return ret;
  6411  00C0' 501F'              	movf	ringbuf_pop@ret,w,c
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;My_ringbuf.c: 54: } else {
  6415                           
  6416                           ; BSR set to: 0
  6417  00C2' 0012               	return	
  6418  00C4'                    l9255:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;My_ringbuf.c: 55: return 0;
  6422  00C4' 0E00               	movlw	0
  6423                           
  6424                           ; BSR set to: 0
  6425  00C6' 0012               	return	
  6426  00C8'                    __end_of_ringbuf_pop:
  6427                           	opt stack 0
  6428                           tblptru	equ	0xFF8
  6429                           tblptrh	equ	0xFF7
  6430                           tblptrl	equ	0xFF6
  6431                           tablat	equ	0xFF5
  6432                           prodh	equ	0xFF4
  6433                           prodl	equ	0xFF3
  6434                           intcon	equ	0xFF2
  6435                           indf0	equ	0xFEF
  6436                           postinc0	equ	0xFEE
  6437                           fsr0h	equ	0xFEA
  6438                           fsr0l	equ	0xFE9
  6439                           wreg	equ	0xFE8
  6440                           postinc1	equ	0xFE6
  6441                           postdec1	equ	0xFE5
  6442                           fsr1h	equ	0xFE2
  6443                           fsr1l	equ	0xFE1
  6444                           indf2	equ	0xFDF
  6445                           postinc2	equ	0xFDE
  6446                           postdec2	equ	0xFDD
  6447                           fsr2h	equ	0xFDA
  6448                           fsr2l	equ	0xFD9
  6449                           status	equ	0xFD8
  6450                           
  6451 ;; *************** function _ringbuf_delete *****************
  6452 ;; Defined at:
  6453 ;;		line 66 in file "../My_library/My_ringbuf.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6456 ;;		 -> terminal_task@command(8), 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;		None               void
  6461 ;; Registers used:
  6462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6468 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6471 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6472 ;;Total ram usage:        2 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    4
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_terminal_task
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text16
  6483  0000'                    __ptext16:
  6484                           	opt stack 0
  6485  0000'                    _ringbuf_delete:
  6486                           	opt stack 25
  6487                           
  6488                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;incstack = 0
  6492  0000' 0100               	movlb	0	; () banked
  6493  0002' EE20 F006          	lfsr	2,6
  6494  0006' 5100'              	movf	ringbuf_delete@rb& (0+255),w,b
  6495  0008' 26D9               	addwf	fsr2l,f,c
  6496  000A' 5100'              	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6497  000C' 22DA               	addwfc	fsr2h,f,c
  6498  000E' 0100               	movlb	0	; () banked
  6499  0010' EE10 F004          	lfsr	1,4
  6500  0014' 5100'              	movf	ringbuf_delete@rb& (0+255),w,b
  6501  0016' 26E1               	addwf	fsr1l,f,c
  6502  0018' 5100'              	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6503  001A' 22E2               	addwfc	fsr1h,f,c
  6504  001C' CFDE FFE6          	movff	postinc2,postinc1
  6505  0020' CFDD FFE5          	movff	postdec2,postdec1
  6506                           
  6507                           ; BSR set to: 0
  6508  0024' 0012               	return		;funcret
  6509  0026'                    __end_of_ringbuf_delete:
  6510                           	opt stack 0
  6511                           tblptru	equ	0xFF8
  6512                           tblptrh	equ	0xFF7
  6513                           tblptrl	equ	0xFF6
  6514                           tablat	equ	0xFF5
  6515                           prodh	equ	0xFF4
  6516                           prodl	equ	0xFF3
  6517                           intcon	equ	0xFF2
  6518                           indf0	equ	0xFEF
  6519                           postinc0	equ	0xFEE
  6520                           fsr0h	equ	0xFEA
  6521                           fsr0l	equ	0xFE9
  6522                           wreg	equ	0xFE8
  6523                           postinc1	equ	0xFE6
  6524                           postdec1	equ	0xFE5
  6525                           fsr1h	equ	0xFE2
  6526                           fsr1l	equ	0xFE1
  6527                           indf2	equ	0xFDF
  6528                           postinc2	equ	0xFDE
  6529                           postdec2	equ	0xFDD
  6530                           fsr2h	equ	0xFDA
  6531                           fsr2l	equ	0xFD9
  6532                           status	equ	0xFD8
  6533                           
  6534 ;; *************** function _ringbuf_backspace *****************
  6535 ;; Defined at:
  6536 ;;		line 59 in file "../My_library/My_ringbuf.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6539 ;;		 -> terminal_task@command(8), 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;		None
  6542 ;; Return value:  Size  Location     Type
  6543 ;;		None               void
  6544 ;; Registers used:
  6545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6553 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6554 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6555 ;;Total ram usage:        6 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:    5
  6558 ;; This function calls:
  6559 ;;		_ringbuf_num
  6560 ;; This function is called by:
  6561 ;;		_terminal_task
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text17
  6566  0000'                    __ptext17:
  6567                           	opt stack 0
  6568  0000'                    _ringbuf_backspace:
  6569                           	opt stack 24
  6570                           
  6571                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;incstack = 0
  6575  0000' C008' F000'        	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6576  0004' C009' F001'        	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6577  0008' EC00' F000'        	call	_ringbuf_num	;wreg free
  6578  000C' 0100               	movlb	0	; () banked
  6579  000E' 5100'              	movf	?_ringbuf_num& (0+255),w,b
  6580  0010' 0100               	movlb	0	; () banked
  6581  0012' 1100'              	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6582  0014' B4D8               	btfsc	status,2,c
  6583  0016' 0012               	return	
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6587  0018' 0100               	movlb	0	; () banked
  6588  001A' EE20 F004          	lfsr	2,4
  6589  001E' 5100'              	movf	ringbuf_backspace@rb& (0+255),w,b
  6590  0020' 26D9               	addwf	fsr2l,f,c
  6591  0022' 5100'              	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6592  0024' 22DA               	addwfc	fsr2h,f,c
  6593  0026' 50DE               	movf	postinc2,w,c
  6594  0028' 10DE               	iorwf	postinc2,w,c
  6595  002A' B4D8               	btfsc	status,2,c
  6596  002C' D00B               	goto	l9265
  6597                           
  6598                           ; BSR set to: 0
  6599  002E' 0100               	movlb	0	; () banked
  6600  0030' EE20 F004          	lfsr	2,4
  6601  0034' 5100'              	movf	ringbuf_backspace@rb& (0+255),w,b
  6602  0036' 26D9               	addwf	fsr2l,f,c
  6603  0038' 5100'              	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6604  003A' 22DA               	addwfc	fsr2h,f,c
  6605  003C' 06DE               	decf	postinc2,f,c
  6606  003E' 0E00               	movlw	0
  6607  0040' 5ADD               	subwfb	postdec2,f,c
  6608  0042' 0012               	return	
  6609  0044'                    l9265:
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6613  0044' 0EFF               	movlw	255
  6614  0046' 0100               	movlb	0	; () banked
  6615  0048' 6F00'              	movwf	??_ringbuf_backspace& (0+255),b
  6616  004A' 0EFF               	movlw	255
  6617  004C' 0100               	movlb	0	; () banked
  6618  004E' 6F00'              	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6619  0050' 0100               	movlb	0	; () banked
  6620  0052' EE20 F002          	lfsr	2,2
  6621  0056' 5100'              	movf	ringbuf_backspace@rb& (0+255),w,b
  6622  0058' 26D9               	addwf	fsr2l,f,c
  6623  005A' 5100'              	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6624  005C' 22DA               	addwfc	fsr2h,f,c
  6625  005E' CFDE F00C'         	movff	postinc2,??_ringbuf_backspace+2
  6626  0062' CFDD F00D'         	movff	postdec2,??_ringbuf_backspace+3
  6627  0066' 0100               	movlb	0	; () banked
  6628  0068' 5100'              	movf	??_ringbuf_backspace& (0+255),w,b
  6629  006A' 0100               	movlb	0	; () banked
  6630  006C' 2700'              	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6631  006E' 0100               	movlb	0	; () banked
  6632  0070' 5100'              	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6633  0072' 0100               	movlb	0	; () banked
  6634  0074' 2300'              	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6635  0076' 0100               	movlb	0	; () banked
  6636  0078' EE20 F004          	lfsr	2,4
  6637  007C' 5100'              	movf	ringbuf_backspace@rb& (0+255),w,b
  6638  007E' 26D9               	addwf	fsr2l,f,c
  6639  0080' 5100'              	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6640  0082' 22DA               	addwfc	fsr2h,f,c
  6641  0084' C00C' FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6642  0088' C00D' FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6643                           
  6644                           ; BSR set to: 0
  6645  008C' 0012               	return	
  6646  008E'                    __end_of_ringbuf_backspace:
  6647                           	opt stack 0
  6648                           tblptru	equ	0xFF8
  6649                           tblptrh	equ	0xFF7
  6650                           tblptrl	equ	0xFF6
  6651                           tablat	equ	0xFF5
  6652                           prodh	equ	0xFF4
  6653                           prodl	equ	0xFF3
  6654                           intcon	equ	0xFF2
  6655                           indf0	equ	0xFEF
  6656                           postinc0	equ	0xFEE
  6657                           fsr0h	equ	0xFEA
  6658                           fsr0l	equ	0xFE9
  6659                           wreg	equ	0xFE8
  6660                           postinc1	equ	0xFE6
  6661                           postdec1	equ	0xFE5
  6662                           fsr1h	equ	0xFE2
  6663                           fsr1l	equ	0xFE1
  6664                           indf2	equ	0xFDF
  6665                           postinc2	equ	0xFDE
  6666                           postdec2	equ	0xFDD
  6667                           fsr2h	equ	0xFDA
  6668                           fsr2l	equ	0xFD9
  6669                           status	equ	0xFD8
  6670                           
  6671 ;; *************** function _main_init *****************
  6672 ;; Defined at:
  6673 ;;		line 287 in file "PIC18F27J53-killifish_light05.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;		None
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;		None
  6678 ;; Return value:  Size  Location     Type
  6679 ;;		None               void
  6680 ;; Registers used:
  6681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6691 ;;Total ram usage:        0 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:    9
  6694 ;; This function calls:
  6695 ;;		_ADC_init
  6696 ;;		_OSC_init
  6697 ;;		_PWM_init
  6698 ;;		_RTCC_init
  6699 ;;		_UART_init
  6700 ;;		_ringbuf_init
  6701 ;;		_timer0_init
  6702 ;;		_timer1_init
  6703 ;;		_timer3_init
  6704 ;; This function is called by:
  6705 ;;		_main
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text18
  6710  0000'                    __ptext18:
  6711                           	opt stack 0
  6712  0000'                    _main_init:
  6713                           	opt stack 21
  6714                           
  6715                           ;PIC18F27J53-killifish_light05.c: 288: OSC_init();
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;incstack = 0
  6719  0000' EC00' F000'        	call	_OSC_init	;wreg free
  6720                           
  6721                           ;PIC18F27J53-killifish_light05.c: 289: TRISA = 0b11100111;
  6722  0004' 0EE7               	movlw	231
  6723  0006' 6E92               	movwf	3986,c	;volatile
  6724                           
  6725                           ;PIC18F27J53-killifish_light05.c: 290: TRISB = 0b00000000;
  6726  0008' 0E00               	movlw	0
  6727  000A' 6E93               	movwf	3987,c	;volatile
  6728                           
  6729                           ;PIC18F27J53-killifish_light05.c: 291: TRISC = 0b10111010;
  6730  000C' 0EBA               	movlw	186
  6731  000E' 6E94               	movwf	3988,c	;volatile
  6732                           
  6733                           ;PIC18F27J53-killifish_light05.c: 292: ANCON0 = 0b11111000;
  6734  0010' 0EF8               	movlw	248
  6735  0012' 010F               	movlb	15	; () banked
  6736  0014' 6F48               	movwf	72,b	;volatile
  6737                           
  6738                           ; BSR set to: 15
  6739                           ;PIC18F27J53-killifish_light05.c: 293: ANCON1 = 0b00011111;
  6740  0016' 0E1F               	movlw	31
  6741  0018' 010F               	movlb	15	; () banked
  6742  001A' 6F49               	movwf	73,b	;volatile
  6743                           
  6744                           ; BSR set to: 15
  6745                           ;PIC18F27J53-killifish_light05.c: 294: INTCON2bits.RBPU = 0;
  6746  001C' 9EF1               	bcf	intcon2,7,c	;volatile
  6747                           
  6748                           ; BSR set to: 15
  6749                           ;PIC18F27J53-killifish_light05.c: 296: timer0_init(8);
  6750  001E' 0E08               	movlw	8
  6751  0020' EC00' F000'        	call	_timer0_init
  6752                           
  6753                           ;PIC18F27J53-killifish_light05.c: 297: timer1_init(0, 2);
  6754  0024' 0E02               	movlw	2
  6755  0026' 6E1F'              	movwf	timer1_init@clock_select,c
  6756  0028' 0E00               	movlw	0
  6757  002A' EC00' F000'        	call	_timer1_init
  6758                           
  6759                           ;PIC18F27J53-killifish_light05.c: 298: timer3_init(2);
  6760  002E' 0E02               	movlw	2
  6761  0030' EC00' F000'        	call	_timer3_init
  6762                           
  6763                           ;PIC18F27J53-killifish_light05.c: 299: ADC_init(0);
  6764  0034' 0E00               	movlw	0
  6765  0036' EC00' F000'        	call	_ADC_init
  6766                           
  6767                           ;PIC18F27J53-killifish_light05.c: 300: RTCC_init();
  6768  003A' EC00' F000'        	call	_RTCC_init	;wreg free
  6769                           
  6770                           ;PIC18F27J53-killifish_light05.c: 301: PWM_init(250);
  6771  003E' 0EFA               	movlw	250
  6772  0040' EC00' F000'        	call	_PWM_init
  6773                           
  6774                           ;PIC18F27J53-killifish_light05.c: 303: UART_init();
  6775  0044' EC00' F000'        	call	_UART_init	;wreg free
  6776                           
  6777                           ;PIC18F27J53-killifish_light05.c: 304: static uint8_t txbuf[1000];
  6778                           ;PIC18F27J53-killifish_light05.c: 305: ringbuf_init(&uart_tx, txbuf, sizeof (txbuf));
  6779  0048' 0E00'              	movlw	low _uart_tx
  6780  004A' 0100               	movlb	0	; () banked
  6781  004C' 6F00'              	movwf	ringbuf_init@rb& (0+255),b
  6782  004E' 0E00'              	movlw	high _uart_tx
  6783  0050' 0100               	movlb	0	; () banked
  6784  0052' 6F00'              	movwf	(ringbuf_init@rb+1)& (0+255),b
  6785  0054' 0E00'              	movlw	low main_init@txbuf
  6786  0056' 0100               	movlb	0	; () banked
  6787  0058' 6F00'              	movwf	ringbuf_init@internal_buf& (0+255),b
  6788  005A' 0E00'              	movlw	high main_init@txbuf
  6789  005C' 0100               	movlb	0	; () banked
  6790  005E' 6F00'              	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6791  0060' 0E03               	movlw	3
  6792  0062' 0100               	movlb	0	; () banked
  6793  0064' 6F00'              	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6794  0066' 0EE8               	movlw	232
  6795  0068' 6F00'              	movwf	ringbuf_init@bufsize& (0+255),b
  6796  006A' EC00' F000'        	call	_ringbuf_init	;wreg free
  6797                           
  6798                           ;PIC18F27J53-killifish_light05.c: 306: static uint8_t rxbuf[250];
  6799                           ;PIC18F27J53-killifish_light05.c: 307: ringbuf_init(&uart_rx, rxbuf, sizeof (rxbuf));
  6800  006E' 0E00'              	movlw	low _uart_rx
  6801  0070' 0100               	movlb	0	; () banked
  6802  0072' 6F00'              	movwf	ringbuf_init@rb& (0+255),b
  6803  0074' 0E00'              	movlw	high _uart_rx
  6804  0076' 0100               	movlb	0	; () banked
  6805  0078' 6F00'              	movwf	(ringbuf_init@rb+1)& (0+255),b
  6806  007A' 0E00'              	movlw	low main_init@rxbuf
  6807  007C' 0100               	movlb	0	; () banked
  6808  007E' 6F00'              	movwf	ringbuf_init@internal_buf& (0+255),b
  6809  0080' 0E00'              	movlw	high main_init@rxbuf
  6810  0082' 0100               	movlb	0	; () banked
  6811  0084' 6F00'              	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6812  0086' 0E00               	movlw	0
  6813  0088' 0100               	movlb	0	; () banked
  6814  008A' 6F00'              	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6815  008C' 0EFA               	movlw	250
  6816  008E' 6F00'              	movwf	ringbuf_init@bufsize& (0+255),b
  6817  0090' EC00' F000'        	call	_ringbuf_init	;wreg free
  6818  0094' 0012               	return		;funcret
  6819  0096'                    __end_of_main_init:
  6820                           	opt stack 0
  6821                           tblptru	equ	0xFF8
  6822                           tblptrh	equ	0xFF7
  6823                           tblptrl	equ	0xFF6
  6824                           tablat	equ	0xFF5
  6825                           prodh	equ	0xFF4
  6826                           prodl	equ	0xFF3
  6827                           intcon	equ	0xFF2
  6828                           intcon2	equ	0xFF1
  6829                           indf0	equ	0xFEF
  6830                           postinc0	equ	0xFEE
  6831                           fsr0h	equ	0xFEA
  6832                           fsr0l	equ	0xFE9
  6833                           wreg	equ	0xFE8
  6834                           postinc1	equ	0xFE6
  6835                           postdec1	equ	0xFE5
  6836                           fsr1h	equ	0xFE2
  6837                           fsr1l	equ	0xFE1
  6838                           indf2	equ	0xFDF
  6839                           postinc2	equ	0xFDE
  6840                           postdec2	equ	0xFDD
  6841                           fsr2h	equ	0xFDA
  6842                           fsr2l	equ	0xFD9
  6843                           status	equ	0xFD8
  6844                           
  6845 ;; *************** function _timer3_init *****************
  6846 ;; Defined at:
  6847 ;;		line 101 in file "../My_library/My_PIC.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  prescaler       1    wreg     unsigned char 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  prescaler       1    0[BANK0 ] unsigned char 
  6852 ;; Return value:  Size  Location     Type
  6853 ;;		None               void
  6854 ;; Registers used:
  6855 ;;		wreg, status,2, status,0
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6863 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6864 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6865 ;;Total ram usage:        2 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; Hardware stack levels required when called:    4
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_main_init
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text19
  6876  0000'                    __ptext19:
  6877                           	opt stack 0
  6878  0000'                    _timer3_init:
  6879                           	opt stack 25
  6880                           
  6881                           ;incstack = 0
  6882                           ;timer3_init@prescaler stored from wreg
  6883  0000' 0100               	movlb	0	; () banked
  6884  0002' 6F00'              	movwf	timer3_init@prescaler& (0+255),b
  6885                           
  6886                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  6887  0004' 0E3F               	movlw	-193
  6888  0006' 1679               	andwf	3961,f,c	;volatile
  6889                           
  6890                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  6891  0008' 9679               	bcf	3961,3,c	;volatile
  6892                           
  6893                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  6894  000A' C000' F01F'        	movff	timer3_init@prescaler,??_timer3_init
  6895  000E' 3A1F'              	swapf	??_timer3_init,f,c
  6896  0010' 5079               	movf	3961,w,c	;volatile
  6897  0012' 181F'              	xorwf	??_timer3_init,w,c
  6898  0014' 0BCF               	andlw	-49
  6899  0016' 181F'              	xorwf	??_timer3_init,w,c
  6900  0018' 6E79               	movwf	3961,c	;volatile
  6901                           
  6902                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  6903  001A' 9E79               	bcf	3961,7,c	;volatile
  6904                           
  6905                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  6906  001C' 8079               	bsf	3961,0,c	;volatile
  6907                           
  6908                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  6909  001E' 92A2               	bcf	4002,1,c	;volatile
  6910                           
  6911                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  6912  0020' 92A1               	bcf	4001,1,c	;volatile
  6913                           
  6914                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  6915  0022' 82A0               	bsf	4000,1,c	;volatile
  6916                           
  6917                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  6918  0024' 8CF2               	bsf	intcon,6,c	;volatile
  6919  0026' 0012               	return		;funcret
  6920  0028'                    __end_of_timer3_init:
  6921                           	opt stack 0
  6922                           tblptru	equ	0xFF8
  6923                           tblptrh	equ	0xFF7
  6924                           tblptrl	equ	0xFF6
  6925                           tablat	equ	0xFF5
  6926                           prodh	equ	0xFF4
  6927                           prodl	equ	0xFF3
  6928                           intcon	equ	0xFF2
  6929                           intcon2	equ	0xFF1
  6930                           indf0	equ	0xFEF
  6931                           postinc0	equ	0xFEE
  6932                           fsr0h	equ	0xFEA
  6933                           fsr0l	equ	0xFE9
  6934                           wreg	equ	0xFE8
  6935                           postinc1	equ	0xFE6
  6936                           postdec1	equ	0xFE5
  6937                           fsr1h	equ	0xFE2
  6938                           fsr1l	equ	0xFE1
  6939                           indf2	equ	0xFDF
  6940                           postinc2	equ	0xFDE
  6941                           postdec2	equ	0xFDD
  6942                           fsr2h	equ	0xFDA
  6943                           fsr2l	equ	0xFD9
  6944                           status	equ	0xFD8
  6945                           
  6946 ;; *************** function _timer1_init *****************
  6947 ;; Defined at:
  6948 ;;		line 70 in file "../My_library/My_PIC.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  prescaler       1    wreg     unsigned char 
  6951 ;;  clock_select    1   31[COMRAM] unsigned char 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;		None               void
  6956 ;; Registers used:
  6957 ;;		wreg, status,2, status,0
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6963 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6965 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6966 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6967 ;;Total ram usage:        3 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; Hardware stack levels required when called:    4
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_main_init
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text20
  6978  0000'                    __ptext20:
  6979                           	opt stack 0
  6980  0000'                    _timer1_init:
  6981                           	opt stack 25
  6982                           
  6983                           ;incstack = 0
  6984                           ;timer1_init@prescaler stored from wreg
  6985  0000' 0100               	movlb	0	; () banked
  6986  0002' 6F00'              	movwf	timer1_init@prescaler& (0+255),b
  6987                           
  6988                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  6989  0004' C01F' F000'        	movff	timer1_init@clock_select,??_timer1_init
  6990  0008' 0100               	movlb	0	; () banked
  6991  000A' 3B00'              	swapf	??_timer1_init& (0+255),f,b
  6992  000C' 4700'              	rlncf	??_timer1_init& (0+255),f,b
  6993  000E' 4700'              	rlncf	??_timer1_init& (0+255),f,b
  6994  0010' 50CD               	movf	4045,w,c	;volatile
  6995  0012' 0100               	movlb	0	; () banked
  6996  0014' 1900'              	xorwf	??_timer1_init& (0+255),w,b
  6997  0016' 0B3F               	andlw	-193
  6998  0018' 1900'              	xorwf	??_timer1_init& (0+255),w,b
  6999  001A' 6ECD               	movwf	4045,c	;volatile
  7000                           
  7001                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  7002  001C' 0E02               	movlw	2
  7003  001E' 181F'              	xorwf	timer1_init@clock_select,w,c
  7004  0020' A4D8               	btfss	status,2,c
  7005  0022' D002               	goto	l710
  7006                           
  7007                           ; BSR set to: 0
  7008  0024' 86CD               	bsf	4045,3,c	;volatile
  7009  0026' D001               	goto	l9181
  7010  0028'                    l710:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  7014  0028' 96CD               	bcf	4045,3,c	;volatile
  7015  002A'                    l9181:
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  7019  002A' C001' F000'        	movff	timer1_init@prescaler,??_timer1_init
  7020  002E' 0100               	movlb	0	; () banked
  7021  0030' 3B00'              	swapf	??_timer1_init& (0+255),f,b
  7022  0032' 50CD               	movf	4045,w,c	;volatile
  7023  0034' 0100               	movlb	0	; () banked
  7024  0036' 1900'              	xorwf	??_timer1_init& (0+255),w,b
  7025  0038' 0BCF               	andlw	-49
  7026  003A' 1900'              	xorwf	??_timer1_init& (0+255),w,b
  7027  003C' 6ECD               	movwf	4045,c	;volatile
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  7031  003E' 84CD               	bsf	4045,2,c	;volatile
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  7035  0040' 92CD               	bcf	4045,1,c	;volatile
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  7039  0042' 80CD               	bsf	4045,0,c	;volatile
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  7043  0044' 909F               	bcf	3999,0,c	;volatile
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  7047  0046' 909E               	bcf	3998,0,c	;volatile
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  7051  0048' 809D               	bsf	3997,0,c	;volatile
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  7055  004A' 8CF2               	bsf	intcon,6,c	;volatile
  7056                           
  7057                           ; BSR set to: 0
  7058  004C' 0012               	return		;funcret
  7059  004E'                    __end_of_timer1_init:
  7060                           	opt stack 0
  7061                           tblptru	equ	0xFF8
  7062                           tblptrh	equ	0xFF7
  7063                           tblptrl	equ	0xFF6
  7064                           tablat	equ	0xFF5
  7065                           prodh	equ	0xFF4
  7066                           prodl	equ	0xFF3
  7067                           intcon	equ	0xFF2
  7068                           intcon2	equ	0xFF1
  7069                           indf0	equ	0xFEF
  7070                           postinc0	equ	0xFEE
  7071                           fsr0h	equ	0xFEA
  7072                           fsr0l	equ	0xFE9
  7073                           wreg	equ	0xFE8
  7074                           postinc1	equ	0xFE6
  7075                           postdec1	equ	0xFE5
  7076                           fsr1h	equ	0xFE2
  7077                           fsr1l	equ	0xFE1
  7078                           indf2	equ	0xFDF
  7079                           postinc2	equ	0xFDE
  7080                           postdec2	equ	0xFDD
  7081                           fsr2h	equ	0xFDA
  7082                           fsr2l	equ	0xFD9
  7083                           status	equ	0xFD8
  7084                           
  7085 ;; *************** function _timer0_init *****************
  7086 ;; Defined at:
  7087 ;;		line 34 in file "../My_library/My_PIC.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  prescaler       1    wreg     unsigned char 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  prescaler       1    0[BANK0 ] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;		None               void
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7102 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7103 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7104 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;Total ram usage:        2 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    4
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_main_init
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text21
  7116  0000'                    __ptext21:
  7117                           	opt stack 0
  7118  0000'                    _timer0_init:
  7119                           	opt stack 25
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;incstack = 0
  7123                           ;timer0_init@prescaler stored from wreg
  7124  0000' 0100               	movlb	0	; () banked
  7125  0002' 6F00'              	movwf	timer0_init@prescaler& (0+255),b
  7126                           
  7127                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  7128  0004' 8ED5               	bsf	4053,7,c	;volatile
  7129                           
  7130                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  7131  0006' 8CD5               	bsf	4053,6,c	;volatile
  7132                           
  7133                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  7134  0008' 9AD5               	bcf	4053,5,c	;volatile
  7135                           
  7136                           ;My_PIC.c: 38: if (prescaler == 0) {
  7137  000A' 0100               	movlb	0	; () banked
  7138  000C' 5100'              	movf	timer0_init@prescaler& (0+255),w,b
  7139  000E' 0100               	movlb	0	; () banked
  7140  0010' A4D8               	btfss	status,2,c
  7141  0012' D002               	goto	l705
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  7145  0014' 86D5               	bsf	4053,3,c	;volatile
  7146                           
  7147                           ;My_PIC.c: 40: } else {
  7148  0016' D00A               	goto	l9169
  7149  0018'                    l705:
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  7153  0018' 96D5               	bcf	4053,3,c	;volatile
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  7157  001A' C000' F01F'        	movff	timer0_init@prescaler,??_timer0_init
  7158  001E' 0EFF               	movlw	255
  7159  0020' 261F'              	addwf	??_timer0_init,f,c
  7160  0022' 50D5               	movf	4053,w,c	;volatile
  7161  0024' 181F'              	xorwf	??_timer0_init,w,c
  7162  0026' 0BF8               	andlw	-8
  7163  0028' 181F'              	xorwf	??_timer0_init,w,c
  7164  002A' 6ED5               	movwf	4053,c	;volatile
  7165  002C'                    l9169:
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;My_PIC.c: 43: }
  7169                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  7170  002C' 8AF2               	bsf	intcon,5,c	;volatile
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  7174  002E' 94F2               	bcf	intcon,2,c	;volatile
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  7178  0030' 94F1               	bcf	intcon2,2,c	;volatile
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  7182  0032' 8CF2               	bsf	intcon,6,c	;volatile
  7183                           
  7184                           ; BSR set to: 0
  7185  0034' 0012               	return		;funcret
  7186  0036'                    __end_of_timer0_init:
  7187                           	opt stack 0
  7188                           tblptru	equ	0xFF8
  7189                           tblptrh	equ	0xFF7
  7190                           tblptrl	equ	0xFF6
  7191                           tablat	equ	0xFF5
  7192                           prodh	equ	0xFF4
  7193                           prodl	equ	0xFF3
  7194                           intcon	equ	0xFF2
  7195                           intcon2	equ	0xFF1
  7196                           indf0	equ	0xFEF
  7197                           postinc0	equ	0xFEE
  7198                           fsr0h	equ	0xFEA
  7199                           fsr0l	equ	0xFE9
  7200                           wreg	equ	0xFE8
  7201                           postinc1	equ	0xFE6
  7202                           postdec1	equ	0xFE5
  7203                           fsr1h	equ	0xFE2
  7204                           fsr1l	equ	0xFE1
  7205                           indf2	equ	0xFDF
  7206                           postinc2	equ	0xFDE
  7207                           postdec2	equ	0xFDD
  7208                           fsr2h	equ	0xFDA
  7209                           fsr2l	equ	0xFD9
  7210                           status	equ	0xFD8
  7211                           
  7212 ;; *************** function _ringbuf_init *****************
  7213 ;; Defined at:
  7214 ;;		line 5 in file "../My_library/My_ringbuf.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7217 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
  7218 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  7219 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7220 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), USB_CDC_buffer_init@txbuf(1500), USB_CDC_buffer_init@rxbuf(250), 
  7221 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
  7222 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;		None
  7225 ;; Return value:  Size  Location     Type
  7226 ;;		None               void
  7227 ;; Registers used:
  7228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7234 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7237 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7238 ;;Total ram usage:        6 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:    4
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_terminal_task
  7245 ;;		_main_init
  7246 ;;		_ST7032_init
  7247 ;;		_USB_CDC_buffer_init
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text22
  7252  0000'                    __ptext22:
  7253                           	opt stack 0
  7254  0000'                    _ringbuf_init:
  7255                           	opt stack 25
  7256                           
  7257                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;incstack = 0
  7261  0000' C000' FFD9         	movff	ringbuf_init@rb,fsr2l
  7262  0004' C001' FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7263  0008' C002' FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7264  000C' C003' FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7265                           
  7266                           ;My_ringbuf.c: 7: rb->size = bufsize;
  7267  0010' 0100               	movlb	0	; () banked
  7268  0012' EE20 F002          	lfsr	2,2
  7269  0016' 5100'              	movf	ringbuf_init@rb& (0+255),w,b
  7270  0018' 26D9               	addwf	fsr2l,f,c
  7271  001A' 5100'              	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7272  001C' 22DA               	addwfc	fsr2h,f,c
  7273  001E' C004' FFDE         	movff	ringbuf_init@bufsize,postinc2
  7274  0022' C005' FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;My_ringbuf.c: 8: rb->head = 0;
  7278  0026' 0100               	movlb	0	; () banked
  7279  0028' EE20 F004          	lfsr	2,4
  7280  002C' 5100'              	movf	ringbuf_init@rb& (0+255),w,b
  7281  002E' 26D9               	addwf	fsr2l,f,c
  7282  0030' 5100'              	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7283  0032' 22DA               	addwfc	fsr2h,f,c
  7284  0034' 0E00               	movlw	0
  7285  0036' 6EDE               	movwf	postinc2,c
  7286  0038' 0E00               	movlw	0
  7287  003A' 6EDD               	movwf	postdec2,c
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;My_ringbuf.c: 9: rb->tail = 0;
  7291  003C' 0100               	movlb	0	; () banked
  7292  003E' EE20 F006          	lfsr	2,6
  7293  0042' 5100'              	movf	ringbuf_init@rb& (0+255),w,b
  7294  0044' 26D9               	addwf	fsr2l,f,c
  7295  0046' 5100'              	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7296  0048' 22DA               	addwfc	fsr2h,f,c
  7297  004A' 0E00               	movlw	0
  7298  004C' 6EDE               	movwf	postinc2,c
  7299  004E' 0E00               	movlw	0
  7300  0050' 6EDD               	movwf	postdec2,c
  7301                           
  7302                           ; BSR set to: 0
  7303  0052' 0012               	return		;funcret
  7304  0054'                    __end_of_ringbuf_init:
  7305                           	opt stack 0
  7306                           tblptru	equ	0xFF8
  7307                           tblptrh	equ	0xFF7
  7308                           tblptrl	equ	0xFF6
  7309                           tablat	equ	0xFF5
  7310                           prodh	equ	0xFF4
  7311                           prodl	equ	0xFF3
  7312                           intcon	equ	0xFF2
  7313                           intcon2	equ	0xFF1
  7314                           indf0	equ	0xFEF
  7315                           postinc0	equ	0xFEE
  7316                           fsr0h	equ	0xFEA
  7317                           fsr0l	equ	0xFE9
  7318                           wreg	equ	0xFE8
  7319                           postinc1	equ	0xFE6
  7320                           postdec1	equ	0xFE5
  7321                           fsr1h	equ	0xFE2
  7322                           fsr1l	equ	0xFE1
  7323                           indf2	equ	0xFDF
  7324                           postinc2	equ	0xFDE
  7325                           postdec2	equ	0xFDD
  7326                           fsr2h	equ	0xFDA
  7327                           fsr2l	equ	0xFD9
  7328                           status	equ	0xFD8
  7329                           
  7330 ;; *************** function _UART_init *****************
  7331 ;; Defined at:
  7332 ;;		line 10 in file "../My_library/My_UART.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;		None
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;		None
  7337 ;; Return value:  Size  Location     Type
  7338 ;;		None               void
  7339 ;; Registers used:
  7340 ;;		wreg, status,2
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7350 ;;Total ram usage:        0 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    4
  7353 ;; This function calls:
  7354 ;;		Nothing
  7355 ;; This function is called by:
  7356 ;;		_main_init
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text23
  7361  0000'                    __ptext23:
  7362                           	opt stack 0
  7363  0000'                    _UART_init:
  7364                           	opt stack 25
  7365                           
  7366                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;incstack = 0
  7370  0000' 9CAD               	bcf	4013,6,c	;volatile
  7371                           
  7372                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  7373  0002' 8AAD               	bsf	4013,5,c	;volatile
  7374                           
  7375                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  7376  0004' 98AD               	bcf	4013,4,c	;volatile
  7377                           
  7378                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  7379  0006' 94AD               	bcf	4013,2,c	;volatile
  7380                           
  7381                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  7382  0008' 8EAC               	bsf	4012,7,c	;volatile
  7383                           
  7384                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  7385  000A' 9CAC               	bcf	4012,6,c	;volatile
  7386                           
  7387                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  7388  000C' 88AC               	bsf	4012,4,c	;volatile
  7389                           
  7390                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  7391  000E' 867E               	bsf	3966,3,c	;volatile
  7392                           
  7393                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  7394  0010' 0E19               	movlw	25
  7395  0012' 6EB0               	movwf	4016,c	;volatile
  7396                           
  7397                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  7398  0014' 0E00               	movlw	0
  7399  0016' 6E7F               	movwf	3967,c	;volatile
  7400                           
  7401                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  7402  0018' 9A9F               	bcf	3999,5,c	;volatile
  7403                           
  7404                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  7405  001A' 989F               	bcf	3999,4,c	;volatile
  7406                           
  7407                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  7408  001C' 8A9D               	bsf	3997,5,c	;volatile
  7409                           
  7410                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  7411  001E' 8CF2               	bsf	intcon,6,c	;volatile
  7412  0020' 0012               	return		;funcret
  7413  0022'                    __end_of_UART_init:
  7414                           	opt stack 0
  7415                           tblptru	equ	0xFF8
  7416                           tblptrh	equ	0xFF7
  7417                           tblptrl	equ	0xFF6
  7418                           tablat	equ	0xFF5
  7419                           prodh	equ	0xFF4
  7420                           prodl	equ	0xFF3
  7421                           intcon	equ	0xFF2
  7422                           intcon2	equ	0xFF1
  7423                           indf0	equ	0xFEF
  7424                           postinc0	equ	0xFEE
  7425                           fsr0h	equ	0xFEA
  7426                           fsr0l	equ	0xFE9
  7427                           wreg	equ	0xFE8
  7428                           postinc1	equ	0xFE6
  7429                           postdec1	equ	0xFE5
  7430                           fsr1h	equ	0xFE2
  7431                           fsr1l	equ	0xFE1
  7432                           indf2	equ	0xFDF
  7433                           postinc2	equ	0xFDE
  7434                           postdec2	equ	0xFDD
  7435                           fsr2h	equ	0xFDA
  7436                           fsr2l	equ	0xFD9
  7437                           status	equ	0xFD8
  7438                           
  7439 ;; *************** function _RTCC_init *****************
  7440 ;; Defined at:
  7441 ;;		line 22 in file "../My_library/My_RTCC.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;		None
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;		None
  7446 ;; Return value:  Size  Location     Type
  7447 ;;		None               void
  7448 ;; Registers used:
  7449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7459 ;;Total ram usage:        0 bytes
  7460 ;; Hardware stack levels used:    1
  7461 ;; Hardware stack levels required when called:    8
  7462 ;; This function calls:
  7463 ;;		_RTCC_from_RTCC
  7464 ;;		_RTCC_from_epoch
  7465 ;; This function is called by:
  7466 ;;		_main_init
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text24
  7471  0000'                    __ptext24:
  7472                           	opt stack 0
  7473  0000'                    _RTCC_init:
  7474                           	opt stack 21
  7475                           
  7476                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7477                           
  7478                           ;incstack = 0
  7479  0000' 010F               	movlb	15	; () banked
  7480  0002' 8B3F               	bsf	63,5,b	;volatile
  7481                           
  7482                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7483  0004' 010F               	movlb	15	; () banked
  7484  0006' BB3F               	btfsc	63,5,b	;volatile
  7485  0008' D006               	goto	l9275
  7486                           
  7487                           ; BSR set to: 15
  7488                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7489  000A' 0E55               	movlw	85
  7490  000C' 6EA7               	movwf	4007,c	;volatile
  7491                           
  7492                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7493  000E' 0EAA               	movlw	170
  7494  0010' 6EA7               	movwf	4007,c	;volatile
  7495                           
  7496                           ; BSR set to: 15
  7497                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7498  0012' 010F               	movlb	15	; () banked
  7499  0014' 8B3F               	bsf	63,5,b	;volatile
  7500  0016'                    l9275:
  7501                           
  7502                           ; BSR set to: 15
  7503                           ;My_RTCC.c: 28: }
  7504                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7505  0016' 010F               	movlb	15	; () banked
  7506  0018' 8F3F               	bsf	63,7,b	;volatile
  7507                           
  7508                           ; BSR set to: 15
  7509                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7510  001A' 010F               	movlb	15	; () banked
  7511  001C' 953F               	bcf	63,2,b	;volatile
  7512                           
  7513                           ; BSR set to: 15
  7514                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7515  001E' 010F               	movlb	15	; () banked
  7516  0020' 833C               	bsf	60,1,b	;volatile
  7517                           
  7518                           ; BSR set to: 15
  7519                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7520  0022' 010F               	movlb	15	; () banked
  7521  0024' 853C               	bsf	60,2,b	;volatile
  7522                           
  7523                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7524  0026' 0E00               	movlw	0
  7525  0028' 010F               	movlb	15	; () banked
  7526  002A' 6F3E               	movwf	62,b	;volatile
  7527                           
  7528                           ; BSR set to: 15
  7529                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7530  002C' 86CD               	bsf	4045,3,c	;volatile
  7531                           
  7532                           ; BSR set to: 15
  7533                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
  7534  002E' 0E00'              	movlw	low _now
  7535  0030' 0100               	movlb	0	; () banked
  7536  0032' 6F00'              	movwf	RTCC_from_RTCC@tm& (0+255),b
  7537  0034' 0E00'              	movlw	high _now
  7538  0036' 0100               	movlb	0	; () banked
  7539  0038' 6F00'              	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7540  003A' EC00' F000'        	call	_RTCC_from_RTCC	;wreg free
  7541                           
  7542                           ;My_RTCC.c: 37: if (now.DD == 0) {
  7543  003E' 0101               	movlb	1	; () banked
  7544  0040' 5100'              	movf	(_now+8)& (0+255),w,b
  7545  0042' A4D8               	btfss	status,2,c
  7546  0044' 0012               	return	
  7547                           
  7548                           ; BSR set to: 1
  7549                           ;My_RTCC.c: 38: now.epoch = 0;
  7550  0046' 0E00               	movlw	0
  7551  0048' 0101               	movlb	1	; () banked
  7552  004A' 6F00'              	movwf	_now& (0+255),b
  7553  004C' 0E00               	movlw	0
  7554  004E' 6F00'              	movwf	(_now+1)& (0+255),b
  7555  0050' 0E00               	movlw	0
  7556  0052' 6F00'              	movwf	(_now+2)& (0+255),b
  7557  0054' 0E00               	movlw	0
  7558  0056' 6F00'              	movwf	(_now+3)& (0+255),b
  7559                           
  7560                           ; BSR set to: 1
  7561                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
  7562  0058' 0E00'              	movlw	low _now
  7563  005A' 0100               	movlb	0	; () banked
  7564  005C' 6F00'              	movwf	RTCC_from_epoch@tm& (0+255),b
  7565  005E' 0E00'              	movlw	high _now
  7566  0060' 0100               	movlb	0	; () banked
  7567  0062' 6F00'              	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7568  0064' EC00' F000'        	call	_RTCC_from_epoch	;wreg free
  7569  0068' 0012               	return	
  7570  006A'                    __end_of_RTCC_init:
  7571                           	opt stack 0
  7572                           tblptru	equ	0xFF8
  7573                           tblptrh	equ	0xFF7
  7574                           tblptrl	equ	0xFF6
  7575                           tablat	equ	0xFF5
  7576                           prodh	equ	0xFF4
  7577                           prodl	equ	0xFF3
  7578                           intcon	equ	0xFF2
  7579                           intcon2	equ	0xFF1
  7580                           indf0	equ	0xFEF
  7581                           postinc0	equ	0xFEE
  7582                           fsr0h	equ	0xFEA
  7583                           fsr0l	equ	0xFE9
  7584                           wreg	equ	0xFE8
  7585                           postinc1	equ	0xFE6
  7586                           postdec1	equ	0xFE5
  7587                           fsr1h	equ	0xFE2
  7588                           fsr1l	equ	0xFE1
  7589                           indf2	equ	0xFDF
  7590                           postinc2	equ	0xFDE
  7591                           postdec2	equ	0xFDD
  7592                           fsr2h	equ	0xFDA
  7593                           fsr2l	equ	0xFD9
  7594                           status	equ	0xFD8
  7595                           
  7596 ;; *************** function _RTCC_from_epoch *****************
  7597 ;; Defined at:
  7598 ;;		line 210 in file "../My_library/My_RTCC.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  tm              2   47[BANK0 ] PTR struct .
  7601 ;;		 -> now(14), 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;		None
  7604 ;; Return value:  Size  Location     Type
  7605 ;;		None               void
  7606 ;; Registers used:
  7607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7617 ;;Total ram usage:        2 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; Hardware stack levels required when called:    7
  7620 ;; This function calls:
  7621 ;;		_caltime_to_RTCC
  7622 ;;		_epoch_to_caltime
  7623 ;; This function is called by:
  7624 ;;		_RTCC_init
  7625 ;;		_main
  7626 ;;		_RTCC_adjust_time_inc
  7627 ;;		_RTCC_adjust_time_dec
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text25
  7632  0000'                    __ptext25:
  7633                           	opt stack 0
  7634  0000'                    _RTCC_from_epoch:
  7635                           	opt stack 21
  7636                           
  7637                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
  7638                           
  7639                           ;incstack = 0
  7640  0000' C02F' F021'        	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  7641  0004' C030' F022'        	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  7642  0008' EC00' F000'        	call	_epoch_to_caltime	;wreg free
  7643                           
  7644                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
  7645  000C' C02F' F016'        	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  7646  0010' C030' F017'        	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  7647  0014' EC00' F000'        	call	_caltime_to_RTCC	;wreg free
  7648  0018' 0012               	return		;funcret
  7649  001A'                    __end_of_RTCC_from_epoch:
  7650                           	opt stack 0
  7651                           tblptru	equ	0xFF8
  7652                           tblptrh	equ	0xFF7
  7653                           tblptrl	equ	0xFF6
  7654                           tablat	equ	0xFF5
  7655                           prodh	equ	0xFF4
  7656                           prodl	equ	0xFF3
  7657                           intcon	equ	0xFF2
  7658                           intcon2	equ	0xFF1
  7659                           indf0	equ	0xFEF
  7660                           postinc0	equ	0xFEE
  7661                           fsr0h	equ	0xFEA
  7662                           fsr0l	equ	0xFE9
  7663                           wreg	equ	0xFE8
  7664                           postinc1	equ	0xFE6
  7665                           postdec1	equ	0xFE5
  7666                           fsr1h	equ	0xFE2
  7667                           fsr1l	equ	0xFE1
  7668                           indf2	equ	0xFDF
  7669                           postinc2	equ	0xFDE
  7670                           postdec2	equ	0xFDD
  7671                           fsr2h	equ	0xFDA
  7672                           fsr2l	equ	0xFD9
  7673                           status	equ	0xFD8
  7674                           
  7675 ;; *************** function _epoch_to_caltime *****************
  7676 ;; Defined at:
  7677 ;;		line 125 in file "../My_library/My_RTCC.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;  tm              2   33[BANK0 ] PTR struct .
  7680 ;;		 -> now(14), 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  num             4   43[BANK0 ] unsigned long 
  7683 ;;  day             2   39[BANK0 ] unsigned int 
  7684 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  7685 ;;  month           1   42[BANK0 ] unsigned char 
  7686 ;;  year            1   41[BANK0 ] unsigned char 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;		None               void
  7689 ;; Registers used:
  7690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7696 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7697 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7699 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7700 ;;Total ram usage:       14 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    6
  7703 ;; This function calls:
  7704 ;;		_get_quot_rem
  7705 ;;		_month_length
  7706 ;; This function is called by:
  7707 ;;		_RTCC_from_caltime
  7708 ;;		_RTCC_from_epoch
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text26
  7713  0000'                    __ptext26:
  7714                           	opt stack 0
  7715  0000'                    _epoch_to_caltime:
  7716                           	opt stack 19
  7717                           
  7718                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
  7719                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
  7720                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
  7721                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
  7722                           ;My_RTCC.c: 132: uint16_t day;
  7723                           ;My_RTCC.c: 133: uint8_t year = 0;
  7724                           
  7725                           ;incstack = 0
  7726  0000' 0E00               	movlw	0
  7727  0002' 0100               	movlb	0	; () banked
  7728  0004' 6F00'              	movwf	epoch_to_caltime@year& (0+255),b
  7729                           
  7730                           ;My_RTCC.c: 134: uint8_t month = 1;
  7731  0006' 0E01               	movlw	1
  7732  0008' 0100               	movlb	0	; () banked
  7733  000A' 6F00'              	movwf	epoch_to_caltime@month& (0+255),b
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;My_RTCC.c: 135: epoch_t num;
  7737                           ;My_RTCC.c: 137: num = tm->epoch;
  7738  000C' C021' FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7739  0010' C022' FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7740  0014' CFDE F02B'         	movff	postinc2,epoch_to_caltime@num
  7741  0018' CFDE F02C'         	movff	postinc2,epoch_to_caltime@num+1
  7742  001C' CFDE F02D'         	movff	postinc2,epoch_to_caltime@num+2
  7743  0020' CFDE F02E'         	movff	postinc2,epoch_to_caltime@num+3
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
  7747  0024' 0E00'              	movlw	low epoch_to_caltime@num
  7748  0026' 0100               	movlb	0	; () banked
  7749  0028' 6F00'              	movwf	get_quot_rem@quot& (0+255),b
  7750  002A' 0E00'              	movlw	high epoch_to_caltime@num
  7751  002C' 0100               	movlb	0	; () banked
  7752  002E' 6F00'              	movwf	(get_quot_rem@quot+1)& (0+255),b
  7753  0030' 0E3C               	movlw	60
  7754  0032' 0100               	movlb	0	; () banked
  7755  0034' 6F00'              	movwf	get_quot_rem@div& (0+255),b
  7756  0036' EC00' F000'        	call	_get_quot_rem	;wreg free
  7757  003A' 0100               	movlb	0	; () banked
  7758  003C' EE20 F004          	lfsr	2,4
  7759  0040' 5100'              	movf	epoch_to_caltime@tm& (0+255),w,b
  7760  0042' 26D9               	addwf	fsr2l,f,c
  7761  0044' 5100'              	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7762  0046' 22DA               	addwfc	fsr2h,f,c
  7763  0048' 0100               	movlb	0	; () banked
  7764  004A' C019' FFDF         	movff	?_get_quot_rem,indf2
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
  7768  004E' 0E00'              	movlw	low epoch_to_caltime@num
  7769  0050' 0100               	movlb	0	; () banked
  7770  0052' 6F00'              	movwf	get_quot_rem@quot& (0+255),b
  7771  0054' 0E00'              	movlw	high epoch_to_caltime@num
  7772  0056' 0100               	movlb	0	; () banked
  7773  0058' 6F00'              	movwf	(get_quot_rem@quot+1)& (0+255),b
  7774  005A' 0E3C               	movlw	60
  7775  005C' 0100               	movlb	0	; () banked
  7776  005E' 6F00'              	movwf	get_quot_rem@div& (0+255),b
  7777  0060' EC00' F000'        	call	_get_quot_rem	;wreg free
  7778  0064' 0100               	movlb	0	; () banked
  7779  0066' EE20 F005          	lfsr	2,5
  7780  006A' 5100'              	movf	epoch_to_caltime@tm& (0+255),w,b
  7781  006C' 26D9               	addwf	fsr2l,f,c
  7782  006E' 5100'              	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7783  0070' 22DA               	addwfc	fsr2h,f,c
  7784  0072' 0100               	movlb	0	; () banked
  7785  0074' C019' FFDF         	movff	?_get_quot_rem,indf2
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
  7789  0078' 0E00'              	movlw	low epoch_to_caltime@num
  7790  007A' 0100               	movlb	0	; () banked
  7791  007C' 6F00'              	movwf	get_quot_rem@quot& (0+255),b
  7792  007E' 0E00'              	movlw	high epoch_to_caltime@num
  7793  0080' 0100               	movlb	0	; () banked
  7794  0082' 6F00'              	movwf	(get_quot_rem@quot+1)& (0+255),b
  7795  0084' 0E18               	movlw	24
  7796  0086' 0100               	movlb	0	; () banked
  7797  0088' 6F00'              	movwf	get_quot_rem@div& (0+255),b
  7798  008A' EC00' F000'        	call	_get_quot_rem	;wreg free
  7799  008E' 0100               	movlb	0	; () banked
  7800  0090' EE20 F006          	lfsr	2,6
  7801  0094' 5100'              	movf	epoch_to_caltime@tm& (0+255),w,b
  7802  0096' 26D9               	addwf	fsr2l,f,c
  7803  0098' 5100'              	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7804  009A' 22DA               	addwfc	fsr2h,f,c
  7805  009C' 0100               	movlb	0	; () banked
  7806  009E' C019' FFDF         	movff	?_get_quot_rem,indf2
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;My_RTCC.c: 141: day = num;
  7810  00A2' C02B' F027'        	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7811  00A6' C02C' F028'        	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;My_RTCC.c: 142: day_since_epoch = day;
  7815  00AA' C027' F025'        	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7816  00AE' C028' F026'        	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;My_RTCC.c: 144: num += 6;
  7820  00B2' 0E06               	movlw	6
  7821  00B4' 0100               	movlb	0	; () banked
  7822  00B6' 2700'              	addwf	epoch_to_caltime@num& (0+255),f,b
  7823  00B8' 0E00               	movlw	0
  7824  00BA' 2300'              	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7825  00BC' 2300'              	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7826  00BE' 2300'              	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7827                           
  7828                           ; BSR set to: 0
  7829                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
  7830  00C0' 0E00'              	movlw	low epoch_to_caltime@num
  7831  00C2' 0100               	movlb	0	; () banked
  7832  00C4' 6F00'              	movwf	get_quot_rem@quot& (0+255),b
  7833  00C6' 0E00'              	movlw	high epoch_to_caltime@num
  7834  00C8' 0100               	movlb	0	; () banked
  7835  00CA' 6F00'              	movwf	(get_quot_rem@quot+1)& (0+255),b
  7836  00CC' 0E07               	movlw	7
  7837  00CE' 0100               	movlb	0	; () banked
  7838  00D0' 6F00'              	movwf	get_quot_rem@div& (0+255),b
  7839  00D2' EC00' F000'        	call	_get_quot_rem	;wreg free
  7840  00D6' 0100               	movlb	0	; () banked
  7841  00D8' EE20 F007          	lfsr	2,7
  7842  00DC' 5100'              	movf	epoch_to_caltime@tm& (0+255),w,b
  7843  00DE' 26D9               	addwf	fsr2l,f,c
  7844  00E0' 5100'              	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7845  00E2' 22DA               	addwfc	fsr2h,f,c
  7846  00E4' 0100               	movlb	0	; () banked
  7847  00E6' C019' FFDF         	movff	?_get_quot_rem,indf2
  7848                           
  7849                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
  7850  00EA' D03F               	goto	l8831
  7851  00EC'                    l874:
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;My_RTCC.c: 155: LATB2 = 1;
  7855  00EC' 848A               	bsf	3978,2,c	;volatile
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;My_RTCC.c: 156: day = day - month_length(year, month);
  7859  00EE' C02A' F01F'        	movff	epoch_to_caltime@month,month_length@month
  7860  00F2' 0100               	movlb	0	; () banked
  7861  00F4' 5100'              	movf	epoch_to_caltime@year& (0+255),w,b
  7862  00F6' EC00' F000'        	call	_month_length
  7863  00FA' 0100               	movlb	0	; () banked
  7864  00FC' 6F00'              	movwf	??_epoch_to_caltime& (0+255),b
  7865  00FE' 6B00'              	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7866  0100' 0100               	movlb	0	; () banked
  7867  0102' 1F00'              	comf	??_epoch_to_caltime& (0+255),f,b
  7868  0104' 1F00'              	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7869  0106' 4B00'              	infsnz	??_epoch_to_caltime& (0+255),f,b
  7870  0108' 2B00'              	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7871  010A' 0100               	movlb	0	; () banked
  7872  010C' 5100'              	movf	epoch_to_caltime@day& (0+255),w,b
  7873  010E' 0100               	movlb	0	; () banked
  7874  0110' 2500'              	addwf	??_epoch_to_caltime& (0+255),w,b
  7875  0112' 0100               	movlb	0	; () banked
  7876  0114' 6F00'              	movwf	epoch_to_caltime@day& (0+255),b
  7877  0116' 0100               	movlb	0	; () banked
  7878  0118' 5100'              	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7879  011A' 0100               	movlb	0	; () banked
  7880  011C' 2100'              	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7881  011E' 0100               	movlb	0	; () banked
  7882  0120' 6F00'              	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;My_RTCC.c: 157: if (month == 12) {
  7886  0122' 0E0C               	movlw	12
  7887  0124' 0100               	movlb	0	; () banked
  7888  0126' 1900'              	xorwf	epoch_to_caltime@month& (0+255),w,b
  7889  0128' A4D8               	btfss	status,2,c
  7890  012A' D019               	goto	l8825
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;My_RTCC.c: 158: month = 1;
  7894  012C' 0E01               	movlw	1
  7895  012E' 0100               	movlb	0	; () banked
  7896  0130' 6F00'              	movwf	epoch_to_caltime@month& (0+255),b
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;My_RTCC.c: 159: year++;
  7900  0132' 0100               	movlb	0	; () banked
  7901  0134' 2B00'              	incf	epoch_to_caltime@year& (0+255),f,b
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;My_RTCC.c: 161: if (year >= 100) {
  7905  0136' 0E63               	movlw	99
  7906  0138' 0100               	movlb	0	; () banked
  7907  013A' 6500'              	cpfsgt	epoch_to_caltime@year& (0+255),b
  7908  013C' D012               	goto	l8827
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
  7912  013E' C021' FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7913  0142' C022' FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7914  0146' 0E80               	movlw	128
  7915  0148' 5EDE               	subwf	postinc2,f,c
  7916  014A' 0E13               	movlw	19
  7917  014C' 5ADE               	subwfb	postinc2,f,c
  7918  014E' 0E19               	movlw	25
  7919  0150' 5ADE               	subwfb	postinc2,f,c
  7920  0152' 0EBC               	movlw	188
  7921  0154' 5ADE               	subwfb	postinc2,f,c
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;My_RTCC.c: 163: year = 0;
  7925  0156' 0E00               	movlw	0
  7926  0158' 0100               	movlb	0	; () banked
  7927  015A' 6F00'              	movwf	epoch_to_caltime@year& (0+255),b
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;My_RTCC.c: 164: }
  7931                           ;My_RTCC.c: 165: } else {
  7932  015C' D002               	goto	l8827
  7933  015E'                    l8825:
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;My_RTCC.c: 166: month++;
  7937  015E' 0100               	movlb	0	; () banked
  7938  0160' 2B00'              	incf	epoch_to_caltime@month& (0+255),f,b
  7939  0162'                    l8827:
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;My_RTCC.c: 167: }
  7943                           ;My_RTCC.c: 168: month_cache = month;
  7944  0162' C02A' F004'        	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;My_RTCC.c: 169: year_cache = year;
  7948  0166' C029' F034'        	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  7949  016A'                    l8831:
  7950                           
  7951                           ; BSR set to: 0
  7952  016A' C02A' F01F'        	movff	epoch_to_caltime@month,month_length@month
  7953  016E' 0100               	movlb	0	; () banked
  7954  0170' 5100'              	movf	epoch_to_caltime@year& (0+255),w,b
  7955  0172' EC00' F000'        	call	_month_length
  7956  0176' 0100               	movlb	0	; () banked
  7957  0178' 6F00'              	movwf	??_epoch_to_caltime& (0+255),b
  7958  017A' 0100               	movlb	0	; () banked
  7959  017C' 5100'              	movf	??_epoch_to_caltime& (0+255),w,b
  7960  017E' 0100               	movlb	0	; () banked
  7961  0180' 5D00'              	subwf	epoch_to_caltime@day& (0+255),w,b
  7962  0182' 0E00               	movlw	0
  7963  0184' 5900'              	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  7964  0186' B0D8               	btfsc	status,0,c
  7965  0188' D7B1               	goto	l874
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;My_RTCC.c: 170: }
  7969                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
  7970                           
  7971                           ; BSR set to: 0
  7972  018A' C027' F023'        	movff	epoch_to_caltime@day,??_epoch_to_caltime
  7973  018E' C028' F024'        	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  7974  0192' 0100               	movlb	0	; () banked
  7975  0194' 1F00'              	comf	??_epoch_to_caltime& (0+255),f,b
  7976  0196' 1F00'              	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7977  0198' 4B00'              	infsnz	??_epoch_to_caltime& (0+255),f,b
  7978  019A' 2B00'              	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7979  019C' 0100               	movlb	0	; () banked
  7980  019E' 5100'              	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  7981  01A0' 0100               	movlb	0	; () banked
  7982  01A2' 2500'              	addwf	??_epoch_to_caltime& (0+255),w,b
  7983  01A4' 0101               	movlb	1	; () banked
  7984  01A6' 6F00'              	movwf	epoch_to_caltime@day_cache& (0+255),b
  7985  01A8' 0100               	movlb	0	; () banked
  7986  01AA' 5100'              	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  7987  01AC' 0100               	movlb	0	; () banked
  7988  01AE' 2100'              	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7989  01B0' 0101               	movlb	1	; () banked
  7990  01B2' 6F00'              	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  7991                           
  7992                           ; BSR set to: 1
  7993                           ;My_RTCC.c: 172: day++;
  7994  01B4' 0100               	movlb	0	; () banked
  7995  01B6' 4B00'              	infsnz	epoch_to_caltime@day& (0+255),f,b
  7996  01B8' 2B00'              	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;My_RTCC.c: 174: tm->YY = year;
  8000  01BA' 0100               	movlb	0	; () banked
  8001  01BC' EE20 F00A          	lfsr	2,10
  8002  01C0' 5100'              	movf	epoch_to_caltime@tm& (0+255),w,b
  8003  01C2' 26D9               	addwf	fsr2l,f,c
  8004  01C4' 5100'              	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8005  01C6' 22DA               	addwfc	fsr2h,f,c
  8006  01C8' C029' FFDF         	movff	epoch_to_caltime@year,indf2
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;My_RTCC.c: 175: tm->MM = month;
  8010  01CC' 0100               	movlb	0	; () banked
  8011  01CE' EE20 F009          	lfsr	2,9
  8012  01D2' 5100'              	movf	epoch_to_caltime@tm& (0+255),w,b
  8013  01D4' 26D9               	addwf	fsr2l,f,c
  8014  01D6' 5100'              	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8015  01D8' 22DA               	addwfc	fsr2h,f,c
  8016  01DA' C02A' FFDF         	movff	epoch_to_caltime@month,indf2
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;My_RTCC.c: 176: tm->DD = day;
  8020  01DE' 0100               	movlb	0	; () banked
  8021  01E0' EE20 F008          	lfsr	2,8
  8022  01E4' 5100'              	movf	epoch_to_caltime@tm& (0+255),w,b
  8023  01E6' 26D9               	addwf	fsr2l,f,c
  8024  01E8' 5100'              	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8025  01EA' 22DA               	addwfc	fsr2h,f,c
  8026  01EC' C027' FFDF         	movff	epoch_to_caltime@day,indf2
  8027                           
  8028                           ; BSR set to: 0
  8029  01F0' 0012               	return		;funcret
  8030  01F2'                    __end_of_epoch_to_caltime:
  8031                           	opt stack 0
  8032                           tblptru	equ	0xFF8
  8033                           tblptrh	equ	0xFF7
  8034                           tblptrl	equ	0xFF6
  8035                           tablat	equ	0xFF5
  8036                           prodh	equ	0xFF4
  8037                           prodl	equ	0xFF3
  8038                           intcon	equ	0xFF2
  8039                           intcon2	equ	0xFF1
  8040                           indf0	equ	0xFEF
  8041                           postinc0	equ	0xFEE
  8042                           fsr0h	equ	0xFEA
  8043                           fsr0l	equ	0xFE9
  8044                           wreg	equ	0xFE8
  8045                           postinc1	equ	0xFE6
  8046                           postdec1	equ	0xFE5
  8047                           fsr1h	equ	0xFE2
  8048                           fsr1l	equ	0xFE1
  8049                           indf2	equ	0xFDF
  8050                           postinc2	equ	0xFDE
  8051                           postdec2	equ	0xFDD
  8052                           fsr2h	equ	0xFDA
  8053                           fsr2l	equ	0xFD9
  8054                           status	equ	0xFD8
  8055                           
  8056 ;; *************** function _get_quot_rem *****************
  8057 ;; Defined at:
  8058 ;;		line 80 in file "../My_library/My_RTCC.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  8061 ;;		 -> epoch_to_caltime@num(4), 
  8062 ;;  div             1   27[BANK0 ] unsigned char 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  num             4   29[BANK0 ] unsigned long 
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  4   25[BANK0 ] unsigned long 
  8067 ;; Registers used:
  8068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8074 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8075 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8077 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8078 ;;Total ram usage:        8 bytes
  8079 ;; Hardware stack levels used:    1
  8080 ;; Hardware stack levels required when called:    5
  8081 ;; This function calls:
  8082 ;;		___lldiv
  8083 ;;		___lmul
  8084 ;; This function is called by:
  8085 ;;		_epoch_to_caltime
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text27
  8090  0000'                    __ptext27:
  8091                           	opt stack 0
  8092  0000'                    _get_quot_rem:
  8093                           	opt stack 19
  8094                           
  8095                           ;My_RTCC.c: 83: epoch_t num = *quot;
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;incstack = 0
  8099  0000' C019' FFD9         	movff	get_quot_rem@quot,fsr2l
  8100  0004' C01A' FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8101  0008' CFDE F01D'         	movff	postinc2,get_quot_rem@num
  8102  000C' CFDE F01E'         	movff	postinc2,get_quot_rem@num+1
  8103  0010' CFDE F01F'         	movff	postinc2,get_quot_rem@num+2
  8104  0014' CFDE F020'         	movff	postinc2,get_quot_rem@num+3
  8105                           
  8106                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
  8107  0018' 0100               	movlb	0	; () banked
  8108  001A' 5100'              	movf	get_quot_rem@div& (0+255),w,b
  8109  001C' 0100               	movlb	0	; () banked
  8110  001E' 6F00'              	movwf	___lldiv@divisor& (0+255),b
  8111  0020' 6B00'              	clrf	(___lldiv@divisor+1)& (0+255),b
  8112  0022' 6B00'              	clrf	(___lldiv@divisor+2)& (0+255),b
  8113  0024' 6B00'              	clrf	(___lldiv@divisor+3)& (0+255),b
  8114  0026' C01D' F000'        	movff	get_quot_rem@num,___lldiv@dividend
  8115  002A' C01E' F001'        	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8116  002E' C01F' F002'        	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8117  0032' C020' F003'        	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8118  0036' EC00' F000'        	call	___lldiv	;wreg free
  8119  003A' C019' FFD9         	movff	get_quot_rem@quot,fsr2l
  8120  003E' C01A' FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8121  0042' 0100               	movlb	0	; () banked
  8122  0044' C000' FFDE         	movff	?___lldiv,postinc2
  8123  0048' 0100               	movlb	0	; () banked
  8124  004A' C001' FFDE         	movff	?___lldiv+1,postinc2
  8125  004E' 0100               	movlb	0	; () banked
  8126  0050' C002' FFDE         	movff	?___lldiv+2,postinc2
  8127  0054' 0100               	movlb	0	; () banked
  8128  0056' C003' FFDD         	movff	?___lldiv+3,postdec2
  8129  005A' 52DD               	movf	postdec2,f,c
  8130  005C' 52DD               	movf	postdec2,f,c
  8131  005E' CFDE F00D'         	movff	postinc2,___lmul@multiplier
  8132  0062' CFDE F00E'         	movff	postinc2,___lmul@multiplier+1
  8133  0066' CFDE F00F'         	movff	postinc2,___lmul@multiplier+2
  8134  006A' CFDE F010'         	movff	postinc2,___lmul@multiplier+3
  8135  006E' 0100               	movlb	0	; () banked
  8136  0070' 5100'              	movf	get_quot_rem@div& (0+255),w,b
  8137  0072' 0100               	movlb	0	; () banked
  8138  0074' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
  8139  0076' 6B00'              	clrf	(___lmul@multiplicand+1)& (0+255),b
  8140  0078' 6B00'              	clrf	(___lmul@multiplicand+2)& (0+255),b
  8141  007A' 6B00'              	clrf	(___lmul@multiplicand+3)& (0+255),b
  8142  007C' EC00' F000'        	call	___lmul	;wreg free
  8143  0080' 0100               	movlb	0	; () banked
  8144  0082' 1F00'              	comf	?___lmul& (0+255),f,b
  8145  0084' 0100               	movlb	0	; () banked
  8146  0086' 1F00'              	comf	(?___lmul+1)& (0+255),f,b
  8147  0088' 0100               	movlb	0	; () banked
  8148  008A' 1F00'              	comf	(?___lmul+2)& (0+255),f,b
  8149  008C' 0100               	movlb	0	; () banked
  8150  008E' 1F00'              	comf	(?___lmul+3)& (0+255),f,b
  8151  0090' 0100               	movlb	0	; () banked
  8152  0092' 2B00'              	incf	?___lmul& (0+255),f,b
  8153  0094' 0E00               	movlw	0
  8154  0096' 0100               	movlb	0	; () banked
  8155  0098' 2300'              	addwfc	(?___lmul+1)& (0+255),f,b
  8156  009A' 0100               	movlb	0	; () banked
  8157  009C' 2300'              	addwfc	(?___lmul+2)& (0+255),f,b
  8158  009E' 0100               	movlb	0	; () banked
  8159  00A0' 2300'              	addwfc	(?___lmul+3)& (0+255),f,b
  8160  00A2' 0100               	movlb	0	; () banked
  8161  00A4' 5100'              	movf	get_quot_rem@num& (0+255),w,b
  8162  00A6' 0100               	movlb	0	; () banked
  8163  00A8' 2500'              	addwf	?___lmul& (0+255),w,b
  8164  00AA' 0100               	movlb	0	; () banked
  8165  00AC' 6F00'              	movwf	?_get_quot_rem& (0+255),b
  8166  00AE' 0100               	movlb	0	; () banked
  8167  00B0' 5100'              	movf	(get_quot_rem@num+1)& (0+255),w,b
  8168  00B2' 0100               	movlb	0	; () banked
  8169  00B4' 2100'              	addwfc	(?___lmul+1)& (0+255),w,b
  8170  00B6' 0100               	movlb	0	; () banked
  8171  00B8' 6F00'              	movwf	(?_get_quot_rem+1)& (0+255),b
  8172  00BA' 0100               	movlb	0	; () banked
  8173  00BC' 5100'              	movf	(get_quot_rem@num+2)& (0+255),w,b
  8174  00BE' 0100               	movlb	0	; () banked
  8175  00C0' 2100'              	addwfc	(?___lmul+2)& (0+255),w,b
  8176  00C2' 0100               	movlb	0	; () banked
  8177  00C4' 6F00'              	movwf	(?_get_quot_rem+2)& (0+255),b
  8178  00C6' 0100               	movlb	0	; () banked
  8179  00C8' 5100'              	movf	(get_quot_rem@num+3)& (0+255),w,b
  8180  00CA' 0100               	movlb	0	; () banked
  8181  00CC' 2100'              	addwfc	(?___lmul+3)& (0+255),w,b
  8182  00CE' 0100               	movlb	0	; () banked
  8183  00D0' 6F00'              	movwf	(?_get_quot_rem+3)& (0+255),b
  8184  00D2' 0012               	return	
  8185  00D4'                    __end_of_get_quot_rem:
  8186                           	opt stack 0
  8187                           tblptru	equ	0xFF8
  8188                           tblptrh	equ	0xFF7
  8189                           tblptrl	equ	0xFF6
  8190                           tablat	equ	0xFF5
  8191                           prodh	equ	0xFF4
  8192                           prodl	equ	0xFF3
  8193                           intcon	equ	0xFF2
  8194                           intcon2	equ	0xFF1
  8195                           indf0	equ	0xFEF
  8196                           postinc0	equ	0xFEE
  8197                           fsr0h	equ	0xFEA
  8198                           fsr0l	equ	0xFE9
  8199                           wreg	equ	0xFE8
  8200                           postinc1	equ	0xFE6
  8201                           postdec1	equ	0xFE5
  8202                           fsr1h	equ	0xFE2
  8203                           fsr1l	equ	0xFE1
  8204                           indf2	equ	0xFDF
  8205                           postinc2	equ	0xFDE
  8206                           postdec2	equ	0xFDD
  8207                           fsr2h	equ	0xFDA
  8208                           fsr2l	equ	0xFD9
  8209                           status	equ	0xFD8
  8210                           
  8211 ;; *************** function _caltime_to_RTCC *****************
  8212 ;; Defined at:
  8213 ;;		line 105 in file "../My_library/My_RTCC.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;  tm              2   22[BANK0 ] PTR struct .
  8216 ;;		 -> now(14), 
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;		None               void
  8221 ;; Registers used:
  8222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8232 ;;Total ram usage:        2 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:    6
  8235 ;; This function calls:
  8236 ;;		_d_to_x
  8237 ;; This function is called by:
  8238 ;;		_RTCC_from_caltime
  8239 ;;		_RTCC_from_epoch
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           	psect	text28
  8244  0000'                    __ptext28:
  8245                           	opt stack 0
  8246  0000'                    _caltime_to_RTCC:
  8247                           	opt stack 19
  8248  0000'                    l861:
  8249  0000' 010F               	movlb	15	; () banked
  8250  0002' B93F               	btfsc	63,4,b	;volatile
  8251  0004' D7FD               	goto	l861
  8252                           
  8253                           ; BSR set to: 15
  8254                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
  8255  0006' 010F               	movlb	15	; () banked
  8256  0008' 813F               	bsf	63,0,b	;volatile
  8257                           
  8258                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
  8259  000A' 010F               	movlb	15	; () banked
  8260  000C' 833F               	bsf	63,1,b	;volatile
  8261                           
  8262                           ; BSR set to: 15
  8263                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
  8264  000E' 0100               	movlb	0	; () banked
  8265  0010' EE20 F00A          	lfsr	2,10
  8266  0014' 5100'              	movf	caltime_to_RTCC@tm& (0+255),w,b
  8267  0016' 26D9               	addwf	fsr2l,f,c
  8268  0018' 5100'              	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8269  001A' 22DA               	addwfc	fsr2h,f,c
  8270  001C' 50DF               	movf	indf2,w,c
  8271  001E' EC00' F000'        	call	_d_to_x
  8272  0022' 010F               	movlb	15	; () banked
  8273  0024' 6F3A               	movwf	58,b	;volatile
  8274                           
  8275                           ; BSR set to: 15
  8276                           ;My_RTCC.c: 110: RTCVALH = 0x00;
  8277  0026' 0E00               	movlw	0
  8278  0028' 010F               	movlb	15	; () banked
  8279  002A' 6F3B               	movwf	59,b	;volatile
  8280                           
  8281                           ; BSR set to: 15
  8282                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
  8283  002C' 010F               	movlb	15	; () banked
  8284  002E' 913F               	bcf	63,0,b	;volatile
  8285                           
  8286                           ; BSR set to: 15
  8287                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
  8288  0030' 010F               	movlb	15	; () banked
  8289  0032' 833F               	bsf	63,1,b	;volatile
  8290                           
  8291                           ; BSR set to: 15
  8292                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
  8293  0034' 0100               	movlb	0	; () banked
  8294  0036' EE20 F008          	lfsr	2,8
  8295  003A' 5100'              	movf	caltime_to_RTCC@tm& (0+255),w,b
  8296  003C' 26D9               	addwf	fsr2l,f,c
  8297  003E' 5100'              	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8298  0040' 22DA               	addwfc	fsr2h,f,c
  8299  0042' 50DF               	movf	indf2,w,c
  8300  0044' EC00' F000'        	call	_d_to_x
  8301  0048' 010F               	movlb	15	; () banked
  8302  004A' 6F3A               	movwf	58,b	;volatile
  8303                           
  8304                           ; BSR set to: 15
  8305                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
  8306  004C' 0100               	movlb	0	; () banked
  8307  004E' EE20 F009          	lfsr	2,9
  8308  0052' 5100'              	movf	caltime_to_RTCC@tm& (0+255),w,b
  8309  0054' 26D9               	addwf	fsr2l,f,c
  8310  0056' 5100'              	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8311  0058' 22DA               	addwfc	fsr2h,f,c
  8312  005A' 50DF               	movf	indf2,w,c
  8313  005C' EC00' F000'        	call	_d_to_x
  8314  0060' 010F               	movlb	15	; () banked
  8315  0062' 6F3B               	movwf	59,b	;volatile
  8316                           
  8317                           ; BSR set to: 15
  8318                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
  8319  0064' 010F               	movlb	15	; () banked
  8320  0066' 813F               	bsf	63,0,b	;volatile
  8321                           
  8322                           ; BSR set to: 15
  8323                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
  8324  0068' 010F               	movlb	15	; () banked
  8325  006A' 933F               	bcf	63,1,b	;volatile
  8326                           
  8327                           ; BSR set to: 15
  8328                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
  8329  006C' 0100               	movlb	0	; () banked
  8330  006E' EE20 F006          	lfsr	2,6
  8331  0072' 5100'              	movf	caltime_to_RTCC@tm& (0+255),w,b
  8332  0074' 26D9               	addwf	fsr2l,f,c
  8333  0076' 5100'              	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8334  0078' 22DA               	addwfc	fsr2h,f,c
  8335  007A' 50DF               	movf	indf2,w,c
  8336  007C' EC00' F000'        	call	_d_to_x
  8337  0080' 010F               	movlb	15	; () banked
  8338  0082' 6F3A               	movwf	58,b	;volatile
  8339                           
  8340                           ; BSR set to: 15
  8341                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
  8342  0084' 0100               	movlb	0	; () banked
  8343  0086' EE20 F007          	lfsr	2,7
  8344  008A' 5100'              	movf	caltime_to_RTCC@tm& (0+255),w,b
  8345  008C' 26D9               	addwf	fsr2l,f,c
  8346  008E' 5100'              	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8347  0090' 22DA               	addwfc	fsr2h,f,c
  8348  0092' 50DF               	movf	indf2,w,c
  8349  0094' EC00' F000'        	call	_d_to_x
  8350  0098' 010F               	movlb	15	; () banked
  8351  009A' 6F3B               	movwf	59,b	;volatile
  8352                           
  8353                           ; BSR set to: 15
  8354                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
  8355  009C' 010F               	movlb	15	; () banked
  8356  009E' 913F               	bcf	63,0,b	;volatile
  8357                           
  8358                           ; BSR set to: 15
  8359                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
  8360  00A0' 010F               	movlb	15	; () banked
  8361  00A2' 933F               	bcf	63,1,b	;volatile
  8362                           
  8363                           ; BSR set to: 15
  8364                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
  8365  00A4' 0100               	movlb	0	; () banked
  8366  00A6' EE20 F004          	lfsr	2,4
  8367  00AA' 5100'              	movf	caltime_to_RTCC@tm& (0+255),w,b
  8368  00AC' 26D9               	addwf	fsr2l,f,c
  8369  00AE' 5100'              	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8370  00B0' 22DA               	addwfc	fsr2h,f,c
  8371  00B2' 50DF               	movf	indf2,w,c
  8372  00B4' EC00' F000'        	call	_d_to_x
  8373  00B8' 010F               	movlb	15	; () banked
  8374  00BA' 6F3A               	movwf	58,b	;volatile
  8375                           
  8376                           ; BSR set to: 15
  8377                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
  8378  00BC' 0100               	movlb	0	; () banked
  8379  00BE' EE20 F005          	lfsr	2,5
  8380  00C2' 5100'              	movf	caltime_to_RTCC@tm& (0+255),w,b
  8381  00C4' 26D9               	addwf	fsr2l,f,c
  8382  00C6' 5100'              	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8383  00C8' 22DA               	addwfc	fsr2h,f,c
  8384  00CA' 50DF               	movf	indf2,w,c
  8385  00CC' EC00' F000'        	call	_d_to_x
  8386  00D0' 010F               	movlb	15	; () banked
  8387  00D2' 6F3B               	movwf	59,b	;volatile
  8388                           
  8389                           ; BSR set to: 15
  8390  00D4' 0012               	return		;funcret
  8391  00D6'                    __end_of_caltime_to_RTCC:
  8392                           	opt stack 0
  8393                           tblptru	equ	0xFF8
  8394                           tblptrh	equ	0xFF7
  8395                           tblptrl	equ	0xFF6
  8396                           tablat	equ	0xFF5
  8397                           prodh	equ	0xFF4
  8398                           prodl	equ	0xFF3
  8399                           intcon	equ	0xFF2
  8400                           intcon2	equ	0xFF1
  8401                           indf0	equ	0xFEF
  8402                           postinc0	equ	0xFEE
  8403                           fsr0h	equ	0xFEA
  8404                           fsr0l	equ	0xFE9
  8405                           wreg	equ	0xFE8
  8406                           postinc1	equ	0xFE6
  8407                           postdec1	equ	0xFE5
  8408                           fsr1h	equ	0xFE2
  8409                           fsr1l	equ	0xFE1
  8410                           indf2	equ	0xFDF
  8411                           postinc2	equ	0xFDE
  8412                           postdec2	equ	0xFDD
  8413                           fsr2h	equ	0xFDA
  8414                           fsr2l	equ	0xFD9
  8415                           status	equ	0xFD8
  8416                           
  8417 ;; *************** function _d_to_x *****************
  8418 ;; Defined at:
  8419 ;;		line 45 in file "../My_library/My_RTCC.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;  dec             1    wreg     unsigned char 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;  dec             1   21[BANK0 ] unsigned char 
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      unsigned char 
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8436 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8437 ;;Total ram usage:        1 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    5
  8440 ;; This function calls:
  8441 ;;		___awdiv
  8442 ;; This function is called by:
  8443 ;;		_caltime_to_RTCC
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text29
  8448  0000'                    __ptext29:
  8449                           	opt stack 0
  8450  0000'                    _d_to_x:
  8451                           	opt stack 19
  8452                           
  8453                           ; BSR set to: 15
  8454                           ;incstack = 0
  8455                           ;d_to_x@dec stored from wreg
  8456  0000' 0100               	movlb	0	; () banked
  8457  0002' 6F00'              	movwf	d_to_x@dec& (0+255),b
  8458                           
  8459                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
  8460  0004' C015' F00D'        	movff	d_to_x@dec,___awdiv@dividend
  8461  0008' 0100               	movlb	0	; () banked
  8462  000A' 6B00'              	clrf	(___awdiv@dividend+1)& (0+255),b
  8463  000C' 0E00               	movlw	0
  8464  000E' 0100               	movlb	0	; () banked
  8465  0010' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
  8466  0012' 0E0A               	movlw	10
  8467  0014' 6F00'              	movwf	___awdiv@divisor& (0+255),b
  8468  0016' EC00' F000'        	call	___awdiv	;wreg free
  8469  001A' 0100               	movlb	0	; () banked
  8470  001C' 5100'              	movf	?___awdiv& (0+255),w,b
  8471  001E' 0D06               	mullw	6
  8472  0020' 50F3               	movf	prodl,w,c
  8473  0022' 0100               	movlb	0	; () banked
  8474  0024' 2500'              	addwf	d_to_x@dec& (0+255),w,b
  8475  0026' 0012               	return	
  8476  0028'                    __end_of_d_to_x:
  8477                           	opt stack 0
  8478                           tblptru	equ	0xFF8
  8479                           tblptrh	equ	0xFF7
  8480                           tblptrl	equ	0xFF6
  8481                           tablat	equ	0xFF5
  8482                           prodh	equ	0xFF4
  8483                           prodl	equ	0xFF3
  8484                           intcon	equ	0xFF2
  8485                           intcon2	equ	0xFF1
  8486                           indf0	equ	0xFEF
  8487                           postinc0	equ	0xFEE
  8488                           fsr0h	equ	0xFEA
  8489                           fsr0l	equ	0xFE9
  8490                           wreg	equ	0xFE8
  8491                           postinc1	equ	0xFE6
  8492                           postdec1	equ	0xFE5
  8493                           fsr1h	equ	0xFE2
  8494                           fsr1l	equ	0xFE1
  8495                           indf2	equ	0xFDF
  8496                           postinc2	equ	0xFDE
  8497                           postdec2	equ	0xFDD
  8498                           fsr2h	equ	0xFDA
  8499                           fsr2l	equ	0xFD9
  8500                           status	equ	0xFD8
  8501                           
  8502 ;; *************** function ___awdiv *****************
  8503 ;; Defined at:
  8504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  dividend        2   13[BANK0 ] int 
  8507 ;;  divisor         2   15[BANK0 ] int 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;  quotient        2   19[BANK0 ] int 
  8510 ;;  sign            1   18[BANK0 ] unsigned char 
  8511 ;;  counter         1   17[BANK0 ] unsigned char 
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  2   13[BANK0 ] int 
  8514 ;; Registers used:
  8515 ;;		wreg, status,2, status,0
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8521 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8522 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8524 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8525 ;;Total ram usage:        8 bytes
  8526 ;; Hardware stack levels used:    1
  8527 ;; Hardware stack levels required when called:    4
  8528 ;; This function calls:
  8529 ;;		Nothing
  8530 ;; This function is called by:
  8531 ;;		_d_to_x
  8532 ;;		_terminal_operation
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           
  8536                           	psect	text30
  8537  0000'                    __ptext30:
  8538                           	opt stack 0
  8539  0000'                    ___awdiv:
  8540                           	opt stack 19
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;incstack = 0
  8544  0000' 0E00               	movlw	0
  8545  0002' 0100               	movlb	0	; () banked
  8546  0004' 6F00'              	movwf	___awdiv@sign& (0+255),b
  8547                           
  8548                           ; BSR set to: 0
  8549  0006' 0100               	movlb	0	; () banked
  8550  0008' AF00'              	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8551  000A' D008               	goto	l8579
  8552                           
  8553                           ; BSR set to: 0
  8554  000C' 0100               	movlb	0	; () banked
  8555  000E' 6D00'              	negf	___awdiv@divisor& (0+255),b
  8556  0010' 1F00'              	comf	(___awdiv@divisor+1)& (0+255),f,b
  8557  0012' B0D8               	btfsc	status,0,c
  8558  0014' 2B00'              	incf	(___awdiv@divisor+1)& (0+255),f,b
  8559                           
  8560                           ; BSR set to: 0
  8561  0016' 0E01               	movlw	1
  8562  0018' 0100               	movlb	0	; () banked
  8563  001A' 6F00'              	movwf	___awdiv@sign& (0+255),b
  8564  001C'                    l8579:
  8565                           
  8566                           ; BSR set to: 0
  8567  001C' 0100               	movlb	0	; () banked
  8568  001E' AF00'              	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8569  0020' D008               	goto	l8585
  8570                           
  8571                           ; BSR set to: 0
  8572  0022' 0100               	movlb	0	; () banked
  8573  0024' 6D00'              	negf	___awdiv@dividend& (0+255),b
  8574  0026' 1F00'              	comf	(___awdiv@dividend+1)& (0+255),f,b
  8575  0028' B0D8               	btfsc	status,0,c
  8576  002A' 2B00'              	incf	(___awdiv@dividend+1)& (0+255),f,b
  8577                           
  8578                           ; BSR set to: 0
  8579  002C' 0E01               	movlw	1
  8580  002E' 0100               	movlb	0	; () banked
  8581  0030' 1B00'              	xorwf	___awdiv@sign& (0+255),f,b
  8582  0032'                    l8585:
  8583                           
  8584                           ; BSR set to: 0
  8585  0032' 0E00               	movlw	0
  8586  0034' 0100               	movlb	0	; () banked
  8587  0036' 6F00'              	movwf	(___awdiv@quotient+1)& (0+255),b
  8588  0038' 0E00               	movlw	0
  8589  003A' 6F00'              	movwf	___awdiv@quotient& (0+255),b
  8590                           
  8591                           ; BSR set to: 0
  8592  003C' 0100               	movlb	0	; () banked
  8593  003E' 5100'              	movf	___awdiv@divisor& (0+255),w,b
  8594  0040' 0100               	movlb	0	; () banked
  8595  0042' 1100'              	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8596  0044' B4D8               	btfsc	status,2,c
  8597  0046' D02C               	goto	l8607
  8598                           
  8599                           ; BSR set to: 0
  8600  0048' 0E01               	movlw	1
  8601  004A' 0100               	movlb	0	; () banked
  8602  004C' 6F00'              	movwf	___awdiv@counter& (0+255),b
  8603  004E' D006               	goto	l8593
  8604  0050'                    l8591:
  8605                           
  8606                           ; BSR set to: 0
  8607  0050' 0100               	movlb	0	; () banked
  8608  0052' 90D8               	bcf	status,0,c
  8609  0054' 3700'              	rlcf	___awdiv@divisor& (0+255),f,b
  8610  0056' 3700'              	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8611  0058' 0100               	movlb	0	; () banked
  8612  005A' 2B00'              	incf	___awdiv@counter& (0+255),f,b
  8613  005C'                    l8593:
  8614                           
  8615                           ; BSR set to: 0
  8616  005C' 0100               	movlb	0	; () banked
  8617  005E' AF00'              	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8618  0060' D7F7               	goto	l8591
  8619  0062'                    l8595:
  8620                           
  8621                           ; BSR set to: 0
  8622  0062' 0100               	movlb	0	; () banked
  8623  0064' 90D8               	bcf	status,0,c
  8624  0066' 3700'              	rlcf	___awdiv@quotient& (0+255),f,b
  8625  0068' 3700'              	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8626                           
  8627                           ; BSR set to: 0
  8628  006A' 0100               	movlb	0	; () banked
  8629  006C' 5100'              	movf	___awdiv@divisor& (0+255),w,b
  8630  006E' 0100               	movlb	0	; () banked
  8631  0070' 5D00'              	subwf	___awdiv@dividend& (0+255),w,b
  8632  0072' 0100               	movlb	0	; () banked
  8633  0074' 5100'              	movf	(___awdiv@divisor+1)& (0+255),w,b
  8634  0076' 0100               	movlb	0	; () banked
  8635  0078' 5900'              	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8636  007A' A0D8               	btfss	status,0,c
  8637  007C' D00A               	goto	l8603
  8638                           
  8639                           ; BSR set to: 0
  8640  007E' 0100               	movlb	0	; () banked
  8641  0080' 5100'              	movf	___awdiv@divisor& (0+255),w,b
  8642  0082' 0100               	movlb	0	; () banked
  8643  0084' 5F00'              	subwf	___awdiv@dividend& (0+255),f,b
  8644  0086' 0100               	movlb	0	; () banked
  8645  0088' 5100'              	movf	(___awdiv@divisor+1)& (0+255),w,b
  8646  008A' 0100               	movlb	0	; () banked
  8647  008C' 5B00'              	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8648                           
  8649                           ; BSR set to: 0
  8650  008E' 0100               	movlb	0	; () banked
  8651  0090' 8100'              	bsf	___awdiv@quotient& (0+255),0,b
  8652  0092'                    l8603:
  8653                           
  8654                           ; BSR set to: 0
  8655  0092' 0100               	movlb	0	; () banked
  8656  0094' 90D8               	bcf	status,0,c
  8657  0096' 3300'              	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8658  0098' 3300'              	rrcf	___awdiv@divisor& (0+255),f,b
  8659                           
  8660                           ; BSR set to: 0
  8661  009A' 0100               	movlb	0	; () banked
  8662  009C' 2F00'              	decfsz	___awdiv@counter& (0+255),f,b
  8663  009E' D7E1               	goto	l8595
  8664  00A0'                    l8607:
  8665                           
  8666                           ; BSR set to: 0
  8667  00A0' 0100               	movlb	0	; () banked
  8668  00A2' 5100'              	movf	___awdiv@sign& (0+255),w,b
  8669  00A4' 0100               	movlb	0	; () banked
  8670  00A6' B4D8               	btfsc	status,2,c
  8671  00A8' D005               	goto	l8611
  8672                           
  8673                           ; BSR set to: 0
  8674  00AA' 0100               	movlb	0	; () banked
  8675  00AC' 6D00'              	negf	___awdiv@quotient& (0+255),b
  8676  00AE' 1F00'              	comf	(___awdiv@quotient+1)& (0+255),f,b
  8677  00B0' B0D8               	btfsc	status,0,c
  8678  00B2' 2B00'              	incf	(___awdiv@quotient+1)& (0+255),f,b
  8679  00B4'                    l8611:
  8680                           
  8681                           ; BSR set to: 0
  8682  00B4' C013' F00D'        	movff	___awdiv@quotient,?___awdiv
  8683  00B8' C014' F00E'        	movff	___awdiv@quotient+1,?___awdiv+1
  8684  00BC' 0012               	return	
  8685  00BE'                    __end_of___awdiv:
  8686                           	opt stack 0
  8687                           tblptru	equ	0xFF8
  8688                           tblptrh	equ	0xFF7
  8689                           tblptrl	equ	0xFF6
  8690                           tablat	equ	0xFF5
  8691                           prodh	equ	0xFF4
  8692                           prodl	equ	0xFF3
  8693                           intcon	equ	0xFF2
  8694                           intcon2	equ	0xFF1
  8695                           indf0	equ	0xFEF
  8696                           postinc0	equ	0xFEE
  8697                           fsr0h	equ	0xFEA
  8698                           fsr0l	equ	0xFE9
  8699                           wreg	equ	0xFE8
  8700                           postinc1	equ	0xFE6
  8701                           postdec1	equ	0xFE5
  8702                           fsr1h	equ	0xFE2
  8703                           fsr1l	equ	0xFE1
  8704                           indf2	equ	0xFDF
  8705                           postinc2	equ	0xFDE
  8706                           postdec2	equ	0xFDD
  8707                           fsr2h	equ	0xFDA
  8708                           fsr2l	equ	0xFD9
  8709                           status	equ	0xFD8
  8710                           
  8711 ;; *************** function _PWM_init *****************
  8712 ;; Defined at:
  8713 ;;		line 80 in file "PIC18F27J53-killifish_light05.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  PR              1    wreg     unsigned char 
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;  PR              1   31[COMRAM] unsigned char 
  8718 ;; Return value:  Size  Location     Type
  8719 ;;		None               void
  8720 ;; Registers used:
  8721 ;;		wreg, status,2, status,0
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8731 ;;Total ram usage:        1 bytes
  8732 ;; Hardware stack levels used:    1
  8733 ;; Hardware stack levels required when called:    4
  8734 ;; This function calls:
  8735 ;;		Nothing
  8736 ;; This function is called by:
  8737 ;;		_main_init
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           	psect	text31
  8742  0000'                    __ptext31:
  8743                           	opt stack 0
  8744  0000'                    _PWM_init:
  8745                           	opt stack 25
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;incstack = 0
  8749                           ;PWM_init@PR stored from wreg
  8750  0000' 6E1F'              	movwf	PWM_init@PR,c
  8751                           
  8752                           ;PIC18F27J53-killifish_light05.c: 81: PPSCONbits.IOLOCK = 0;
  8753  0002' 010E               	movlb	14	; () banked
  8754  0004' 91BF               	bcf	191,0,b	;volatile
  8755                           
  8756                           ;PIC18F27J53-killifish_light05.c: 82: if (PPSCONbits.IOLOCK != 0) {
  8757  0006' 010E               	movlb	14	; () banked
  8758  0008' A1BF               	btfss	191,0,b	;volatile
  8759  000A' D006               	goto	l1528
  8760                           
  8761                           ; BSR set to: 14
  8762                           ;PIC18F27J53-killifish_light05.c: 83: EECON2 = 0x55;
  8763  000C' 0E55               	movlw	85
  8764  000E' 6EA7               	movwf	4007,c	;volatile
  8765                           
  8766                           ;PIC18F27J53-killifish_light05.c: 84: EECON2 = 0xAA;
  8767  0010' 0EAA               	movlw	170
  8768  0012' 6EA7               	movwf	4007,c	;volatile
  8769                           
  8770                           ; BSR set to: 14
  8771                           ;PIC18F27J53-killifish_light05.c: 85: PPSCONbits.IOLOCK = 0;
  8772  0014' 010E               	movlb	14	; () banked
  8773  0016' 91BF               	bcf	191,0,b	;volatile
  8774  0018'                    l1528:
  8775                           
  8776                           ; BSR set to: 14
  8777                           ;PIC18F27J53-killifish_light05.c: 86: }
  8778                           ;PIC18F27J53-killifish_light05.c: 88: RPOR3 = 14;
  8779  0018' 0E0E               	movlw	14
  8780  001A' 010E               	movlb	14	; () banked
  8781  001C' 6FC3               	movwf	195,b	;volatile
  8782                           
  8783                           ;PIC18F27J53-killifish_light05.c: 89: RPOR4 = 18;
  8784  001E' 0E12               	movlw	18
  8785  0020' 010E               	movlb	14	; () banked
  8786  0022' 6FC4               	movwf	196,b	;volatile
  8787                           
  8788                           ;PIC18F27J53-killifish_light05.c: 90: RPOR5 = 22;
  8789  0024' 0E16               	movlw	22
  8790  0026' 010E               	movlb	14	; () banked
  8791  0028' 6FC5               	movwf	197,b	;volatile
  8792                           
  8793                           ; BSR set to: 14
  8794                           ;PIC18F27J53-killifish_light05.c: 92: CCP1CONbits.CCP1M = 12;
  8795  002A' 50BA               	movf	4026,w,c	;volatile
  8796  002C' 0BF0               	andlw	-16
  8797  002E' 090C               	iorlw	12
  8798  0030' 6EBA               	movwf	4026,c	;volatile
  8799                           
  8800                           ; BSR set to: 14
  8801                           ;PIC18F27J53-killifish_light05.c: 93: CCP1CONbits.P1M = 0;
  8802  0032' 0E3F               	movlw	-193
  8803  0034' 16BA               	andwf	4026,f,c	;volatile
  8804                           
  8805                           ; BSR set to: 14
  8806                           ;PIC18F27J53-killifish_light05.c: 94: CCPTMRS0bits.C1TSEL = 0;
  8807  0036' 010F               	movlb	15	; () banked
  8808  0038' 9152               	bcf	82,0,b	;volatile
  8809  003A' 9352               	bcf	82,1,b	;volatile
  8810  003C' 9552               	bcf	82,2,b	;volatile
  8811                           
  8812                           ; BSR set to: 15
  8813                           ;PIC18F27J53-killifish_light05.c: 95: CCPR1Lbits.CCPR1L = 0;
  8814  003E' 0E00               	movlw	0
  8815  0040' 6EBB               	movwf	4027,c	;volatile
  8816                           
  8817                           ; BSR set to: 15
  8818                           ;PIC18F27J53-killifish_light05.c: 96: CCP1CONbits.DC1B = 0;
  8819  0042' 0ECF               	movlw	-49
  8820  0044' 16BA               	andwf	4026,f,c	;volatile
  8821                           
  8822                           ; BSR set to: 15
  8823                           ;PIC18F27J53-killifish_light05.c: 98: CCP2CONbits.CCP2M = 12;
  8824  0046' 50B4               	movf	4020,w,c	;volatile
  8825  0048' 0BF0               	andlw	-16
  8826  004A' 090C               	iorlw	12
  8827  004C' 6EB4               	movwf	4020,c	;volatile
  8828                           
  8829                           ; BSR set to: 15
  8830                           ;PIC18F27J53-killifish_light05.c: 99: CCP2CONbits.P2M = 0;
  8831  004E' 0E3F               	movlw	-193
  8832  0050' 16B4               	andwf	4020,f,c	;volatile
  8833                           
  8834                           ; BSR set to: 15
  8835                           ;PIC18F27J53-killifish_light05.c: 100: CCPTMRS0bits.C2TSEL = 0;
  8836  0052' 010F               	movlb	15	; () banked
  8837  0054' 9752               	bcf	82,3,b	;volatile
  8838  0056' 9952               	bcf	82,4,b	;volatile
  8839  0058' 9B52               	bcf	82,5,b	;volatile
  8840                           
  8841                           ; BSR set to: 15
  8842                           ;PIC18F27J53-killifish_light05.c: 101: CCPR2Lbits.CCPR2L = 0;
  8843  005A' 0E00               	movlw	0
  8844  005C' 6EB5               	movwf	4021,c	;volatile
  8845                           
  8846                           ; BSR set to: 15
  8847                           ;PIC18F27J53-killifish_light05.c: 102: CCP2CONbits.DC2B = 0;
  8848  005E' 0ECF               	movlw	-49
  8849  0060' 16B4               	andwf	4020,f,c	;volatile
  8850                           
  8851                           ; BSR set to: 15
  8852                           ;PIC18F27J53-killifish_light05.c: 104: CCP3CONbits.CCP3M = 12;
  8853  0062' 010F               	movlb	15	; () banked
  8854  0064' 5115               	movf	21,w,b	;volatile
  8855  0066' 0BF0               	andlw	-16
  8856  0068' 090C               	iorlw	12
  8857  006A' 6F15               	movwf	21,b	;volatile
  8858                           
  8859                           ; BSR set to: 15
  8860                           ;PIC18F27J53-killifish_light05.c: 105: CCP3CONbits.P3M = 0;
  8861  006C' 0E3F               	movlw	-193
  8862  006E' 010F               	movlb	15	; () banked
  8863  0070' 1715               	andwf	21,f,b	;volatile
  8864                           
  8865                           ; BSR set to: 15
  8866                           ;PIC18F27J53-killifish_light05.c: 106: CCPTMRS0bits.C3TSEL = 0;
  8867  0072' 0E3F               	movlw	-193
  8868  0074' 010F               	movlb	15	; () banked
  8869  0076' 1752               	andwf	82,f,b	;volatile
  8870                           
  8871                           ; BSR set to: 15
  8872                           ;PIC18F27J53-killifish_light05.c: 107: CCPR3Lbits.CCPR3L = 0;
  8873  0078' 0E00               	movlw	0
  8874  007A' 010F               	movlb	15	; () banked
  8875  007C' 6F16               	movwf	22,b	;volatile
  8876                           
  8877                           ; BSR set to: 15
  8878                           ;PIC18F27J53-killifish_light05.c: 108: CCP3CONbits.DC3B = 0;
  8879  007E' 0ECF               	movlw	-49
  8880  0080' 010F               	movlb	15	; () banked
  8881  0082' 1715               	andwf	21,f,b	;volatile
  8882                           
  8883                           ; BSR set to: 15
  8884                           ;PIC18F27J53-killifish_light05.c: 110: CCP4CONbits.CCP4M = 12;
  8885  0084' 010F               	movlb	15	; () banked
  8886  0086' 5112               	movf	18,w,b	;volatile
  8887  0088' 0BF0               	andlw	-16
  8888  008A' 090C               	iorlw	12
  8889  008C' 6F12               	movwf	18,b	;volatile
  8890                           
  8891                           ; BSR set to: 15
  8892                           ;PIC18F27J53-killifish_light05.c: 111: CCPTMRS1bits.C4TSEL = 0;
  8893  008E' 0EFC               	movlw	-4
  8894  0090' 010F               	movlb	15	; () banked
  8895  0092' 1751               	andwf	81,f,b	;volatile
  8896                           
  8897                           ; BSR set to: 15
  8898                           ;PIC18F27J53-killifish_light05.c: 112: CCPR4Lbits.CCPR4L = 0;
  8899  0094' 0E00               	movlw	0
  8900  0096' 010F               	movlb	15	; () banked
  8901  0098' 6F13               	movwf	19,b	;volatile
  8902                           
  8903                           ; BSR set to: 15
  8904                           ;PIC18F27J53-killifish_light05.c: 113: CCP4CONbits.DC4B = 0;
  8905  009A' 0ECF               	movlw	-49
  8906  009C' 010F               	movlb	15	; () banked
  8907  009E' 1712               	andwf	18,f,b	;volatile
  8908                           
  8909                           ; BSR set to: 15
  8910                           ;PIC18F27J53-killifish_light05.c: 115: T2CONbits.T2OUTPS = 0;
  8911  00A0' 96CA               	bcf	4042,3,c	;volatile
  8912  00A2' 98CA               	bcf	4042,4,c	;volatile
  8913  00A4' 9ACA               	bcf	4042,5,c	;volatile
  8914  00A6' 9CCA               	bcf	4042,6,c	;volatile
  8915                           
  8916                           ; BSR set to: 15
  8917                           ;PIC18F27J53-killifish_light05.c: 116: T2CONbits.T2CKPS = 2;
  8918  00A8' 50CA               	movf	4042,w,c	;volatile
  8919  00AA' 0BFC               	andlw	-4
  8920  00AC' 0902               	iorlw	2
  8921  00AE' 6ECA               	movwf	4042,c	;volatile
  8922                           
  8923                           ; BSR set to: 15
  8924                           ;PIC18F27J53-killifish_light05.c: 117: PR2 = PR - 1;
  8925  00B0' 041F'              	decf	PWM_init@PR,w,c
  8926  00B2' 6ECB               	movwf	4043,c	;volatile
  8927                           
  8928                           ; BSR set to: 15
  8929                           ;PIC18F27J53-killifish_light05.c: 118: T2CONbits.TMR2ON = 1;
  8930  00B4' 84CA               	bsf	4042,2,c	;volatile
  8931                           
  8932                           ; BSR set to: 15
  8933  00B6' 0012               	return		;funcret
  8934  00B8'                    __end_of_PWM_init:
  8935                           	opt stack 0
  8936                           tblptru	equ	0xFF8
  8937                           tblptrh	equ	0xFF7
  8938                           tblptrl	equ	0xFF6
  8939                           tablat	equ	0xFF5
  8940                           prodh	equ	0xFF4
  8941                           prodl	equ	0xFF3
  8942                           intcon	equ	0xFF2
  8943                           intcon2	equ	0xFF1
  8944                           indf0	equ	0xFEF
  8945                           postinc0	equ	0xFEE
  8946                           fsr0h	equ	0xFEA
  8947                           fsr0l	equ	0xFE9
  8948                           wreg	equ	0xFE8
  8949                           postinc1	equ	0xFE6
  8950                           postdec1	equ	0xFE5
  8951                           fsr1h	equ	0xFE2
  8952                           fsr1l	equ	0xFE1
  8953                           indf2	equ	0xFDF
  8954                           postinc2	equ	0xFDE
  8955                           postdec2	equ	0xFDD
  8956                           fsr2h	equ	0xFDA
  8957                           fsr2l	equ	0xFD9
  8958                           status	equ	0xFD8
  8959                           
  8960 ;; *************** function _OSC_init *****************
  8961 ;; Defined at:
  8962 ;;		line 8 in file "../My_library/My_PIC.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;		None               void
  8969 ;; Registers used:
  8970 ;;		wreg, status,2
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8980 ;;Total ram usage:        0 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    4
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_main_init
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text32
  8991  0000'                    __ptext32:
  8992                           	opt stack 0
  8993  0000'                    _OSC_init:
  8994                           	opt stack 25
  8995                           
  8996                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  8997                           
  8998                           ; BSR set to: 15
  8999                           ;incstack = 0
  9000  0000' 88D3               	bsf	4051,4,c	;volatile
  9001  0002' 8AD3               	bsf	4051,5,c	;volatile
  9002  0004' 8CD3               	bsf	4051,6,c	;volatile
  9003                           
  9004                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  9005  0006' 8C9B               	bsf	3995,6,c	;volatile
  9006                           
  9007                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  9008  0008' 0EFC               	movlw	-4
  9009  000A' 16D3               	andwf	4051,f,c	;volatile
  9010  000C' 0012               	return		;funcret
  9011  000E'                    __end_of_OSC_init:
  9012                           	opt stack 0
  9013                           tblptru	equ	0xFF8
  9014                           tblptrh	equ	0xFF7
  9015                           tblptrl	equ	0xFF6
  9016                           tablat	equ	0xFF5
  9017                           prodh	equ	0xFF4
  9018                           prodl	equ	0xFF3
  9019                           intcon	equ	0xFF2
  9020                           intcon2	equ	0xFF1
  9021                           indf0	equ	0xFEF
  9022                           postinc0	equ	0xFEE
  9023                           fsr0h	equ	0xFEA
  9024                           fsr0l	equ	0xFE9
  9025                           wreg	equ	0xFE8
  9026                           postinc1	equ	0xFE6
  9027                           postdec1	equ	0xFE5
  9028                           fsr1h	equ	0xFE2
  9029                           fsr1l	equ	0xFE1
  9030                           indf2	equ	0xFDF
  9031                           postinc2	equ	0xFDE
  9032                           postdec2	equ	0xFDD
  9033                           fsr2h	equ	0xFDA
  9034                           fsr2l	equ	0xFD9
  9035                           status	equ	0xFD8
  9036                           
  9037 ;; *************** function _ADC_init *****************
  9038 ;; Defined at:
  9039 ;;		line 133 in file "../My_library/My_PIC.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  p_ref           1    wreg     unsigned char 
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  p_ref           1   31[COMRAM] unsigned char 
  9044 ;; Return value:  Size  Location     Type
  9045 ;;		None               void
  9046 ;; Registers used:
  9047 ;;		wreg, status,2
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9057 ;;Total ram usage:        1 bytes
  9058 ;; Hardware stack levels used:    1
  9059 ;; Hardware stack levels required when called:    4
  9060 ;; This function calls:
  9061 ;;		Nothing
  9062 ;; This function is called by:
  9063 ;;		_main_init
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           	psect	text33
  9068  0000'                    __ptext33:
  9069                           	opt stack 0
  9070  0000'                    _ADC_init:
  9071                           	opt stack 25
  9072                           
  9073                           ;incstack = 0
  9074                           ;ADC_init@p_ref stored from wreg
  9075  0000' 6E1F'              	movwf	ADC_init@p_ref,c
  9076                           
  9077                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
  9078  0002' 9EC2               	bcf	4034,7,c	;volatile
  9079                           
  9080                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
  9081  0004' B01F'              	btfsc	ADC_init@p_ref,0,c
  9082  0006' D002               	bra	u6155
  9083  0008' 9CC2               	bcf	4034,6,c	;volatile
  9084  000A' D001               	bra	u6156
  9085  000C'                    u6155:
  9086  000C' 8CC2               	bsf	4034,6,c	;volatile
  9087  000E'                    u6156:
  9088                           
  9089                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
  9090  000E' 8EC1               	bsf	4033,7,c	;volatile
  9091                           
  9092                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
  9093  0010' 9CC1               	bcf	4033,6,c	;volatile
  9094                           
  9095                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
  9096  0012' 50C1               	movf	4033,w,c	;volatile
  9097  0014' 0BF8               	andlw	-8
  9098  0016' 0906               	iorlw	6
  9099  0018' 6EC1               	movwf	4033,c	;volatile
  9100  001A' 0012               	return		;funcret
  9101  001C'                    __end_of_ADC_init:
  9102                           	opt stack 0
  9103                           tblptru	equ	0xFF8
  9104                           tblptrh	equ	0xFF7
  9105                           tblptrl	equ	0xFF6
  9106                           tablat	equ	0xFF5
  9107                           prodh	equ	0xFF4
  9108                           prodl	equ	0xFF3
  9109                           intcon	equ	0xFF2
  9110                           intcon2	equ	0xFF1
  9111                           indf0	equ	0xFEF
  9112                           postinc0	equ	0xFEE
  9113                           fsr0h	equ	0xFEA
  9114                           fsr0l	equ	0xFE9
  9115                           wreg	equ	0xFE8
  9116                           postinc1	equ	0xFE6
  9117                           postdec1	equ	0xFE5
  9118                           fsr1h	equ	0xFE2
  9119                           fsr1l	equ	0xFE1
  9120                           indf2	equ	0xFDF
  9121                           postinc2	equ	0xFDE
  9122                           postdec2	equ	0xFDD
  9123                           fsr2h	equ	0xFDA
  9124                           fsr2l	equ	0xFD9
  9125                           status	equ	0xFD8
  9126                           
  9127 ;; *************** function _light_task *****************
  9128 ;; Defined at:
  9129 ;;		line 231 in file "PIC18F27J53-killifish_light05.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;		None
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  temp            4   46[BANK0 ] unsigned long 
  9134 ;;  value           1   45[BANK0 ] unsigned char 
  9135 ;;  value           1   44[BANK0 ] unsigned char 
  9136 ;;  i               1   50[BANK0 ] unsigned char 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;		None               void
  9139 ;; Registers used:
  9140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9147 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9148 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9149 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9150 ;;Total ram usage:       11 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:    8
  9153 ;; This function calls:
  9154 ;;		_PWM_set
  9155 ;;		_RTCC_from_RTCC
  9156 ;;		___lldiv
  9157 ;;		___llmod
  9158 ;;		___lmul
  9159 ;; This function is called by:
  9160 ;;		_main
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text34
  9165  0000'                    __ptext34:
  9166                           	opt stack 0
  9167  0000'                    _light_task:
  9168                           	opt stack 22
  9169                           
  9170                           ;PIC18F27J53-killifish_light05.c: 232: uint8_t i;
  9171                           ;PIC18F27J53-killifish_light05.c: 233: if (time_change_flag) {
  9172                           
  9173                           ;incstack = 0
  9174  0000' 0100               	movlb	0	; () banked
  9175  0002' 5100'              	movf	_time_change_flag& (0+255),w,b
  9176  0004' B4D8               	btfsc	status,2,c
  9177  0006' D0AE               	goto	l1582
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;PIC18F27J53-killifish_light05.c: 234: time_change_flag = 0;
  9181  0008' 0E00               	movlw	0
  9182  000A' 0100               	movlb	0	; () banked
  9183  000C' 6F00'              	movwf	_time_change_flag& (0+255),b
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;PIC18F27J53-killifish_light05.c: 235: RTCC_from_RTCC(&now);
  9187  000E' 0E00'              	movlw	low _now
  9188  0010' 0100               	movlb	0	; () banked
  9189  0012' 6F00'              	movwf	RTCC_from_RTCC@tm& (0+255),b
  9190  0014' 0E00'              	movlw	high _now
  9191  0016' 0100               	movlb	0	; () banked
  9192  0018' 6F00'              	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  9193  001A' EC00' F000'        	call	_RTCC_from_RTCC	;wreg free
  9194                           
  9195                           ;PIC18F27J53-killifish_light05.c: 236: if (light_mode == TIME_SYNC_mode) {
  9196  001E' 0100               	movlb	0	; () banked
  9197  0020' 5100'              	movf	_light_mode& (0+255),w,b
  9198  0022' A4D8               	btfss	status,2,c
  9199  0024' D09F               	goto	l1582
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;PIC18F27J53-killifish_light05.c: 237: epoch_t temp = (epoch_t) now.epoch % ((epoch_t)60
      +                          *60*24);
  9203  0026' C035' F000'        	movff	_now,___llmod@dividend
  9204  002A' C036' F001'        	movff	_now+1,___llmod@dividend+1
  9205  002E' C037' F002'        	movff	_now+2,___llmod@dividend+2
  9206  0032' C038' F003'        	movff	_now+3,___llmod@dividend+3
  9207  0036' 0E80               	movlw	128
  9208  0038' 0100               	movlb	0	; () banked
  9209  003A' 6F00'              	movwf	___llmod@divisor& (0+255),b
  9210  003C' 0E51               	movlw	81
  9211  003E' 6F00'              	movwf	(___llmod@divisor+1)& (0+255),b
  9212  0040' 0E01               	movlw	1
  9213  0042' 6F00'              	movwf	(___llmod@divisor+2)& (0+255),b
  9214  0044' 0E00               	movlw	0
  9215  0046' 6F00'              	movwf	(___llmod@divisor+3)& (0+255),b
  9216  0048' EC00' F000'        	call	___llmod	;wreg free
  9217  004C' C000' F02E'        	movff	?___llmod,light_task@temp
  9218  0050' C001' F02F'        	movff	?___llmod+1,light_task@temp+1
  9219  0054' C002' F030'        	movff	?___llmod+2,light_task@temp+2
  9220  0058' C003' F031'        	movff	?___llmod+3,light_task@temp+3
  9221                           
  9222                           ;PIC18F27J53-killifish_light05.c: 238: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  9223  005C' 0100               	movlb	0	; () banked
  9224  005E' 5100'              	movf	(light_task@temp+3)& (0+255),w,b
  9225  0060' 0100               	movlb	0	; () banked
  9226  0062' 1100'              	iorwf	(light_task@temp+2)& (0+255),w,b
  9227  0064' E108               	bnz	u10040
  9228  0066' 0EC1               	movlw	193
  9229  0068' 0100               	movlb	0	; () banked
  9230  006A' 5D00'              	subwf	light_task@temp& (0+255),w,b
  9231  006C' 0EA8               	movlw	168
  9232  006E' 0100               	movlb	0	; () banked
  9233  0070' 5900'              	subwfb	(light_task@temp+1)& (0+255),w,b
  9234  0072' A0D8               	btfss	status,0,c
  9235  0074' D026               	goto	l9651
  9236  0076'                    u10040:
  9237                           
  9238                           ; BSR set to: 0
  9239  0076' C02E' F028'        	movff	light_task@temp,??_light_task
  9240  007A' C02F' F029'        	movff	light_task@temp+1,??_light_task+1
  9241  007E' C030' F02A'        	movff	light_task@temp+2,??_light_task+2
  9242  0082' C031' F02B'        	movff	light_task@temp+3,??_light_task+3
  9243  0086' 0100               	movlb	0	; () banked
  9244  0088' 1F00'              	comf	??_light_task& (0+255),f,b
  9245  008A' 1F00'              	comf	(??_light_task+1)& (0+255),f,b
  9246  008C' 1F00'              	comf	(??_light_task+2)& (0+255),f,b
  9247  008E' 1F00'              	comf	(??_light_task+3)& (0+255),f,b
  9248  0090' 2B00'              	incf	??_light_task& (0+255),f,b
  9249  0092' 0E00               	movlw	0
  9250  0094' 2300'              	addwfc	(??_light_task+1)& (0+255),f,b
  9251  0096' 2300'              	addwfc	(??_light_task+2)& (0+255),f,b
  9252  0098' 2300'              	addwfc	(??_light_task+3)& (0+255),f,b
  9253  009A' 0E80               	movlw	128
  9254  009C' 0100               	movlb	0	; () banked
  9255  009E' 2500'              	addwf	??_light_task& (0+255),w,b
  9256  00A0' 0100               	movlb	0	; () banked
  9257  00A2' 6F00'              	movwf	light_task@temp& (0+255),b
  9258  00A4' 0E51               	movlw	81
  9259  00A6' 0100               	movlb	0	; () banked
  9260  00A8' 2100'              	addwfc	(??_light_task+1)& (0+255),w,b
  9261  00AA' 0100               	movlb	0	; () banked
  9262  00AC' 6F00'              	movwf	(light_task@temp+1)& (0+255),b
  9263  00AE' 0E01               	movlw	1
  9264  00B0' 0100               	movlb	0	; () banked
  9265  00B2' 2100'              	addwfc	(??_light_task+2)& (0+255),w,b
  9266  00B4' 0100               	movlb	0	; () banked
  9267  00B6' 6F00'              	movwf	(light_task@temp+2)& (0+255),b
  9268  00B8' 0E00               	movlw	0
  9269  00BA' 0100               	movlb	0	; () banked
  9270  00BC' 2100'              	addwfc	(??_light_task+3)& (0+255),w,b
  9271  00BE' 0100               	movlb	0	; () banked
  9272  00C0' 6F00'              	movwf	(light_task@temp+3)& (0+255),b
  9273  00C2'                    l9651:
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;PIC18F27J53-killifish_light05.c: 239: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  9277  00C2' 90D8               	bcf	status,0,c
  9278  00C4' 0100               	movlb	0	; () banked
  9279  00C6' 3500'              	rlcf	light_task@temp& (0+255),w,b
  9280  00C8' 0100               	movlb	0	; () banked
  9281  00CA' 6F00'              	movwf	___lmul@multiplier& (0+255),b
  9282  00CC' 0100               	movlb	0	; () banked
  9283  00CE' 3500'              	rlcf	(light_task@temp+1)& (0+255),w,b
  9284  00D0' 0100               	movlb	0	; () banked
  9285  00D2' 6F00'              	movwf	(___lmul@multiplier+1)& (0+255),b
  9286  00D4' 0100               	movlb	0	; () banked
  9287  00D6' 3500'              	rlcf	(light_task@temp+2)& (0+255),w,b
  9288  00D8' 0100               	movlb	0	; () banked
  9289  00DA' 6F00'              	movwf	(___lmul@multiplier+2)& (0+255),b
  9290  00DC' 0100               	movlb	0	; () banked
  9291  00DE' 3500'              	rlcf	(light_task@temp+3)& (0+255),w,b
  9292  00E0' 0100               	movlb	0	; () banked
  9293  00E2' 6F00'              	movwf	(___lmul@multiplier+3)& (0+255),b
  9294  00E4' 0EFA               	movlw	250
  9295  00E6' 0100               	movlb	0	; () banked
  9296  00E8' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
  9297  00EA' 0E00               	movlw	0
  9298  00EC' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
  9299  00EE' 0E00               	movlw	0
  9300  00F0' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
  9301  00F2' 0E00               	movlw	0
  9302  00F4' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
  9303  00F6' EC00' F000'        	call	___lmul	;wreg free
  9304  00FA' C00D' F000'        	movff	?___lmul,___lldiv@dividend
  9305  00FE' C00E' F001'        	movff	?___lmul+1,___lldiv@dividend+1
  9306  0102' C00F' F002'        	movff	?___lmul+2,___lldiv@dividend+2
  9307  0106' C010' F003'        	movff	?___lmul+3,___lldiv@dividend+3
  9308  010A' 0E80               	movlw	128
  9309  010C' 0100               	movlb	0	; () banked
  9310  010E' 6F00'              	movwf	___lldiv@divisor& (0+255),b
  9311  0110' 0E51               	movlw	81
  9312  0112' 6F00'              	movwf	(___lldiv@divisor+1)& (0+255),b
  9313  0114' 0E01               	movlw	1
  9314  0116' 6F00'              	movwf	(___lldiv@divisor+2)& (0+255),b
  9315  0118' 0E00               	movlw	0
  9316  011A' 6F00'              	movwf	(___lldiv@divisor+3)& (0+255),b
  9317  011C' EC00' F000'        	call	___lldiv	;wreg free
  9318  0120' C000' F02E'        	movff	?___lldiv,light_task@temp
  9319  0124' C001' F02F'        	movff	?___lldiv+1,light_task@temp+1
  9320  0128' C002' F030'        	movff	?___lldiv+2,light_task@temp+2
  9321  012C' C003' F031'        	movff	?___lldiv+3,light_task@temp+3
  9322                           
  9323                           ;PIC18F27J53-killifish_light05.c: 240: PWM_set(3, temp);
  9324  0130' C02E' F015'        	movff	light_task@temp,PWM_set@value
  9325  0134' C02F' F016'        	movff	light_task@temp+1,PWM_set@value+1
  9326  0138' 0E03               	movlw	3
  9327  013A' EC00' F000'        	call	_PWM_set
  9328                           
  9329                           ;PIC18F27J53-killifish_light05.c: 241: for (i = 0; i < 3; i++) {
  9330  013E' 0E00               	movlw	0
  9331  0140' 0100               	movlb	0	; () banked
  9332  0142' 6F00'              	movwf	light_task@i& (0+255),b
  9333  0144'                    l9657:
  9334                           
  9335                           ; BSR set to: 0
  9336  0144' 0E02               	movlw	2
  9337  0146' 0100               	movlb	0	; () banked
  9338  0148' 6500'              	cpfsgt	light_task@i& (0+255),b
  9339  014A' D001               	goto	l9661
  9340  014C' D00B               	goto	l1582
  9341  014E'                    l9661:
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;PIC18F27J53-killifish_light05.c: 242: PWM_set(i, temp);
  9345  014E' C02E' F015'        	movff	light_task@temp,PWM_set@value
  9346  0152' C02F' F016'        	movff	light_task@temp+1,PWM_set@value+1
  9347  0156' 0100               	movlb	0	; () banked
  9348  0158' 5100'              	movf	light_task@i& (0+255),w,b
  9349  015A' EC00' F000'        	call	_PWM_set
  9350  015E' 0100               	movlb	0	; () banked
  9351  0160' 2B00'              	incf	light_task@i& (0+255),f,b
  9352  0162' D7F0               	goto	l9657
  9353  0164'                    l1582:
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;PIC18F27J53-killifish_light05.c: 243: }
  9357                           ;PIC18F27J53-killifish_light05.c: 244: }
  9358                           ;PIC18F27J53-killifish_light05.c: 245: }
  9359                           ;PIC18F27J53-killifish_light05.c: 246: if (sw_G.flag.press) {
  9360  0164' 0101               	movlb	1	; () banked
  9361  0166' A100'              	btfss	(_sw_G+2)& (0+255),0,b
  9362  0168' D02A               	goto	l1587
  9363                           
  9364                           ; BSR set to: 1
  9365                           ;PIC18F27J53-killifish_light05.c: 247: sw_G.flags = 0;
  9366  016A' 0E00               	movlw	0
  9367  016C' 0101               	movlb	1	; () banked
  9368  016E' 6F00'              	movwf	(_sw_G+3)& (0+255),b
  9369  0170' 0E00               	movlw	0
  9370  0172' 6F00'              	movwf	(_sw_G+2)& (0+255),b
  9371                           
  9372                           ;PIC18F27J53-killifish_light05.c: 248: light_mode = COMMAND_mode;
  9373  0174' 0E02               	movlw	2
  9374  0176' 0100               	movlb	0	; () banked
  9375  0178' 6F00'              	movwf	_light_mode& (0+255),b
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;PIC18F27J53-killifish_light05.c: 249: static uint8_t n = 0;
  9379                           ;PIC18F27J53-killifish_light05.c: 250: if (n >= 3) n = 0;
  9380  017A' 0E02               	movlw	2
  9381  017C' 0100               	movlb	0	; () banked
  9382  017E' 6500'              	cpfsgt	light_task@n& (0+255),b
  9383  0180' D004               	goto	l9673
  9384                           
  9385                           ; BSR set to: 0
  9386  0182' 0E00               	movlw	0
  9387  0184' 0100               	movlb	0	; () banked
  9388  0186' 6F00'              	movwf	light_task@n& (0+255),b
  9389  0188' D002               	goto	l9675
  9390  018A'                    l9673:
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;PIC18F27J53-killifish_light05.c: 251: else n++;
  9394  018A' 0100               	movlb	0	; () banked
  9395  018C' 2B00'              	incf	light_task@n& (0+255),f,b
  9396  018E'                    l9675:
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;PIC18F27J53-killifish_light05.c: 252: uint8_t value = 250 / 3 * n;
  9400  018E' 0100               	movlb	0	; () banked
  9401  0190' 5100'              	movf	light_task@n& (0+255),w,b
  9402  0192' 0D53               	mullw	83
  9403  0194' CFF3 F02C'         	movff	prodl,light_task@value
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;PIC18F27J53-killifish_light05.c: 253: for (i = 0; i < 3; i++) {
  9407  0198' 0E00               	movlw	0
  9408  019A' 0100               	movlb	0	; () banked
  9409  019C' 6F00'              	movwf	light_task@i& (0+255),b
  9410  019E'                    l9679:
  9411                           
  9412                           ; BSR set to: 0
  9413  019E' 0E02               	movlw	2
  9414  01A0' 0100               	movlb	0	; () banked
  9415  01A2' 6500'              	cpfsgt	light_task@i& (0+255),b
  9416  01A4' D001               	goto	l9683
  9417  01A6' D00B               	goto	l1587
  9418  01A8'                    l9683:
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;PIC18F27J53-killifish_light05.c: 254: PWM_set(i, value);
  9422  01A8' C02C' F015'        	movff	light_task@value,PWM_set@value
  9423  01AC' 0100               	movlb	0	; () banked
  9424  01AE' 6B00'              	clrf	(PWM_set@value+1)& (0+255),b
  9425  01B0' 0100               	movlb	0	; () banked
  9426  01B2' 5100'              	movf	light_task@i& (0+255),w,b
  9427  01B4' EC00' F000'        	call	_PWM_set
  9428  01B8' 0100               	movlb	0	; () banked
  9429  01BA' 2B00'              	incf	light_task@i& (0+255),f,b
  9430  01BC' D7F0               	goto	l9679
  9431  01BE'                    l1587:
  9432                           
  9433                           ;PIC18F27J53-killifish_light05.c: 255: }
  9434                           ;PIC18F27J53-killifish_light05.c: 256: }
  9435                           ;PIC18F27J53-killifish_light05.c: 257: if (sw_B.flag.press) {
  9436  01BE' 0101               	movlb	1	; () banked
  9437  01C0' A100'              	btfss	(_sw_B+2)& (0+255),0,b
  9438  01C2' D01E               	goto	l9701
  9439                           
  9440                           ; BSR set to: 1
  9441                           ;PIC18F27J53-killifish_light05.c: 258: sw_B.flags = 0;
  9442  01C4' 0E00               	movlw	0
  9443  01C6' 0101               	movlb	1	; () banked
  9444  01C8' 6F00'              	movwf	(_sw_B+3)& (0+255),b
  9445  01CA' 0E00               	movlw	0
  9446  01CC' 6F00'              	movwf	(_sw_B+2)& (0+255),b
  9447                           
  9448                           ;PIC18F27J53-killifish_light05.c: 259: light_mode = COMMAND_mode;
  9449  01CE' 0E02               	movlw	2
  9450  01D0' 0100               	movlb	0	; () banked
  9451  01D2' 6F00'              	movwf	_light_mode& (0+255),b
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;PIC18F27J53-killifish_light05.c: 260: static uint8_t n = 0;
  9455                           ;PIC18F27J53-killifish_light05.c: 261: if (n >= 3) n = 0;
  9456  01D4' 0E02               	movlw	2
  9457  01D6' 0100               	movlb	0	; () banked
  9458  01D8' 6500'              	cpfsgt	light_task@_6017& (0+255),b
  9459  01DA' D004               	goto	l9695
  9460                           
  9461                           ; BSR set to: 0
  9462  01DC' 0E00               	movlw	0
  9463  01DE' 0100               	movlb	0	; () banked
  9464  01E0' 6F00'              	movwf	light_task@_6017& (0+255),b
  9465  01E2' D002               	goto	l9697
  9466  01E4'                    l9695:
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;PIC18F27J53-killifish_light05.c: 262: else n++;
  9470  01E4' 0100               	movlb	0	; () banked
  9471  01E6' 2B00'              	incf	light_task@_6017& (0+255),f,b
  9472  01E8'                    l9697:
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;PIC18F27J53-killifish_light05.c: 263: uint8_t value = 250 / 3 * n;
  9476  01E8' 0100               	movlb	0	; () banked
  9477  01EA' 5100'              	movf	light_task@_6017& (0+255),w,b
  9478  01EC' 0D53               	mullw	83
  9479  01EE' CFF3 F02D'         	movff	prodl,light_task@value_6018
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;PIC18F27J53-killifish_light05.c: 264: PWM_set(3, value);
  9483  01F2' C02D' F015'        	movff	light_task@value_6018,PWM_set@value
  9484  01F6' 0100               	movlb	0	; () banked
  9485  01F8' 6B00'              	clrf	(PWM_set@value+1)& (0+255),b
  9486  01FA' 0E03               	movlw	3
  9487  01FC' EC00' F000'        	call	_PWM_set
  9488  0200'                    l9701:
  9489                           
  9490                           ;PIC18F27J53-killifish_light05.c: 265: }
  9491                           ;PIC18F27J53-killifish_light05.c: 266: if (sw_R.flag.press) {
  9492  0200' 0101               	movlb	1	; () banked
  9493  0202' A100'              	btfss	(_sw_R+2)& (0+255),0,b
  9494  0204' 0012               	return	
  9495                           
  9496                           ; BSR set to: 1
  9497                           ;PIC18F27J53-killifish_light05.c: 267: sw_R.flags = 0;
  9498  0206' 0E00               	movlw	0
  9499  0208' 0101               	movlb	1	; () banked
  9500  020A' 6F00'              	movwf	(_sw_R+3)& (0+255),b
  9501  020C' 0E00               	movlw	0
  9502  020E' 6F00'              	movwf	(_sw_R+2)& (0+255),b
  9503                           
  9504                           ;PIC18F27J53-killifish_light05.c: 268: light_mode = TIME_SYNC_mode;
  9505  0210' 0E00               	movlw	0
  9506  0212' 0100               	movlb	0	; () banked
  9507  0214' 6F00'              	movwf	_light_mode& (0+255),b
  9508  0216' 0012               	return	
  9509  0218'                    __end_of_light_task:
  9510                           	opt stack 0
  9511                           tblptru	equ	0xFF8
  9512                           tblptrh	equ	0xFF7
  9513                           tblptrl	equ	0xFF6
  9514                           tablat	equ	0xFF5
  9515                           prodh	equ	0xFF4
  9516                           prodl	equ	0xFF3
  9517                           intcon	equ	0xFF2
  9518                           intcon2	equ	0xFF1
  9519                           indf0	equ	0xFEF
  9520                           postinc0	equ	0xFEE
  9521                           fsr0h	equ	0xFEA
  9522                           fsr0l	equ	0xFE9
  9523                           wreg	equ	0xFE8
  9524                           postinc1	equ	0xFE6
  9525                           postdec1	equ	0xFE5
  9526                           fsr1h	equ	0xFE2
  9527                           fsr1l	equ	0xFE1
  9528                           indf2	equ	0xFDF
  9529                           postinc2	equ	0xFDE
  9530                           postdec2	equ	0xFDD
  9531                           fsr2h	equ	0xFDA
  9532                           fsr2l	equ	0xFD9
  9533                           status	equ	0xFD8
  9534                           
  9535 ;; *************** function ___llmod *****************
  9536 ;; Defined at:
  9537 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  dividend        4    0[BANK0 ] unsigned long 
  9540 ;;  divisor         4    4[BANK0 ] unsigned long 
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;  counter         1   31[COMRAM] unsigned char 
  9543 ;; Return value:  Size  Location     Type
  9544 ;;                  4    0[BANK0 ] unsigned long 
  9545 ;; Registers used:
  9546 ;;		wreg, status,2, status,0
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 0/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9552 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9555 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9556 ;;Total ram usage:        9 bytes
  9557 ;; Hardware stack levels used:    1
  9558 ;; Hardware stack levels required when called:    4
  9559 ;; This function calls:
  9560 ;;		Nothing
  9561 ;; This function is called by:
  9562 ;;		_light_task
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565                           
  9566                           	psect	text35
  9567  0000'                    __ptext35:
  9568                           	opt stack 0
  9569  0000'                    ___llmod:
  9570                           	opt stack 25
  9571                           
  9572                           ;incstack = 0
  9573  0000' 0100               	movlb	0	; () banked
  9574  0002' 5100'              	movf	___llmod@divisor& (0+255),w,b
  9575  0004' 0100               	movlb	0	; () banked
  9576  0006' 1100'              	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9577  0008' 0100               	movlb	0	; () banked
  9578  000A' 1100'              	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9579  000C' 0100               	movlb	0	; () banked
  9580  000E' 1100'              	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9581  0010' B4D8               	btfsc	status,2,c
  9582  0012' D037               	goto	l2058
  9583                           
  9584                           ; BSR set to: 0
  9585  0014' 0E01               	movlw	1
  9586  0016' 6E1F'              	movwf	___llmod@counter,c
  9587  0018' D007               	goto	l9395
  9588  001A'                    l9393:
  9589                           
  9590                           ; BSR set to: 0
  9591  001A' 0100               	movlb	0	; () banked
  9592  001C' 90D8               	bcf	status,0,c
  9593  001E' 3700'              	rlcf	___llmod@divisor& (0+255),f,b
  9594  0020' 3700'              	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9595  0022' 3700'              	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9596  0024' 3700'              	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9597  0026' 2A1F'              	incf	___llmod@counter,f,c
  9598  0028'                    l9395:
  9599                           
  9600                           ; BSR set to: 0
  9601  0028' 0100               	movlb	0	; () banked
  9602  002A' AF00'              	btfss	(___llmod@divisor+3)& (0+255),7,b
  9603  002C' D7F6               	goto	l9393
  9604  002E'                    l9397:
  9605                           
  9606                           ; BSR set to: 0
  9607  002E' 0100               	movlb	0	; () banked
  9608  0030' 5100'              	movf	___llmod@divisor& (0+255),w,b
  9609  0032' 0100               	movlb	0	; () banked
  9610  0034' 5D00'              	subwf	___llmod@dividend& (0+255),w,b
  9611  0036' 0100               	movlb	0	; () banked
  9612  0038' 5100'              	movf	(___llmod@divisor+1)& (0+255),w,b
  9613  003A' 0100               	movlb	0	; () banked
  9614  003C' 5900'              	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9615  003E' 0100               	movlb	0	; () banked
  9616  0040' 5100'              	movf	(___llmod@divisor+2)& (0+255),w,b
  9617  0042' 0100               	movlb	0	; () banked
  9618  0044' 5900'              	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9619  0046' 0100               	movlb	0	; () banked
  9620  0048' 5100'              	movf	(___llmod@divisor+3)& (0+255),w,b
  9621  004A' 0100               	movlb	0	; () banked
  9622  004C' 5900'              	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9623  004E' A0D8               	btfss	status,0,c
  9624  0050' D010               	goto	l9401
  9625                           
  9626                           ; BSR set to: 0
  9627  0052' 0100               	movlb	0	; () banked
  9628  0054' 5100'              	movf	___llmod@divisor& (0+255),w,b
  9629  0056' 0100               	movlb	0	; () banked
  9630  0058' 5F00'              	subwf	___llmod@dividend& (0+255),f,b
  9631  005A' 0100               	movlb	0	; () banked
  9632  005C' 5100'              	movf	(___llmod@divisor+1)& (0+255),w,b
  9633  005E' 0100               	movlb	0	; () banked
  9634  0060' 5B00'              	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9635  0062' 0100               	movlb	0	; () banked
  9636  0064' 5100'              	movf	(___llmod@divisor+2)& (0+255),w,b
  9637  0066' 0100               	movlb	0	; () banked
  9638  0068' 5B00'              	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9639  006A' 0100               	movlb	0	; () banked
  9640  006C' 5100'              	movf	(___llmod@divisor+3)& (0+255),w,b
  9641  006E' 0100               	movlb	0	; () banked
  9642  0070' 5B00'              	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9643  0072'                    l9401:
  9644                           
  9645                           ; BSR set to: 0
  9646  0072' 0100               	movlb	0	; () banked
  9647  0074' 90D8               	bcf	status,0,c
  9648  0076' 3300'              	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9649  0078' 3300'              	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9650  007A' 3300'              	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9651  007C' 3300'              	rrcf	___llmod@divisor& (0+255),f,b
  9652                           
  9653                           ; BSR set to: 0
  9654  007E' 2E1F'              	decfsz	___llmod@counter,f,c
  9655  0080' D7D6               	goto	l9397
  9656  0082'                    l2058:
  9657                           
  9658                           ; BSR set to: 0
  9659  0082' C000' F000'        	movff	___llmod@dividend,?___llmod
  9660  0086' C001' F001'        	movff	___llmod@dividend+1,?___llmod+1
  9661  008A' C002' F002'        	movff	___llmod@dividend+2,?___llmod+2
  9662  008E' C003' F003'        	movff	___llmod@dividend+3,?___llmod+3
  9663                           
  9664                           ; BSR set to: 0
  9665  0092' 0012               	return		;funcret
  9666  0094'                    __end_of___llmod:
  9667                           	opt stack 0
  9668                           tblptru	equ	0xFF8
  9669                           tblptrh	equ	0xFF7
  9670                           tblptrl	equ	0xFF6
  9671                           tablat	equ	0xFF5
  9672                           prodh	equ	0xFF4
  9673                           prodl	equ	0xFF3
  9674                           intcon	equ	0xFF2
  9675                           intcon2	equ	0xFF1
  9676                           indf0	equ	0xFEF
  9677                           postinc0	equ	0xFEE
  9678                           fsr0h	equ	0xFEA
  9679                           fsr0l	equ	0xFE9
  9680                           wreg	equ	0xFE8
  9681                           postinc1	equ	0xFE6
  9682                           postdec1	equ	0xFE5
  9683                           fsr1h	equ	0xFE2
  9684                           fsr1l	equ	0xFE1
  9685                           indf2	equ	0xFDF
  9686                           postinc2	equ	0xFDE
  9687                           postdec2	equ	0xFDD
  9688                           fsr2h	equ	0xFDA
  9689                           fsr2l	equ	0xFD9
  9690                           status	equ	0xFD8
  9691                           
  9692 ;; *************** function ___lldiv *****************
  9693 ;; Defined at:
  9694 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  9695 ;; Parameters:    Size  Location     Type
  9696 ;;  dividend        4    0[BANK0 ] unsigned long 
  9697 ;;  divisor         4    4[BANK0 ] unsigned long 
  9698 ;; Auto vars:     Size  Location     Type
  9699 ;;  quotient        4    8[BANK0 ] unsigned long 
  9700 ;;  counter         1   12[BANK0 ] unsigned char 
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  4    0[BANK0 ] unsigned long 
  9703 ;; Registers used:
  9704 ;;		wreg, status,2, status,0
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9710 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9711 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9713 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9714 ;;Total ram usage:       13 bytes
  9715 ;; Hardware stack levels used:    1
  9716 ;; Hardware stack levels required when called:    4
  9717 ;; This function calls:
  9718 ;;		Nothing
  9719 ;; This function is called by:
  9720 ;;		_get_quot_rem
  9721 ;;		_light_task
  9722 ;;		_CTMU_read
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           	psect	text36
  9727  0000'                    __ptext36:
  9728                           	opt stack 0
  9729  0000'                    ___lldiv:
  9730                           	opt stack 19
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;incstack = 0
  9734  0000' 0E00               	movlw	0
  9735  0002' 0100               	movlb	0	; () banked
  9736  0004' 6F00'              	movwf	___lldiv@quotient& (0+255),b
  9737  0006' 0E00               	movlw	0
  9738  0008' 6F00'              	movwf	(___lldiv@quotient+1)& (0+255),b
  9739  000A' 0E00               	movlw	0
  9740  000C' 6F00'              	movwf	(___lldiv@quotient+2)& (0+255),b
  9741  000E' 0E00               	movlw	0
  9742  0010' 6F00'              	movwf	(___lldiv@quotient+3)& (0+255),b
  9743                           
  9744                           ; BSR set to: 0
  9745  0012' 0100               	movlb	0	; () banked
  9746  0014' 5100'              	movf	___lldiv@divisor& (0+255),w,b
  9747  0016' 0100               	movlb	0	; () banked
  9748  0018' 1100'              	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9749  001A' 0100               	movlb	0	; () banked
  9750  001C' 1100'              	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9751  001E' 0100               	movlb	0	; () banked
  9752  0020' 1100'              	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9753  0022' B4D8               	btfsc	status,2,c
  9754  0024' D042               	goto	l2048
  9755                           
  9756                           ; BSR set to: 0
  9757  0026' 0E01               	movlw	1
  9758  0028' 0100               	movlb	0	; () banked
  9759  002A' 6F00'              	movwf	___lldiv@counter& (0+255),b
  9760  002C' D008               	goto	l8623
  9761  002E'                    l8621:
  9762                           
  9763                           ; BSR set to: 0
  9764  002E' 0100               	movlb	0	; () banked
  9765  0030' 90D8               	bcf	status,0,c
  9766  0032' 3700'              	rlcf	___lldiv@divisor& (0+255),f,b
  9767  0034' 3700'              	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9768  0036' 3700'              	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9769  0038' 3700'              	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9770  003A' 0100               	movlb	0	; () banked
  9771  003C' 2B00'              	incf	___lldiv@counter& (0+255),f,b
  9772  003E'                    l8623:
  9773                           
  9774                           ; BSR set to: 0
  9775  003E' 0100               	movlb	0	; () banked
  9776  0040' AF00'              	btfss	(___lldiv@divisor+3)& (0+255),7,b
  9777  0042' D7F5               	goto	l8621
  9778  0044'                    l8625:
  9779                           
  9780                           ; BSR set to: 0
  9781  0044' 0100               	movlb	0	; () banked
  9782  0046' 90D8               	bcf	status,0,c
  9783  0048' 3700'              	rlcf	___lldiv@quotient& (0+255),f,b
  9784  004A' 3700'              	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9785  004C' 3700'              	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9786  004E' 3700'              	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9787                           
  9788                           ; BSR set to: 0
  9789  0050' 0100               	movlb	0	; () banked
  9790  0052' 5100'              	movf	___lldiv@divisor& (0+255),w,b
  9791  0054' 0100               	movlb	0	; () banked
  9792  0056' 5D00'              	subwf	___lldiv@dividend& (0+255),w,b
  9793  0058' 0100               	movlb	0	; () banked
  9794  005A' 5100'              	movf	(___lldiv@divisor+1)& (0+255),w,b
  9795  005C' 0100               	movlb	0	; () banked
  9796  005E' 5900'              	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9797  0060' 0100               	movlb	0	; () banked
  9798  0062' 5100'              	movf	(___lldiv@divisor+2)& (0+255),w,b
  9799  0064' 0100               	movlb	0	; () banked
  9800  0066' 5900'              	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9801  0068' 0100               	movlb	0	; () banked
  9802  006A' 5100'              	movf	(___lldiv@divisor+3)& (0+255),w,b
  9803  006C' 0100               	movlb	0	; () banked
  9804  006E' 5900'              	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9805  0070' A0D8               	btfss	status,0,c
  9806  0072' D012               	goto	l8633
  9807                           
  9808                           ; BSR set to: 0
  9809  0074' 0100               	movlb	0	; () banked
  9810  0076' 5100'              	movf	___lldiv@divisor& (0+255),w,b
  9811  0078' 0100               	movlb	0	; () banked
  9812  007A' 5F00'              	subwf	___lldiv@dividend& (0+255),f,b
  9813  007C' 0100               	movlb	0	; () banked
  9814  007E' 5100'              	movf	(___lldiv@divisor+1)& (0+255),w,b
  9815  0080' 0100               	movlb	0	; () banked
  9816  0082' 5B00'              	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9817  0084' 0100               	movlb	0	; () banked
  9818  0086' 5100'              	movf	(___lldiv@divisor+2)& (0+255),w,b
  9819  0088' 0100               	movlb	0	; () banked
  9820  008A' 5B00'              	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9821  008C' 0100               	movlb	0	; () banked
  9822  008E' 5100'              	movf	(___lldiv@divisor+3)& (0+255),w,b
  9823  0090' 0100               	movlb	0	; () banked
  9824  0092' 5B00'              	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9825                           
  9826                           ; BSR set to: 0
  9827  0094' 0100               	movlb	0	; () banked
  9828  0096' 8100'              	bsf	___lldiv@quotient& (0+255),0,b
  9829  0098'                    l8633:
  9830                           
  9831                           ; BSR set to: 0
  9832  0098' 0100               	movlb	0	; () banked
  9833  009A' 90D8               	bcf	status,0,c
  9834  009C' 3300'              	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9835  009E' 3300'              	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9836  00A0' 3300'              	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9837  00A2' 3300'              	rrcf	___lldiv@divisor& (0+255),f,b
  9838                           
  9839                           ; BSR set to: 0
  9840  00A4' 0100               	movlb	0	; () banked
  9841  00A6' 2F00'              	decfsz	___lldiv@counter& (0+255),f,b
  9842  00A8' D7CD               	goto	l8625
  9843  00AA'                    l2048:
  9844                           
  9845                           ; BSR set to: 0
  9846  00AA' C008' F000'        	movff	___lldiv@quotient,?___lldiv
  9847  00AE' C009' F001'        	movff	___lldiv@quotient+1,?___lldiv+1
  9848  00B2' C00A' F002'        	movff	___lldiv@quotient+2,?___lldiv+2
  9849  00B6' C00B' F003'        	movff	___lldiv@quotient+3,?___lldiv+3
  9850                           
  9851                           ; BSR set to: 0
  9852  00BA' 0012               	return		;funcret
  9853  00BC'                    __end_of___lldiv:
  9854                           	opt stack 0
  9855                           tblptru	equ	0xFF8
  9856                           tblptrh	equ	0xFF7
  9857                           tblptrl	equ	0xFF6
  9858                           tablat	equ	0xFF5
  9859                           prodh	equ	0xFF4
  9860                           prodl	equ	0xFF3
  9861                           intcon	equ	0xFF2
  9862                           intcon2	equ	0xFF1
  9863                           indf0	equ	0xFEF
  9864                           postinc0	equ	0xFEE
  9865                           fsr0h	equ	0xFEA
  9866                           fsr0l	equ	0xFE9
  9867                           wreg	equ	0xFE8
  9868                           postinc1	equ	0xFE6
  9869                           postdec1	equ	0xFE5
  9870                           fsr1h	equ	0xFE2
  9871                           fsr1l	equ	0xFE1
  9872                           indf2	equ	0xFDF
  9873                           postinc2	equ	0xFDE
  9874                           postdec2	equ	0xFDD
  9875                           fsr2h	equ	0xFDA
  9876                           fsr2l	equ	0xFD9
  9877                           status	equ	0xFD8
  9878                           
  9879 ;; *************** function _PWM_set *****************
  9880 ;; Defined at:
  9881 ;;		line 121 in file "PIC18F27J53-killifish_light05.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;  color           1    wreg     unsigned char 
  9884 ;;  value           2   21[BANK0 ] unsigned int 
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;  color           1   25[BANK0 ] unsigned char 
  9887 ;; Return value:  Size  Location     Type
  9888 ;;		None               void
  9889 ;; Registers used:
  9890 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9896 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9897 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9898 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9899 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9900 ;;Total ram usage:        5 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:    5
  9903 ;; This function calls:
  9904 ;;		___lwdiv
  9905 ;;		___wmul
  9906 ;; This function is called by:
  9907 ;;		_terminal_operation
  9908 ;;		_light_task
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           	psect	text37
  9913  0000'                    __ptext37:
  9914                           	opt stack 0
  9915  0000'                    _PWM_set:
  9916                           	opt stack 23
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;incstack = 0
  9920                           ;PWM_set@color stored from wreg
  9921  0000' 0100               	movlb	0	; () banked
  9922  0002' 6F00'              	movwf	PWM_set@color& (0+255),b
  9923                           
  9924                           ;PIC18F27J53-killifish_light05.c: 122: value = value * value / 250;
  9925  0004' C015' F000'        	movff	PWM_set@value,___wmul@multiplier
  9926  0008' C016' F001'        	movff	PWM_set@value+1,___wmul@multiplier+1
  9927  000C' C015' F002'        	movff	PWM_set@value,___wmul@multiplicand
  9928  0010' C016' F003'        	movff	PWM_set@value+1,___wmul@multiplicand+1
  9929  0014' EC00' F000'        	call	___wmul	;wreg free
  9930  0018' C000' F006'        	movff	?___wmul,___lwdiv@dividend
  9931  001C' C001' F007'        	movff	?___wmul+1,___lwdiv@dividend+1
  9932  0020' 0E00               	movlw	0
  9933  0022' 0100               	movlb	0	; () banked
  9934  0024' 6F00'              	movwf	(___lwdiv@divisor+1)& (0+255),b
  9935  0026' 0EFA               	movlw	250
  9936  0028' 6F00'              	movwf	___lwdiv@divisor& (0+255),b
  9937  002A' EC00' F000'        	call	___lwdiv	;wreg free
  9938  002E' C006' F015'        	movff	?___lwdiv,PWM_set@value
  9939  0032' C007' F016'        	movff	?___lwdiv+1,PWM_set@value+1
  9940                           
  9941                           ;PIC18F27J53-killifish_light05.c: 123: value = value * value / 250;
  9942  0036' C015' F000'        	movff	PWM_set@value,___wmul@multiplier
  9943  003A' C016' F001'        	movff	PWM_set@value+1,___wmul@multiplier+1
  9944  003E' C015' F002'        	movff	PWM_set@value,___wmul@multiplicand
  9945  0042' C016' F003'        	movff	PWM_set@value+1,___wmul@multiplicand+1
  9946  0046' EC00' F000'        	call	___wmul	;wreg free
  9947  004A' C000' F006'        	movff	?___wmul,___lwdiv@dividend
  9948  004E' C001' F007'        	movff	?___wmul+1,___lwdiv@dividend+1
  9949  0052' 0E00               	movlw	0
  9950  0054' 0100               	movlb	0	; () banked
  9951  0056' 6F00'              	movwf	(___lwdiv@divisor+1)& (0+255),b
  9952  0058' 0EFA               	movlw	250
  9953  005A' 6F00'              	movwf	___lwdiv@divisor& (0+255),b
  9954  005C' EC00' F000'        	call	___lwdiv	;wreg free
  9955  0060' C006' F015'        	movff	?___lwdiv,PWM_set@value
  9956  0064' C007' F016'        	movff	?___lwdiv+1,PWM_set@value+1
  9957                           
  9958                           ;PIC18F27J53-killifish_light05.c: 124: value = value * 3 / 4;
  9959  0068' C015' F000'        	movff	PWM_set@value,___wmul@multiplier
  9960  006C' C016' F001'        	movff	PWM_set@value+1,___wmul@multiplier+1
  9961  0070' 0E00               	movlw	0
  9962  0072' 0100               	movlb	0	; () banked
  9963  0074' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
  9964  0076' 0E03               	movlw	3
  9965  0078' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
  9966  007A' EC00' F000'        	call	___wmul	;wreg free
  9967  007E' 0100               	movlb	0	; () banked
  9968  0080' 90D8               	bcf	status,0,c
  9969  0082' 3300'              	rrcf	(?___wmul+1)& (0+255),f,b
  9970  0084' 3300'              	rrcf	?___wmul& (0+255),f,b
  9971  0086' 0100               	movlb	0	; () banked
  9972  0088' 90D8               	bcf	status,0,c
  9973  008A' 3300'              	rrcf	(?___wmul+1)& (0+255),f,b
  9974  008C' 3300'              	rrcf	?___wmul& (0+255),f,b
  9975  008E' C000' F015'        	movff	?___wmul,PWM_set@value
  9976  0092' C001' F016'        	movff	?___wmul+1,PWM_set@value+1
  9977                           
  9978                           ;PIC18F27J53-killifish_light05.c: 125: switch (color) {
  9979  0096' D056               	goto	l9127
  9980  0098'                    l9109:
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;PIC18F27J53-killifish_light05.c: 127: if (value < 250 / 4) {
  9984  0098' 0100               	movlb	0	; () banked
  9985  009A' 5100'              	movf	(PWM_set@value+1)& (0+255),w,b
  9986  009C' E105               	bnz	l9113
  9987  009E' 0E3E               	movlw	62
  9988  00A0' 0100               	movlb	0	; () banked
  9989  00A2' 5D00'              	subwf	PWM_set@value& (0+255),w,b
  9990  00A4' A0D8               	btfss	status,0,c
  9991  00A6' D071               	goto	l9147
  9992  00A8'                    l9113:
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;PIC18F27J53-killifish_light05.c: 130: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
  9996  00A8' C015' F017'        	movff	PWM_set@value,??_PWM_set
  9997  00AC' C016' F018'        	movff	PWM_set@value+1,??_PWM_set+1
  9998  00B0' 90D8               	bcf	status,0,c
  9999  00B2' 0100               	movlb	0	; () banked
 10000  00B4' 3700'              	rlcf	??_PWM_set& (0+255),f,b
 10001  00B6' 3700'              	rlcf	(??_PWM_set+1)& (0+255),f,b
 10002  00B8' 0E84               	movlw	132
 10003  00BA' 0100               	movlb	0	; () banked
 10004  00BC' 2500'              	addwf	??_PWM_set& (0+255),w,b
 10005  00BE' 0100               	movlb	0	; () banked
 10006  00C0' 6F00'              	movwf	___lwdiv@dividend& (0+255),b
 10007  00C2' 0EFF               	movlw	255
 10008  00C4' 0100               	movlb	0	; () banked
 10009  00C6' 2100'              	addwfc	(??_PWM_set+1)& (0+255),w,b
 10010  00C8' 0100               	movlb	0	; () banked
 10011  00CA' 6F00'              	movwf	(___lwdiv@dividend+1)& (0+255),b
 10012  00CC' 0E00               	movlw	0
 10013  00CE' 0100               	movlb	0	; () banked
 10014  00D0' 6F00'              	movwf	(___lwdiv@divisor+1)& (0+255),b
 10015  00D2' 0E03               	movlw	3
 10016  00D4' 6F00'              	movwf	___lwdiv@divisor& (0+255),b
 10017  00D6' EC00' F000'        	call	___lwdiv	;wreg free
 10018  00DA' 0E3E               	movlw	62
 10019  00DC' 0100               	movlb	0	; () banked
 10020  00DE' 2500'              	addwf	?___lwdiv& (0+255),w,b
 10021  00E0' 0100               	movlb	0	; () banked
 10022  00E2' 6F00'              	movwf	PWM_set@value& (0+255),b
 10023  00E4' 0E00               	movlw	0
 10024  00E6' 0100               	movlb	0	; () banked
 10025  00E8' 2100'              	addwfc	(?___lwdiv+1)& (0+255),w,b
 10026  00EA' D029               	goto	L1
 10027  00EC'                    l9119:
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;PIC18F27J53-killifish_light05.c: 141: if (value < 250 / 4) {
 10031  00EC' 0100               	movlb	0	; () banked
 10032  00EE' 5100'              	movf	(PWM_set@value+1)& (0+255),w,b
 10033  00F0' E105               	bnz	l9123
 10034  00F2' 0E3E               	movlw	62
 10035  00F4' 0100               	movlb	0	; () banked
 10036  00F6' 5D00'              	subwf	PWM_set@value& (0+255),w,b
 10037  00F8' A0D8               	btfss	status,0,c
 10038  00FA' D047               	goto	l9147
 10039  00FC'                    l9123:
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;PIC18F27J53-killifish_light05.c: 144: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
 10043  00FC' 0EC2               	movlw	194
 10044  00FE' 0100               	movlb	0	; () banked
 10045  0100' 2500'              	addwf	PWM_set@value& (0+255),w,b
 10046  0102' 0100               	movlb	0	; () banked
 10047  0104' 6F00'              	movwf	___wmul@multiplier& (0+255),b
 10048  0106' 0EFF               	movlw	255
 10049  0108' 0100               	movlb	0	; () banked
 10050  010A' 2100'              	addwfc	(PWM_set@value+1)& (0+255),w,b
 10051  010C' 0100               	movlb	0	; () banked
 10052  010E' 6F00'              	movwf	(___wmul@multiplier+1)& (0+255),b
 10053  0110' 0E00               	movlw	0
 10054  0112' 0100               	movlb	0	; () banked
 10055  0114' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 10056  0116' 0E03               	movlw	3
 10057  0118' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 10058  011A' EC00' F000'        	call	___wmul	;wreg free
 10059  011E' 0100               	movlb	0	; () banked
 10060  0120' 90D8               	bcf	status,0,c
 10061  0122' 3300'              	rrcf	(?___wmul+1)& (0+255),f,b
 10062  0124' 3300'              	rrcf	?___wmul& (0+255),f,b
 10063  0126' 0100               	movlb	0	; () banked
 10064  0128' 90D8               	bcf	status,0,c
 10065  012A' 3300'              	rrcf	(?___wmul+1)& (0+255),f,b
 10066  012C' 3300'              	rrcf	?___wmul& (0+255),f,b
 10067  012E' 0E3E               	movlw	62
 10068  0130' 0100               	movlb	0	; () banked
 10069  0132' 2500'              	addwf	?___wmul& (0+255),w,b
 10070  0134' 0100               	movlb	0	; () banked
 10071  0136' 6F00'              	movwf	PWM_set@value& (0+255),b
 10072  0138' 0E00               	movlw	0
 10073  013A' 0100               	movlb	0	; () banked
 10074  013C' 2100'              	addwfc	(?___wmul+1)& (0+255),w,b
 10075  013E'                    L1:
 10076  013E' 0100               	movlb	0	; () banked
 10077  0140' 6F00'              	movwf	(PWM_set@value+1)& (0+255),b
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;PIC18F27J53-killifish_light05.c: 149: }
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;PIC18F27J53-killifish_light05.c: 148: break;
 10084                           
 10085                           ;PIC18F27J53-killifish_light05.c: 147: case 3:
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;PIC18F27J53-killifish_light05.c: 145: }
 10089                           ;PIC18F27J53-killifish_light05.c: 146: break;
 10090  0142' D023               	goto	l9147
 10091  0144'                    l9127:
 10092                           
 10093                           ; BSR set to: 0
 10094  0144' 0100               	movlb	0	; () banked
 10095  0146' 5100'              	movf	PWM_set@color& (0+255),w,b
 10096                           
 10097                           ; Switch size 1, requested type "space"
 10098                           ; Number of cases is 4, Range of values is 0 to 3
 10099                           ; switch strategies available:
 10100                           ; Name         Instructions Cycles
 10101                           ; simple_byte           13     7 (average)
 10102                           ;	Chosen strategy is simple_byte
 10103  0148' 0A00               	xorlw	0	; case 0
 10104  014A' B4D8               	btfsc	status,2,c
 10105  014C' D7A5               	goto	l9109
 10106  014E' 0A01               	xorlw	1	; case 1
 10107  0150' B4D8               	btfsc	status,2,c
 10108  0152' D01B               	goto	l9147
 10109  0154' 0A03               	xorlw	3	; case 2
 10110  0156' B4D8               	btfsc	status,2,c
 10111  0158' D7C9               	goto	l9119
 10112  015A' 0A01               	xorlw	1	; case 3
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;PIC18F27J53-killifish_light05.c: 150: switch (color) {
 10116  015C' D016               	goto	l9147
 10117  015E'                    l9129:
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;PIC18F27J53-killifish_light05.c: 152: CCP1CONbits.DC1B = 0;
 10121  015E' 0ECF               	movlw	-49
 10122  0160' 16BA               	andwf	4026,f,c	;volatile
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;PIC18F27J53-killifish_light05.c: 153: CCPR1L = value;
 10126  0162' C015' FFBB         	movff	PWM_set@value,4027	;volatile
 10127                           
 10128                           ;PIC18F27J53-killifish_light05.c: 154: break;
 10129  0166' 0012               	return	
 10130  0168'                    l9133:
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;PIC18F27J53-killifish_light05.c: 156: CCP2CONbits.DC2B = 0;
 10134  0168' 0ECF               	movlw	-49
 10135  016A' 16B4               	andwf	4020,f,c	;volatile
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;PIC18F27J53-killifish_light05.c: 157: CCPR2L = value;
 10139  016C' C015' FFB5         	movff	PWM_set@value,4021	;volatile
 10140                           
 10141                           ;PIC18F27J53-killifish_light05.c: 158: break;
 10142  0170' 0012               	return	
 10143  0172'                    l9137:
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;PIC18F27J53-killifish_light05.c: 160: CCP3CONbits.DC3B = 0;
 10147  0172' 0ECF               	movlw	-49
 10148  0174' 010F               	movlb	15	; () banked
 10149  0176' 1715               	andwf	21,f,b	;volatile
 10150                           
 10151                           ; BSR set to: 15
 10152                           ;PIC18F27J53-killifish_light05.c: 161: CCPR3L = value;
 10153  0178' C015' FF16         	movff	PWM_set@value,3862	;volatile
 10154                           
 10155                           ;PIC18F27J53-killifish_light05.c: 162: break;
 10156  017C' 0012               	return	
 10157  017E'                    l9141:
 10158                           
 10159                           ;PIC18F27J53-killifish_light05.c: 164: CCP4CONbits.DC4B = 0;
 10160  017E' 0ECF               	movlw	-49
 10161  0180' 010F               	movlb	15	; () banked
 10162  0182' 1712               	andwf	18,f,b	;volatile
 10163                           
 10164                           ; BSR set to: 15
 10165                           ;PIC18F27J53-killifish_light05.c: 165: CCPR4L = value;
 10166  0184' C015' FF13         	movff	PWM_set@value,3859	;volatile
 10167                           
 10168                           ; BSR set to: 15
 10169                           ;PIC18F27J53-killifish_light05.c: 167: }
 10170                           
 10171                           ;PIC18F27J53-killifish_light05.c: 166: break;
 10172  0188' 0012               	return	
 10173  018A'                    l9147:
 10174  018A' 0100               	movlb	0	; () banked
 10175  018C' 5100'              	movf	PWM_set@color& (0+255),w,b
 10176                           
 10177                           ; Switch size 1, requested type "space"
 10178                           ; Number of cases is 4, Range of values is 0 to 3
 10179                           ; switch strategies available:
 10180                           ; Name         Instructions Cycles
 10181                           ; simple_byte           13     7 (average)
 10182                           ;	Chosen strategy is simple_byte
 10183  018E' 0A00               	xorlw	0	; case 0
 10184  0190' B4D8               	btfsc	status,2,c
 10185  0192' D7E5               	goto	l9129
 10186  0194' 0A01               	xorlw	1	; case 1
 10187  0196' B4D8               	btfsc	status,2,c
 10188  0198' D7E7               	goto	l9133
 10189  019A' 0A03               	xorlw	3	; case 2
 10190  019C' B4D8               	btfsc	status,2,c
 10191  019E' D7E9               	goto	l9137
 10192  01A0' 0A01               	xorlw	1	; case 3
 10193  01A2' A4D8               	btfss	status,2,c
 10194  01A4' 0012               	return	
 10195  01A6' D7EB               	goto	l9141
 10196  01A8'                    __end_of_PWM_set:
 10197                           	opt stack 0
 10198                           tblptru	equ	0xFF8
 10199                           tblptrh	equ	0xFF7
 10200                           tblptrl	equ	0xFF6
 10201                           tablat	equ	0xFF5
 10202                           prodh	equ	0xFF4
 10203                           prodl	equ	0xFF3
 10204                           intcon	equ	0xFF2
 10205                           intcon2	equ	0xFF1
 10206                           indf0	equ	0xFEF
 10207                           postinc0	equ	0xFEE
 10208                           fsr0h	equ	0xFEA
 10209                           fsr0l	equ	0xFE9
 10210                           wreg	equ	0xFE8
 10211                           postinc1	equ	0xFE6
 10212                           postdec1	equ	0xFE5
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           postdec2	equ	0xFDD
 10218                           fsr2h	equ	0xFDA
 10219                           fsr2l	equ	0xFD9
 10220                           status	equ	0xFD8
 10221                           
 10222 ;; *************** function ___wmul *****************
 10223 ;; Defined at:
 10224 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10227 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;  product         2    4[BANK0 ] unsigned int 
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  2    0[BANK0 ] unsigned int 
 10232 ;; Registers used:
 10233 ;;		wreg, status,2, status,0, prodl, prodh
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10239 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10242 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10243 ;;Total ram usage:        6 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:    4
 10246 ;; This function calls:
 10247 ;;		Nothing
 10248 ;; This function is called by:
 10249 ;;		_PWM_set
 10250 ;;		_terminal_operation
 10251 ;;		_sprintf
 10252 ;;		_atoi
 10253 ;; This function uses a non-reentrant model
 10254 ;;
 10255                           
 10256                           	psect	text38
 10257  0000'                    __ptext38:
 10258                           	opt stack 0
 10259  0000'                    ___wmul:
 10260                           	opt stack 20
 10261                           
 10262                           ;incstack = 0
 10263  0000' 0100               	movlb	0	; () banked
 10264  0002' 5100'              	movf	___wmul@multiplier& (0+255),w,b
 10265  0004' 0100               	movlb	0	; () banked
 10266  0006' 0300'              	mulwf	___wmul@multiplicand& (0+255),b
 10267  0008' CFF3 F004'         	movff	prodl,___wmul@product
 10268  000C' CFF4 F005'         	movff	prodh,___wmul@product+1
 10269  0010' 0100               	movlb	0	; () banked
 10270  0012' 5100'              	movf	___wmul@multiplier& (0+255),w,b
 10271  0014' 0100               	movlb	0	; () banked
 10272  0016' 0300'              	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10273  0018' 50F3               	movf	prodl,w,c
 10274  001A' 0100               	movlb	0	; () banked
 10275  001C' 2700'              	addwf	(___wmul@product+1)& (0+255),f,b
 10276  001E' 0100               	movlb	0	; () banked
 10277  0020' 5100'              	movf	(___wmul@multiplier+1)& (0+255),w,b
 10278  0022' 0100               	movlb	0	; () banked
 10279  0024' 0300'              	mulwf	___wmul@multiplicand& (0+255),b
 10280  0026' 50F3               	movf	prodl,w,c
 10281  0028' 0100               	movlb	0	; () banked
 10282  002A' 2700'              	addwf	(___wmul@product+1)& (0+255),f,b
 10283                           
 10284                           ; BSR set to: 0
 10285  002C' C004' F000'        	movff	___wmul@product,?___wmul
 10286  0030' C005' F001'        	movff	___wmul@product+1,?___wmul+1
 10287  0034' 0012               	return	
 10288  0036'                    __end_of___wmul:
 10289                           	opt stack 0
 10290                           tblptru	equ	0xFF8
 10291                           tblptrh	equ	0xFF7
 10292                           tblptrl	equ	0xFF6
 10293                           tablat	equ	0xFF5
 10294                           prodh	equ	0xFF4
 10295                           prodl	equ	0xFF3
 10296                           intcon	equ	0xFF2
 10297                           intcon2	equ	0xFF1
 10298                           indf0	equ	0xFEF
 10299                           postinc0	equ	0xFEE
 10300                           fsr0h	equ	0xFEA
 10301                           fsr0l	equ	0xFE9
 10302                           wreg	equ	0xFE8
 10303                           postinc1	equ	0xFE6
 10304                           postdec1	equ	0xFE5
 10305                           fsr1h	equ	0xFE2
 10306                           fsr1l	equ	0xFE1
 10307                           indf2	equ	0xFDF
 10308                           postinc2	equ	0xFDE
 10309                           postdec2	equ	0xFDD
 10310                           fsr2h	equ	0xFDA
 10311                           fsr2l	equ	0xFD9
 10312                           status	equ	0xFD8
 10313                           
 10314 ;; *************** function ___lwdiv *****************
 10315 ;; Defined at:
 10316 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;  dividend        2    6[BANK0 ] unsigned int 
 10319 ;;  divisor         2    8[BANK0 ] unsigned int 
 10320 ;; Auto vars:     Size  Location     Type
 10321 ;;  quotient        2   11[BANK0 ] unsigned int 
 10322 ;;  counter         1   10[BANK0 ] unsigned char 
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  2    6[BANK0 ] unsigned int 
 10325 ;; Registers used:
 10326 ;;		wreg, status,2, status,0
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10332 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10333 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10335 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10336 ;;Total ram usage:        7 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    4
 10339 ;; This function calls:
 10340 ;;		Nothing
 10341 ;; This function is called by:
 10342 ;;		_ringbuf_put_num
 10343 ;;		_PWM_set
 10344 ;;		_sprintf
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           	psect	text39
 10349  0000'                    __ptext39:
 10350                           	opt stack 0
 10351  0000'                    ___lwdiv:
 10352                           	opt stack 20
 10353                           
 10354                           ; BSR set to: 0
 10355                           ;incstack = 0
 10356  0000' 0E00               	movlw	0
 10357  0002' 0100               	movlb	0	; () banked
 10358  0004' 6F00'              	movwf	(___lwdiv@quotient+1)& (0+255),b
 10359  0006' 0E00               	movlw	0
 10360  0008' 6F00'              	movwf	___lwdiv@quotient& (0+255),b
 10361                           
 10362                           ; BSR set to: 0
 10363  000A' 0100               	movlb	0	; () banked
 10364  000C' 5100'              	movf	___lwdiv@divisor& (0+255),w,b
 10365  000E' 0100               	movlb	0	; () banked
 10366  0010' 1100'              	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10367  0012' B4D8               	btfsc	status,2,c
 10368  0014' D02C               	goto	l2101
 10369                           
 10370                           ; BSR set to: 0
 10371  0016' 0E01               	movlw	1
 10372  0018' 0100               	movlb	0	; () banked
 10373  001A' 6F00'              	movwf	___lwdiv@counter& (0+255),b
 10374  001C' D006               	goto	l8721
 10375  001E'                    l8719:
 10376                           
 10377                           ; BSR set to: 0
 10378  001E' 0100               	movlb	0	; () banked
 10379  0020' 90D8               	bcf	status,0,c
 10380  0022' 3700'              	rlcf	___lwdiv@divisor& (0+255),f,b
 10381  0024' 3700'              	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10382  0026' 0100               	movlb	0	; () banked
 10383  0028' 2B00'              	incf	___lwdiv@counter& (0+255),f,b
 10384  002A'                    l8721:
 10385                           
 10386                           ; BSR set to: 0
 10387  002A' 0100               	movlb	0	; () banked
 10388  002C' AF00'              	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10389  002E' D7F7               	goto	l8719
 10390  0030'                    l8723:
 10391                           
 10392                           ; BSR set to: 0
 10393  0030' 0100               	movlb	0	; () banked
 10394  0032' 90D8               	bcf	status,0,c
 10395  0034' 3700'              	rlcf	___lwdiv@quotient& (0+255),f,b
 10396  0036' 3700'              	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10397                           
 10398                           ; BSR set to: 0
 10399  0038' 0100               	movlb	0	; () banked
 10400  003A' 5100'              	movf	___lwdiv@divisor& (0+255),w,b
 10401  003C' 0100               	movlb	0	; () banked
 10402  003E' 5D00'              	subwf	___lwdiv@dividend& (0+255),w,b
 10403  0040' 0100               	movlb	0	; () banked
 10404  0042' 5100'              	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10405  0044' 0100               	movlb	0	; () banked
 10406  0046' 5900'              	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10407  0048' A0D8               	btfss	status,0,c
 10408  004A' D00A               	goto	l8731
 10409                           
 10410                           ; BSR set to: 0
 10411  004C' 0100               	movlb	0	; () banked
 10412  004E' 5100'              	movf	___lwdiv@divisor& (0+255),w,b
 10413  0050' 0100               	movlb	0	; () banked
 10414  0052' 5F00'              	subwf	___lwdiv@dividend& (0+255),f,b
 10415  0054' 0100               	movlb	0	; () banked
 10416  0056' 5100'              	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10417  0058' 0100               	movlb	0	; () banked
 10418  005A' 5B00'              	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10419                           
 10420                           ; BSR set to: 0
 10421  005C' 0100               	movlb	0	; () banked
 10422  005E' 8100'              	bsf	___lwdiv@quotient& (0+255),0,b
 10423  0060'                    l8731:
 10424                           
 10425                           ; BSR set to: 0
 10426  0060' 0100               	movlb	0	; () banked
 10427  0062' 90D8               	bcf	status,0,c
 10428  0064' 3300'              	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10429  0066' 3300'              	rrcf	___lwdiv@divisor& (0+255),f,b
 10430                           
 10431                           ; BSR set to: 0
 10432  0068' 0100               	movlb	0	; () banked
 10433  006A' 2F00'              	decfsz	___lwdiv@counter& (0+255),f,b
 10434  006C' D7E1               	goto	l8723
 10435  006E'                    l2101:
 10436                           
 10437                           ; BSR set to: 0
 10438  006E' C00B' F006'        	movff	___lwdiv@quotient,?___lwdiv
 10439  0072' C00C' F007'        	movff	___lwdiv@quotient+1,?___lwdiv+1
 10440                           
 10441                           ; BSR set to: 0
 10442  0076' 0012               	return		;funcret
 10443  0078'                    __end_of___lwdiv:
 10444                           	opt stack 0
 10445                           tblptru	equ	0xFF8
 10446                           tblptrh	equ	0xFF7
 10447                           tblptrl	equ	0xFF6
 10448                           tablat	equ	0xFF5
 10449                           prodh	equ	0xFF4
 10450                           prodl	equ	0xFF3
 10451                           intcon	equ	0xFF2
 10452                           intcon2	equ	0xFF1
 10453                           indf0	equ	0xFEF
 10454                           postinc0	equ	0xFEE
 10455                           fsr0h	equ	0xFEA
 10456                           fsr0l	equ	0xFE9
 10457                           wreg	equ	0xFE8
 10458                           postinc1	equ	0xFE6
 10459                           postdec1	equ	0xFE5
 10460                           fsr1h	equ	0xFE2
 10461                           fsr1l	equ	0xFE1
 10462                           indf2	equ	0xFDF
 10463                           postinc2	equ	0xFDE
 10464                           postdec2	equ	0xFDD
 10465                           fsr2h	equ	0xFDA
 10466                           fsr2l	equ	0xFD9
 10467                           status	equ	0xFD8
 10468                           
 10469 ;; *************** function _UART_task *****************
 10470 ;; Defined at:
 10471 ;;		line 43 in file "../My_library/My_UART.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;		None
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;		None
 10476 ;; Return value:  Size  Location     Type
 10477 ;;		None               void
 10478 ;; Registers used:
 10479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10489 ;;Total ram usage:        0 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:    5
 10492 ;; This function calls:
 10493 ;;		_ringbuf_num
 10494 ;; This function is called by:
 10495 ;;		_main
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text40
 10500  0000'                    __ptext40:
 10501                           	opt stack 0
 10502  0000'                    _UART_task:
 10503                           	opt stack 25
 10504                           
 10505                           ;My_UART.c: 44: if (ringbuf_num(&uart_tx)) {
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;incstack = 0
 10509  0000' 0E00'              	movlw	low _uart_tx
 10510  0002' 0100               	movlb	0	; () banked
 10511  0004' 6F00'              	movwf	ringbuf_num@rb& (0+255),b
 10512  0006' 0E00'              	movlw	high _uart_tx
 10513  0008' 0100               	movlb	0	; () banked
 10514  000A' 6F00'              	movwf	(ringbuf_num@rb+1)& (0+255),b
 10515  000C' EC00' F000'        	call	_ringbuf_num	;wreg free
 10516  0010' 0100               	movlb	0	; () banked
 10517  0012' 5100'              	movf	?_ringbuf_num& (0+255),w,b
 10518  0014' 0100               	movlb	0	; () banked
 10519  0016' 1100'              	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10520  0018' B4D8               	btfsc	status,2,c
 10521  001A' 0012               	return	
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
 10525  001C' 889D               	bsf	3997,4,c	;volatile
 10526  001E' 0012               	return	
 10527  0020'                    __end_of_UART_task:
 10528                           	opt stack 0
 10529                           tblptru	equ	0xFF8
 10530                           tblptrh	equ	0xFF7
 10531                           tblptrl	equ	0xFF6
 10532                           tablat	equ	0xFF5
 10533                           prodh	equ	0xFF4
 10534                           prodl	equ	0xFF3
 10535                           intcon	equ	0xFF2
 10536                           intcon2	equ	0xFF1
 10537                           indf0	equ	0xFEF
 10538                           postinc0	equ	0xFEE
 10539                           fsr0h	equ	0xFEA
 10540                           fsr0l	equ	0xFE9
 10541                           wreg	equ	0xFE8
 10542                           postinc1	equ	0xFE6
 10543                           postdec1	equ	0xFE5
 10544                           fsr1h	equ	0xFE2
 10545                           fsr1l	equ	0xFE1
 10546                           indf2	equ	0xFDF
 10547                           postinc2	equ	0xFDE
 10548                           postdec2	equ	0xFDD
 10549                           fsr2h	equ	0xFDA
 10550                           fsr2l	equ	0xFD9
 10551                           status	equ	0xFD8
 10552                           
 10553 ;; *************** function _ringbuf_num *****************
 10554 ;; Defined at:
 10555 ;;		line 12 in file "../My_library/My_ringbuf.c"
 10556 ;; Parameters:    Size  Location     Type
 10557 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 10558 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 10559 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;		None
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  2    0[BANK0 ] unsigned int 
 10564 ;; Registers used:
 10565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10571 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10573 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10574 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10575 ;;Total ram usage:        8 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:    4
 10578 ;; This function calls:
 10579 ;;		Nothing
 10580 ;; This function is called by:
 10581 ;;		_ringbuf_put
 10582 ;;		_ringbuf_pop
 10583 ;;		_ringbuf_backspace
 10584 ;;		_terminal_task
 10585 ;;		_UART_task
 10586 ;;		_ST7032_task
 10587 ;;		_USB_CDC_task
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           	psect	text41
 10592  0000'                    __ptext41:
 10593                           	opt stack 0
 10594  0000'                    _ringbuf_num:
 10595                           	opt stack 20
 10596                           
 10597                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;incstack = 0
 10601  0000' 0100               	movlb	0	; () banked
 10602  0002' EE20 F006          	lfsr	2,6
 10603  0006' 5100'              	movf	ringbuf_num@rb& (0+255),w,b
 10604  0008' 26D9               	addwf	fsr2l,f,c
 10605  000A' 5100'              	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10606  000C' 22DA               	addwfc	fsr2h,f,c
 10607  000E' 0100               	movlb	0	; () banked
 10608  0010' EE10 F004          	lfsr	1,4
 10609  0014' 5100'              	movf	ringbuf_num@rb& (0+255),w,b
 10610  0016' 26E1               	addwf	fsr1l,f,c
 10611  0018' 5100'              	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10612  001A' 22E2               	addwfc	fsr1h,f,c
 10613  001C' 50DE               	movf	postinc2,w,c
 10614  001E' 5CE6               	subwf	postinc1,w,c
 10615  0020' 50DE               	movf	postinc2,w,c
 10616  0022' 58E6               	subwfb	postinc1,w,c
 10617  0024' A0D8               	btfss	status,0,c
 10618  0026' D028               	goto	l8541
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 10622  0028' 0100               	movlb	0	; () banked
 10623  002A' EE20 F004          	lfsr	2,4
 10624  002E' 5100'              	movf	ringbuf_num@rb& (0+255),w,b
 10625  0030' 26D9               	addwf	fsr2l,f,c
 10626  0032' 5100'              	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10627  0034' 22DA               	addwfc	fsr2h,f,c
 10628  0036' CFDE F002'         	movff	postinc2,??_ringbuf_num
 10629  003A' CFDD F003'         	movff	postdec2,??_ringbuf_num+1
 10630  003E' 0100               	movlb	0	; () banked
 10631  0040' EE20 F006          	lfsr	2,6
 10632  0044' 5100'              	movf	ringbuf_num@rb& (0+255),w,b
 10633  0046' 26D9               	addwf	fsr2l,f,c
 10634  0048' 5100'              	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10635  004A' 22DA               	addwfc	fsr2h,f,c
 10636  004C' CFDE F004'         	movff	postinc2,??_ringbuf_num+2
 10637  0050' CFDD F005'         	movff	postdec2,??_ringbuf_num+3
 10638  0054' 0100               	movlb	0	; () banked
 10639  0056' 1F00'              	comf	(??_ringbuf_num+2)& (0+255),f,b
 10640  0058' 1F00'              	comf	(??_ringbuf_num+3)& (0+255),f,b
 10641  005A' 4B00'              	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 10642  005C' 2B00'              	incf	(??_ringbuf_num+3)& (0+255),f,b
 10643  005E' 0100               	movlb	0	; () banked
 10644  0060' 5100'              	movf	??_ringbuf_num& (0+255),w,b
 10645  0062' 0100               	movlb	0	; () banked
 10646  0064' 2500'              	addwf	(??_ringbuf_num+2)& (0+255),w,b
 10647  0066' 0100               	movlb	0	; () banked
 10648  0068' 6F00'              	movwf	?_ringbuf_num& (0+255),b
 10649  006A' 0100               	movlb	0	; () banked
 10650  006C' 5100'              	movf	(??_ringbuf_num+1)& (0+255),w,b
 10651  006E' 0100               	movlb	0	; () banked
 10652  0070' 2100'              	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 10653  0072' 0100               	movlb	0	; () banked
 10654  0074' 6F00'              	movwf	(?_ringbuf_num+1)& (0+255),b
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;My_ringbuf.c: 15: } else {
 10658                           
 10659                           ; BSR set to: 0
 10660  0076' 0012               	return	
 10661  0078'                    l8541:
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 10665  0078' 0100               	movlb	0	; () banked
 10666  007A' EE20 F004          	lfsr	2,4
 10667  007E' 5100'              	movf	ringbuf_num@rb& (0+255),w,b
 10668  0080' 26D9               	addwf	fsr2l,f,c
 10669  0082' 5100'              	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10670  0084' 22DA               	addwfc	fsr2h,f,c
 10671  0086' CFDE F002'         	movff	postinc2,??_ringbuf_num
 10672  008A' CFDD F003'         	movff	postdec2,??_ringbuf_num+1
 10673  008E' 0100               	movlb	0	; () banked
 10674  0090' EE20 F002          	lfsr	2,2
 10675  0094' 5100'              	movf	ringbuf_num@rb& (0+255),w,b
 10676  0096' 26D9               	addwf	fsr2l,f,c
 10677  0098' 5100'              	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10678  009A' 22DA               	addwfc	fsr2h,f,c
 10679  009C' CFDE F004'         	movff	postinc2,??_ringbuf_num+2
 10680  00A0' CFDD F005'         	movff	postdec2,??_ringbuf_num+3
 10681  00A4' 0100               	movlb	0	; () banked
 10682  00A6' EE20 F006          	lfsr	2,6
 10683  00AA' 5100'              	movf	ringbuf_num@rb& (0+255),w,b
 10684  00AC' 26D9               	addwf	fsr2l,f,c
 10685  00AE' 5100'              	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10686  00B0' 22DA               	addwfc	fsr2h,f,c
 10687  00B2' CFDE F006'         	movff	postinc2,??_ringbuf_num+4
 10688  00B6' CFDD F007'         	movff	postdec2,??_ringbuf_num+5
 10689  00BA' 0100               	movlb	0	; () banked
 10690  00BC' 1F00'              	comf	(??_ringbuf_num+4)& (0+255),f,b
 10691  00BE' 1F00'              	comf	(??_ringbuf_num+5)& (0+255),f,b
 10692  00C0' 4B00'              	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 10693  00C2' 2B00'              	incf	(??_ringbuf_num+5)& (0+255),f,b
 10694  00C4' 0100               	movlb	0	; () banked
 10695  00C6' 5100'              	movf	(??_ringbuf_num+2)& (0+255),w,b
 10696  00C8' 0100               	movlb	0	; () banked
 10697  00CA' 2700'              	addwf	(??_ringbuf_num+4)& (0+255),f,b
 10698  00CC' 0100               	movlb	0	; () banked
 10699  00CE' 5100'              	movf	(??_ringbuf_num+3)& (0+255),w,b
 10700  00D0' 0100               	movlb	0	; () banked
 10701  00D2' 2300'              	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 10702  00D4' 0100               	movlb	0	; () banked
 10703  00D6' 5100'              	movf	??_ringbuf_num& (0+255),w,b
 10704  00D8' 0100               	movlb	0	; () banked
 10705  00DA' 2500'              	addwf	(??_ringbuf_num+4)& (0+255),w,b
 10706  00DC' 0100               	movlb	0	; () banked
 10707  00DE' 6F00'              	movwf	?_ringbuf_num& (0+255),b
 10708  00E0' 0100               	movlb	0	; () banked
 10709  00E2' 5100'              	movf	(??_ringbuf_num+1)& (0+255),w,b
 10710  00E4' 0100               	movlb	0	; () banked
 10711  00E6' 2100'              	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 10712  00E8' 0100               	movlb	0	; () banked
 10713  00EA' 6F00'              	movwf	(?_ringbuf_num+1)& (0+255),b
 10714                           
 10715                           ; BSR set to: 0
 10716  00EC' 0012               	return	
 10717  00EE'                    __end_of_ringbuf_num:
 10718                           	opt stack 0
 10719                           tblptru	equ	0xFF8
 10720                           tblptrh	equ	0xFF7
 10721                           tblptrl	equ	0xFF6
 10722                           tablat	equ	0xFF5
 10723                           prodh	equ	0xFF4
 10724                           prodl	equ	0xFF3
 10725                           intcon	equ	0xFF2
 10726                           intcon2	equ	0xFF1
 10727                           indf0	equ	0xFEF
 10728                           postinc0	equ	0xFEE
 10729                           fsr0h	equ	0xFEA
 10730                           fsr0l	equ	0xFE9
 10731                           wreg	equ	0xFE8
 10732                           postinc1	equ	0xFE6
 10733                           postdec1	equ	0xFE5
 10734                           fsr1h	equ	0xFE2
 10735                           fsr1l	equ	0xFE1
 10736                           indf2	equ	0xFDF
 10737                           postinc2	equ	0xFDE
 10738                           postdec2	equ	0xFDD
 10739                           fsr2h	equ	0xFDA
 10740                           fsr2l	equ	0xFD9
 10741                           status	equ	0xFD8
 10742                           
 10743 ;; *************** function _RTCC_task *****************
 10744 ;; Defined at:
 10745 ;;		line 352 in file "../My_library/My_RTCC.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;		None
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;		None
 10750 ;; Return value:  Size  Location     Type
 10751 ;;		None               void
 10752 ;; Registers used:
 10753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10754 ;; Tracked objects:
 10755 ;;		On entry : 0/0
 10756 ;;		On exit  : 0/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10763 ;;Total ram usage:        0 bytes
 10764 ;; Hardware stack levels used:    1
 10765 ;; Hardware stack levels required when called:    8
 10766 ;; This function calls:
 10767 ;;		_RTCC_from_RTCC
 10768 ;; This function is called by:
 10769 ;;		_main
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773                           	psect	text42
 10774  0000'                    __ptext42:
 10775                           	opt stack 0
 10776  0000'                    _RTCC_task:
 10777                           	opt stack 22
 10778                           
 10779                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 10780                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;incstack = 0
 10784  0000' 010F               	movlb	15	; () banked
 10785  0002' B93F               	btfsc	63,4,b	;volatile
 10786  0004' 0012               	return	
 10787                           
 10788                           ; BSR set to: 15
 10789                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 10790                           
 10791                           ; BSR set to: 15
 10792                           
 10793                           ; BSR set to: 15
 10794  0006' 0E00               	movlw	0
 10795  0008' B73F               	btfsc	63,3,b	;volatile
 10796  000A' 0E01               	movlw	1
 10797  000C' 0101               	movlb	1	; () banked
 10798  000E' 6F00'              	movwf	(_now+12)& (0+255),b
 10799                           
 10800                           ; BSR set to: 1
 10801                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 10802  0010' 0100               	movlb	0	; () banked
 10803  0012' 5100'              	movf	RTCC_task@prev_halfsec& (0+255),w,b
 10804  0014' 0101               	movlb	1	; () banked
 10805  0016' 1900'              	xorwf	(_now+12)& (0+255),w,b
 10806  0018' B4D8               	btfsc	status,2,c
 10807  001A' 0012               	return	
 10808                           
 10809                           ; BSR set to: 1
 10810                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 10811  001C' C041' F009'        	movff	_now+12,RTCC_task@prev_halfsec
 10812                           
 10813                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 10814  0020' C041' F040'        	movff	_now+12,_now+11
 10815                           
 10816                           ; BSR set to: 1
 10817                           ;My_RTCC.c: 359: time_change_flag = 1;
 10818  0024' 0E01               	movlw	1
 10819  0026' 0100               	movlb	0	; () banked
 10820  0028' 6F00'              	movwf	_time_change_flag& (0+255),b
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 10824  002A' 0E00'              	movlw	low _now
 10825  002C' 0100               	movlb	0	; () banked
 10826  002E' 6F00'              	movwf	RTCC_from_RTCC@tm& (0+255),b
 10827  0030' 0E00'              	movlw	high _now
 10828  0032' 0100               	movlb	0	; () banked
 10829  0034' 6F00'              	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 10830  0036' EC00' F000'        	call	_RTCC_from_RTCC	;wreg free
 10831  003A' 0012               	return	
 10832  003C'                    __end_of_RTCC_task:
 10833                           	opt stack 0
 10834                           tblptru	equ	0xFF8
 10835                           tblptrh	equ	0xFF7
 10836                           tblptrl	equ	0xFF6
 10837                           tablat	equ	0xFF5
 10838                           prodh	equ	0xFF4
 10839                           prodl	equ	0xFF3
 10840                           intcon	equ	0xFF2
 10841                           intcon2	equ	0xFF1
 10842                           indf0	equ	0xFEF
 10843                           postinc0	equ	0xFEE
 10844                           fsr0h	equ	0xFEA
 10845                           fsr0l	equ	0xFE9
 10846                           wreg	equ	0xFE8
 10847                           postinc1	equ	0xFE6
 10848                           postdec1	equ	0xFE5
 10849                           fsr1h	equ	0xFE2
 10850                           fsr1l	equ	0xFE1
 10851                           indf2	equ	0xFDF
 10852                           postinc2	equ	0xFDE
 10853                           postdec2	equ	0xFDD
 10854                           fsr2h	equ	0xFDA
 10855                           fsr2l	equ	0xFD9
 10856                           status	equ	0xFD8
 10857                           
 10858 ;; *************** function _RTCC_from_RTCC *****************
 10859 ;; Defined at:
 10860 ;;		line 199 in file "../My_library/My_RTCC.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;  tm              2   38[BANK0 ] PTR struct .
 10863 ;;		 -> now(14), 
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;		None
 10866 ;; Return value:  Size  Location     Type
 10867 ;;		None               void
 10868 ;; Registers used:
 10869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10878 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10879 ;;Total ram usage:        2 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:    7
 10882 ;; This function calls:
 10883 ;;		_RTCC_to_caltime
 10884 ;;		_caltime_to_epoch
 10885 ;; This function is called by:
 10886 ;;		_RTCC_init
 10887 ;;		_RTCC_task
 10888 ;;		_print_time
 10889 ;;		_light_task
 10890 ;;		_main
 10891 ;;		_display_time_0802
 10892 ;;		_display_time_1602
 10893 ;;		_RTCC_adjust_time_inc
 10894 ;;		_RTCC_adjust_time_dec
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           	psect	text43
 10899  0000'                    __ptext43:
 10900                           	opt stack 0
 10901  0000'                    _RTCC_from_RTCC:
 10902                           	opt stack 18
 10903                           
 10904                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 10905                           
 10906                           ;incstack = 0
 10907  0000' C026' F001'        	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 10908  0004' C027' F002'        	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 10909  0008' EC00' F000'        	call	_RTCC_to_caltime	;wreg free
 10910                           
 10911                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 10912  000C' C026' F019'        	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 10913  0010' C027' F01A'        	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 10914  0014' EC00' F000'        	call	_caltime_to_epoch	;wreg free
 10915  0018' 0012               	return		;funcret
 10916  001A'                    __end_of_RTCC_from_RTCC:
 10917                           	opt stack 0
 10918                           tblptru	equ	0xFF8
 10919                           tblptrh	equ	0xFF7
 10920                           tblptrl	equ	0xFF6
 10921                           tablat	equ	0xFF5
 10922                           prodh	equ	0xFF4
 10923                           prodl	equ	0xFF3
 10924                           intcon	equ	0xFF2
 10925                           intcon2	equ	0xFF1
 10926                           indf0	equ	0xFEF
 10927                           postinc0	equ	0xFEE
 10928                           fsr0h	equ	0xFEA
 10929                           fsr0l	equ	0xFE9
 10930                           wreg	equ	0xFE8
 10931                           postinc1	equ	0xFE6
 10932                           postdec1	equ	0xFE5
 10933                           fsr1h	equ	0xFE2
 10934                           fsr1l	equ	0xFE1
 10935                           indf2	equ	0xFDF
 10936                           postinc2	equ	0xFDE
 10937                           postdec2	equ	0xFDD
 10938                           fsr2h	equ	0xFDA
 10939                           fsr2l	equ	0xFD9
 10940                           status	equ	0xFD8
 10941                           
 10942 ;; *************** function _caltime_to_epoch *****************
 10943 ;; Defined at:
 10944 ;;		line 179 in file "../My_library/My_RTCC.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  tm              2   25[BANK0 ] PTR struct .
 10947 ;;		 -> now(14), 
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;  month           1   37[BANK0 ] unsigned char 
 10950 ;;  month           1   32[BANK0 ] unsigned char 
 10951 ;;  year            1   31[BANK0 ] unsigned char 
 10952 ;;  epoch           4   33[BANK0 ] unsigned long 
 10953 ;; Return value:  Size  Location     Type
 10954 ;;		None               void
 10955 ;; Registers used:
 10956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10957 ;; Tracked objects:
 10958 ;;		On entry : 0/0
 10959 ;;		On exit  : 0/0
 10960 ;;		Unchanged: 0/0
 10961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10963 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10964 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10965 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10966 ;;Total ram usage:       13 bytes
 10967 ;; Hardware stack levels used:    1
 10968 ;; Hardware stack levels required when called:    6
 10969 ;; This function calls:
 10970 ;;		___lmul
 10971 ;;		_month_length
 10972 ;; This function is called by:
 10973 ;;		_RTCC_from_RTCC
 10974 ;;		_RTCC_from_caltime
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           	psect	text44
 10979  0000'                    __ptext44:
 10980                           	opt stack 0
 10981  0000'                    _caltime_to_epoch:
 10982                           	opt stack 18
 10983                           
 10984                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 10985                           
 10986                           ;incstack = 0
 10987  0000' 0E00               	movlw	0
 10988  0002' 0100               	movlb	0	; () banked
 10989  0004' 6F00'              	movwf	caltime_to_epoch@epoch& (0+255),b
 10990  0006' 0E00               	movlw	0
 10991  0008' 6F00'              	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 10992  000A' 0E00               	movlw	0
 10993  000C' 6F00'              	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 10994  000E' 0E00               	movlw	0
 10995  0010' 6F00'              	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 10996                           
 10997                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 10998  0012' 0E00               	movlw	0
 10999  0014' 0100               	movlb	0	; () banked
 11000  0016' 6F00'              	movwf	caltime_to_epoch@year& (0+255),b
 11001  0018' D037               	goto	l8679
 11002  001A'                    l8665:
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 11006  001A' 0E01               	movlw	1
 11007  001C' 0100               	movlb	0	; () banked
 11008  001E' 6F00'              	movwf	caltime_to_epoch@month& (0+255),b
 11009  0020'                    l8667:
 11010                           
 11011                           ; BSR set to: 0
 11012  0020' 0E0C               	movlw	12
 11013  0022' 0100               	movlb	0	; () banked
 11014  0024' 6500'              	cpfsgt	caltime_to_epoch@month& (0+255),b
 11015  0026' D001               	goto	l8671
 11016  0028' D02D               	goto	l8677
 11017  002A'                    l8671:
 11018                           
 11019                           ; BSR set to: 0
 11020                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 11021  002A' C025' F01F'        	movff	caltime_to_epoch@month,month_length@month
 11022  002E' 0100               	movlb	0	; () banked
 11023  0030' 5100'              	movf	caltime_to_epoch@year& (0+255),w,b
 11024  0032' EC00' F000'        	call	_month_length
 11025  0036' 0100               	movlb	0	; () banked
 11026  0038' 6F00'              	movwf	??_caltime_to_epoch& (0+255),b
 11027  003A' 0100               	movlb	0	; () banked
 11028  003C' 5100'              	movf	??_caltime_to_epoch& (0+255),w,b
 11029  003E' 0100               	movlb	0	; () banked
 11030  0040' 6F00'              	movwf	___lmul@multiplier& (0+255),b
 11031  0042' 6B00'              	clrf	(___lmul@multiplier+1)& (0+255),b
 11032  0044' 6B00'              	clrf	(___lmul@multiplier+2)& (0+255),b
 11033  0046' 6B00'              	clrf	(___lmul@multiplier+3)& (0+255),b
 11034  0048' 0E80               	movlw	128
 11035  004A' 0100               	movlb	0	; () banked
 11036  004C' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 11037  004E' 0E51               	movlw	81
 11038  0050' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 11039  0052' 0E01               	movlw	1
 11040  0054' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 11041  0056' 0E00               	movlw	0
 11042  0058' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 11043  005A' EC00' F000'        	call	___lmul	;wreg free
 11044  005E' 0100               	movlb	0	; () banked
 11045  0060' 5100'              	movf	?___lmul& (0+255),w,b
 11046  0062' 0100               	movlb	0	; () banked
 11047  0064' 2700'              	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11048  0066' 0100               	movlb	0	; () banked
 11049  0068' 5100'              	movf	(?___lmul+1)& (0+255),w,b
 11050  006A' 0100               	movlb	0	; () banked
 11051  006C' 2300'              	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11052  006E' 0100               	movlb	0	; () banked
 11053  0070' 5100'              	movf	(?___lmul+2)& (0+255),w,b
 11054  0072' 0100               	movlb	0	; () banked
 11055  0074' 2300'              	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11056  0076' 0100               	movlb	0	; () banked
 11057  0078' 5100'              	movf	(?___lmul+3)& (0+255),w,b
 11058  007A' 0100               	movlb	0	; () banked
 11059  007C' 2300'              	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11060                           
 11061                           ; BSR set to: 0
 11062  007E' 0100               	movlb	0	; () banked
 11063  0080' 2B00'              	incf	caltime_to_epoch@month& (0+255),f,b
 11064  0082' D7CE               	goto	l8667
 11065  0084'                    l8677:
 11066                           
 11067                           ; BSR set to: 0
 11068  0084' 0100               	movlb	0	; () banked
 11069  0086' 2B00'              	incf	caltime_to_epoch@year& (0+255),f,b
 11070  0088'                    l8679:
 11071                           
 11072                           ; BSR set to: 0
 11073  0088' 0100               	movlb	0	; () banked
 11074  008A' EE20 F00A          	lfsr	2,10
 11075  008E' 5100'              	movf	caltime_to_epoch@tm& (0+255),w,b
 11076  0090' 26D9               	addwf	fsr2l,f,c
 11077  0092' 5100'              	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11078  0094' 22DA               	addwfc	fsr2h,f,c
 11079  0096' 50DE               	movf	postinc2,w,c
 11080  0098' 0100               	movlb	0	; () banked
 11081  009A' 5D00'              	subwf	caltime_to_epoch@year& (0+255),w,b
 11082  009C' A0D8               	btfss	status,0,c
 11083  009E' D7BD               	goto	l8665
 11084                           
 11085                           ; BSR set to: 0
 11086                           ;My_RTCC.c: 184: }
 11087                           ;My_RTCC.c: 185: }
 11088                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 11089                           
 11090                           ; BSR set to: 0
 11091  00A0' 0E01               	movlw	1
 11092  00A2' 0100               	movlb	0	; () banked
 11093  00A4' 6F00'              	movwf	caltime_to_epoch@month_3637& (0+255),b
 11094  00A6' D032               	goto	l8687
 11095  00A8'                    l8683:
 11096                           
 11097                           ; BSR set to: 0
 11098                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 11099  00A8' C020' F01F'        	movff	caltime_to_epoch@month_3637,month_length@month
 11100  00AC' 0100               	movlb	0	; () banked
 11101  00AE' EE20 F00A          	lfsr	2,10
 11102  00B2' 5100'              	movf	caltime_to_epoch@tm& (0+255),w,b
 11103  00B4' 26D9               	addwf	fsr2l,f,c
 11104  00B6' 5100'              	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11105  00B8' 22DA               	addwfc	fsr2h,f,c
 11106  00BA' 50DF               	movf	indf2,w,c
 11107  00BC' EC00' F000'        	call	_month_length
 11108  00C0' 0100               	movlb	0	; () banked
 11109  00C2' 6F00'              	movwf	??_caltime_to_epoch& (0+255),b
 11110  00C4' 0100               	movlb	0	; () banked
 11111  00C6' 5100'              	movf	??_caltime_to_epoch& (0+255),w,b
 11112  00C8' 0100               	movlb	0	; () banked
 11113  00CA' 6F00'              	movwf	___lmul@multiplier& (0+255),b
 11114  00CC' 6B00'              	clrf	(___lmul@multiplier+1)& (0+255),b
 11115  00CE' 6B00'              	clrf	(___lmul@multiplier+2)& (0+255),b
 11116  00D0' 6B00'              	clrf	(___lmul@multiplier+3)& (0+255),b
 11117  00D2' 0E80               	movlw	128
 11118  00D4' 0100               	movlb	0	; () banked
 11119  00D6' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 11120  00D8' 0E51               	movlw	81
 11121  00DA' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 11122  00DC' 0E01               	movlw	1
 11123  00DE' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 11124  00E0' 0E00               	movlw	0
 11125  00E2' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 11126  00E4' EC00' F000'        	call	___lmul	;wreg free
 11127  00E8' 0100               	movlb	0	; () banked
 11128  00EA' 5100'              	movf	?___lmul& (0+255),w,b
 11129  00EC' 0100               	movlb	0	; () banked
 11130  00EE' 2700'              	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11131  00F0' 0100               	movlb	0	; () banked
 11132  00F2' 5100'              	movf	(?___lmul+1)& (0+255),w,b
 11133  00F4' 0100               	movlb	0	; () banked
 11134  00F6' 2300'              	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11135  00F8' 0100               	movlb	0	; () banked
 11136  00FA' 5100'              	movf	(?___lmul+2)& (0+255),w,b
 11137  00FC' 0100               	movlb	0	; () banked
 11138  00FE' 2300'              	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11139  0100' 0100               	movlb	0	; () banked
 11140  0102' 5100'              	movf	(?___lmul+3)& (0+255),w,b
 11141  0104' 0100               	movlb	0	; () banked
 11142  0106' 2300'              	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11143                           
 11144                           ; BSR set to: 0
 11145  0108' 0100               	movlb	0	; () banked
 11146  010A' 2B00'              	incf	caltime_to_epoch@month_3637& (0+255),f,b
 11147  010C'                    l8687:
 11148                           
 11149                           ; BSR set to: 0
 11150  010C' 0100               	movlb	0	; () banked
 11151  010E' EE20 F009          	lfsr	2,9
 11152  0112' 5100'              	movf	caltime_to_epoch@tm& (0+255),w,b
 11153  0114' 26D9               	addwf	fsr2l,f,c
 11154  0116' 5100'              	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11155  0118' 22DA               	addwfc	fsr2h,f,c
 11156  011A' 50DE               	movf	postinc2,w,c
 11157  011C' 0100               	movlb	0	; () banked
 11158  011E' 5D00'              	subwf	caltime_to_epoch@month_3637& (0+255),w,b
 11159  0120' A0D8               	btfss	status,0,c
 11160  0122' D7C2               	goto	l8683
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;My_RTCC.c: 188: }
 11164                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 11165                           
 11166                           ; BSR set to: 0
 11167  0124' 0EFF               	movlw	255
 11168  0126' 0100               	movlb	0	; () banked
 11169  0128' 6F00'              	movwf	??_caltime_to_epoch& (0+255),b
 11170  012A' 0EFF               	movlw	255
 11171  012C' 0100               	movlb	0	; () banked
 11172  012E' 6F00'              	movwf	(??_caltime_to_epoch+1)& (0+255),b
 11173  0130' 0100               	movlb	0	; () banked
 11174  0132' EE20 F008          	lfsr	2,8
 11175  0136' 5100'              	movf	caltime_to_epoch@tm& (0+255),w,b
 11176  0138' 26D9               	addwf	fsr2l,f,c
 11177  013A' 5100'              	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11178  013C' 22DA               	addwfc	fsr2h,f,c
 11179  013E' 50DF               	movf	indf2,w,c
 11180  0140' 0100               	movlb	0	; () banked
 11181  0142' 6F00'              	movwf	(??_caltime_to_epoch+2)& (0+255),b
 11182  0144' 6B00'              	clrf	(??_caltime_to_epoch+3)& (0+255),b
 11183  0146' 0100               	movlb	0	; () banked
 11184  0148' 5100'              	movf	??_caltime_to_epoch& (0+255),w,b
 11185  014A' 0100               	movlb	0	; () banked
 11186  014C' 2700'              	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 11187  014E' 0100               	movlb	0	; () banked
 11188  0150' 5100'              	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 11189  0152' 0100               	movlb	0	; () banked
 11190  0154' 2300'              	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 11191  0156' C01D' F00D'        	movff	??_caltime_to_epoch+2,___lmul@multiplier
 11192  015A' C01E' F00E'        	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 11193  015E' 0100               	movlb	0	; () banked
 11194  0160' 0E00               	movlw	0
 11195  0162' BF00'              	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 11196  0164' 0EFF               	movlw	-1
 11197  0166' 6F00'              	movwf	(___lmul@multiplier+2)& (0+255),b
 11198  0168' 6F00'              	movwf	(___lmul@multiplier+3)& (0+255),b
 11199  016A' 0E80               	movlw	128
 11200  016C' 0100               	movlb	0	; () banked
 11201  016E' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 11202  0170' 0E51               	movlw	81
 11203  0172' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 11204  0174' 0E01               	movlw	1
 11205  0176' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 11206  0178' 0E00               	movlw	0
 11207  017A' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 11208  017C' EC00' F000'        	call	___lmul	;wreg free
 11209  0180' 0100               	movlb	0	; () banked
 11210  0182' 5100'              	movf	?___lmul& (0+255),w,b
 11211  0184' 0100               	movlb	0	; () banked
 11212  0186' 2700'              	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11213  0188' 0100               	movlb	0	; () banked
 11214  018A' 5100'              	movf	(?___lmul+1)& (0+255),w,b
 11215  018C' 0100               	movlb	0	; () banked
 11216  018E' 2300'              	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11217  0190' 0100               	movlb	0	; () banked
 11218  0192' 5100'              	movf	(?___lmul+2)& (0+255),w,b
 11219  0194' 0100               	movlb	0	; () banked
 11220  0196' 2300'              	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11221  0198' 0100               	movlb	0	; () banked
 11222  019A' 5100'              	movf	(?___lmul+3)& (0+255),w,b
 11223  019C' 0100               	movlb	0	; () banked
 11224  019E' 2300'              	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11225                           
 11226                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 11227  01A0' 0100               	movlb	0	; () banked
 11228  01A2' EE20 F006          	lfsr	2,6
 11229  01A6' 5100'              	movf	caltime_to_epoch@tm& (0+255),w,b
 11230  01A8' 26D9               	addwf	fsr2l,f,c
 11231  01AA' 5100'              	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11232  01AC' 22DA               	addwfc	fsr2h,f,c
 11233  01AE' 50DF               	movf	indf2,w,c
 11234  01B0' 0100               	movlb	0	; () banked
 11235  01B2' 6F00'              	movwf	??_caltime_to_epoch& (0+255),b
 11236  01B4' 0100               	movlb	0	; () banked
 11237  01B6' 5100'              	movf	??_caltime_to_epoch& (0+255),w,b
 11238  01B8' 0100               	movlb	0	; () banked
 11239  01BA' 6F00'              	movwf	___lmul@multiplier& (0+255),b
 11240  01BC' 6B00'              	clrf	(___lmul@multiplier+1)& (0+255),b
 11241  01BE' 6B00'              	clrf	(___lmul@multiplier+2)& (0+255),b
 11242  01C0' 6B00'              	clrf	(___lmul@multiplier+3)& (0+255),b
 11243  01C2' 0E10               	movlw	16
 11244  01C4' 0100               	movlb	0	; () banked
 11245  01C6' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 11246  01C8' 0E0E               	movlw	14
 11247  01CA' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 11248  01CC' 0E00               	movlw	0
 11249  01CE' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 11250  01D0' 0E00               	movlw	0
 11251  01D2' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 11252  01D4' EC00' F000'        	call	___lmul	;wreg free
 11253  01D8' 0100               	movlb	0	; () banked
 11254  01DA' 5100'              	movf	?___lmul& (0+255),w,b
 11255  01DC' 0100               	movlb	0	; () banked
 11256  01DE' 2700'              	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11257  01E0' 0100               	movlb	0	; () banked
 11258  01E2' 5100'              	movf	(?___lmul+1)& (0+255),w,b
 11259  01E4' 0100               	movlb	0	; () banked
 11260  01E6' 2300'              	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11261  01E8' 0100               	movlb	0	; () banked
 11262  01EA' 5100'              	movf	(?___lmul+2)& (0+255),w,b
 11263  01EC' 0100               	movlb	0	; () banked
 11264  01EE' 2300'              	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11265  01F0' 0100               	movlb	0	; () banked
 11266  01F2' 5100'              	movf	(?___lmul+3)& (0+255),w,b
 11267  01F4' 0100               	movlb	0	; () banked
 11268  01F6' 2300'              	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11269                           
 11270                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 11271  01F8' 0100               	movlb	0	; () banked
 11272  01FA' EE20 F005          	lfsr	2,5
 11273  01FE' 5100'              	movf	caltime_to_epoch@tm& (0+255),w,b
 11274  0200' 26D9               	addwf	fsr2l,f,c
 11275  0202' 5100'              	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11276  0204' 22DA               	addwfc	fsr2h,f,c
 11277  0206' 50DF               	movf	indf2,w,c
 11278  0208' 0100               	movlb	0	; () banked
 11279  020A' 6F00'              	movwf	??_caltime_to_epoch& (0+255),b
 11280  020C' 0100               	movlb	0	; () banked
 11281  020E' 5100'              	movf	??_caltime_to_epoch& (0+255),w,b
 11282  0210' 0100               	movlb	0	; () banked
 11283  0212' 6F00'              	movwf	___lmul@multiplier& (0+255),b
 11284  0214' 6B00'              	clrf	(___lmul@multiplier+1)& (0+255),b
 11285  0216' 6B00'              	clrf	(___lmul@multiplier+2)& (0+255),b
 11286  0218' 6B00'              	clrf	(___lmul@multiplier+3)& (0+255),b
 11287  021A' 0E3C               	movlw	60
 11288  021C' 0100               	movlb	0	; () banked
 11289  021E' 6F00'              	movwf	___lmul@multiplicand& (0+255),b
 11290  0220' 0E00               	movlw	0
 11291  0222' 6F00'              	movwf	(___lmul@multiplicand+1)& (0+255),b
 11292  0224' 0E00               	movlw	0
 11293  0226' 6F00'              	movwf	(___lmul@multiplicand+2)& (0+255),b
 11294  0228' 0E00               	movlw	0
 11295  022A' 6F00'              	movwf	(___lmul@multiplicand+3)& (0+255),b
 11296  022C' EC00' F000'        	call	___lmul	;wreg free
 11297  0230' 0100               	movlb	0	; () banked
 11298  0232' 5100'              	movf	?___lmul& (0+255),w,b
 11299  0234' 0100               	movlb	0	; () banked
 11300  0236' 2700'              	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11301  0238' 0100               	movlb	0	; () banked
 11302  023A' 5100'              	movf	(?___lmul+1)& (0+255),w,b
 11303  023C' 0100               	movlb	0	; () banked
 11304  023E' 2300'              	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11305  0240' 0100               	movlb	0	; () banked
 11306  0242' 5100'              	movf	(?___lmul+2)& (0+255),w,b
 11307  0244' 0100               	movlb	0	; () banked
 11308  0246' 2300'              	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11309  0248' 0100               	movlb	0	; () banked
 11310  024A' 5100'              	movf	(?___lmul+3)& (0+255),w,b
 11311  024C' 0100               	movlb	0	; () banked
 11312  024E' 2300'              	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;My_RTCC.c: 192: epoch += tm->ss;
 11316  0250' 0100               	movlb	0	; () banked
 11317  0252' EE20 F004          	lfsr	2,4
 11318  0256' 5100'              	movf	caltime_to_epoch@tm& (0+255),w,b
 11319  0258' 26D9               	addwf	fsr2l,f,c
 11320  025A' 5100'              	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11321  025C' 22DA               	addwfc	fsr2h,f,c
 11322  025E' 50DF               	movf	indf2,w,c
 11323  0260' 0100               	movlb	0	; () banked
 11324  0262' 6F00'              	movwf	??_caltime_to_epoch& (0+255),b
 11325  0264' 0100               	movlb	0	; () banked
 11326  0266' 5100'              	movf	??_caltime_to_epoch& (0+255),w,b
 11327  0268' 0100               	movlb	0	; () banked
 11328  026A' 2700'              	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11329  026C' 0E00               	movlw	0
 11330  026E' 2300'              	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11331  0270' 2300'              	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11332  0272' 2300'              	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;My_RTCC.c: 194: tm->epoch = epoch;
 11336  0274' C019' FFD9         	movff	caltime_to_epoch@tm,fsr2l
 11337  0278' C01A' FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 11338  027C' C021' FFDE         	movff	caltime_to_epoch@epoch,postinc2
 11339  0280' C022' FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 11340  0284' C023' FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 11341  0288' C024' FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 11342                           
 11343                           ; BSR set to: 0
 11344  028C' 0012               	return		;funcret
 11345  028E'                    __end_of_caltime_to_epoch:
 11346                           	opt stack 0
 11347                           tblptru	equ	0xFF8
 11348                           tblptrh	equ	0xFF7
 11349                           tblptrl	equ	0xFF6
 11350                           tablat	equ	0xFF5
 11351                           prodh	equ	0xFF4
 11352                           prodl	equ	0xFF3
 11353                           intcon	equ	0xFF2
 11354                           intcon2	equ	0xFF1
 11355                           indf0	equ	0xFEF
 11356                           postinc0	equ	0xFEE
 11357                           fsr0h	equ	0xFEA
 11358                           fsr0l	equ	0xFE9
 11359                           wreg	equ	0xFE8
 11360                           postinc1	equ	0xFE6
 11361                           postdec1	equ	0xFE5
 11362                           fsr1h	equ	0xFE2
 11363                           fsr1l	equ	0xFE1
 11364                           indf2	equ	0xFDF
 11365                           postinc2	equ	0xFDE
 11366                           postdec2	equ	0xFDD
 11367                           fsr2h	equ	0xFDA
 11368                           fsr2l	equ	0xFD9
 11369                           status	equ	0xFD8
 11370                           
 11371 ;; *************** function _month_length *****************
 11372 ;; Defined at:
 11373 ;;		line 55 in file "../My_library/My_RTCC.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  year            1    wreg     unsigned char 
 11376 ;;  month           1   31[COMRAM] unsigned char 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;  year            1   10[BANK0 ] unsigned char 
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      unsigned char 
 11381 ;; Registers used:
 11382 ;;		wreg, status,2, status,0, cstack
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11388 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11390 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11391 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11392 ;;Total ram usage:        6 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:    5
 11395 ;; This function calls:
 11396 ;;		___awmod
 11397 ;; This function is called by:
 11398 ;;		_epoch_to_caltime
 11399 ;;		_caltime_to_epoch
 11400 ;;		_terminal_time
 11401 ;;		_RTCC_adjust_time_inc
 11402 ;;		_RTCC_adjust_time_dec
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           	psect	text45
 11407  0000'                    __ptext45:
 11408                           	opt stack 0
 11409  0000'                    _month_length:
 11410                           	opt stack 18
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;incstack = 0
 11414                           ;month_length@year stored from wreg
 11415  0000' 0100               	movlb	0	; () banked
 11416  0002' 6F00'              	movwf	month_length@year& (0+255),b
 11417                           
 11418                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 11419  0004' 0E02               	movlw	2
 11420  0006' 181F'              	xorwf	month_length@month,w,c
 11421  0008' A4D8               	btfss	status,2,c
 11422  000A' D03E               	goto	l8557
 11423  000C' C00A' F000'        	movff	month_length@year,___awmod@dividend
 11424  0010' 0100               	movlb	0	; () banked
 11425  0012' 6B00'              	clrf	(___awmod@dividend+1)& (0+255),b
 11426  0014' 0E00               	movlw	0
 11427  0016' 0100               	movlb	0	; () banked
 11428  0018' 6F00'              	movwf	(___awmod@divisor+1)& (0+255),b
 11429  001A' 0E64               	movlw	100
 11430  001C' 6F00'              	movwf	___awmod@divisor& (0+255),b
 11431  001E' EC00' F000'        	call	___awmod	;wreg free
 11432  0022' 0100               	movlb	0	; () banked
 11433  0024' 5100'              	movf	?___awmod& (0+255),w,b
 11434  0026' 0100               	movlb	0	; () banked
 11435  0028' 1100'              	iorwf	(?___awmod+1)& (0+255),w,b
 11436  002A' A4D8               	btfss	status,2,c
 11437  002C' D002               	goto	u8410
 11438  002E' 0E01               	movlw	1
 11439  0030' D001               	goto	u8420
 11440  0032'                    u8410:
 11441  0032' 0E00               	movlw	0
 11442  0034'                    u8420:
 11443  0034' 0800               	sublw	0
 11444  0036' 0100               	movlb	0	; () banked
 11445  0038' 6F00'              	movwf	??_month_length& (0+255),b
 11446  003A' C00A' F000'        	movff	month_length@year,___awmod@dividend
 11447  003E' 0100               	movlb	0	; () banked
 11448  0040' 6B00'              	clrf	(___awmod@dividend+1)& (0+255),b
 11449  0042' 0E01               	movlw	1
 11450  0044' 0100               	movlb	0	; () banked
 11451  0046' 6F00'              	movwf	(___awmod@divisor+1)& (0+255),b
 11452  0048' 0E90               	movlw	144
 11453  004A' 6F00'              	movwf	___awmod@divisor& (0+255),b
 11454  004C' EC00' F000'        	call	___awmod	;wreg free
 11455  0050' 0100               	movlb	0	; () banked
 11456  0052' 5100'              	movf	?___awmod& (0+255),w,b
 11457  0054' 0100               	movlb	0	; () banked
 11458  0056' 1100'              	iorwf	(?___awmod+1)& (0+255),w,b
 11459  0058' A4D8               	btfss	status,2,c
 11460  005A' D004               	goto	u8430
 11461  005C' 0100               	movlb	0	; () banked
 11462  005E' 6B00'              	clrf	(??_month_length+1)& (0+255),b
 11463  0060' 2B00'              	incf	(??_month_length+1)& (0+255),f,b
 11464  0062' D002               	goto	u8448
 11465  0064'                    u8430:
 11466  0064' 0100               	movlb	0	; () banked
 11467  0066' 6B00'              	clrf	(??_month_length+1)& (0+255),b
 11468  0068'                    u8448:
 11469  0068' C00A' F008'        	movff	month_length@year,??_month_length+2
 11470  006C' 0E03               	movlw	3
 11471  006E' 0100               	movlb	0	; () banked
 11472  0070' 1700'              	andwf	(??_month_length+2)& (0+255),f,b
 11473  0072' A4D8               	btfss	status,2,c
 11474  0074' D002               	goto	u8450
 11475  0076' 0E01               	movlw	1
 11476  0078' D001               	goto	u8460
 11477  007A'                    u8450:
 11478  007A' 0E00               	movlw	0
 11479  007C'                    u8460:
 11480  007C' 0100               	movlb	0	; () banked
 11481  007E' 2500'              	addwf	(??_month_length+1)& (0+255),w,b
 11482  0080' 0100               	movlb	0	; () banked
 11483  0082' 2500'              	addwf	??_month_length& (0+255),w,b
 11484  0084' 0F1C               	addlw	28
 11485                           
 11486                           ; BSR set to: 0
 11487                           
 11488                           ; BSR set to: 0
 11489  0086' 0012               	return	
 11490  0088'                    l8557:
 11491                           
 11492                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 11493  0088' 501F'              	movf	month_length@month,w,c
 11494  008A' 0B01               	andlw	1
 11495  008C' 0100               	movlb	0	; () banked
 11496  008E' 6F00'              	movwf	??_month_length& (0+255),b
 11497  0090' 6B00'              	clrf	(??_month_length+1)& (0+255),b
 11498  0092' 0100               	movlb	0	; () banked
 11499  0094' 1F00'              	comf	??_month_length& (0+255),f,b
 11500  0096' 1F00'              	comf	(??_month_length+1)& (0+255),f,b
 11501  0098' 4B00'              	infsnz	??_month_length& (0+255),f,b
 11502  009A' 2B00'              	incf	(??_month_length+1)& (0+255),f,b
 11503  009C' 501F'              	movf	month_length@month,w,c
 11504  009E' 0100               	movlb	0	; () banked
 11505  00A0' 6F00'              	movwf	(??_month_length+2)& (0+255),b
 11506  00A2' 6B00'              	clrf	(??_month_length+3)& (0+255),b
 11507  00A4' 0100               	movlb	0	; () banked
 11508  00A6' 5100'              	movf	??_month_length& (0+255),w,b
 11509  00A8' 0100               	movlb	0	; () banked
 11510  00AA' 1B00'              	xorwf	(??_month_length+2)& (0+255),f,b
 11511  00AC' 0100               	movlb	0	; () banked
 11512  00AE' 5100'              	movf	(??_month_length+1)& (0+255),w,b
 11513  00B0' 0100               	movlb	0	; () banked
 11514  00B2' 1B00'              	xorwf	(??_month_length+3)& (0+255),f,b
 11515  00B4' 0E0D               	movlw	13
 11516  00B6' 0100               	movlb	0	; () banked
 11517  00B8' 1700'              	andwf	(??_month_length+2)& (0+255),f,b
 11518  00BA' 0E00               	movlw	0
 11519  00BC' 1700'              	andwf	(??_month_length+3)& (0+255),f,b
 11520  00BE' 0E04               	movlw	4
 11521  00C0' 0100               	movlb	0	; () banked
 11522  00C2' 1900'              	xorwf	(??_month_length+2)& (0+255),w,b
 11523  00C4' 0100               	movlb	0	; () banked
 11524  00C6' 1100'              	iorwf	(??_month_length+3)& (0+255),w,b
 11525  00C8' A4D8               	btfss	status,2,c
 11526  00CA' D002               	goto	u8470
 11527  00CC' 0E01               	movlw	1
 11528  00CE' D001               	goto	u8480
 11529  00D0'                    u8470:
 11530  00D0' 0E00               	movlw	0
 11531  00D2'                    u8480:
 11532  00D2' 0800               	sublw	0
 11533  00D4' 0F1F               	addlw	31
 11534                           
 11535                           ; BSR set to: 0
 11536  00D6' 0012               	return	
 11537  00D8'                    __end_of_month_length:
 11538                           	opt stack 0
 11539                           tblptru	equ	0xFF8
 11540                           tblptrh	equ	0xFF7
 11541                           tblptrl	equ	0xFF6
 11542                           tablat	equ	0xFF5
 11543                           prodh	equ	0xFF4
 11544                           prodl	equ	0xFF3
 11545                           intcon	equ	0xFF2
 11546                           intcon2	equ	0xFF1
 11547                           indf0	equ	0xFEF
 11548                           postinc0	equ	0xFEE
 11549                           fsr0h	equ	0xFEA
 11550                           fsr0l	equ	0xFE9
 11551                           wreg	equ	0xFE8
 11552                           postinc1	equ	0xFE6
 11553                           postdec1	equ	0xFE5
 11554                           fsr1h	equ	0xFE2
 11555                           fsr1l	equ	0xFE1
 11556                           indf2	equ	0xFDF
 11557                           postinc2	equ	0xFDE
 11558                           postdec2	equ	0xFDD
 11559                           fsr2h	equ	0xFDA
 11560                           fsr2l	equ	0xFD9
 11561                           status	equ	0xFD8
 11562                           
 11563 ;; *************** function ___awmod *****************
 11564 ;; Defined at:
 11565 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  dividend        2    0[BANK0 ] int 
 11568 ;;  divisor         2    2[BANK0 ] int 
 11569 ;; Auto vars:     Size  Location     Type
 11570 ;;  sign            1    5[BANK0 ] unsigned char 
 11571 ;;  counter         1    4[BANK0 ] unsigned char 
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  2    0[BANK0 ] int 
 11574 ;; Registers used:
 11575 ;;		wreg, status,2, status,0
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11581 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11582 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11584 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11585 ;;Total ram usage:        6 bytes
 11586 ;; Hardware stack levels used:    1
 11587 ;; Hardware stack levels required when called:    4
 11588 ;; This function calls:
 11589 ;;		Nothing
 11590 ;; This function is called by:
 11591 ;;		_month_length
 11592 ;; This function uses a non-reentrant model
 11593 ;;
 11594                           
 11595                           	psect	text46
 11596  0000'                    __ptext46:
 11597                           	opt stack 0
 11598  0000'                    ___awmod:
 11599                           	opt stack 18
 11600                           
 11601                           ; BSR set to: 0
 11602                           ;incstack = 0
 11603  0000' 0E00               	movlw	0
 11604  0002' 0100               	movlb	0	; () banked
 11605  0004' 6F00'              	movwf	___awmod@sign& (0+255),b
 11606                           
 11607                           ; BSR set to: 0
 11608  0006' 0100               	movlb	0	; () banked
 11609  0008' AF00'              	btfss	(___awmod@dividend+1)& (0+255),7,b
 11610  000A' D008               	goto	l8505
 11611                           
 11612                           ; BSR set to: 0
 11613  000C' 0100               	movlb	0	; () banked
 11614  000E' 6D00'              	negf	___awmod@dividend& (0+255),b
 11615  0010' 1F00'              	comf	(___awmod@dividend+1)& (0+255),f,b
 11616  0012' B0D8               	btfsc	status,0,c
 11617  0014' 2B00'              	incf	(___awmod@dividend+1)& (0+255),f,b
 11618                           
 11619                           ; BSR set to: 0
 11620  0016' 0E01               	movlw	1
 11621  0018' 0100               	movlb	0	; () banked
 11622  001A' 6F00'              	movwf	___awmod@sign& (0+255),b
 11623  001C'                    l8505:
 11624                           
 11625                           ; BSR set to: 0
 11626  001C' 0100               	movlb	0	; () banked
 11627  001E' AF00'              	btfss	(___awmod@divisor+1)& (0+255),7,b
 11628  0020' D005               	goto	l8509
 11629                           
 11630                           ; BSR set to: 0
 11631  0022' 0100               	movlb	0	; () banked
 11632  0024' 6D00'              	negf	___awmod@divisor& (0+255),b
 11633  0026' 1F00'              	comf	(___awmod@divisor+1)& (0+255),f,b
 11634  0028' B0D8               	btfsc	status,0,c
 11635  002A' 2B00'              	incf	(___awmod@divisor+1)& (0+255),f,b
 11636  002C'                    l8509:
 11637                           
 11638                           ; BSR set to: 0
 11639  002C' 0100               	movlb	0	; () banked
 11640  002E' 5100'              	movf	___awmod@divisor& (0+255),w,b
 11641  0030' 0100               	movlb	0	; () banked
 11642  0032' 1100'              	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11643  0034' B4D8               	btfsc	status,2,c
 11644  0036' D026               	goto	l8525
 11645                           
 11646                           ; BSR set to: 0
 11647  0038' 0E01               	movlw	1
 11648  003A' 0100               	movlb	0	; () banked
 11649  003C' 6F00'              	movwf	___awmod@counter& (0+255),b
 11650  003E' D006               	goto	l8515
 11651  0040'                    l8513:
 11652                           
 11653                           ; BSR set to: 0
 11654  0040' 0100               	movlb	0	; () banked
 11655  0042' 90D8               	bcf	status,0,c
 11656  0044' 3700'              	rlcf	___awmod@divisor& (0+255),f,b
 11657  0046' 3700'              	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11658  0048' 0100               	movlb	0	; () banked
 11659  004A' 2B00'              	incf	___awmod@counter& (0+255),f,b
 11660  004C'                    l8515:
 11661                           
 11662                           ; BSR set to: 0
 11663  004C' 0100               	movlb	0	; () banked
 11664  004E' AF00'              	btfss	(___awmod@divisor+1)& (0+255),7,b
 11665  0050' D7F7               	goto	l8513
 11666  0052'                    l8517:
 11667                           
 11668                           ; BSR set to: 0
 11669  0052' 0100               	movlb	0	; () banked
 11670  0054' 5100'              	movf	___awmod@divisor& (0+255),w,b
 11671  0056' 0100               	movlb	0	; () banked
 11672  0058' 5D00'              	subwf	___awmod@dividend& (0+255),w,b
 11673  005A' 0100               	movlb	0	; () banked
 11674  005C' 5100'              	movf	(___awmod@divisor+1)& (0+255),w,b
 11675  005E' 0100               	movlb	0	; () banked
 11676  0060' 5900'              	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11677  0062' A0D8               	btfss	status,0,c
 11678  0064' D008               	goto	l8521
 11679                           
 11680                           ; BSR set to: 0
 11681  0066' 0100               	movlb	0	; () banked
 11682  0068' 5100'              	movf	___awmod@divisor& (0+255),w,b
 11683  006A' 0100               	movlb	0	; () banked
 11684  006C' 5F00'              	subwf	___awmod@dividend& (0+255),f,b
 11685  006E' 0100               	movlb	0	; () banked
 11686  0070' 5100'              	movf	(___awmod@divisor+1)& (0+255),w,b
 11687  0072' 0100               	movlb	0	; () banked
 11688  0074' 5B00'              	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11689  0076'                    l8521:
 11690                           
 11691                           ; BSR set to: 0
 11692  0076' 0100               	movlb	0	; () banked
 11693  0078' 90D8               	bcf	status,0,c
 11694  007A' 3300'              	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11695  007C' 3300'              	rrcf	___awmod@divisor& (0+255),f,b
 11696                           
 11697                           ; BSR set to: 0
 11698  007E' 0100               	movlb	0	; () banked
 11699  0080' 2F00'              	decfsz	___awmod@counter& (0+255),f,b
 11700  0082' D7E7               	goto	l8517
 11701  0084'                    l8525:
 11702                           
 11703                           ; BSR set to: 0
 11704  0084' 0100               	movlb	0	; () banked
 11705  0086' 5100'              	movf	___awmod@sign& (0+255),w,b
 11706  0088' 0100               	movlb	0	; () banked
 11707  008A' B4D8               	btfsc	status,2,c
 11708  008C' D005               	goto	l8529
 11709                           
 11710                           ; BSR set to: 0
 11711  008E' 0100               	movlb	0	; () banked
 11712  0090' 6D00'              	negf	___awmod@dividend& (0+255),b
 11713  0092' 1F00'              	comf	(___awmod@dividend+1)& (0+255),f,b
 11714  0094' B0D8               	btfsc	status,0,c
 11715  0096' 2B00'              	incf	(___awmod@dividend+1)& (0+255),f,b
 11716  0098'                    l8529:
 11717                           
 11718                           ; BSR set to: 0
 11719  0098' C000' F000'        	movff	___awmod@dividend,?___awmod
 11720  009C' C001' F001'        	movff	___awmod@dividend+1,?___awmod+1
 11721  00A0' 0012               	return	
 11722  00A2'                    __end_of___awmod:
 11723                           	opt stack 0
 11724                           tblptru	equ	0xFF8
 11725                           tblptrh	equ	0xFF7
 11726                           tblptrl	equ	0xFF6
 11727                           tablat	equ	0xFF5
 11728                           prodh	equ	0xFF4
 11729                           prodl	equ	0xFF3
 11730                           intcon	equ	0xFF2
 11731                           intcon2	equ	0xFF1
 11732                           indf0	equ	0xFEF
 11733                           postinc0	equ	0xFEE
 11734                           fsr0h	equ	0xFEA
 11735                           fsr0l	equ	0xFE9
 11736                           wreg	equ	0xFE8
 11737                           postinc1	equ	0xFE6
 11738                           postdec1	equ	0xFE5
 11739                           fsr1h	equ	0xFE2
 11740                           fsr1l	equ	0xFE1
 11741                           indf2	equ	0xFDF
 11742                           postinc2	equ	0xFDE
 11743                           postdec2	equ	0xFDD
 11744                           fsr2h	equ	0xFDA
 11745                           fsr2l	equ	0xFD9
 11746                           status	equ	0xFD8
 11747                           
 11748 ;; *************** function ___lmul *****************
 11749 ;; Defined at:
 11750 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  multiplier      4   13[BANK0 ] unsigned long 
 11753 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;  product         4   21[BANK0 ] unsigned long 
 11756 ;; Return value:  Size  Location     Type
 11757 ;;                  4   13[BANK0 ] unsigned long 
 11758 ;; Registers used:
 11759 ;;		wreg, status,2, status,0
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11765 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11768 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11769 ;;Total ram usage:       12 bytes
 11770 ;; Hardware stack levels used:    1
 11771 ;; Hardware stack levels required when called:    4
 11772 ;; This function calls:
 11773 ;;		Nothing
 11774 ;; This function is called by:
 11775 ;;		_get_quot_rem
 11776 ;;		_caltime_to_epoch
 11777 ;;		_light_task
 11778 ;;		_RTCC_adjust_time_inc
 11779 ;;		_RTCC_adjust_time_dec
 11780 ;; This function uses a non-reentrant model
 11781 ;;
 11782                           
 11783                           	psect	text47
 11784  0000'                    __ptext47:
 11785                           	opt stack 0
 11786  0000'                    ___lmul:
 11787                           	opt stack 19
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;incstack = 0
 11791  0000' 0E00               	movlw	0
 11792  0002' 0100               	movlb	0	; () banked
 11793  0004' 6F00'              	movwf	___lmul@product& (0+255),b
 11794  0006' 0E00               	movlw	0
 11795  0008' 6F00'              	movwf	(___lmul@product+1)& (0+255),b
 11796  000A' 0E00               	movlw	0
 11797  000C' 6F00'              	movwf	(___lmul@product+2)& (0+255),b
 11798  000E' 0E00               	movlw	0
 11799  0010' 6F00'              	movwf	(___lmul@product+3)& (0+255),b
 11800  0012'                    l8563:
 11801                           
 11802                           ; BSR set to: 0
 11803  0012' 0100               	movlb	0	; () banked
 11804  0014' A100'              	btfss	___lmul@multiplier& (0+255),0,b
 11805  0016' D010               	goto	l8567
 11806                           
 11807                           ; BSR set to: 0
 11808  0018' 0100               	movlb	0	; () banked
 11809  001A' 5100'              	movf	___lmul@multiplicand& (0+255),w,b
 11810  001C' 0100               	movlb	0	; () banked
 11811  001E' 2700'              	addwf	___lmul@product& (0+255),f,b
 11812  0020' 0100               	movlb	0	; () banked
 11813  0022' 5100'              	movf	(___lmul@multiplicand+1)& (0+255),w,b
 11814  0024' 0100               	movlb	0	; () banked
 11815  0026' 2300'              	addwfc	(___lmul@product+1)& (0+255),f,b
 11816  0028' 0100               	movlb	0	; () banked
 11817  002A' 5100'              	movf	(___lmul@multiplicand+2)& (0+255),w,b
 11818  002C' 0100               	movlb	0	; () banked
 11819  002E' 2300'              	addwfc	(___lmul@product+2)& (0+255),f,b
 11820  0030' 0100               	movlb	0	; () banked
 11821  0032' 5100'              	movf	(___lmul@multiplicand+3)& (0+255),w,b
 11822  0034' 0100               	movlb	0	; () banked
 11823  0036' 2300'              	addwfc	(___lmul@product+3)& (0+255),f,b
 11824  0038'                    l8567:
 11825                           
 11826                           ; BSR set to: 0
 11827  0038' 0100               	movlb	0	; () banked
 11828  003A' 90D8               	bcf	status,0,c
 11829  003C' 3700'              	rlcf	___lmul@multiplicand& (0+255),f,b
 11830  003E' 3700'              	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 11831  0040' 3700'              	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 11832  0042' 3700'              	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 11833                           
 11834                           ; BSR set to: 0
 11835  0044' 0100               	movlb	0	; () banked
 11836  0046' 90D8               	bcf	status,0,c
 11837  0048' 3300'              	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 11838  004A' 3300'              	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 11839  004C' 3300'              	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 11840  004E' 3300'              	rrcf	___lmul@multiplier& (0+255),f,b
 11841  0050' 0100               	movlb	0	; () banked
 11842  0052' 5100'              	movf	___lmul@multiplier& (0+255),w,b
 11843  0054' 0100               	movlb	0	; () banked
 11844  0056' 1100'              	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 11845  0058' 0100               	movlb	0	; () banked
 11846  005A' 1100'              	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 11847  005C' 0100               	movlb	0	; () banked
 11848  005E' 1100'              	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 11849  0060' A4D8               	btfss	status,2,c
 11850  0062' D7D7               	goto	l8563
 11851                           
 11852                           ; BSR set to: 0
 11853  0064' C015' F00D'        	movff	___lmul@product,?___lmul
 11854  0068' C016' F00E'        	movff	___lmul@product+1,?___lmul+1
 11855  006C' C017' F00F'        	movff	___lmul@product+2,?___lmul+2
 11856  0070' C018' F010'        	movff	___lmul@product+3,?___lmul+3
 11857                           
 11858                           ; BSR set to: 0
 11859  0074' 0012               	return		;funcret
 11860  0076'                    __end_of___lmul:
 11861                           	opt stack 0
 11862                           tblptru	equ	0xFF8
 11863                           tblptrh	equ	0xFF7
 11864                           tblptrl	equ	0xFF6
 11865                           tablat	equ	0xFF5
 11866                           prodh	equ	0xFF4
 11867                           prodl	equ	0xFF3
 11868                           intcon	equ	0xFF2
 11869                           intcon2	equ	0xFF1
 11870                           indf0	equ	0xFEF
 11871                           postinc0	equ	0xFEE
 11872                           fsr0h	equ	0xFEA
 11873                           fsr0l	equ	0xFE9
 11874                           wreg	equ	0xFE8
 11875                           postinc1	equ	0xFE6
 11876                           postdec1	equ	0xFE5
 11877                           fsr1h	equ	0xFE2
 11878                           fsr1l	equ	0xFE1
 11879                           indf2	equ	0xFDF
 11880                           postinc2	equ	0xFDE
 11881                           postdec2	equ	0xFDD
 11882                           fsr2h	equ	0xFDA
 11883                           fsr2l	equ	0xFD9
 11884                           status	equ	0xFD8
 11885                           
 11886 ;; *************** function _RTCC_to_caltime *****************
 11887 ;; Defined at:
 11888 ;;		line 89 in file "../My_library/My_RTCC.c"
 11889 ;; Parameters:    Size  Location     Type
 11890 ;;  tm              2    1[BANK0 ] PTR struct .
 11891 ;;		 -> now(14), 
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;  dumy            1    3[BANK0 ] unsigned char 
 11894 ;; Return value:  Size  Location     Type
 11895 ;;		None               void
 11896 ;; Registers used:
 11897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11906 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11907 ;;Total ram usage:        3 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; Hardware stack levels required when called:    5
 11910 ;; This function calls:
 11911 ;;		_x_to_d
 11912 ;; This function is called by:
 11913 ;;		_RTCC_from_RTCC
 11914 ;; This function uses a non-reentrant model
 11915 ;;
 11916                           
 11917                           	psect	text48
 11918  0000'                    __ptext48:
 11919                           	opt stack 0
 11920  0000'                    _RTCC_to_caltime:
 11921                           	opt stack 19
 11922  0000'                    l855:
 11923  0000' 010F               	movlb	15	; () banked
 11924  0002' B93F               	btfsc	63,4,b	;volatile
 11925  0004' D7FD               	goto	l855
 11926                           
 11927                           ; BSR set to: 15
 11928                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 11929  0006' 010F               	movlb	15	; () banked
 11930  0008' 813F               	bsf	63,0,b	;volatile
 11931                           
 11932                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 11933  000A' 010F               	movlb	15	; () banked
 11934  000C' 833F               	bsf	63,1,b	;volatile
 11935                           
 11936                           ; BSR set to: 15
 11937                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 11938  000E' 0100               	movlb	0	; () banked
 11939  0010' EE20 F00A          	lfsr	2,10
 11940  0014' 5100'              	movf	RTCC_to_caltime@tm& (0+255),w,b
 11941  0016' 26D9               	addwf	fsr2l,f,c
 11942  0018' 5100'              	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11943  001A' 22DA               	addwfc	fsr2h,f,c
 11944  001C' 010F               	movlb	15	; () banked
 11945  001E' 513A               	movf	58,w,b	;volatile
 11946  0020' EC00' F000'        	call	_x_to_d
 11947  0024' 6EDF               	movwf	indf2,c
 11948                           
 11949                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 11950  0026' CF3B F003'         	movff	3899,RTCC_to_caltime@dumy	;volatile
 11951                           
 11952                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 11953  002A' 0100               	movlb	0	; () banked
 11954  002C' EE20 F008          	lfsr	2,8
 11955  0030' 5100'              	movf	RTCC_to_caltime@tm& (0+255),w,b
 11956  0032' 26D9               	addwf	fsr2l,f,c
 11957  0034' 5100'              	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11958  0036' 22DA               	addwfc	fsr2h,f,c
 11959  0038' 010F               	movlb	15	; () banked
 11960  003A' 513A               	movf	58,w,b	;volatile
 11961  003C' EC00' F000'        	call	_x_to_d
 11962  0040' 6EDF               	movwf	indf2,c
 11963                           
 11964                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 11965  0042' 0100               	movlb	0	; () banked
 11966  0044' EE20 F009          	lfsr	2,9
 11967  0048' 5100'              	movf	RTCC_to_caltime@tm& (0+255),w,b
 11968  004A' 26D9               	addwf	fsr2l,f,c
 11969  004C' 5100'              	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11970  004E' 22DA               	addwfc	fsr2h,f,c
 11971  0050' 010F               	movlb	15	; () banked
 11972  0052' 513B               	movf	59,w,b	;volatile
 11973  0054' EC00' F000'        	call	_x_to_d
 11974  0058' 6EDF               	movwf	indf2,c
 11975                           
 11976                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 11977  005A' 0100               	movlb	0	; () banked
 11978  005C' EE20 F006          	lfsr	2,6
 11979  0060' 5100'              	movf	RTCC_to_caltime@tm& (0+255),w,b
 11980  0062' 26D9               	addwf	fsr2l,f,c
 11981  0064' 5100'              	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11982  0066' 22DA               	addwfc	fsr2h,f,c
 11983  0068' 010F               	movlb	15	; () banked
 11984  006A' 513A               	movf	58,w,b	;volatile
 11985  006C' EC00' F000'        	call	_x_to_d
 11986  0070' 6EDF               	movwf	indf2,c
 11987                           
 11988                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 11989  0072' 0100               	movlb	0	; () banked
 11990  0074' EE20 F007          	lfsr	2,7
 11991  0078' 5100'              	movf	RTCC_to_caltime@tm& (0+255),w,b
 11992  007A' 26D9               	addwf	fsr2l,f,c
 11993  007C' 5100'              	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11994  007E' 22DA               	addwfc	fsr2h,f,c
 11995  0080' 010F               	movlb	15	; () banked
 11996  0082' 513B               	movf	59,w,b	;volatile
 11997  0084' EC00' F000'        	call	_x_to_d
 11998  0088' 6EDF               	movwf	indf2,c
 11999                           
 12000                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 12001  008A' 0100               	movlb	0	; () banked
 12002  008C' EE20 F004          	lfsr	2,4
 12003  0090' 5100'              	movf	RTCC_to_caltime@tm& (0+255),w,b
 12004  0092' 26D9               	addwf	fsr2l,f,c
 12005  0094' 5100'              	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12006  0096' 22DA               	addwfc	fsr2h,f,c
 12007  0098' 010F               	movlb	15	; () banked
 12008  009A' 513A               	movf	58,w,b	;volatile
 12009  009C' EC00' F000'        	call	_x_to_d
 12010  00A0' 6EDF               	movwf	indf2,c
 12011                           
 12012                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 12013  00A2' 0100               	movlb	0	; () banked
 12014  00A4' EE20 F005          	lfsr	2,5
 12015  00A8' 5100'              	movf	RTCC_to_caltime@tm& (0+255),w,b
 12016  00AA' 26D9               	addwf	fsr2l,f,c
 12017  00AC' 5100'              	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12018  00AE' 22DA               	addwfc	fsr2h,f,c
 12019  00B0' 010F               	movlb	15	; () banked
 12020  00B2' 513B               	movf	59,w,b	;volatile
 12021  00B4' EC00' F000'        	call	_x_to_d
 12022  00B8' 6EDF               	movwf	indf2,c
 12023  00BA' 0012               	return		;funcret
 12024  00BC'                    __end_of_RTCC_to_caltime:
 12025                           	opt stack 0
 12026                           tblptru	equ	0xFF8
 12027                           tblptrh	equ	0xFF7
 12028                           tblptrl	equ	0xFF6
 12029                           tablat	equ	0xFF5
 12030                           prodh	equ	0xFF4
 12031                           prodl	equ	0xFF3
 12032                           intcon	equ	0xFF2
 12033                           intcon2	equ	0xFF1
 12034                           indf0	equ	0xFEF
 12035                           postinc0	equ	0xFEE
 12036                           fsr0h	equ	0xFEA
 12037                           fsr0l	equ	0xFE9
 12038                           wreg	equ	0xFE8
 12039                           postinc1	equ	0xFE6
 12040                           postdec1	equ	0xFE5
 12041                           fsr1h	equ	0xFE2
 12042                           fsr1l	equ	0xFE1
 12043                           indf2	equ	0xFDF
 12044                           postinc2	equ	0xFDE
 12045                           postdec2	equ	0xFDD
 12046                           fsr2h	equ	0xFDA
 12047                           fsr2l	equ	0xFD9
 12048                           status	equ	0xFD8
 12049                           
 12050 ;; *************** function _x_to_d *****************
 12051 ;; Defined at:
 12052 ;;		line 51 in file "../My_library/My_RTCC.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;  hex             1    wreg     unsigned char 
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;  hex             1    0[BANK0 ] unsigned char 
 12057 ;; Return value:  Size  Location     Type
 12058 ;;                  1    wreg      unsigned char 
 12059 ;; Registers used:
 12060 ;;		wreg, status,2, status,0, prodl, prodh
 12061 ;; Tracked objects:
 12062 ;;		On entry : 0/0
 12063 ;;		On exit  : 0/0
 12064 ;;		Unchanged: 0/0
 12065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12069 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12070 ;;Total ram usage:        2 bytes
 12071 ;; Hardware stack levels used:    1
 12072 ;; Hardware stack levels required when called:    4
 12073 ;; This function calls:
 12074 ;;		Nothing
 12075 ;; This function is called by:
 12076 ;;		_RTCC_to_caltime
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           	psect	text49
 12081  0000'                    __ptext49:
 12082                           	opt stack 0
 12083  0000'                    _x_to_d:
 12084                           	opt stack 19
 12085                           
 12086                           ;incstack = 0
 12087                           ;x_to_d@hex stored from wreg
 12088  0000' 0100               	movlb	0	; () banked
 12089  0002' 6F00'              	movwf	x_to_d@hex& (0+255),b
 12090                           
 12091                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 12092  0004' C000' F01F'        	movff	x_to_d@hex,??_x_to_d
 12093  0008' 0E0F               	movlw	15
 12094  000A' 161F'              	andwf	??_x_to_d,f,c
 12095  000C' 0100               	movlb	0	; () banked
 12096  000E' 3900'              	swapf	x_to_d@hex& (0+255),w,b
 12097  0010' 0B0F               	andlw	15
 12098  0012' 0B0F               	andlw	15
 12099  0014' 0D0A               	mullw	10
 12100  0016' 50F3               	movf	prodl,w,c
 12101  0018' 241F'              	addwf	??_x_to_d,w,c
 12102  001A' 0012               	return	
 12103  001C'                    __end_of_x_to_d:
 12104                           	opt stack 0
 12105                           tblptru	equ	0xFF8
 12106                           tblptrh	equ	0xFF7
 12107                           tblptrl	equ	0xFF6
 12108                           tablat	equ	0xFF5
 12109                           prodh	equ	0xFF4
 12110                           prodl	equ	0xFF3
 12111                           intcon	equ	0xFF2
 12112                           intcon2	equ	0xFF1
 12113                           indf0	equ	0xFEF
 12114                           postinc0	equ	0xFEE
 12115                           fsr0h	equ	0xFEA
 12116                           fsr0l	equ	0xFE9
 12117                           wreg	equ	0xFE8
 12118                           postinc1	equ	0xFE6
 12119                           postdec1	equ	0xFE5
 12120                           fsr1h	equ	0xFE2
 12121                           fsr1l	equ	0xFE1
 12122                           indf2	equ	0xFDF
 12123                           postinc2	equ	0xFDE
 12124                           postdec2	equ	0xFDD
 12125                           fsr2h	equ	0xFDA
 12126                           fsr2l	equ	0xFD9
 12127                           status	equ	0xFD8
 12128                           
 12129 ;; *************** function _ISR *****************
 12130 ;; Defined at:
 12131 ;;		line 61 in file "PIC18F27J53-killifish_light05.c"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;		None
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;		None
 12136 ;; Return value:  Size  Location     Type
 12137 ;;		None               void
 12138 ;; Registers used:
 12139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12147 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12148 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12149 ;;Total ram usage:       15 bytes
 12150 ;; Hardware stack levels used:    1
 12151 ;; Hardware stack levels required when called:    3
 12152 ;; This function calls:
 12153 ;;		_UART_ISR
 12154 ;;		_button_timer_interrupt
 12155 ;; This function is called by:
 12156 ;;		Interrupt level 2
 12157 ;; This function uses a non-reentrant model
 12158 ;;
 12159                           
 12160                           	psect	intcode
 12161  0000'                    __pintcode:
 12162                           	opt stack 0
 12163  0000'                    _ISR:
 12164                           	opt stack 18
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;incstack = 0
 12168  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12169  0002' CFFA F011'         	movff	pclath,??_ISR+1
 12170  0006' CFFB F012'         	movff	pclatu,??_ISR+2
 12171  000A' CFE9 F013'         	movff	fsr0l,??_ISR+3
 12172  000E' CFEA F014'         	movff	fsr0h,??_ISR+4
 12173  0012' CFE1 F015'         	movff	fsr1l,??_ISR+5
 12174  0016' CFE2 F016'         	movff	fsr1h,??_ISR+6
 12175  001A' CFD9 F017'         	movff	fsr2l,??_ISR+7
 12176  001E' CFDA F018'         	movff	fsr2h,??_ISR+8
 12177  0022' CFF3 F019'         	movff	prodl,??_ISR+9
 12178  0026' CFF4 F01A'         	movff	prodh,??_ISR+10
 12179  002A' CFF6 F01B'         	movff	tblptrl,??_ISR+11
 12180  002E' CFF7 F01C'         	movff	tblptrh,??_ISR+12
 12181  0032' CFF8 F01D'         	movff	tblptru,??_ISR+13
 12182  0036' CFF5 F01E'         	movff	tablat,??_ISR+14
 12183                           
 12184                           ;PIC18F27J53-killifish_light05.c: 62: UART_ISR();
 12185  003A' EC00' F000'        	call	_UART_ISR	;wreg free
 12186                           
 12187                           ;PIC18F27J53-killifish_light05.c: 63: if (INTCONbits.T0IF) {
 12188  003E' B4F2               	btfsc	intcon,2,c	;volatile
 12189                           
 12190                           ;PIC18F27J53-killifish_light05.c: 64: INTCONbits.T0IF = 0;
 12191  0040' 94F2               	bcf	intcon,2,c	;volatile
 12192                           
 12193                           ;PIC18F27J53-killifish_light05.c: 65: }
 12194                           ;PIC18F27J53-killifish_light05.c: 66: if (PIR1bits.TMR1IF) {
 12195  0042' A09E               	btfss	3998,0,c	;volatile
 12196  0044' D010               	goto	i2l10047
 12197                           
 12198                           ;PIC18F27J53-killifish_light05.c: 67: PIR1bits.TMR1IF = 0;
 12199  0046' 909E               	bcf	3998,0,c	;volatile
 12200                           
 12201                           ;PIC18F27J53-killifish_light05.c: 68: TMR1H = 0x80;
 12202  0048' 0E80               	movlw	128
 12203  004A' 6ECF               	movwf	4047,c	;volatile
 12204                           
 12205                           ;PIC18F27J53-killifish_light05.c: 69: LATBbits.LATB5 = !LATBbits.LATB5;
 12206  004C' BA8A               	btfsc	3978,5,c	;volatile
 12207  004E' D003               	goto	i2u1043_40
 12208  0050' 6A00'              	clrf	??_ISR& (0+255),c
 12209  0052' 2A00'              	incf	??_ISR& (0+255),f,c
 12210  0054' D001               	goto	i2u1044_48
 12211  0056'                    i2u1043_40:
 12212  0056' 6A00'              	clrf	??_ISR& (0+255),c
 12213  0058'                    i2u1044_48:
 12214  0058' 3A10'              	swapf	??_ISR,f,c
 12215  005A' 4610'              	rlncf	??_ISR,f,c
 12216  005C' 508A               	movf	3978,w,c	;volatile
 12217  005E' 1810'              	xorwf	??_ISR,w,c
 12218  0060' 0BDF               	andlw	-33
 12219  0062' 1810'              	xorwf	??_ISR,w,c
 12220  0064' 6E8A               	movwf	3978,c	;volatile
 12221  0066'                    i2l10047:
 12222                           
 12223                           ;PIC18F27J53-killifish_light05.c: 70: }
 12224                           ;PIC18F27J53-killifish_light05.c: 71: if (PIR2bits.TMR3IF) {
 12225  0066' A2A1               	btfss	4001,1,c	;volatile
 12226  0068' D028               	goto	i2l1525
 12227                           
 12228                           ;PIC18F27J53-killifish_light05.c: 72: PIR2bits.TMR3IF = 0;
 12229  006A' 92A1               	bcf	4001,1,c	;volatile
 12230                           
 12231                           ;PIC18F27J53-killifish_light05.c: 73: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 12232  006C' 0E00'              	movlw	low _sw_R
 12233  006E' 6E00'              	movwf	button_timer_interrupt@bt,c
 12234  0070' 0E00'              	movlw	high _sw_R
 12235  0072' 6E01'              	movwf	button_timer_interrupt@bt+1,c
 12236  0074' BA80               	btfsc	3968,5,c	;volatile
 12237  0076' D002               	goto	i2u1046_40
 12238  0078' 0E01               	movlw	1
 12239  007A' D001               	goto	i2u1047_40
 12240  007C'                    i2u1046_40:
 12241  007C' 0E00               	movlw	0
 12242  007E'                    i2u1047_40:
 12243  007E' 6E02'              	movwf	button_timer_interrupt@sw_value,c
 12244  0080' EC00' F000'        	call	_button_timer_interrupt	;wreg free
 12245                           
 12246                           ;PIC18F27J53-killifish_light05.c: 74: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 12247  0084' 0E00'              	movlw	low _sw_G
 12248  0086' 6E00'              	movwf	button_timer_interrupt@bt,c
 12249  0088' 0E00'              	movlw	high _sw_G
 12250  008A' 6E01'              	movwf	button_timer_interrupt@bt+1,c
 12251  008C' BC80               	btfsc	3968,6,c	;volatile
 12252  008E' D002               	goto	i2u1048_40
 12253  0090' 0E01               	movlw	1
 12254  0092' D001               	goto	i2u1049_40
 12255  0094'                    i2u1048_40:
 12256  0094' 0E00               	movlw	0
 12257  0096'                    i2u1049_40:
 12258  0096' 6E02'              	movwf	button_timer_interrupt@sw_value,c
 12259  0098' EC00' F000'        	call	_button_timer_interrupt	;wreg free
 12260                           
 12261                           ;PIC18F27J53-killifish_light05.c: 75: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 12262  009C' 0E00'              	movlw	low _sw_B
 12263  009E' 6E00'              	movwf	button_timer_interrupt@bt,c
 12264  00A0' 0E00'              	movlw	high _sw_B
 12265  00A2' 6E01'              	movwf	button_timer_interrupt@bt+1,c
 12266  00A4' BE80               	btfsc	3968,7,c	;volatile
 12267  00A6' D002               	goto	i2u1050_40
 12268  00A8' 0E01               	movlw	1
 12269  00AA' D001               	goto	i2u1051_40
 12270  00AC'                    i2u1050_40:
 12271  00AC' 0E00               	movlw	0
 12272  00AE'                    i2u1051_40:
 12273  00AE' 6E02'              	movwf	button_timer_interrupt@sw_value,c
 12274  00B0' EC00' F000'        	call	_button_timer_interrupt	;wreg free
 12275                           
 12276                           ;PIC18F27J53-killifish_light05.c: 76: ADC_flag = 1;
 12277  00B4' 0E01               	movlw	1
 12278  00B6' 0101               	movlb	1	; () banked
 12279  00B8' 6F00'              	movwf	_ADC_flag& (0+255),b
 12280  00BA'                    i2l1525:
 12281  00BA' C01E' FFF5         	movff	??_ISR+14,tablat
 12282  00BE' C01D' FFF8         	movff	??_ISR+13,tblptru
 12283  00C2' C01C' FFF7         	movff	??_ISR+12,tblptrh
 12284  00C6' C01B' FFF6         	movff	??_ISR+11,tblptrl
 12285  00CA' C01A' FFF4         	movff	??_ISR+10,prodh
 12286  00CE' C019' FFF3         	movff	??_ISR+9,prodl
 12287  00D2' C018' FFDA         	movff	??_ISR+8,fsr2h
 12288  00D6' C017' FFD9         	movff	??_ISR+7,fsr2l
 12289  00DA' C016' FFE2         	movff	??_ISR+6,fsr1h
 12290  00DE' C015' FFE1         	movff	??_ISR+5,fsr1l
 12291  00E2' C014' FFEA         	movff	??_ISR+4,fsr0h
 12292  00E6' C013' FFE9         	movff	??_ISR+3,fsr0l
 12293  00EA' C012' FFFB         	movff	??_ISR+2,pclatu
 12294  00EE' C011' FFFA         	movff	??_ISR+1,pclath
 12295  00F2' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12296  00F4' 0011               	retfie		f
 12297  00F6'                    __end_of_ISR:
 12298                           	opt stack 0
 12299                           pclatu	equ	0xFFB
 12300                           pclath	equ	0xFFA
 12301                           tblptru	equ	0xFF8
 12302                           tblptrh	equ	0xFF7
 12303                           tblptrl	equ	0xFF6
 12304                           tablat	equ	0xFF5
 12305                           prodh	equ	0xFF4
 12306                           prodl	equ	0xFF3
 12307                           intcon	equ	0xFF2
 12308                           intcon2	equ	0xFF1
 12309                           indf0	equ	0xFEF
 12310                           postinc0	equ	0xFEE
 12311                           fsr0h	equ	0xFEA
 12312                           fsr0l	equ	0xFE9
 12313                           wreg	equ	0xFE8
 12314                           postinc1	equ	0xFE6
 12315                           postdec1	equ	0xFE5
 12316                           fsr1h	equ	0xFE2
 12317                           fsr1l	equ	0xFE1
 12318                           indf2	equ	0xFDF
 12319                           postinc2	equ	0xFDE
 12320                           postdec2	equ	0xFDD
 12321                           fsr2h	equ	0xFDA
 12322                           fsr2l	equ	0xFD9
 12323                           status	equ	0xFD8
 12324                           
 12325 ;; *************** function _button_timer_interrupt *****************
 12326 ;; Defined at:
 12327 ;;		line 3 in file "../My_library/My_button.c"
 12328 ;; Parameters:    Size  Location     Type
 12329 ;;  bt              2    0[COMRAM] PTR struct button
 12330 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 12331 ;;  sw_value        1    2[COMRAM] unsigned char 
 12332 ;; Auto vars:     Size  Location     Type
 12333 ;;		None
 12334 ;; Return value:  Size  Location     Type
 12335 ;;		None               void
 12336 ;; Registers used:
 12337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12338 ;; Tracked objects:
 12339 ;;		On entry : 0/0
 12340 ;;		On exit  : 0/0
 12341 ;;		Unchanged: 0/0
 12342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12343 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12346 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12347 ;;Total ram usage:        5 bytes
 12348 ;; Hardware stack levels used:    1
 12349 ;; This function calls:
 12350 ;;		Nothing
 12351 ;; This function is called by:
 12352 ;;		_ISR
 12353 ;; This function uses a non-reentrant model
 12354 ;;
 12355                           
 12356                           	psect	text51
 12357  0000'                    __ptext51:
 12358                           	opt stack 0
 12359  0000'                    _button_timer_interrupt:
 12360                           	opt stack 20
 12361                           
 12362                           ;My_button.c: 4: if (sw_value) {
 12363                           
 12364                           ;incstack = 0
 12365  0000' 5002'              	movf	button_timer_interrupt@sw_value,w,c
 12366  0002' B4D8               	btfsc	status,2,c
 12367  0004' D098               	goto	i2l7519
 12368                           
 12369                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 12370  0006' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12371  000A' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12372  000E' 0E84               	movlw	132
 12373  0010' 18DE               	xorwf	postinc2,w,c
 12374  0012' E10B               	bnz	i2l525
 12375  0014' 0E03               	movlw	3
 12376  0016' 18DE               	xorwf	postinc2,w,c
 12377  0018' A4D8               	btfss	status,2,c
 12378  001A' D007               	goto	i2l525
 12379  001C' EE20 F003          	lfsr	2,3
 12380  0020' 5000'              	movf	button_timer_interrupt@bt,w,c
 12381  0022' 26D9               	addwf	fsr2l,f,c
 12382  0024' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12383  0026' 22DA               	addwfc	fsr2h,f,c
 12384  0028' 8EDF               	bsf	indf2,7,c
 12385  002A'                    i2l525:
 12386                           
 12387                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 12388  002A' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12389  002E' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12390  0032' 0EBC               	movlw	188
 12391  0034' 18DE               	xorwf	postinc2,w,c
 12392  0036' E10B               	bnz	i2l526
 12393  0038' 0E02               	movlw	2
 12394  003A' 18DE               	xorwf	postinc2,w,c
 12395  003C' A4D8               	btfss	status,2,c
 12396  003E' D007               	goto	i2l526
 12397  0040' EE20 F003          	lfsr	2,3
 12398  0044' 5000'              	movf	button_timer_interrupt@bt,w,c
 12399  0046' 26D9               	addwf	fsr2l,f,c
 12400  0048' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12401  004A' 22DA               	addwfc	fsr2h,f,c
 12402  004C' 8CDF               	bsf	indf2,6,c
 12403  004E'                    i2l526:
 12404                           
 12405                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 12406  004E' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12407  0052' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12408  0056' 0EF4               	movlw	244
 12409  0058' 18DE               	xorwf	postinc2,w,c
 12410  005A' E10A               	bnz	i2l527
 12411  005C' 04DE               	decf	postinc2,w,c
 12412  005E' A4D8               	btfss	status,2,c
 12413  0060' D007               	goto	i2l527
 12414  0062' EE20 F003          	lfsr	2,3
 12415  0066' 5000'              	movf	button_timer_interrupt@bt,w,c
 12416  0068' 26D9               	addwf	fsr2l,f,c
 12417  006A' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12418  006C' 22DA               	addwfc	fsr2h,f,c
 12419  006E' 8ADF               	bsf	indf2,5,c
 12420  0070'                    i2l527:
 12421                           
 12422                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 12423  0070' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12424  0074' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12425  0078' 0E2C               	movlw	44
 12426  007A' 18DE               	xorwf	postinc2,w,c
 12427  007C' E10A               	bnz	i2l528
 12428  007E' 04DE               	decf	postinc2,w,c
 12429  0080' A4D8               	btfss	status,2,c
 12430  0082' D007               	goto	i2l528
 12431  0084' EE20 F003          	lfsr	2,3
 12432  0088' 5000'              	movf	button_timer_interrupt@bt,w,c
 12433  008A' 26D9               	addwf	fsr2l,f,c
 12434  008C' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12435  008E' 22DA               	addwfc	fsr2h,f,c
 12436  0090' 88DF               	bsf	indf2,4,c
 12437  0092'                    i2l528:
 12438                           
 12439                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 12440  0092' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12441  0096' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12442  009A' 0E96               	movlw	150
 12443  009C' 18DE               	xorwf	postinc2,w,c
 12444  009E' 10DE               	iorwf	postinc2,w,c
 12445  00A0' A4D8               	btfss	status,2,c
 12446  00A2' D007               	goto	i2l529
 12447  00A4' EE20 F003          	lfsr	2,3
 12448  00A8' 5000'              	movf	button_timer_interrupt@bt,w,c
 12449  00AA' 26D9               	addwf	fsr2l,f,c
 12450  00AC' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12451  00AE' 22DA               	addwfc	fsr2h,f,c
 12452  00B0' 86DF               	bsf	indf2,3,c
 12453  00B2'                    i2l529:
 12454                           
 12455                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 12456  00B2' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12457  00B6' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12458  00BA' 0E3C               	movlw	60
 12459  00BC' 18DE               	xorwf	postinc2,w,c
 12460  00BE' 10DE               	iorwf	postinc2,w,c
 12461  00C0' A4D8               	btfss	status,2,c
 12462  00C2' D007               	goto	i2l530
 12463  00C4' EE20 F003          	lfsr	2,3
 12464  00C8' 5000'              	movf	button_timer_interrupt@bt,w,c
 12465  00CA' 26D9               	addwf	fsr2l,f,c
 12466  00CC' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12467  00CE' 22DA               	addwfc	fsr2h,f,c
 12468  00D0' 84DF               	bsf	indf2,2,c
 12469  00D2'                    i2l530:
 12470                           
 12471                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 12472  00D2' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12473  00D6' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12474  00DA' 0E10               	movlw	16
 12475  00DC' 18DE               	xorwf	postinc2,w,c
 12476  00DE' 10DE               	iorwf	postinc2,w,c
 12477  00E0' A4D8               	btfss	status,2,c
 12478  00E2' D007               	goto	i2l531
 12479  00E4' EE20 F003          	lfsr	2,3
 12480  00E8' 5000'              	movf	button_timer_interrupt@bt,w,c
 12481  00EA' 26D9               	addwf	fsr2l,f,c
 12482  00EC' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12483  00EE' 22DA               	addwfc	fsr2h,f,c
 12484  00F0' 82DF               	bsf	indf2,1,c
 12485  00F2'                    i2l531:
 12486                           
 12487                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 12488  00F2' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12489  00F6' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12490  00FA' 0E02               	movlw	2
 12491  00FC' 18DE               	xorwf	postinc2,w,c
 12492  00FE' 10DE               	iorwf	postinc2,w,c
 12493  0100' A4D8               	btfss	status,2,c
 12494  0102' D007               	goto	i2l532
 12495  0104' EE20 F003          	lfsr	2,3
 12496  0108' 5000'              	movf	button_timer_interrupt@bt,w,c
 12497  010A' 26D9               	addwf	fsr2l,f,c
 12498  010C' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12499  010E' 22DA               	addwfc	fsr2h,f,c
 12500  0110' 80DF               	bsf	indf2,0,c
 12501  0112'                    i2l532:
 12502                           
 12503                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 12504  0112' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12505  0116' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12506  011A' 0E85               	movlw	133
 12507  011C' 5CDE               	subwf	postinc2,w,c
 12508  011E' 0E03               	movlw	3
 12509  0120' 58DE               	subwfb	postinc2,w,c
 12510  0122' B0D8               	btfsc	status,0,c
 12511  0124' 0012               	return	
 12512  0126' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12513  012A' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12514  012E' 2ADE               	incf	postinc2,f,c
 12515  0130' 0E00               	movlw	0
 12516  0132' 22DD               	addwfc	postdec2,f,c
 12517                           
 12518                           ;My_button.c: 14: } else {
 12519  0134' 0012               	return	
 12520  0136'                    i2l7519:
 12521                           
 12522                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 12523  0136' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12524  013A' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12525  013E' 0E84               	movlw	132
 12526  0140' 5CDE               	subwf	postinc2,w,c
 12527  0142' 0E03               	movlw	3
 12528  0144' 58DE               	subwfb	postinc2,w,c
 12529  0146' A0D8               	btfss	status,0,c
 12530  0148' D008               	goto	i2l7523
 12531  014A' EE20 F002          	lfsr	2,2
 12532  014E' 5000'              	movf	button_timer_interrupt@bt,w,c
 12533  0150' 26D9               	addwf	fsr2l,f,c
 12534  0152' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12535  0154' 22DA               	addwfc	fsr2h,f,c
 12536  0156' 8EDF               	bsf	indf2,7,c
 12537  0158' D081               	goto	i2l7551
 12538  015A'                    i2l7523:
 12539                           
 12540                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 12541  015A' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12542  015E' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12543  0162' 0EBC               	movlw	188
 12544  0164' 5CDE               	subwf	postinc2,w,c
 12545  0166' 0E02               	movlw	2
 12546  0168' 58DE               	subwfb	postinc2,w,c
 12547  016A' A0D8               	btfss	status,0,c
 12548  016C' D008               	goto	i2l7527
 12549  016E' EE20 F002          	lfsr	2,2
 12550  0172' 5000'              	movf	button_timer_interrupt@bt,w,c
 12551  0174' 26D9               	addwf	fsr2l,f,c
 12552  0176' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12553  0178' 22DA               	addwfc	fsr2h,f,c
 12554  017A' 8CDF               	bsf	indf2,6,c
 12555  017C' D06F               	goto	i2l7551
 12556  017E'                    i2l7527:
 12557                           
 12558                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 12559  017E' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12560  0182' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12561  0186' 0EF4               	movlw	244
 12562  0188' 5CDE               	subwf	postinc2,w,c
 12563  018A' 0E01               	movlw	1
 12564  018C' 58DE               	subwfb	postinc2,w,c
 12565  018E' A0D8               	btfss	status,0,c
 12566  0190' D008               	goto	i2l7531
 12567  0192' EE20 F002          	lfsr	2,2
 12568  0196' 5000'              	movf	button_timer_interrupt@bt,w,c
 12569  0198' 26D9               	addwf	fsr2l,f,c
 12570  019A' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12571  019C' 22DA               	addwfc	fsr2h,f,c
 12572  019E' 8ADF               	bsf	indf2,5,c
 12573  01A0' D05D               	goto	i2l7551
 12574  01A2'                    i2l7531:
 12575                           
 12576                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 12577  01A2' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12578  01A6' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12579  01AA' 0E2C               	movlw	44
 12580  01AC' 5CDE               	subwf	postinc2,w,c
 12581  01AE' 0E01               	movlw	1
 12582  01B0' 58DE               	subwfb	postinc2,w,c
 12583  01B2' A0D8               	btfss	status,0,c
 12584  01B4' D008               	goto	i2l7535
 12585  01B6' EE20 F002          	lfsr	2,2
 12586  01BA' 5000'              	movf	button_timer_interrupt@bt,w,c
 12587  01BC' 26D9               	addwf	fsr2l,f,c
 12588  01BE' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12589  01C0' 22DA               	addwfc	fsr2h,f,c
 12590  01C2' 88DF               	bsf	indf2,4,c
 12591  01C4' D04B               	goto	i2l7551
 12592  01C6'                    i2l7535:
 12593                           
 12594                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 12595  01C6' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12596  01CA' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12597  01CE' 0E01               	movlw	1
 12598  01D0' 50DB               	movf	plusw2,w,c
 12599  01D2' E104               	bnz	i2u717_40
 12600  01D4' 0E96               	movlw	150
 12601  01D6' 5CDE               	subwf	postinc2,w,c
 12602  01D8' A0D8               	btfss	status,0,c
 12603  01DA' D008               	goto	i2l7539
 12604  01DC'                    i2u717_40:
 12605  01DC' EE20 F002          	lfsr	2,2
 12606  01E0' 5000'              	movf	button_timer_interrupt@bt,w,c
 12607  01E2' 26D9               	addwf	fsr2l,f,c
 12608  01E4' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12609  01E6' 22DA               	addwfc	fsr2h,f,c
 12610  01E8' 86DF               	bsf	indf2,3,c
 12611  01EA' D038               	goto	i2l7551
 12612  01EC'                    i2l7539:
 12613                           
 12614                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 12615  01EC' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12616  01F0' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12617  01F4' 0E01               	movlw	1
 12618  01F6' 50DB               	movf	plusw2,w,c
 12619  01F8' E104               	bnz	i2u718_40
 12620  01FA' 0E3C               	movlw	60
 12621  01FC' 5CDE               	subwf	postinc2,w,c
 12622  01FE' A0D8               	btfss	status,0,c
 12623  0200' D008               	goto	i2l7543
 12624  0202'                    i2u718_40:
 12625  0202' EE20 F002          	lfsr	2,2
 12626  0206' 5000'              	movf	button_timer_interrupt@bt,w,c
 12627  0208' 26D9               	addwf	fsr2l,f,c
 12628  020A' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12629  020C' 22DA               	addwfc	fsr2h,f,c
 12630  020E' 84DF               	bsf	indf2,2,c
 12631  0210' D025               	goto	i2l7551
 12632  0212'                    i2l7543:
 12633                           
 12634                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 12635  0212' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12636  0216' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12637  021A' 0E01               	movlw	1
 12638  021C' 50DB               	movf	plusw2,w,c
 12639  021E' E104               	bnz	i2u719_40
 12640  0220' 0E10               	movlw	16
 12641  0222' 5CDE               	subwf	postinc2,w,c
 12642  0224' A0D8               	btfss	status,0,c
 12643  0226' D008               	goto	i2l7547
 12644  0228'                    i2u719_40:
 12645  0228' EE20 F002          	lfsr	2,2
 12646  022C' 5000'              	movf	button_timer_interrupt@bt,w,c
 12647  022E' 26D9               	addwf	fsr2l,f,c
 12648  0230' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12649  0232' 22DA               	addwfc	fsr2h,f,c
 12650  0234' 82DF               	bsf	indf2,1,c
 12651  0236' D012               	goto	i2l7551
 12652  0238'                    i2l7547:
 12653                           
 12654                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 12655  0238' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12656  023C' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12657  0240' 0E01               	movlw	1
 12658  0242' 50DB               	movf	plusw2,w,c
 12659  0244' E104               	bnz	i2u720_40
 12660  0246' 0E02               	movlw	2
 12661  0248' 5CDE               	subwf	postinc2,w,c
 12662  024A' A0D8               	btfss	status,0,c
 12663  024C' D007               	goto	i2l7551
 12664  024E'                    i2u720_40:
 12665  024E' EE20 F002          	lfsr	2,2
 12666  0252' 5000'              	movf	button_timer_interrupt@bt,w,c
 12667  0254' 26D9               	addwf	fsr2l,f,c
 12668  0256' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12669  0258' 22DA               	addwfc	fsr2h,f,c
 12670  025A' 80DF               	bsf	indf2,0,c
 12671  025C'                    i2l7551:
 12672                           
 12673                           ;My_button.c: 23: bt->cnt_sw = 0;
 12674  025C' C000' FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12675  0260' C001' FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12676  0264' 0E00               	movlw	0
 12677  0266' 6EDE               	movwf	postinc2,c
 12678  0268' 0E00               	movlw	0
 12679  026A' 6EDD               	movwf	postdec2,c
 12680                           
 12681                           ;My_button.c: 24: bt->flags &= 0x00FF;
 12682  026C' EE20 F002          	lfsr	2,2
 12683  0270' 5000'              	movf	button_timer_interrupt@bt,w,c
 12684  0272' 26D9               	addwf	fsr2l,f,c
 12685  0274' 5001'              	movf	button_timer_interrupt@bt+1,w,c
 12686  0276' 22DA               	addwfc	fsr2h,f,c
 12687  0278' 0EFF               	movlw	255
 12688  027A' 16DE               	andwf	postinc2,f,c
 12689  027C' 0E00               	movlw	0
 12690  027E' 16DD               	andwf	postdec2,f,c
 12691  0280' 0012               	return	
 12692  0282'                    __end_of_button_timer_interrupt:
 12693                           	opt stack 0
 12694                           pclatu	equ	0xFFB
 12695                           pclath	equ	0xFFA
 12696                           tblptru	equ	0xFF8
 12697                           tblptrh	equ	0xFF7
 12698                           tblptrl	equ	0xFF6
 12699                           tablat	equ	0xFF5
 12700                           prodh	equ	0xFF4
 12701                           prodl	equ	0xFF3
 12702                           intcon	equ	0xFF2
 12703                           intcon2	equ	0xFF1
 12704                           indf0	equ	0xFEF
 12705                           postinc0	equ	0xFEE
 12706                           fsr0h	equ	0xFEA
 12707                           fsr0l	equ	0xFE9
 12708                           wreg	equ	0xFE8
 12709                           postinc1	equ	0xFE6
 12710                           postdec1	equ	0xFE5
 12711                           fsr1h	equ	0xFE2
 12712                           fsr1l	equ	0xFE1
 12713                           indf2	equ	0xFDF
 12714                           postinc2	equ	0xFDE
 12715                           postdec2	equ	0xFDD
 12716                           plusw2	equ	0xFDB
 12717                           fsr2h	equ	0xFDA
 12718                           fsr2l	equ	0xFD9
 12719                           status	equ	0xFD8
 12720                           
 12721 ;; *************** function _UART_ISR *****************
 12722 ;; Defined at:
 12723 ;;		line 29 in file "../My_library/My_UART.c"
 12724 ;; Parameters:    Size  Location     Type
 12725 ;;		None
 12726 ;; Auto vars:     Size  Location     Type
 12727 ;;  ascii           1   15[COMRAM] unsigned char 
 12728 ;; Return value:  Size  Location     Type
 12729 ;;		None               void
 12730 ;; Registers used:
 12731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12732 ;; Tracked objects:
 12733 ;;		On entry : 0/0
 12734 ;;		On exit  : 0/0
 12735 ;;		Unchanged: 0/0
 12736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12741 ;;Total ram usage:        1 bytes
 12742 ;; Hardware stack levels used:    1
 12743 ;; Hardware stack levels required when called:    2
 12744 ;; This function calls:
 12745 ;;		i2_ringbuf_num
 12746 ;;		i2_ringbuf_pop
 12747 ;;		i2_ringbuf_put
 12748 ;; This function is called by:
 12749 ;;		_ISR
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           	psect	text52
 12754  0000'                    __ptext52:
 12755                           	opt stack 0
 12756  0000'                    _UART_ISR:
 12757                           	opt stack 18
 12758                           
 12759                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 12760                           
 12761                           ;incstack = 0
 12762  0000' B89D               	btfsc	3997,4,c	;volatile
 12763  0002' A89E               	btfss	3998,4,c	;volatile
 12764  0004' D013               	goto	i2l1286
 12765                           
 12766                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
 12767  0006' 0E00'              	movlw	low _uart_tx
 12768  0008' 6E00'              	movwf	i2ringbuf_num@rb,c
 12769  000A' 0E00'              	movlw	high _uart_tx
 12770  000C' 6E01'              	movwf	i2ringbuf_num@rb+1,c
 12771  000E' EC00' F000'        	call	i2_ringbuf_num	;wreg free
 12772  0012' 5000'              	movf	?i2_ringbuf_num,w,c
 12773  0014' 1001'              	iorwf	?i2_ringbuf_num+1,w,c
 12774  0016' B4D8               	btfsc	status,2,c
 12775  0018' D008               	goto	i2l1287
 12776                           
 12777                           ;My_UART.c: 32: TXREG1 = ringbuf_pop(&uart_tx);
 12778  001A' 0E00'              	movlw	low _uart_tx
 12779  001C' 6E08'              	movwf	i2ringbuf_pop@rb,c
 12780  001E' 0E00'              	movlw	high _uart_tx
 12781  0020' 6E09'              	movwf	i2ringbuf_pop@rb+1,c
 12782  0022' EC00' F000'        	call	i2_ringbuf_pop	;wreg free
 12783  0026' 6EAE               	movwf	4014,c	;volatile
 12784                           
 12785                           ;My_UART.c: 33: } else {
 12786  0028' D001               	goto	i2l1286
 12787  002A'                    i2l1287:
 12788                           
 12789                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
 12790  002A' 989D               	bcf	3997,4,c	;volatile
 12791  002C'                    i2l1286:
 12792                           
 12793                           ;My_UART.c: 35: }
 12794                           ;My_UART.c: 36: }
 12795                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 12796  002C' AA9D               	btfss	3997,5,c	;volatile
 12797  002E' 0012               	return	
 12798  0030' AA9E               	btfss	3998,5,c	;volatile
 12799  0032' 0012               	return	
 12800                           
 12801                           ;My_UART.c: 38: char ascii = RCREG1;
 12802  0034' CFAF F00F'         	movff	4015,UART_ISR@ascii	;volatile
 12803                           
 12804                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
 12805  0038' 0E00'              	movlw	low _uart_rx
 12806  003A' 6E08'              	movwf	i2ringbuf_put@rb,c
 12807  003C' 0E00'              	movlw	high _uart_rx
 12808  003E' 6E09'              	movwf	i2ringbuf_put@rb+1,c
 12809  0040' C00F' F00A'        	movff	UART_ISR@ascii,i2ringbuf_put@data
 12810  0044' EC00' F000'        	call	i2_ringbuf_put	;wreg free
 12811  0048' 0012               	return	
 12812  004A'                    __end_of_UART_ISR:
 12813                           	opt stack 0
 12814                           pclatu	equ	0xFFB
 12815                           pclath	equ	0xFFA
 12816                           tblptru	equ	0xFF8
 12817                           tblptrh	equ	0xFF7
 12818                           tblptrl	equ	0xFF6
 12819                           tablat	equ	0xFF5
 12820                           prodh	equ	0xFF4
 12821                           prodl	equ	0xFF3
 12822                           intcon	equ	0xFF2
 12823                           intcon2	equ	0xFF1
 12824                           indf0	equ	0xFEF
 12825                           postinc0	equ	0xFEE
 12826                           fsr0h	equ	0xFEA
 12827                           fsr0l	equ	0xFE9
 12828                           wreg	equ	0xFE8
 12829                           postinc1	equ	0xFE6
 12830                           postdec1	equ	0xFE5
 12831                           fsr1h	equ	0xFE2
 12832                           fsr1l	equ	0xFE1
 12833                           indf2	equ	0xFDF
 12834                           postinc2	equ	0xFDE
 12835                           postdec2	equ	0xFDD
 12836                           plusw2	equ	0xFDB
 12837                           fsr2h	equ	0xFDA
 12838                           fsr2l	equ	0xFD9
 12839                           status	equ	0xFD8
 12840                           
 12841 ;; *************** function i2_ringbuf_put *****************
 12842 ;; Defined at:
 12843 ;;		line 20 in file "../My_library/My_ringbuf.c"
 12844 ;; Parameters:    Size  Location     Type
 12845 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 12846 ;;		 -> usb_rx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
 12847 ;;		 -> lcd_tx(8), 
 12848 ;;  data            1   10[COMRAM] unsigned char 
 12849 ;; Auto vars:     Size  Location     Type
 12850 ;;		None
 12851 ;; Return value:  Size  Location     Type
 12852 ;;		None               void
 12853 ;; Registers used:
 12854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12860 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12862 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12863 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12864 ;;Total ram usage:        7 bytes
 12865 ;; Hardware stack levels used:    1
 12866 ;; Hardware stack levels required when called:    1
 12867 ;; This function calls:
 12868 ;;		i2_ringbuf_num
 12869 ;; This function is called by:
 12870 ;;		_UART_ISR
 12871 ;; This function uses a non-reentrant model
 12872 ;;
 12873                           
 12874                           	psect	text53
 12875  0000'                    __ptext53:
 12876                           	opt stack 0
 12877  0000'                    i2_ringbuf_put:
 12878                           	opt stack 18
 12879                           
 12880                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 12881                           
 12882                           ;incstack = 0
 12883  0000' C008' F000'        	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 12884  0004' C009' F001'        	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 12885  0008' EC00' F000'        	call	i2_ringbuf_num	;wreg free
 12886  000C' EE20 F002          	lfsr	2,2
 12887  0010' 5008'              	movf	i2ringbuf_put@rb,w,c
 12888  0012' 26D9               	addwf	fsr2l,f,c
 12889  0014' 5009'              	movf	i2ringbuf_put@rb+1,w,c
 12890  0016' 22DA               	addwfc	fsr2h,f,c
 12891  0018' 50DE               	movf	postinc2,w,c
 12892  001A' 5C00'              	subwf	?i2_ringbuf_num,w,c
 12893  001C' 50DE               	movf	postinc2,w,c
 12894  001E' 5801'              	subwfb	?i2_ringbuf_num+1,w,c
 12895  0020' B0D8               	btfsc	status,0,c
 12896  0022' 0012               	return	
 12897                           
 12898                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
 12899  0024' EE20 F004          	lfsr	2,4
 12900  0028' 5008'              	movf	i2ringbuf_put@rb,w,c
 12901  002A' 26D9               	addwf	fsr2l,f,c
 12902  002C' 5009'              	movf	i2ringbuf_put@rb+1,w,c
 12903  002E' 22DA               	addwfc	fsr2h,f,c
 12904  0030' CFDE F00B'         	movff	postinc2,??i2_ringbuf_put
 12905  0034' CFDD F00C'         	movff	postdec2,??i2_ringbuf_put+1
 12906  0038' C008' FFD9         	movff	i2ringbuf_put@rb,fsr2l
 12907  003C' C009' FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 12908  0040' CFDE F00D'         	movff	postinc2,??i2_ringbuf_put+2
 12909  0044' CFDD F00E'         	movff	postdec2,??i2_ringbuf_put+3
 12910  0048' 500B'              	movf	??i2_ringbuf_put,w,c
 12911  004A' 240D'              	addwf	??i2_ringbuf_put+2,w,c
 12912  004C' 6ED9               	movwf	fsr2l,c
 12913  004E' 500C'              	movf	??i2_ringbuf_put+1,w,c
 12914  0050' 200E'              	addwfc	??i2_ringbuf_put+3,w,c
 12915  0052' 6EDA               	movwf	fsr2h,c
 12916  0054' C00A' FFDF         	movff	i2ringbuf_put@data,indf2
 12917                           
 12918                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 12919  0058' EE20 F002          	lfsr	2,2
 12920  005C' 5008'              	movf	i2ringbuf_put@rb,w,c
 12921  005E' 26D9               	addwf	fsr2l,f,c
 12922  0060' 5009'              	movf	i2ringbuf_put@rb+1,w,c
 12923  0062' 22DA               	addwfc	fsr2h,f,c
 12924  0064' EE10 F004          	lfsr	1,4
 12925  0068' 5008'              	movf	i2ringbuf_put@rb,w,c
 12926  006A' 26E1               	addwf	fsr1l,f,c
 12927  006C' 5009'              	movf	i2ringbuf_put@rb+1,w,c
 12928  006E' 22E2               	addwfc	fsr1h,f,c
 12929  0070' CFE6 F00D'         	movff	postinc1,??i2_ringbuf_put+2
 12930  0074' CFE5 F00E'         	movff	postdec1,??i2_ringbuf_put+3
 12931  0078' 0E01               	movlw	1
 12932  007A' 260D'              	addwf	??i2_ringbuf_put+2,f,c
 12933  007C' 0E00               	movlw	0
 12934  007E' 220E'              	addwfc	??i2_ringbuf_put+3,f,c
 12935  0080' 50DE               	movf	postinc2,w,c
 12936  0082' 5C0D'              	subwf	??i2_ringbuf_put+2,w,c
 12937  0084' 50DE               	movf	postinc2,w,c
 12938  0086' 580E'              	subwfb	??i2_ringbuf_put+3,w,c
 12939  0088' B0D8               	btfsc	status,0,c
 12940  008A' D00A               	goto	i2l9413
 12941  008C' EE20 F004          	lfsr	2,4
 12942  0090' 5008'              	movf	i2ringbuf_put@rb,w,c
 12943  0092' 26D9               	addwf	fsr2l,f,c
 12944  0094' 5009'              	movf	i2ringbuf_put@rb+1,w,c
 12945  0096' 22DA               	addwfc	fsr2h,f,c
 12946  0098' 2ADE               	incf	postinc2,f,c
 12947  009A' 0E00               	movlw	0
 12948  009C' 22DD               	addwfc	postdec2,f,c
 12949  009E' 0012               	return	
 12950  00A0'                    i2l9413:
 12951                           
 12952                           ;My_ringbuf.c: 24: else rb->head = 0;
 12953  00A0' EE20 F004          	lfsr	2,4
 12954  00A4' 5008'              	movf	i2ringbuf_put@rb,w,c
 12955  00A6' 26D9               	addwf	fsr2l,f,c
 12956  00A8' 5009'              	movf	i2ringbuf_put@rb+1,w,c
 12957  00AA' 22DA               	addwfc	fsr2h,f,c
 12958  00AC' 0E00               	movlw	0
 12959  00AE' 6EDE               	movwf	postinc2,c
 12960  00B0' 0E00               	movlw	0
 12961  00B2' 6EDD               	movwf	postdec2,c
 12962  00B4' 0012               	return	
 12963  00B6'                    __end_ofi2_ringbuf_put:
 12964                           	opt stack 0
 12965                           pclatu	equ	0xFFB
 12966                           pclath	equ	0xFFA
 12967                           tblptru	equ	0xFF8
 12968                           tblptrh	equ	0xFF7
 12969                           tblptrl	equ	0xFF6
 12970                           tablat	equ	0xFF5
 12971                           prodh	equ	0xFF4
 12972                           prodl	equ	0xFF3
 12973                           intcon	equ	0xFF2
 12974                           intcon2	equ	0xFF1
 12975                           indf0	equ	0xFEF
 12976                           postinc0	equ	0xFEE
 12977                           fsr0h	equ	0xFEA
 12978                           fsr0l	equ	0xFE9
 12979                           wreg	equ	0xFE8
 12980                           postinc1	equ	0xFE6
 12981                           postdec1	equ	0xFE5
 12982                           fsr1h	equ	0xFE2
 12983                           fsr1l	equ	0xFE1
 12984                           indf2	equ	0xFDF
 12985                           postinc2	equ	0xFDE
 12986                           postdec2	equ	0xFDD
 12987                           plusw2	equ	0xFDB
 12988                           fsr2h	equ	0xFDA
 12989                           fsr2l	equ	0xFD9
 12990                           status	equ	0xFD8
 12991                           
 12992 ;; *************** function i2_ringbuf_pop *****************
 12993 ;; Defined at:
 12994 ;;		line 45 in file "../My_library/My_ringbuf.c"
 12995 ;; Parameters:    Size  Location     Type
 12996 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 12997 ;;		 -> usb_tx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
 12998 ;;		 -> lcd_tx(8), 
 12999 ;; Auto vars:     Size  Location     Type
 13000 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 13001 ;; Return value:  Size  Location     Type
 13002 ;;                  1    wreg      unsigned char 
 13003 ;; Registers used:
 13004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13005 ;; Tracked objects:
 13006 ;;		On entry : 0/0
 13007 ;;		On exit  : 0/0
 13008 ;;		Unchanged: 0/0
 13009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13012 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13013 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13014 ;;Total ram usage:        7 bytes
 13015 ;; Hardware stack levels used:    1
 13016 ;; Hardware stack levels required when called:    1
 13017 ;; This function calls:
 13018 ;;		i2_ringbuf_num
 13019 ;; This function is called by:
 13020 ;;		_UART_ISR
 13021 ;; This function uses a non-reentrant model
 13022 ;;
 13023                           
 13024                           	psect	text54
 13025  0000'                    __ptext54:
 13026                           	opt stack 0
 13027  0000'                    i2_ringbuf_pop:
 13028                           	opt stack 18
 13029                           
 13030                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 13031                           
 13032                           ;incstack = 0
 13033  0000' C008' F000'        	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 13034  0004' C009' F001'        	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 13035  0008' EC00' F000'        	call	i2_ringbuf_num	;wreg free
 13036  000C' 5000'              	movf	?i2_ringbuf_num,w,c
 13037  000E' 1001'              	iorwf	?i2_ringbuf_num+1,w,c
 13038  0010' B4D8               	btfsc	status,2,c
 13039  0012' D04A               	goto	i2l9431
 13040                           
 13041                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 13042  0014' EE20 F006          	lfsr	2,6
 13043  0018' 5008'              	movf	i2ringbuf_pop@rb,w,c
 13044  001A' 26D9               	addwf	fsr2l,f,c
 13045  001C' 5009'              	movf	i2ringbuf_pop@rb+1,w,c
 13046  001E' 22DA               	addwfc	fsr2h,f,c
 13047  0020' CFDE F00A'         	movff	postinc2,??i2_ringbuf_pop
 13048  0024' CFDD F00B'         	movff	postdec2,??i2_ringbuf_pop+1
 13049  0028' C008' FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 13050  002C' C009' FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 13051  0030' CFDE F00C'         	movff	postinc2,??i2_ringbuf_pop+2
 13052  0034' CFDD F00D'         	movff	postdec2,??i2_ringbuf_pop+3
 13053  0038' 500A'              	movf	??i2_ringbuf_pop,w,c
 13054  003A' 240C'              	addwf	??i2_ringbuf_pop+2,w,c
 13055  003C' 6ED9               	movwf	fsr2l,c
 13056  003E' 500B'              	movf	??i2_ringbuf_pop+1,w,c
 13057  0040' 200D'              	addwfc	??i2_ringbuf_pop+3,w,c
 13058  0042' 6EDA               	movwf	fsr2h,c
 13059  0044' 50DF               	movf	indf2,w,c
 13060  0046' 6E0E'              	movwf	i2ringbuf_pop@ret,c
 13061                           
 13062                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 13063  0048' EE20 F002          	lfsr	2,2
 13064  004C' 5008'              	movf	i2ringbuf_pop@rb,w,c
 13065  004E' 26D9               	addwf	fsr2l,f,c
 13066  0050' 5009'              	movf	i2ringbuf_pop@rb+1,w,c
 13067  0052' 22DA               	addwfc	fsr2h,f,c
 13068  0054' EE10 F006          	lfsr	1,6
 13069  0058' 5008'              	movf	i2ringbuf_pop@rb,w,c
 13070  005A' 26E1               	addwf	fsr1l,f,c
 13071  005C' 5009'              	movf	i2ringbuf_pop@rb+1,w,c
 13072  005E' 22E2               	addwfc	fsr1h,f,c
 13073  0060' CFE6 F00C'         	movff	postinc1,??i2_ringbuf_pop+2
 13074  0064' CFE5 F00D'         	movff	postdec1,??i2_ringbuf_pop+3
 13075  0068' 0E01               	movlw	1
 13076  006A' 260C'              	addwf	??i2_ringbuf_pop+2,f,c
 13077  006C' 0E00               	movlw	0
 13078  006E' 220D'              	addwfc	??i2_ringbuf_pop+3,f,c
 13079  0070' 50DE               	movf	postinc2,w,c
 13080  0072' 5C0C'              	subwf	??i2_ringbuf_pop+2,w,c
 13081  0074' 50DE               	movf	postinc2,w,c
 13082  0076' 580D'              	subwfb	??i2_ringbuf_pop+3,w,c
 13083  0078' B0D8               	btfsc	status,0,c
 13084  007A' D00A               	goto	i2l9423
 13085                           
 13086                           ;My_ringbuf.c: 49: rb->tail++;
 13087  007C' EE20 F006          	lfsr	2,6
 13088  0080' 5008'              	movf	i2ringbuf_pop@rb,w,c
 13089  0082' 26D9               	addwf	fsr2l,f,c
 13090  0084' 5009'              	movf	i2ringbuf_pop@rb+1,w,c
 13091  0086' 22DA               	addwfc	fsr2h,f,c
 13092  0088' 2ADE               	incf	postinc2,f,c
 13093  008A' 0E00               	movlw	0
 13094  008C' 22DD               	addwfc	postdec2,f,c
 13095                           
 13096                           ;My_ringbuf.c: 50: } else {
 13097  008E' D00A               	goto	i2l9425
 13098  0090'                    i2l9423:
 13099                           
 13100                           ;My_ringbuf.c: 51: rb->tail = 0;
 13101  0090' EE20 F006          	lfsr	2,6
 13102  0094' 5008'              	movf	i2ringbuf_pop@rb,w,c
 13103  0096' 26D9               	addwf	fsr2l,f,c
 13104  0098' 5009'              	movf	i2ringbuf_pop@rb+1,w,c
 13105  009A' 22DA               	addwfc	fsr2h,f,c
 13106  009C' 0E00               	movlw	0
 13107  009E' 6EDE               	movwf	postinc2,c
 13108  00A0' 0E00               	movlw	0
 13109  00A2' 6EDD               	movwf	postdec2,c
 13110  00A4'                    i2l9425:
 13111                           
 13112                           ;My_ringbuf.c: 52: }
 13113                           ;My_ringbuf.c: 53: return ret;
 13114  00A4' 500E'              	movf	i2ringbuf_pop@ret,w,c
 13115                           
 13116                           ;My_ringbuf.c: 54: } else {
 13117  00A6' 0012               	return	
 13118  00A8'                    i2l9431:
 13119                           
 13120                           ;My_ringbuf.c: 55: return 0;
 13121  00A8' 0E00               	movlw	0
 13122  00AA' 0012               	return	
 13123  00AC'                    __end_ofi2_ringbuf_pop:
 13124                           	opt stack 0
 13125                           pclatu	equ	0xFFB
 13126                           pclath	equ	0xFFA
 13127                           tblptru	equ	0xFF8
 13128                           tblptrh	equ	0xFF7
 13129                           tblptrl	equ	0xFF6
 13130                           tablat	equ	0xFF5
 13131                           prodh	equ	0xFF4
 13132                           prodl	equ	0xFF3
 13133                           intcon	equ	0xFF2
 13134                           intcon2	equ	0xFF1
 13135                           indf0	equ	0xFEF
 13136                           postinc0	equ	0xFEE
 13137                           fsr0h	equ	0xFEA
 13138                           fsr0l	equ	0xFE9
 13139                           wreg	equ	0xFE8
 13140                           postinc1	equ	0xFE6
 13141                           postdec1	equ	0xFE5
 13142                           fsr1h	equ	0xFE2
 13143                           fsr1l	equ	0xFE1
 13144                           indf2	equ	0xFDF
 13145                           postinc2	equ	0xFDE
 13146                           postdec2	equ	0xFDD
 13147                           plusw2	equ	0xFDB
 13148                           fsr2h	equ	0xFDA
 13149                           fsr2l	equ	0xFD9
 13150                           status	equ	0xFD8
 13151                           
 13152 ;; *************** function i2_ringbuf_num *****************
 13153 ;; Defined at:
 13154 ;;		line 12 in file "../My_library/My_ringbuf.c"
 13155 ;; Parameters:    Size  Location     Type
 13156 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 13157 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 13158 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 13159 ;; Auto vars:     Size  Location     Type
 13160 ;;		None
 13161 ;; Return value:  Size  Location     Type
 13162 ;;                  2    0[COMRAM] unsigned int 
 13163 ;; Registers used:
 13164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13165 ;; Tracked objects:
 13166 ;;		On entry : 0/0
 13167 ;;		On exit  : 0/0
 13168 ;;		Unchanged: 0/0
 13169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13172 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13173 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13174 ;;Total ram usage:        8 bytes
 13175 ;; Hardware stack levels used:    1
 13176 ;; This function calls:
 13177 ;;		Nothing
 13178 ;; This function is called by:
 13179 ;;		_UART_ISR
 13180 ;;		i2_ringbuf_put
 13181 ;;		i2_ringbuf_pop
 13182 ;; This function uses a non-reentrant model
 13183 ;;
 13184                           
 13185                           	psect	text55
 13186  0000'                    __ptext55:
 13187                           	opt stack 0
 13188  0000'                    i2_ringbuf_num:
 13189                           	opt stack 18
 13190                           
 13191                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 13192                           
 13193                           ;incstack = 0
 13194  0000' EE20 F006          	lfsr	2,6
 13195  0004' 5000'              	movf	i2ringbuf_num@rb,w,c
 13196  0006' 26D9               	addwf	fsr2l,f,c
 13197  0008' 5001'              	movf	i2ringbuf_num@rb+1,w,c
 13198  000A' 22DA               	addwfc	fsr2h,f,c
 13199  000C' EE10 F004          	lfsr	1,4
 13200  0010' 5000'              	movf	i2ringbuf_num@rb,w,c
 13201  0012' 26E1               	addwf	fsr1l,f,c
 13202  0014' 5001'              	movf	i2ringbuf_num@rb+1,w,c
 13203  0016' 22E2               	addwfc	fsr1h,f,c
 13204  0018' 50DE               	movf	postinc2,w,c
 13205  001A' 5CE6               	subwf	postinc1,w,c
 13206  001C' 50DE               	movf	postinc2,w,c
 13207  001E' 58E6               	subwfb	postinc1,w,c
 13208  0020' A0D8               	btfss	status,0,c
 13209  0022' D01F               	goto	i2l9157
 13210                           
 13211                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 13212  0024' EE20 F004          	lfsr	2,4
 13213  0028' 5000'              	movf	i2ringbuf_num@rb,w,c
 13214  002A' 26D9               	addwf	fsr2l,f,c
 13215  002C' 5001'              	movf	i2ringbuf_num@rb+1,w,c
 13216  002E' 22DA               	addwfc	fsr2h,f,c
 13217  0030' CFDE F002'         	movff	postinc2,??i2_ringbuf_num
 13218  0034' CFDD F003'         	movff	postdec2,??i2_ringbuf_num+1
 13219  0038' EE20 F006          	lfsr	2,6
 13220  003C' 5000'              	movf	i2ringbuf_num@rb,w,c
 13221  003E' 26D9               	addwf	fsr2l,f,c
 13222  0040' 5001'              	movf	i2ringbuf_num@rb+1,w,c
 13223  0042' 22DA               	addwfc	fsr2h,f,c
 13224  0044' CFDE F004'         	movff	postinc2,??i2_ringbuf_num+2
 13225  0048' CFDD F005'         	movff	postdec2,??i2_ringbuf_num+3
 13226  004C' 1E04'              	comf	??i2_ringbuf_num+2,f,c
 13227  004E' 1E05'              	comf	??i2_ringbuf_num+3,f,c
 13228  0050' 4A04'              	infsnz	??i2_ringbuf_num+2,f,c
 13229  0052' 2A05'              	incf	??i2_ringbuf_num+3,f,c
 13230  0054' 5002'              	movf	??i2_ringbuf_num,w,c
 13231  0056' 2404'              	addwf	??i2_ringbuf_num+2,w,c
 13232  0058' 6E00'              	movwf	?i2_ringbuf_num,c
 13233  005A' 5003'              	movf	??i2_ringbuf_num+1,w,c
 13234  005C' 2005'              	addwfc	??i2_ringbuf_num+3,w,c
 13235  005E' 6E01'              	movwf	?i2_ringbuf_num+1,c
 13236                           
 13237                           ;My_ringbuf.c: 15: } else {
 13238  0060' 0012               	return	
 13239  0062'                    i2l9157:
 13240                           
 13241                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 13242  0062' EE20 F004          	lfsr	2,4
 13243  0066' 5000'              	movf	i2ringbuf_num@rb,w,c
 13244  0068' 26D9               	addwf	fsr2l,f,c
 13245  006A' 5001'              	movf	i2ringbuf_num@rb+1,w,c
 13246  006C' 22DA               	addwfc	fsr2h,f,c
 13247  006E' CFDE F002'         	movff	postinc2,??i2_ringbuf_num
 13248  0072' CFDD F003'         	movff	postdec2,??i2_ringbuf_num+1
 13249  0076' EE20 F002          	lfsr	2,2
 13250  007A' 5000'              	movf	i2ringbuf_num@rb,w,c
 13251  007C' 26D9               	addwf	fsr2l,f,c
 13252  007E' 5001'              	movf	i2ringbuf_num@rb+1,w,c
 13253  0080' 22DA               	addwfc	fsr2h,f,c
 13254  0082' CFDE F004'         	movff	postinc2,??i2_ringbuf_num+2
 13255  0086' CFDD F005'         	movff	postdec2,??i2_ringbuf_num+3
 13256  008A' EE20 F006          	lfsr	2,6
 13257  008E' 5000'              	movf	i2ringbuf_num@rb,w,c
 13258  0090' 26D9               	addwf	fsr2l,f,c
 13259  0092' 5001'              	movf	i2ringbuf_num@rb+1,w,c
 13260  0094' 22DA               	addwfc	fsr2h,f,c
 13261  0096' CFDE F006'         	movff	postinc2,??i2_ringbuf_num+4
 13262  009A' CFDD F007'         	movff	postdec2,??i2_ringbuf_num+5
 13263  009E' 1E06'              	comf	??i2_ringbuf_num+4,f,c
 13264  00A0' 1E07'              	comf	??i2_ringbuf_num+5,f,c
 13265  00A2' 4A06'              	infsnz	??i2_ringbuf_num+4,f,c
 13266  00A4' 2A07'              	incf	??i2_ringbuf_num+5,f,c
 13267  00A6' 5004'              	movf	??i2_ringbuf_num+2,w,c
 13268  00A8' 2606'              	addwf	??i2_ringbuf_num+4,f,c
 13269  00AA' 5005'              	movf	??i2_ringbuf_num+3,w,c
 13270  00AC' 2207'              	addwfc	??i2_ringbuf_num+5,f,c
 13271  00AE' 5002'              	movf	??i2_ringbuf_num,w,c
 13272  00B0' 2406'              	addwf	??i2_ringbuf_num+4,w,c
 13273  00B2' 6E00'              	movwf	?i2_ringbuf_num,c
 13274  00B4' 5003'              	movf	??i2_ringbuf_num+1,w,c
 13275  00B6' 2007'              	addwfc	??i2_ringbuf_num+5,w,c
 13276  00B8' 6E01'              	movwf	?i2_ringbuf_num+1,c
 13277  00BA' 0012               	return	
 13278  00BC'                    __end_ofi2_ringbuf_num:
 13279                           	opt stack 0
 13280                           pclatu	equ	0xFFB
 13281                           pclath	equ	0xFFA
 13282                           tblptru	equ	0xFF8
 13283                           tblptrh	equ	0xFF7
 13284                           tblptrl	equ	0xFF6
 13285                           tablat	equ	0xFF5
 13286                           prodh	equ	0xFF4
 13287                           prodl	equ	0xFF3
 13288                           intcon	equ	0xFF2
 13289                           intcon2	equ	0xFF1
 13290                           indf0	equ	0xFEF
 13291                           postinc0	equ	0xFEE
 13292                           fsr0h	equ	0xFEA
 13293                           fsr0l	equ	0xFE9
 13294                           wreg	equ	0xFE8
 13295                           postinc1	equ	0xFE6
 13296                           postdec1	equ	0xFE5
 13297                           fsr1h	equ	0xFE2
 13298                           fsr1l	equ	0xFE1
 13299                           indf2	equ	0xFDF
 13300                           postinc2	equ	0xFDE
 13301                           postdec2	equ	0xFDD
 13302                           plusw2	equ	0xFDB
 13303                           fsr2h	equ	0xFDA
 13304                           fsr2l	equ	0xFD9
 13305                           status	equ	0xFD8
 13306                           pclatu	equ	0xFFB
 13307                           pclath	equ	0xFFA
 13308                           tblptru	equ	0xFF8
 13309                           tblptrh	equ	0xFF7
 13310                           tblptrl	equ	0xFF6
 13311                           tablat	equ	0xFF5
 13312                           prodh	equ	0xFF4
 13313                           prodl	equ	0xFF3
 13314                           intcon	equ	0xFF2
 13315                           intcon2	equ	0xFF1
 13316                           indf0	equ	0xFEF
 13317                           postinc0	equ	0xFEE
 13318                           fsr0h	equ	0xFEA
 13319                           fsr0l	equ	0xFE9
 13320                           wreg	equ	0xFE8
 13321                           postinc1	equ	0xFE6
 13322                           postdec1	equ	0xFE5
 13323                           fsr1h	equ	0xFE2
 13324                           fsr1l	equ	0xFE1
 13325                           indf2	equ	0xFDF
 13326                           postinc2	equ	0xFDE
 13327                           postdec2	equ	0xFDD
 13328                           plusw2	equ	0xFDB
 13329                           fsr2h	equ	0xFDA
 13330                           fsr2l	equ	0xFD9
 13331                           status	equ	0xFD8
 13332                           
 13333                           	psect	rparam
 13334  0000                     pclatu	equ	0xFFB
 13335                           pclath	equ	0xFFA
 13336                           tblptru	equ	0xFF8
 13337                           tblptrh	equ	0xFF7
 13338                           tblptrl	equ	0xFF6
 13339                           tablat	equ	0xFF5
 13340                           prodh	equ	0xFF4
 13341                           prodl	equ	0xFF3
 13342                           intcon	equ	0xFF2
 13343                           intcon2	equ	0xFF1
 13344                           indf0	equ	0xFEF
 13345                           postinc0	equ	0xFEE
 13346                           fsr0h	equ	0xFEA
 13347                           fsr0l	equ	0xFE9
 13348                           wreg	equ	0xFE8
 13349                           postinc1	equ	0xFE6
 13350                           postdec1	equ	0xFE5
 13351                           fsr1h	equ	0xFE2
 13352                           fsr1l	equ	0xFE1
 13353                           indf2	equ	0xFDF
 13354                           postinc2	equ	0xFDE
 13355                           postdec2	equ	0xFDD
 13356                           plusw2	equ	0xFDB
 13357                           fsr2h	equ	0xFDA
 13358                           fsr2l	equ	0xFD9
 13359                           status	equ	0xFD8
 13360                           
 13361                           	psect	temp
 13362  0000'                    btemp:
 13363                           	opt stack 0
 13364  0000'                    	ds	1
 13365  0000                     int$flags	set	btemp
 13366                           pclatu	equ	0xFFB
 13367                           pclath	equ	0xFFA
 13368                           tblptru	equ	0xFF8
 13369                           tblptrh	equ	0xFF7
 13370                           tblptrl	equ	0xFF6
 13371                           tablat	equ	0xFF5
 13372                           prodh	equ	0xFF4
 13373                           prodl	equ	0xFF3
 13374                           intcon	equ	0xFF2
 13375                           intcon2	equ	0xFF1
 13376                           indf0	equ	0xFEF
 13377                           postinc0	equ	0xFEE
 13378                           fsr0h	equ	0xFEA
 13379                           fsr0l	equ	0xFE9
 13380                           wreg	equ	0xFE8
 13381                           postinc1	equ	0xFE6
 13382                           postdec1	equ	0xFE5
 13383                           fsr1h	equ	0xFE2
 13384                           fsr1l	equ	0xFE1
 13385                           indf2	equ	0xFDF
 13386                           postinc2	equ	0xFDE
 13387                           postdec2	equ	0xFDD
 13388                           plusw2	equ	0xFDB
 13389                           fsr2h	equ	0xFDA
 13390                           fsr2l	equ	0xFD9
 13391                           status	equ	0xFD8


Data Sizes:
    Strings     534
    Constant    239
    Data        5
    BSS         3753
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160    118     148
    BANK1           256     34     175
    BANK2           256      0     228
    BANK3           256    105     233
    BANK4           256      0     200
    BANK5           256      0     250
    BANK6           256      0     250
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_61(CODE[6]), STR_60(CODE[2]), STR_59(CODE[2]), STR_58(CODE[2]), 
		 -> STR_57(CODE[2]), STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_53(CODE[2]), STR_52(CODE[4]), STR_51(CODE[4]), STR_50(CODE[4]), 
		 -> STR_49(CODE[4]), STR_48(CODE[5]), STR_47(CODE[4]), STR_45(CODE[3]), 
		 -> STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[7]), 
		 -> STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[6]), 
		 -> STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_62(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_46(CODE[15]), STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> terminal_operation@str(BANK1[30]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK0[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 315
		 -> terminal_operation@str(BANK1[30]), STR_43(CODE[315]), STR_24(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(BANK0[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1500
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BIGRAMl[1000]), USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), 
		 -> terminal_task@buf(BANK3[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(BANK0[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(BANK1[4]), sw_R(BANK1[4]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    _terminal_task->_ringbuf_pop
    _terminal_operation->_strcmp
    _terminal_time->_month_length
    _terminal_time->_strcmp
    _sprintf->___lwmod
    _sprintf->_isdigit
    _atoi->_isdigit
    _ringbuf_put_num->___lwmod
    _main_init->_ADC_init
    _main_init->_PWM_init
    _main_init->_timer0_init
    _main_init->_timer1_init
    _main_init->_timer3_init
    _epoch_to_caltime->_month_length
    _light_task->___llmod
    _caltime_to_epoch->_month_length
    ___lmul->_month_length
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->___lwmod
    _ringbuf_put->_ringbuf_num
    ___lwmod->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    ___awdiv->_atoi
    _light_task->_RTCC_from_RTCC
    _PWM_set->___awdiv
    ___lwdiv->___wmul
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _terminal_task->_terminal_operation

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_terminal_task

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  318008
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_task
                          _UART_task
                         _light_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  241492
                                            112 BANK0      6     2      4
                                              0 BANK3    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  58    48     10  201286
                                            100 BANK0     12     2     10
                                              0 BANK1     34    34      0
                            _PWM_set
                            ___awdiv
                             ___wmul
                               _atoi
                    _ringbuf_put_str
                            _sprintf
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  125150
                                             91 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   66172
                                             84 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   34403
                                             52 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   15592
                                             17 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   10721
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   17230
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    8463
                                             31 COMRAM     1     1      0
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   12299
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   11480
                                             17 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8721
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                             31 COMRAM     1     1      0
                                             13 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2659
                                             31 COMRAM     1     1      0
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1646
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   21767
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                             31 COMRAM     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   19090
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2   11391
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8701
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5084
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    2152
                                             22 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0    1697
                                             21 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1635
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_task                                          11    11      0   26588
                                             40 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     470
                                             31 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     955
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2   14046
                                             21 BANK0      5     3      2
                            ___awdiv (ARG)
                            ___lwdiv
                             ___wmul
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4   10676
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1431
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1372
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1372
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7699
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7699
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    6165
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                             31 COMRAM     1     0      1
                                              6 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2988
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              1 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0    3067
                                             16 COMRAM    15    15      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1432
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1635
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     671
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     608
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     322
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _light_task
     _PWM_set
       ___awdiv (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _atoi (ARG)
         ___wmul
         _isdigit
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
     ___llmod
     ___lmul
       ___lldiv (ARG)
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
               ___wmul (ARG)
               _atoi (ARG)
                 ___wmul
                 _isdigit
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _PWM_set
         ___awdiv (ARG)
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___awdiv
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lwdiv
           ___wmul (ARG)
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
         ___wmul
         _isdigit
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
                   ___wmul (ARG)
                   _atoi (ARG)
                     ___wmul
                     _isdigit
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     9C4      36       75.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      FA      18       97.7%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      FA      16       97.7%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100     69      E9      12       91.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      E4      10       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     22      AF       7       68.4%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     76      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60B       8        0.0%
DATA                 0      0     FCF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Jan 12 20:51:36 2016

                     _USB_SD_Ptr 00000B                  _ringbuf_put_num 000000  
                _ringbuf_put_str 000000                     ___awdiv@sign 000012  
                             _ms 000014              ___wmul@multiplicand 000002  
              ??_RTCC_from_epoch 000020                     __CFG_CP0$OFF 000000  
                            l710 000028                              l705 000018  
                            _BDT 000D00                              l861 000000  
                            l774 000002                              l855 000000  
                            l874 0000EC                              _PR2 000FCB  
                            _ISR 000000                              _UIE 000F36  
                            _UIR 000F62                    ?_get_quot_rem 000019  
             caltime_to_epoch@tm 000019                              _now 000035  
              _RTCC_from_caltime 000000                     ___awmod@sign 000005  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                   _USBDeviceState 000015  
             ?_RTCC_from_caltime 00002F                             ?_ISR 000000  
               _terminal_at_hand 000000                             l2101 00006E  
                           l2111 000052                             l2048 0000AA  
                           l2058 000082                             l1528 000018  
                           l1582 000164                             l1587 0001BE  
                           l1851 0000E8                             l9013 000048  
                           l9101 00032A                             l9031 000008  
                           l9023 000048               __CFG_WPFP$PAGE_127 000000  
                           l9113 0000A8                             l9041 00004E  
                           l9017 000002                             l9105 000372  
                           l9123 0000FC                             l9019 00000E  
                           l9141 00017E                             l9133 000168  
                           l9109 000098                             l9045 000060  
                           l9029 000002                             l9301 000060  
                           l9119 0000EC                             l9127 000144  
                           l9231 000034                             l9047 0000AA  
                           l9063 000048                             l8521 000076  
                           l8513 000040                             l8505 00001C  
                           l9137 000172                             l9129 00015E  
                           l9401 000072                             l9049 0000B0  
                           l9081 00019C                             l9073 0000E4  
                           l9065 000054                             l9313 000138  
                           l8515 00004C                             l9147 00018A  
                           l8611 0000B4                             l8603 000092  
                           l9227 000012                             l9075 00011C  
                           l9323 0001CE                             l8517 000052  
                           l8525 000084                             l8509 00002C  
                           l8541 000078                             l8621 00002E  
                           l9181 00002A                             l9237 000074  
                           l9093 000272                             l9085 0001E4  
                           l9069 00009C                             l9341 0002C0  
                           l9333 000264                             l9325 0001D4  
                           l8623 00003E                             l8607 0000A0  
                           l9247 0000AA                             l9255 0000C4  
                           l8703 000020                             l9095 0002AA  
                           l9079 000164                             l9319 000186  
                           l8529 000098                             l8721 00002A  
                           l8633 000098                             l8625 000044  
                           l9169 00002C                             l9265 000044  
                           l9249 0000C0                             l9089 00022A  
                           l9353 000364                             l9345 000308  
                           l9329 00021C                             l9601 0002BA  
                           l8563 000012                             l8731 000060  
                           l8723 000030                             l9275 000016  
                           l9099 0002F2                             l8557 000088  
                           l9701 000200                             l8741 00001C  
                           l8645 0000BC                             l9365 000408  
                           l9357 0003AC                             l9605 0002D6  
                           l8567 000038                             l8671 00002A  
                           l8719 00001E                             l8591 000050  
                           l8831 00016A                             l8743 000022  
                           l8903 0001F4                             l8665 00001A  
                           l9393 00001A                             l8593 00005C  
                           l8585 000032                             l8825 00015E  
                           l8753 000002                             l8921 000278  
                           l9377 0004AC                             l9369 000450  
                           l9609 000316                             l9561 0000E0  
                           l9617 00034C                             l9553 000036  
                           l8683 0000A8                             l8667 000020  
                           l9395 000028                             l9651 0000C2  
                           l8595 000062                             l8579 00001C  
                           l8827 000162                             l8747 000046  
                           l8739 000012                             l8907 00020C  
                           l8851 00002C                             l9299 000048  
                           l9571 000136                             l9563 0000E4  
                           l8677 000084                             l9397 00002E  
                           l9661 00014E                             l8757 00003A  
                           l8933 0002B4                             l8909 000242  
                           l8853 00003E                             l8845 00000E  
                           l9557 000060                             l8687 00010C  
                           l8679 000088                             l8943 00030E  
                           l8919 000272                             l8871 000100  
                           l8863 000080                             l9673 00018A  
                           l9657 000144                             l8953 00033E  
                           l8961 000366                             l8945 000318  
                           l8881 00013E                             l8857 000048  
                           l9593 00025E                             l9585 0001D6  
                           l9577 000184                             l9569 000132  
                           l9683 0001A8                             l9675 00018E  
                           l8963 000372                             l8939 0002D6  
                           l8891 0001A4                             l8883 000144  
                           l9595 000288                             l9587 0001DA  
                           l9579 000188                             l9695 0001E4  
                           l9679 00019E                             l8983 000420  
                           l8975 0003B8                             l8895 0001B6  
                           l8879 000132                             l9599 0002B2  
                           STR_1 0002C5                             l9697 0001E8  
                           l8977 0003BE                             l8969 000398  
                           l8897 0001CE                             l8889 000198  
                           l8985 00042C                             STR_4 000302  
                           l8987 00044C                             STR_7 000304  
                           STR_9 000300                             u6155 00000C  
                           u6156 00000E                             u8410 000032  
                           u8420 000034                             u8430 000064  
                           _UCFG 000F39                             u8450 00007A  
                           u8460 00007C                             u9500 00010E  
                           _UEP0 000F26                             _UEP1 000F27  
                           u8470 0000D0                             u8480 0000D2  
                           u8448 000068                             _UEIE 000F37  
                           u9508 000112                             u8750 00002C  
                           u8760 00005C                             u9490 0000F2  
                           u8757 000022                             u8767 000052  
                           _UEIR 000F63                             _UCON 000F65  
                           u9498 0000F6                  _CDCDataInHandle 000026  
            ??_RTCC_from_caltime 000020                             _pDst 000028  
                           _atoi 000000                             _main 000000  
       button_timer_interrupt@bt 000000                             _sw_B 00007A  
                           _sw_G 00007E                             _sw_R 000082  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2h 000FDA                      _BaudRateGen 000010  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 000000  
         __CFG_DSWDTOSC$T1OSCREF 000000                             pclat 000FFA  
                           prodh 000FF4                             prodl 000FF3  
                __end_of_PWM_set 0001A8                             start 000000* 
               __end_of_ADC_init 00001C                    __CFG_IESO$OFF 000000  
                 terminal_task@i 000068                     ___param_bank 000010  
                ??_terminal_task 000074                  ??_terminal_time 000020  
          __end_ofi2_ringbuf_pop 0000AC            __end_ofi2_ringbuf_num 0000BC  
          __end_ofi2_ringbuf_put 0000B6               terminal_task@ascii 000067  
                  ADC_init@p_ref 00001F                            ??_ISR 000010  
                   print_time@tx 000034                ??_RTCC_to_caltime 000020  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                          l10063 00003E                      _writeBuffer 000040  
      __end_of_RTCC_from_caltime 000026                            ?_atoi 000006  
                          ?_main 000000                   ??_get_quot_rem 000020  
                __end_of___awdiv 0000BE                            _ADRES 000FC3  
                          STR_20 000000                            STR_13 0002FE  
                          STR_30 0002BB                            STR_31 000002  
                          STR_15 00027F                            STR_23 00022B  
                          STR_32 0002AB                            STR_40 000297  
                          STR_24 000288                            STR_33 000003  
                          STR_41 0002B6                            STR_25 00026B  
                          STR_26 000001                            STR_42 0002EC  
                          STR_34 0002E2                            STR_50 0002CA  
                          STR_35 000004                            STR_27 0002E9  
                          STR_19 0002DE                            STR_51 0002D6  
                          STR_43 0000F0                            STR_60 0002F4  
                          STR_52 0002CE                            STR_36 0002C0  
                          STR_44 000276                            STR_28 00025F  
                __end_of___awmod 0000A2                            STR_37 000002  
                          STR_53 000004                            STR_29 000002  
                          STR_45 0002E6                            STR_61 0002A5  
                          STR_54 0002F2                            STR_38 00029E  
                          STR_62 000290                            STR_46 000250  
                          STR_39 0002FC                            STR_55 0002F8  
                          STR_47 0002DA                            STR_56 0002F0  
                          STR_48 0002B1                            STR_57 0002F6  
                          STR_49 0002D2                            STR_58 0002EE  
                          STR_59 0002FA                  __end_of___lldiv 0000BC  
                          u10040 000076                  ___awdiv@divisor 00000F  
                __end_of___llmod 000094                            _LATB2 007C52  
                __end_of___lwdiv 000078                  ringbuf_put@data 00000A  
                __end_of___lwmod 00005C                            i2l530 0000D2  
                          i2l531 0000F2                            i2l532 000112  
                          i2l525 00002A                            i2l526 00004E  
                          i2l527 000070                            i2l528 000092  
                          i2l529 0000B2                            _UADDR 000F38  
                ___awdiv@counter 000011          ST7032_task@st7032_state 00000A  
                          _TMR1H 000FCF                            _RPOR3 000EC3  
                          _RPOR4 000EC4                            _RPOR5 000EC5  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _USTAT 000F64  
            ___lmul@multiplicand 000011                   __CFG_FCMEN$OFF 000000  
               __end_of_UART_ISR 00004A                            _sd000 0000EC  
                          _sd001 000056                            _sd002 00008A  
           caltime_to_epoch@year 00001F               __size_of_UART_init 000000  
                __end_of_dpowers 00000B               __size_of_UART_task 000000  
               __end_of_OSC_init 00000E                  __end_of_isdigit 000028  
             __size_of_RTCC_init 000000               __size_of_RTCC_task 000000  
               ringbuf_delete@rb 000000                            atoi@a 00000B  
                          atoi@s 000006                            tablat 000FF5  
                          plusw2 000FDB                 __end_of_PWM_init 0000B8  
     __size_of_ringbuf_backspace 000000                            status 000FD8  
                __end_of_sprintf 00045A                month_length@month 00001F  
        __end_of_ringbuf_put_num 000082          __end_of_ringbuf_put_str 000064  
            terminal_task@i_4539 000066                  __initialization 000000  
                terminal_task@rx 000072                  terminal_task@tx 000070  
                terminal_time@tx 00005B                     __end_of_atoi 0000F2  
                   __end_of_main 00006C            _control_signal_bitmap 000032  
            ringbuf_init@bufsize 000004                 RTCC_from_RTCC@tm 000026  
                  print_time@str 000036                           ??_atoi 000008  
                         ??_main 000020                    __activetblptr 000003  
                   _cdc_mem_type 000010                           _BCL1IF 007D0B  
               _CDCDataOutHandle 00000C                 ___llmod@dividend 000000  
                         _CCPR1L 000FBB                           _CCPR2L 000FB5  
                         _CCPR3L 000F16                           _CCPR4L 000F13  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 00000D  
        _terminal_operation$6900 000020          _terminal_operation$6899 00001E  
                      ??_PWM_set 000017                           i2l1525 0000BA  
                         i2l1286 00002C                           i2l1287 00002A  
                 __CFG_WDTEN$OFF 000000                           i2l7531 0001A2  
                         i2l7523 00015A                           i2l7543 000212  
                         i2l7535 0001C6                           i2l7527 00017E  
                         i2l7551 00025C                           i2l7519 000136  
                         i2l7547 000238                           i2l7539 0001EC  
                         i2l9157 000062                           i2l9413 0000A0  
                         i2l9423 000090                           i2l9431 0000A8  
                         i2l9425 0000A4                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _SSPBUF 000FC9                           _TXREG1 000FAE  
                i2ringbuf_pop@rb 000008                  i2ringbuf_num@rb 000000  
                i2ringbuf_put@rb 000008                   __CFG_WPDIS$OFF 000000  
             epoch_to_caltime@tm 000021               _terminal_task$6897 000064  
              _shortPacketStatus 00001C                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 000021                 ringbuf_put_num@i 000016  
                   _CCPTMRS0bits 000F52                     _CCPTMRS1bits 000F51  
          caltime_to_epoch@epoch 000021               _terminal_time$6898 000063  
                   ?_ringbuf_pop 000008                     ?_ringbuf_num 000000  
                   ?_ringbuf_put 000008            caltime_to_epoch@month 000025  
                         ___lmul 000000                  _caltime_to_RTCC 000000  
                         ___wmul 000000               ??_epoch_to_caltime 000023  
              __end_of_UART_init 000022                      light_task@i 000032  
                    light_task@n 00001D                        ??___awdiv 000020  
              __end_of_UART_task 000020                        ??___awmod 00001F  
                         _d_to_x 000000                        ??___lldiv 00001F  
           ringbuf_put_num@value 000013                     ?_timer0_init 000000  
                      ??___llmod 00001F                __end_of_RTCC_init 00006A  
                   ?_timer1_init 00001F                        ??___lwdiv 00001F  
              __end_of_RTCC_task 00003C                        ??___lwmod 00001F  
                   ?_timer3_init 000000                           _lcd_tx 000014  
                         clear_0 000008                           clear_1 00001A  
                         clear_2 000026                           clear_3 000032  
                         clear_4 00003E                           clear_5 00004A  
                         clear_6 000056                           clear_7 000062  
                         clear_8 00006E                  __CFG_CLKOEC$OFF 000000  
               ___awdiv@quotient 000013                  ___awmod@divisor 000002  
                ___awmod@counter 000004                           _x_to_d 000000  
     __size_of_RTCC_from_caltime 000000                           _usb_rx 00005B  
                         _usb_tx 000063                           _strcmp 000000  
      __size_of_caltime_to_epoch 000000               _terminal_operation 000000  
                      ??_isdigit 00001F                     _st7032_state 000033  
                   __mediumconst 000000*                          tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ?_ADC_init 000000         USB_CDC_buffer_init@rxbuf 000000  
       USB_CDC_buffer_init@txbuf 000000                        ??_sprintf 000023  
            ?_terminal_operation 000064                      _CtrlTrfData 000D38  
           _controlTransferState 00001A             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 000000*         __end_of__initialization 000094  
                   __pbssBIGRAMl 000000             __end_of_get_quot_rem 0000D4  
                  ___rparam_used 000001                  _RTCC_from_epoch 000000  
               ?_ringbuf_put_num 000011                 ?_ringbuf_put_str 00000F  
           __CFG_WPEND$PAGE_WPFP 000000                 terminal_task@op0 000080  
               terminal_task@op1 000099                 terminal_task@op2 0000B2  
               terminal_task@op3 0000CB                 terminal_task@buf 000000  
                 __pcstackCOMRAM 000000                    __end_of_sd000 0000F0  
                  __end_of_sd001 00008A                    __end_of_sd002 0000BE  
               terminal_time@op0 00005D                 terminal_time@op1 00005F  
               terminal_time@op2 000061                     __pidataBANK1 000000  
                      ?_UART_ISR 000000             ??_terminal_operation 00006E  
       __end_of_terminal_at_hand 000062                        ?_OSC_init 000000  
                __CFG_DSWDTPS$G2 000000                  light_task@_6017 00001C  
                      ?_PWM_init 000000             terminal_task@command 00006B  
                  _I2C_cfct_flag 000030                       _cdc_notice 000000  
        __size_of_ringbuf_delete 000000                       _cdc_rx_len 000017  
                     _cdc_tx_len 000019                       ??_ADC_init 00001F  
     caltime_to_epoch@month_3637 000020                  light_task@value 00002C  
                   sprintf@width 000032               __size_of_main_init 000000  
                     __pbssBANK0 000000                       __pbssBANK1 000000  
                     __pbssBANK2 000000                       __pbssBANK3 000000  
                     __pbssBANK4 000000                       __pbssBANK5 000000  
                     __pbssBANK6 000000          __end_of_caltime_to_RTCC 0000D6  
                _RTCC_to_caltime 000000                      _pBDTEntryIn 000006  
          __end_of_weekday_3char 0000DA            RTCC_task@prev_halfsec 000009  
                        ?___lmul 00000D                       ??_UART_ISR 00000F  
                        ?___wmul 000000                   ST7032_init@buf 000000  
                        ?_d_to_x 000000                       ??_OSC_init 00001F  
                 ___lmul@product 000015                       _device_dsc 0000DA  
                        ?_x_to_d 000000                       _ep_data_in 000018  
                        ?_strcmp 000000                       ??_PWM_init 00001F  
              _configDescriptor1 000013                          i2l10047 000066  
             __CFG_OSC$INTOSCPLL 000000           I2C_LCD_SetCursor@F8685 000000  
                __CFG_WDTPS$1024 000000                          _SPBRGH1 000F7F  
                  _I2C_sent_flag 00000B                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9             terminal_operation@tx 000064  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
                        _UIEbits 000F36          __end_of_RTCC_from_epoch 00001A  
           timer1_init@prescaler 000001                          _UIRbits 000F62  
                        _PWM_set 000000                 i2ringbuf_pop@ret 00000E  
                   PWM_set@color 000019                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 000003                    _cdc_trf_state 000018  
                   PWM_set@value 000015                    ?_month_length 00001F  
            epoch_to_caltime@day 000027              epoch_to_caltime@num 00002B  
              RTCC_from_epoch@tm 00002F                          _pCDCDst 00001E  
                        _pCDCSrc 000021                          __Hparam 000000  
                        __Lparam 000000                ringbuf_put_num@rb 000011  
              ringbuf_put_str@rb 00000F                       _readBuffer 000000  
                  ?_ringbuf_init 000000                          ___awdiv 000000  
                __size_of___lmul 000000                          ___awmod 000000  
                        ___lldiv 000000                  __size_of___wmul 000000  
                        ___llmod 000000            ringbuf_put_num@digits 000015  
                     _light_mode 000011                          ___lwdiv 000000  
                     _light_task 000000                          ___lwmod 000000  
                __size_of_d_to_x 000000            __end_of_terminal_task 00036A  
          __end_of_terminal_time 0003AC             __size_of_ringbuf_pop 000000  
           __size_of_ringbuf_num 000000             __size_of_ringbuf_put 000000  
                __CFG_STVREN$OFF 000000                __end_of_main_init 000096  
    epoch_to_caltime@month_cache 000004                          __pcinit 000000  
      __end_of_configDescriptor1 000056                          __ramtop 000000* 
           __size_of_timer0_init 000000             __size_of_timer1_init 000000  
                        __ptext0 000000                          __ptext1 000000  
                        __ptext2 000000                          __ptext3 000000  
                        __ptext4 000000                          __ptext5 000000  
                        __ptext6 000000                          __ptext7 000000  
                        __ptext8 000000                          __ptext9 000000  
                        _inPipes 000000             __size_of_timer3_init 000000  
                __size_of_x_to_d 000000      _USBDeferOUTDataStagePackets 00000D  
                      _T0CONbits 000FD5                 _time_change_flag 000012  
               _caltime_to_epoch 000000                  __size_of_strcmp 000000  
                   __size_of_ISR 000000                        _T1CONbits 000FCD  
                        _dpowers 000001          __size_of_RTCC_from_RTCC 000000  
                      _T2CONbits 000FCA                          _isdigit 000000  
                      _T3CONbits 000F79                 ___awmod@dividend 000000  
                      _T5CONbits 000F22                          _uart_rx 00004B  
                        _uart_tx 000053               __end_of_USB_CD_Ptr 000013  
                        _sprintf 000000          __end_of_RTCC_to_caltime 0000BC  
          __size_of_get_quot_rem 000000             end_of_initialization 000094  
         __size_ofi2_ringbuf_pop 000000           __size_ofi2_ringbuf_num 000000  
         __size_ofi2_ringbuf_put 000000                     _CTMUCONHbits 000FB3  
             __end_of_USB_SD_Ptr 000011                     _CTMUCONLbits 000FB2  
            _pBDTEntryEP0OutNext 000010                   ??_month_length 000006  
_dummy_encapsulated_cmd_response 000043                        i2u1050_40 0000AC  
                      i2u1051_40 0000AE                        i2u1043_40 000056  
                      i2u1044_48 000058                        i2u1046_40 00007C  
                      i2u1047_40 00007E                        i2u1048_40 000094  
                      i2u1049_40 000096                 ?_caltime_to_RTCC 000016  
                ___lldiv@divisor 000004             timer3_init@prescaler 000000  
                ___lldiv@counter 00000C                   ??_ringbuf_init 00001F  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                          strcmp@r 000004  
     _USBStatusStageEnabledFlag1 00000E       _USBStatusStageEnabledFlag2 00000F  
                      _PORTAbits 000F80                        _UART_init 000000  
                      _UART_task 000000                 __CFG_DSBOREN$OFF 000000  
                      _RTCC_init 000000                        _RTCC_task 000000  
      epoch_to_caltime@day_cache 00002A               ST7032_cursor@F8640 000002  
                   _get_quot_rem 000000                       _print_time 000000  
                 _ringbuf_delete 000000        __size_of_epoch_to_caltime 000000  
               __CFG_CPUDIV$OSC1 000000               _BothEP0OutUOWNsSet 000012  
            RTCC_from_caltime@tm 00002F                __size_of_ADC_init 000000  
               ?_RTCC_from_epoch 00002F                        _USTATcopy 00001E  
__size_of_button_timer_interrupt 000000          timer1_init@clock_select 00001F  
                    _CCP1CONbits 000FBA                      _CCP2CONbits 000FB4  
               __CFG_IOL1WAY$OFF 000000                      _CCP3CONbits 000F15  
                    _CCP4CONbits 000F12              __CFG_MSSP7B_EN$MSK7 000000  
                 ringbuf_init@rb 000000                   ringbuf_pop@ret 00001F  
                  i2_ringbuf_pop 000000                    i2_ringbuf_num 000000  
                  i2_ringbuf_put 000000                      ?_light_task 000000  
              ?_terminal_at_hand 000054                   __end_of___lmul 000076  
                 __end_of___wmul 000036                   __end_of_d_to_x 000028  
              __size_of_UART_ISR 000000           __end_of_ringbuf_delete 000026  
             ??_terminal_at_hand 000020                       ?_UART_init 000000  
                     ?_UART_task 000000                       ?_RTCC_init 000000  
              __size_of_OSC_init 000000                       ?_RTCC_task 000000  
               __CFG_DSWDTEN$OFF 000000                _USBBusIsSuspended 000031  
                 __end_of_x_to_d 00001C            epoch_to_caltime@month 00002A  
                 __end_of_strcmp 000058              start_initialization 000000  
               month_length@year 00000A                      __end_of_ISR 0000F6  
              __size_of_PWM_init 000000                      _cdc_data_rx 000000  
                    _cdc_data_tx 000040                    UART_ISR@ascii 00000F  
               ?_RTCC_to_caltime 000001                  ___llmod@divisor 000004  
                ___llmod@counter 00001F           _pBDTEntryEP0OutCurrent 00000E  
            ringbuf_put_num@temp 000017                         ??___lmul 000020  
                 ?i2_ringbuf_pop 000008                   ?i2_ringbuf_num 000000  
                 ?i2_ringbuf_put 000008                         ??___wmul 00001F  
                       ??_d_to_x 000020      __size_of_terminal_operation 000000  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK1 000000  
       __size_of_ringbuf_put_num 000000         __size_of_ringbuf_put_str 000000  
         _button_timer_interrupt 000000                         ??_x_to_d 00001F  
                ?_ringbuf_delete 000000                         ??_strcmp 00001F  
           __end_of_month_length 0000D8                   _RTCC_from_RTCC 000000  
         _USBActiveConfiguration 00001D                      ?_print_time 000034  
                    __pbssCOMRAM 000000              RTCC_to_caltime@dumy 000003  
                  __pcstackBANK0 000000                    __pcstackBANK1 000000  
                  __pcstackBANK3 000000                     _isdigit$6309 000000  
           __end_of_ringbuf_init 000054                         ?_PWM_set 000015  
            __size_of_light_task 000000                      sprintf@flag 000030  
                 light_task@temp 00002E                      sprintf@prec 000027  
                   _pBDTEntryOut 00000A         __end_of_caltime_to_epoch 00028E  
                millis_timer@cnt 00002C                 ___lwdiv@dividend 000006  
                      __pintcode 000000                    __pmediumconst 000000  
                       ?___awdiv 00000D                         ?___awmod 000000  
                       ?___lldiv 000000                         ?___llmod 000000  
                       ?___lwdiv 000006                         ?___lwmod 00000D  
         __end_of_RTCC_from_RTCC 00001A                      ??_UART_init 00001F  
                    ??_UART_task 00001F                      ??_RTCC_init 000020  
                    ??_RTCC_task 000020                        _main_init 000000  
                       ?_isdigit 000000                 _epoch_to_caltime 000000  
           __CFG_RTCOSC$T1OSCREF 000000                         _I2C_busy 00002F  
                       _ADC_flag 00002E                         _ADC_init 000000  
                    _PADCFG1bits 000F3C              ringbuf_backspace@rb 000008  
                    _ep_data_out 00001B                 ___lwdiv@quotient 00000B  
          terminal_at_hand@value 00005A                  ST7032_task@wait 000024  
                       ?_sprintf 000011                        d_to_x@dec 000015  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 000002  
                 ___wmul@product 000004                         _LATBbits 000F8A  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
            __size_of_print_time 000000                  ??i2_ringbuf_pop 00000A  
                ??i2_ringbuf_num 000002                  ??i2_ringbuf_put 00000B  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       i2u720_40 00024E                         _PIR5bits 000F98  
     epoch_to_caltime@year_cache 000034                         i2u717_40 0001DC  
                       i2u718_40 000202                         i2u719_40 000228  
                  ??_ringbuf_pop 00000A                    ??_ringbuf_num 000002  
                  ??_ringbuf_put 00000B                         _RCONbits 000FD0  
                       _UEP0bits 000F26       _USBDeferINDataStagePackets 00000C  
                       _UART_ISR 000000            terminal_operation@op0 000066  
          terminal_operation@op1 000068            terminal_operation@op2 00006A  
          terminal_operation@op3 00006C                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                    ??_timer0_init 00001F  
                  ??_timer1_init 000000            terminal_operation@str 000000  
                  ??_timer3_init 00001F                         _SSP1STAT 000FC7  
                       _UCONbits 000F65                         _OSC_init 000000  
                ?_RTCC_from_RTCC 000026                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                ___wmul@multiplier 000000  
               __CFG_SOSCSEL$LOW 000000                         _PWM_init 000000  
 button_timer_interrupt@sw_value 000002                       ?_main_init 000000  
                   _RemoteWakeup 000013                i2ringbuf_put@data 00000A  
              ??_ringbuf_put_num 000020                ??_ringbuf_put_str 00001F  
                  ringbuf_pop@rb 000008                    ringbuf_num@rb 000000  
                  ringbuf_put@rb 000008                ___lmul@multiplier 00000D  
                    _INTCON2bits 000FF1                        copy_data0 000088  
           epoch_to_caltime@year 000029           __size_of_terminal_task 000000  
         __size_of_terminal_time 000000                 __size_of_PWM_set 000000  
                     _CCPR1Lbits 000FBB                       _CCPR2Lbits 000FB5  
                     _CCPR3Lbits 000F16               __end_of_device_dsc 0000EC  
                     _CCPR4Lbits 000F13                         __Hrparam 000000* 
           light_task@value_6018 00002D                         __Lrparam 000000* 
                       _SetupPkt 000D30                    _weekday_3char 0000BE  
          __size_of_month_length 000000               ringbuf_put_str@str 000011  
                   ??_light_task 000028         __size_of_caltime_to_RTCC 000000  
               __size_of___awdiv 000000                 __size_of___awmod 000000  
               __size_of___lldiv 000000                 __size_of___llmod 000000  
               __size_of___lwdiv 000000                 __size_of___lwmod 000000  
            __end_of_ringbuf_pop 0000C8              __end_of_ringbuf_num 0000EE  
            __end_of_ringbuf_put 0000D4                      _line_coding 000073  
            __end_of_timer0_init 000036            __size_of_ringbuf_init 000000  
            __end_of_timer1_init 00004E                       sprintf@len 00002E  
            __end_of_timer3_init 000028                       sprintf@val 00002C  
               __size_of_isdigit 000000                  ___lwdiv@divisor 000008  
                ___lwdiv@counter 00000A             timer0_init@prescaler 000000  
                       __ptext10 000000                         __ptext11 000000  
                       __ptext20 000000                         __ptext12 000000  
                       __ptext21 000000                         __ptext13 000000  
                       __ptext30 000000                         __ptext22 000000  
                       __ptext14 000000                         __ptext31 000000  
                       __ptext23 000000                         __ptext15 000000  
                       __ptext40 000000                         __ptext32 000000  
                       __ptext24 000000                         __ptext16 000000  
                       __ptext41 000000                         __ptext33 000000  
                       __ptext25 000000                         __ptext17 000000  
                       __ptext42 000000                         __ptext34 000000  
                       __ptext26 000000                         __ptext18 000000  
                       __ptext51 000000                         __ptext43 000000  
                       __ptext35 000000                         __ptext27 000000  
                       __ptext19 000000                         __ptext52 000000  
                       __ptext44 000000                         __ptext36 000000  
                       __ptext28 000000                         __ptext53 000000  
                       __ptext45 000000                         __ptext37 000000  
                       __ptext29 000000                         __ptext54 000000  
                       __ptext46 000000                         __ptext38 000000  
                       __ptext55 000000                         __ptext47 000000  
                       __ptext39 000000                         __ptext48 000000  
                       __ptext49 000000                     _SSP1CON1bits 000FC6  
                   _SSP1CON2bits 000FC5                       PWM_init@PR 00001F  
      __size_of_terminal_at_hand 000000                 __size_of_sprintf 000000  
           terminal_at_hand@hand 000056               __end_of_light_task 000218  
                  __size_of_atoi 000000                    __size_of_main 000000  
                   _month_length 000000         __size_of_RTCC_from_epoch 000000  
                       _outPipes 000000                 ??_ringbuf_delete 00001F  
        ?_button_timer_interrupt 000000                         int$flags 000000  
                   _ringbuf_init 000000                         atoi@sign 00000A  
                      x_to_d@hex 000000                     _SSP1STATbits 000FC7  
                  _terminal_task 000000                    _terminal_time 000000  
      _USBDeferStatusStagePacket 000014                     ??_print_time 000020  
                 main_init@rxbuf 000000                   main_init@txbuf 0005DC  
                    ??_main_init 000020                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                         isdigit@c 000001  
               get_quot_rem@quot 000019        terminal_task@command_init 000013  
              RTCC_to_caltime@tm 000001                         intlevel2 000000* 
                      sprintf@ap 000028                        sprintf@cp 00002A  
                      sprintf@sp 000011                 ___lwmod@dividend 00000D  
               ___lldiv@dividend 000000                       _RCSTA1bits 000FAC  
            terminal_at_hand@max 000059              terminal_at_hand@min 000058  
              ?_caltime_to_epoch 000019                _ringbuf_backspace 000000  
       __end_of_epoch_to_caltime 0001F2         __size_of_RTCC_to_caltime 000000  
                     _OSCCONbits 000FD3   __end_of_button_timer_interrupt 000282  
     __end_of_terminal_operation 000518               __end_of_print_time 00008C  
             ??_caltime_to_epoch 00001B               ?_ringbuf_backspace 000008  
                    _ringbuf_pop 000000                      _ringbuf_num 000000  
                    _ringbuf_put 000000                      _timer0_init 000000  
                    _timer1_init 000000                      _timer3_init 000000  
                 ?_terminal_task 000070                   ?_terminal_time 00005B  
            ??_ringbuf_backspace 00000A                  get_quot_rem@div 00001B  
                get_quot_rem@num 00001D                       _RTCCFGbits 000F3F  
                       sprintf@c 000031                         sprintf@f 000013  
                       strcmp@s1 000000                         strcmp@s2 000002  
                     _PPSCONbits 000EBF                 ___lldiv@quotient 000008  
                ___lwmod@divisor 00000F                caltime_to_RTCC@tm 000016  
              ??_caltime_to_RTCC 000020            _USBAlternateInterface 000086  
                ___lwmod@counter 00001F               terminal_at_hand@tx 000054  
                _endpoint_number 00001B  epoch_to_caltime@day_since_epoch 000025  
      __end_of_ringbuf_backspace 00008E     _USBStatusStageTimeoutCounter 000016  
                     _USB_CD_Ptr 000011                 ??_RTCC_from_RTCC 000020  
