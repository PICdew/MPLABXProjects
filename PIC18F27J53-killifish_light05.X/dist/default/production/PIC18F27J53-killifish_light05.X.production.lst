

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Jan 02 18:41:34 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	dabs	1,0xD00,48,_BDT
    80                           	dabs	1,0xD38,8,_CtrlTrfData
    81                           	dabs	1,0xD30,8,_SetupPkt
    82  0000                     
    83                           	psect	idataBANK1
    84  013094                     __pidataBANK1:
    85                           	opt stack 0
    86                           
    87                           ;initializer for I2C_LCD_SetCursor@F8685
    88  013094  00                 	db	0
    89  013095  40                 	db	64
    90                           
    91                           ;initializer for ST7032_cursor@F8640
    92  013096  00                 	db	0
    93  013097  40                 	db	64
    94                           
    95                           ;initializer for epoch_to_caltime@month_cache
    96  013098  01                 	db	1
    97                           
    98                           	psect	mediumconst
    99  00FCF8                     __pmediumconst:
   100                           	opt stack 0
   101  00FCF8  00                 	db	0
   102  00FCF9                     _dpowers:
   103                           	opt stack 0
   104  00FCF9  0001               	dw	1
   105  00FCFB  000A               	dw	10
   106  00FCFD  0064               	dw	100
   107  00FCFF  03E8               	dw	1000
   108  00FD01  2710               	dw	10000
   109  00FD03                     __end_of_dpowers:
   110                           	opt stack 0
   111  00FD03                     _USB_SD_Ptr:
   112                           	opt stack 0
   113  00FD03  E4                 	db	low _sd000
   114  00FD04  FD                 	db	high _sd000
   115  00FD05  4E                 	db	low _sd001
   116  00FD06  FD                 	db	high _sd001
   117  00FD07  82                 	db	low _sd002
   118  00FD08  FD                 	db	high _sd002
   119  00FD09                     __end_of_USB_SD_Ptr:
   120                           	opt stack 0
   121  00FD09                     _USB_CD_Ptr:
   122                           	opt stack 0
   123  00FD09  0B                 	db	low _configDescriptor1
   124  00FD0A  FD                 	db	high _configDescriptor1
   125  00FD0B                     __end_of_USB_CD_Ptr:
   126                           	opt stack 0
   127  00FD0B                     _configDescriptor1:
   128                           	opt stack 0
   129  00FD0B  09                 	db	9
   130  00FD0C  02                 	db	2
   131  00FD0D  43                 	db	67
   132  00FD0E  00                 	db	0
   133  00FD0F  02                 	db	2
   134  00FD10  01                 	db	1
   135  00FD11  00                 	db	0
   136  00FD12  C0                 	db	192
   137  00FD13  32                 	db	50
   138  00FD14  09                 	db	9
   139  00FD15  04                 	db	4
   140  00FD16  00                 	db	0
   141  00FD17  00                 	db	0
   142  00FD18  01                 	db	1
   143  00FD19  02                 	db	2
   144  00FD1A  02                 	db	2
   145  00FD1B  01                 	db	1
   146  00FD1C  00                 	db	0
   147  00FD1D  05                 	db	5
   148  00FD1E  24                 	db	36
   149  00FD1F  00                 	db	0
   150  00FD20  10                 	db	16
   151  00FD21  01                 	db	1
   152  00FD22  04                 	db	4
   153  00FD23  24                 	db	36
   154  00FD24  02                 	db	2
   155  00FD25  02                 	db	2
   156  00FD26  05                 	db	5
   157  00FD27  24                 	db	36
   158  00FD28  06                 	db	6
   159  00FD29  00                 	db	0
   160  00FD2A  01                 	db	1
   161  00FD2B  05                 	db	5
   162  00FD2C  24                 	db	36
   163  00FD2D  01                 	db	1
   164  00FD2E  00                 	db	0
   165  00FD2F  01                 	db	1
   166  00FD30  07                 	db	7
   167  00FD31  05                 	db	5
   168  00FD32  81                 	db	129
   169  00FD33  03                 	db	3
   170  00FD34  08                 	db	8
   171  00FD35  00                 	db	0
   172  00FD36  02                 	db	2
   173  00FD37  09                 	db	9
   174  00FD38  04                 	db	4
   175  00FD39  01                 	db	1
   176  00FD3A  00                 	db	0
   177  00FD3B  02                 	db	2
   178  00FD3C  0A                 	db	10
   179  00FD3D  00                 	db	0
   180  00FD3E  00                 	db	0
   181  00FD3F  00                 	db	0
   182  00FD40  07                 	db	7
   183  00FD41  05                 	db	5
   184  00FD42  02                 	db	2
   185  00FD43  02                 	db	2
   186  00FD44  40                 	db	64
   187  00FD45  00                 	db	0
   188  00FD46  00                 	db	0
   189  00FD47  07                 	db	7
   190  00FD48  05                 	db	5
   191  00FD49  82                 	db	130
   192  00FD4A  02                 	db	2
   193  00FD4B  40                 	db	64
   194  00FD4C  00                 	db	0
   195  00FD4D  00                 	db	0
   196  00FD4E                     __end_of_configDescriptor1:
   197                           	opt stack 0
   198  00FD4E                     _sd001:
   199                           	opt stack 0
   200  00FD4E  34                 	db	52
   201  00FD4F  03                 	db	3
   202  00FD50  004D               	dw	77
   203  00FD52  0069               	dw	105
   204  00FD54  0063               	dw	99
   205  00FD56  0072               	dw	114
   206  00FD58  006F               	dw	111
   207  00FD5A  0063               	dw	99
   208  00FD5C  0068               	dw	104
   209  00FD5E  0069               	dw	105
   210  00FD60  0070               	dw	112
   211  00FD62  0020               	dw	32
   212  00FD64  0054               	dw	84
   213  00FD66  0065               	dw	101
   214  00FD68  0063               	dw	99
   215  00FD6A  0068               	dw	104
   216  00FD6C  006E               	dw	110
   217  00FD6E  006F               	dw	111
   218  00FD70  006C               	dw	108
   219  00FD72  006F               	dw	111
   220  00FD74  0067               	dw	103
   221  00FD76  0079               	dw	121
   222  00FD78  0020               	dw	32
   223  00FD7A  0049               	dw	73
   224  00FD7C  006E               	dw	110
   225  00FD7E  0063               	dw	99
   226  00FD80  002E               	dw	46
   227  00FD82                     __end_of_sd001:
   228                           	opt stack 0
   229  00FD82                     _sd002:
   230                           	opt stack 0
   231  00FD82  34                 	db	52
   232  00FD83  03                 	db	3
   233  00FD84  0043               	dw	67
   234  00FD86  0044               	dw	68
   235  00FD88  0043               	dw	67
   236  00FD8A  0020               	dw	32
   237  00FD8C  0052               	dw	82
   238  00FD8E  0053               	dw	83
   239  00FD90  002D               	dw	45
   240  00FD92  0032               	dw	50
   241  00FD94  0033               	dw	51
   242  00FD96  0032               	dw	50
   243  00FD98  0020               	dw	32
   244  00FD9A  0045               	dw	69
   245  00FD9C  006D               	dw	109
   246  00FD9E  0075               	dw	117
   247  00FDA0  006C               	dw	108
   248  00FDA2  0061               	dw	97
   249  00FDA4  0074               	dw	116
   250  00FDA6  0069               	dw	105
   251  00FDA8  006F               	dw	111
   252  00FDAA  006E               	dw	110
   253  00FDAC  0020               	dw	32
   254  00FDAE  0044               	dw	68
   255  00FDB0  0065               	dw	101
   256  00FDB2  006D               	dw	109
   257  00FDB4  006F               	dw	111
   258  00FDB6                     __end_of_sd002:
   259                           	opt stack 0
   260  00FDB6                     _weekday_3char:
   261                           	opt stack 0
   262  00FDB6  53                 	db	83
   263  00FDB7  55                 	db	85
   264  00FDB8  4E                 	db	78
   265  00FDB9  00                 	db	0
   266  00FDBA  4D                 	db	77
   267  00FDBB  4F                 	db	79
   268  00FDBC  4E                 	db	78
   269  00FDBD  00                 	db	0
   270  00FDBE  54                 	db	84
   271  00FDBF  55                 	db	85
   272  00FDC0  45                 	db	69
   273  00FDC1  00                 	db	0
   274  00FDC2  57                 	db	87
   275  00FDC3  45                 	db	69
   276  00FDC4  44                 	db	68
   277  00FDC5  00                 	db	0
   278  00FDC6  54                 	db	84
   279  00FDC7  48                 	db	72
   280  00FDC8  55                 	db	85
   281  00FDC9  00                 	db	0
   282  00FDCA  46                 	db	70
   283  00FDCB  52                 	db	82
   284  00FDCC  49                 	db	73
   285  00FDCD  00                 	db	0
   286  00FDCE  53                 	db	83
   287  00FDCF  41                 	db	65
   288  00FDD0  54                 	db	84
   289  00FDD1  00                 	db	0
   290  00FDD2                     __end_of_weekday_3char:
   291                           	opt stack 0
   292  00FDD2                     _device_dsc:
   293                           	opt stack 0
   294  00FDD2  12                 	db	18
   295  00FDD3  01                 	db	1
   296  00FDD4  0200               	dw	512
   297  00FDD6  02                 	db	2
   298  00FDD7  00                 	db	0
   299  00FDD8  00                 	db	0
   300  00FDD9  08                 	db	8
   301  00FDDA  04D8               	dw	1240
   302  00FDDC  000A               	dw	10
   303  00FDDE  0100               	dw	256
   304  00FDE0  01                 	db	1
   305  00FDE1  02                 	db	2
   306  00FDE2  00                 	db	0
   307  00FDE3  01                 	db	1
   308  00FDE4                     __end_of_device_dsc:
   309                           	opt stack 0
   310  00FDE4                     _sd000:
   311                           	opt stack 0
   312  00FDE4  04                 	db	4
   313  00FDE5  03                 	db	3
   314  00FDE6  0409               	dw	1033
   315  00FDE8                     __end_of_sd000:
   316                           	opt stack 0
   317  0000                     _PPSCONbits	set	3775
   318  0000                     _RPOR3	set	3779
   319  0000                     _RPOR4	set	3780
   320  0000                     _RPOR5	set	3781
   321  0000                     _ANCON0	set	3912
   322  0000                     _ANCON1	set	3913
   323  0000                     _CCP3CONbits	set	3861
   324  0000                     _CCP4CONbits	set	3858
   325  0000                     _CCPR3L	set	3862
   326  0000                     _CCPR3Lbits	set	3862
   327  0000                     _CCPR4L	set	3859
   328  0000                     _CCPR4Lbits	set	3859
   329  0000                     _CCPTMRS0bits	set	3922
   330  0000                     _CCPTMRS1bits	set	3921
   331  0000                     _PADCFG1bits	set	3900
   332  0000                     _RTCCAL	set	3902
   333  0000                     _RTCCFGbits	set	3903
   334  0000                     _RTCVALH	set	3899
   335  0000                     _RTCVALL	set	3898
   336  0000                     _T5CONbits	set	3874
   337  0000                     _UADDR	set	3896
   338  0000                     _UCFG	set	3897
   339  0000                     _UEIE	set	3895
   340  0000                     _UEP0bits	set	3878
   341  0000                     _UIE	set	3894
   342  0000                     _UIEbits	set	3894
   343  0000                     _UEP0	set	3878
   344  0000                     _UEP1	set	3879
   345  0000                     _ADRES	set	4035
   346  0000                     _ADCON0bits	set	4034
   347  0000                     _ADCON1bits	set	4033
   348  0000                     _BAUDCON1bits	set	3966
   349  0000                     _CCP1CONbits	set	4026
   350  0000                     _CCP2CONbits	set	4020
   351  0000                     _CCPR1L	set	4027
   352  0000                     _CCPR1Lbits	set	4027
   353  0000                     _CCPR2L	set	4021
   354  0000                     _CCPR2Lbits	set	4021
   355  0000                     _CTMUCONH	set	4019
   356  0000                     _CTMUCONHbits	set	4019
   357  0000                     _CTMUCONL	set	4018
   358  0000                     _CTMUCONLbits	set	4018
   359  0000                     _CTMUICON	set	4017
   360  0000                     _EECON2	set	4007
   361  0000                     _INTCON2bits	set	4081
   362  0000                     _INTCONbits	set	4082
   363  0000                     _IPR1bits	set	3999
   364  0000                     _IPR2bits	set	4002
   365  0000                     _IPR5bits	set	3993
   366  0000                     _LATBbits	set	3978
   367  0000                     _OSCCONbits	set	4051
   368  0000                     _OSCTUNEbits	set	3995
   369  0000                     _PIE1bits	set	3997
   370  0000                     _PIE2bits	set	4000
   371  0000                     _PIE5bits	set	3985
   372  0000                     _PIR1bits	set	3998
   373  0000                     _PIR2bits	set	4001
   374  0000                     _PIR5bits	set	3992
   375  0000                     _PORTAbits	set	3968
   376  0000                     _PR2	set	4043
   377  0000                     _RCONbits	set	4048
   378  0000                     _RCREG1	set	4015
   379  0000                     _RCSTA1bits	set	4012
   380  0000                     _SPBRG1	set	4016
   381  0000                     _SPBRGH1	set	3967
   382  0000                     _SSP1ADD	set	4040
   383  0000                     _SSP1BUF	set	4041
   384  0000                     _SSP1CON1	set	4038
   385  0000                     _SSP1CON1bits	set	4038
   386  0000                     _SSP1CON2	set	4037
   387  0000                     _SSP1CON2bits	set	4037
   388  0000                     _SSP1STAT	set	4039
   389  0000                     _SSP1STATbits	set	4039
   390  0000                     _SSPBUF	set	4041
   391  0000                     _T0CONbits	set	4053
   392  0000                     _T1CONbits	set	4045
   393  0000                     _T2CONbits	set	4042
   394  0000                     _T3CONbits	set	3961
   395  0000                     _TMR1H	set	4047
   396  0000                     _TRISA	set	3986
   397  0000                     _TRISB	set	3987
   398  0000                     _TRISC	set	3988
   399  0000                     _TXREG1	set	4014
   400  0000                     _TXSTA1bits	set	4013
   401  0000                     _UCON	set	3941
   402  0000                     _UCONbits	set	3941
   403  0000                     _UEIR	set	3939
   404  0000                     _UIR	set	3938
   405  0000                     _UIRbits	set	3938
   406  0000                     _USTAT	set	3940
   407  0000                     _BCL1IF	set	32011
   408  0000                     _LATB2	set	31826
   409  0000                     _SSP1IF	set	31987
   410  00FDE8                     STR_43:
   411  00FDE8  09                 	db	9
   412  00FDE9  2A                 	db	42
   413  00FDEA  2A                 	db	42
   414  00FDEB  2A                 	db	42
   415  00FDEC  2A                 	db	42
   416  00FDED  2A                 	db	42
   417  00FDEE  2A                 	db	42
   418  00FDEF  2A                 	db	42
   419  00FDF0  2A                 	db	42
   420  00FDF1  2A                 	db	42
   421  00FDF2  2A                 	db	42
   422  00FDF3  2A                 	db	42
   423  00FDF4  2A                 	db	42
   424  00FDF5  2A                 	db	42
   425  00FDF6  2A                 	db	42
   426  00FDF7  2A                 	db	42
   427  00FDF8  2A                 	db	42
   428  00FDF9  2A                 	db	42
   429  00FDFA  2A                 	db	42
   430  00FDFB  2A                 	db	42
   431  00FDFC  2A                 	db	42
   432  00FDFD  2A                 	db	42
   433  00FDFE  2A                 	db	42
   434  00FDFF  2A                 	db	42
   435  00FE00  2A                 	db	42
   436  00FE01  2A                 	db	42
   437  00FE02  2A                 	db	42
   438  00FE03  0A                 	db	10
   439  00FE04  09                 	db	9
   440  00FE05  2A                 	db	42
   441  00FE06  2A                 	db	42
   442  00FE07  2A                 	db	42
   443  00FE08  2A                 	db	42
   444  00FE09  20                 	db	32
   445  00FE0A  4B                 	db	75	;'K'
   446  00FE0B  69                 	db	105	;'i'
   447  00FE0C  6C                 	db	108	;'l'
   448  00FE0D  6C                 	db	108	;'l'
   449  00FE0E  69                 	db	105	;'i'
   450  00FE0F  66                 	db	102	;'f'
   451  00FE10  69                 	db	105	;'i'
   452  00FE11  73                 	db	115	;'s'
   453  00FE12  68                 	db	104	;'h'
   454  00FE13  20                 	db	32
   455  00FE14  4C                 	db	76	;'L'
   456  00FE15  69                 	db	105	;'i'
   457  00FE16  67                 	db	103	;'g'
   458  00FE17  68                 	db	104	;'h'
   459  00FE18  74                 	db	116	;'t'
   460  00FE19  20                 	db	32
   461  00FE1A  20                 	db	32
   462  00FE1B  2A                 	db	42
   463  00FE1C  2A                 	db	42
   464  00FE1D  2A                 	db	42
   465  00FE1E  2A                 	db	42
   466  00FE1F  0A                 	db	10
   467  00FE20  09                 	db	9
   468  00FE21  2A                 	db	42
   469  00FE22  2A                 	db	42
   470  00FE23  2A                 	db	42
   471  00FE24  2A                 	db	42
   472  00FE25  20                 	db	32
   473  00FE26  4D                 	db	77	;'M'
   474  00FE27  61                 	db	97	;'a'
   475  00FE28  64                 	db	100	;'d'
   476  00FE29  65                 	db	101	;'e'
   477  00FE2A  20                 	db	32
   478  00FE2B  62                 	db	98	;'b'
   479  00FE2C  79                 	db	121	;'y'
   480  00FE2D  20                 	db	32
   481  00FE2E  40                 	db	64	;'@'
   482  00FE2F  52                 	db	82	;'R'
   483  00FE30  79                 	db	121	;'y'
   484  00FE31  6F                 	db	111	;'o'
   485  00FE32  6B                 	db	107	;'k'
   486  00FE33  65                 	db	101	;'e'
   487  00FE34  72                 	db	114	;'r'
   488  00FE35  69                 	db	105	;'i'
   489  00FE36  20                 	db	32
   490  00FE37  2A                 	db	42
   491  00FE38  2A                 	db	42
   492  00FE39  2A                 	db	42
   493  00FE3A  2A                 	db	42
   494  00FE3B  0A                 	db	10
   495  00FE3C  09                 	db	9
   496  00FE3D  2A                 	db	42
   497  00FE3E  2A                 	db	42
   498  00FE3F  2A                 	db	42
   499  00FE40  2A                 	db	42
   500  00FE41  2A                 	db	42
   501  00FE42  2A                 	db	42
   502  00FE43  2A                 	db	42
   503  00FE44  2A                 	db	42
   504  00FE45  2A                 	db	42
   505  00FE46  2A                 	db	42
   506  00FE47  2A                 	db	42
   507  00FE48  2A                 	db	42
   508  00FE49  2A                 	db	42
   509  00FE4A  2A                 	db	42
   510  00FE4B  2A                 	db	42
   511  00FE4C  2A                 	db	42
   512  00FE4D  2A                 	db	42
   513  00FE4E  2A                 	db	42
   514  00FE4F  2A                 	db	42
   515  00FE50  2A                 	db	42
   516  00FE51  2A                 	db	42
   517  00FE52  2A                 	db	42
   518  00FE53  2A                 	db	42
   519  00FE54  2A                 	db	42
   520  00FE55  2A                 	db	42
   521  00FE56  2A                 	db	42
   522  00FE57  0A                 	db	10
   523  00FE58  0A                 	db	10
   524  00FE59  09                 	db	9
   525  00FE5A  63                 	db	99	;'c'
   526  00FE5B  6F                 	db	111	;'o'
   527  00FE5C  6D                 	db	109	;'m'
   528  00FE5D  6D                 	db	109	;'m'
   529  00FE5E  61                 	db	97	;'a'
   530  00FE5F  6E                 	db	110	;'n'
   531  00FE60  64                 	db	100	;'d'
   532  00FE61  20                 	db	32
   533  00FE62  09                 	db	9
   534  00FE63  6F                 	db	111	;'o'
   535  00FE64  70                 	db	112	;'p'
   536  00FE65  65                 	db	101	;'e'
   537  00FE66  6C                 	db	108	;'l'
   538  00FE67  61                 	db	97	;'a'
   539  00FE68  6E                 	db	110	;'n'
   540  00FE69  64                 	db	100	;'d'
   541  00FE6A  31                 	db	49	;'1'
   542  00FE6B  09                 	db	9
   543  00FE6C  6F                 	db	111	;'o'
   544  00FE6D  70                 	db	112	;'p'
   545  00FE6E  65                 	db	101	;'e'
   546  00FE6F  6C                 	db	108	;'l'
   547  00FE70  61                 	db	97	;'a'
   548  00FE71  6E                 	db	110	;'n'
   549  00FE72  64                 	db	100	;'d'
   550  00FE73  32                 	db	50	;'2'
   551  00FE74  0A                 	db	10
   552  00FE75  0A                 	db	10
   553  00FE76  09                 	db	9
   554  00FE77  70                 	db	112	;'p'
   555  00FE78  72                 	db	114	;'r'
   556  00FE79  69                 	db	105	;'i'
   557  00FE7A  6E                 	db	110	;'n'
   558  00FE7B  74                 	db	116	;'t'
   559  00FE7C  5F                 	db	95	;'_'
   560  00FE7D  74                 	db	116	;'t'
   561  00FE7E  69                 	db	105	;'i'
   562  00FE7F  6D                 	db	109	;'m'
   563  00FE80  65                 	db	101	;'e'
   564  00FE81  28                 	db	40
   565  00FE82  74                 	db	116	;'t'
   566  00FE83  29                 	db	41
   567  00FE84  0A                 	db	10
   568  00FE85  09                 	db	9
   569  00FE86  61                 	db	97	;'a'
   570  00FE87  64                 	db	100	;'d'
   571  00FE88  6A                 	db	106	;'j'
   572  00FE89  75                 	db	117	;'u'
   573  00FE8A  73                 	db	115	;'s'
   574  00FE8B  74                 	db	116	;'t'
   575  00FE8C  5F                 	db	95	;'_'
   576  00FE8D  74                 	db	116	;'t'
   577  00FE8E  69                 	db	105	;'i'
   578  00FE8F  6D                 	db	109	;'m'
   579  00FE90  65                 	db	101	;'e'
   580  00FE91  28                 	db	40
   581  00FE92  61                 	db	97	;'a'
   582  00FE93  74                 	db	116	;'t'
   583  00FE94  29                 	db	41
   584  00FE95  20                 	db	32
   585  00FE96  5B                 	db	91	;'['
   586  00FE97  68                 	db	104	;'h'
   587  00FE98  61                 	db	97	;'a'
   588  00FE99  6E                 	db	110	;'n'
   589  00FE9A  64                 	db	100	;'d'
   590  00FE9B  3A                 	db	58	;':'
   591  00FE9C  79                 	db	121	;'y'
   592  00FE9D  2C                 	db	44
   593  00FE9E  4D                 	db	77	;'M'
   594  00FE9F  2C                 	db	44
   595  00FEA0  64                 	db	100	;'d'
   596  00FEA1  2C                 	db	44
   597  00FEA2  68                 	db	104	;'h'
   598  00FEA3  2C                 	db	44
   599  00FEA4  6D                 	db	109	;'m'
   600  00FEA5  2C                 	db	44
   601  00FEA6  73                 	db	115	;'s'
   602  00FEA7  5D                 	db	93	;']'
   603  00FEA8  20                 	db	32
   604  00FEA9  5B                 	db	91	;'['
   605  00FEAA  76                 	db	118	;'v'
   606  00FEAB  61                 	db	97	;'a'
   607  00FEAC  6C                 	db	108	;'l'
   608  00FEAD  75                 	db	117	;'u'
   609  00FEAE  65                 	db	101	;'e'
   610  00FEAF  28                 	db	40
   611  00FEB0  64                 	db	100	;'d'
   612  00FEB1  65                 	db	101	;'e'
   613  00FEB2  63                 	db	99	;'c'
   614  00FEB3  69                 	db	105	;'i'
   615  00FEB4  6D                 	db	109	;'m'
   616  00FEB5  61                 	db	97	;'a'
   617  00FEB6  6C                 	db	108	;'l'
   618  00FEB7  29                 	db	41
   619  00FEB8  5D                 	db	93	;']'
   620  00FEB9  0A                 	db	10
   621  00FEBA  09                 	db	9
   622  00FEBB  70                 	db	112	;'p'
   623  00FEBC  77                 	db	119	;'w'
   624  00FEBD  6D                 	db	109	;'m'
   625  00FEBE  20                 	db	32
   626  00FEBF  5B                 	db	91	;'['
   627  00FEC0  63                 	db	99	;'c'
   628  00FEC1  6F                 	db	111	;'o'
   629  00FEC2  6C                 	db	108	;'l'
   630  00FEC3  6F                 	db	111	;'o'
   631  00FEC4  72                 	db	114	;'r'
   632  00FEC5  3A                 	db	58	;':'
   633  00FEC6  52                 	db	82	;'R'
   634  00FEC7  2C                 	db	44
   635  00FEC8  47                 	db	71	;'G'
   636  00FEC9  2C                 	db	44
   637  00FECA  42                 	db	66	;'B'
   638  00FECB  2C                 	db	44
   639  00FECC  57                 	db	87	;'W'
   640  00FECD  5D                 	db	93	;']'
   641  00FECE  20                 	db	32
   642  00FECF  5B                 	db	91	;'['
   643  00FED0  76                 	db	118	;'v'
   644  00FED1  61                 	db	97	;'a'
   645  00FED2  6C                 	db	108	;'l'
   646  00FED3  75                 	db	117	;'u'
   647  00FED4  65                 	db	101	;'e'
   648  00FED5  28                 	db	40
   649  00FED6  25                 	db	37
   650  00FED7  29                 	db	41
   651  00FED8  3A                 	db	58	;':'
   652  00FED9  30                 	db	48	;'0'
   653  00FEDA  7E                 	db	126
   654  00FEDB  31                 	db	49	;'1'
   655  00FEDC  30                 	db	48	;'0'
   656  00FEDD  30                 	db	48	;'0'
   657  00FEDE  5D                 	db	93	;']'
   658  00FEDF  0A                 	db	10
   659  00FEE0  09                 	db	9
   660  00FEE1  70                 	db	112	;'p'
   661  00FEE2  77                 	db	119	;'w'
   662  00FEE3  6D                 	db	109	;'m'
   663  00FEE4  20                 	db	32
   664  00FEE5  63                 	db	99	;'c'
   665  00FEE6  6C                 	db	108	;'l'
   666  00FEE7  65                 	db	101	;'e'
   667  00FEE8  61                 	db	97	;'a'
   668  00FEE9  72                 	db	114	;'r'
   669  00FEEA  0A                 	db	10
   670  00FEEB  09                 	db	9
   671  00FEEC  73                 	db	115	;'s'
   672  00FEED  65                 	db	101	;'e'
   673  00FEEE  74                 	db	116	;'t'
   674  00FEEF  20                 	db	32
   675  00FEF0  74                 	db	116	;'t'
   676  00FEF1  69                 	db	105	;'i'
   677  00FEF2  6D                 	db	109	;'m'
   678  00FEF3  65                 	db	101	;'e'
   679  00FEF4  5F                 	db	95	;'_'
   680  00FEF5  73                 	db	115	;'s'
   681  00FEF6  79                 	db	121	;'y'
   682  00FEF7  6E                 	db	110	;'n'
   683  00FEF8  63                 	db	99	;'c'
   684  00FEF9  5F                 	db	95	;'_'
   685  00FEFA  6D                 	db	109	;'m'
   686  00FEFB  6F                 	db	111	;'o'
   687  00FEFC  64                 	db	100	;'d'
   688  00FEFD  65                 	db	101	;'e'
   689  00FEFE  28                 	db	40
   690  00FEFF  73                 	db	115	;'s'
   691  00FF00  79                 	db	121	;'y'
   692  00FF01  6E                 	db	110	;'n'
   693  00FF02  63                 	db	99	;'c'
   694  00FF03  29                 	db	41
   695  00FF04  0A                 	db	10
   696  00FF05  09                 	db	9
   697  00FF06  73                 	db	115	;'s'
   698  00FF07  65                 	db	101	;'e'
   699  00FF08  74                 	db	116	;'t'
   700  00FF09  20                 	db	32
   701  00FF0A  41                 	db	65	;'A'
   702  00FF0B  44                 	db	68	;'D'
   703  00FF0C  43                 	db	67	;'C'
   704  00FF0D  5F                 	db	95	;'_'
   705  00FF0E  6D                 	db	109	;'m'
   706  00FF0F  6F                 	db	111	;'o'
   707  00FF10  64                 	db	100	;'d'
   708  00FF11  65                 	db	101	;'e'
   709  00FF12  28                 	db	40
   710  00FF13  61                 	db	97	;'a'
   711  00FF14  64                 	db	100	;'d'
   712  00FF15  63                 	db	99	;'c'
   713  00FF16  29                 	db	41
   714  00FF17  0A                 	db	10
   715  00FF18  09                 	db	9
   716  00FF19  52                 	db	82	;'R'
   717  00FF1A  45                 	db	69	;'E'
   718  00FF1B  53                 	db	83	;'S'
   719  00FF1C  45                 	db	69	;'E'
   720  00FF1D  54                 	db	84	;'T'
   721  00FF1E  28                 	db	40
   722  00FF1F  29                 	db	41
   723  00FF20  3B                 	db	59	;';'
   724  00FF21  0A                 	db	10
   725  00FF22  00                 	db	0
   726  00FF23                     STR_23:
   727  00FF23  09                 	db	9
   728  00FF24  32                 	db	50	;'2'
   729  00FF25  30                 	db	48	;'0'
   730  00FF26  25                 	db	37
   731  00FF27  30                 	db	48	;'0'
   732  00FF28  32                 	db	50	;'2'
   733  00FF29  64                 	db	100	;'d'
   734  00FF2A  2F                 	db	47
   735  00FF2B  25                 	db	37
   736  00FF2C  30                 	db	48	;'0'
   737  00FF2D  32                 	db	50	;'2'
   738  00FF2E  64                 	db	100	;'d'
   739  00FF2F  2F                 	db	47
   740  00FF30  25                 	db	37
   741  00FF31  30                 	db	48	;'0'
   742  00FF32  32                 	db	50	;'2'
   743  00FF33  64                 	db	100	;'d'
   744  00FF34  28                 	db	40
   745  00FF35  25                 	db	37
   746  00FF36  73                 	db	115	;'s'
   747  00FF37  29                 	db	41
   748  00FF38  25                 	db	37
   749  00FF39  30                 	db	48	;'0'
   750  00FF3A  32                 	db	50	;'2'
   751  00FF3B  64                 	db	100	;'d'
   752  00FF3C  3A                 	db	58	;':'
   753  00FF3D  25                 	db	37
   754  00FF3E  30                 	db	48	;'0'
   755  00FF3F  32                 	db	50	;'2'
   756  00FF40  64                 	db	100	;'d'
   757  00FF41  2D                 	db	45
   758  00FF42  25                 	db	37
   759  00FF43  30                 	db	48	;'0'
   760  00FF44  32                 	db	50	;'2'
   761  00FF45  64                 	db	100	;'d'
   762  00FF46  0A                 	db	10
   763  00FF47  00                 	db	0
   764  00FF48                     STR_46:
   765  00FF48  57                 	db	87	;'W'
   766  00FF49  52                 	db	82	;'R'
   767  00FF4A  45                 	db	69	;'E'
   768  00FF4B  4E                 	db	78	;'N'
   769  00FF4C  3D                 	db	61	;'='
   770  00FF4D  25                 	db	37
   771  00FF4E  64                 	db	100	;'d'
   772  00FF4F  2C                 	db	44
   773  00FF50  45                 	db	69	;'E'
   774  00FF51  4E                 	db	78	;'N'
   775  00FF52  3D                 	db	61	;'='
   776  00FF53  25                 	db	37
   777  00FF54  64                 	db	100	;'d'
   778  00FF55  0A                 	db	10
   779  00FF56  00                 	db	0
   780  00FF57                     STR_28:
   781  00FF57  61                 	db	97	;'a'
   782  00FF58  64                 	db	100	;'d'
   783  00FF59  6A                 	db	106	;'j'
   784  00FF5A  75                 	db	117	;'u'
   785  00FF5B  73                 	db	115	;'s'
   786  00FF5C  74                 	db	116	;'t'
   787  00FF5D  5F                 	db	95	;'_'
   788  00FF5E  74                 	db	116	;'t'
   789  00FF5F  69                 	db	105	;'i'
   790  00FF60  6D                 	db	109	;'m'
   791  00FF61  65                 	db	101	;'e'
   792  00FF62  00                 	db	0
   793  00FF63                     STR_25:
   794  00FF63  70                 	db	112	;'p'
   795  00FF64  72                 	db	114	;'r'
   796  00FF65  69                 	db	105	;'i'
   797  00FF66  6E                 	db	110	;'n'
   798  00FF67  74                 	db	116	;'t'
   799  00FF68  5F                 	db	95	;'_'
   800  00FF69  74                 	db	116	;'t'
   801  00FF6A  69                 	db	105	;'i'
   802  00FF6B  6D                 	db	109	;'m'
   803  00FF6C  65                 	db	101	;'e'
   804  00FF6D  00                 	db	0
   805  00FF6E                     STR_44:
   806  00FF6E  52                 	db	82	;'R'
   807  00FF6F  45                 	db	69	;'E'
   808  00FF70  53                 	db	83	;'S'
   809  00FF71  45                 	db	69	;'E'
   810  00FF72  54                 	db	84	;'T'
   811  00FF73  28                 	db	40
   812  00FF74  29                 	db	41
   813  00FF75  3B                 	db	59	;';'
   814  00FF76  00                 	db	0
   815  00FF77                     STR_15:
   816  00FF77  20                 	db	32
   817  00FF78  20                 	db	32
   818  00FF79  20                 	db	32
   819  00FF7A  20                 	db	32
   820  00FF7B  20                 	db	32
   821  00FF7C  20                 	db	32
   822  00FF7D  20                 	db	32
   823  00FF7E  20                 	db	32
   824  00FF7F  00                 	db	0
   825  00FF80                     STR_24:
   826  00FF80  09                 	db	9
   827  00FF81  65                 	db	101	;'e'
   828  00FF82  72                 	db	114	;'r'
   829  00FF83  72                 	db	114	;'r'
   830  00FF84  6F                 	db	111	;'o'
   831  00FF85  72                 	db	114	;'r'
   832  00FF86  0A                 	db	10
   833  00FF87  00                 	db	0
   834  00FF88                     STR_62:
   835  00FF88  28                 	db	40
   836  00FF89  6E                 	db	110	;'n'
   837  00FF8A  75                 	db	117	;'u'
   838  00FF8B  6C                 	db	108	;'l'
   839  00FF8C  6C                 	db	108	;'l'
   840  00FF8D  29                 	db	41
   841  00FF8E  00                 	db	0
   842  00FF8F                     STR_40:
   843  00FF8F  73                 	db	115	;'s'
   844  00FF90  65                 	db	101	;'e'
   845  00FF91  63                 	db	99	;'c'
   846  00FF92  6F                 	db	111	;'o'
   847  00FF93  6E                 	db	110	;'n'
   848  00FF94  64                 	db	100	;'d'
   849  00FF95  00                 	db	0
   850  00FF96                     STR_38:
   851  00FF96  6D                 	db	109	;'m'
   852  00FF97  69                 	db	105	;'i'
   853  00FF98  6E                 	db	110	;'n'
   854  00FF99  75                 	db	117	;'u'
   855  00FF9A  74                 	db	116	;'t'
   856  00FF9B  65                 	db	101	;'e'
   857  00FF9C  00                 	db	0
   858  00FF9D                     STR_61:
   859  00FF9D  63                 	db	99	;'c'
   860  00FF9E  6C                 	db	108	;'l'
   861  00FF9F  65                 	db	101	;'e'
   862  00FFA0  61                 	db	97	;'a'
   863  00FFA1  72                 	db	114	;'r'
   864  00FFA2  00                 	db	0
   865  00FFA3                     STR_32:
   866  00FFA3  6D                 	db	109	;'m'
   867  00FFA4  6F                 	db	111	;'o'
   868  00FFA5  6E                 	db	110	;'n'
   869  00FFA6  74                 	db	116	;'t'
   870  00FFA7  68                 	db	104	;'h'
   871  00FFA8  00                 	db	0
   872  00FFA9                     STR_48:
   873  00FFA9  73                 	db	115	;'s'
   874  00FFAA  79                 	db	121	;'y'
   875  00FFAB  6E                 	db	110	;'n'
   876  00FFAC  63                 	db	99	;'c'
   877  00FFAD  00                 	db	0
   878  00FFAE                     STR_41:
   879  00FFAE  68                 	db	104	;'h'
   880  00FFAF  65                 	db	101	;'e'
   881  00FFB0  6C                 	db	108	;'l'
   882  00FFB1  70                 	db	112	;'p'
   883  00FFB2  00                 	db	0
   884  00FFB3                     STR_30:
   885  00FFB3  79                 	db	121	;'y'
   886  00FFB4  65                 	db	101	;'e'
   887  00FFB5  61                 	db	97	;'a'
   888  00FFB6  72                 	db	114	;'r'
   889  00FFB7  00                 	db	0
   890  00FFB8                     STR_36:
   891  00FFB8  68                 	db	104	;'h'
   892  00FFB9  6F                 	db	111	;'o'
   893  00FFBA  75                 	db	117	;'u'
   894  00FFBB  72                 	db	114	;'r'
   895  00FFBC  00                 	db	0
   896  00FFBD                     STR_1:
   897  00FFBD  25                 	db	37
   898  00FFBE  30                 	db	48	;'0'
   899  00FFBF  32                 	db	50	;'2'
   900  00FFC0  64                 	db	100	;'d'
   901  00FFC1  00                 	db	0
   902  00FFC2                     STR_50:
   903  00FFC2  41                 	db	65	;'A'
   904  00FFC3  44                 	db	68	;'D'
   905  00FFC4  43                 	db	67	;'C'
   906  00FFC5  00                 	db	0
   907  00FFC6                     STR_52:
   908  00FFC6  50                 	db	80	;'P'
   909  00FFC7  57                 	db	87	;'W'
   910  00FFC8  4D                 	db	77	;'M'
   911  00FFC9  00                 	db	0
   912  00FFCA                     STR_49:
   913  00FFCA  61                 	db	97	;'a'
   914  00FFCB  64                 	db	100	;'d'
   915  00FFCC  63                 	db	99	;'c'
   916  00FFCD  00                 	db	0
   917  00FFCE                     STR_51:
   918  00FFCE  70                 	db	112	;'p'
   919  00FFCF  77                 	db	119	;'w'
   920  00FFD0  6D                 	db	109	;'m'
   921  00FFD1  00                 	db	0
   922  00FFD2                     STR_47:
   923  00FFD2  73                 	db	115	;'s'
   924  00FFD3  65                 	db	101	;'e'
   925  00FFD4  74                 	db	116	;'t'
   926  00FFD5  00                 	db	0
   927  00FFD6                     STR_19:
   928  00FFD6  08                 	db	8
   929  00FFD7  20                 	db	32
   930  00FFD8  08                 	db	8
   931  00FFD9  00                 	db	0
   932  00FFDA                     STR_34:
   933  00FFDA  64                 	db	100	;'d'
   934  00FFDB  61                 	db	97	;'a'
   935  00FFDC  79                 	db	121	;'y'
   936  00FFDD  00                 	db	0
   937  00FFDE                     STR_45:
   938  00FFDE  65                 	db	101	;'e'
   939  00FFDF  6E                 	db	110	;'n'
   940  00FFE0  00                 	db	0
   941  00FFE1                     STR_27:
   942  00FFE1  61                 	db	97	;'a'
   943  00FFE2  74                 	db	116	;'t'
   944  00FFE3  00                 	db	0
   945  00FFE4                     STR_42:
   946  00FFE4  3F                 	db	63	;'?'
   947  00FFE5  00                 	db	0
   948  00FFE6                     STR_58:
   949  00FFE6  42                 	db	66	;'B'
   950  00FFE7  00                 	db	0
   951  00FFE8                     STR_56:
   952  00FFE8  47                 	db	71	;'G'
   953  00FFE9  00                 	db	0
   954  00FFEA                     STR_54:
   955  00FFEA  52                 	db	82	;'R'
   956  00FFEB  00                 	db	0
   957  00FFEC                     STR_60:
   958  00FFEC  57                 	db	87	;'W'
   959  00FFED  00                 	db	0
   960  00FFEE                     STR_57:
   961  00FFEE  62                 	db	98	;'b'
   962  00FFEF  00                 	db	0
   963  00FFF0                     STR_55:
   964  00FFF0  67                 	db	103	;'g'
   965  00FFF1  00                 	db	0
   966  00FFF2                     STR_59:
   967  00FFF2  77                 	db	119	;'w'
   968  00FFF3  00                 	db	0
   969  00FFF4                     STR_39:
   970  00FFF4  73                 	db	115	;'s'
   971  00FFF5  00                 	db	0
   972  00FFF6  28                 	db	40
   973  00FFF7  00                 	db	0
   974  00FFF8                     STR_9:
   975  00FFF8  2D                 	db	45
   976  00FFF9  00                 	db	0
   977  00FFFA                     STR_4:
   978  00FFFA  2F                 	db	47
   979  00FFFB  00                 	db	0
   980  00FFFC                     STR_7:
   981  00FFFC  3A                 	db	58	;':'
   982  00FFFD  00                 	db	0
   983  0000                     
   984                           ; #config settings
   985  00FFFE  00                 	db	0	; dummy byte at the end
   986  0000                     
   987                           	psect	cinit
   988  01293A                     __pcinit:
   989                           	opt stack 0
   990  01293A                     start_initialization:
   991                           	opt stack 0
   992  01293A                     __initialization:
   993                           	opt stack 0
   994                           
   995                           ; Clear objects allocated to BIGRAMl (1000 bytes)
   996  01293A  EE05  F069         	lfsr	0,__pbssBIGRAMl
   997  01293E  EE13 F0E8          	lfsr	1,1000
   998  012942                     clear_0:
   999  012942  6AEE               	clrf	postinc0,c
  1000  012944  50E5               	movf	postdec1,w,c
  1001  012946  50E1               	movf	fsr1l,w,c
  1002  012948  E1FC               	bnz	clear_0
  1003  01294A  50E2               	movf	fsr1h,w,c
  1004  01294C  E1FA               	bnz	clear_0
  1005                           
  1006                           ; Clear objects allocated to BANK4 (250 bytes)
  1007  01294E  EE04  F000         	lfsr	0,__pbssBANK4
  1008  012952  0EFA               	movlw	250
  1009  012954                     clear_1:
  1010  012954  6AEE               	clrf	postinc0,c
  1011  012956  06E8               	decf	wreg,f,c
  1012  012958  E1FD               	bnz	clear_1
  1013                           
  1014                           ; Clear objects allocated to BANK3 (200 bytes)
  1015  01295A  EE03  F000         	lfsr	0,__pbssBANK3
  1016  01295E  0EC8               	movlw	200
  1017  012960                     clear_2:
  1018  012960  6AEE               	clrf	postinc0,c
  1019  012962  06E8               	decf	wreg,f,c
  1020  012964  E1FD               	bnz	clear_2
  1021                           
  1022                           ; Clear objects allocated to BANK2 (228 bytes)
  1023  012966  EE02  F000         	lfsr	0,__pbssBANK2
  1024  01296A  0EE4               	movlw	228
  1025  01296C                     clear_3:
  1026  01296C  6AEE               	clrf	postinc0,c
  1027  01296E  06E8               	decf	wreg,f,c
  1028  012970  E1FD               	bnz	clear_3
  1029                           
  1030                           ; Clear objects allocated to BANK1 (138 bytes)
  1031  012972  EE01  F000         	lfsr	0,__pbssBANK1
  1032  012976  0E8A               	movlw	138
  1033  012978                     clear_4:
  1034  012978  6AEE               	clrf	postinc0,c
  1035  01297A  06E8               	decf	wreg,f,c
  1036  01297C  E1FD               	bnz	clear_4
  1037                           
  1038                           ; Clear objects allocated to BANK0 (30 bytes)
  1039  01297E  EE00  F0D6         	lfsr	0,__pbssBANK0
  1040  012982  0E1E               	movlw	30
  1041  012984                     clear_5:
  1042  012984  6AEE               	clrf	postinc0,c
  1043  012986  06E8               	decf	wreg,f,c
  1044  012988  E1FD               	bnz	clear_5
  1045                           
  1046                           ; Clear objects allocated to COMRAM (31 bytes)
  1047  01298A  EE00  F021         	lfsr	0,__pbssCOMRAM
  1048  01298E  0E1F               	movlw	31
  1049  012990                     clear_6:
  1050  012990  6AEE               	clrf	postinc0,c
  1051  012992  06E8               	decf	wreg,f,c
  1052  012994  E1FD               	bnz	clear_6
  1053                           
  1054                           ; Initialize objects allocated to BANK1 (5 bytes)
  1055                           ; load TBLPTR registers with __pidataBANK1
  1056  012996  0E94               	movlw	low __pidataBANK1
  1057  012998  6EF6               	movwf	tblptrl,c
  1058  01299A  0E30               	movlw	high __pidataBANK1
  1059  01299C  6EF7               	movwf	tblptrh,c
  1060  01299E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1061  0129A0  6EF8               	movwf	tblptru,c
  1062  0129A2  EE01  F0AC         	lfsr	0,__pdataBANK1
  1063  0129A6  EE10 F005          	lfsr	1,5
  1064  0129AA                     copy_data0:
  1065  0129AA  0009               	tblrd		*+
  1066  0129AC  CFF5 FFEE          	movff	tablat,postinc0
  1067  0129B0  50E5               	movf	postdec1,w,c
  1068  0129B2  50E1               	movf	fsr1l,w,c
  1069  0129B4  E1FA               	bnz	copy_data0
  1070  0129B6                     end_of_initialization:
  1071                           	opt stack 0
  1072  0129B6                     __end_of__initialization:
  1073                           	opt stack 0
  1074  0129B6  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1075  0129B8  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1076  0129BA  0100               	movlb	0
  1077  0129BC  EF98  F095         	goto	_main	;jump to C main() function
  1078                           tblptru	equ	0xFF8
  1079                           tblptrh	equ	0xFF7
  1080                           tblptrl	equ	0xFF6
  1081                           tablat	equ	0xFF5
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           postdec1	equ	0xFE5
  1085                           fsr1h	equ	0xFE2
  1086                           fsr1l	equ	0xFE1
  1087                           
  1088                           	psect	bssCOMRAM
  1089  000021                     __pbssCOMRAM:
  1090                           	opt stack 0
  1091  000021                     _inPipes:
  1092                           	opt stack 0
  1093  000021                     	ds	6
  1094  000027                     _pBDTEntryIn:
  1095                           	opt stack 0
  1096  000027                     	ds	6
  1097  00002D                     _CDCDataOutHandle:
  1098                           	opt stack 0
  1099  00002D                     	ds	2
  1100  00002F                     _pBDTEntryEP0OutCurrent:
  1101                           	opt stack 0
  1102  00002F                     	ds	2
  1103  000031                     _pBDTEntryEP0OutNext:
  1104                           	opt stack 0
  1105  000031                     	ds	2
  1106  000033                     _BothEP0OutUOWNsSet:
  1107                           	opt stack 0
  1108  000033                     	ds	1
  1109  000034                     _RemoteWakeup:
  1110                           	opt stack 0
  1111  000034                     	ds	1
  1112  000035                     _USBDeferStatusStagePacket:
  1113                           	opt stack 0
  1114  000035                     	ds	1
  1115  000036                     _USBDeviceState:
  1116                           	opt stack 0
  1117  000036                     	ds	1
  1118  000037                     _USBStatusStageTimeoutCounter:
  1119                           	opt stack 0
  1120  000037                     	ds	1
  1121  000038                     _cdc_rx_len:
  1122                           	opt stack 0
  1123  000038                     	ds	1
  1124  000039                     _cdc_trf_state:
  1125                           	opt stack 0
  1126  000039                     	ds	1
  1127  00003A                     _cdc_tx_len:
  1128                           	opt stack 0
  1129  00003A                     	ds	1
  1130  00003B                     _controlTransferState:
  1131                           	opt stack 0
  1132  00003B                     	ds	1
  1133  00003C                     _endpoint_number:
  1134                           	opt stack 0
  1135  00003C                     	ds	1
  1136  00003D                     _shortPacketStatus:
  1137                           	opt stack 0
  1138  00003D                     	ds	1
  1139  00003E                     _USBActiveConfiguration:
  1140                           	opt stack 0
  1141  00003E                     	ds	1
  1142  00003F                     _USTATcopy:
  1143                           	opt stack 0
  1144  00003F                     	ds	1
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           postinc0	equ	0xFEE
  1150                           wreg	equ	0xFE8
  1151                           postdec1	equ	0xFE5
  1152                           fsr1h	equ	0xFE2
  1153                           fsr1l	equ	0xFE1
  1154                           
  1155                           	psect	bssBANK0
  1156  0000D6                     __pbssBANK0:
  1157                           	opt stack 0
  1158  0000D6                     _outPipes:
  1159                           	opt stack 0
  1160  0000D6                     	ds	9
  1161  0000DF                     RTCC_task@prev_halfsec:
  1162                           	opt stack 0
  1163  0000DF                     	ds	1
  1164  0000E0                     ST7032_task@st7032_state:
  1165                           	opt stack 0
  1166  0000E0                     	ds	1
  1167  0000E1                     _I2C_sent_flag:
  1168                           	opt stack 0
  1169  0000E1                     	ds	1
  1170  0000E2                     _USBDeferINDataStagePackets:
  1171                           	opt stack 0
  1172  0000E2                     	ds	1
  1173  0000E3                     _USBDeferOUTDataStagePackets:
  1174                           	opt stack 0
  1175  0000E3                     	ds	1
  1176  0000E4                     _USBStatusStageEnabledFlag1:
  1177                           	opt stack 0
  1178  0000E4                     	ds	1
  1179  0000E5                     _USBStatusStageEnabledFlag2:
  1180                           	opt stack 0
  1181  0000E5                     	ds	1
  1182  0000E6                     _cdc_mem_type:
  1183                           	opt stack 0
  1184  0000E6                     	ds	1
  1185  0000E7                     _light_mode:
  1186                           	opt stack 0
  1187  0000E7                     	ds	1
  1188  0000E8                     _time_change_flag:
  1189                           	opt stack 0
  1190  0000E8                     	ds	1
  1191  0000E9                     terminal_task@command_init:
  1192                           	opt stack 0
  1193  0000E9                     	ds	1
  1194  0000EA                     _lcd_tx:
  1195                           	opt stack 0
  1196  0000EA                     	ds	8
  1197  0000F2                     light_task@_6006:
  1198                           	opt stack 0
  1199  0000F2                     	ds	1
  1200  0000F3                     light_task@n:
  1201                           	opt stack 0
  1202  0000F3                     	ds	1
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec1	equ	0xFE5
  1210                           fsr1h	equ	0xFE2
  1211                           fsr1l	equ	0xFE1
  1212                           
  1213                           	psect	bssBANK1
  1214  000100                     __pbssBANK1:
  1215                           	opt stack 0
  1216  000100                     _cdc_notice:
  1217                           	opt stack 0
  1218  000100                     	ds	10
  1219  00010A                     _pBDTEntryOut:
  1220                           	opt stack 0
  1221  00010A                     	ds	6
  1222  000110                     _BaudRateGen:
  1223                           	opt stack 0
  1224  000110                     	ds	4
  1225  000114                     _ms:
  1226                           	opt stack 0
  1227  000114                     	ds	4
  1228  000118                     _ep_data_in:
  1229                           	opt stack 0
  1230  000118                     	ds	3
  1231  00011B                     _ep_data_out:
  1232                           	opt stack 0
  1233  00011B                     	ds	3
  1234  00011E                     _pCDCDst:
  1235                           	opt stack 0
  1236  00011E                     	ds	3
  1237  000121                     _pCDCSrc:
  1238                           	opt stack 0
  1239  000121                     	ds	3
  1240  000124                     ST7032_task@wait:
  1241                           	opt stack 0
  1242  000124                     	ds	2
  1243  000126                     USBCBSendResume@delay_count:
  1244                           	opt stack 0
  1245  000126                     	ds	2
  1246  000128                     _CDCDataInHandle:
  1247                           	opt stack 0
  1248  000128                     	ds	2
  1249  00012A                     _pDst:
  1250                           	opt stack 0
  1251  00012A                     	ds	2
  1252  00012C                     epoch_to_caltime@day_cache:
  1253                           	opt stack 0
  1254  00012C                     	ds	2
  1255  00012E                     millis_timer@cnt:
  1256                           	opt stack 0
  1257  00012E                     	ds	2
  1258  000130                     _ADC_flag:
  1259                           	opt stack 0
  1260  000130                     	ds	1
  1261  000131                     _I2C_busy:
  1262                           	opt stack 0
  1263  000131                     	ds	1
  1264  000132                     _I2C_cfct_flag:
  1265                           	opt stack 0
  1266  000132                     	ds	1
  1267  000133                     _USBBusIsSuspended:
  1268                           	opt stack 0
  1269  000133                     	ds	1
  1270  000134                     _control_signal_bitmap:
  1271                           	opt stack 0
  1272  000134                     	ds	1
  1273  000135                     _st7032_state:
  1274                           	opt stack 0
  1275  000135                     	ds	1
  1276  000136                     epoch_to_caltime@year_cache:
  1277                           	opt stack 0
  1278  000136                     	ds	1
  1279  000137                     _now:
  1280                           	opt stack 0
  1281  000137                     	ds	14
  1282  000145                     _dummy_encapsulated_cmd_response:
  1283                           	opt stack 0
  1284  000145                     	ds	8
  1285  00014D                     _uart_rx:
  1286                           	opt stack 0
  1287  00014D                     	ds	8
  1288  000155                     _uart_tx:
  1289                           	opt stack 0
  1290  000155                     	ds	8
  1291  00015D                     _usb_rx:
  1292                           	opt stack 0
  1293  00015D                     	ds	8
  1294  000165                     _usb_tx:
  1295                           	opt stack 0
  1296  000165                     	ds	8
  1297  00016D                     terminal_task@command:
  1298                           	opt stack 0
  1299  00016D                     	ds	8
  1300  000175                     _line_coding:
  1301                           	opt stack 0
  1302  000175                     	ds	7
  1303  00017C                     _sw_B:
  1304                           	opt stack 0
  1305  00017C                     	ds	4
  1306  000180                     _sw_G:
  1307                           	opt stack 0
  1308  000180                     	ds	4
  1309  000184                     _sw_R:
  1310                           	opt stack 0
  1311  000184                     	ds	4
  1312  000188                     _USBAlternateInterface:
  1313                           	opt stack 0
  1314  000188                     	ds	2
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           postdec1	equ	0xFE5
  1322                           fsr1h	equ	0xFE2
  1323                           fsr1l	equ	0xFE1
  1324                           
  1325                           	psect	dataBANK1
  1326  0001AC                     __pdataBANK1:
  1327                           	opt stack 0
  1328  0001AC                     I2C_LCD_SetCursor@F8685:
  1329                           	opt stack 0
  1330  0001AC                     	ds	2
  1331  0001AE                     ST7032_cursor@F8640:
  1332                           	opt stack 0
  1333  0001AE                     	ds	2
  1334  0001B0                     epoch_to_caltime@month_cache:
  1335                           	opt stack 0
  1336  0001B0                     	ds	1
  1337                           tblptru	equ	0xFF8
  1338                           tblptrh	equ	0xFF7
  1339                           tblptrl	equ	0xFF6
  1340                           tablat	equ	0xFF5
  1341                           postinc0	equ	0xFEE
  1342                           wreg	equ	0xFE8
  1343                           postdec1	equ	0xFE5
  1344                           fsr1h	equ	0xFE2
  1345                           fsr1l	equ	0xFE1
  1346                           
  1347                           	psect	bssBANK2
  1348  000200                     __pbssBANK2:
  1349                           	opt stack 0
  1350  000200                     _cdc_data_rx:
  1351                           	opt stack 0
  1352  000200                     	ds	64
  1353  000240                     _cdc_data_tx:
  1354                           	opt stack 0
  1355  000240                     	ds	64
  1356  000280                     terminal_task@op0:
  1357                           	opt stack 0
  1358  000280                     	ds	25
  1359  000299                     terminal_task@op1:
  1360                           	opt stack 0
  1361  000299                     	ds	25
  1362  0002B2                     terminal_task@op2:
  1363                           	opt stack 0
  1364  0002B2                     	ds	25
  1365  0002CB                     terminal_task@op3:
  1366                           	opt stack 0
  1367  0002CB                     	ds	25
  1368                           tblptru	equ	0xFF8
  1369                           tblptrh	equ	0xFF7
  1370                           tblptrl	equ	0xFF6
  1371                           tablat	equ	0xFF5
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           postdec1	equ	0xFE5
  1375                           fsr1h	equ	0xFE2
  1376                           fsr1l	equ	0xFE1
  1377                           
  1378                           	psect	bssBANK3
  1379  000300                     __pbssBANK3:
  1380                           	opt stack 0
  1381  000300                     ST7032_init@buf:
  1382                           	opt stack 0
  1383  000300                     	ds	200
  1384                           tblptru	equ	0xFF8
  1385                           tblptrh	equ	0xFF7
  1386                           tblptrl	equ	0xFF6
  1387                           tablat	equ	0xFF5
  1388                           postinc0	equ	0xFEE
  1389                           wreg	equ	0xFE8
  1390                           postdec1	equ	0xFE5
  1391                           fsr1h	equ	0xFE2
  1392                           fsr1l	equ	0xFE1
  1393                           
  1394                           	psect	bssBANK4
  1395  000400                     __pbssBANK4:
  1396                           	opt stack 0
  1397  000400                     main_init@rxbuf:
  1398                           	opt stack 0
  1399  000400                     	ds	250
  1400                           tblptru	equ	0xFF8
  1401                           tblptrh	equ	0xFF7
  1402                           tblptrl	equ	0xFF6
  1403                           tablat	equ	0xFF5
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           postdec1	equ	0xFE5
  1407                           fsr1h	equ	0xFE2
  1408                           fsr1l	equ	0xFE1
  1409                           
  1410                           	psect	bssBIGRAMl
  1411  000569                     __pbssBIGRAMl:
  1412                           	opt stack 0
  1413  000569                     main_init@txbuf:
  1414                           	opt stack 0
  1415  000569                     	ds	1000
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           postdec1	equ	0xFE5
  1423                           fsr1h	equ	0xFE2
  1424                           fsr1l	equ	0xFE1
  1425                           
  1426                           	psect	cstackBANK5
  1427  000500                     __pcstackBANK5:
  1428                           	opt stack 0
  1429  000500                     terminal_task@buf:
  1430                           	opt stack 0
  1431                           
  1432                           ; 100 bytes @ 0x0
  1433  000500                     	ds	100
  1434  000564                     _terminal_task$6893:
  1435                           	opt stack 0
  1436                           
  1437                           ; 2 bytes @ 0x64
  1438  000564                     	ds	2
  1439  000566                     terminal_task@i_4539:
  1440                           	opt stack 0
  1441                           
  1442                           ; 1 bytes @ 0x66
  1443  000566                     	ds	1
  1444  000567                     terminal_task@ascii:
  1445                           	opt stack 0
  1446                           
  1447                           ; 1 bytes @ 0x67
  1448  000567                     	ds	1
  1449  000568                     terminal_task@i:
  1450                           	opt stack 0
  1451                           
  1452                           ; 1 bytes @ 0x68
  1453  000568                     	ds	1
  1454                           tblptru	equ	0xFF8
  1455                           tblptrh	equ	0xFF7
  1456                           tblptrl	equ	0xFF6
  1457                           tablat	equ	0xFF5
  1458                           postinc0	equ	0xFEE
  1459                           wreg	equ	0xFE8
  1460                           postdec1	equ	0xFE5
  1461                           fsr1h	equ	0xFE2
  1462                           fsr1l	equ	0xFE1
  1463                           
  1464                           	psect	cstackBANK1
  1465  00018A                     __pcstackBANK1:
  1466                           	opt stack 0
  1467  00018A                     terminal_operation@str:
  1468                           	opt stack 0
  1469                           
  1470                           ; 30 bytes @ 0x0
  1471  00018A                     	ds	30
  1472  0001A8                     _terminal_operation$6895:
  1473                           	opt stack 0
  1474                           
  1475                           ; 2 bytes @ 0x1E
  1476  0001A8                     	ds	2
  1477  0001AA                     _terminal_operation$6896:
  1478                           	opt stack 0
  1479                           
  1480                           ; 2 bytes @ 0x20
  1481  0001AA                     	ds	2
  1482                           tblptru	equ	0xFF8
  1483                           tblptrh	equ	0xFF7
  1484                           tblptrl	equ	0xFF6
  1485                           tablat	equ	0xFF5
  1486                           postinc0	equ	0xFEE
  1487                           wreg	equ	0xFE8
  1488                           postdec1	equ	0xFE5
  1489                           fsr1h	equ	0xFE2
  1490                           fsr1l	equ	0xFE1
  1491                           
  1492                           	psect	cstackBANK0
  1493  000060                     __pcstackBANK0:
  1494                           	opt stack 0
  1495  000060                     ??_timer1_init:
  1496  000060                     ?_strcmp:
  1497                           	opt stack 0
  1498  000060                     ?_ringbuf_num:
  1499                           	opt stack 0
  1500  000060                     ?___wmul:
  1501                           	opt stack 0
  1502  000060                     ?___awmod:
  1503                           	opt stack 0
  1504  000060                     ?___lldiv:
  1505                           	opt stack 0
  1506  000060                     ?___llmod:
  1507                           	opt stack 0
  1508  000060                     timer0_init@prescaler:
  1509                           	opt stack 0
  1510  000060                     timer3_init@prescaler:
  1511                           	opt stack 0
  1512  000060                     x_to_d@hex:
  1513                           	opt stack 0
  1514  000060                     _isdigit$6298:
  1515                           	opt stack 0
  1516  000060                     ringbuf_init@rb:
  1517                           	opt stack 0
  1518  000060                     ringbuf_num@rb:
  1519                           	opt stack 0
  1520  000060                     ringbuf_delete@rb:
  1521                           	opt stack 0
  1522  000060                     ___wmul@multiplier:
  1523                           	opt stack 0
  1524  000060                     ___awmod@dividend:
  1525                           	opt stack 0
  1526  000060                     strcmp@s1:
  1527                           	opt stack 0
  1528  000060                     ___lldiv@dividend:
  1529                           	opt stack 0
  1530  000060                     ___llmod@dividend:
  1531                           	opt stack 0
  1532                           
  1533                           ; 4 bytes @ 0x0
  1534  000060                     	ds	1
  1535  000061                     timer1_init@prescaler:
  1536                           	opt stack 0
  1537  000061                     isdigit@c:
  1538                           	opt stack 0
  1539  000061                     RTCC_to_caltime@tm:
  1540                           	opt stack 0
  1541                           
  1542                           ; 2 bytes @ 0x1
  1543  000061                     	ds	1
  1544  000062                     ??_ringbuf_num:
  1545  000062                     ringbuf_init@internal_buf:
  1546                           	opt stack 0
  1547  000062                     ___wmul@multiplicand:
  1548                           	opt stack 0
  1549  000062                     ___awmod@divisor:
  1550                           	opt stack 0
  1551  000062                     strcmp@s2:
  1552                           	opt stack 0
  1553                           
  1554                           ; 2 bytes @ 0x2
  1555  000062                     	ds	1
  1556  000063                     RTCC_to_caltime@dumy:
  1557                           	opt stack 0
  1558                           
  1559                           ; 1 bytes @ 0x3
  1560  000063                     	ds	1
  1561  000064                     ___awmod@counter:
  1562                           	opt stack 0
  1563  000064                     strcmp@r:
  1564                           	opt stack 0
  1565  000064                     ringbuf_init@bufsize:
  1566                           	opt stack 0
  1567  000064                     ___wmul@product:
  1568                           	opt stack 0
  1569  000064                     ___lldiv@divisor:
  1570                           	opt stack 0
  1571  000064                     ___llmod@divisor:
  1572                           	opt stack 0
  1573                           
  1574                           ; 4 bytes @ 0x4
  1575  000064                     	ds	1
  1576  000065                     ___awmod@sign:
  1577                           	opt stack 0
  1578                           
  1579                           ; 1 bytes @ 0x5
  1580  000065                     	ds	1
  1581  000066                     ??_month_length:
  1582  000066                     ?_atoi:
  1583                           	opt stack 0
  1584  000066                     ?___lwdiv:
  1585                           	opt stack 0
  1586  000066                     atoi@s:
  1587                           	opt stack 0
  1588  000066                     ___lwdiv@dividend:
  1589                           	opt stack 0
  1590                           
  1591                           ; 2 bytes @ 0x6
  1592  000066                     	ds	2
  1593  000068                     ??_atoi:
  1594  000068                     ringbuf_put@rb:
  1595                           	opt stack 0
  1596  000068                     ringbuf_pop@rb:
  1597                           	opt stack 0
  1598  000068                     ringbuf_backspace@rb:
  1599                           	opt stack 0
  1600  000068                     ___lwdiv@divisor:
  1601                           	opt stack 0
  1602  000068                     ___lldiv@quotient:
  1603                           	opt stack 0
  1604                           
  1605                           ; 4 bytes @ 0x8
  1606  000068                     	ds	2
  1607  00006A                     ??_ringbuf_pop:
  1608  00006A                     ??_ringbuf_backspace:
  1609  00006A                     ringbuf_put@asciicode:
  1610                           	opt stack 0
  1611  00006A                     month_length@year:
  1612                           	opt stack 0
  1613  00006A                     atoi@sign:
  1614                           	opt stack 0
  1615  00006A                     ___lwdiv@counter:
  1616                           	opt stack 0
  1617                           
  1618                           ; 1 bytes @ 0xA
  1619  00006A                     	ds	1
  1620  00006B                     ??_ringbuf_put:
  1621  00006B                     atoi@a:
  1622                           	opt stack 0
  1623  00006B                     ___lwdiv@quotient:
  1624                           	opt stack 0
  1625                           
  1626                           ; 2 bytes @ 0xB
  1627  00006B                     	ds	1
  1628  00006C                     ___lldiv@counter:
  1629                           	opt stack 0
  1630                           
  1631                           ; 1 bytes @ 0xC
  1632  00006C                     	ds	1
  1633  00006D                     ?___awdiv:
  1634                           	opt stack 0
  1635  00006D                     ?___lwmod:
  1636                           	opt stack 0
  1637  00006D                     ?___lmul:
  1638                           	opt stack 0
  1639  00006D                     ___awdiv@dividend:
  1640                           	opt stack 0
  1641  00006D                     ___lwmod@dividend:
  1642                           	opt stack 0
  1643  00006D                     ___lmul@multiplier:
  1644                           	opt stack 0
  1645                           
  1646                           ; 4 bytes @ 0xD
  1647  00006D                     	ds	2
  1648  00006F                     ringbuf_put_str@rb:
  1649                           	opt stack 0
  1650  00006F                     ___awdiv@divisor:
  1651                           	opt stack 0
  1652  00006F                     ___lwmod@divisor:
  1653                           	opt stack 0
  1654                           
  1655                           ; 2 bytes @ 0xF
  1656  00006F                     	ds	2
  1657  000071                     ?_sprintf:
  1658                           	opt stack 0
  1659  000071                     ___awdiv@counter:
  1660                           	opt stack 0
  1661  000071                     ringbuf_put_num@rb:
  1662                           	opt stack 0
  1663  000071                     ringbuf_put_str@str:
  1664                           	opt stack 0
  1665  000071                     sprintf@sp:
  1666                           	opt stack 0
  1667  000071                     ___lmul@multiplicand:
  1668                           	opt stack 0
  1669                           
  1670                           ; 4 bytes @ 0x11
  1671  000071                     	ds	1
  1672  000072                     ___awdiv@sign:
  1673                           	opt stack 0
  1674                           
  1675                           ; 1 bytes @ 0x12
  1676  000072                     	ds	1
  1677  000073                     ringbuf_put_num@value:
  1678                           	opt stack 0
  1679  000073                     sprintf@f:
  1680                           	opt stack 0
  1681  000073                     ___awdiv@quotient:
  1682                           	opt stack 0
  1683                           
  1684                           ; 2 bytes @ 0x13
  1685  000073                     	ds	2
  1686  000075                     ringbuf_put_num@digits:
  1687                           	opt stack 0
  1688  000075                     d_to_x@dec:
  1689                           	opt stack 0
  1690  000075                     PWM_set@value:
  1691                           	opt stack 0
  1692  000075                     ___lmul@product:
  1693                           	opt stack 0
  1694                           
  1695                           ; 4 bytes @ 0x15
  1696  000075                     	ds	1
  1697  000076                     ringbuf_put_num@i:
  1698                           	opt stack 0
  1699  000076                     caltime_to_RTCC@tm:
  1700                           	opt stack 0
  1701                           
  1702                           ; 2 bytes @ 0x16
  1703  000076                     	ds	1
  1704  000077                     ??_PWM_set:
  1705  000077                     ringbuf_put_num@temp:
  1706                           	opt stack 0
  1707                           
  1708                           ; 2 bytes @ 0x17
  1709  000077                     	ds	2
  1710  000079                     ?_get_quot_rem:
  1711                           	opt stack 0
  1712  000079                     PWM_set@color:
  1713                           	opt stack 0
  1714  000079                     get_quot_rem@quot:
  1715                           	opt stack 0
  1716  000079                     caltime_to_epoch@tm:
  1717                           	opt stack 0
  1718                           
  1719                           ; 2 bytes @ 0x19
  1720  000079                     	ds	2
  1721  00007B                     ??_caltime_to_epoch:
  1722  00007B                     get_quot_rem@div:
  1723                           	opt stack 0
  1724                           
  1725                           ; 1 bytes @ 0x1B
  1726  00007B                     	ds	2
  1727  00007D                     get_quot_rem@num:
  1728                           	opt stack 0
  1729                           
  1730                           ; 4 bytes @ 0x1D
  1731  00007D                     	ds	2
  1732  00007F                     caltime_to_epoch@year:
  1733                           	opt stack 0
  1734                           
  1735                           ; 1 bytes @ 0x1F
  1736  00007F                     	ds	1
  1737  000080                     caltime_to_epoch@month_3637:
  1738                           	opt stack 0
  1739                           
  1740                           ; 1 bytes @ 0x20
  1741  000080                     	ds	1
  1742  000081                     epoch_to_caltime@tm:
  1743                           	opt stack 0
  1744  000081                     caltime_to_epoch@epoch:
  1745                           	opt stack 0
  1746                           
  1747                           ; 4 bytes @ 0x21
  1748  000081                     	ds	2
  1749  000083                     ??_sprintf:
  1750  000083                     ??_epoch_to_caltime:
  1751                           
  1752                           ; 0 bytes @ 0x23
  1753  000083                     	ds	2
  1754  000085                     caltime_to_epoch@month:
  1755                           	opt stack 0
  1756  000085                     epoch_to_caltime@day_since_epoch:
  1757                           	opt stack 0
  1758                           
  1759                           ; 2 bytes @ 0x25
  1760  000085                     	ds	1
  1761  000086                     RTCC_from_RTCC@tm:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0x26
  1765  000086                     	ds	1
  1766  000087                     sprintf@prec:
  1767                           	opt stack 0
  1768  000087                     epoch_to_caltime@day:
  1769                           	opt stack 0
  1770                           
  1771                           ; 2 bytes @ 0x27
  1772  000087                     	ds	1
  1773  000088                     ??_light_task:
  1774  000088                     sprintf@ap:
  1775                           	opt stack 0
  1776                           
  1777                           ; 2 bytes @ 0x28
  1778  000088                     	ds	1
  1779  000089                     epoch_to_caltime@year:
  1780                           	opt stack 0
  1781                           
  1782                           ; 1 bytes @ 0x29
  1783  000089                     	ds	1
  1784  00008A                     epoch_to_caltime@month:
  1785                           	opt stack 0
  1786  00008A                     sprintf@cp:
  1787                           	opt stack 0
  1788                           
  1789                           ; 2 bytes @ 0x2A
  1790  00008A                     	ds	1
  1791  00008B                     epoch_to_caltime@num:
  1792                           	opt stack 0
  1793                           
  1794                           ; 4 bytes @ 0x2B
  1795  00008B                     	ds	1
  1796  00008C                     light_task@value:
  1797                           	opt stack 0
  1798  00008C                     sprintf@val:
  1799                           	opt stack 0
  1800                           
  1801                           ; 2 bytes @ 0x2C
  1802  00008C                     	ds	1
  1803  00008D                     light_task@value_6007:
  1804                           	opt stack 0
  1805                           
  1806                           ; 1 bytes @ 0x2D
  1807  00008D                     	ds	1
  1808  00008E                     sprintf@len:
  1809                           	opt stack 0
  1810  00008E                     light_task@temp:
  1811                           	opt stack 0
  1812                           
  1813                           ; 4 bytes @ 0x2E
  1814  00008E                     	ds	1
  1815  00008F                     RTCC_from_caltime@tm:
  1816                           	opt stack 0
  1817  00008F                     RTCC_from_epoch@tm:
  1818                           	opt stack 0
  1819                           
  1820                           ; 2 bytes @ 0x2F
  1821  00008F                     	ds	1
  1822  000090                     sprintf@flag:
  1823                           	opt stack 0
  1824                           
  1825                           ; 1 bytes @ 0x30
  1826  000090                     	ds	1
  1827  000091                     sprintf@c:
  1828                           	opt stack 0
  1829                           
  1830                           ; 1 bytes @ 0x31
  1831  000091                     	ds	1
  1832  000092                     light_task@i:
  1833                           	opt stack 0
  1834  000092                     sprintf@width:
  1835                           	opt stack 0
  1836                           
  1837                           ; 2 bytes @ 0x32
  1838  000092                     	ds	2
  1839  000094                     print_time@tx:
  1840                           	opt stack 0
  1841                           
  1842                           ; 2 bytes @ 0x34
  1843  000094                     	ds	2
  1844  000096                     print_time@str:
  1845                           	opt stack 0
  1846                           
  1847                           ; 30 bytes @ 0x36
  1848  000096                     	ds	30
  1849  0000B4                     terminal_at_hand@tx:
  1850                           	opt stack 0
  1851                           
  1852                           ; 2 bytes @ 0x54
  1853  0000B4                     	ds	2
  1854  0000B6                     terminal_at_hand@hand:
  1855                           	opt stack 0
  1856                           
  1857                           ; 2 bytes @ 0x56
  1858  0000B6                     	ds	2
  1859  0000B8                     terminal_at_hand@min:
  1860                           	opt stack 0
  1861                           
  1862                           ; 1 bytes @ 0x58
  1863  0000B8                     	ds	1
  1864  0000B9                     terminal_at_hand@max:
  1865                           	opt stack 0
  1866                           
  1867                           ; 1 bytes @ 0x59
  1868  0000B9                     	ds	1
  1869  0000BA                     terminal_at_hand@value:
  1870                           	opt stack 0
  1871                           
  1872                           ; 1 bytes @ 0x5A
  1873  0000BA                     	ds	1
  1874  0000BB                     terminal_time@tx:
  1875                           	opt stack 0
  1876                           
  1877                           ; 2 bytes @ 0x5B
  1878  0000BB                     	ds	2
  1879  0000BD                     terminal_time@op0:
  1880                           	opt stack 0
  1881                           
  1882                           ; 2 bytes @ 0x5D
  1883  0000BD                     	ds	2
  1884  0000BF                     terminal_time@op1:
  1885                           	opt stack 0
  1886                           
  1887                           ; 2 bytes @ 0x5F
  1888  0000BF                     	ds	2
  1889  0000C1                     terminal_time@op2:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x61
  1893  0000C1                     	ds	2
  1894  0000C3                     _terminal_time$6894:
  1895                           	opt stack 0
  1896                           
  1897                           ; 1 bytes @ 0x63
  1898  0000C3                     	ds	1
  1899  0000C4                     terminal_operation@tx:
  1900                           	opt stack 0
  1901                           
  1902                           ; 2 bytes @ 0x64
  1903  0000C4                     	ds	2
  1904  0000C6                     terminal_operation@op0:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x66
  1908  0000C6                     	ds	2
  1909  0000C8                     terminal_operation@op1:
  1910                           	opt stack 0
  1911                           
  1912                           ; 2 bytes @ 0x68
  1913  0000C8                     	ds	2
  1914  0000CA                     terminal_operation@op2:
  1915                           	opt stack 0
  1916                           
  1917                           ; 2 bytes @ 0x6A
  1918  0000CA                     	ds	2
  1919  0000CC                     terminal_operation@op3:
  1920                           	opt stack 0
  1921                           
  1922                           ; 2 bytes @ 0x6C
  1923  0000CC                     	ds	2
  1924  0000CE                     ??_terminal_operation:
  1925                           
  1926                           ; 0 bytes @ 0x6E
  1927  0000CE                     	ds	2
  1928  0000D0                     terminal_task@tx:
  1929                           	opt stack 0
  1930                           
  1931                           ; 2 bytes @ 0x70
  1932  0000D0                     	ds	2
  1933  0000D2                     terminal_task@rx:
  1934                           	opt stack 0
  1935                           
  1936                           ; 2 bytes @ 0x72
  1937  0000D2                     	ds	2
  1938  0000D4                     ??_terminal_task:
  1939                           
  1940                           ; 0 bytes @ 0x74
  1941  0000D4                     	ds	2
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           postinc0	equ	0xFEE
  1947                           wreg	equ	0xFE8
  1948                           postdec1	equ	0xFE5
  1949                           fsr1h	equ	0xFE2
  1950                           fsr1l	equ	0xFE1
  1951                           
  1952                           	psect	cstackCOMRAM
  1953  000001                     __pcstackCOMRAM:
  1954                           	opt stack 0
  1955  000001                     ?i2_ringbuf_num:
  1956                           	opt stack 0
  1957  000001                     button_timer_interrupt@bt:
  1958                           	opt stack 0
  1959  000001                     i2ringbuf_num@rb:
  1960                           	opt stack 0
  1961                           
  1962                           ; 2 bytes @ 0x0
  1963  000001                     	ds	2
  1964  000003                     ??i2_ringbuf_num:
  1965  000003                     button_timer_interrupt@sw_value:
  1966                           	opt stack 0
  1967                           
  1968                           ; 1 bytes @ 0x2
  1969  000003                     	ds	1
  1970  000004                     
  1971                           ; 0 bytes @ 0x3
  1972  000004                     	ds	5
  1973  000009                     i2ringbuf_put@rb:
  1974                           	opt stack 0
  1975  000009                     i2ringbuf_pop@rb:
  1976                           	opt stack 0
  1977                           
  1978                           ; 2 bytes @ 0x8
  1979  000009                     	ds	2
  1980  00000B                     ??i2_ringbuf_pop:
  1981  00000B                     i2ringbuf_put@asciicode:
  1982                           	opt stack 0
  1983                           
  1984                           ; 1 bytes @ 0xA
  1985  00000B                     	ds	1
  1986  00000C                     ??i2_ringbuf_put:
  1987                           
  1988                           ; 0 bytes @ 0xB
  1989  00000C                     	ds	3
  1990  00000F                     i2ringbuf_pop@ret:
  1991                           	opt stack 0
  1992                           
  1993                           ; 1 bytes @ 0xE
  1994  00000F                     	ds	1
  1995  000010                     UART_ISR@ascii:
  1996                           	opt stack 0
  1997                           
  1998                           ; 1 bytes @ 0xF
  1999  000010                     	ds	1
  2000  000011                     ??_ISR:
  2001                           
  2002                           ; 0 bytes @ 0x10
  2003  000011                     	ds	15
  2004  000020                     ??_strcmp:
  2005  000020                     ??_isdigit:
  2006  000020                     ??_timer0_init:
  2007  000020                     ??_timer3_init:
  2008  000020                     ??_x_to_d:
  2009  000020                     timer1_init@clock_select:
  2010                           	opt stack 0
  2011  000020                     ADC_init@p_ref:
  2012                           	opt stack 0
  2013  000020                     ringbuf_pop@ret:
  2014                           	opt stack 0
  2015  000020                     month_length@month:
  2016                           	opt stack 0
  2017  000020                     PWM_init@PR:
  2018                           	opt stack 0
  2019  000020                     ___llmod@counter:
  2020                           	opt stack 0
  2021  000020                     ___lwmod@counter:
  2022                           	opt stack 0
  2023                           
  2024                           ; 1 bytes @ 0x1F
  2025  000020                     	ds	1
  2026  000021                     tblptru	equ	0xFF8
  2027                           tblptrh	equ	0xFF7
  2028                           tblptrl	equ	0xFF6
  2029                           tablat	equ	0xFF5
  2030                           postinc0	equ	0xFEE
  2031                           wreg	equ	0xFE8
  2032                           postdec1	equ	0xFE5
  2033                           fsr1h	equ	0xFE2
  2034                           fsr1l	equ	0xFE1
  2035                           
  2036                           ; 0 bytes @ 0x20
  2037 ;;
  2038 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2039 ;;
  2040 ;; *************** function _main *****************
  2041 ;; Defined at:
  2042 ;;		line 310 in file "PIC18F27J53-killifish_light05.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  2  1588[None  ] int 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels required when called:   13
  2062 ;; This function calls:
  2063 ;;		_RTCC_from_RTCC
  2064 ;;		_RTCC_from_epoch
  2065 ;;		_RTCC_task
  2066 ;;		_UART_task
  2067 ;;		_light_task
  2068 ;;		_main_init
  2069 ;;		_terminal_task
  2070 ;; This function is called by:
  2071 ;;		Startup code after reset
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text0
  2076  012B30                     __ptext0:
  2077                           	opt stack 0
  2078  012B30                     _main:
  2079                           	opt stack 18
  2080                           
  2081                           ;PIC18F27J53-killifish_light05.c: 311: main_init();
  2082                           
  2083                           ;incstack = 0
  2084  012B30  EC7B  F093         	call	_main_init	;wreg free
  2085                           
  2086                           ;PIC18F27J53-killifish_light05.c: 313: RTCC_from_RTCC(&now);
  2087  012B34  0E37               	movlw	low _now
  2088  012B36  0100               	movlb	0	; () banked
  2089  012B38  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  2090  012B3A  0E01               	movlw	high _now
  2091  012B3C  0100               	movlb	0	; () banked
  2092  012B3E  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  2093  012B40  EC36  F098         	call	_RTCC_from_RTCC	;wreg free
  2094                           
  2095                           ;PIC18F27J53-killifish_light05.c: 314: if (now.DD == 0) {
  2096  012B44  0101               	movlb	1	; () banked
  2097  012B46  513F               	movf	(_now+8)& (0+255),w,b
  2098  012B48  A4D8               	btfss	status,2,c
  2099  012B4A  D011               	goto	l10022
  2100                           
  2101                           ; BSR set to: 1
  2102                           ;PIC18F27J53-killifish_light05.c: 315: now.epoch = 0;
  2103  012B4C  0E00               	movlw	0
  2104  012B4E  0101               	movlb	1	; () banked
  2105  012B50  6F37               	movwf	_now& (0+255),b
  2106  012B52  0E00               	movlw	0
  2107  012B54  6F38               	movwf	(_now+1)& (0+255),b
  2108  012B56  0E00               	movlw	0
  2109  012B58  6F39               	movwf	(_now+2)& (0+255),b
  2110  012B5A  0E00               	movlw	0
  2111  012B5C  6F3A               	movwf	(_now+3)& (0+255),b
  2112                           
  2113                           ; BSR set to: 1
  2114                           ;PIC18F27J53-killifish_light05.c: 316: RTCC_from_epoch(&now);
  2115  012B5E  0E37               	movlw	low _now
  2116  012B60  0100               	movlb	0	; () banked
  2117  012B62  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  2118  012B64  0E01               	movlw	high _now
  2119  012B66  0100               	movlb	0	; () banked
  2120  012B68  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  2121  012B6A  EC29  F098         	call	_RTCC_from_epoch	;wreg free
  2122  012B6E                     l10022:
  2123                           
  2124                           ;PIC18F27J53-killifish_light05.c: 320: INTCONbits.GIE = 0;
  2125  012B6E  9EF2               	bcf	intcon,7,c	;volatile
  2126                           
  2127                           ;PIC18F27J53-killifish_light05.c: 321: RTCC_task();
  2128  012B70  EC36  F097         	call	_RTCC_task	;wreg free
  2129                           
  2130                           ;PIC18F27J53-killifish_light05.c: 322: terminal_task(&uart_tx, &uart_rx);
  2131  012B74  0E55               	movlw	low _uart_tx
  2132  012B76  0100               	movlb	0	; () banked
  2133  012B78  6FD0               	movwf	terminal_task@tx& (0+255),b
  2134  012B7A  0E01               	movlw	high _uart_tx
  2135  012B7C  0100               	movlb	0	; () banked
  2136  012B7E  6FD1               	movwf	(terminal_task@tx+1)& (0+255),b
  2137  012B80  0E4D               	movlw	low _uart_rx
  2138  012B82  0100               	movlb	0	; () banked
  2139  012B84  6FD2               	movwf	terminal_task@rx& (0+255),b
  2140  012B86  0E01               	movlw	high _uart_rx
  2141  012B88  0100               	movlb	0	; () banked
  2142  012B8A  6FD3               	movwf	(terminal_task@rx+1)& (0+255),b
  2143  012B8C  EC8F  F086         	call	_terminal_task	;wreg free
  2144                           
  2145                           ;PIC18F27J53-killifish_light05.c: 323: UART_task();
  2146  012B90  ECFD  F097         	call	_UART_task	;wreg free
  2147                           
  2148                           ;PIC18F27J53-killifish_light05.c: 324: light_task();
  2149  012B94  ECCC  F08A         	call	_light_task	;wreg free
  2150                           
  2151                           ;PIC18F27J53-killifish_light05.c: 325: INTCONbits.GIE = 1;
  2152  012B98  8EF2               	bsf	intcon,7,c	;volatile
  2153  012B9A  D7E9               	goto	l10022
  2154  012B9C                     __end_of_main:
  2155                           	opt stack 0
  2156                           tblptru	equ	0xFF8
  2157                           tblptrh	equ	0xFF7
  2158                           tblptrl	equ	0xFF6
  2159                           tablat	equ	0xFF5
  2160                           intcon	equ	0xFF2
  2161                           postinc0	equ	0xFEE
  2162                           wreg	equ	0xFE8
  2163                           postdec1	equ	0xFE5
  2164                           fsr1h	equ	0xFE2
  2165                           fsr1l	equ	0xFE1
  2166                           status	equ	0xFD8
  2167                           
  2168 ;; *************** function _terminal_task *****************
  2169 ;; Defined at:
  2170 ;;		line 8 in file "../My_library/My_terminal.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  tx              2  112[BANK0 ] PTR struct ringbuf
  2173 ;;		 -> uart_tx(8), 
  2174 ;;  rx              2  114[BANK0 ] PTR struct ringbuf
  2175 ;;		 -> uart_rx(8), 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  i               1  102[BANK5 ] unsigned char 
  2178 ;;  i               1  104[BANK5 ] unsigned char 
  2179 ;;  ascii           1  103[BANK5 ] unsigned char 
  2180 ;;  buf           100    0[BANK5 ] unsigned char [100]
  2181 ;; Return value:  Size  Location     Type
  2182 ;;		None               void
  2183 ;; Registers used:
  2184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2190 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0       0     105       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Totals:         0       6       0       0       0       0     105       0       0       0       0       0       
      +0       0       0       0
  2194 ;;Total ram usage:      111 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:   12
  2197 ;; This function calls:
  2198 ;;		_ringbuf_backspace
  2199 ;;		_ringbuf_delete
  2200 ;;		_ringbuf_init
  2201 ;;		_ringbuf_num
  2202 ;;		_ringbuf_pop
  2203 ;;		_ringbuf_put
  2204 ;;		_ringbuf_put_num
  2205 ;;		_ringbuf_put_str
  2206 ;;		_terminal_operation
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text1
  2213  010D1E                     __ptext1:
  2214                           	opt stack 0
  2215  010D1E                     _terminal_task:
  2216                           	opt stack 18
  2217                           
  2218                           ;My_terminal.c: 9: static ringbuf_t command;
  2219                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2220                           ;My_terminal.c: 11: if (command_init == 0) {
  2221                           
  2222                           ;incstack = 0
  2223  010D1E  0100               	movlb	0	; () banked
  2224  010D20  51E9               	movf	terminal_task@command_init& (0+255),w,b
  2225  010D22  0100               	movlb	0	; () banked
  2226  010D24  A4D8               	btfss	status,2,c
  2227  010D26  D016               	goto	l9542
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;My_terminal.c: 12: command_init = 1;
  2231  010D28  0E01               	movlw	1
  2232  010D2A  0100               	movlb	0	; () banked
  2233  010D2C  6FE9               	movwf	terminal_task@command_init& (0+255),b
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;My_terminal.c: 13: char buf[100];
  2237                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2238  010D2E  0E6D               	movlw	low terminal_task@command
  2239  010D30  0100               	movlb	0	; () banked
  2240  010D32  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2241  010D34  0E01               	movlw	high terminal_task@command
  2242  010D36  0100               	movlb	0	; () banked
  2243  010D38  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2244  010D3A  0E00               	movlw	low terminal_task@buf
  2245  010D3C  0100               	movlb	0	; () banked
  2246  010D3E  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2247  010D40  0E05               	movlw	high terminal_task@buf
  2248  010D42  0100               	movlb	0	; () banked
  2249  010D44  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2250  010D46  0E00               	movlw	0
  2251  010D48  0100               	movlb	0	; () banked
  2252  010D4A  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2253  010D4C  0E64               	movlw	100
  2254  010D4E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2255  010D50  ECC0  F096         	call	_ringbuf_init	;wreg free
  2256  010D54                     l9542:
  2257                           
  2258                           ;My_terminal.c: 15: }
  2259                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2260  010D54  C0D2  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2261  010D58  C0D3  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2262  010D5C  EC1E  F08E         	call	_ringbuf_num	;wreg free
  2263  010D60  0100               	movlb	0	; () banked
  2264  010D62  5160               	movf	?_ringbuf_num& (0+255),w,b
  2265  010D64  0100               	movlb	0	; () banked
  2266  010D66  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2267  010D68  B4D8               	btfsc	status,2,c
  2268  010D6A  0012               	return	
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2272  010D6C  C0D2  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2273  010D70  C0D3  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2274  010D74  EC40  F090         	call	_ringbuf_pop	;wreg free
  2275  010D78  0105               	movlb	5	; () banked
  2276  010D7A  6F67               	movwf	terminal_task@ascii& (0+255),b
  2277                           
  2278                           ;My_terminal.c: 18: switch (ascii) {
  2279  010D7C  D176               	goto	l9606
  2280  010D7E                     l9546:
  2281                           
  2282                           ; BSR set to: 5
  2283                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2284  010D7E  0E6D               	movlw	low terminal_task@command
  2285  010D80  0100               	movlb	0	; () banked
  2286  010D82  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2287  010D84  0E01               	movlw	high terminal_task@command
  2288  010D86  0100               	movlb	0	; () banked
  2289  010D88  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2290  010D8A  0E00               	movlw	0
  2291  010D8C  0100               	movlb	0	; () banked
  2292  010D8E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2293  010D90  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2294                           
  2295                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2296  010D94  C0D0  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2297  010D98  C0D1  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2298  010D9C  0E09               	movlw	9
  2299  010D9E  0100               	movlb	0	; () banked
  2300  010DA0  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2301  010DA2  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2302                           
  2303                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2304  010DA6  0E6D               	movlw	low terminal_task@command
  2305  010DA8  0100               	movlb	0	; () banked
  2306  010DAA  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2307  010DAC  0E01               	movlw	high terminal_task@command
  2308  010DAE  0100               	movlb	0	; () banked
  2309  010DB0  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2310  010DB2  EC1E  F08E         	call	_ringbuf_num	;wreg free
  2311  010DB6  0EFF               	movlw	255
  2312  010DB8  0100               	movlb	0	; () banked
  2313  010DBA  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2314  010DBC  0105               	movlb	5	; () banked
  2315  010DBE  6F64               	movwf	_terminal_task$6893& (0+255),b
  2316  010DC0  0EFF               	movlw	255
  2317  010DC2  0100               	movlb	0	; () banked
  2318  010DC4  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2319  010DC6  0105               	movlb	5	; () banked
  2320  010DC8  6F65               	movwf	(_terminal_task$6893+1)& (0+255),b
  2321                           
  2322                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2323  010DCA  C0D0  F071         	movff	terminal_task@tx,ringbuf_put_num@rb
  2324  010DCE  C0D1  F072         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2325  010DD2  C564  F073         	movff	_terminal_task$6893,ringbuf_put_num@value
  2326  010DD6  C565  F074         	movff	_terminal_task$6893+1,ringbuf_put_num@value+1
  2327  010DDA  0E02               	movlw	2
  2328  010DDC  0100               	movlb	0	; () banked
  2329  010DDE  6F75               	movwf	ringbuf_put_num@digits& (0+255),b
  2330  010DE0  ECE0  F094         	call	_ringbuf_put_num	;wreg free
  2331                           
  2332                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2333  010DE4  C0D0  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2334  010DE8  C0D1  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2335  010DEC  0E0A               	movlw	10
  2336  010DEE  0100               	movlb	0	; () banked
  2337  010DF0  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2338  010DF2  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2339                           
  2340                           ;My_terminal.c: 24: static char op0[25];
  2341                           ;My_terminal.c: 25: static char op1[25];
  2342                           ;My_terminal.c: 26: static char op2[25];
  2343                           ;My_terminal.c: 27: static char op3[25];
  2344                           ;My_terminal.c: 28: uint8_t i;
  2345                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2346  010DF6  0E00               	movlw	0
  2347  010DF8  0105               	movlb	5	; () banked
  2348  010DFA  6F68               	movwf	terminal_task@i& (0+255),b
  2349  010DFC  D002               	goto	l9552
  2350  010DFE                     l9550:
  2351                           
  2352                           ; BSR set to: 5
  2353  010DFE  0105               	movlb	5	; () banked
  2354  010E00  2B68               	incf	terminal_task@i& (0+255),f,b
  2355  010E02                     l9552:
  2356                           
  2357                           ; BSR set to: 5
  2358  010E02  0E6D               	movlw	low terminal_task@command
  2359  010E04  0100               	movlb	0	; () banked
  2360  010E06  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2361  010E08  0E01               	movlw	high terminal_task@command
  2362  010E0A  0100               	movlb	0	; () banked
  2363  010E0C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2364  010E0E  EC40  F090         	call	_ringbuf_pop	;wreg free
  2365  010E12  0100               	movlb	0	; () banked
  2366  010E14  6FD4               	movwf	??_terminal_task& (0+255),b
  2367  010E16  0105               	movlb	5	; () banked
  2368  010E18  5168               	movf	terminal_task@i& (0+255),w,b
  2369  010E1A  0D01               	mullw	1
  2370  010E1C  0E80               	movlw	low terminal_task@op0
  2371  010E1E  24F3               	addwf	prodl,w,c
  2372  010E20  6ED9               	movwf	fsr2l,c
  2373  010E22  0E02               	movlw	high terminal_task@op0
  2374  010E24  20F4               	addwfc	prodh,w,c
  2375  010E26  6EDA               	movwf	fsr2h,c
  2376  010E28  C0D4  FFDF         	movff	??_terminal_task,indf2
  2377  010E2C  50DF               	movf	indf2,w,c
  2378  010E2E  A4D8               	btfss	status,2,c
  2379  010E30  D7E6               	goto	l9550
  2380                           
  2381                           ; BSR set to: 5
  2382                           ;My_terminal.c: 30: op0[i] = '\0';
  2383                           
  2384                           ; BSR set to: 5
  2385  010E32  0105               	movlb	5	; () banked
  2386  010E34  5168               	movf	terminal_task@i& (0+255),w,b
  2387  010E36  0D01               	mullw	1
  2388  010E38  0E80               	movlw	low terminal_task@op0
  2389  010E3A  24F3               	addwf	prodl,w,c
  2390  010E3C  6ED9               	movwf	fsr2l,c
  2391  010E3E  0E02               	movlw	high terminal_task@op0
  2392  010E40  20F4               	addwfc	prodh,w,c
  2393  010E42  6EDA               	movwf	fsr2h,c
  2394  010E44  0E00               	movlw	0
  2395  010E46  6EDF               	movwf	indf2,c
  2396                           
  2397                           ; BSR set to: 5
  2398                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2399  010E48  0E00               	movlw	0
  2400  010E4A  0105               	movlb	5	; () banked
  2401  010E4C  6F68               	movwf	terminal_task@i& (0+255),b
  2402  010E4E  D002               	goto	l9560
  2403  010E50                     l9558:
  2404                           
  2405                           ; BSR set to: 5
  2406  010E50  0105               	movlb	5	; () banked
  2407  010E52  2B68               	incf	terminal_task@i& (0+255),f,b
  2408  010E54                     l9560:
  2409                           
  2410                           ; BSR set to: 5
  2411  010E54  0E6D               	movlw	low terminal_task@command
  2412  010E56  0100               	movlb	0	; () banked
  2413  010E58  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2414  010E5A  0E01               	movlw	high terminal_task@command
  2415  010E5C  0100               	movlb	0	; () banked
  2416  010E5E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2417  010E60  EC40  F090         	call	_ringbuf_pop	;wreg free
  2418  010E64  0100               	movlb	0	; () banked
  2419  010E66  6FD4               	movwf	??_terminal_task& (0+255),b
  2420  010E68  0105               	movlb	5	; () banked
  2421  010E6A  5168               	movf	terminal_task@i& (0+255),w,b
  2422  010E6C  0D01               	mullw	1
  2423  010E6E  0E99               	movlw	low terminal_task@op1
  2424  010E70  24F3               	addwf	prodl,w,c
  2425  010E72  6ED9               	movwf	fsr2l,c
  2426  010E74  0E02               	movlw	high terminal_task@op1
  2427  010E76  20F4               	addwfc	prodh,w,c
  2428  010E78  6EDA               	movwf	fsr2h,c
  2429  010E7A  C0D4  FFDF         	movff	??_terminal_task,indf2
  2430  010E7E  50DF               	movf	indf2,w,c
  2431  010E80  A4D8               	btfss	status,2,c
  2432  010E82  D7E6               	goto	l9558
  2433                           
  2434                           ; BSR set to: 5
  2435                           ;My_terminal.c: 32: op1[i] = '\0';
  2436                           
  2437                           ; BSR set to: 5
  2438  010E84  0105               	movlb	5	; () banked
  2439  010E86  5168               	movf	terminal_task@i& (0+255),w,b
  2440  010E88  0D01               	mullw	1
  2441  010E8A  0E99               	movlw	low terminal_task@op1
  2442  010E8C  24F3               	addwf	prodl,w,c
  2443  010E8E  6ED9               	movwf	fsr2l,c
  2444  010E90  0E02               	movlw	high terminal_task@op1
  2445  010E92  20F4               	addwfc	prodh,w,c
  2446  010E94  6EDA               	movwf	fsr2h,c
  2447  010E96  0E00               	movlw	0
  2448  010E98  6EDF               	movwf	indf2,c
  2449                           
  2450                           ; BSR set to: 5
  2451                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2452  010E9A  0E00               	movlw	0
  2453  010E9C  0105               	movlb	5	; () banked
  2454  010E9E  6F68               	movwf	terminal_task@i& (0+255),b
  2455  010EA0  D002               	goto	l9568
  2456  010EA2                     l9566:
  2457                           
  2458                           ; BSR set to: 5
  2459  010EA2  0105               	movlb	5	; () banked
  2460  010EA4  2B68               	incf	terminal_task@i& (0+255),f,b
  2461  010EA6                     l9568:
  2462                           
  2463                           ; BSR set to: 5
  2464  010EA6  0E6D               	movlw	low terminal_task@command
  2465  010EA8  0100               	movlb	0	; () banked
  2466  010EAA  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2467  010EAC  0E01               	movlw	high terminal_task@command
  2468  010EAE  0100               	movlb	0	; () banked
  2469  010EB0  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2470  010EB2  EC40  F090         	call	_ringbuf_pop	;wreg free
  2471  010EB6  0100               	movlb	0	; () banked
  2472  010EB8  6FD4               	movwf	??_terminal_task& (0+255),b
  2473  010EBA  0105               	movlb	5	; () banked
  2474  010EBC  5168               	movf	terminal_task@i& (0+255),w,b
  2475  010EBE  0D01               	mullw	1
  2476  010EC0  0EB2               	movlw	low terminal_task@op2
  2477  010EC2  24F3               	addwf	prodl,w,c
  2478  010EC4  6ED9               	movwf	fsr2l,c
  2479  010EC6  0E02               	movlw	high terminal_task@op2
  2480  010EC8  20F4               	addwfc	prodh,w,c
  2481  010ECA  6EDA               	movwf	fsr2h,c
  2482  010ECC  C0D4  FFDF         	movff	??_terminal_task,indf2
  2483  010ED0  50DF               	movf	indf2,w,c
  2484  010ED2  A4D8               	btfss	status,2,c
  2485  010ED4  D7E6               	goto	l9566
  2486                           
  2487                           ; BSR set to: 5
  2488                           ;My_terminal.c: 34: op2[i] = '\0';
  2489                           
  2490                           ; BSR set to: 5
  2491  010ED6  0105               	movlb	5	; () banked
  2492  010ED8  5168               	movf	terminal_task@i& (0+255),w,b
  2493  010EDA  0D01               	mullw	1
  2494  010EDC  0EB2               	movlw	low terminal_task@op2
  2495  010EDE  24F3               	addwf	prodl,w,c
  2496  010EE0  6ED9               	movwf	fsr2l,c
  2497  010EE2  0E02               	movlw	high terminal_task@op2
  2498  010EE4  20F4               	addwfc	prodh,w,c
  2499  010EE6  6EDA               	movwf	fsr2h,c
  2500  010EE8  0E00               	movlw	0
  2501  010EEA  6EDF               	movwf	indf2,c
  2502                           
  2503                           ; BSR set to: 5
  2504                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2505  010EEC  0E00               	movlw	0
  2506  010EEE  0105               	movlb	5	; () banked
  2507  010EF0  6F68               	movwf	terminal_task@i& (0+255),b
  2508  010EF2  D002               	goto	l9576
  2509  010EF4                     l9574:
  2510                           
  2511                           ; BSR set to: 5
  2512  010EF4  0105               	movlb	5	; () banked
  2513  010EF6  2B68               	incf	terminal_task@i& (0+255),f,b
  2514  010EF8                     l9576:
  2515                           
  2516                           ; BSR set to: 5
  2517  010EF8  0E6D               	movlw	low terminal_task@command
  2518  010EFA  0100               	movlb	0	; () banked
  2519  010EFC  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2520  010EFE  0E01               	movlw	high terminal_task@command
  2521  010F00  0100               	movlb	0	; () banked
  2522  010F02  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2523  010F04  EC40  F090         	call	_ringbuf_pop	;wreg free
  2524  010F08  0100               	movlb	0	; () banked
  2525  010F0A  6FD4               	movwf	??_terminal_task& (0+255),b
  2526  010F0C  0105               	movlb	5	; () banked
  2527  010F0E  5168               	movf	terminal_task@i& (0+255),w,b
  2528  010F10  0D01               	mullw	1
  2529  010F12  0ECB               	movlw	low terminal_task@op3
  2530  010F14  24F3               	addwf	prodl,w,c
  2531  010F16  6ED9               	movwf	fsr2l,c
  2532  010F18  0E02               	movlw	high terminal_task@op3
  2533  010F1A  20F4               	addwfc	prodh,w,c
  2534  010F1C  6EDA               	movwf	fsr2h,c
  2535  010F1E  C0D4  FFDF         	movff	??_terminal_task,indf2
  2536  010F22  50DF               	movf	indf2,w,c
  2537  010F24  A4D8               	btfss	status,2,c
  2538  010F26  D7E6               	goto	l9574
  2539                           
  2540                           ; BSR set to: 5
  2541                           ;My_terminal.c: 36: op3[i] = '\0';
  2542                           
  2543                           ; BSR set to: 5
  2544  010F28  0105               	movlb	5	; () banked
  2545  010F2A  5168               	movf	terminal_task@i& (0+255),w,b
  2546  010F2C  0D01               	mullw	1
  2547  010F2E  0ECB               	movlw	low terminal_task@op3
  2548  010F30  24F3               	addwf	prodl,w,c
  2549  010F32  6ED9               	movwf	fsr2l,c
  2550  010F34  0E02               	movlw	high terminal_task@op3
  2551  010F36  20F4               	addwfc	prodh,w,c
  2552  010F38  6EDA               	movwf	fsr2h,c
  2553  010F3A  0E00               	movlw	0
  2554  010F3C  6EDF               	movwf	indf2,c
  2555                           
  2556                           ; BSR set to: 5
  2557                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2558  010F3E  C0D0  F0C4         	movff	terminal_task@tx,terminal_operation@tx
  2559  010F42  C0D1  F0C5         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2560  010F46  0E80               	movlw	low terminal_task@op0
  2561  010F48  0100               	movlb	0	; () banked
  2562  010F4A  6FC6               	movwf	terminal_operation@op0& (0+255),b
  2563  010F4C  0E02               	movlw	high terminal_task@op0
  2564  010F4E  0100               	movlb	0	; () banked
  2565  010F50  6FC7               	movwf	(terminal_operation@op0+1)& (0+255),b
  2566  010F52  0E99               	movlw	low terminal_task@op1
  2567  010F54  0100               	movlb	0	; () banked
  2568  010F56  6FC8               	movwf	terminal_operation@op1& (0+255),b
  2569  010F58  0E02               	movlw	high terminal_task@op1
  2570  010F5A  0100               	movlb	0	; () banked
  2571  010F5C  6FC9               	movwf	(terminal_operation@op1+1)& (0+255),b
  2572  010F5E  0EB2               	movlw	low terminal_task@op2
  2573  010F60  0100               	movlb	0	; () banked
  2574  010F62  6FCA               	movwf	terminal_operation@op2& (0+255),b
  2575  010F64  0E02               	movlw	high terminal_task@op2
  2576  010F66  0100               	movlb	0	; () banked
  2577  010F68  6FCB               	movwf	(terminal_operation@op2+1)& (0+255),b
  2578  010F6A  0ECB               	movlw	low terminal_task@op3
  2579  010F6C  0100               	movlb	0	; () banked
  2580  010F6E  6FCC               	movwf	terminal_operation@op3& (0+255),b
  2581  010F70  0E02               	movlw	high terminal_task@op3
  2582  010F72  0100               	movlb	0	; () banked
  2583  010F74  6FCD               	movwf	(terminal_operation@op3+1)& (0+255),b
  2584  010F76  EC00  F080         	call	_terminal_operation	;wreg free
  2585                           
  2586                           ;My_terminal.c: 38: break;
  2587  010F7A  0012               	return	
  2588  010F7C                     l9582:
  2589                           
  2590                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2591  010F7C  0E6D               	movlw	low terminal_task@command
  2592  010F7E  0100               	movlb	0	; () banked
  2593  010F80  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2594  010F82  0E01               	movlw	high terminal_task@command
  2595  010F84  0100               	movlb	0	; () banked
  2596  010F86  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2597  010F88  0E00               	movlw	0
  2598  010F8A  0100               	movlb	0	; () banked
  2599  010F8C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2600  010F8E  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2601                           
  2602                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2603  010F92  C0D0  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2604  010F96  C0D1  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2605  010F9A  0E20               	movlw	32
  2606  010F9C  0100               	movlb	0	; () banked
  2607  010F9E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2608  010FA0  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2609                           
  2610                           ;My_terminal.c: 42: break;
  2611  010FA4  0012               	return	
  2612  010FA6                     l9584:
  2613                           
  2614                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2615  010FA6  0E6D               	movlw	low terminal_task@command
  2616  010FA8  0100               	movlb	0	; () banked
  2617  010FAA  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2618  010FAC  0E01               	movlw	high terminal_task@command
  2619  010FAE  0100               	movlb	0	; () banked
  2620  010FB0  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2621  010FB2  EC10  F094         	call	_ringbuf_backspace	;wreg free
  2622                           
  2623                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2624  010FB6  C0D0  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2625  010FBA  C0D1  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2626  010FBE  0ED6               	movlw	low STR_19
  2627  010FC0  0100               	movlb	0	; () banked
  2628  010FC2  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2629  010FC4  0EFF               	movlw	high STR_19
  2630  010FC6  0100               	movlb	0	; () banked
  2631  010FC8  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2632  010FCA  EC03  F096         	call	_ringbuf_put_str	;wreg free
  2633                           
  2634                           ;My_terminal.c: 46: break;
  2635  010FCE  0012               	return	
  2636  010FD0                     l9588:
  2637                           
  2638                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2639  010FD0  0E00               	movlw	0
  2640  010FD2  0105               	movlb	5	; () banked
  2641  010FD4  6F66               	movwf	terminal_task@i_4539& (0+255),b
  2642  010FD6  D00E               	goto	l9594
  2643  010FD8                     l9590:
  2644  010FD8  C0D0  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2645  010FDC  C0D1  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2646  010FE0  0ED6               	movlw	low STR_19
  2647  010FE2  0100               	movlb	0	; () banked
  2648  010FE4  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2649  010FE6  0EFF               	movlw	high STR_19
  2650  010FE8  0100               	movlb	0	; () banked
  2651  010FEA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2652  010FEC  EC03  F096         	call	_ringbuf_put_str	;wreg free
  2653  010FF0  0105               	movlb	5	; () banked
  2654  010FF2  2B66               	incf	terminal_task@i_4539& (0+255),f,b
  2655  010FF4                     l9594:
  2656                           
  2657                           ; BSR set to: 5
  2658  010FF4  0E6D               	movlw	low terminal_task@command
  2659  010FF6  0100               	movlb	0	; () banked
  2660  010FF8  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2661  010FFA  0E01               	movlw	high terminal_task@command
  2662  010FFC  0100               	movlb	0	; () banked
  2663  010FFE  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2664  011000  EC1E  F08E         	call	_ringbuf_num	;wreg free
  2665  011004  0105               	movlb	5	; () banked
  2666  011006  5166               	movf	terminal_task@i_4539& (0+255),w,b
  2667  011008  0100               	movlb	0	; () banked
  2668  01100A  6FD4               	movwf	??_terminal_task& (0+255),b
  2669  01100C  6BD5               	clrf	(??_terminal_task+1)& (0+255),b
  2670  01100E  0100               	movlb	0	; () banked
  2671  011010  5160               	movf	?_ringbuf_num& (0+255),w,b
  2672  011012  0100               	movlb	0	; () banked
  2673  011014  5DD4               	subwf	??_terminal_task& (0+255),w,b
  2674  011016  0100               	movlb	0	; () banked
  2675  011018  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2676  01101A  0100               	movlb	0	; () banked
  2677  01101C  59D5               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2678  01101E  A0D8               	btfss	status,0,c
  2679  011020  D7DB               	goto	l9590
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2683                           
  2684                           ; BSR set to: 0
  2685  011022  0E6D               	movlw	low terminal_task@command
  2686  011024  0100               	movlb	0	; () banked
  2687  011026  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2688  011028  0E01               	movlw	high terminal_task@command
  2689  01102A  0100               	movlb	0	; () banked
  2690  01102C  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2691  01102E  ECD9  F097         	call	_ringbuf_delete	;wreg free
  2692                           
  2693                           ;My_terminal.c: 50: break;
  2694  011032  0012               	return	
  2695  011034                     l9598:
  2696                           
  2697                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2698  011034  0E1F               	movlw	31
  2699  011036  0105               	movlb	5	; () banked
  2700  011038  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  2701  01103A  0012               	return	
  2702                           
  2703                           ; BSR set to: 5
  2704  01103C  0E7F               	movlw	127
  2705  01103E  0105               	movlb	5	; () banked
  2706  011040  6167               	cpfslt	terminal_task@ascii& (0+255),b
  2707  011042  0012               	return	
  2708                           
  2709                           ; BSR set to: 5
  2710                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2711  011044  0E6D               	movlw	low terminal_task@command
  2712  011046  0100               	movlb	0	; () banked
  2713  011048  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2714  01104A  0E01               	movlw	high terminal_task@command
  2715  01104C  0100               	movlb	0	; () banked
  2716  01104E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2717  011050  C567  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2718  011054  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2719                           
  2720                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2721  011058  C0D0  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2722  01105C  C0D1  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2723  011060  C567  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2724  011064  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2725                           
  2726                           ;My_terminal.c: 57: }
  2727                           
  2728                           ;My_terminal.c: 55: }
  2729                           ;My_terminal.c: 56: break;
  2730  011068  0012               	return	
  2731  01106A                     l9606:
  2732  01106A  0105               	movlb	5	; () banked
  2733  01106C  5167               	movf	terminal_task@ascii& (0+255),w,b
  2734                           
  2735                           ; Switch size 1, requested type "space"
  2736                           ; Number of cases is 4, Range of values is 8 to 127
  2737                           ; switch strategies available:
  2738                           ; Name         Instructions Cycles
  2739                           ; simple_byte           13     7 (average)
  2740                           ;	Chosen strategy is simple_byte
  2741  01106E  0A08               	xorlw	8	; case 8
  2742  011070  B4D8               	btfsc	status,2,c
  2743  011072  D799               	goto	l9584
  2744  011074  0A05               	xorlw	5	; case 13
  2745  011076  B4D8               	btfsc	status,2,c
  2746  011078  D682               	goto	l9546
  2747  01107A  0A2D               	xorlw	45	; case 32
  2748  01107C  B4D8               	btfsc	status,2,c
  2749  01107E  D77E               	goto	l9582
  2750  011080  0A5F               	xorlw	95	; case 127
  2751  011082  B4D8               	btfsc	status,2,c
  2752  011084  D7A5               	goto	l9588
  2753  011086  D7D6               	goto	l9598
  2754  011088                     __end_of_terminal_task:
  2755                           	opt stack 0
  2756                           tblptru	equ	0xFF8
  2757                           tblptrh	equ	0xFF7
  2758                           tblptrl	equ	0xFF6
  2759                           tablat	equ	0xFF5
  2760                           prodh	equ	0xFF4
  2761                           prodl	equ	0xFF3
  2762                           intcon	equ	0xFF2
  2763                           postinc0	equ	0xFEE
  2764                           wreg	equ	0xFE8
  2765                           postdec1	equ	0xFE5
  2766                           fsr1h	equ	0xFE2
  2767                           fsr1l	equ	0xFE1
  2768                           indf2	equ	0xFDF
  2769                           fsr2h	equ	0xFDA
  2770                           fsr2l	equ	0xFD9
  2771                           status	equ	0xFD8
  2772                           
  2773 ;; *************** function _terminal_operation *****************
  2774 ;; Defined at:
  2775 ;;		line 170 in file "PIC18F27J53-killifish_light05.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  tx              2  100[BANK0 ] PTR struct ringbuf
  2778 ;;		 -> uart_tx(8), 
  2779 ;;  op0             2  102[BANK0 ] PTR unsigned char 
  2780 ;;		 -> terminal_task@op0(25), 
  2781 ;;  op1             2  104[BANK0 ] PTR unsigned char 
  2782 ;;		 -> terminal_task@op1(25), 
  2783 ;;  op2             2  106[BANK0 ] PTR unsigned char 
  2784 ;;		 -> terminal_task@op2(25), 
  2785 ;;  op3             2  108[BANK0 ] PTR unsigned char 
  2786 ;;		 -> terminal_task@op3(25), 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  str            30    0[BANK1 ] unsigned char [30]
  2789 ;; Return value:  Size  Location     Type
  2790 ;;		None               void
  2791 ;; Registers used:
  2792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2798 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2799 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;      Totals:         0      12      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;Total ram usage:       46 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:   11
  2805 ;; This function calls:
  2806 ;;		_PWM_set
  2807 ;;		___awdiv
  2808 ;;		___wmul
  2809 ;;		_atoi
  2810 ;;		_ringbuf_put_str
  2811 ;;		_sprintf
  2812 ;;		_strcmp
  2813 ;;		_terminal_time
  2814 ;; This function is called by:
  2815 ;;		_terminal_task
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text2
  2820  010000                     __ptext2:
  2821                           	opt stack 0
  2822  010000                     _terminal_operation:
  2823                           	opt stack 18
  2824                           
  2825                           ;PIC18F27J53-killifish_light05.c: 171: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2826                           
  2827                           ;incstack = 0
  2828  010000  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  2829  010004  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2830  010008  0EAE               	movlw	low STR_41
  2831  01000A  0100               	movlb	0	; () banked
  2832  01000C  6F62               	movwf	strcmp@s2& (0+255),b
  2833  01000E  0EFF               	movlw	high STR_41
  2834  010010  0100               	movlb	0	; () banked
  2835  010012  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2836  010014  EC94  F096         	call	_strcmp	;wreg free
  2837  010018  0100               	movlb	0	; () banked
  2838  01001A  5160               	movf	?_strcmp& (0+255),w,b
  2839  01001C  0100               	movlb	0	; () banked
  2840  01001E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2841  010020  B4D8               	btfsc	status,2,c
  2842  010022  D012               	goto	l9288
  2843                           
  2844                           ; BSR set to: 0
  2845  010024  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  2846  010028  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2847  01002C  0EE4               	movlw	low STR_42
  2848  01002E  0100               	movlb	0	; () banked
  2849  010030  6F62               	movwf	strcmp@s2& (0+255),b
  2850  010032  0EFF               	movlw	high STR_42
  2851  010034  0100               	movlb	0	; () banked
  2852  010036  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2853  010038  EC94  F096         	call	_strcmp	;wreg free
  2854  01003C  0100               	movlb	0	; () banked
  2855  01003E  5160               	movf	?_strcmp& (0+255),w,b
  2856  010040  0100               	movlb	0	; () banked
  2857  010042  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2858  010044  A4D8               	btfss	status,2,c
  2859  010046  D00C               	goto	l9290
  2860  010048                     l9288:
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;PIC18F27J53-killifish_light05.c: 172: ringbuf_put_str(tx,
  2864                           ;PIC18F27J53-killifish_light05.c: 173: "\t**************************\n"
  2865                           ;PIC18F27J53-killifish_light05.c: 174: "\t**** Killifish Light  ****\n"
  2866                           ;PIC18F27J53-killifish_light05.c: 175: "\t**** Made by @Ryokeri ****\n"
  2867                           ;PIC18F27J53-killifish_light05.c: 176: "\t**************************\n\n"
  2868                           ;PIC18F27J53-killifish_light05.c: 177: "\tcommand \topeland1\topeland2\n\n"
  2869                           ;PIC18F27J53-killifish_light05.c: 178: "\tprint_time(t)\n"
  2870                           ;PIC18F27J53-killifish_light05.c: 179: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  2871  010048  C0C4  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  2872  01004C  C0C5  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2873  010050  0EE8               	movlw	low STR_43
  2874  010052  0100               	movlb	0	; () banked
  2875  010054  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2876  010056  0EFD               	movlw	high STR_43
  2877  010058  0100               	movlb	0	; () banked
  2878  01005A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2879  01005C  EC03  F096         	call	_ringbuf_put_str	;wreg free
  2880  010060                     l9290:
  2881                           
  2882                           ;PIC18F27J53-killifish_light05.c: 186: }
  2883                           ;PIC18F27J53-killifish_light05.c: 187: terminal_time(tx, op0, op1, op2);
  2884  010060  C0C4  F0BB         	movff	terminal_operation@tx,terminal_time@tx
  2885  010064  C0C5  F0BC         	movff	terminal_operation@tx+1,terminal_time@tx+1
  2886  010068  C0C6  F0BD         	movff	terminal_operation@op0,terminal_time@op0
  2887  01006C  C0C7  F0BE         	movff	terminal_operation@op0+1,terminal_time@op0+1
  2888  010070  C0C8  F0BF         	movff	terminal_operation@op1,terminal_time@op1
  2889  010074  C0C9  F0C0         	movff	terminal_operation@op1+1,terminal_time@op1+1
  2890  010078  C0CA  F0C1         	movff	terminal_operation@op2,terminal_time@op2
  2891  01007C  C0CB  F0C2         	movff	terminal_operation@op2+1,terminal_time@op2+1
  2892  010080  ECB9  F084         	call	_terminal_time	;wreg free
  2893                           
  2894                           ;PIC18F27J53-killifish_light05.c: 188: if (!strcmp(op0, "RESET();")) {
  2895  010084  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  2896  010088  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2897  01008C  0E6E               	movlw	low STR_44
  2898  01008E  0100               	movlb	0	; () banked
  2899  010090  6F62               	movwf	strcmp@s2& (0+255),b
  2900  010092  0EFF               	movlw	high STR_44
  2901  010094  0100               	movlb	0	; () banked
  2902  010096  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2903  010098  EC94  F096         	call	_strcmp	;wreg free
  2904  01009C  0100               	movlb	0	; () banked
  2905  01009E  5160               	movf	?_strcmp& (0+255),w,b
  2906  0100A0  0100               	movlb	0	; () banked
  2907  0100A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2908  0100A4  B4D8               	btfsc	status,2,c
  2909                           
  2910                           ; BSR set to: 0
  2911  0100A6  00FF               	reset		;# 
  2912                           
  2913                           ;PIC18F27J53-killifish_light05.c: 190: }
  2914                           ;PIC18F27J53-killifish_light05.c: 191: if (!strcmp(op0, "en")) {
  2915  0100A8  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  2916  0100AC  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2917  0100B0  0EDE               	movlw	low STR_45
  2918  0100B2  0100               	movlb	0	; () banked
  2919  0100B4  6F62               	movwf	strcmp@s2& (0+255),b
  2920  0100B6  0EFF               	movlw	high STR_45
  2921  0100B8  0100               	movlb	0	; () banked
  2922  0100BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2923  0100BC  EC94  F096         	call	_strcmp	;wreg free
  2924  0100C0  0100               	movlb	0	; () banked
  2925  0100C2  5160               	movf	?_strcmp& (0+255),w,b
  2926  0100C4  0100               	movlb	0	; () banked
  2927  0100C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2928  0100C8  A4D8               	btfss	status,2,c
  2929  0100CA  D036               	goto	l9302
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;PIC18F27J53-killifish_light05.c: 192: char str[30];
  2933                           ;PIC18F27J53-killifish_light05.c: 193: sprintf(str, "WREN=%d,EN=%d\n", RTCCFGbits.RTCWRE
      +                          N, RTCCFGbits.RTCEN);
  2934  0100CC  0E8A               	movlw	low terminal_operation@str
  2935  0100CE  0100               	movlb	0	; () banked
  2936  0100D0  6F71               	movwf	sprintf@sp& (0+255),b
  2937  0100D2  0E01               	movlw	high terminal_operation@str
  2938  0100D4  0100               	movlb	0	; () banked
  2939  0100D6  6F72               	movwf	(sprintf@sp+1)& (0+255),b
  2940  0100D8  0E48               	movlw	low STR_46
  2941  0100DA  0100               	movlb	0	; () banked
  2942  0100DC  6F73               	movwf	sprintf@f& (0+255),b
  2943  0100DE  0EFF               	movlw	high STR_46
  2944  0100E0  0100               	movlb	0	; () banked
  2945  0100E2  6F74               	movwf	(sprintf@f+1)& (0+255),b
  2946  0100E4  010F               	movlb	15	; () banked
  2947  0100E6  AB3F               	btfss	63,5,b	;volatile
  2948  0100E8  D004               	goto	u9510
  2949  0100EA  0100               	movlb	0	; () banked
  2950  0100EC  6BCE               	clrf	??_terminal_operation& (0+255),b
  2951  0100EE  2BCE               	incf	??_terminal_operation& (0+255),f,b
  2952  0100F0  D002               	goto	u9518
  2953  0100F2                     u9510:
  2954  0100F2  0100               	movlb	0	; () banked
  2955  0100F4  6BCE               	clrf	??_terminal_operation& (0+255),b
  2956  0100F6                     u9518:
  2957  0100F6  0100               	movlb	0	; () banked
  2958  0100F8  51CE               	movf	??_terminal_operation& (0+255),w,b
  2959  0100FA  0100               	movlb	0	; () banked
  2960  0100FC  6F75               	movwf	(?_sprintf+4)& (0+255),b
  2961  0100FE  6B76               	clrf	(?_sprintf+5)& (0+255),b
  2962  010100  010F               	movlb	15	; () banked
  2963  010102  AF3F               	btfss	63,7,b	;volatile
  2964  010104  D004               	goto	u9520
  2965  010106  0100               	movlb	0	; () banked
  2966  010108  6BCF               	clrf	(??_terminal_operation+1)& (0+255),b
  2967  01010A  2BCF               	incf	(??_terminal_operation+1)& (0+255),f,b
  2968  01010C  D002               	goto	u9528
  2969  01010E                     u9520:
  2970  01010E  0100               	movlb	0	; () banked
  2971  010110  6BCF               	clrf	(??_terminal_operation+1)& (0+255),b
  2972  010112                     u9528:
  2973  010112  0100               	movlb	0	; () banked
  2974  010114  51CF               	movf	(??_terminal_operation+1)& (0+255),w,b
  2975  010116  0100               	movlb	0	; () banked
  2976  010118  6F77               	movwf	(?_sprintf+6)& (0+255),b
  2977  01011A  6B78               	clrf	(?_sprintf+7)& (0+255),b
  2978  01011C  EC8C  F082         	call	_sprintf	;wreg free
  2979                           
  2980                           ;PIC18F27J53-killifish_light05.c: 194: ringbuf_put_str(tx, str);
  2981  010120  C0C4  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  2982  010124  C0C5  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2983  010128  0E8A               	movlw	low terminal_operation@str
  2984  01012A  0100               	movlb	0	; () banked
  2985  01012C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2986  01012E  0E01               	movlw	high terminal_operation@str
  2987  010130  0100               	movlb	0	; () banked
  2988  010132  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2989  010134  EC03  F096         	call	_ringbuf_put_str	;wreg free
  2990  010138                     l9302:
  2991                           
  2992                           ;PIC18F27J53-killifish_light05.c: 195: }
  2993                           ;PIC18F27J53-killifish_light05.c: 196: if (!strcmp(op0, "set")) {
  2994  010138  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  2995  01013C  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2996  010140  0ED2               	movlw	low STR_47
  2997  010142  0100               	movlb	0	; () banked
  2998  010144  6F62               	movwf	strcmp@s2& (0+255),b
  2999  010146  0EFF               	movlw	high STR_47
  3000  010148  0100               	movlb	0	; () banked
  3001  01014A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3002  01014C  EC94  F096         	call	_strcmp	;wreg free
  3003  010150  0100               	movlb	0	; () banked
  3004  010152  5160               	movf	?_strcmp& (0+255),w,b
  3005  010154  0100               	movlb	0	; () banked
  3006  010156  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3007  010158  A4D8               	btfss	status,2,c
  3008  01015A  D03C               	goto	l9314
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;PIC18F27J53-killifish_light05.c: 197: if (!strcmp(op1, "sync")) {
  3012  01015C  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3013  010160  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3014  010164  0EA9               	movlw	low STR_48
  3015  010166  0100               	movlb	0	; () banked
  3016  010168  6F62               	movwf	strcmp@s2& (0+255),b
  3017  01016A  0EFF               	movlw	high STR_48
  3018  01016C  0100               	movlb	0	; () banked
  3019  01016E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3020  010170  EC94  F096         	call	_strcmp	;wreg free
  3021  010174  0100               	movlb	0	; () banked
  3022  010176  5160               	movf	?_strcmp& (0+255),w,b
  3023  010178  0100               	movlb	0	; () banked
  3024  01017A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3025  01017C  A4D8               	btfss	status,2,c
  3026  01017E  D003               	goto	l9308
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;PIC18F27J53-killifish_light05.c: 198: light_mode = TIME_SYNC_mode;
  3030  010180  0E00               	movlw	0
  3031  010182  0100               	movlb	0	; () banked
  3032  010184  6FE7               	movwf	_light_mode& (0+255),b
  3033  010186                     l9308:
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;PIC18F27J53-killifish_light05.c: 199: }
  3037                           ;PIC18F27J53-killifish_light05.c: 200: if (!strcmp(op1, "adc") || !strcmp(op1, "ADC")) {
  3038  010186  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3039  01018A  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3040  01018E  0ECA               	movlw	low STR_49
  3041  010190  0100               	movlb	0	; () banked
  3042  010192  6F62               	movwf	strcmp@s2& (0+255),b
  3043  010194  0EFF               	movlw	high STR_49
  3044  010196  0100               	movlb	0	; () banked
  3045  010198  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3046  01019A  EC94  F096         	call	_strcmp	;wreg free
  3047  01019E  0100               	movlb	0	; () banked
  3048  0101A0  5160               	movf	?_strcmp& (0+255),w,b
  3049  0101A2  0100               	movlb	0	; () banked
  3050  0101A4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3051  0101A6  B4D8               	btfsc	status,2,c
  3052  0101A8  D012               	goto	l9312
  3053                           
  3054                           ; BSR set to: 0
  3055  0101AA  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3056  0101AE  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3057  0101B2  0EC2               	movlw	low STR_50
  3058  0101B4  0100               	movlb	0	; () banked
  3059  0101B6  6F62               	movwf	strcmp@s2& (0+255),b
  3060  0101B8  0EFF               	movlw	high STR_50
  3061  0101BA  0100               	movlb	0	; () banked
  3062  0101BC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3063  0101BE  EC94  F096         	call	_strcmp	;wreg free
  3064  0101C2  0100               	movlb	0	; () banked
  3065  0101C4  5160               	movf	?_strcmp& (0+255),w,b
  3066  0101C6  0100               	movlb	0	; () banked
  3067  0101C8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3068  0101CA  A4D8               	btfss	status,2,c
  3069  0101CC  D003               	goto	l9314
  3070  0101CE                     l9312:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;PIC18F27J53-killifish_light05.c: 201: light_mode = ADC_mode;
  3074  0101CE  0E01               	movlw	1
  3075  0101D0  0100               	movlb	0	; () banked
  3076  0101D2  6FE7               	movwf	_light_mode& (0+255),b
  3077  0101D4                     l9314:
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;PIC18F27J53-killifish_light05.c: 202: }
  3081                           ;PIC18F27J53-killifish_light05.c: 203: }
  3082                           ;PIC18F27J53-killifish_light05.c: 204: if (!strcmp(op0, "pwm") || !strcmp(op0, "PWM")) {
  3083  0101D4  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  3084  0101D8  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3085  0101DC  0ECE               	movlw	low STR_51
  3086  0101DE  0100               	movlb	0	; () banked
  3087  0101E0  6F62               	movwf	strcmp@s2& (0+255),b
  3088  0101E2  0EFF               	movlw	high STR_51
  3089  0101E4  0100               	movlb	0	; () banked
  3090  0101E6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3091  0101E8  EC94  F096         	call	_strcmp	;wreg free
  3092  0101EC  0100               	movlb	0	; () banked
  3093  0101EE  5160               	movf	?_strcmp& (0+255),w,b
  3094  0101F0  0100               	movlb	0	; () banked
  3095  0101F2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3096  0101F4  B4D8               	btfsc	status,2,c
  3097  0101F6  D012               	goto	l9318
  3098                           
  3099                           ; BSR set to: 0
  3100  0101F8  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  3101  0101FC  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3102  010200  0EC6               	movlw	low STR_52
  3103  010202  0100               	movlb	0	; () banked
  3104  010204  6F62               	movwf	strcmp@s2& (0+255),b
  3105  010206  0EFF               	movlw	high STR_52
  3106  010208  0100               	movlb	0	; () banked
  3107  01020A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3108  01020C  EC94  F096         	call	_strcmp	;wreg free
  3109  010210  0100               	movlb	0	; () banked
  3110  010212  5160               	movf	?_strcmp& (0+255),w,b
  3111  010214  0100               	movlb	0	; () banked
  3112  010216  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3113  010218  A4D8               	btfss	status,2,c
  3114  01021A  0012               	return	
  3115  01021C                     l9318:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;PIC18F27J53-killifish_light05.c: 205: if (!strcmp(op1, "r") || !strcmp(op1, "R")) {
  3119  01021C  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3120  010220  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3121  010224  0EA1               	movlw	low (STR_61+4)
  3122  010226  0100               	movlb	0	; () banked
  3123  010228  6F62               	movwf	strcmp@s2& (0+255),b
  3124  01022A  0EFF               	movlw	high (STR_61+4)
  3125  01022C  0100               	movlb	0	; () banked
  3126  01022E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3127  010230  EC94  F096         	call	_strcmp	;wreg free
  3128  010234  0100               	movlb	0	; () banked
  3129  010236  5160               	movf	?_strcmp& (0+255),w,b
  3130  010238  0100               	movlb	0	; () banked
  3131  01023A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3132  01023C  B4D8               	btfsc	status,2,c
  3133  01023E  D012               	goto	l9322
  3134                           
  3135                           ; BSR set to: 0
  3136  010240  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3137  010244  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3138  010248  0EEA               	movlw	low STR_54
  3139  01024A  0100               	movlb	0	; () banked
  3140  01024C  6F62               	movwf	strcmp@s2& (0+255),b
  3141  01024E  0EFF               	movlw	high STR_54
  3142  010250  0100               	movlb	0	; () banked
  3143  010252  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3144  010254  EC94  F096         	call	_strcmp	;wreg free
  3145  010258  0100               	movlb	0	; () banked
  3146  01025A  5160               	movf	?_strcmp& (0+255),w,b
  3147  01025C  0100               	movlb	0	; () banked
  3148  01025E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3149  010260  A4D8               	btfss	status,2,c
  3150  010262  D02E               	goto	l9330
  3151  010264                     l9322:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;PIC18F27J53-killifish_light05.c: 206: light_mode = COMMAND_mode;
  3155  010264  0E02               	movlw	2
  3156  010266  0100               	movlb	0	; () banked
  3157  010268  6FE7               	movwf	_light_mode& (0+255),b
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;PIC18F27J53-killifish_light05.c: 207: PWM_set(0, atoi(op2) * 250 / 100);
  3161  01026A  C0CA  F066         	movff	terminal_operation@op2,atoi@s
  3162  01026E  C0CB  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3163  010272  ECA5  F08D         	call	_atoi	;wreg free
  3164  010276  C066  F1A8         	movff	?_atoi,_terminal_operation$6895
  3165  01027A  C067  F1A9         	movff	?_atoi+1,_terminal_operation$6895+1
  3166                           
  3167                           ;PIC18F27J53-killifish_light05.c: 207: PWM_set(0, atoi(op2) * 250 / 100);
  3168  01027E  C1A8  F060         	movff	_terminal_operation$6895,___wmul@multiplier
  3169  010282  C1A9  F061         	movff	_terminal_operation$6895+1,___wmul@multiplier+1
  3170  010286  0E00               	movlw	0
  3171  010288  0100               	movlb	0	; () banked
  3172  01028A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3173  01028C  0EFA               	movlw	250
  3174  01028E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3175  010290  EC6F  F097         	call	___wmul	;wreg free
  3176  010294  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3177  010298  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3178  01029C  0E00               	movlw	0
  3179  01029E  0100               	movlb	0	; () banked
  3180  0102A0  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3181  0102A2  0E64               	movlw	100
  3182  0102A4  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3183  0102A6  ECA4  F090         	call	___awdiv	;wreg free
  3184  0102AA  C06D  F1AA         	movff	?___awdiv,_terminal_operation$6896
  3185  0102AE  C06E  F1AB         	movff	?___awdiv+1,_terminal_operation$6896+1
  3186                           
  3187                           ;PIC18F27J53-killifish_light05.c: 207: PWM_set(0, atoi(op2) * 250 / 100);
  3188  0102B2  C1AA  F075         	movff	_terminal_operation$6896,PWM_set@value
  3189  0102B6  C1AB  F076         	movff	_terminal_operation$6896+1,PWM_set@value+1
  3190  0102BA  0E00               	movlw	0
  3191  0102BC  ECD1  F08C         	call	_PWM_set
  3192  0102C0                     l9330:
  3193                           
  3194                           ;PIC18F27J53-killifish_light05.c: 208: }
  3195                           ;PIC18F27J53-killifish_light05.c: 209: if (!strcmp(op1, "g") || !strcmp(op1, "G")) {
  3196  0102C0  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3197  0102C4  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3198  0102C8  0EF0               	movlw	low STR_55
  3199  0102CA  0100               	movlb	0	; () banked
  3200  0102CC  6F62               	movwf	strcmp@s2& (0+255),b
  3201  0102CE  0EFF               	movlw	high STR_55
  3202  0102D0  0100               	movlb	0	; () banked
  3203  0102D2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3204  0102D4  EC94  F096         	call	_strcmp	;wreg free
  3205  0102D8  0100               	movlb	0	; () banked
  3206  0102DA  5160               	movf	?_strcmp& (0+255),w,b
  3207  0102DC  0100               	movlb	0	; () banked
  3208  0102DE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3209  0102E0  B4D8               	btfsc	status,2,c
  3210  0102E2  D012               	goto	l9334
  3211                           
  3212                           ; BSR set to: 0
  3213  0102E4  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3214  0102E8  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3215  0102EC  0EE8               	movlw	low STR_56
  3216  0102EE  0100               	movlb	0	; () banked
  3217  0102F0  6F62               	movwf	strcmp@s2& (0+255),b
  3218  0102F2  0EFF               	movlw	high STR_56
  3219  0102F4  0100               	movlb	0	; () banked
  3220  0102F6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3221  0102F8  EC94  F096         	call	_strcmp	;wreg free
  3222  0102FC  0100               	movlb	0	; () banked
  3223  0102FE  5160               	movf	?_strcmp& (0+255),w,b
  3224  010300  0100               	movlb	0	; () banked
  3225  010302  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3226  010304  A4D8               	btfss	status,2,c
  3227  010306  D02E               	goto	l9342
  3228  010308                     l9334:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;PIC18F27J53-killifish_light05.c: 210: light_mode = COMMAND_mode;
  3232  010308  0E02               	movlw	2
  3233  01030A  0100               	movlb	0	; () banked
  3234  01030C  6FE7               	movwf	_light_mode& (0+255),b
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;PIC18F27J53-killifish_light05.c: 211: PWM_set(1, atoi(op2) * 250 / 100);
  3238  01030E  C0CA  F066         	movff	terminal_operation@op2,atoi@s
  3239  010312  C0CB  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3240  010316  ECA5  F08D         	call	_atoi	;wreg free
  3241  01031A  C066  F1A8         	movff	?_atoi,_terminal_operation$6895
  3242  01031E  C067  F1A9         	movff	?_atoi+1,_terminal_operation$6895+1
  3243                           
  3244                           ;PIC18F27J53-killifish_light05.c: 211: PWM_set(1, atoi(op2) * 250 / 100);
  3245  010322  C1A8  F060         	movff	_terminal_operation$6895,___wmul@multiplier
  3246  010326  C1A9  F061         	movff	_terminal_operation$6895+1,___wmul@multiplier+1
  3247  01032A  0E00               	movlw	0
  3248  01032C  0100               	movlb	0	; () banked
  3249  01032E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3250  010330  0EFA               	movlw	250
  3251  010332  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3252  010334  EC6F  F097         	call	___wmul	;wreg free
  3253  010338  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3254  01033C  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3255  010340  0E00               	movlw	0
  3256  010342  0100               	movlb	0	; () banked
  3257  010344  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3258  010346  0E64               	movlw	100
  3259  010348  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3260  01034A  ECA4  F090         	call	___awdiv	;wreg free
  3261  01034E  C06D  F1AA         	movff	?___awdiv,_terminal_operation$6896
  3262  010352  C06E  F1AB         	movff	?___awdiv+1,_terminal_operation$6896+1
  3263                           
  3264                           ;PIC18F27J53-killifish_light05.c: 211: PWM_set(1, atoi(op2) * 250 / 100);
  3265  010356  C1AA  F075         	movff	_terminal_operation$6896,PWM_set@value
  3266  01035A  C1AB  F076         	movff	_terminal_operation$6896+1,PWM_set@value+1
  3267  01035E  0E01               	movlw	1
  3268  010360  ECD1  F08C         	call	_PWM_set
  3269  010364                     l9342:
  3270                           
  3271                           ;PIC18F27J53-killifish_light05.c: 212: }
  3272                           ;PIC18F27J53-killifish_light05.c: 213: if (!strcmp(op1, "b") || !strcmp(op1, "B")) {
  3273  010364  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3274  010368  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3275  01036C  0EEE               	movlw	low STR_57
  3276  01036E  0100               	movlb	0	; () banked
  3277  010370  6F62               	movwf	strcmp@s2& (0+255),b
  3278  010372  0EFF               	movlw	high STR_57
  3279  010374  0100               	movlb	0	; () banked
  3280  010376  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3281  010378  EC94  F096         	call	_strcmp	;wreg free
  3282  01037C  0100               	movlb	0	; () banked
  3283  01037E  5160               	movf	?_strcmp& (0+255),w,b
  3284  010380  0100               	movlb	0	; () banked
  3285  010382  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3286  010384  B4D8               	btfsc	status,2,c
  3287  010386  D012               	goto	l9346
  3288                           
  3289                           ; BSR set to: 0
  3290  010388  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3291  01038C  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3292  010390  0EE6               	movlw	low STR_58
  3293  010392  0100               	movlb	0	; () banked
  3294  010394  6F62               	movwf	strcmp@s2& (0+255),b
  3295  010396  0EFF               	movlw	high STR_58
  3296  010398  0100               	movlb	0	; () banked
  3297  01039A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3298  01039C  EC94  F096         	call	_strcmp	;wreg free
  3299  0103A0  0100               	movlb	0	; () banked
  3300  0103A2  5160               	movf	?_strcmp& (0+255),w,b
  3301  0103A4  0100               	movlb	0	; () banked
  3302  0103A6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3303  0103A8  A4D8               	btfss	status,2,c
  3304  0103AA  D02E               	goto	l9354
  3305  0103AC                     l9346:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;PIC18F27J53-killifish_light05.c: 214: light_mode = COMMAND_mode;
  3309  0103AC  0E02               	movlw	2
  3310  0103AE  0100               	movlb	0	; () banked
  3311  0103B0  6FE7               	movwf	_light_mode& (0+255),b
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;PIC18F27J53-killifish_light05.c: 215: PWM_set(2, atoi(op2) * 250 / 100);
  3315  0103B2  C0CA  F066         	movff	terminal_operation@op2,atoi@s
  3316  0103B6  C0CB  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3317  0103BA  ECA5  F08D         	call	_atoi	;wreg free
  3318  0103BE  C066  F1A8         	movff	?_atoi,_terminal_operation$6895
  3319  0103C2  C067  F1A9         	movff	?_atoi+1,_terminal_operation$6895+1
  3320                           
  3321                           ;PIC18F27J53-killifish_light05.c: 215: PWM_set(2, atoi(op2) * 250 / 100);
  3322  0103C6  C1A8  F060         	movff	_terminal_operation$6895,___wmul@multiplier
  3323  0103CA  C1A9  F061         	movff	_terminal_operation$6895+1,___wmul@multiplier+1
  3324  0103CE  0E00               	movlw	0
  3325  0103D0  0100               	movlb	0	; () banked
  3326  0103D2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3327  0103D4  0EFA               	movlw	250
  3328  0103D6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3329  0103D8  EC6F  F097         	call	___wmul	;wreg free
  3330  0103DC  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3331  0103E0  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3332  0103E4  0E00               	movlw	0
  3333  0103E6  0100               	movlb	0	; () banked
  3334  0103E8  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3335  0103EA  0E64               	movlw	100
  3336  0103EC  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3337  0103EE  ECA4  F090         	call	___awdiv	;wreg free
  3338  0103F2  C06D  F1AA         	movff	?___awdiv,_terminal_operation$6896
  3339  0103F6  C06E  F1AB         	movff	?___awdiv+1,_terminal_operation$6896+1
  3340                           
  3341                           ;PIC18F27J53-killifish_light05.c: 215: PWM_set(2, atoi(op2) * 250 / 100);
  3342  0103FA  C1AA  F075         	movff	_terminal_operation$6896,PWM_set@value
  3343  0103FE  C1AB  F076         	movff	_terminal_operation$6896+1,PWM_set@value+1
  3344  010402  0E02               	movlw	2
  3345  010404  ECD1  F08C         	call	_PWM_set
  3346  010408                     l9354:
  3347                           
  3348                           ;PIC18F27J53-killifish_light05.c: 216: }
  3349                           ;PIC18F27J53-killifish_light05.c: 217: if (!strcmp(op1, "w") || !strcmp(op1, "W")) {
  3350  010408  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3351  01040C  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3352  010410  0EF2               	movlw	low STR_59
  3353  010412  0100               	movlb	0	; () banked
  3354  010414  6F62               	movwf	strcmp@s2& (0+255),b
  3355  010416  0EFF               	movlw	high STR_59
  3356  010418  0100               	movlb	0	; () banked
  3357  01041A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3358  01041C  EC94  F096         	call	_strcmp	;wreg free
  3359  010420  0100               	movlb	0	; () banked
  3360  010422  5160               	movf	?_strcmp& (0+255),w,b
  3361  010424  0100               	movlb	0	; () banked
  3362  010426  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3363  010428  B4D8               	btfsc	status,2,c
  3364  01042A  D012               	goto	l9358
  3365                           
  3366                           ; BSR set to: 0
  3367  01042C  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3368  010430  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3369  010434  0EEC               	movlw	low STR_60
  3370  010436  0100               	movlb	0	; () banked
  3371  010438  6F62               	movwf	strcmp@s2& (0+255),b
  3372  01043A  0EFF               	movlw	high STR_60
  3373  01043C  0100               	movlb	0	; () banked
  3374  01043E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3375  010440  EC94  F096         	call	_strcmp	;wreg free
  3376  010444  0100               	movlb	0	; () banked
  3377  010446  5160               	movf	?_strcmp& (0+255),w,b
  3378  010448  0100               	movlb	0	; () banked
  3379  01044A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3380  01044C  A4D8               	btfss	status,2,c
  3381  01044E  D02E               	goto	l9366
  3382  010450                     l9358:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;PIC18F27J53-killifish_light05.c: 218: light_mode = COMMAND_mode;
  3386  010450  0E02               	movlw	2
  3387  010452  0100               	movlb	0	; () banked
  3388  010454  6FE7               	movwf	_light_mode& (0+255),b
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;PIC18F27J53-killifish_light05.c: 219: PWM_set(3, atoi(op2) * 250 / 100);
  3392  010456  C0CA  F066         	movff	terminal_operation@op2,atoi@s
  3393  01045A  C0CB  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3394  01045E  ECA5  F08D         	call	_atoi	;wreg free
  3395  010462  C066  F1A8         	movff	?_atoi,_terminal_operation$6895
  3396  010466  C067  F1A9         	movff	?_atoi+1,_terminal_operation$6895+1
  3397                           
  3398                           ;PIC18F27J53-killifish_light05.c: 219: PWM_set(3, atoi(op2) * 250 / 100);
  3399  01046A  C1A8  F060         	movff	_terminal_operation$6895,___wmul@multiplier
  3400  01046E  C1A9  F061         	movff	_terminal_operation$6895+1,___wmul@multiplier+1
  3401  010472  0E00               	movlw	0
  3402  010474  0100               	movlb	0	; () banked
  3403  010476  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3404  010478  0EFA               	movlw	250
  3405  01047A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3406  01047C  EC6F  F097         	call	___wmul	;wreg free
  3407  010480  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3408  010484  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3409  010488  0E00               	movlw	0
  3410  01048A  0100               	movlb	0	; () banked
  3411  01048C  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3412  01048E  0E64               	movlw	100
  3413  010490  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3414  010492  ECA4  F090         	call	___awdiv	;wreg free
  3415  010496  C06D  F1AA         	movff	?___awdiv,_terminal_operation$6896
  3416  01049A  C06E  F1AB         	movff	?___awdiv+1,_terminal_operation$6896+1
  3417                           
  3418                           ;PIC18F27J53-killifish_light05.c: 219: PWM_set(3, atoi(op2) * 250 / 100);
  3419  01049E  C1AA  F075         	movff	_terminal_operation$6896,PWM_set@value
  3420  0104A2  C1AB  F076         	movff	_terminal_operation$6896+1,PWM_set@value+1
  3421  0104A6  0E03               	movlw	3
  3422  0104A8  ECD1  F08C         	call	_PWM_set
  3423  0104AC                     l9366:
  3424                           
  3425                           ;PIC18F27J53-killifish_light05.c: 220: }
  3426                           ;PIC18F27J53-killifish_light05.c: 221: if (!strcmp(op1, "clear")) {
  3427  0104AC  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3428  0104B0  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3429  0104B4  0E9D               	movlw	low STR_61
  3430  0104B6  0100               	movlb	0	; () banked
  3431  0104B8  6F62               	movwf	strcmp@s2& (0+255),b
  3432  0104BA  0EFF               	movlw	high STR_61
  3433  0104BC  0100               	movlb	0	; () banked
  3434  0104BE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3435  0104C0  EC94  F096         	call	_strcmp	;wreg free
  3436  0104C4  0100               	movlb	0	; () banked
  3437  0104C6  5160               	movf	?_strcmp& (0+255),w,b
  3438  0104C8  0100               	movlb	0	; () banked
  3439  0104CA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3440  0104CC  A4D8               	btfss	status,2,c
  3441  0104CE  0012               	return	
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;PIC18F27J53-killifish_light05.c: 222: light_mode = COMMAND_mode;
  3445  0104D0  0E02               	movlw	2
  3446  0104D2  0100               	movlb	0	; () banked
  3447  0104D4  6FE7               	movwf	_light_mode& (0+255),b
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;PIC18F27J53-killifish_light05.c: 223: PWM_set(0, 0);
  3451  0104D6  0E00               	movlw	0
  3452  0104D8  0100               	movlb	0	; () banked
  3453  0104DA  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3454  0104DC  0E00               	movlw	0
  3455  0104DE  6F75               	movwf	PWM_set@value& (0+255),b
  3456  0104E0  0E00               	movlw	0
  3457  0104E2  ECD1  F08C         	call	_PWM_set
  3458                           
  3459                           ;PIC18F27J53-killifish_light05.c: 224: PWM_set(1, 0);
  3460  0104E6  0E00               	movlw	0
  3461  0104E8  0100               	movlb	0	; () banked
  3462  0104EA  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3463  0104EC  0E00               	movlw	0
  3464  0104EE  6F75               	movwf	PWM_set@value& (0+255),b
  3465  0104F0  0E01               	movlw	1
  3466  0104F2  ECD1  F08C         	call	_PWM_set
  3467                           
  3468                           ;PIC18F27J53-killifish_light05.c: 225: PWM_set(2, 0);
  3469  0104F6  0E00               	movlw	0
  3470  0104F8  0100               	movlb	0	; () banked
  3471  0104FA  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3472  0104FC  0E00               	movlw	0
  3473  0104FE  6F75               	movwf	PWM_set@value& (0+255),b
  3474  010500  0E02               	movlw	2
  3475  010502  ECD1  F08C         	call	_PWM_set
  3476                           
  3477                           ;PIC18F27J53-killifish_light05.c: 226: PWM_set(3, 0);
  3478  010506  0E00               	movlw	0
  3479  010508  0100               	movlb	0	; () banked
  3480  01050A  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3481  01050C  0E00               	movlw	0
  3482  01050E  6F75               	movwf	PWM_set@value& (0+255),b
  3483  010510  0E03               	movlw	3
  3484  010512  ECD1  F08C         	call	_PWM_set
  3485  010516  0012               	return	
  3486  010518                     __end_of_terminal_operation:
  3487                           	opt stack 0
  3488                           tblptru	equ	0xFF8
  3489                           tblptrh	equ	0xFF7
  3490                           tblptrl	equ	0xFF6
  3491                           tablat	equ	0xFF5
  3492                           prodh	equ	0xFF4
  3493                           prodl	equ	0xFF3
  3494                           intcon	equ	0xFF2
  3495                           postinc0	equ	0xFEE
  3496                           wreg	equ	0xFE8
  3497                           postdec1	equ	0xFE5
  3498                           fsr1h	equ	0xFE2
  3499                           fsr1l	equ	0xFE1
  3500                           indf2	equ	0xFDF
  3501                           fsr2h	equ	0xFDA
  3502                           fsr2l	equ	0xFD9
  3503                           status	equ	0xFD8
  3504                           
  3505 ;; *************** function _terminal_time *****************
  3506 ;; Defined at:
  3507 ;;		line 93 in file "../My_library/My_terminal.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  tx              2   91[BANK0 ] PTR struct ringbuf
  3510 ;;		 -> uart_tx(8), 
  3511 ;;  op0             2   93[BANK0 ] PTR unsigned char 
  3512 ;;		 -> terminal_task@op0(25), 
  3513 ;;  op1             2   95[BANK0 ] PTR unsigned char 
  3514 ;;		 -> terminal_task@op1(25), 
  3515 ;;  op2             2   97[BANK0 ] PTR unsigned char 
  3516 ;;		 -> terminal_task@op2(25), 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;		None               void
  3521 ;; Registers used:
  3522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3528 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3531 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3532 ;;Total ram usage:        9 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:   10
  3535 ;; This function calls:
  3536 ;;		_atoi
  3537 ;;		_month_length
  3538 ;;		_print_time
  3539 ;;		_strcmp
  3540 ;;		_terminal_at_hand
  3541 ;; This function is called by:
  3542 ;;		_terminal_operation
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text3
  3547  010972                     __ptext3:
  3548                           	opt stack 0
  3549  010972                     _terminal_time:
  3550                           	opt stack 18
  3551                           
  3552                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3553                           
  3554                           ;incstack = 0
  3555  010972  C0BD  F060         	movff	terminal_time@op0,strcmp@s1
  3556  010976  C0BE  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3557  01097A  0E63               	movlw	low STR_25
  3558  01097C  0100               	movlb	0	; () banked
  3559  01097E  6F62               	movwf	strcmp@s2& (0+255),b
  3560  010980  0EFF               	movlw	high STR_25
  3561  010982  0100               	movlb	0	; () banked
  3562  010984  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3563  010986  EC94  F096         	call	_strcmp	;wreg free
  3564  01098A  0100               	movlb	0	; () banked
  3565  01098C  5160               	movf	?_strcmp& (0+255),w,b
  3566  01098E  0100               	movlb	0	; () banked
  3567  010990  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3568  010992  B4D8               	btfsc	status,2,c
  3569  010994  D012               	goto	l9052
  3570                           
  3571                           ; BSR set to: 0
  3572  010996  C0BD  F060         	movff	terminal_time@op0,strcmp@s1
  3573  01099A  C0BE  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3574  01099E  0EE2               	movlw	low (STR_27+1)
  3575  0109A0  0100               	movlb	0	; () banked
  3576  0109A2  6F62               	movwf	strcmp@s2& (0+255),b
  3577  0109A4  0EFF               	movlw	high (STR_27+1)
  3578  0109A6  0100               	movlb	0	; () banked
  3579  0109A8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3580  0109AA  EC94  F096         	call	_strcmp	;wreg free
  3581  0109AE  0100               	movlb	0	; () banked
  3582  0109B0  5160               	movf	?_strcmp& (0+255),w,b
  3583  0109B2  0100               	movlb	0	; () banked
  3584  0109B4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3585  0109B6  A4D8               	btfss	status,2,c
  3586  0109B8  D006               	goto	l9054
  3587  0109BA                     l9052:
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;My_terminal.c: 95: print_time(tx);
  3591  0109BA  C0BB  F094         	movff	terminal_time@tx,print_time@tx
  3592  0109BE  C0BC  F095         	movff	terminal_time@tx+1,print_time@tx+1
  3593  0109C2  EC57  F094         	call	_print_time	;wreg free
  3594  0109C6                     l9054:
  3595                           
  3596                           ;My_terminal.c: 96: }
  3597                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3598  0109C6  C0BD  F060         	movff	terminal_time@op0,strcmp@s1
  3599  0109CA  C0BE  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3600  0109CE  0EE1               	movlw	low STR_27
  3601  0109D0  0100               	movlb	0	; () banked
  3602  0109D2  6F62               	movwf	strcmp@s2& (0+255),b
  3603  0109D4  0EFF               	movlw	high STR_27
  3604  0109D6  0100               	movlb	0	; () banked
  3605  0109D8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3606  0109DA  EC94  F096         	call	_strcmp	;wreg free
  3607  0109DE  0100               	movlb	0	; () banked
  3608  0109E0  5160               	movf	?_strcmp& (0+255),w,b
  3609  0109E2  0100               	movlb	0	; () banked
  3610  0109E4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3611  0109E6  B4D8               	btfsc	status,2,c
  3612  0109E8  D012               	goto	l9058
  3613                           
  3614                           ; BSR set to: 0
  3615  0109EA  C0BD  F060         	movff	terminal_time@op0,strcmp@s1
  3616  0109EE  C0BE  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3617  0109F2  0E57               	movlw	low STR_28
  3618  0109F4  0100               	movlb	0	; () banked
  3619  0109F6  6F62               	movwf	strcmp@s2& (0+255),b
  3620  0109F8  0EFF               	movlw	high STR_28
  3621  0109FA  0100               	movlb	0	; () banked
  3622  0109FC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3623  0109FE  EC94  F096         	call	_strcmp	;wreg free
  3624  010A02  0100               	movlb	0	; () banked
  3625  010A04  5160               	movf	?_strcmp& (0+255),w,b
  3626  010A06  0100               	movlb	0	; () banked
  3627  010A08  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3628  010A0A  A4D8               	btfss	status,2,c
  3629  010A0C  0012               	return	
  3630  010A0E                     l9058:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3634  010A0E  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3635  010A12  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3636  010A16  0EDC               	movlw	low (STR_34+2)
  3637  010A18  0100               	movlb	0	; () banked
  3638  010A1A  6F62               	movwf	strcmp@s2& (0+255),b
  3639  010A1C  0EFF               	movlw	high (STR_34+2)
  3640  010A1E  0100               	movlb	0	; () banked
  3641  010A20  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3642  010A22  EC94  F096         	call	_strcmp	;wreg free
  3643  010A26  0100               	movlb	0	; () banked
  3644  010A28  5160               	movf	?_strcmp& (0+255),w,b
  3645  010A2A  0100               	movlb	0	; () banked
  3646  010A2C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3647  010A2E  B4D8               	btfsc	status,2,c
  3648  010A30  D012               	goto	l9062
  3649                           
  3650                           ; BSR set to: 0
  3651  010A32  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3652  010A36  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3653  010A3A  0EB3               	movlw	low STR_30
  3654  010A3C  0100               	movlb	0	; () banked
  3655  010A3E  6F62               	movwf	strcmp@s2& (0+255),b
  3656  010A40  0EFF               	movlw	high STR_30
  3657  010A42  0100               	movlb	0	; () banked
  3658  010A44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3659  010A46  EC94  F096         	call	_strcmp	;wreg free
  3660  010A4A  0100               	movlb	0	; () banked
  3661  010A4C  5160               	movf	?_strcmp& (0+255),w,b
  3662  010A4E  0100               	movlb	0	; () banked
  3663  010A50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3664  010A52  A4D8               	btfss	status,2,c
  3665  010A54  D01C               	goto	l9064
  3666  010A56                     l9062:
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3670  010A56  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3671  010A5A  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3672  010A5E  0E41               	movlw	low (_now+10)
  3673  010A60  0100               	movlb	0	; () banked
  3674  010A62  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3675  010A64  0E01               	movlw	high (_now+10)
  3676  010A66  0100               	movlb	0	; () banked
  3677  010A68  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3678  010A6A  0E00               	movlw	0
  3679  010A6C  0100               	movlb	0	; () banked
  3680  010A6E  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3681  010A70  0E63               	movlw	99
  3682  010A72  0100               	movlb	0	; () banked
  3683  010A74  6FB9               	movwf	terminal_at_hand@max& (0+255),b
  3684  010A76  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3685  010A7A  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3686  010A7E  ECA5  F08D         	call	_atoi	;wreg free
  3687  010A82  0100               	movlb	0	; () banked
  3688  010A84  5166               	movf	?_atoi& (0+255),w,b
  3689  010A86  0100               	movlb	0	; () banked
  3690  010A88  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3691  010A8A  EC35  F096         	call	_terminal_at_hand	;wreg free
  3692  010A8E                     l9064:
  3693                           
  3694                           ;My_terminal.c: 100: }
  3695                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3696  010A8E  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3697  010A92  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3698  010A96  0EC8               	movlw	low (STR_52+2)
  3699  010A98  0100               	movlb	0	; () banked
  3700  010A9A  6F62               	movwf	strcmp@s2& (0+255),b
  3701  010A9C  0EFF               	movlw	high (STR_52+2)
  3702  010A9E  0100               	movlb	0	; () banked
  3703  010AA0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3704  010AA2  EC94  F096         	call	_strcmp	;wreg free
  3705  010AA6  0100               	movlb	0	; () banked
  3706  010AA8  5160               	movf	?_strcmp& (0+255),w,b
  3707  010AAA  0100               	movlb	0	; () banked
  3708  010AAC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3709  010AAE  B4D8               	btfsc	status,2,c
  3710  010AB0  D012               	goto	l9068
  3711                           
  3712                           ; BSR set to: 0
  3713  010AB2  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3714  010AB6  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3715  010ABA  0EA3               	movlw	low STR_32
  3716  010ABC  0100               	movlb	0	; () banked
  3717  010ABE  6F62               	movwf	strcmp@s2& (0+255),b
  3718  010AC0  0EFF               	movlw	high STR_32
  3719  010AC2  0100               	movlb	0	; () banked
  3720  010AC4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3721  010AC6  EC94  F096         	call	_strcmp	;wreg free
  3722  010ACA  0100               	movlb	0	; () banked
  3723  010ACC  5160               	movf	?_strcmp& (0+255),w,b
  3724  010ACE  0100               	movlb	0	; () banked
  3725  010AD0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3726  010AD2  A4D8               	btfss	status,2,c
  3727  010AD4  D01C               	goto	l9070
  3728  010AD6                     l9068:
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3732  010AD6  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3733  010ADA  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3734  010ADE  0E40               	movlw	low (_now+9)
  3735  010AE0  0100               	movlb	0	; () banked
  3736  010AE2  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3737  010AE4  0E01               	movlw	high (_now+9)
  3738  010AE6  0100               	movlb	0	; () banked
  3739  010AE8  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3740  010AEA  0E01               	movlw	1
  3741  010AEC  0100               	movlb	0	; () banked
  3742  010AEE  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3743  010AF0  0E0C               	movlw	12
  3744  010AF2  0100               	movlb	0	; () banked
  3745  010AF4  6FB9               	movwf	terminal_at_hand@max& (0+255),b
  3746  010AF6  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3747  010AFA  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3748  010AFE  ECA5  F08D         	call	_atoi	;wreg free
  3749  010B02  0100               	movlb	0	; () banked
  3750  010B04  5166               	movf	?_atoi& (0+255),w,b
  3751  010B06  0100               	movlb	0	; () banked
  3752  010B08  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3753  010B0A  EC35  F096         	call	_terminal_at_hand	;wreg free
  3754  010B0E                     l9070:
  3755                           
  3756                           ;My_terminal.c: 103: }
  3757                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3758  010B0E  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3759  010B12  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3760  010B16  0EC0               	movlw	low (STR_1+3)
  3761  010B18  0100               	movlb	0	; () banked
  3762  010B1A  6F62               	movwf	strcmp@s2& (0+255),b
  3763  010B1C  0EFF               	movlw	high (STR_1+3)
  3764  010B1E  0100               	movlb	0	; () banked
  3765  010B20  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3766  010B22  EC94  F096         	call	_strcmp	;wreg free
  3767  010B26  0100               	movlb	0	; () banked
  3768  010B28  5160               	movf	?_strcmp& (0+255),w,b
  3769  010B2A  0100               	movlb	0	; () banked
  3770  010B2C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3771  010B2E  B4D8               	btfsc	status,2,c
  3772  010B30  D012               	goto	l9074
  3773                           
  3774                           ; BSR set to: 0
  3775  010B32  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3776  010B36  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3777  010B3A  0EDA               	movlw	low STR_34
  3778  010B3C  0100               	movlb	0	; () banked
  3779  010B3E  6F62               	movwf	strcmp@s2& (0+255),b
  3780  010B40  0EFF               	movlw	high STR_34
  3781  010B42  0100               	movlb	0	; () banked
  3782  010B44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3783  010B46  EC94  F096         	call	_strcmp	;wreg free
  3784  010B4A  0100               	movlb	0	; () banked
  3785  010B4C  5160               	movf	?_strcmp& (0+255),w,b
  3786  010B4E  0100               	movlb	0	; () banked
  3787  010B50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3788  010B52  A4D8               	btfss	status,2,c
  3789  010B54  D023               	goto	l9078
  3790  010B56                     l9074:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3794  010B56  C140  F020         	movff	_now+9,month_length@month
  3795  010B5A  0101               	movlb	1	; () banked
  3796  010B5C  5141               	movf	(_now+10)& (0+255),w,b
  3797  010B5E  EC95  F08E         	call	_month_length
  3798  010B62  0100               	movlb	0	; () banked
  3799  010B64  6FC3               	movwf	_terminal_time$6894& (0+255),b
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3803  010B66  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3804  010B6A  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3805  010B6E  0E3F               	movlw	low (_now+8)
  3806  010B70  0100               	movlb	0	; () banked
  3807  010B72  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3808  010B74  0E01               	movlw	high (_now+8)
  3809  010B76  0100               	movlb	0	; () banked
  3810  010B78  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3811  010B7A  0E01               	movlw	1
  3812  010B7C  0100               	movlb	0	; () banked
  3813  010B7E  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3814  010B80  C0C3  F0B9         	movff	_terminal_time$6894,terminal_at_hand@max
  3815  010B84  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3816  010B88  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3817  010B8C  ECA5  F08D         	call	_atoi	;wreg free
  3818  010B90  0100               	movlb	0	; () banked
  3819  010B92  5166               	movf	?_atoi& (0+255),w,b
  3820  010B94  0100               	movlb	0	; () banked
  3821  010B96  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3822  010B98  EC35  F096         	call	_terminal_at_hand	;wreg free
  3823  010B9C                     l9078:
  3824                           
  3825                           ;My_terminal.c: 106: }
  3826                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3827  010B9C  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3828  010BA0  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3829  010BA4  0EA7               	movlw	low (STR_32+4)
  3830  010BA6  0100               	movlb	0	; () banked
  3831  010BA8  6F62               	movwf	strcmp@s2& (0+255),b
  3832  010BAA  0EFF               	movlw	high (STR_32+4)
  3833  010BAC  0100               	movlb	0	; () banked
  3834  010BAE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3835  010BB0  EC94  F096         	call	_strcmp	;wreg free
  3836  010BB4  0100               	movlb	0	; () banked
  3837  010BB6  5160               	movf	?_strcmp& (0+255),w,b
  3838  010BB8  0100               	movlb	0	; () banked
  3839  010BBA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3840  010BBC  B4D8               	btfsc	status,2,c
  3841  010BBE  D012               	goto	l9082
  3842                           
  3843                           ; BSR set to: 0
  3844  010BC0  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3845  010BC4  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3846  010BC8  0EB8               	movlw	low STR_36
  3847  010BCA  0100               	movlb	0	; () banked
  3848  010BCC  6F62               	movwf	strcmp@s2& (0+255),b
  3849  010BCE  0EFF               	movlw	high STR_36
  3850  010BD0  0100               	movlb	0	; () banked
  3851  010BD2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3852  010BD4  EC94  F096         	call	_strcmp	;wreg free
  3853  010BD8  0100               	movlb	0	; () banked
  3854  010BDA  5160               	movf	?_strcmp& (0+255),w,b
  3855  010BDC  0100               	movlb	0	; () banked
  3856  010BDE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3857  010BE0  A4D8               	btfss	status,2,c
  3858  010BE2  D01C               	goto	l9084
  3859  010BE4                     l9082:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3863  010BE4  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3864  010BE8  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3865  010BEC  0E3D               	movlw	low (_now+6)
  3866  010BEE  0100               	movlb	0	; () banked
  3867  010BF0  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3868  010BF2  0E01               	movlw	high (_now+6)
  3869  010BF4  0100               	movlb	0	; () banked
  3870  010BF6  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3871  010BF8  0E00               	movlw	0
  3872  010BFA  0100               	movlb	0	; () banked
  3873  010BFC  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3874  010BFE  0E17               	movlw	23
  3875  010C00  0100               	movlb	0	; () banked
  3876  010C02  6FB9               	movwf	terminal_at_hand@max& (0+255),b
  3877  010C04  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3878  010C08  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3879  010C0C  ECA5  F08D         	call	_atoi	;wreg free
  3880  010C10  0100               	movlb	0	; () banked
  3881  010C12  5166               	movf	?_atoi& (0+255),w,b
  3882  010C14  0100               	movlb	0	; () banked
  3883  010C16  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3884  010C18  EC35  F096         	call	_terminal_at_hand	;wreg free
  3885  010C1C                     l9084:
  3886                           
  3887                           ;My_terminal.c: 109: }
  3888                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3889  010C1C  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3890  010C20  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3891  010C24  0ED0               	movlw	low (STR_51+2)
  3892  010C26  0100               	movlb	0	; () banked
  3893  010C28  6F62               	movwf	strcmp@s2& (0+255),b
  3894  010C2A  0EFF               	movlw	high (STR_51+2)
  3895  010C2C  0100               	movlb	0	; () banked
  3896  010C2E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3897  010C30  EC94  F096         	call	_strcmp	;wreg free
  3898  010C34  0100               	movlb	0	; () banked
  3899  010C36  5160               	movf	?_strcmp& (0+255),w,b
  3900  010C38  0100               	movlb	0	; () banked
  3901  010C3A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3902  010C3C  B4D8               	btfsc	status,2,c
  3903  010C3E  D012               	goto	l9088
  3904                           
  3905                           ; BSR set to: 0
  3906  010C40  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3907  010C44  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3908  010C48  0E96               	movlw	low STR_38
  3909  010C4A  0100               	movlb	0	; () banked
  3910  010C4C  6F62               	movwf	strcmp@s2& (0+255),b
  3911  010C4E  0EFF               	movlw	high STR_38
  3912  010C50  0100               	movlb	0	; () banked
  3913  010C52  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3914  010C54  EC94  F096         	call	_strcmp	;wreg free
  3915  010C58  0100               	movlb	0	; () banked
  3916  010C5A  5160               	movf	?_strcmp& (0+255),w,b
  3917  010C5C  0100               	movlb	0	; () banked
  3918  010C5E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3919  010C60  A4D8               	btfss	status,2,c
  3920  010C62  D01C               	goto	l9090
  3921  010C64                     l9088:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3925  010C64  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3926  010C68  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3927  010C6C  0E3C               	movlw	low (_now+5)
  3928  010C6E  0100               	movlb	0	; () banked
  3929  010C70  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3930  010C72  0E01               	movlw	high (_now+5)
  3931  010C74  0100               	movlb	0	; () banked
  3932  010C76  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3933  010C78  0E00               	movlw	0
  3934  010C7A  0100               	movlb	0	; () banked
  3935  010C7C  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3936  010C7E  0E3B               	movlw	59
  3937  010C80  0100               	movlb	0	; () banked
  3938  010C82  6FB9               	movwf	terminal_at_hand@max& (0+255),b
  3939  010C84  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3940  010C88  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3941  010C8C  ECA5  F08D         	call	_atoi	;wreg free
  3942  010C90  0100               	movlb	0	; () banked
  3943  010C92  5166               	movf	?_atoi& (0+255),w,b
  3944  010C94  0100               	movlb	0	; () banked
  3945  010C96  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3946  010C98  EC35  F096         	call	_terminal_at_hand	;wreg free
  3947  010C9C                     l9090:
  3948                           
  3949                           ;My_terminal.c: 112: }
  3950                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  3951  010C9C  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3952  010CA0  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3953  010CA4  0EF4               	movlw	low STR_39
  3954  010CA6  0100               	movlb	0	; () banked
  3955  010CA8  6F62               	movwf	strcmp@s2& (0+255),b
  3956  010CAA  0EFF               	movlw	high STR_39
  3957  010CAC  0100               	movlb	0	; () banked
  3958  010CAE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3959  010CB0  EC94  F096         	call	_strcmp	;wreg free
  3960  010CB4  0100               	movlb	0	; () banked
  3961  010CB6  5160               	movf	?_strcmp& (0+255),w,b
  3962  010CB8  0100               	movlb	0	; () banked
  3963  010CBA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3964  010CBC  B4D8               	btfsc	status,2,c
  3965  010CBE  D012               	goto	l9094
  3966                           
  3967                           ; BSR set to: 0
  3968  010CC0  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3969  010CC4  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3970  010CC8  0E8F               	movlw	low STR_40
  3971  010CCA  0100               	movlb	0	; () banked
  3972  010CCC  6F62               	movwf	strcmp@s2& (0+255),b
  3973  010CCE  0EFF               	movlw	high STR_40
  3974  010CD0  0100               	movlb	0	; () banked
  3975  010CD2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3976  010CD4  EC94  F096         	call	_strcmp	;wreg free
  3977  010CD8  0100               	movlb	0	; () banked
  3978  010CDA  5160               	movf	?_strcmp& (0+255),w,b
  3979  010CDC  0100               	movlb	0	; () banked
  3980  010CDE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3981  010CE0  A4D8               	btfss	status,2,c
  3982  010CE2  0012               	return	
  3983  010CE4                     l9094:
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  3987  010CE4  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3988  010CE8  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3989  010CEC  0E3B               	movlw	low (_now+4)
  3990  010CEE  0100               	movlb	0	; () banked
  3991  010CF0  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3992  010CF2  0E01               	movlw	high (_now+4)
  3993  010CF4  0100               	movlb	0	; () banked
  3994  010CF6  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3995  010CF8  0E00               	movlw	0
  3996  010CFA  0100               	movlb	0	; () banked
  3997  010CFC  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3998  010CFE  0E3B               	movlw	59
  3999  010D00  0100               	movlb	0	; () banked
  4000  010D02  6FB9               	movwf	terminal_at_hand@max& (0+255),b
  4001  010D04  C0C1  F066         	movff	terminal_time@op2,atoi@s
  4002  010D08  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  4003  010D0C  ECA5  F08D         	call	_atoi	;wreg free
  4004  010D10  0100               	movlb	0	; () banked
  4005  010D12  5166               	movf	?_atoi& (0+255),w,b
  4006  010D14  0100               	movlb	0	; () banked
  4007  010D16  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  4008  010D18  EC35  F096         	call	_terminal_at_hand	;wreg free
  4009  010D1C  0012               	return	
  4010  010D1E                     __end_of_terminal_time:
  4011                           	opt stack 0
  4012                           tblptru	equ	0xFF8
  4013                           tblptrh	equ	0xFF7
  4014                           tblptrl	equ	0xFF6
  4015                           tablat	equ	0xFF5
  4016                           prodh	equ	0xFF4
  4017                           prodl	equ	0xFF3
  4018                           intcon	equ	0xFF2
  4019                           postinc0	equ	0xFEE
  4020                           wreg	equ	0xFE8
  4021                           postdec1	equ	0xFE5
  4022                           fsr1h	equ	0xFE2
  4023                           fsr1l	equ	0xFE1
  4024                           indf2	equ	0xFDF
  4025                           fsr2h	equ	0xFDA
  4026                           fsr2l	equ	0xFD9
  4027                           status	equ	0xFD8
  4028                           
  4029 ;; *************** function _terminal_at_hand *****************
  4030 ;; Defined at:
  4031 ;;		line 82 in file "../My_library/My_terminal.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  tx              2   84[BANK0 ] PTR struct ringbuf
  4034 ;;		 -> uart_tx(8), 
  4035 ;;  hand            2   86[BANK0 ] PTR unsigned char 
  4036 ;;		 -> now(14), 
  4037 ;;  min             1   88[BANK0 ] unsigned char 
  4038 ;;  max             1   89[BANK0 ] unsigned char 
  4039 ;;  value           1   90[BANK0 ] unsigned char 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;		None               void
  4044 ;; Registers used:
  4045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4051 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4054 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4055 ;;Total ram usage:        7 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    9
  4058 ;; This function calls:
  4059 ;;		_RTCC_from_caltime
  4060 ;;		_print_time
  4061 ;;		_ringbuf_put_str
  4062 ;; This function is called by:
  4063 ;;		_terminal_time
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text4
  4068  012C6A                     __ptext4:
  4069                           	opt stack 0
  4070  012C6A                     _terminal_at_hand:
  4071                           	opt stack 18
  4072                           
  4073                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4074                           
  4075                           ;incstack = 0
  4076  012C6A  0100               	movlb	0	; () banked
  4077  012C6C  51B8               	movf	terminal_at_hand@min& (0+255),w,b
  4078  012C6E  0100               	movlb	0	; () banked
  4079  012C70  5DBA               	subwf	terminal_at_hand@value& (0+255),w,b
  4080  012C72  A0D8               	btfss	status,0,c
  4081  012C74  D01E               	goto	l9002
  4082                           
  4083                           ; BSR set to: 0
  4084  012C76  0100               	movlb	0	; () banked
  4085  012C78  51BA               	movf	terminal_at_hand@value& (0+255),w,b
  4086  012C7A  0100               	movlb	0	; () banked
  4087  012C7C  5DB9               	subwf	terminal_at_hand@max& (0+255),w,b
  4088  012C7E  A0D8               	btfss	status,0,c
  4089  012C80  D018               	goto	l9002
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;My_terminal.c: 84: *hand = value;
  4093  012C82  C0B6  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4094  012C86  C0B7  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4095  012C8A  C0BA  FFDF         	movff	terminal_at_hand@value,indf2
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4099  012C8E  0E37               	movlw	low _now
  4100  012C90  0100               	movlb	0	; () banked
  4101  012C92  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  4102  012C94  0E01               	movlw	high _now
  4103  012C96  0100               	movlb	0	; () banked
  4104  012C98  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  4105  012C9A  ECC6  F097         	call	_RTCC_from_caltime	;wreg free
  4106                           
  4107                           ;My_terminal.c: 86: time_change_flag = 1;
  4108  012C9E  0E01               	movlw	1
  4109  012CA0  0100               	movlb	0	; () banked
  4110  012CA2  6FE8               	movwf	_time_change_flag& (0+255),b
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;My_terminal.c: 87: print_time(tx);
  4114  012CA4  C0B4  F094         	movff	terminal_at_hand@tx,print_time@tx
  4115  012CA8  C0B5  F095         	movff	terminal_at_hand@tx+1,print_time@tx+1
  4116  012CAC  EC57  F094         	call	_print_time	;wreg free
  4117                           
  4118                           ;My_terminal.c: 88: } else {
  4119  012CB0  0012               	return	
  4120  012CB2                     l9002:
  4121                           
  4122                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  4123  012CB2  C0B4  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  4124  012CB6  C0B5  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  4125  012CBA  0E80               	movlw	low STR_24
  4126  012CBC  0100               	movlb	0	; () banked
  4127  012CBE  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4128  012CC0  0EFF               	movlw	high STR_24
  4129  012CC2  0100               	movlb	0	; () banked
  4130  012CC4  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4131  012CC6  EC03  F096         	call	_ringbuf_put_str	;wreg free
  4132  012CCA  0012               	return	
  4133  012CCC                     __end_of_terminal_at_hand:
  4134                           	opt stack 0
  4135                           tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           prodh	equ	0xFF4
  4140                           prodl	equ	0xFF3
  4141                           intcon	equ	0xFF2
  4142                           postinc0	equ	0xFEE
  4143                           wreg	equ	0xFE8
  4144                           postdec1	equ	0xFE5
  4145                           fsr1h	equ	0xFE2
  4146                           fsr1l	equ	0xFE1
  4147                           indf2	equ	0xFDF
  4148                           fsr2h	equ	0xFDA
  4149                           fsr2l	equ	0xFD9
  4150                           status	equ	0xFD8
  4151                           
  4152 ;; *************** function _print_time *****************
  4153 ;; Defined at:
  4154 ;;		line 68 in file "../My_library/My_terminal.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  tx              2   52[BANK0 ] PTR struct ringbuf
  4157 ;;		 -> uart_tx(8), 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  str            30   54[BANK0 ] unsigned char [30]
  4160 ;; Return value:  Size  Location     Type
  4161 ;;		None               void
  4162 ;; Registers used:
  4163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4170 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4172 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4173 ;;Total ram usage:       32 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    8
  4176 ;; This function calls:
  4177 ;;		_RTCC_from_RTCC
  4178 ;;		_ringbuf_put_str
  4179 ;;		_sprintf
  4180 ;; This function is called by:
  4181 ;;		_terminal_at_hand
  4182 ;;		_terminal_time
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text5
  4187  0128AE                     __ptext5:
  4188                           	opt stack 0
  4189  0128AE                     _print_time:
  4190                           	opt stack 18
  4191                           
  4192                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  4193                           
  4194                           ;incstack = 0
  4195  0128AE  0E37               	movlw	low _now
  4196  0128B0  0100               	movlb	0	; () banked
  4197  0128B2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  4198  0128B4  0E01               	movlw	high _now
  4199  0128B6  0100               	movlb	0	; () banked
  4200  0128B8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  4201  0128BA  EC36  F098         	call	_RTCC_from_RTCC	;wreg free
  4202                           
  4203                           ;My_terminal.c: 70: char str[30];
  4204                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4205                           ;My_terminal.c: 72: now.YY,
  4206                           ;My_terminal.c: 73: now.MM,
  4207                           ;My_terminal.c: 74: now.DD,
  4208                           ;My_terminal.c: 75: weekday_3char[now.EE],
  4209                           ;My_terminal.c: 76: now.hh,
  4210                           ;My_terminal.c: 77: now.mm,
  4211                           ;My_terminal.c: 78: now.ss);
  4212  0128BE  0E96               	movlw	low print_time@str
  4213  0128C0  0100               	movlb	0	; () banked
  4214  0128C2  6F71               	movwf	sprintf@sp& (0+255),b
  4215  0128C4  0E00               	movlw	high print_time@str
  4216  0128C6  0100               	movlb	0	; () banked
  4217  0128C8  6F72               	movwf	(sprintf@sp+1)& (0+255),b
  4218  0128CA  0E23               	movlw	low STR_23
  4219  0128CC  0100               	movlb	0	; () banked
  4220  0128CE  6F73               	movwf	sprintf@f& (0+255),b
  4221  0128D0  0EFF               	movlw	high STR_23
  4222  0128D2  0100               	movlb	0	; () banked
  4223  0128D4  6F74               	movwf	(sprintf@f+1)& (0+255),b
  4224  0128D6  C141  F075         	movff	_now+10,?_sprintf+4
  4225  0128DA  0100               	movlb	0	; () banked
  4226  0128DC  6B76               	clrf	(?_sprintf+5)& (0+255),b
  4227  0128DE  C140  F077         	movff	_now+9,?_sprintf+6
  4228  0128E2  0100               	movlb	0	; () banked
  4229  0128E4  6B78               	clrf	(?_sprintf+7)& (0+255),b
  4230  0128E6  C13F  F079         	movff	_now+8,?_sprintf+8
  4231  0128EA  0100               	movlb	0	; () banked
  4232  0128EC  6B7A               	clrf	(?_sprintf+9)& (0+255),b
  4233  0128EE  0101               	movlb	1	; () banked
  4234  0128F0  513E               	movf	(_now+7)& (0+255),w,b
  4235  0128F2  0D04               	mullw	4
  4236  0128F4  0EB6               	movlw	low _weekday_3char
  4237  0128F6  24F3               	addwf	prodl,w,c
  4238  0128F8  0100               	movlb	0	; () banked
  4239  0128FA  6F7B               	movwf	(?_sprintf+10)& (0+255),b
  4240  0128FC  0EFD               	movlw	high _weekday_3char
  4241  0128FE  20F4               	addwfc	prodh,w,c
  4242  012900  0100               	movlb	0	; () banked
  4243  012902  6F7C               	movwf	(?_sprintf+11)& (0+255),b
  4244  012904  C13D  F07D         	movff	_now+6,?_sprintf+12
  4245  012908  0100               	movlb	0	; () banked
  4246  01290A  6B7E               	clrf	(?_sprintf+13)& (0+255),b
  4247  01290C  C13C  F07F         	movff	_now+5,?_sprintf+14
  4248  012910  0100               	movlb	0	; () banked
  4249  012912  6B80               	clrf	(?_sprintf+15)& (0+255),b
  4250  012914  C13B  F081         	movff	_now+4,?_sprintf+16
  4251  012918  0100               	movlb	0	; () banked
  4252  01291A  6B82               	clrf	(?_sprintf+17)& (0+255),b
  4253  01291C  EC8C  F082         	call	_sprintf	;wreg free
  4254                           
  4255                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  4256  012920  C094  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  4257  012924  C095  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4258  012928  0E96               	movlw	low print_time@str
  4259  01292A  0100               	movlb	0	; () banked
  4260  01292C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4261  01292E  0E00               	movlw	high print_time@str
  4262  012930  0100               	movlb	0	; () banked
  4263  012932  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4264  012934  EC03  F096         	call	_ringbuf_put_str	;wreg free
  4265  012938  0012               	return		;funcret
  4266  01293A                     __end_of_print_time:
  4267                           	opt stack 0
  4268                           tblptru	equ	0xFF8
  4269                           tblptrh	equ	0xFF7
  4270                           tblptrl	equ	0xFF6
  4271                           tablat	equ	0xFF5
  4272                           prodh	equ	0xFF4
  4273                           prodl	equ	0xFF3
  4274                           intcon	equ	0xFF2
  4275                           postinc0	equ	0xFEE
  4276                           wreg	equ	0xFE8
  4277                           postdec1	equ	0xFE5
  4278                           fsr1h	equ	0xFE2
  4279                           fsr1l	equ	0xFE1
  4280                           indf2	equ	0xFDF
  4281                           fsr2h	equ	0xFDA
  4282                           fsr2l	equ	0xFD9
  4283                           status	equ	0xFD8
  4284                           
  4285 ;; *************** function _sprintf *****************
  4286 ;; Defined at:
  4287 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  sp              2   17[BANK0 ] PTR unsigned char 
  4290 ;;		 -> terminal_operation@str(30), print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  4291 ;;  f               2   19[BANK0 ] PTR const unsigned char 
  4292 ;;		 -> STR_46(15), STR_23(37), STR_21(5), STR_1(5), 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  tmpval          4    0        struct .
  4295 ;;  width           2   50[BANK0 ] int 
  4296 ;;  len             2   46[BANK0 ] unsigned int 
  4297 ;;  val             2   44[BANK0 ] unsigned int 
  4298 ;;  cp              2   42[BANK0 ] PTR const unsigned char 
  4299 ;;		 -> STR_62(7), weekday_3char(28), 
  4300 ;;  ap              2   40[BANK0 ] PTR void [1]
  4301 ;;		 -> ?_sprintf(2), 
  4302 ;;  c               1   49[BANK0 ] char 
  4303 ;;  flag            1   48[BANK0 ] unsigned char 
  4304 ;;  prec            1   39[BANK0 ] char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  2   17[BANK0 ] int 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4314 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4315 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4316 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4317 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4318 ;;Total ram usage:       35 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    5
  4321 ;; This function calls:
  4322 ;;		___lwdiv
  4323 ;;		___lwmod
  4324 ;;		___wmul
  4325 ;;		_isdigit
  4326 ;; This function is called by:
  4327 ;;		_print_time
  4328 ;;		_terminal_operation
  4329 ;;		_display_dec
  4330 ;;		_print_time_dec
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text6
  4335  010518                     __ptext6:
  4336                           	opt stack 0
  4337  010518                     _sprintf:
  4338                           	opt stack 20
  4339                           
  4340                           ;doprnt.c: 494: va_list ap;
  4341                           ;doprnt.c: 499: signed char c;
  4342                           ;doprnt.c: 501: int width;
  4343                           ;doprnt.c: 506: signed char prec;
  4344                           ;doprnt.c: 508: unsigned char flag;
  4345                           ;doprnt.c: 523: union {
  4346                           ;doprnt.c: 524: unsigned long vd;
  4347                           ;doprnt.c: 525: double integ;
  4348                           ;doprnt.c: 526: } tmpval;
  4349                           ;doprnt.c: 528: unsigned int val;
  4350                           ;doprnt.c: 529: unsigned len;
  4351                           ;doprnt.c: 530: const char * cp;
  4352                           ;doprnt.c: 533: *ap = __va_start();
  4353                           
  4354                           ;incstack = 0
  4355  010518  0E75               	movlw	low (?_sprintf+4)
  4356  01051A  0100               	movlb	0	; () banked
  4357  01051C  6F88               	movwf	sprintf@ap& (0+255),b
  4358  01051E  0E00               	movlw	high (?_sprintf+4)
  4359  010520  0100               	movlb	0	; () banked
  4360  010522  6F89               	movwf	(sprintf@ap+1)& (0+255),b
  4361                           
  4362                           ;doprnt.c: 536: while(c = *f++) {
  4363  010524  D20F               	goto	l8974
  4364  010526                     l8834:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;doprnt.c: 538: if(c != '%')
  4368  010526  0E25               	movlw	37
  4369  010528  0100               	movlb	0	; () banked
  4370  01052A  1991               	xorwf	sprintf@c& (0+255),w,b
  4371  01052C  B4D8               	btfsc	status,2,c
  4372  01052E  D00A               	goto	l8840
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;doprnt.c: 540: {
  4376                           ;doprnt.c: 541: ((*sp++ = (c)));
  4377  010530  C071  FFD9         	movff	sprintf@sp,fsr2l
  4378  010534  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4379  010538  C091  FFDF         	movff	sprintf@c,indf2
  4380                           
  4381                           ; BSR set to: 0
  4382  01053C  0100               	movlb	0	; () banked
  4383  01053E  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4384  010540  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4385                           
  4386                           ;doprnt.c: 542: continue;
  4387  010542  D200               	goto	l8974
  4388  010544                     l8840:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;doprnt.c: 543: }
  4392                           ;doprnt.c: 546: width = 0;
  4393  010544  0E00               	movlw	0
  4394  010546  0100               	movlb	0	; () banked
  4395  010548  6F93               	movwf	(sprintf@width+1)& (0+255),b
  4396  01054A  0E00               	movlw	0
  4397  01054C  6F92               	movwf	sprintf@width& (0+255),b
  4398                           
  4399                           ;doprnt.c: 548: flag = 0;
  4400  01054E  0E00               	movlw	0
  4401  010550  0100               	movlb	0	; () banked
  4402  010552  6F90               	movwf	sprintf@flag& (0+255),b
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;doprnt.c: 551: switch(*f) {
  4406                           
  4407                           ;doprnt.c: 550: for(;;) {
  4408  010554  D005               	goto	l8846
  4409  010556                     l8842:
  4410                           
  4411                           ;doprnt.c: 580: flag |= 0x04;
  4412  010556  0100               	movlb	0	; () banked
  4413  010558  8590               	bsf	sprintf@flag& (0+255),2,b
  4414                           
  4415                           ;doprnt.c: 581: f++;
  4416  01055A  0100               	movlb	0	; () banked
  4417  01055C  4B73               	infsnz	sprintf@f& (0+255),f,b
  4418  01055E  2B74               	incf	(sprintf@f+1)& (0+255),f,b
  4419  010560                     l8846:
  4420  010560  C073  FFF6         	movff	sprintf@f,tblptrl
  4421  010564  C074  FFF7         	movff	sprintf@f+1,tblptrh
  4422  010568                     	if	0	;tblptru may be non-zero
  4423  010568                     	endif
  4424  010568                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4425  010568  0E00               	movlw	low (__mediumconst shr (0+16))
  4426  01056A  6EF8               	movwf	tblptru,c
  4427  01056C                     	endif
  4428  01056C  0008               	tblrd		*
  4429  01056E  50F5               	movf	tablat,w,c
  4430                           
  4431                           ; Switch size 1, requested type "space"
  4432                           ; Number of cases is 1, Range of values is 48 to 48
  4433                           ; switch strategies available:
  4434                           ; Name         Instructions Cycles
  4435                           ; simple_byte            4     3 (average)
  4436                           ;	Chosen strategy is simple_byte
  4437  010570  0A30               	xorlw	48	; case 48
  4438  010572  B4D8               	btfsc	status,2,c
  4439  010574  D7F0               	goto	l8842
  4440                           
  4441                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4442                           
  4443                           ;doprnt.c: 586: }
  4444                           
  4445                           ;doprnt.c: 585: break;
  4446  010576  C073  FFF6         	movff	sprintf@f,tblptrl
  4447  01057A  C074  FFF7         	movff	sprintf@f+1,tblptrh
  4448  01057E                     	if	0	;tblptru may be non-zero
  4449  01057E                     	endif
  4450  01057E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4451  01057E  0E00               	movlw	low (__mediumconst shr (0+16))
  4452  010580  6EF8               	movwf	tblptru,c
  4453  010582                     	endif
  4454  010582  0008               	tblrd		*
  4455  010584  50F5               	movf	tablat,w,c
  4456  010586  EC8A  F097         	call	_isdigit
  4457  01058A  A0D8               	btfss	status,0,c
  4458  01058C  D0CB               	goto	l8896
  4459                           
  4460                           ;doprnt.c: 598: width = 0;
  4461  01058E  0E00               	movlw	0
  4462  010590  0100               	movlb	0	; () banked
  4463  010592  6F93               	movwf	(sprintf@width+1)& (0+255),b
  4464  010594  0E00               	movlw	0
  4465  010596  6F92               	movwf	sprintf@width& (0+255),b
  4466  010598                     l8852:
  4467                           
  4468                           ;doprnt.c: 600: width *= 10;
  4469  010598  C092  F060         	movff	sprintf@width,___wmul@multiplier
  4470  01059C  C093  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  4471  0105A0  0E00               	movlw	0
  4472  0105A2  0100               	movlb	0	; () banked
  4473  0105A4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4474  0105A6  0E0A               	movlw	10
  4475  0105A8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4476  0105AA  EC6F  F097         	call	___wmul	;wreg free
  4477  0105AE  C060  F092         	movff	?___wmul,sprintf@width
  4478  0105B2  C061  F093         	movff	?___wmul+1,sprintf@width+1
  4479                           
  4480                           ;doprnt.c: 601: width += *f++ - '0';
  4481  0105B6  0ED0               	movlw	208
  4482  0105B8  0100               	movlb	0	; () banked
  4483  0105BA  6F83               	movwf	??_sprintf& (0+255),b
  4484  0105BC  0EFF               	movlw	255
  4485  0105BE  0100               	movlb	0	; () banked
  4486  0105C0  6F84               	movwf	(??_sprintf+1)& (0+255),b
  4487  0105C2  C073  FFF6         	movff	sprintf@f,tblptrl
  4488  0105C6  C074  FFF7         	movff	sprintf@f+1,tblptrh
  4489  0105CA                     	if	0	;tblptru may be non-zero
  4490  0105CA                     	endif
  4491  0105CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4492  0105CA  0E00               	movlw	low (__mediumconst shr (0+16))
  4493  0105CC  6EF8               	movwf	tblptru,c
  4494  0105CE                     	endif
  4495  0105CE  0008               	tblrd		*
  4496  0105D0  50F5               	movf	tablat,w,c
  4497  0105D2  0100               	movlb	0	; () banked
  4498  0105D4  6F85               	movwf	(??_sprintf+2)& (0+255),b
  4499  0105D6  6B86               	clrf	(??_sprintf+3)& (0+255),b
  4500  0105D8  0100               	movlb	0	; () banked
  4501  0105DA  5183               	movf	??_sprintf& (0+255),w,b
  4502  0105DC  0100               	movlb	0	; () banked
  4503  0105DE  2785               	addwf	(??_sprintf+2)& (0+255),f,b
  4504  0105E0  0100               	movlb	0	; () banked
  4505  0105E2  5184               	movf	(??_sprintf+1)& (0+255),w,b
  4506  0105E4  0100               	movlb	0	; () banked
  4507  0105E6  2386               	addwfc	(??_sprintf+3)& (0+255),f,b
  4508  0105E8  0100               	movlb	0	; () banked
  4509  0105EA  5185               	movf	(??_sprintf+2)& (0+255),w,b
  4510  0105EC  0100               	movlb	0	; () banked
  4511  0105EE  2792               	addwf	sprintf@width& (0+255),f,b
  4512  0105F0  0100               	movlb	0	; () banked
  4513  0105F2  5186               	movf	(??_sprintf+3)& (0+255),w,b
  4514  0105F4  0100               	movlb	0	; () banked
  4515  0105F6  2393               	addwfc	(sprintf@width+1)& (0+255),f,b
  4516                           
  4517                           ; BSR set to: 0
  4518  0105F8  0100               	movlb	0	; () banked
  4519  0105FA  4B73               	infsnz	sprintf@f& (0+255),f,b
  4520  0105FC  2B74               	incf	(sprintf@f+1)& (0+255),f,b
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4524  0105FE  C073  FFF6         	movff	sprintf@f,tblptrl
  4525  010602  C074  FFF7         	movff	sprintf@f+1,tblptrh
  4526  010606                     	if	0	;tblptru may be non-zero
  4527  010606                     	endif
  4528  010606                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4529  010606  0E00               	movlw	low (__mediumconst shr (0+16))
  4530  010608  6EF8               	movwf	tblptru,c
  4531  01060A                     	endif
  4532  01060A  0008               	tblrd		*
  4533  01060C  50F5               	movf	tablat,w,c
  4534  01060E  EC8A  F097         	call	_isdigit
  4535  010612  A0D8               	btfss	status,0,c
  4536  010614  D087               	goto	l8896
  4537  010616  D7C0               	goto	l8852
  4538  010618                     l8860:
  4539                           
  4540                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4541  010618  C088  FFD9         	movff	sprintf@ap,fsr2l
  4542  01061C  C089  FFDA         	movff	sprintf@ap+1,fsr2h
  4543  010620  CFDE F08A          	movff	postinc2,sprintf@cp
  4544  010624  CFDD F08B          	movff	postdec2,sprintf@cp+1
  4545  010628  0E02               	movlw	2
  4546  01062A  0100               	movlb	0	; () banked
  4547  01062C  2788               	addwf	sprintf@ap& (0+255),f,b
  4548  01062E  0E00               	movlw	0
  4549  010630  2389               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;doprnt.c: 740: if(!cp)
  4553  010632  0100               	movlb	0	; () banked
  4554  010634  518A               	movf	sprintf@cp& (0+255),w,b
  4555  010636  0100               	movlb	0	; () banked
  4556  010638  118B               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4557  01063A  A4D8               	btfss	status,2,c
  4558  01063C  D006               	goto	l8868
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;doprnt.c: 741: cp = "(null)";
  4562  01063E  0E88               	movlw	low STR_62
  4563  010640  0100               	movlb	0	; () banked
  4564  010642  6F8A               	movwf	sprintf@cp& (0+255),b
  4565  010644  0EFF               	movlw	high STR_62
  4566  010646  0100               	movlb	0	; () banked
  4567  010648  6F8B               	movwf	(sprintf@cp+1)& (0+255),b
  4568  01064A                     l8868:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;doprnt.c: 745: len = 0;
  4572  01064A  0E00               	movlw	0
  4573  01064C  0100               	movlb	0	; () banked
  4574  01064E  6F8F               	movwf	(sprintf@len+1)& (0+255),b
  4575  010650  0E00               	movlw	0
  4576  010652  6F8E               	movwf	sprintf@len& (0+255),b
  4577                           
  4578                           ;doprnt.c: 746: while(cp[len])
  4579  010654  D003               	goto	l8872
  4580  010656                     l8870:
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;doprnt.c: 747: len++;
  4584  010656  0100               	movlb	0	; () banked
  4585  010658  4B8E               	infsnz	sprintf@len& (0+255),f,b
  4586  01065A  2B8F               	incf	(sprintf@len+1)& (0+255),f,b
  4587  01065C                     l8872:
  4588                           
  4589                           ; BSR set to: 0
  4590  01065C  0100               	movlb	0	; () banked
  4591  01065E  518E               	movf	sprintf@len& (0+255),w,b
  4592  010660  0100               	movlb	0	; () banked
  4593  010662  258A               	addwf	sprintf@cp& (0+255),w,b
  4594  010664  0100               	movlb	0	; () banked
  4595  010666  6F83               	movwf	??_sprintf& (0+255),b
  4596  010668  0100               	movlb	0	; () banked
  4597  01066A  518F               	movf	(sprintf@len+1)& (0+255),w,b
  4598  01066C  0100               	movlb	0	; () banked
  4599  01066E  218B               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4600  010670  0100               	movlb	0	; () banked
  4601  010672  6F84               	movwf	(??_sprintf+1)& (0+255),b
  4602  010674  C083  FFF6         	movff	??_sprintf,tblptrl
  4603  010678  C084  FFF7         	movff	??_sprintf+1,tblptrh
  4604  01067C                     	if	0	;tblptru may be non-zero
  4605  01067C                     	endif
  4606  01067C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4607  01067C  0E00               	movlw	low (__mediumconst shr (0+16))
  4608  01067E  6EF8               	movwf	tblptru,c
  4609  010680                     	endif
  4610  010680  0008               	tblrd		*
  4611  010682  50F5               	movf	tablat,w,c
  4612  010684  0900               	iorlw	0
  4613  010686  A4D8               	btfss	status,2,c
  4614  010688  D7E6               	goto	l8870
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;doprnt.c: 757: if(width > len)
  4618                           
  4619                           ; BSR set to: 0
  4620  01068A  0100               	movlb	0	; () banked
  4621  01068C  5192               	movf	sprintf@width& (0+255),w,b
  4622  01068E  0100               	movlb	0	; () banked
  4623  010690  5D8E               	subwf	sprintf@len& (0+255),w,b
  4624  010692  0100               	movlb	0	; () banked
  4625  010694  5193               	movf	(sprintf@width+1)& (0+255),w,b
  4626  010696  0100               	movlb	0	; () banked
  4627  010698  598F               	subwfb	(sprintf@len+1)& (0+255),w,b
  4628  01069A  B0D8               	btfsc	status,0,c
  4629  01069C  D009               	goto	l8878
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;doprnt.c: 758: width -= len;
  4633  01069E  0100               	movlb	0	; () banked
  4634  0106A0  518E               	movf	sprintf@len& (0+255),w,b
  4635  0106A2  0100               	movlb	0	; () banked
  4636  0106A4  5F92               	subwf	sprintf@width& (0+255),f,b
  4637  0106A6  0100               	movlb	0	; () banked
  4638  0106A8  518F               	movf	(sprintf@len+1)& (0+255),w,b
  4639  0106AA  0100               	movlb	0	; () banked
  4640  0106AC  5B93               	subwfb	(sprintf@width+1)& (0+255),f,b
  4641  0106AE  D00F               	goto	l8884
  4642  0106B0                     l8878:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;doprnt.c: 759: else
  4646                           ;doprnt.c: 760: width = 0;
  4647  0106B0  0E00               	movlw	0
  4648  0106B2  0100               	movlb	0	; () banked
  4649  0106B4  6F93               	movwf	(sprintf@width+1)& (0+255),b
  4650  0106B6  0E00               	movlw	0
  4651  0106B8  6F92               	movwf	sprintf@width& (0+255),b
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;doprnt.c: 764: while(width--)
  4655  0106BA  D009               	goto	l8884
  4656  0106BC                     l8880:
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4660  0106BC  C071  FFD9         	movff	sprintf@sp,fsr2l
  4661  0106C0  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4662  0106C4  0E20               	movlw	32
  4663  0106C6  6EDF               	movwf	indf2,c
  4664                           
  4665                           ; BSR set to: 0
  4666  0106C8  0100               	movlb	0	; () banked
  4667  0106CA  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4668  0106CC  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4669  0106CE                     l8884:
  4670                           
  4671                           ; BSR set to: 0
  4672  0106CE  0100               	movlb	0	; () banked
  4673  0106D0  0792               	decf	sprintf@width& (0+255),f,b
  4674  0106D2  A0D8               	btfss	status,0,c
  4675  0106D4  0793               	decf	(sprintf@width+1)& (0+255),f,b
  4676  0106D6  0100               	movlb	0	; () banked
  4677  0106D8  2992               	incf	sprintf@width& (0+255),w,b
  4678  0106DA  E1F0               	bnz	l8880
  4679  0106DC  0100               	movlb	0	; () banked
  4680  0106DE  2993               	incf	(sprintf@width+1)& (0+255),w,b
  4681  0106E0  B4D8               	btfsc	status,2,c
  4682  0106E2  D014               	goto	l8892
  4683  0106E4  D7EB               	goto	l8880
  4684  0106E6                     l8886:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4688  0106E6  C08A  FFF6         	movff	sprintf@cp,tblptrl
  4689  0106EA  C08B  FFF7         	movff	sprintf@cp+1,tblptrh
  4690  0106EE                     	if	0	;tblptru may be non-zero
  4691  0106EE                     	endif
  4692  0106EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4693  0106EE  0E00               	movlw	low (__mediumconst shr (0+16))
  4694  0106F0  6EF8               	movwf	tblptru,c
  4695  0106F2                     	endif
  4696  0106F2  C071  FFD9         	movff	sprintf@sp,fsr2l
  4697  0106F6  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4698  0106FA  0008               	tblrd		*
  4699  0106FC  CFF5 FFDF          	movff	tablat,indf2
  4700                           
  4701                           ; BSR set to: 0
  4702  010700  0100               	movlb	0	; () banked
  4703  010702  4B8A               	infsnz	sprintf@cp& (0+255),f,b
  4704  010704  2B8B               	incf	(sprintf@cp+1)& (0+255),f,b
  4705                           
  4706                           ; BSR set to: 0
  4707  010706  0100               	movlb	0	; () banked
  4708  010708  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4709  01070A  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4710  01070C                     l8892:
  4711                           
  4712                           ; BSR set to: 0
  4713  01070C  0100               	movlb	0	; () banked
  4714  01070E  078E               	decf	sprintf@len& (0+255),f,b
  4715  010710  A0D8               	btfss	status,0,c
  4716  010712  078F               	decf	(sprintf@len+1)& (0+255),f,b
  4717  010714  0100               	movlb	0	; () banked
  4718  010716  298E               	incf	sprintf@len& (0+255),w,b
  4719  010718  E1E6               	bnz	l8886
  4720  01071A  0100               	movlb	0	; () banked
  4721  01071C  298F               	incf	(sprintf@len+1)& (0+255),w,b
  4722  01071E  B4D8               	btfsc	status,2,c
  4723  010720  D111               	goto	l8974
  4724  010722  D7E1               	goto	l8886
  4725  010724                     l8896:
  4726  010724  C073  FFF6         	movff	sprintf@f,tblptrl
  4727  010728  C074  FFF7         	movff	sprintf@f+1,tblptrh
  4728  01072C  0100               	movlb	0	; () banked
  4729  01072E  4B73               	infsnz	sprintf@f& (0+255),f,b
  4730  010730  2B74               	incf	(sprintf@f+1)& (0+255),f,b
  4731  010732                     	if	0	;tblptru may be non-zero
  4732  010732                     	endif
  4733  010732                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4734  010732  0E00               	movlw	low (__mediumconst shr (0+16))
  4735  010734  6EF8               	movwf	tblptru,c
  4736  010736                     	endif
  4737  010736  0008               	tblrd		*
  4738  010738  CFF5 F091          	movff	tablat,sprintf@c
  4739  01073C  0100               	movlb	0	; () banked
  4740  01073E  5191               	movf	sprintf@c& (0+255),w,b
  4741                           
  4742                           ; Switch size 1, requested type "space"
  4743                           ; Number of cases is 4, Range of values is 0 to 115
  4744                           ; switch strategies available:
  4745                           ; Name         Instructions Cycles
  4746                           ; simple_byte           13     7 (average)
  4747                           ;	Chosen strategy is simple_byte
  4748  010740  0A00               	xorlw	0	; case 0
  4749  010742  B4D8               	btfsc	status,2,c
  4750  010744  D10F               	goto	l8976
  4751  010746  0A64               	xorlw	100	; case 100
  4752  010748  B4D8               	btfsc	status,2,c
  4753  01074A  D007               	goto	l8898
  4754  01074C  0A0D               	xorlw	13	; case 105
  4755  01074E  B4D8               	btfsc	status,2,c
  4756  010750  D004               	goto	l8898
  4757  010752  0A1A               	xorlw	26	; case 115
  4758  010754  B4D8               	btfsc	status,2,c
  4759  010756  D760               	goto	l8860
  4760  010758  D0F5               	goto	l8974
  4761  01075A                     l8898:
  4762                           
  4763                           ;doprnt.c: 1253: {
  4764                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4765  01075A  C088  FFD9         	movff	sprintf@ap,fsr2l
  4766  01075E  C089  FFDA         	movff	sprintf@ap+1,fsr2h
  4767  010762  CFDE F08C          	movff	postinc2,sprintf@val
  4768  010766  CFDD F08D          	movff	postdec2,sprintf@val+1
  4769  01076A  0E02               	movlw	2
  4770  01076C  0100               	movlb	0	; () banked
  4771  01076E  2788               	addwf	sprintf@ap& (0+255),f,b
  4772  010770  0E00               	movlw	0
  4773  010772  2389               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;doprnt.c: 1261: if((int)val < 0) {
  4777  010774  0100               	movlb	0	; () banked
  4778  010776  AF8D               	btfss	(sprintf@val+1)& (0+255),7,b
  4779  010778  D008               	goto	l8908
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;doprnt.c: 1262: flag |= 0x03;
  4783  01077A  0E03               	movlw	3
  4784  01077C  0100               	movlb	0	; () banked
  4785  01077E  1390               	iorwf	sprintf@flag& (0+255),f,b
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;doprnt.c: 1263: val = -val;
  4789  010780  0100               	movlb	0	; () banked
  4790  010782  6D8C               	negf	sprintf@val& (0+255),b
  4791  010784  1F8D               	comf	(sprintf@val+1)& (0+255),f,b
  4792  010786  B0D8               	btfsc	status,0,c
  4793  010788  2B8D               	incf	(sprintf@val+1)& (0+255),f,b
  4794  01078A                     l8908:
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;doprnt.c: 1264: }
  4798                           ;doprnt.c: 1266: }
  4799                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4800  01078A  0E01               	movlw	1
  4801  01078C  0100               	movlb	0	; () banked
  4802  01078E  6F91               	movwf	sprintf@c& (0+255),b
  4803  010790                     l8910:
  4804                           
  4805                           ; BSR set to: 0
  4806  010790  0E05               	movlw	5
  4807  010792  0100               	movlb	0	; () banked
  4808  010794  1991               	xorwf	sprintf@c& (0+255),w,b
  4809  010796  B4D8               	btfsc	status,2,c
  4810  010798  D019               	goto	l8922
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;doprnt.c: 1306: if(val < dpowers[c])
  4814                           
  4815                           ; BSR set to: 0
  4816                           
  4817                           ; BSR set to: 0
  4818  01079A  0100               	movlb	0	; () banked
  4819  01079C  5191               	movf	sprintf@c& (0+255),w,b
  4820  01079E  0D02               	mullw	2
  4821  0107A0  0EF9               	movlw	low _dpowers
  4822  0107A2  24F3               	addwf	prodl,w,c
  4823  0107A4  6EF6               	movwf	tblptrl,c
  4824  0107A6  0EFC               	movlw	high _dpowers
  4825  0107A8  20F4               	addwfc	prodh,w,c
  4826  0107AA  6EF7               	movwf	tblptrh,c
  4827  0107AC                     	if	1	;There are 3 active tblptr bytes
  4828  0107AC  6AF8               	clrf	tblptru,c
  4829  0107AE  0E00               	movlw	low (__mediumconst shr (0+16))
  4830  0107B0  22F8               	addwfc	tblptru,f,c
  4831  0107B2                     	endif
  4832  0107B2  0009               	tblrd		*+
  4833  0107B4  50F5               	movf	tablat,w,c
  4834  0107B6  0100               	movlb	0	; () banked
  4835  0107B8  5D8C               	subwf	sprintf@val& (0+255),w,b
  4836  0107BA  0009               	tblrd		*+
  4837  0107BC  50F5               	movf	tablat,w,c
  4838  0107BE  0100               	movlb	0	; () banked
  4839  0107C0  598D               	subwfb	(sprintf@val+1)& (0+255),w,b
  4840  0107C2  A0D8               	btfss	status,0,c
  4841  0107C4  D003               	goto	l8922
  4842                           
  4843                           ; BSR set to: 0
  4844                           
  4845                           ; BSR set to: 0
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;doprnt.c: 1307: break;
  4849  0107C6  0100               	movlb	0	; () banked
  4850  0107C8  2B91               	incf	sprintf@c& (0+255),f,b
  4851  0107CA  D7E2               	goto	l8910
  4852  0107CC                     l8922:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4856  0107CC  0100               	movlb	0	; () banked
  4857  0107CE  5192               	movf	sprintf@width& (0+255),w,b
  4858  0107D0  0100               	movlb	0	; () banked
  4859  0107D2  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  4860  0107D4  B4D8               	btfsc	status,2,c
  4861  0107D6  D00B               	goto	l8928
  4862                           
  4863                           ; BSR set to: 0
  4864  0107D8  C090  F083         	movff	sprintf@flag,??_sprintf
  4865  0107DC  0E03               	movlw	3
  4866  0107DE  0100               	movlb	0	; () banked
  4867  0107E0  1783               	andwf	??_sprintf& (0+255),f,b
  4868  0107E2  B4D8               	btfsc	status,2,c
  4869  0107E4  D004               	goto	l8928
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;doprnt.c: 1346: width--;
  4873  0107E6  0100               	movlb	0	; () banked
  4874  0107E8  0792               	decf	sprintf@width& (0+255),f,b
  4875  0107EA  A0D8               	btfss	status,0,c
  4876  0107EC  0793               	decf	(sprintf@width+1)& (0+255),f,b
  4877  0107EE                     l8928:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;doprnt.c: 1381: if(width > c)
  4881  0107EE  0E80               	movlw	128
  4882  0107F0  0100               	movlb	0	; () banked
  4883  0107F2  BF91               	btfsc	sprintf@c& (0+255),7,b
  4884  0107F4  0E7F               	movlw	127
  4885  0107F6  0100               	movlb	0	; () banked
  4886  0107F8  6F83               	movwf	??_sprintf& (0+255),b
  4887  0107FA  0100               	movlb	0	; () banked
  4888  0107FC  5192               	movf	sprintf@width& (0+255),w,b
  4889  0107FE  0100               	movlb	0	; () banked
  4890  010800  5D91               	subwf	sprintf@c& (0+255),w,b
  4891  010802  0100               	movlb	0	; () banked
  4892  010804  5193               	movf	(sprintf@width+1)& (0+255),w,b
  4893  010806  0A80               	xorlw	128
  4894  010808  0100               	movlb	0	; () banked
  4895  01080A  5983               	subwfb	??_sprintf& (0+255),w,b
  4896  01080C  B0D8               	btfsc	status,0,c
  4897  01080E  D00B               	goto	l8932
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;doprnt.c: 1382: width -= c;
  4901  010810  0100               	movlb	0	; () banked
  4902  010812  5191               	movf	sprintf@c& (0+255),w,b
  4903  010814  0100               	movlb	0	; () banked
  4904  010816  5F92               	subwf	sprintf@width& (0+255),f,b
  4905  010818  0E00               	movlw	0
  4906  01081A  0100               	movlb	0	; () banked
  4907  01081C  BF91               	btfsc	sprintf@c& (0+255),7,b
  4908  01081E  0EFF               	movlw	255
  4909  010820  0100               	movlb	0	; () banked
  4910  010822  5B93               	subwfb	(sprintf@width+1)& (0+255),f,b
  4911  010824  D005               	goto	l8934
  4912  010826                     l8932:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;doprnt.c: 1383: else
  4916                           ;doprnt.c: 1384: width = 0;
  4917  010826  0E00               	movlw	0
  4918  010828  0100               	movlb	0	; () banked
  4919  01082A  6F93               	movwf	(sprintf@width+1)& (0+255),b
  4920  01082C  0E00               	movlw	0
  4921  01082E  6F92               	movwf	sprintf@width& (0+255),b
  4922  010830                     l8934:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;doprnt.c: 1387: if(flag & 0x04) {
  4926  010830  0100               	movlb	0	; () banked
  4927  010832  A590               	btfss	sprintf@flag& (0+255),2,b
  4928  010834  D024               	goto	l8950
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;doprnt.c: 1392: if(flag & 0x03)
  4932  010836  C090  F083         	movff	sprintf@flag,??_sprintf
  4933  01083A  0E03               	movlw	3
  4934  01083C  0100               	movlb	0	; () banked
  4935  01083E  1783               	andwf	??_sprintf& (0+255),f,b
  4936  010840  B4D8               	btfsc	status,2,c
  4937  010842  D009               	goto	l8942
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4941  010844  C071  FFD9         	movff	sprintf@sp,fsr2l
  4942  010848  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4943  01084C  0E2D               	movlw	45
  4944  01084E  6EDF               	movwf	indf2,c
  4945                           
  4946                           ; BSR set to: 0
  4947  010850  0100               	movlb	0	; () banked
  4948  010852  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4949  010854  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4950  010856                     l8942:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;doprnt.c: 1415: if(width)
  4954  010856  0100               	movlb	0	; () banked
  4955  010858  5192               	movf	sprintf@width& (0+255),w,b
  4956  01085A  0100               	movlb	0	; () banked
  4957  01085C  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  4958  01085E  B4D8               	btfsc	status,2,c
  4959  010860  D037               	goto	l8964
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4963                           
  4964                           ; BSR set to: 0
  4965                           
  4966                           ;doprnt.c: 1416: do
  4967  010862  C071  FFD9         	movff	sprintf@sp,fsr2l
  4968  010866  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4969  01086A  0E30               	movlw	48
  4970  01086C  6EDF               	movwf	indf2,c
  4971                           
  4972                           ; BSR set to: 0
  4973  01086E  0100               	movlb	0	; () banked
  4974  010870  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4975  010872  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;doprnt.c: 1418: while(--width);
  4979  010874  0100               	movlb	0	; () banked
  4980  010876  0792               	decf	sprintf@width& (0+255),f,b
  4981  010878  A0D8               	btfss	status,0,c
  4982  01087A  0793               	decf	(sprintf@width+1)& (0+255),f,b
  4983  01087C  D7EC               	goto	l8942
  4984  01087E                     l8950:
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;doprnt.c: 1422: {
  4988                           ;doprnt.c: 1424: if(width
  4989                           ;doprnt.c: 1428: )
  4990  01087E  0100               	movlb	0	; () banked
  4991  010880  5192               	movf	sprintf@width& (0+255),w,b
  4992  010882  0100               	movlb	0	; () banked
  4993  010884  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  4994  010886  B4D8               	btfsc	status,2,c
  4995  010888  D013               	goto	l8958
  4996  01088A                     l8952:
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5000  01088A  C071  FFD9         	movff	sprintf@sp,fsr2l
  5001  01088E  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  5002  010892  0E20               	movlw	32
  5003  010894  6EDF               	movwf	indf2,c
  5004                           
  5005                           ; BSR set to: 0
  5006  010896  0100               	movlb	0	; () banked
  5007  010898  4B71               	infsnz	sprintf@sp& (0+255),f,b
  5008  01089A  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;doprnt.c: 1431: while(--width);
  5012  01089C  0100               	movlb	0	; () banked
  5013  01089E  0792               	decf	sprintf@width& (0+255),f,b
  5014  0108A0  A0D8               	btfss	status,0,c
  5015  0108A2  0793               	decf	(sprintf@width+1)& (0+255),f,b
  5016  0108A4  0100               	movlb	0	; () banked
  5017  0108A6  5192               	movf	sprintf@width& (0+255),w,b
  5018  0108A8  0100               	movlb	0	; () banked
  5019  0108AA  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  5020  0108AC  A4D8               	btfss	status,2,c
  5021  0108AE  D7ED               	goto	l8952
  5022  0108B0                     l8958:
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;doprnt.c: 1438: if(flag & 0x03)
  5026  0108B0  C090  F083         	movff	sprintf@flag,??_sprintf
  5027  0108B4  0E03               	movlw	3
  5028  0108B6  0100               	movlb	0	; () banked
  5029  0108B8  1783               	andwf	??_sprintf& (0+255),f,b
  5030  0108BA  B4D8               	btfsc	status,2,c
  5031  0108BC  D009               	goto	l8964
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5035  0108BE  C071  FFD9         	movff	sprintf@sp,fsr2l
  5036  0108C2  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  5037  0108C6  0E2D               	movlw	45
  5038  0108C8  6EDF               	movwf	indf2,c
  5039                           
  5040                           ; BSR set to: 0
  5041  0108CA  0100               	movlb	0	; () banked
  5042  0108CC  4B71               	infsnz	sprintf@sp& (0+255),f,b
  5043  0108CE  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  5044  0108D0                     l8964:
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;doprnt.c: 1469: }
  5048                           ;doprnt.c: 1472: prec = c;
  5049  0108D0  C091  F087         	movff	sprintf@c,sprintf@prec
  5050                           
  5051                           ;doprnt.c: 1474: while(prec--) {
  5052  0108D4  D031               	goto	l8972
  5053  0108D6                     l8966:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;doprnt.c: 1478: {
  5057                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5058  0108D6  0100               	movlb	0	; () banked
  5059  0108D8  5187               	movf	sprintf@prec& (0+255),w,b
  5060  0108DA  0D02               	mullw	2
  5061  0108DC  0EF9               	movlw	low _dpowers
  5062  0108DE  24F3               	addwf	prodl,w,c
  5063  0108E0  6EF6               	movwf	tblptrl,c
  5064  0108E2  0EFC               	movlw	high _dpowers
  5065  0108E4  20F4               	addwfc	prodh,w,c
  5066  0108E6  6EF7               	movwf	tblptrh,c
  5067  0108E8                     	if	1	;There are 3 active tblptr bytes
  5068  0108E8  6AF8               	clrf	tblptru,c
  5069  0108EA  0E00               	movlw	low (__mediumconst shr (0+16))
  5070  0108EC  22F8               	addwfc	tblptru,f,c
  5071  0108EE                     	endif
  5072  0108EE  0009               	tblrd		*+
  5073  0108F0  CFF5 F068          	movff	tablat,___lwdiv@divisor
  5074  0108F4  000A               	tblrd		*-
  5075  0108F6  CFF5 F069          	movff	tablat,___lwdiv@divisor+1
  5076  0108FA  C08C  F066         	movff	sprintf@val,___lwdiv@dividend
  5077  0108FE  C08D  F067         	movff	sprintf@val+1,___lwdiv@dividend+1
  5078  010902  EC21  F095         	call	___lwdiv	;wreg free
  5079  010906  C066  F06D         	movff	?___lwdiv,___lwmod@dividend
  5080  01090A  C067  F06E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5081  01090E  0E00               	movlw	0
  5082  010910  0100               	movlb	0	; () banked
  5083  010912  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5084  010914  0E0A               	movlw	10
  5085  010916  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5086  010918  EC66  F096         	call	___lwmod	;wreg free
  5087  01091C  0100               	movlb	0	; () banked
  5088  01091E  516D               	movf	?___lwmod& (0+255),w,b
  5089  010920  0F30               	addlw	48
  5090  010922  0100               	movlb	0	; () banked
  5091  010924  6F91               	movwf	sprintf@c& (0+255),b
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;doprnt.c: 1523: }
  5095                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5096  010926  C071  FFD9         	movff	sprintf@sp,fsr2l
  5097  01092A  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  5098  01092E  C091  FFDF         	movff	sprintf@c,indf2
  5099                           
  5100                           ; BSR set to: 0
  5101  010932  0100               	movlb	0	; () banked
  5102  010934  4B71               	infsnz	sprintf@sp& (0+255),f,b
  5103  010936  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  5104  010938                     l8972:
  5105                           
  5106                           ; BSR set to: 0
  5107  010938  0100               	movlb	0	; () banked
  5108  01093A  0787               	decf	sprintf@prec& (0+255),f,b
  5109  01093C  0100               	movlb	0	; () banked
  5110  01093E  2987               	incf	sprintf@prec& (0+255),w,b
  5111  010940  A4D8               	btfss	status,2,c
  5112  010942  D7C9               	goto	l8966
  5113  010944                     l8974:
  5114                           
  5115                           ; BSR set to: 0
  5116  010944  C073  FFF6         	movff	sprintf@f,tblptrl
  5117  010948  C074  FFF7         	movff	sprintf@f+1,tblptrh
  5118  01094C  0100               	movlb	0	; () banked
  5119  01094E  4B73               	infsnz	sprintf@f& (0+255),f,b
  5120  010950  2B74               	incf	(sprintf@f+1)& (0+255),f,b
  5121  010952                     	if	0	;tblptru may be non-zero
  5122  010952                     	endif
  5123  010952                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5124  010952  0E00               	movlw	low (__mediumconst shr (0+16))
  5125  010954  6EF8               	movwf	tblptru,c
  5126  010956                     	endif
  5127  010956  0008               	tblrd		*
  5128  010958  CFF5 F091          	movff	tablat,sprintf@c
  5129  01095C  0100               	movlb	0	; () banked
  5130  01095E  5191               	movf	sprintf@c& (0+255),w,b
  5131  010960  A4D8               	btfss	status,2,c
  5132  010962  D5E1               	goto	l8834
  5133  010964                     l8976:
  5134                           
  5135                           ;doprnt.c: 1538: *sp = 0;
  5136  010964  C071  FFD9         	movff	sprintf@sp,fsr2l
  5137  010968  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  5138  01096C  0E00               	movlw	0
  5139  01096E  6EDF               	movwf	indf2,c
  5140  010970  0012               	return	
  5141  010972                     __end_of_sprintf:
  5142                           	opt stack 0
  5143                           tblptru	equ	0xFF8
  5144                           tblptrh	equ	0xFF7
  5145                           tblptrl	equ	0xFF6
  5146                           tablat	equ	0xFF5
  5147                           prodh	equ	0xFF4
  5148                           prodl	equ	0xFF3
  5149                           intcon	equ	0xFF2
  5150                           postinc0	equ	0xFEE
  5151                           wreg	equ	0xFE8
  5152                           postdec1	equ	0xFE5
  5153                           fsr1h	equ	0xFE2
  5154                           fsr1l	equ	0xFE1
  5155                           indf2	equ	0xFDF
  5156                           postinc2	equ	0xFDE
  5157                           postdec2	equ	0xFDD
  5158                           fsr2h	equ	0xFDA
  5159                           fsr2l	equ	0xFD9
  5160                           status	equ	0xFD8
  5161                           
  5162 ;; *************** function _ringbuf_put_str *****************
  5163 ;; Defined at:
  5164 ;;		line 39 in file "../My_library/My_ringbuf.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5167 ;;		 -> uart_tx(8), 
  5168 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  5169 ;;		 -> terminal_operation@str(30), STR_43(315), STR_24(8), print_time@str(30), 
  5170 ;;		 -> STR_22(3), print_time_dec@str(10), STR_20(4), STR_19(4), 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;		None               void
  5175 ;; Registers used:
  5176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5182 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5185 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;Total ram usage:        4 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    6
  5189 ;; This function calls:
  5190 ;;		_ringbuf_put
  5191 ;; This function is called by:
  5192 ;;		_terminal_task
  5193 ;;		_print_time
  5194 ;;		_terminal_at_hand
  5195 ;;		_terminal_operation
  5196 ;;		_print_time_dec
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text7
  5201  012C06                     __ptext7:
  5202                           	opt stack 0
  5203  012C06                     _ringbuf_put_str:
  5204                           	opt stack 20
  5205                           
  5206                           ;My_ringbuf.c: 40: while (*str) {
  5207                           
  5208                           ;incstack = 0
  5209  012C06  D01C               	goto	l8746
  5210  012C08                     l8742:
  5211                           
  5212                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  5213  012C08  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5214  012C0C  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5215  012C10  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5216  012C14  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5217  012C18  0E00               	movlw	low (__mediumconst shr (0+16))
  5218  012C1A  6EF8               	movwf	tblptru,c
  5219  012C1C  0E0E               	movlw	(high __ramtop+-1)
  5220  012C1E  64F7               	cpfsgt	tblptrh,c
  5221  012C20  D003               	bra	u8777
  5222  012C22  0008               	tblrd		*
  5223  012C24  50F5               	movf	tablat,w,c
  5224  012C26  D005               	bra	u8770
  5225  012C28                     u8777:
  5226  012C28  CFF6 FFE9          	movff	tblptrl,fsr0l
  5227  012C2C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5228  012C30  50EF               	movf	indf0,w,c
  5229  012C32                     u8770:
  5230  012C32  0100               	movlb	0	; () banked
  5231  012C34  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5232  012C36  EC6C  F08F         	call	_ringbuf_put	;wreg free
  5233  012C3A  0100               	movlb	0	; () banked
  5234  012C3C  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  5235  012C3E  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5236  012C40                     l8746:
  5237  012C40  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5238  012C44  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5239  012C48  0E00               	movlw	low (__mediumconst shr (0+16))
  5240  012C4A  6EF8               	movwf	tblptru,c
  5241  012C4C  0E0E               	movlw	(high __ramtop+-1)
  5242  012C4E  64F7               	cpfsgt	tblptrh,c
  5243  012C50  D003               	bra	u8787
  5244  012C52  0008               	tblrd		*
  5245  012C54  50F5               	movf	tablat,w,c
  5246  012C56  D005               	bra	u8780
  5247  012C58                     u8787:
  5248  012C58  CFF6 FFE9          	movff	tblptrl,fsr0l
  5249  012C5C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5250  012C60  50EF               	movf	indf0,w,c
  5251  012C62                     u8780:
  5252  012C62  0900               	iorlw	0
  5253  012C64  B4D8               	btfsc	status,2,c
  5254  012C66  0012               	return	
  5255  012C68  D7CF               	goto	l8742
  5256  012C6A                     __end_of_ringbuf_put_str:
  5257                           	opt stack 0
  5258                           tblptru	equ	0xFF8
  5259                           tblptrh	equ	0xFF7
  5260                           tblptrl	equ	0xFF6
  5261                           tablat	equ	0xFF5
  5262                           prodh	equ	0xFF4
  5263                           prodl	equ	0xFF3
  5264                           intcon	equ	0xFF2
  5265                           indf0	equ	0xFEF
  5266                           postinc0	equ	0xFEE
  5267                           fsr0h	equ	0xFEA
  5268                           fsr0l	equ	0xFE9
  5269                           wreg	equ	0xFE8
  5270                           postdec1	equ	0xFE5
  5271                           fsr1h	equ	0xFE2
  5272                           fsr1l	equ	0xFE1
  5273                           indf2	equ	0xFDF
  5274                           postinc2	equ	0xFDE
  5275                           postdec2	equ	0xFDD
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8
  5279                           
  5280 ;; *************** function _RTCC_from_caltime *****************
  5281 ;; Defined at:
  5282 ;;		line 204 in file "../My_library/My_RTCC.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  tm              2   47[BANK0 ] PTR struct .
  5285 ;;		 -> now(14), 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;		None               void
  5290 ;; Registers used:
  5291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5297 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5300 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5301 ;;Total ram usage:        2 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    7
  5304 ;; This function calls:
  5305 ;;		_caltime_to_RTCC
  5306 ;;		_caltime_to_epoch
  5307 ;;		_epoch_to_caltime
  5308 ;; This function is called by:
  5309 ;;		_terminal_at_hand
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text8
  5314  012F8C                     __ptext8:
  5315                           	opt stack 0
  5316  012F8C                     _RTCC_from_caltime:
  5317                           	opt stack 19
  5318                           
  5319                           ;My_RTCC.c: 205: caltime_to_epoch(tm);
  5320                           
  5321                           ;incstack = 0
  5322  012F8C  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5323  012F90  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5324  012F94  EC44  F088         	call	_caltime_to_epoch	;wreg free
  5325                           
  5326                           ;My_RTCC.c: 206: epoch_to_caltime(tm);
  5327  012F98  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5328  012F9C  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5329  012FA0  ECD8  F08B         	call	_epoch_to_caltime	;wreg free
  5330                           
  5331                           ;My_RTCC.c: 207: caltime_to_RTCC(tm);
  5332  012FA4  C08F  F076         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5333  012FA8  C090  F077         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5334  012FAC  EC01  F08F         	call	_caltime_to_RTCC	;wreg free
  5335  012FB0  0012               	return		;funcret
  5336  012FB2                     __end_of_RTCC_from_caltime:
  5337                           	opt stack 0
  5338                           tblptru	equ	0xFF8
  5339                           tblptrh	equ	0xFF7
  5340                           tblptrl	equ	0xFF6
  5341                           tablat	equ	0xFF5
  5342                           prodh	equ	0xFF4
  5343                           prodl	equ	0xFF3
  5344                           intcon	equ	0xFF2
  5345                           indf0	equ	0xFEF
  5346                           postinc0	equ	0xFEE
  5347                           fsr0h	equ	0xFEA
  5348                           fsr0l	equ	0xFE9
  5349                           wreg	equ	0xFE8
  5350                           postdec1	equ	0xFE5
  5351                           fsr1h	equ	0xFE2
  5352                           fsr1l	equ	0xFE1
  5353                           indf2	equ	0xFDF
  5354                           postinc2	equ	0xFDE
  5355                           postdec2	equ	0xFDD
  5356                           fsr2h	equ	0xFDA
  5357                           fsr2l	equ	0xFD9
  5358                           status	equ	0xFD8
  5359                           
  5360 ;; *************** function _strcmp *****************
  5361 ;; Defined at:
  5362 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5365 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5366 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5367 ;;		 -> STR_61(6), STR_60(2), STR_59(2), STR_58(2), 
  5368 ;;		 -> STR_57(2), STR_56(2), STR_55(2), STR_54(2), 
  5369 ;;		 -> STR_53(2), STR_52(4), STR_51(4), STR_50(4), 
  5370 ;;		 -> STR_49(4), STR_48(5), STR_47(4), STR_45(3), 
  5371 ;;		 -> STR_44(9), STR_42(2), STR_41(5), STR_40(7), 
  5372 ;;		 -> STR_39(2), STR_38(7), STR_37(2), STR_36(5), 
  5373 ;;		 -> STR_35(2), STR_34(4), STR_33(2), STR_32(6), 
  5374 ;;		 -> STR_31(2), STR_30(5), STR_29(2), STR_28(12), 
  5375 ;;		 -> STR_27(3), STR_26(2), STR_25(11), 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  r               1    4[BANK0 ] char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  2    0[BANK0 ] int 
  5380 ;; Registers used:
  5381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5390 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5391 ;;Total ram usage:        6 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    4
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		_terminal_time
  5398 ;;		_terminal_operation
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text9
  5403  012D28                     __ptext9:
  5404                           	opt stack 0
  5405  012D28                     _strcmp:
  5406                           	opt stack 23
  5407                           
  5408                           ;incstack = 0
  5409  012D28  D006               	goto	l9008
  5410  012D2A                     l9006:
  5411  012D2A  0100               	movlb	0	; () banked
  5412  012D2C  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5413  012D2E  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5414  012D30  0100               	movlb	0	; () banked
  5415  012D32  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5416  012D34  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5417  012D36                     l9008:
  5418  012D36  C060  FFD9         	movff	strcmp@s1,fsr2l
  5419  012D3A  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5420  012D3E  50DF               	movf	indf2,w,c
  5421  012D40  6E20               	movwf	??_strcmp& (0+255),c
  5422  012D42  C062  FFF6         	movff	strcmp@s2,tblptrl
  5423  012D46  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5424  012D4A                     	if	0	;tblptru may be non-zero
  5425  012D4A                     	endif
  5426  012D4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5427  012D4A  0E00               	movlw	low (__mediumconst shr (0+16))
  5428  012D4C  6EF8               	movwf	tblptru,c
  5429  012D4E                     	endif
  5430  012D4E  0008               	tblrd		*
  5431  012D50  50F5               	movf	tablat,w,c
  5432  012D52  0800               	sublw	0
  5433  012D54  2420               	addwf	??_strcmp,w,c
  5434  012D56  0100               	movlb	0	; () banked
  5435  012D58  6F64               	movwf	strcmp@r& (0+255),b
  5436  012D5A  0100               	movlb	0	; () banked
  5437  012D5C  5164               	movf	strcmp@r& (0+255),w,b
  5438  012D5E  A4D8               	btfss	status,2,c
  5439  012D60  D007               	goto	l9012
  5440                           
  5441                           ; BSR set to: 0
  5442  012D62  C060  FFD9         	movff	strcmp@s1,fsr2l
  5443  012D66  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5444  012D6A  50DF               	movf	indf2,w,c
  5445  012D6C  A4D8               	btfss	status,2,c
  5446  012D6E  D7DD               	goto	l9006
  5447  012D70                     l9012:
  5448                           
  5449                           ; BSR set to: 0
  5450  012D70  0100               	movlb	0	; () banked
  5451  012D72  5164               	movf	strcmp@r& (0+255),w,b
  5452  012D74  0100               	movlb	0	; () banked
  5453  012D76  6F60               	movwf	?_strcmp& (0+255),b
  5454  012D78  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5455  012D7A  BF60               	btfsc	?_strcmp& (0+255),7,b
  5456  012D7C  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5457  012D7E  0012               	return	
  5458  012D80                     __end_of_strcmp:
  5459                           	opt stack 0
  5460                           tblptru	equ	0xFF8
  5461                           tblptrh	equ	0xFF7
  5462                           tblptrl	equ	0xFF6
  5463                           tablat	equ	0xFF5
  5464                           prodh	equ	0xFF4
  5465                           prodl	equ	0xFF3
  5466                           intcon	equ	0xFF2
  5467                           indf0	equ	0xFEF
  5468                           postinc0	equ	0xFEE
  5469                           fsr0h	equ	0xFEA
  5470                           fsr0l	equ	0xFE9
  5471                           wreg	equ	0xFE8
  5472                           postdec1	equ	0xFE5
  5473                           fsr1h	equ	0xFE2
  5474                           fsr1l	equ	0xFE1
  5475                           indf2	equ	0xFDF
  5476                           postinc2	equ	0xFDE
  5477                           postdec2	equ	0xFDD
  5478                           fsr2h	equ	0xFDA
  5479                           fsr2l	equ	0xFD9
  5480                           status	equ	0xFD8
  5481                           
  5482 ;; *************** function _atoi *****************
  5483 ;; Defined at:
  5484 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5487 ;;		 -> terminal_task@op2(25), 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  a               2   11[BANK0 ] int 
  5490 ;;  sign            1   10[BANK0 ] unsigned char 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  2    6[BANK0 ] int 
  5493 ;; Registers used:
  5494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5503 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5504 ;;Total ram usage:        7 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    5
  5507 ;; This function calls:
  5508 ;;		___wmul
  5509 ;;		_isdigit
  5510 ;; This function is called by:
  5511 ;;		_terminal_time
  5512 ;;		_terminal_operation
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text10
  5517  011B4A                     __ptext10:
  5518                           	opt stack 0
  5519  011B4A                     _atoi:
  5520                           	opt stack 22
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;incstack = 0
  5524  011B4A  D003               	goto	l9020
  5525  011B4C                     l9018:
  5526  011B4C  0100               	movlb	0	; () banked
  5527  011B4E  4B66               	infsnz	atoi@s& (0+255),f,b
  5528  011B50  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5529  011B52                     l9020:
  5530  011B52  C066  FFD9         	movff	atoi@s,fsr2l
  5531  011B56  C067  FFDA         	movff	atoi@s+1,fsr2h
  5532  011B5A  0E20               	movlw	32
  5533  011B5C  18DE               	xorwf	postinc2,w,c
  5534  011B5E  B4D8               	btfsc	status,2,c
  5535  011B60  D7F5               	goto	l9018
  5536  011B62  C066  FFD9         	movff	atoi@s,fsr2l
  5537  011B66  C067  FFDA         	movff	atoi@s+1,fsr2h
  5538  011B6A  0E09               	movlw	9
  5539  011B6C  18DE               	xorwf	postinc2,w,c
  5540  011B6E  B4D8               	btfsc	status,2,c
  5541  011B70  D7ED               	goto	l9018
  5542  011B72  0E00               	movlw	0
  5543  011B74  0100               	movlb	0	; () banked
  5544  011B76  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5545  011B78  0E00               	movlw	0
  5546  011B7A  6F6B               	movwf	atoi@a& (0+255),b
  5547  011B7C  0E00               	movlw	0
  5548  011B7E  0100               	movlb	0	; () banked
  5549  011B80  6F6A               	movwf	atoi@sign& (0+255),b
  5550                           
  5551                           ; BSR set to: 0
  5552  011B82  C066  FFD9         	movff	atoi@s,fsr2l
  5553  011B86  C067  FFDA         	movff	atoi@s+1,fsr2h
  5554  011B8A  0E2D               	movlw	45
  5555  011B8C  18DE               	xorwf	postinc2,w,c
  5556  011B8E  A4D8               	btfss	status,2,c
  5557  011B90  D003               	goto	l9030
  5558                           
  5559                           ; BSR set to: 0
  5560  011B92  0100               	movlb	0	; () banked
  5561  011B94  2B6A               	incf	atoi@sign& (0+255),f,b
  5562  011B96  D02E               	goto	l9036
  5563  011B98                     l9030:
  5564                           
  5565                           ; BSR set to: 0
  5566  011B98  C066  FFD9         	movff	atoi@s,fsr2l
  5567  011B9C  C067  FFDA         	movff	atoi@s+1,fsr2h
  5568  011BA0  0E2B               	movlw	43
  5569  011BA2  18DE               	xorwf	postinc2,w,c
  5570  011BA4  A4D8               	btfss	status,2,c
  5571  011BA6  D029               	goto	l9038
  5572  011BA8  D025               	goto	l9036
  5573  011BAA                     l9034:
  5574  011BAA  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5575  011BAE  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5576  011BB2  0E00               	movlw	0
  5577  011BB4  0100               	movlb	0	; () banked
  5578  011BB6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5579  011BB8  0E0A               	movlw	10
  5580  011BBA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5581  011BBC  EC6F  F097         	call	___wmul	;wreg free
  5582  011BC0  C066  FFD9         	movff	atoi@s,fsr2l
  5583  011BC4  C067  FFDA         	movff	atoi@s+1,fsr2h
  5584  011BC8  50DF               	movf	indf2,w,c
  5585  011BCA  0100               	movlb	0	; () banked
  5586  011BCC  6F68               	movwf	??_atoi& (0+255),b
  5587  011BCE  6B69               	clrf	(??_atoi+1)& (0+255),b
  5588  011BD0  0100               	movlb	0	; () banked
  5589  011BD2  5160               	movf	?___wmul& (0+255),w,b
  5590  011BD4  0100               	movlb	0	; () banked
  5591  011BD6  2768               	addwf	??_atoi& (0+255),f,b
  5592  011BD8  0100               	movlb	0	; () banked
  5593  011BDA  5161               	movf	(?___wmul+1)& (0+255),w,b
  5594  011BDC  0100               	movlb	0	; () banked
  5595  011BDE  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5596  011BE0  0ED0               	movlw	208
  5597  011BE2  0100               	movlb	0	; () banked
  5598  011BE4  2568               	addwf	??_atoi& (0+255),w,b
  5599  011BE6  0100               	movlb	0	; () banked
  5600  011BE8  6F6B               	movwf	atoi@a& (0+255),b
  5601  011BEA  0EFF               	movlw	255
  5602  011BEC  0100               	movlb	0	; () banked
  5603  011BEE  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5604  011BF0  0100               	movlb	0	; () banked
  5605  011BF2  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5606  011BF4                     l9036:
  5607                           
  5608                           ; BSR set to: 0
  5609  011BF4  0100               	movlb	0	; () banked
  5610  011BF6  4B66               	infsnz	atoi@s& (0+255),f,b
  5611  011BF8  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5612  011BFA                     l9038:
  5613                           
  5614                           ; BSR set to: 0
  5615  011BFA  C066  FFD9         	movff	atoi@s,fsr2l
  5616  011BFE  C067  FFDA         	movff	atoi@s+1,fsr2h
  5617  011C02  50DF               	movf	indf2,w,c
  5618  011C04  EC8A  F097         	call	_isdigit
  5619  011C08  B0D8               	btfsc	status,0,c
  5620  011C0A  D7CF               	goto	l9034
  5621  011C0C  0100               	movlb	0	; () banked
  5622  011C0E  516A               	movf	atoi@sign& (0+255),w,b
  5623  011C10  0100               	movlb	0	; () banked
  5624  011C12  B4D8               	btfsc	status,2,c
  5625  011C14  D00E               	goto	l1830
  5626                           
  5627                           ; BSR set to: 0
  5628  011C16  C06B  F068         	movff	atoi@a,??_atoi
  5629  011C1A  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5630  011C1E  0100               	movlb	0	; () banked
  5631  011C20  1F68               	comf	??_atoi& (0+255),f,b
  5632  011C22  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5633  011C24  4B68               	infsnz	??_atoi& (0+255),f,b
  5634  011C26  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5635  011C28  C068  F066         	movff	??_atoi,?_atoi
  5636  011C2C  C069  F067         	movff	??_atoi+1,?_atoi+1
  5637  011C30  0012               	return	
  5638  011C32                     l1830:
  5639                           
  5640                           ; BSR set to: 0
  5641  011C32  C06B  F066         	movff	atoi@a,?_atoi
  5642  011C36  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5643                           
  5644                           ; BSR set to: 0
  5645  011C3A  0012               	return		;funcret
  5646  011C3C                     __end_of_atoi:
  5647                           	opt stack 0
  5648                           tblptru	equ	0xFF8
  5649                           tblptrh	equ	0xFF7
  5650                           tblptrl	equ	0xFF6
  5651                           tablat	equ	0xFF5
  5652                           prodh	equ	0xFF4
  5653                           prodl	equ	0xFF3
  5654                           intcon	equ	0xFF2
  5655                           indf0	equ	0xFEF
  5656                           postinc0	equ	0xFEE
  5657                           fsr0h	equ	0xFEA
  5658                           fsr0l	equ	0xFE9
  5659                           wreg	equ	0xFE8
  5660                           postdec1	equ	0xFE5
  5661                           fsr1h	equ	0xFE2
  5662                           fsr1l	equ	0xFE1
  5663                           indf2	equ	0xFDF
  5664                           postinc2	equ	0xFDE
  5665                           postdec2	equ	0xFDD
  5666                           fsr2h	equ	0xFDA
  5667                           fsr2l	equ	0xFD9
  5668                           status	equ	0xFD8
  5669                           
  5670 ;; *************** function _isdigit *****************
  5671 ;; Defined at:
  5672 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  c               1    wreg     unsigned char 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  c               1    1[BANK0 ] unsigned char 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;		None               void
  5679 ;; Registers used:
  5680 ;;		wreg, status,2, status,0
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5687 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5689 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5690 ;;Total ram usage:        3 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    4
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_sprintf
  5697 ;;		_atoi
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text11
  5702  012F14                     __ptext11:
  5703                           	opt stack 0
  5704  012F14                     _isdigit:
  5705                           	opt stack 20
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;incstack = 0
  5709                           ;isdigit@c stored from wreg
  5710  012F14  0100               	movlb	0	; () banked
  5711  012F16  6F61               	movwf	isdigit@c& (0+255),b
  5712  012F18  0E00               	movlw	0
  5713  012F1A  0100               	movlb	0	; () banked
  5714  012F1C  6F60               	movwf	_isdigit$6298& (0+255),b
  5715                           
  5716                           ; BSR set to: 0
  5717  012F1E  0E3A               	movlw	58
  5718  012F20  0100               	movlb	0	; () banked
  5719  012F22  6161               	cpfslt	isdigit@c& (0+255),b
  5720  012F24  D007               	goto	l8692
  5721                           
  5722                           ; BSR set to: 0
  5723  012F26  0E2F               	movlw	47
  5724  012F28  0100               	movlb	0	; () banked
  5725  012F2A  6561               	cpfsgt	isdigit@c& (0+255),b
  5726  012F2C  D003               	goto	l8692
  5727                           
  5728                           ; BSR set to: 0
  5729  012F2E  0E01               	movlw	1
  5730  012F30  0100               	movlb	0	; () banked
  5731  012F32  6F60               	movwf	_isdigit$6298& (0+255),b
  5732  012F34                     l8692:
  5733                           
  5734                           ; BSR set to: 0
  5735  012F34  C060  F020         	movff	_isdigit$6298,??_isdigit
  5736  012F38  3020               	rrcf	??_isdigit,w,c
  5737  012F3A  0012               	return	
  5738  012F3C                     __end_of_isdigit:
  5739                           	opt stack 0
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           prodh	equ	0xFF4
  5745                           prodl	equ	0xFF3
  5746                           intcon	equ	0xFF2
  5747                           indf0	equ	0xFEF
  5748                           postinc0	equ	0xFEE
  5749                           fsr0h	equ	0xFEA
  5750                           fsr0l	equ	0xFE9
  5751                           wreg	equ	0xFE8
  5752                           postdec1	equ	0xFE5
  5753                           fsr1h	equ	0xFE2
  5754                           fsr1l	equ	0xFE1
  5755                           indf2	equ	0xFDF
  5756                           postinc2	equ	0xFDE
  5757                           postdec2	equ	0xFDD
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function _ringbuf_put_num *****************
  5763 ;; Defined at:
  5764 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  rb              2   17[BANK0 ] PTR struct ringbuf
  5767 ;;		 -> uart_tx(8), 
  5768 ;;  value           2   19[BANK0 ] const unsigned int 
  5769 ;;  digits          1   21[BANK0 ] unsigned char 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  i               1   22[BANK0 ] unsigned char 
  5772 ;;  temp            2   23[BANK0 ] unsigned int 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;		None               void
  5775 ;; Registers used:
  5776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5782 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5783 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;Total ram usage:        8 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    6
  5789 ;; This function calls:
  5790 ;;		___lwdiv
  5791 ;;		___lwmod
  5792 ;;		_ringbuf_put
  5793 ;; This function is called by:
  5794 ;;		_terminal_task
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text12
  5799  0129C0                     __ptext12:
  5800                           	opt stack 0
  5801  0129C0                     _ringbuf_put_num:
  5802                           	opt stack 23
  5803                           
  5804                           ;My_ringbuf.c: 29: while (digits--) {
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;incstack = 0
  5808  0129C0  D039               	goto	l9226
  5809  0129C2                     l774:
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5813  0129C2  C073  F077         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5814  0129C6  C074  F078         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5818  0129CA  0E00               	movlw	0
  5819  0129CC  0100               	movlb	0	; () banked
  5820  0129CE  6F76               	movwf	ringbuf_put_num@i& (0+255),b
  5821  0129D0  D011               	goto	l9220
  5822  0129D2                     l9216:
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;My_ringbuf.c: 32: temp /= 10;
  5826  0129D2  C077  F066         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5827  0129D6  C078  F067         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5828  0129DA  0E00               	movlw	0
  5829  0129DC  0100               	movlb	0	; () banked
  5830  0129DE  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5831  0129E0  0E0A               	movlw	10
  5832  0129E2  6F68               	movwf	___lwdiv@divisor& (0+255),b
  5833  0129E4  EC21  F095         	call	___lwdiv	;wreg free
  5834  0129E8  C066  F077         	movff	?___lwdiv,ringbuf_put_num@temp
  5835  0129EC  C067  F078         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5836  0129F0  0100               	movlb	0	; () banked
  5837  0129F2  2B76               	incf	ringbuf_put_num@i& (0+255),f,b
  5838  0129F4                     l9220:
  5839                           
  5840                           ; BSR set to: 0
  5841  0129F4  0100               	movlb	0	; () banked
  5842  0129F6  5175               	movf	ringbuf_put_num@digits& (0+255),w,b
  5843  0129F8  0100               	movlb	0	; () banked
  5844  0129FA  5D76               	subwf	ringbuf_put_num@i& (0+255),w,b
  5845  0129FC  A0D8               	btfss	status,0,c
  5846  0129FE  D7E9               	goto	l9216
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;My_ringbuf.c: 33: }
  5850                           ;My_ringbuf.c: 34: temp %= 10;
  5851                           
  5852                           ; BSR set to: 0
  5853  012A00  C077  F06D         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5854  012A04  C078  F06E         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5855  012A08  0E00               	movlw	0
  5856  012A0A  0100               	movlb	0	; () banked
  5857  012A0C  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5858  012A0E  0E0A               	movlw	10
  5859  012A10  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5860  012A12  EC66  F096         	call	___lwmod	;wreg free
  5861  012A16  C06D  F077         	movff	?___lwmod,ringbuf_put_num@temp
  5862  012A1A  C06E  F078         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5863                           
  5864                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5865  012A1E  C071  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5866  012A22  C072  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5867  012A26  0100               	movlb	0	; () banked
  5868  012A28  5177               	movf	ringbuf_put_num@temp& (0+255),w,b
  5869  012A2A  0F30               	addlw	48
  5870  012A2C  0100               	movlb	0	; () banked
  5871  012A2E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5872  012A30  EC6C  F08F         	call	_ringbuf_put	;wreg free
  5873  012A34                     l9226:
  5874  012A34  0100               	movlb	0	; () banked
  5875  012A36  0775               	decf	ringbuf_put_num@digits& (0+255),f,b
  5876  012A38  0100               	movlb	0	; () banked
  5877  012A3A  2975               	incf	ringbuf_put_num@digits& (0+255),w,b
  5878  012A3C  B4D8               	btfsc	status,2,c
  5879  012A3E  0012               	return	
  5880  012A40  D7C0               	goto	l774
  5881  012A42                     __end_of_ringbuf_put_num:
  5882                           	opt stack 0
  5883                           tblptru	equ	0xFF8
  5884                           tblptrh	equ	0xFF7
  5885                           tblptrl	equ	0xFF6
  5886                           tablat	equ	0xFF5
  5887                           prodh	equ	0xFF4
  5888                           prodl	equ	0xFF3
  5889                           intcon	equ	0xFF2
  5890                           indf0	equ	0xFEF
  5891                           postinc0	equ	0xFEE
  5892                           fsr0h	equ	0xFEA
  5893                           fsr0l	equ	0xFE9
  5894                           wreg	equ	0xFE8
  5895                           postdec1	equ	0xFE5
  5896                           fsr1h	equ	0xFE2
  5897                           fsr1l	equ	0xFE1
  5898                           indf2	equ	0xFDF
  5899                           postinc2	equ	0xFDE
  5900                           postdec2	equ	0xFDD
  5901                           fsr2h	equ	0xFDA
  5902                           fsr2l	equ	0xFD9
  5903                           status	equ	0xFD8
  5904                           
  5905 ;; *************** function _ringbuf_put *****************
  5906 ;; Defined at:
  5907 ;;		line 20 in file "../My_library/My_ringbuf.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5910 ;;		 -> usb_rx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
  5911 ;;		 -> lcd_tx(8), 
  5912 ;;  asciicode       1   10[BANK0 ] unsigned char 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;		None
  5915 ;; Return value:  Size  Location     Type
  5916 ;;		None               void
  5917 ;; Registers used:
  5918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5924 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5928 ;;Total ram usage:        7 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    5
  5931 ;; This function calls:
  5932 ;;		_ringbuf_num
  5933 ;; This function is called by:
  5934 ;;		_ringbuf_put_num
  5935 ;;		_ringbuf_put_str
  5936 ;;		_terminal_task
  5937 ;;		_ST7032_command
  5938 ;;		_ST7032_put
  5939 ;;		_ST7032_create_char
  5940 ;;		_ST7032_init
  5941 ;;		_USB_task
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text13
  5946  011ED8                     __ptext13:
  5947                           	opt stack 0
  5948  011ED8                     _ringbuf_put:
  5949                           	opt stack 20
  5950                           
  5951                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;incstack = 0
  5955  011ED8  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  5956  011EDC  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  5957  011EE0  EC1E  F08E         	call	_ringbuf_num	;wreg free
  5958  011EE4  0100               	movlb	0	; () banked
  5959  011EE6  EE20 F002          	lfsr	2,2
  5960  011EEA  5168               	movf	ringbuf_put@rb& (0+255),w,b
  5961  011EEC  26D9               	addwf	fsr2l,f,c
  5962  011EEE  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5963  011EF0  22DA               	addwfc	fsr2h,f,c
  5964  011EF2  50DE               	movf	postinc2,w,c
  5965  011EF4  0100               	movlb	0	; () banked
  5966  011EF6  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  5967  011EF8  50DE               	movf	postinc2,w,c
  5968  011EFA  0100               	movlb	0	; () banked
  5969  011EFC  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  5970  011EFE  B0D8               	btfsc	status,0,c
  5971  011F00  0012               	return	
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  5975  011F02  0100               	movlb	0	; () banked
  5976  011F04  EE20 F004          	lfsr	2,4
  5977  011F08  5168               	movf	ringbuf_put@rb& (0+255),w,b
  5978  011F0A  26D9               	addwf	fsr2l,f,c
  5979  011F0C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5980  011F0E  22DA               	addwfc	fsr2h,f,c
  5981  011F10  CFDE F06B          	movff	postinc2,??_ringbuf_put
  5982  011F14  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
  5983  011F18  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
  5984  011F1C  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  5985  011F20  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
  5986  011F24  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
  5987  011F28  0100               	movlb	0	; () banked
  5988  011F2A  516B               	movf	??_ringbuf_put& (0+255),w,b
  5989  011F2C  0100               	movlb	0	; () banked
  5990  011F2E  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  5991  011F30  6ED9               	movwf	fsr2l,c
  5992  011F32  0100               	movlb	0	; () banked
  5993  011F34  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
  5994  011F36  0100               	movlb	0	; () banked
  5995  011F38  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  5996  011F3A  6EDA               	movwf	fsr2h,c
  5997  011F3C  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  6001  011F40  0100               	movlb	0	; () banked
  6002  011F42  EE20 F002          	lfsr	2,2
  6003  011F46  5168               	movf	ringbuf_put@rb& (0+255),w,b
  6004  011F48  26D9               	addwf	fsr2l,f,c
  6005  011F4A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6006  011F4C  22DA               	addwfc	fsr2h,f,c
  6007  011F4E  0100               	movlb	0	; () banked
  6008  011F50  EE10 F004          	lfsr	1,4
  6009  011F54  5168               	movf	ringbuf_put@rb& (0+255),w,b
  6010  011F56  26E1               	addwf	fsr1l,f,c
  6011  011F58  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6012  011F5A  22E2               	addwfc	fsr1h,f,c
  6013  011F5C  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
  6014  011F60  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
  6015  011F64  0E01               	movlw	1
  6016  011F66  0100               	movlb	0	; () banked
  6017  011F68  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  6018  011F6A  0E00               	movlw	0
  6019  011F6C  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  6020  011F6E  50DE               	movf	postinc2,w,c
  6021  011F70  0100               	movlb	0	; () banked
  6022  011F72  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  6023  011F74  50DE               	movf	postinc2,w,c
  6024  011F76  0100               	movlb	0	; () banked
  6025  011F78  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  6026  011F7A  B0D8               	btfsc	status,0,c
  6027  011F7C  D00B               	goto	l8634
  6028                           
  6029                           ; BSR set to: 0
  6030  011F7E  0100               	movlb	0	; () banked
  6031  011F80  EE20 F004          	lfsr	2,4
  6032  011F84  5168               	movf	ringbuf_put@rb& (0+255),w,b
  6033  011F86  26D9               	addwf	fsr2l,f,c
  6034  011F88  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6035  011F8A  22DA               	addwfc	fsr2h,f,c
  6036  011F8C  2ADE               	incf	postinc2,f,c
  6037  011F8E  0E00               	movlw	0
  6038  011F90  22DD               	addwfc	postdec2,f,c
  6039  011F92  0012               	return	
  6040  011F94                     l8634:
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;My_ringbuf.c: 24: else rb->head = 0;
  6044  011F94  0100               	movlb	0	; () banked
  6045  011F96  EE20 F004          	lfsr	2,4
  6046  011F9A  5168               	movf	ringbuf_put@rb& (0+255),w,b
  6047  011F9C  26D9               	addwf	fsr2l,f,c
  6048  011F9E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6049  011FA0  22DA               	addwfc	fsr2h,f,c
  6050  011FA2  0E00               	movlw	0
  6051  011FA4  6EDE               	movwf	postinc2,c
  6052  011FA6  0E00               	movlw	0
  6053  011FA8  6EDD               	movwf	postdec2,c
  6054                           
  6055                           ; BSR set to: 0
  6056  011FAA  0012               	return	
  6057  011FAC                     __end_of_ringbuf_put:
  6058                           	opt stack 0
  6059                           tblptru	equ	0xFF8
  6060                           tblptrh	equ	0xFF7
  6061                           tblptrl	equ	0xFF6
  6062                           tablat	equ	0xFF5
  6063                           prodh	equ	0xFF4
  6064                           prodl	equ	0xFF3
  6065                           intcon	equ	0xFF2
  6066                           indf0	equ	0xFEF
  6067                           postinc0	equ	0xFEE
  6068                           fsr0h	equ	0xFEA
  6069                           fsr0l	equ	0xFE9
  6070                           wreg	equ	0xFE8
  6071                           postinc1	equ	0xFE6
  6072                           postdec1	equ	0xFE5
  6073                           fsr1h	equ	0xFE2
  6074                           fsr1l	equ	0xFE1
  6075                           indf2	equ	0xFDF
  6076                           postinc2	equ	0xFDE
  6077                           postdec2	equ	0xFDD
  6078                           fsr2h	equ	0xFDA
  6079                           fsr2l	equ	0xFD9
  6080                           status	equ	0xFD8
  6081                           
  6082 ;; *************** function ___lwmod *****************
  6083 ;; Defined at:
  6084 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  dividend        2   13[BANK0 ] unsigned int 
  6087 ;;  divisor         2   15[BANK0 ] unsigned int 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  counter         1   31[COMRAM] unsigned char 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  2   13[BANK0 ] unsigned int 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6099 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;Total ram usage:        5 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    4
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_ringbuf_put_num
  6110 ;;		_sprintf
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text14
  6115  012CCC                     __ptext14:
  6116                           	opt stack 0
  6117  012CCC                     ___lwmod:
  6118                           	opt stack 20
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;incstack = 0
  6122  012CCC  0100               	movlb	0	; () banked
  6123  012CCE  516F               	movf	___lwmod@divisor& (0+255),w,b
  6124  012CD0  0100               	movlb	0	; () banked
  6125  012CD2  1170               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6126  012CD4  B4D8               	btfsc	status,2,c
  6127  012CD6  D023               	goto	l2090
  6128                           
  6129                           ; BSR set to: 0
  6130  012CD8  0E01               	movlw	1
  6131  012CDA  6E20               	movwf	___lwmod@counter,c
  6132  012CDC  D005               	goto	l8730
  6133  012CDE                     l8728:
  6134                           
  6135                           ; BSR set to: 0
  6136  012CDE  0100               	movlb	0	; () banked
  6137  012CE0  90D8               	bcf	status,0,c
  6138  012CE2  376F               	rlcf	___lwmod@divisor& (0+255),f,b
  6139  012CE4  3770               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6140  012CE6  2A20               	incf	___lwmod@counter,f,c
  6141  012CE8                     l8730:
  6142                           
  6143                           ; BSR set to: 0
  6144  012CE8  0100               	movlb	0	; () banked
  6145  012CEA  AF70               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6146  012CEC  D7F8               	goto	l8728
  6147  012CEE                     l8732:
  6148                           
  6149                           ; BSR set to: 0
  6150  012CEE  0100               	movlb	0	; () banked
  6151  012CF0  516F               	movf	___lwmod@divisor& (0+255),w,b
  6152  012CF2  0100               	movlb	0	; () banked
  6153  012CF4  5D6D               	subwf	___lwmod@dividend& (0+255),w,b
  6154  012CF6  0100               	movlb	0	; () banked
  6155  012CF8  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6156  012CFA  0100               	movlb	0	; () banked
  6157  012CFC  596E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6158  012CFE  A0D8               	btfss	status,0,c
  6159  012D00  D008               	goto	l8736
  6160                           
  6161                           ; BSR set to: 0
  6162  012D02  0100               	movlb	0	; () banked
  6163  012D04  516F               	movf	___lwmod@divisor& (0+255),w,b
  6164  012D06  0100               	movlb	0	; () banked
  6165  012D08  5F6D               	subwf	___lwmod@dividend& (0+255),f,b
  6166  012D0A  0100               	movlb	0	; () banked
  6167  012D0C  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6168  012D0E  0100               	movlb	0	; () banked
  6169  012D10  5B6E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6170  012D12                     l8736:
  6171                           
  6172                           ; BSR set to: 0
  6173  012D12  0100               	movlb	0	; () banked
  6174  012D14  90D8               	bcf	status,0,c
  6175  012D16  3370               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6176  012D18  336F               	rrcf	___lwmod@divisor& (0+255),f,b
  6177                           
  6178                           ; BSR set to: 0
  6179  012D1A  2E20               	decfsz	___lwmod@counter,f,c
  6180  012D1C  D7E8               	goto	l8732
  6181  012D1E                     l2090:
  6182                           
  6183                           ; BSR set to: 0
  6184  012D1E  C06D  F06D         	movff	___lwmod@dividend,?___lwmod
  6185  012D22  C06E  F06E         	movff	___lwmod@dividend+1,?___lwmod+1
  6186                           
  6187                           ; BSR set to: 0
  6188  012D26  0012               	return		;funcret
  6189  012D28                     __end_of___lwmod:
  6190                           	opt stack 0
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           prodh	equ	0xFF4
  6196                           prodl	equ	0xFF3
  6197                           intcon	equ	0xFF2
  6198                           indf0	equ	0xFEF
  6199                           postinc0	equ	0xFEE
  6200                           fsr0h	equ	0xFEA
  6201                           fsr0l	equ	0xFE9
  6202                           wreg	equ	0xFE8
  6203                           postinc1	equ	0xFE6
  6204                           postdec1	equ	0xFE5
  6205                           fsr1h	equ	0xFE2
  6206                           fsr1l	equ	0xFE1
  6207                           indf2	equ	0xFDF
  6208                           postinc2	equ	0xFDE
  6209                           postdec2	equ	0xFDD
  6210                           fsr2h	equ	0xFDA
  6211                           fsr2l	equ	0xFD9
  6212                           status	equ	0xFD8
  6213                           
  6214 ;; *************** function _ringbuf_pop *****************
  6215 ;; Defined at:
  6216 ;;		line 45 in file "../My_library/My_ringbuf.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6219 ;;		 -> usb_tx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
  6220 ;;		 -> lcd_tx(8), 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  ret             1   31[COMRAM] unsigned char 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      unsigned char 
  6225 ;; Registers used:
  6226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6234 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6235 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6236 ;;Total ram usage:        7 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    5
  6239 ;; This function calls:
  6240 ;;		_ringbuf_num
  6241 ;; This function is called by:
  6242 ;;		_terminal_task
  6243 ;;		_ST7032_task
  6244 ;;		_USB_task
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text15
  6249  012080                     __ptext15:
  6250                           	opt stack 0
  6251  012080                     _ringbuf_pop:
  6252                           	opt stack 24
  6253                           
  6254                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;incstack = 0
  6258  012080  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  6259  012084  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  6260  012088  EC1E  F08E         	call	_ringbuf_num	;wreg free
  6261  01208C  0100               	movlb	0	; () banked
  6262  01208E  5160               	movf	?_ringbuf_num& (0+255),w,b
  6263  012090  0100               	movlb	0	; () banked
  6264  012092  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6265  012094  B4D8               	btfsc	status,2,c
  6266  012096  D056               	goto	l9244
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  6270  012098  0100               	movlb	0	; () banked
  6271  01209A  EE20 F006          	lfsr	2,6
  6272  01209E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  6273  0120A0  26D9               	addwf	fsr2l,f,c
  6274  0120A2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6275  0120A4  22DA               	addwfc	fsr2h,f,c
  6276  0120A6  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  6277  0120AA  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  6278  0120AE  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  6279  0120B2  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  6280  0120B6  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  6281  0120BA  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  6282  0120BE  0100               	movlb	0	; () banked
  6283  0120C0  516A               	movf	??_ringbuf_pop& (0+255),w,b
  6284  0120C2  0100               	movlb	0	; () banked
  6285  0120C4  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  6286  0120C6  6ED9               	movwf	fsr2l,c
  6287  0120C8  0100               	movlb	0	; () banked
  6288  0120CA  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  6289  0120CC  0100               	movlb	0	; () banked
  6290  0120CE  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  6291  0120D0  6EDA               	movwf	fsr2h,c
  6292  0120D2  50DF               	movf	indf2,w,c
  6293  0120D4  6E20               	movwf	ringbuf_pop@ret,c
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  6297  0120D6  0100               	movlb	0	; () banked
  6298  0120D8  EE20 F002          	lfsr	2,2
  6299  0120DC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  6300  0120DE  26D9               	addwf	fsr2l,f,c
  6301  0120E0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6302  0120E2  22DA               	addwfc	fsr2h,f,c
  6303  0120E4  0100               	movlb	0	; () banked
  6304  0120E6  EE10 F006          	lfsr	1,6
  6305  0120EA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  6306  0120EC  26E1               	addwf	fsr1l,f,c
  6307  0120EE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6308  0120F0  22E2               	addwfc	fsr1h,f,c
  6309  0120F2  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  6310  0120F6  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  6311  0120FA  0E01               	movlw	1
  6312  0120FC  0100               	movlb	0	; () banked
  6313  0120FE  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  6314  012100  0E00               	movlw	0
  6315  012102  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  6316  012104  50DE               	movf	postinc2,w,c
  6317  012106  0100               	movlb	0	; () banked
  6318  012108  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  6319  01210A  50DE               	movf	postinc2,w,c
  6320  01210C  0100               	movlb	0	; () banked
  6321  01210E  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  6322  012110  B0D8               	btfsc	status,0,c
  6323  012112  D00B               	goto	l9236
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;My_ringbuf.c: 49: rb->tail++;
  6327  012114  0100               	movlb	0	; () banked
  6328  012116  EE20 F006          	lfsr	2,6
  6329  01211A  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  6330  01211C  26D9               	addwf	fsr2l,f,c
  6331  01211E  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6332  012120  22DA               	addwfc	fsr2h,f,c
  6333  012122  2ADE               	incf	postinc2,f,c
  6334  012124  0E00               	movlw	0
  6335  012126  22DD               	addwfc	postdec2,f,c
  6336                           
  6337                           ;My_ringbuf.c: 50: } else {
  6338  012128  D00B               	goto	l9238
  6339  01212A                     l9236:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;My_ringbuf.c: 51: rb->tail = 0;
  6343  01212A  0100               	movlb	0	; () banked
  6344  01212C  EE20 F006          	lfsr	2,6
  6345  012130  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  6346  012132  26D9               	addwf	fsr2l,f,c
  6347  012134  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6348  012136  22DA               	addwfc	fsr2h,f,c
  6349  012138  0E00               	movlw	0
  6350  01213A  6EDE               	movwf	postinc2,c
  6351  01213C  0E00               	movlw	0
  6352  01213E  6EDD               	movwf	postdec2,c
  6353  012140                     l9238:
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;My_ringbuf.c: 52: }
  6357                           ;My_ringbuf.c: 53: return ret;
  6358  012140  5020               	movf	ringbuf_pop@ret,w,c
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;My_ringbuf.c: 54: } else {
  6362                           
  6363                           ; BSR set to: 0
  6364  012142  0012               	return	
  6365  012144                     l9244:
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;My_ringbuf.c: 55: return 0;
  6369  012144  0E00               	movlw	0
  6370                           
  6371                           ; BSR set to: 0
  6372  012146  0012               	return	
  6373  012148                     __end_of_ringbuf_pop:
  6374                           	opt stack 0
  6375                           tblptru	equ	0xFF8
  6376                           tblptrh	equ	0xFF7
  6377                           tblptrl	equ	0xFF6
  6378                           tablat	equ	0xFF5
  6379                           prodh	equ	0xFF4
  6380                           prodl	equ	0xFF3
  6381                           intcon	equ	0xFF2
  6382                           indf0	equ	0xFEF
  6383                           postinc0	equ	0xFEE
  6384                           fsr0h	equ	0xFEA
  6385                           fsr0l	equ	0xFE9
  6386                           wreg	equ	0xFE8
  6387                           postinc1	equ	0xFE6
  6388                           postdec1	equ	0xFE5
  6389                           fsr1h	equ	0xFE2
  6390                           fsr1l	equ	0xFE1
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           postdec2	equ	0xFDD
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function _ringbuf_delete *****************
  6399 ;; Defined at:
  6400 ;;		line 66 in file "../My_library/My_ringbuf.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6403 ;;		 -> terminal_task@command(8), 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;		None
  6406 ;; Return value:  Size  Location     Type
  6407 ;;		None               void
  6408 ;; Registers used:
  6409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6419 ;;Total ram usage:        2 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:    4
  6422 ;; This function calls:
  6423 ;;		Nothing
  6424 ;; This function is called by:
  6425 ;;		_terminal_task
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           	psect	text16
  6430  012FB2                     __ptext16:
  6431                           	opt stack 0
  6432  012FB2                     _ringbuf_delete:
  6433                           	opt stack 25
  6434                           
  6435                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;incstack = 0
  6439  012FB2  0100               	movlb	0	; () banked
  6440  012FB4  EE20 F006          	lfsr	2,6
  6441  012FB8  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6442  012FBA  26D9               	addwf	fsr2l,f,c
  6443  012FBC  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6444  012FBE  22DA               	addwfc	fsr2h,f,c
  6445  012FC0  0100               	movlb	0	; () banked
  6446  012FC2  EE10 F004          	lfsr	1,4
  6447  012FC6  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6448  012FC8  26E1               	addwf	fsr1l,f,c
  6449  012FCA  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6450  012FCC  22E2               	addwfc	fsr1h,f,c
  6451  012FCE  CFDE FFE6          	movff	postinc2,postinc1
  6452  012FD2  CFDD FFE5          	movff	postdec2,postdec1
  6453                           
  6454                           ; BSR set to: 0
  6455  012FD6  0012               	return		;funcret
  6456  012FD8                     __end_of_ringbuf_delete:
  6457                           	opt stack 0
  6458                           tblptru	equ	0xFF8
  6459                           tblptrh	equ	0xFF7
  6460                           tblptrl	equ	0xFF6
  6461                           tablat	equ	0xFF5
  6462                           prodh	equ	0xFF4
  6463                           prodl	equ	0xFF3
  6464                           intcon	equ	0xFF2
  6465                           indf0	equ	0xFEF
  6466                           postinc0	equ	0xFEE
  6467                           fsr0h	equ	0xFEA
  6468                           fsr0l	equ	0xFE9
  6469                           wreg	equ	0xFE8
  6470                           postinc1	equ	0xFE6
  6471                           postdec1	equ	0xFE5
  6472                           fsr1h	equ	0xFE2
  6473                           fsr1l	equ	0xFE1
  6474                           indf2	equ	0xFDF
  6475                           postinc2	equ	0xFDE
  6476                           postdec2	equ	0xFDD
  6477                           fsr2h	equ	0xFDA
  6478                           fsr2l	equ	0xFD9
  6479                           status	equ	0xFD8
  6480                           
  6481 ;; *************** function _ringbuf_backspace *****************
  6482 ;; Defined at:
  6483 ;;		line 59 in file "../My_library/My_ringbuf.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6486 ;;		 -> terminal_task@command(8), 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6500 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6501 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6502 ;;Total ram usage:        6 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    5
  6505 ;; This function calls:
  6506 ;;		_ringbuf_num
  6507 ;; This function is called by:
  6508 ;;		_terminal_task
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text17
  6513  012820                     __ptext17:
  6514                           	opt stack 0
  6515  012820                     _ringbuf_backspace:
  6516                           	opt stack 24
  6517                           
  6518                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;incstack = 0
  6522  012820  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6523  012824  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6524  012828  EC1E  F08E         	call	_ringbuf_num	;wreg free
  6525  01282C  0100               	movlb	0	; () banked
  6526  01282E  5160               	movf	?_ringbuf_num& (0+255),w,b
  6527  012830  0100               	movlb	0	; () banked
  6528  012832  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6529  012834  B4D8               	btfsc	status,2,c
  6530  012836  0012               	return	
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6534  012838  0100               	movlb	0	; () banked
  6535  01283A  EE20 F004          	lfsr	2,4
  6536  01283E  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6537  012840  26D9               	addwf	fsr2l,f,c
  6538  012842  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6539  012844  22DA               	addwfc	fsr2h,f,c
  6540  012846  50DE               	movf	postinc2,w,c
  6541  012848  10DE               	iorwf	postinc2,w,c
  6542  01284A  B4D8               	btfsc	status,2,c
  6543  01284C  D00B               	goto	l9254
  6544                           
  6545                           ; BSR set to: 0
  6546  01284E  0100               	movlb	0	; () banked
  6547  012850  EE20 F004          	lfsr	2,4
  6548  012854  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6549  012856  26D9               	addwf	fsr2l,f,c
  6550  012858  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6551  01285A  22DA               	addwfc	fsr2h,f,c
  6552  01285C  06DE               	decf	postinc2,f,c
  6553  01285E  0E00               	movlw	0
  6554  012860  5ADD               	subwfb	postdec2,f,c
  6555  012862  0012               	return	
  6556  012864                     l9254:
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6560  012864  0EFF               	movlw	255
  6561  012866  0100               	movlb	0	; () banked
  6562  012868  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6563  01286A  0EFF               	movlw	255
  6564  01286C  0100               	movlb	0	; () banked
  6565  01286E  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6566  012870  0100               	movlb	0	; () banked
  6567  012872  EE20 F002          	lfsr	2,2
  6568  012876  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6569  012878  26D9               	addwf	fsr2l,f,c
  6570  01287A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6571  01287C  22DA               	addwfc	fsr2h,f,c
  6572  01287E  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6573  012882  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6574  012886  0100               	movlb	0	; () banked
  6575  012888  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6576  01288A  0100               	movlb	0	; () banked
  6577  01288C  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6578  01288E  0100               	movlb	0	; () banked
  6579  012890  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6580  012892  0100               	movlb	0	; () banked
  6581  012894  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6582  012896  0100               	movlb	0	; () banked
  6583  012898  EE20 F004          	lfsr	2,4
  6584  01289C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6585  01289E  26D9               	addwf	fsr2l,f,c
  6586  0128A0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6587  0128A2  22DA               	addwfc	fsr2h,f,c
  6588  0128A4  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6589  0128A8  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6590                           
  6591                           ; BSR set to: 0
  6592  0128AC  0012               	return	
  6593  0128AE                     __end_of_ringbuf_backspace:
  6594                           	opt stack 0
  6595                           tblptru	equ	0xFF8
  6596                           tblptrh	equ	0xFF7
  6597                           tblptrl	equ	0xFF6
  6598                           tablat	equ	0xFF5
  6599                           prodh	equ	0xFF4
  6600                           prodl	equ	0xFF3
  6601                           intcon	equ	0xFF2
  6602                           indf0	equ	0xFEF
  6603                           postinc0	equ	0xFEE
  6604                           fsr0h	equ	0xFEA
  6605                           fsr0l	equ	0xFE9
  6606                           wreg	equ	0xFE8
  6607                           postinc1	equ	0xFE6
  6608                           postdec1	equ	0xFE5
  6609                           fsr1h	equ	0xFE2
  6610                           fsr1l	equ	0xFE1
  6611                           indf2	equ	0xFDF
  6612                           postinc2	equ	0xFDE
  6613                           postdec2	equ	0xFDD
  6614                           fsr2h	equ	0xFDA
  6615                           fsr2l	equ	0xFD9
  6616                           status	equ	0xFD8
  6617                           
  6618 ;; *************** function _main_init *****************
  6619 ;; Defined at:
  6620 ;;		line 287 in file "PIC18F27J53-killifish_light05.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;		None
  6625 ;; Return value:  Size  Location     Type
  6626 ;;		None               void
  6627 ;; Registers used:
  6628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;Total ram usage:        0 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    9
  6641 ;; This function calls:
  6642 ;;		_ADC_init
  6643 ;;		_OSC_init
  6644 ;;		_PWM_init
  6645 ;;		_RTCC_init
  6646 ;;		_UART_init
  6647 ;;		_ringbuf_init
  6648 ;;		_timer0_init
  6649 ;;		_timer1_init
  6650 ;;		_timer3_init
  6651 ;; This function is called by:
  6652 ;;		_main
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text18
  6657  0126F6                     __ptext18:
  6658                           	opt stack 0
  6659  0126F6                     _main_init:
  6660                           	opt stack 21
  6661                           
  6662                           ;PIC18F27J53-killifish_light05.c: 288: OSC_init();
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;incstack = 0
  6666  0126F6  EC43  F098         	call	_OSC_init	;wreg free
  6667                           
  6668                           ;PIC18F27J53-killifish_light05.c: 289: TRISA = 0b11100111;
  6669  0126FA  0EE7               	movlw	231
  6670  0126FC  6E92               	movwf	3986,c	;volatile
  6671                           
  6672                           ;PIC18F27J53-killifish_light05.c: 290: TRISB = 0b00000000;
  6673  0126FE  0E00               	movlw	0
  6674  012700  6E93               	movwf	3987,c	;volatile
  6675                           
  6676                           ;PIC18F27J53-killifish_light05.c: 291: TRISC = 0b10111010;
  6677  012702  0EBA               	movlw	186
  6678  012704  6E94               	movwf	3988,c	;volatile
  6679                           
  6680                           ;PIC18F27J53-killifish_light05.c: 292: ANCON0 = 0b11111000;
  6681  012706  0EF8               	movlw	248
  6682  012708  010F               	movlb	15	; () banked
  6683  01270A  6F48               	movwf	72,b	;volatile
  6684                           
  6685                           ; BSR set to: 15
  6686                           ;PIC18F27J53-killifish_light05.c: 293: ANCON1 = 0b00011111;
  6687  01270C  0E1F               	movlw	31
  6688  01270E  010F               	movlb	15	; () banked
  6689  012710  6F49               	movwf	73,b	;volatile
  6690                           
  6691                           ; BSR set to: 15
  6692                           ;PIC18F27J53-killifish_light05.c: 294: INTCON2bits.RBPU = 0;
  6693  012712  9EF1               	bcf	intcon2,7,c	;volatile
  6694                           
  6695                           ; BSR set to: 15
  6696                           ;PIC18F27J53-killifish_light05.c: 296: timer0_init(8);
  6697  012714  0E08               	movlw	8
  6698  012716  EC54  F097         	call	_timer0_init
  6699                           
  6700                           ;PIC18F27J53-killifish_light05.c: 297: timer1_init(0, 2);
  6701  01271A  0E02               	movlw	2
  6702  01271C  6E20               	movwf	timer1_init@clock_select,c
  6703  01271E  0E00               	movlw	0
  6704  012720  ECEA  F096         	call	_timer1_init
  6705                           
  6706                           ;PIC18F27J53-killifish_light05.c: 298: timer3_init(2);
  6707  012724  0E02               	movlw	2
  6708  012726  EC9E  F097         	call	_timer3_init
  6709                           
  6710                           ;PIC18F27J53-killifish_light05.c: 299: ADC_init(0);
  6711  01272A  0E00               	movlw	0
  6712  01272C  EC0D  F098         	call	_ADC_init
  6713                           
  6714                           ;PIC18F27J53-killifish_light05.c: 300: RTCC_init();
  6715  012730  ECCE  F095         	call	_RTCC_init	;wreg free
  6716                           
  6717                           ;PIC18F27J53-killifish_light05.c: 301: PWM_init(250);
  6718  012734  0EFA               	movlw	250
  6719  012736  EC1D  F092         	call	_PWM_init
  6720                           
  6721                           ;PIC18F27J53-killifish_light05.c: 303: UART_init();
  6722  01273A  ECEC  F097         	call	_UART_init	;wreg free
  6723                           
  6724                           ;PIC18F27J53-killifish_light05.c: 304: static uint8_t txbuf[1000];
  6725                           ;PIC18F27J53-killifish_light05.c: 305: ringbuf_init(&uart_tx, txbuf, sizeof (txbuf));
  6726  01273E  0E55               	movlw	low _uart_tx
  6727  012740  0100               	movlb	0	; () banked
  6728  012742  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6729  012744  0E01               	movlw	high _uart_tx
  6730  012746  0100               	movlb	0	; () banked
  6731  012748  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6732  01274A  0E69               	movlw	low main_init@txbuf
  6733  01274C  0100               	movlb	0	; () banked
  6734  01274E  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6735  012750  0E05               	movlw	high main_init@txbuf
  6736  012752  0100               	movlb	0	; () banked
  6737  012754  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6738  012756  0E03               	movlw	3
  6739  012758  0100               	movlb	0	; () banked
  6740  01275A  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6741  01275C  0EE8               	movlw	232
  6742  01275E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6743  012760  ECC0  F096         	call	_ringbuf_init	;wreg free
  6744                           
  6745                           ;PIC18F27J53-killifish_light05.c: 306: static uint8_t rxbuf[250];
  6746                           ;PIC18F27J53-killifish_light05.c: 307: ringbuf_init(&uart_rx, rxbuf, sizeof (rxbuf));
  6747  012764  0E4D               	movlw	low _uart_rx
  6748  012766  0100               	movlb	0	; () banked
  6749  012768  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6750  01276A  0E01               	movlw	high _uart_rx
  6751  01276C  0100               	movlb	0	; () banked
  6752  01276E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6753  012770  0E00               	movlw	low main_init@rxbuf
  6754  012772  0100               	movlb	0	; () banked
  6755  012774  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6756  012776  0E04               	movlw	high main_init@rxbuf
  6757  012778  0100               	movlb	0	; () banked
  6758  01277A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6759  01277C  0E00               	movlw	0
  6760  01277E  0100               	movlb	0	; () banked
  6761  012780  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6762  012782  0EFA               	movlw	250
  6763  012784  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6764  012786  ECC0  F096         	call	_ringbuf_init	;wreg free
  6765  01278A  0012               	return		;funcret
  6766  01278C                     __end_of_main_init:
  6767                           	opt stack 0
  6768                           tblptru	equ	0xFF8
  6769                           tblptrh	equ	0xFF7
  6770                           tblptrl	equ	0xFF6
  6771                           tablat	equ	0xFF5
  6772                           prodh	equ	0xFF4
  6773                           prodl	equ	0xFF3
  6774                           intcon	equ	0xFF2
  6775                           intcon2	equ	0xFF1
  6776                           indf0	equ	0xFEF
  6777                           postinc0	equ	0xFEE
  6778                           fsr0h	equ	0xFEA
  6779                           fsr0l	equ	0xFE9
  6780                           wreg	equ	0xFE8
  6781                           postinc1	equ	0xFE6
  6782                           postdec1	equ	0xFE5
  6783                           fsr1h	equ	0xFE2
  6784                           fsr1l	equ	0xFE1
  6785                           indf2	equ	0xFDF
  6786                           postinc2	equ	0xFDE
  6787                           postdec2	equ	0xFDD
  6788                           fsr2h	equ	0xFDA
  6789                           fsr2l	equ	0xFD9
  6790                           status	equ	0xFD8
  6791                           
  6792 ;; *************** function _timer3_init *****************
  6793 ;; Defined at:
  6794 ;;		line 101 in file "../My_library/My_PIC.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  prescaler       1    wreg     unsigned char 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  prescaler       1    0[BANK0 ] unsigned char 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;		None               void
  6801 ;; Registers used:
  6802 ;;		wreg, status,2, status,0
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6809 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6811 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6812 ;;Total ram usage:        2 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    4
  6815 ;; This function calls:
  6816 ;;		Nothing
  6817 ;; This function is called by:
  6818 ;;		_main_init
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text19
  6823  012F3C                     __ptext19:
  6824                           	opt stack 0
  6825  012F3C                     _timer3_init:
  6826                           	opt stack 25
  6827                           
  6828                           ;incstack = 0
  6829                           ;timer3_init@prescaler stored from wreg
  6830  012F3C  0100               	movlb	0	; () banked
  6831  012F3E  6F60               	movwf	timer3_init@prescaler& (0+255),b
  6832                           
  6833                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  6834  012F40  0E3F               	movlw	-193
  6835  012F42  1679               	andwf	3961,f,c	;volatile
  6836                           
  6837                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  6838  012F44  9679               	bcf	3961,3,c	;volatile
  6839                           
  6840                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  6841  012F46  C060  F020         	movff	timer3_init@prescaler,??_timer3_init
  6842  012F4A  3A20               	swapf	??_timer3_init,f,c
  6843  012F4C  5079               	movf	3961,w,c	;volatile
  6844  012F4E  1820               	xorwf	??_timer3_init,w,c
  6845  012F50  0BCF               	andlw	-49
  6846  012F52  1820               	xorwf	??_timer3_init,w,c
  6847  012F54  6E79               	movwf	3961,c	;volatile
  6848                           
  6849                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  6850  012F56  9E79               	bcf	3961,7,c	;volatile
  6851                           
  6852                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  6853  012F58  8079               	bsf	3961,0,c	;volatile
  6854                           
  6855                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  6856  012F5A  92A2               	bcf	4002,1,c	;volatile
  6857                           
  6858                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  6859  012F5C  92A1               	bcf	4001,1,c	;volatile
  6860                           
  6861                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  6862  012F5E  82A0               	bsf	4000,1,c	;volatile
  6863                           
  6864                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  6865  012F60  8CF2               	bsf	intcon,6,c	;volatile
  6866  012F62  0012               	return		;funcret
  6867  012F64                     __end_of_timer3_init:
  6868                           	opt stack 0
  6869                           tblptru	equ	0xFF8
  6870                           tblptrh	equ	0xFF7
  6871                           tblptrl	equ	0xFF6
  6872                           tablat	equ	0xFF5
  6873                           prodh	equ	0xFF4
  6874                           prodl	equ	0xFF3
  6875                           intcon	equ	0xFF2
  6876                           intcon2	equ	0xFF1
  6877                           indf0	equ	0xFEF
  6878                           postinc0	equ	0xFEE
  6879                           fsr0h	equ	0xFEA
  6880                           fsr0l	equ	0xFE9
  6881                           wreg	equ	0xFE8
  6882                           postinc1	equ	0xFE6
  6883                           postdec1	equ	0xFE5
  6884                           fsr1h	equ	0xFE2
  6885                           fsr1l	equ	0xFE1
  6886                           indf2	equ	0xFDF
  6887                           postinc2	equ	0xFDE
  6888                           postdec2	equ	0xFDD
  6889                           fsr2h	equ	0xFDA
  6890                           fsr2l	equ	0xFD9
  6891                           status	equ	0xFD8
  6892                           
  6893 ;; *************** function _timer1_init *****************
  6894 ;; Defined at:
  6895 ;;		line 70 in file "../My_library/My_PIC.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;  prescaler       1    wreg     unsigned char 
  6898 ;;  clock_select    1   31[COMRAM] unsigned char 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;		None               void
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6910 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6913 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6914 ;;Total ram usage:        3 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    4
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_main_init
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text20
  6925  012DD4                     __ptext20:
  6926                           	opt stack 0
  6927  012DD4                     _timer1_init:
  6928                           	opt stack 25
  6929                           
  6930                           ;incstack = 0
  6931                           ;timer1_init@prescaler stored from wreg
  6932  012DD4  0100               	movlb	0	; () banked
  6933  012DD6  6F61               	movwf	timer1_init@prescaler& (0+255),b
  6934                           
  6935                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  6936  012DD8  C020  F060         	movff	timer1_init@clock_select,??_timer1_init
  6937  012DDC  0100               	movlb	0	; () banked
  6938  012DDE  3B60               	swapf	??_timer1_init& (0+255),f,b
  6939  012DE0  4760               	rlncf	??_timer1_init& (0+255),f,b
  6940  012DE2  4760               	rlncf	??_timer1_init& (0+255),f,b
  6941  012DE4  50CD               	movf	4045,w,c	;volatile
  6942  012DE6  0100               	movlb	0	; () banked
  6943  012DE8  1960               	xorwf	??_timer1_init& (0+255),w,b
  6944  012DEA  0B3F               	andlw	-193
  6945  012DEC  1960               	xorwf	??_timer1_init& (0+255),w,b
  6946  012DEE  6ECD               	movwf	4045,c	;volatile
  6947                           
  6948                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6949  012DF0  0E02               	movlw	2
  6950  012DF2  1820               	xorwf	timer1_init@clock_select,w,c
  6951  012DF4  A4D8               	btfss	status,2,c
  6952  012DF6  D002               	goto	l710
  6953                           
  6954                           ; BSR set to: 0
  6955  012DF8  86CD               	bsf	4045,3,c	;volatile
  6956  012DFA  D001               	goto	l9170
  6957  012DFC                     l710:
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  6961  012DFC  96CD               	bcf	4045,3,c	;volatile
  6962  012DFE                     l9170:
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  6966  012DFE  C061  F060         	movff	timer1_init@prescaler,??_timer1_init
  6967  012E02  0100               	movlb	0	; () banked
  6968  012E04  3B60               	swapf	??_timer1_init& (0+255),f,b
  6969  012E06  50CD               	movf	4045,w,c	;volatile
  6970  012E08  0100               	movlb	0	; () banked
  6971  012E0A  1960               	xorwf	??_timer1_init& (0+255),w,b
  6972  012E0C  0BCF               	andlw	-49
  6973  012E0E  1960               	xorwf	??_timer1_init& (0+255),w,b
  6974  012E10  6ECD               	movwf	4045,c	;volatile
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  6978  012E12  84CD               	bsf	4045,2,c	;volatile
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  6982  012E14  92CD               	bcf	4045,1,c	;volatile
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  6986  012E16  80CD               	bsf	4045,0,c	;volatile
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  6990  012E18  909F               	bcf	3999,0,c	;volatile
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  6994  012E1A  909E               	bcf	3998,0,c	;volatile
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  6998  012E1C  809D               	bsf	3997,0,c	;volatile
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  7002  012E1E  8CF2               	bsf	intcon,6,c	;volatile
  7003                           
  7004                           ; BSR set to: 0
  7005  012E20  0012               	return		;funcret
  7006  012E22                     __end_of_timer1_init:
  7007                           	opt stack 0
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon	equ	0xFF2
  7015                           intcon2	equ	0xFF1
  7016                           indf0	equ	0xFEF
  7017                           postinc0	equ	0xFEE
  7018                           fsr0h	equ	0xFEA
  7019                           fsr0l	equ	0xFE9
  7020                           wreg	equ	0xFE8
  7021                           postinc1	equ	0xFE6
  7022                           postdec1	equ	0xFE5
  7023                           fsr1h	equ	0xFE2
  7024                           fsr1l	equ	0xFE1
  7025                           indf2	equ	0xFDF
  7026                           postinc2	equ	0xFDE
  7027                           postdec2	equ	0xFDD
  7028                           fsr2h	equ	0xFDA
  7029                           fsr2l	equ	0xFD9
  7030                           status	equ	0xFD8
  7031                           
  7032 ;; *************** function _timer0_init *****************
  7033 ;; Defined at:
  7034 ;;		line 34 in file "../My_library/My_PIC.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  prescaler       1    wreg     unsigned char 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  prescaler       1    0[BANK0 ] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;		None               void
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;Total ram usage:        2 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    4
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_main_init
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text21
  7063  012EA8                     __ptext21:
  7064                           	opt stack 0
  7065  012EA8                     _timer0_init:
  7066                           	opt stack 25
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;incstack = 0
  7070                           ;timer0_init@prescaler stored from wreg
  7071  012EA8  0100               	movlb	0	; () banked
  7072  012EAA  6F60               	movwf	timer0_init@prescaler& (0+255),b
  7073                           
  7074                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  7075  012EAC  8ED5               	bsf	4053,7,c	;volatile
  7076                           
  7077                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  7078  012EAE  8CD5               	bsf	4053,6,c	;volatile
  7079                           
  7080                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  7081  012EB0  9AD5               	bcf	4053,5,c	;volatile
  7082                           
  7083                           ;My_PIC.c: 38: if (prescaler == 0) {
  7084  012EB2  0100               	movlb	0	; () banked
  7085  012EB4  5160               	movf	timer0_init@prescaler& (0+255),w,b
  7086  012EB6  0100               	movlb	0	; () banked
  7087  012EB8  A4D8               	btfss	status,2,c
  7088  012EBA  D002               	goto	l705
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  7092  012EBC  86D5               	bsf	4053,3,c	;volatile
  7093                           
  7094                           ;My_PIC.c: 40: } else {
  7095  012EBE  D00A               	goto	l9158
  7096  012EC0                     l705:
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  7100  012EC0  96D5               	bcf	4053,3,c	;volatile
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  7104  012EC2  C060  F020         	movff	timer0_init@prescaler,??_timer0_init
  7105  012EC6  0EFF               	movlw	255
  7106  012EC8  2620               	addwf	??_timer0_init,f,c
  7107  012ECA  50D5               	movf	4053,w,c	;volatile
  7108  012ECC  1820               	xorwf	??_timer0_init,w,c
  7109  012ECE  0BF8               	andlw	-8
  7110  012ED0  1820               	xorwf	??_timer0_init,w,c
  7111  012ED2  6ED5               	movwf	4053,c	;volatile
  7112  012ED4                     l9158:
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;My_PIC.c: 43: }
  7116                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  7117  012ED4  8AF2               	bsf	intcon,5,c	;volatile
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  7121  012ED6  94F2               	bcf	intcon,2,c	;volatile
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  7125  012ED8  94F1               	bcf	intcon2,2,c	;volatile
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  7129  012EDA  8CF2               	bsf	intcon,6,c	;volatile
  7130                           
  7131                           ; BSR set to: 0
  7132  012EDC  0012               	return		;funcret
  7133  012EDE                     __end_of_timer0_init:
  7134                           	opt stack 0
  7135                           tblptru	equ	0xFF8
  7136                           tblptrh	equ	0xFF7
  7137                           tblptrl	equ	0xFF6
  7138                           tablat	equ	0xFF5
  7139                           prodh	equ	0xFF4
  7140                           prodl	equ	0xFF3
  7141                           intcon	equ	0xFF2
  7142                           intcon2	equ	0xFF1
  7143                           indf0	equ	0xFEF
  7144                           postinc0	equ	0xFEE
  7145                           fsr0h	equ	0xFEA
  7146                           fsr0l	equ	0xFE9
  7147                           wreg	equ	0xFE8
  7148                           postinc1	equ	0xFE6
  7149                           postdec1	equ	0xFE5
  7150                           fsr1h	equ	0xFE2
  7151                           fsr1l	equ	0xFE1
  7152                           indf2	equ	0xFDF
  7153                           postinc2	equ	0xFDE
  7154                           postdec2	equ	0xFDD
  7155                           fsr2h	equ	0xFDA
  7156                           fsr2l	equ	0xFD9
  7157                           status	equ	0xFD8
  7158                           
  7159 ;; *************** function _ringbuf_init *****************
  7160 ;; Defined at:
  7161 ;;		line 5 in file "../My_library/My_ringbuf.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7164 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
  7165 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7166 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), terminal_task@buf(100), ST7032_init@buf(200), 
  7167 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;		None               void
  7172 ;; Registers used:
  7173 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7179 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7182 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7183 ;;Total ram usage:        6 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    4
  7186 ;; This function calls:
  7187 ;;		Nothing
  7188 ;; This function is called by:
  7189 ;;		_terminal_task
  7190 ;;		_main_init
  7191 ;;		_ST7032_init
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text22
  7196  012D80                     __ptext22:
  7197                           	opt stack 0
  7198  012D80                     _ringbuf_init:
  7199                           	opt stack 25
  7200                           
  7201                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;incstack = 0
  7205  012D80  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7206  012D84  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7207  012D88  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7208  012D8C  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7209                           
  7210                           ;My_ringbuf.c: 7: rb->size = bufsize;
  7211  012D90  0100               	movlb	0	; () banked
  7212  012D92  EE20 F002          	lfsr	2,2
  7213  012D96  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7214  012D98  26D9               	addwf	fsr2l,f,c
  7215  012D9A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7216  012D9C  22DA               	addwfc	fsr2h,f,c
  7217  012D9E  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7218  012DA2  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7219                           
  7220                           ; BSR set to: 0
  7221                           ;My_ringbuf.c: 8: rb->head = 0;
  7222  012DA6  0100               	movlb	0	; () banked
  7223  012DA8  EE20 F004          	lfsr	2,4
  7224  012DAC  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7225  012DAE  26D9               	addwf	fsr2l,f,c
  7226  012DB0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7227  012DB2  22DA               	addwfc	fsr2h,f,c
  7228  012DB4  0E00               	movlw	0
  7229  012DB6  6EDE               	movwf	postinc2,c
  7230  012DB8  0E00               	movlw	0
  7231  012DBA  6EDD               	movwf	postdec2,c
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;My_ringbuf.c: 9: rb->tail = 0;
  7235  012DBC  0100               	movlb	0	; () banked
  7236  012DBE  EE20 F006          	lfsr	2,6
  7237  012DC2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7238  012DC4  26D9               	addwf	fsr2l,f,c
  7239  012DC6  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7240  012DC8  22DA               	addwfc	fsr2h,f,c
  7241  012DCA  0E00               	movlw	0
  7242  012DCC  6EDE               	movwf	postinc2,c
  7243  012DCE  0E00               	movlw	0
  7244  012DD0  6EDD               	movwf	postdec2,c
  7245                           
  7246                           ; BSR set to: 0
  7247  012DD2  0012               	return		;funcret
  7248  012DD4                     __end_of_ringbuf_init:
  7249                           	opt stack 0
  7250                           tblptru	equ	0xFF8
  7251                           tblptrh	equ	0xFF7
  7252                           tblptrl	equ	0xFF6
  7253                           tablat	equ	0xFF5
  7254                           prodh	equ	0xFF4
  7255                           prodl	equ	0xFF3
  7256                           intcon	equ	0xFF2
  7257                           intcon2	equ	0xFF1
  7258                           indf0	equ	0xFEF
  7259                           postinc0	equ	0xFEE
  7260                           fsr0h	equ	0xFEA
  7261                           fsr0l	equ	0xFE9
  7262                           wreg	equ	0xFE8
  7263                           postinc1	equ	0xFE6
  7264                           postdec1	equ	0xFE5
  7265                           fsr1h	equ	0xFE2
  7266                           fsr1l	equ	0xFE1
  7267                           indf2	equ	0xFDF
  7268                           postinc2	equ	0xFDE
  7269                           postdec2	equ	0xFDD
  7270                           fsr2h	equ	0xFDA
  7271                           fsr2l	equ	0xFD9
  7272                           status	equ	0xFD8
  7273                           
  7274 ;; *************** function _UART_init *****************
  7275 ;; Defined at:
  7276 ;;		line 10 in file "../My_library/My_UART.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;		None               void
  7283 ;; Registers used:
  7284 ;;		wreg, status,2
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:    4
  7297 ;; This function calls:
  7298 ;;		Nothing
  7299 ;; This function is called by:
  7300 ;;		_main_init
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text23
  7305  012FD8                     __ptext23:
  7306                           	opt stack 0
  7307  012FD8                     _UART_init:
  7308                           	opt stack 25
  7309                           
  7310                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;incstack = 0
  7314  012FD8  9CAD               	bcf	4013,6,c	;volatile
  7315                           
  7316                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  7317  012FDA  8AAD               	bsf	4013,5,c	;volatile
  7318                           
  7319                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  7320  012FDC  98AD               	bcf	4013,4,c	;volatile
  7321                           
  7322                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  7323  012FDE  94AD               	bcf	4013,2,c	;volatile
  7324                           
  7325                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  7326  012FE0  8EAC               	bsf	4012,7,c	;volatile
  7327                           
  7328                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  7329  012FE2  9CAC               	bcf	4012,6,c	;volatile
  7330                           
  7331                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  7332  012FE4  88AC               	bsf	4012,4,c	;volatile
  7333                           
  7334                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  7335  012FE6  867E               	bsf	3966,3,c	;volatile
  7336                           
  7337                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  7338  012FE8  0E19               	movlw	25
  7339  012FEA  6EB0               	movwf	4016,c	;volatile
  7340                           
  7341                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  7342  012FEC  0E00               	movlw	0
  7343  012FEE  6E7F               	movwf	3967,c	;volatile
  7344                           
  7345                           ;My_UART.c: 22: IPR1bits.RC1IP = 0;
  7346  012FF0  9A9F               	bcf	3999,5,c	;volatile
  7347                           
  7348                           ;My_UART.c: 23: IPR1bits.TX1IP = 0;
  7349  012FF2  989F               	bcf	3999,4,c	;volatile
  7350                           
  7351                           ;My_UART.c: 25: PIE1bits.RCIE = 1;
  7352  012FF4  8A9D               	bsf	3997,5,c	;volatile
  7353                           
  7354                           ;My_UART.c: 26: INTCONbits.PEIE = 1;
  7355  012FF6  8CF2               	bsf	intcon,6,c	;volatile
  7356  012FF8  0012               	return		;funcret
  7357  012FFA                     __end_of_UART_init:
  7358                           	opt stack 0
  7359                           tblptru	equ	0xFF8
  7360                           tblptrh	equ	0xFF7
  7361                           tblptrl	equ	0xFF6
  7362                           tablat	equ	0xFF5
  7363                           prodh	equ	0xFF4
  7364                           prodl	equ	0xFF3
  7365                           intcon	equ	0xFF2
  7366                           intcon2	equ	0xFF1
  7367                           indf0	equ	0xFEF
  7368                           postinc0	equ	0xFEE
  7369                           fsr0h	equ	0xFEA
  7370                           fsr0l	equ	0xFE9
  7371                           wreg	equ	0xFE8
  7372                           postinc1	equ	0xFE6
  7373                           postdec1	equ	0xFE5
  7374                           fsr1h	equ	0xFE2
  7375                           fsr1l	equ	0xFE1
  7376                           indf2	equ	0xFDF
  7377                           postinc2	equ	0xFDE
  7378                           postdec2	equ	0xFDD
  7379                           fsr2h	equ	0xFDA
  7380                           fsr2l	equ	0xFD9
  7381                           status	equ	0xFD8
  7382                           
  7383 ;; *************** function _RTCC_init *****************
  7384 ;; Defined at:
  7385 ;;		line 22 in file "../My_library/My_RTCC.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;		None
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;		None               void
  7392 ;; Registers used:
  7393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7403 ;;Total ram usage:        0 bytes
  7404 ;; Hardware stack levels used:    1
  7405 ;; Hardware stack levels required when called:    8
  7406 ;; This function calls:
  7407 ;;		_RTCC_from_RTCC
  7408 ;;		_RTCC_from_epoch
  7409 ;; This function is called by:
  7410 ;;		_main_init
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text24
  7415  012B9C                     __ptext24:
  7416                           	opt stack 0
  7417  012B9C                     _RTCC_init:
  7418                           	opt stack 21
  7419                           
  7420                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7421                           
  7422                           ;incstack = 0
  7423  012B9C  010F               	movlb	15	; () banked
  7424  012B9E  8B3F               	bsf	63,5,b	;volatile
  7425                           
  7426                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7427  012BA0  010F               	movlb	15	; () banked
  7428  012BA2  BB3F               	btfsc	63,5,b	;volatile
  7429  012BA4  D006               	goto	l9264
  7430                           
  7431                           ; BSR set to: 15
  7432                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7433  012BA6  0E55               	movlw	85
  7434  012BA8  6EA7               	movwf	4007,c	;volatile
  7435                           
  7436                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7437  012BAA  0EAA               	movlw	170
  7438  012BAC  6EA7               	movwf	4007,c	;volatile
  7439                           
  7440                           ; BSR set to: 15
  7441                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7442  012BAE  010F               	movlb	15	; () banked
  7443  012BB0  8B3F               	bsf	63,5,b	;volatile
  7444  012BB2                     l9264:
  7445                           
  7446                           ; BSR set to: 15
  7447                           ;My_RTCC.c: 28: }
  7448                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7449  012BB2  010F               	movlb	15	; () banked
  7450  012BB4  8F3F               	bsf	63,7,b	;volatile
  7451                           
  7452                           ; BSR set to: 15
  7453                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7454  012BB6  010F               	movlb	15	; () banked
  7455  012BB8  953F               	bcf	63,2,b	;volatile
  7456                           
  7457                           ; BSR set to: 15
  7458                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7459  012BBA  010F               	movlb	15	; () banked
  7460  012BBC  833C               	bsf	60,1,b	;volatile
  7461                           
  7462                           ; BSR set to: 15
  7463                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7464  012BBE  010F               	movlb	15	; () banked
  7465  012BC0  853C               	bsf	60,2,b	;volatile
  7466                           
  7467                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7468  012BC2  0E00               	movlw	0
  7469  012BC4  010F               	movlb	15	; () banked
  7470  012BC6  6F3E               	movwf	62,b	;volatile
  7471                           
  7472                           ; BSR set to: 15
  7473                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7474  012BC8  86CD               	bsf	4045,3,c	;volatile
  7475                           
  7476                           ; BSR set to: 15
  7477                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
  7478  012BCA  0E37               	movlw	low _now
  7479  012BCC  0100               	movlb	0	; () banked
  7480  012BCE  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7481  012BD0  0E01               	movlw	high _now
  7482  012BD2  0100               	movlb	0	; () banked
  7483  012BD4  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7484  012BD6  EC36  F098         	call	_RTCC_from_RTCC	;wreg free
  7485                           
  7486                           ;My_RTCC.c: 37: if (now.DD == 0) {
  7487  012BDA  0101               	movlb	1	; () banked
  7488  012BDC  513F               	movf	(_now+8)& (0+255),w,b
  7489  012BDE  A4D8               	btfss	status,2,c
  7490  012BE0  0012               	return	
  7491                           
  7492                           ; BSR set to: 1
  7493                           ;My_RTCC.c: 38: now.epoch = 0;
  7494  012BE2  0E00               	movlw	0
  7495  012BE4  0101               	movlb	1	; () banked
  7496  012BE6  6F37               	movwf	_now& (0+255),b
  7497  012BE8  0E00               	movlw	0
  7498  012BEA  6F38               	movwf	(_now+1)& (0+255),b
  7499  012BEC  0E00               	movlw	0
  7500  012BEE  6F39               	movwf	(_now+2)& (0+255),b
  7501  012BF0  0E00               	movlw	0
  7502  012BF2  6F3A               	movwf	(_now+3)& (0+255),b
  7503                           
  7504                           ; BSR set to: 1
  7505                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
  7506  012BF4  0E37               	movlw	low _now
  7507  012BF6  0100               	movlb	0	; () banked
  7508  012BF8  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  7509  012BFA  0E01               	movlw	high _now
  7510  012BFC  0100               	movlb	0	; () banked
  7511  012BFE  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7512  012C00  EC29  F098         	call	_RTCC_from_epoch	;wreg free
  7513  012C04  0012               	return	
  7514  012C06                     __end_of_RTCC_init:
  7515                           	opt stack 0
  7516                           tblptru	equ	0xFF8
  7517                           tblptrh	equ	0xFF7
  7518                           tblptrl	equ	0xFF6
  7519                           tablat	equ	0xFF5
  7520                           prodh	equ	0xFF4
  7521                           prodl	equ	0xFF3
  7522                           intcon	equ	0xFF2
  7523                           intcon2	equ	0xFF1
  7524                           indf0	equ	0xFEF
  7525                           postinc0	equ	0xFEE
  7526                           fsr0h	equ	0xFEA
  7527                           fsr0l	equ	0xFE9
  7528                           wreg	equ	0xFE8
  7529                           postinc1	equ	0xFE6
  7530                           postdec1	equ	0xFE5
  7531                           fsr1h	equ	0xFE2
  7532                           fsr1l	equ	0xFE1
  7533                           indf2	equ	0xFDF
  7534                           postinc2	equ	0xFDE
  7535                           postdec2	equ	0xFDD
  7536                           fsr2h	equ	0xFDA
  7537                           fsr2l	equ	0xFD9
  7538                           status	equ	0xFD8
  7539                           
  7540 ;; *************** function _RTCC_from_epoch *****************
  7541 ;; Defined at:
  7542 ;;		line 210 in file "../My_library/My_RTCC.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  tm              2   47[BANK0 ] PTR struct .
  7545 ;;		 -> now(14), 
  7546 ;; Auto vars:     Size  Location     Type
  7547 ;;		None
  7548 ;; Return value:  Size  Location     Type
  7549 ;;		None               void
  7550 ;; Registers used:
  7551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7557 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7560 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7561 ;;Total ram usage:        2 bytes
  7562 ;; Hardware stack levels used:    1
  7563 ;; Hardware stack levels required when called:    7
  7564 ;; This function calls:
  7565 ;;		_caltime_to_RTCC
  7566 ;;		_epoch_to_caltime
  7567 ;; This function is called by:
  7568 ;;		_RTCC_init
  7569 ;;		_main
  7570 ;;		_RTCC_adjust_time_inc
  7571 ;;		_RTCC_adjust_time_dec
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text25
  7576  013052                     __ptext25:
  7577                           	opt stack 0
  7578  013052                     _RTCC_from_epoch:
  7579                           	opt stack 21
  7580                           
  7581                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
  7582                           
  7583                           ;incstack = 0
  7584  013052  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  7585  013056  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  7586  01305A  ECD8  F08B         	call	_epoch_to_caltime	;wreg free
  7587                           
  7588                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
  7589  01305E  C08F  F076         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  7590  013062  C090  F077         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  7591  013066  EC01  F08F         	call	_caltime_to_RTCC	;wreg free
  7592  01306A  0012               	return		;funcret
  7593  01306C                     __end_of_RTCC_from_epoch:
  7594                           	opt stack 0
  7595                           tblptru	equ	0xFF8
  7596                           tblptrh	equ	0xFF7
  7597                           tblptrl	equ	0xFF6
  7598                           tablat	equ	0xFF5
  7599                           prodh	equ	0xFF4
  7600                           prodl	equ	0xFF3
  7601                           intcon	equ	0xFF2
  7602                           intcon2	equ	0xFF1
  7603                           indf0	equ	0xFEF
  7604                           postinc0	equ	0xFEE
  7605                           fsr0h	equ	0xFEA
  7606                           fsr0l	equ	0xFE9
  7607                           wreg	equ	0xFE8
  7608                           postinc1	equ	0xFE6
  7609                           postdec1	equ	0xFE5
  7610                           fsr1h	equ	0xFE2
  7611                           fsr1l	equ	0xFE1
  7612                           indf2	equ	0xFDF
  7613                           postinc2	equ	0xFDE
  7614                           postdec2	equ	0xFDD
  7615                           fsr2h	equ	0xFDA
  7616                           fsr2l	equ	0xFD9
  7617                           status	equ	0xFD8
  7618                           
  7619 ;; *************** function _epoch_to_caltime *****************
  7620 ;; Defined at:
  7621 ;;		line 125 in file "../My_library/My_RTCC.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  tm              2   33[BANK0 ] PTR struct .
  7624 ;;		 -> now(14), 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  num             4   43[BANK0 ] unsigned long 
  7627 ;;  day             2   39[BANK0 ] unsigned int 
  7628 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  7629 ;;  month           1   42[BANK0 ] unsigned char 
  7630 ;;  year            1   41[BANK0 ] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;		None               void
  7633 ;; Registers used:
  7634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7641 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7642 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7643 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7644 ;;Total ram usage:       14 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    6
  7647 ;; This function calls:
  7648 ;;		_get_quot_rem
  7649 ;;		_month_length
  7650 ;; This function is called by:
  7651 ;;		_RTCC_from_caltime
  7652 ;;		_RTCC_from_epoch
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text26
  7657  0117B0                     __ptext26:
  7658                           	opt stack 0
  7659  0117B0                     _epoch_to_caltime:
  7660                           	opt stack 19
  7661                           
  7662                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
  7663                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
  7664                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
  7665                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
  7666                           ;My_RTCC.c: 132: uint16_t day;
  7667                           ;My_RTCC.c: 133: uint8_t year = 0;
  7668                           
  7669                           ;incstack = 0
  7670  0117B0  0E00               	movlw	0
  7671  0117B2  0100               	movlb	0	; () banked
  7672  0117B4  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  7673                           
  7674                           ;My_RTCC.c: 134: uint8_t month = 1;
  7675  0117B6  0E01               	movlw	1
  7676  0117B8  0100               	movlb	0	; () banked
  7677  0117BA  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;My_RTCC.c: 135: epoch_t num;
  7681                           ;My_RTCC.c: 137: num = tm->epoch;
  7682  0117BC  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7683  0117C0  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7684  0117C4  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  7685  0117C8  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  7686  0117CC  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  7687  0117D0  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
  7691  0117D4  0E8B               	movlw	low epoch_to_caltime@num
  7692  0117D6  0100               	movlb	0	; () banked
  7693  0117D8  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7694  0117DA  0E00               	movlw	high epoch_to_caltime@num
  7695  0117DC  0100               	movlb	0	; () banked
  7696  0117DE  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7697  0117E0  0E3C               	movlw	60
  7698  0117E2  0100               	movlb	0	; () banked
  7699  0117E4  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7700  0117E6  ECD6  F08F         	call	_get_quot_rem	;wreg free
  7701  0117EA  0100               	movlb	0	; () banked
  7702  0117EC  EE20 F004          	lfsr	2,4
  7703  0117F0  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7704  0117F2  26D9               	addwf	fsr2l,f,c
  7705  0117F4  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7706  0117F6  22DA               	addwfc	fsr2h,f,c
  7707  0117F8  0100               	movlb	0	; () banked
  7708  0117FA  C079  FFDF         	movff	?_get_quot_rem,indf2
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
  7712  0117FE  0E8B               	movlw	low epoch_to_caltime@num
  7713  011800  0100               	movlb	0	; () banked
  7714  011802  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7715  011804  0E00               	movlw	high epoch_to_caltime@num
  7716  011806  0100               	movlb	0	; () banked
  7717  011808  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7718  01180A  0E3C               	movlw	60
  7719  01180C  0100               	movlb	0	; () banked
  7720  01180E  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7721  011810  ECD6  F08F         	call	_get_quot_rem	;wreg free
  7722  011814  0100               	movlb	0	; () banked
  7723  011816  EE20 F005          	lfsr	2,5
  7724  01181A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7725  01181C  26D9               	addwf	fsr2l,f,c
  7726  01181E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7727  011820  22DA               	addwfc	fsr2h,f,c
  7728  011822  0100               	movlb	0	; () banked
  7729  011824  C079  FFDF         	movff	?_get_quot_rem,indf2
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
  7733  011828  0E8B               	movlw	low epoch_to_caltime@num
  7734  01182A  0100               	movlb	0	; () banked
  7735  01182C  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7736  01182E  0E00               	movlw	high epoch_to_caltime@num
  7737  011830  0100               	movlb	0	; () banked
  7738  011832  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7739  011834  0E18               	movlw	24
  7740  011836  0100               	movlb	0	; () banked
  7741  011838  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7742  01183A  ECD6  F08F         	call	_get_quot_rem	;wreg free
  7743  01183E  0100               	movlb	0	; () banked
  7744  011840  EE20 F006          	lfsr	2,6
  7745  011844  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7746  011846  26D9               	addwf	fsr2l,f,c
  7747  011848  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7748  01184A  22DA               	addwfc	fsr2h,f,c
  7749  01184C  0100               	movlb	0	; () banked
  7750  01184E  C079  FFDF         	movff	?_get_quot_rem,indf2
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;My_RTCC.c: 141: day = num;
  7754  011852  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7755  011856  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;My_RTCC.c: 142: day_since_epoch = day;
  7759  01185A  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7760  01185E  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;My_RTCC.c: 144: num += 6;
  7764  011862  0E06               	movlw	6
  7765  011864  0100               	movlb	0	; () banked
  7766  011866  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  7767  011868  0E00               	movlw	0
  7768  01186A  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7769  01186C  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7770  01186E  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
  7774  011870  0E8B               	movlw	low epoch_to_caltime@num
  7775  011872  0100               	movlb	0	; () banked
  7776  011874  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7777  011876  0E00               	movlw	high epoch_to_caltime@num
  7778  011878  0100               	movlb	0	; () banked
  7779  01187A  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7780  01187C  0E07               	movlw	7
  7781  01187E  0100               	movlb	0	; () banked
  7782  011880  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7783  011882  ECD6  F08F         	call	_get_quot_rem	;wreg free
  7784  011886  0100               	movlb	0	; () banked
  7785  011888  EE20 F007          	lfsr	2,7
  7786  01188C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7787  01188E  26D9               	addwf	fsr2l,f,c
  7788  011890  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7789  011892  22DA               	addwfc	fsr2h,f,c
  7790  011894  0100               	movlb	0	; () banked
  7791  011896  C079  FFDF         	movff	?_get_quot_rem,indf2
  7792                           
  7793                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
  7794  01189A  D03F               	goto	l8820
  7795  01189C                     l874:
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;My_RTCC.c: 155: LATB2 = 1;
  7799  01189C  848A               	bsf	3978,2,c	;volatile
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;My_RTCC.c: 156: day = day - month_length(year, month);
  7803  01189E  C08A  F020         	movff	epoch_to_caltime@month,month_length@month
  7804  0118A2  0100               	movlb	0	; () banked
  7805  0118A4  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  7806  0118A6  EC95  F08E         	call	_month_length
  7807  0118AA  0100               	movlb	0	; () banked
  7808  0118AC  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  7809  0118AE  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7810  0118B0  0100               	movlb	0	; () banked
  7811  0118B2  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  7812  0118B4  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7813  0118B6  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7814  0118B8  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7815  0118BA  0100               	movlb	0	; () banked
  7816  0118BC  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  7817  0118BE  0100               	movlb	0	; () banked
  7818  0118C0  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  7819  0118C2  0100               	movlb	0	; () banked
  7820  0118C4  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  7821  0118C6  0100               	movlb	0	; () banked
  7822  0118C8  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7823  0118CA  0100               	movlb	0	; () banked
  7824  0118CC  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7825  0118CE  0100               	movlb	0	; () banked
  7826  0118D0  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7827                           
  7828                           ; BSR set to: 0
  7829                           ;My_RTCC.c: 157: if (month == 12) {
  7830  0118D2  0E0C               	movlw	12
  7831  0118D4  0100               	movlb	0	; () banked
  7832  0118D6  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  7833  0118D8  A4D8               	btfss	status,2,c
  7834  0118DA  D019               	goto	l8814
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;My_RTCC.c: 158: month = 1;
  7838  0118DC  0E01               	movlw	1
  7839  0118DE  0100               	movlb	0	; () banked
  7840  0118E0  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;My_RTCC.c: 159: year++;
  7844  0118E2  0100               	movlb	0	; () banked
  7845  0118E4  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;My_RTCC.c: 161: if (year >= 100) {
  7849  0118E6  0E63               	movlw	99
  7850  0118E8  0100               	movlb	0	; () banked
  7851  0118EA  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  7852  0118EC  D012               	goto	l8816
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
  7856  0118EE  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7857  0118F2  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7858  0118F6  0E80               	movlw	128
  7859  0118F8  5EDE               	subwf	postinc2,f,c
  7860  0118FA  0E13               	movlw	19
  7861  0118FC  5ADE               	subwfb	postinc2,f,c
  7862  0118FE  0E19               	movlw	25
  7863  011900  5ADE               	subwfb	postinc2,f,c
  7864  011902  0EBC               	movlw	188
  7865  011904  5ADE               	subwfb	postinc2,f,c
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;My_RTCC.c: 163: year = 0;
  7869  011906  0E00               	movlw	0
  7870  011908  0100               	movlb	0	; () banked
  7871  01190A  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;My_RTCC.c: 164: }
  7875                           ;My_RTCC.c: 165: } else {
  7876  01190C  D002               	goto	l8816
  7877  01190E                     l8814:
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;My_RTCC.c: 166: month++;
  7881  01190E  0100               	movlb	0	; () banked
  7882  011910  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  7883  011912                     l8816:
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;My_RTCC.c: 167: }
  7887                           ;My_RTCC.c: 168: month_cache = month;
  7888  011912  C08A  F1B0         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;My_RTCC.c: 169: year_cache = year;
  7892  011916  C089  F136         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  7893  01191A                     l8820:
  7894                           
  7895                           ; BSR set to: 0
  7896  01191A  C08A  F020         	movff	epoch_to_caltime@month,month_length@month
  7897  01191E  0100               	movlb	0	; () banked
  7898  011920  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  7899  011922  EC95  F08E         	call	_month_length
  7900  011926  0100               	movlb	0	; () banked
  7901  011928  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  7902  01192A  0100               	movlb	0	; () banked
  7903  01192C  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  7904  01192E  0100               	movlb	0	; () banked
  7905  011930  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  7906  011932  0E00               	movlw	0
  7907  011934  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  7908  011936  B0D8               	btfsc	status,0,c
  7909  011938  D7B1               	goto	l874
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;My_RTCC.c: 170: }
  7913                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
  7914                           
  7915                           ; BSR set to: 0
  7916  01193A  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  7917  01193E  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  7918  011942  0100               	movlb	0	; () banked
  7919  011944  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  7920  011946  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7921  011948  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7922  01194A  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7923  01194C  0100               	movlb	0	; () banked
  7924  01194E  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  7925  011950  0100               	movlb	0	; () banked
  7926  011952  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  7927  011954  0101               	movlb	1	; () banked
  7928  011956  6F2C               	movwf	epoch_to_caltime@day_cache& (0+255),b
  7929  011958  0100               	movlb	0	; () banked
  7930  01195A  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  7931  01195C  0100               	movlb	0	; () banked
  7932  01195E  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7933  011960  0101               	movlb	1	; () banked
  7934  011962  6F2D               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  7935                           
  7936                           ; BSR set to: 1
  7937                           ;My_RTCC.c: 172: day++;
  7938  011964  0100               	movlb	0	; () banked
  7939  011966  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  7940  011968  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;My_RTCC.c: 174: tm->YY = year;
  7944  01196A  0100               	movlb	0	; () banked
  7945  01196C  EE20 F00A          	lfsr	2,10
  7946  011970  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7947  011972  26D9               	addwf	fsr2l,f,c
  7948  011974  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7949  011976  22DA               	addwfc	fsr2h,f,c
  7950  011978  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;My_RTCC.c: 175: tm->MM = month;
  7954  01197C  0100               	movlb	0	; () banked
  7955  01197E  EE20 F009          	lfsr	2,9
  7956  011982  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7957  011984  26D9               	addwf	fsr2l,f,c
  7958  011986  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7959  011988  22DA               	addwfc	fsr2h,f,c
  7960  01198A  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;My_RTCC.c: 176: tm->DD = day;
  7964  01198E  0100               	movlb	0	; () banked
  7965  011990  EE20 F008          	lfsr	2,8
  7966  011994  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7967  011996  26D9               	addwf	fsr2l,f,c
  7968  011998  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7969  01199A  22DA               	addwfc	fsr2h,f,c
  7970  01199C  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  7971                           
  7972                           ; BSR set to: 0
  7973  0119A0  0012               	return		;funcret
  7974  0119A2                     __end_of_epoch_to_caltime:
  7975                           	opt stack 0
  7976                           tblptru	equ	0xFF8
  7977                           tblptrh	equ	0xFF7
  7978                           tblptrl	equ	0xFF6
  7979                           tablat	equ	0xFF5
  7980                           prodh	equ	0xFF4
  7981                           prodl	equ	0xFF3
  7982                           intcon	equ	0xFF2
  7983                           intcon2	equ	0xFF1
  7984                           indf0	equ	0xFEF
  7985                           postinc0	equ	0xFEE
  7986                           fsr0h	equ	0xFEA
  7987                           fsr0l	equ	0xFE9
  7988                           wreg	equ	0xFE8
  7989                           postinc1	equ	0xFE6
  7990                           postdec1	equ	0xFE5
  7991                           fsr1h	equ	0xFE2
  7992                           fsr1l	equ	0xFE1
  7993                           indf2	equ	0xFDF
  7994                           postinc2	equ	0xFDE
  7995                           postdec2	equ	0xFDD
  7996                           fsr2h	equ	0xFDA
  7997                           fsr2l	equ	0xFD9
  7998                           status	equ	0xFD8
  7999                           
  8000 ;; *************** function _get_quot_rem *****************
  8001 ;; Defined at:
  8002 ;;		line 80 in file "../My_library/My_RTCC.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  8005 ;;		 -> epoch_to_caltime@num(4), 
  8006 ;;  div             1   27[BANK0 ] unsigned char 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  num             4   29[BANK0 ] unsigned long 
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  4   25[BANK0 ] unsigned long 
  8011 ;; Registers used:
  8012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8018 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8019 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8021 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8022 ;;Total ram usage:        8 bytes
  8023 ;; Hardware stack levels used:    1
  8024 ;; Hardware stack levels required when called:    5
  8025 ;; This function calls:
  8026 ;;		___lldiv
  8027 ;;		___lmul
  8028 ;; This function is called by:
  8029 ;;		_epoch_to_caltime
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text27
  8034  011FAC                     __ptext27:
  8035                           	opt stack 0
  8036  011FAC                     _get_quot_rem:
  8037                           	opt stack 19
  8038                           
  8039                           ;My_RTCC.c: 83: epoch_t num = *quot;
  8040                           
  8041                           ; BSR set to: 0
  8042                           ;incstack = 0
  8043  011FAC  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8044  011FB0  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8045  011FB4  CFDE F07D          	movff	postinc2,get_quot_rem@num
  8046  011FB8  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  8047  011FBC  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  8048  011FC0  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  8049                           
  8050                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
  8051  011FC4  0100               	movlb	0	; () banked
  8052  011FC6  517B               	movf	get_quot_rem@div& (0+255),w,b
  8053  011FC8  0100               	movlb	0	; () banked
  8054  011FCA  6F64               	movwf	___lldiv@divisor& (0+255),b
  8055  011FCC  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  8056  011FCE  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  8057  011FD0  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  8058  011FD2  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  8059  011FD6  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8060  011FDA  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8061  011FDE  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8062  011FE2  EC03  F091         	call	___lldiv	;wreg free
  8063  011FE6  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8064  011FEA  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8065  011FEE  0100               	movlb	0	; () banked
  8066  011FF0  C060  FFDE         	movff	?___lldiv,postinc2
  8067  011FF4  0100               	movlb	0	; () banked
  8068  011FF6  C061  FFDE         	movff	?___lldiv+1,postinc2
  8069  011FFA  0100               	movlb	0	; () banked
  8070  011FFC  C062  FFDE         	movff	?___lldiv+2,postinc2
  8071  012000  0100               	movlb	0	; () banked
  8072  012002  C063  FFDD         	movff	?___lldiv+3,postdec2
  8073  012006  52DD               	movf	postdec2,f,c
  8074  012008  52DD               	movf	postdec2,f,c
  8075  01200A  CFDE F06D          	movff	postinc2,___lmul@multiplier
  8076  01200E  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  8077  012012  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  8078  012016  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  8079  01201A  0100               	movlb	0	; () banked
  8080  01201C  517B               	movf	get_quot_rem@div& (0+255),w,b
  8081  01201E  0100               	movlb	0	; () banked
  8082  012020  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8083  012022  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8084  012024  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8085  012026  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8086  012028  EC5D  F095         	call	___lmul	;wreg free
  8087  01202C  0100               	movlb	0	; () banked
  8088  01202E  1F6D               	comf	?___lmul& (0+255),f,b
  8089  012030  0100               	movlb	0	; () banked
  8090  012032  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  8091  012034  0100               	movlb	0	; () banked
  8092  012036  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  8093  012038  0100               	movlb	0	; () banked
  8094  01203A  1F70               	comf	(?___lmul+3)& (0+255),f,b
  8095  01203C  0100               	movlb	0	; () banked
  8096  01203E  2B6D               	incf	?___lmul& (0+255),f,b
  8097  012040  0E00               	movlw	0
  8098  012042  0100               	movlb	0	; () banked
  8099  012044  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  8100  012046  0100               	movlb	0	; () banked
  8101  012048  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  8102  01204A  0100               	movlb	0	; () banked
  8103  01204C  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  8104  01204E  0100               	movlb	0	; () banked
  8105  012050  517D               	movf	get_quot_rem@num& (0+255),w,b
  8106  012052  0100               	movlb	0	; () banked
  8107  012054  256D               	addwf	?___lmul& (0+255),w,b
  8108  012056  0100               	movlb	0	; () banked
  8109  012058  6F79               	movwf	?_get_quot_rem& (0+255),b
  8110  01205A  0100               	movlb	0	; () banked
  8111  01205C  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8112  01205E  0100               	movlb	0	; () banked
  8113  012060  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  8114  012062  0100               	movlb	0	; () banked
  8115  012064  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  8116  012066  0100               	movlb	0	; () banked
  8117  012068  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8118  01206A  0100               	movlb	0	; () banked
  8119  01206C  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  8120  01206E  0100               	movlb	0	; () banked
  8121  012070  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  8122  012072  0100               	movlb	0	; () banked
  8123  012074  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8124  012076  0100               	movlb	0	; () banked
  8125  012078  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  8126  01207A  0100               	movlb	0	; () banked
  8127  01207C  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  8128  01207E  0012               	return	
  8129  012080                     __end_of_get_quot_rem:
  8130                           	opt stack 0
  8131                           tblptru	equ	0xFF8
  8132                           tblptrh	equ	0xFF7
  8133                           tblptrl	equ	0xFF6
  8134                           tablat	equ	0xFF5
  8135                           prodh	equ	0xFF4
  8136                           prodl	equ	0xFF3
  8137                           intcon	equ	0xFF2
  8138                           intcon2	equ	0xFF1
  8139                           indf0	equ	0xFEF
  8140                           postinc0	equ	0xFEE
  8141                           fsr0h	equ	0xFEA
  8142                           fsr0l	equ	0xFE9
  8143                           wreg	equ	0xFE8
  8144                           postinc1	equ	0xFE6
  8145                           postdec1	equ	0xFE5
  8146                           fsr1h	equ	0xFE2
  8147                           fsr1l	equ	0xFE1
  8148                           indf2	equ	0xFDF
  8149                           postinc2	equ	0xFDE
  8150                           postdec2	equ	0xFDD
  8151                           fsr2h	equ	0xFDA
  8152                           fsr2l	equ	0xFD9
  8153                           status	equ	0xFD8
  8154                           
  8155 ;; *************** function _caltime_to_RTCC *****************
  8156 ;; Defined at:
  8157 ;;		line 105 in file "../My_library/My_RTCC.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;  tm              2   22[BANK0 ] PTR struct .
  8160 ;;		 -> now(14), 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;		None               void
  8165 ;; Registers used:
  8166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8175 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8176 ;;Total ram usage:        2 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    6
  8179 ;; This function calls:
  8180 ;;		_d_to_x
  8181 ;; This function is called by:
  8182 ;;		_RTCC_from_caltime
  8183 ;;		_RTCC_from_epoch
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text28
  8188  011E02                     __ptext28:
  8189                           	opt stack 0
  8190  011E02                     _caltime_to_RTCC:
  8191                           	opt stack 19
  8192  011E02                     l861:
  8193  011E02  010F               	movlb	15	; () banked
  8194  011E04  B93F               	btfsc	63,4,b	;volatile
  8195  011E06  D7FD               	goto	l861
  8196                           
  8197                           ; BSR set to: 15
  8198                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
  8199  011E08  010F               	movlb	15	; () banked
  8200  011E0A  813F               	bsf	63,0,b	;volatile
  8201                           
  8202                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
  8203  011E0C  010F               	movlb	15	; () banked
  8204  011E0E  833F               	bsf	63,1,b	;volatile
  8205                           
  8206                           ; BSR set to: 15
  8207                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
  8208  011E10  0100               	movlb	0	; () banked
  8209  011E12  EE20 F00A          	lfsr	2,10
  8210  011E16  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8211  011E18  26D9               	addwf	fsr2l,f,c
  8212  011E1A  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8213  011E1C  22DA               	addwfc	fsr2h,f,c
  8214  011E1E  50DF               	movf	indf2,w,c
  8215  011E20  ECB2  F097         	call	_d_to_x
  8216  011E24  010F               	movlb	15	; () banked
  8217  011E26  6F3A               	movwf	58,b	;volatile
  8218                           
  8219                           ; BSR set to: 15
  8220                           ;My_RTCC.c: 110: RTCVALH = 0x00;
  8221  011E28  0E00               	movlw	0
  8222  011E2A  010F               	movlb	15	; () banked
  8223  011E2C  6F3B               	movwf	59,b	;volatile
  8224                           
  8225                           ; BSR set to: 15
  8226                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
  8227  011E2E  010F               	movlb	15	; () banked
  8228  011E30  913F               	bcf	63,0,b	;volatile
  8229                           
  8230                           ; BSR set to: 15
  8231                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
  8232  011E32  010F               	movlb	15	; () banked
  8233  011E34  833F               	bsf	63,1,b	;volatile
  8234                           
  8235                           ; BSR set to: 15
  8236                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
  8237  011E36  0100               	movlb	0	; () banked
  8238  011E38  EE20 F008          	lfsr	2,8
  8239  011E3C  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8240  011E3E  26D9               	addwf	fsr2l,f,c
  8241  011E40  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8242  011E42  22DA               	addwfc	fsr2h,f,c
  8243  011E44  50DF               	movf	indf2,w,c
  8244  011E46  ECB2  F097         	call	_d_to_x
  8245  011E4A  010F               	movlb	15	; () banked
  8246  011E4C  6F3A               	movwf	58,b	;volatile
  8247                           
  8248                           ; BSR set to: 15
  8249                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
  8250  011E4E  0100               	movlb	0	; () banked
  8251  011E50  EE20 F009          	lfsr	2,9
  8252  011E54  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8253  011E56  26D9               	addwf	fsr2l,f,c
  8254  011E58  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8255  011E5A  22DA               	addwfc	fsr2h,f,c
  8256  011E5C  50DF               	movf	indf2,w,c
  8257  011E5E  ECB2  F097         	call	_d_to_x
  8258  011E62  010F               	movlb	15	; () banked
  8259  011E64  6F3B               	movwf	59,b	;volatile
  8260                           
  8261                           ; BSR set to: 15
  8262                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
  8263  011E66  010F               	movlb	15	; () banked
  8264  011E68  813F               	bsf	63,0,b	;volatile
  8265                           
  8266                           ; BSR set to: 15
  8267                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
  8268  011E6A  010F               	movlb	15	; () banked
  8269  011E6C  933F               	bcf	63,1,b	;volatile
  8270                           
  8271                           ; BSR set to: 15
  8272                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
  8273  011E6E  0100               	movlb	0	; () banked
  8274  011E70  EE20 F006          	lfsr	2,6
  8275  011E74  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8276  011E76  26D9               	addwf	fsr2l,f,c
  8277  011E78  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8278  011E7A  22DA               	addwfc	fsr2h,f,c
  8279  011E7C  50DF               	movf	indf2,w,c
  8280  011E7E  ECB2  F097         	call	_d_to_x
  8281  011E82  010F               	movlb	15	; () banked
  8282  011E84  6F3A               	movwf	58,b	;volatile
  8283                           
  8284                           ; BSR set to: 15
  8285                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
  8286  011E86  0100               	movlb	0	; () banked
  8287  011E88  EE20 F007          	lfsr	2,7
  8288  011E8C  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8289  011E8E  26D9               	addwf	fsr2l,f,c
  8290  011E90  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8291  011E92  22DA               	addwfc	fsr2h,f,c
  8292  011E94  50DF               	movf	indf2,w,c
  8293  011E96  ECB2  F097         	call	_d_to_x
  8294  011E9A  010F               	movlb	15	; () banked
  8295  011E9C  6F3B               	movwf	59,b	;volatile
  8296                           
  8297                           ; BSR set to: 15
  8298                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
  8299  011E9E  010F               	movlb	15	; () banked
  8300  011EA0  913F               	bcf	63,0,b	;volatile
  8301                           
  8302                           ; BSR set to: 15
  8303                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
  8304  011EA2  010F               	movlb	15	; () banked
  8305  011EA4  933F               	bcf	63,1,b	;volatile
  8306                           
  8307                           ; BSR set to: 15
  8308                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
  8309  011EA6  0100               	movlb	0	; () banked
  8310  011EA8  EE20 F004          	lfsr	2,4
  8311  011EAC  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8312  011EAE  26D9               	addwf	fsr2l,f,c
  8313  011EB0  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8314  011EB2  22DA               	addwfc	fsr2h,f,c
  8315  011EB4  50DF               	movf	indf2,w,c
  8316  011EB6  ECB2  F097         	call	_d_to_x
  8317  011EBA  010F               	movlb	15	; () banked
  8318  011EBC  6F3A               	movwf	58,b	;volatile
  8319                           
  8320                           ; BSR set to: 15
  8321                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
  8322  011EBE  0100               	movlb	0	; () banked
  8323  011EC0  EE20 F005          	lfsr	2,5
  8324  011EC4  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8325  011EC6  26D9               	addwf	fsr2l,f,c
  8326  011EC8  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8327  011ECA  22DA               	addwfc	fsr2h,f,c
  8328  011ECC  50DF               	movf	indf2,w,c
  8329  011ECE  ECB2  F097         	call	_d_to_x
  8330  011ED2  010F               	movlb	15	; () banked
  8331  011ED4  6F3B               	movwf	59,b	;volatile
  8332                           
  8333                           ; BSR set to: 15
  8334  011ED6  0012               	return		;funcret
  8335  011ED8                     __end_of_caltime_to_RTCC:
  8336                           	opt stack 0
  8337                           tblptru	equ	0xFF8
  8338                           tblptrh	equ	0xFF7
  8339                           tblptrl	equ	0xFF6
  8340                           tablat	equ	0xFF5
  8341                           prodh	equ	0xFF4
  8342                           prodl	equ	0xFF3
  8343                           intcon	equ	0xFF2
  8344                           intcon2	equ	0xFF1
  8345                           indf0	equ	0xFEF
  8346                           postinc0	equ	0xFEE
  8347                           fsr0h	equ	0xFEA
  8348                           fsr0l	equ	0xFE9
  8349                           wreg	equ	0xFE8
  8350                           postinc1	equ	0xFE6
  8351                           postdec1	equ	0xFE5
  8352                           fsr1h	equ	0xFE2
  8353                           fsr1l	equ	0xFE1
  8354                           indf2	equ	0xFDF
  8355                           postinc2	equ	0xFDE
  8356                           postdec2	equ	0xFDD
  8357                           fsr2h	equ	0xFDA
  8358                           fsr2l	equ	0xFD9
  8359                           status	equ	0xFD8
  8360                           
  8361 ;; *************** function _d_to_x *****************
  8362 ;; Defined at:
  8363 ;;		line 45 in file "../My_library/My_RTCC.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  dec             1    wreg     unsigned char 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  dec             1   21[BANK0 ] unsigned char 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      unsigned char 
  8370 ;; Registers used:
  8371 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;Total ram usage:        1 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    5
  8384 ;; This function calls:
  8385 ;;		___awdiv
  8386 ;; This function is called by:
  8387 ;;		_caltime_to_RTCC
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           	psect	text29
  8392  012F64                     __ptext29:
  8393                           	opt stack 0
  8394  012F64                     _d_to_x:
  8395                           	opt stack 19
  8396                           
  8397                           ; BSR set to: 15
  8398                           ;incstack = 0
  8399                           ;d_to_x@dec stored from wreg
  8400  012F64  0100               	movlb	0	; () banked
  8401  012F66  6F75               	movwf	d_to_x@dec& (0+255),b
  8402                           
  8403                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
  8404  012F68  C075  F06D         	movff	d_to_x@dec,___awdiv@dividend
  8405  012F6C  0100               	movlb	0	; () banked
  8406  012F6E  6B6E               	clrf	(___awdiv@dividend+1)& (0+255),b
  8407  012F70  0E00               	movlw	0
  8408  012F72  0100               	movlb	0	; () banked
  8409  012F74  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  8410  012F76  0E0A               	movlw	10
  8411  012F78  6F6F               	movwf	___awdiv@divisor& (0+255),b
  8412  012F7A  ECA4  F090         	call	___awdiv	;wreg free
  8413  012F7E  0100               	movlb	0	; () banked
  8414  012F80  516D               	movf	?___awdiv& (0+255),w,b
  8415  012F82  0D06               	mullw	6
  8416  012F84  50F3               	movf	prodl,w,c
  8417  012F86  0100               	movlb	0	; () banked
  8418  012F88  2575               	addwf	d_to_x@dec& (0+255),w,b
  8419  012F8A  0012               	return	
  8420  012F8C                     __end_of_d_to_x:
  8421                           	opt stack 0
  8422                           tblptru	equ	0xFF8
  8423                           tblptrh	equ	0xFF7
  8424                           tblptrl	equ	0xFF6
  8425                           tablat	equ	0xFF5
  8426                           prodh	equ	0xFF4
  8427                           prodl	equ	0xFF3
  8428                           intcon	equ	0xFF2
  8429                           intcon2	equ	0xFF1
  8430                           indf0	equ	0xFEF
  8431                           postinc0	equ	0xFEE
  8432                           fsr0h	equ	0xFEA
  8433                           fsr0l	equ	0xFE9
  8434                           wreg	equ	0xFE8
  8435                           postinc1	equ	0xFE6
  8436                           postdec1	equ	0xFE5
  8437                           fsr1h	equ	0xFE2
  8438                           fsr1l	equ	0xFE1
  8439                           indf2	equ	0xFDF
  8440                           postinc2	equ	0xFDE
  8441                           postdec2	equ	0xFDD
  8442                           fsr2h	equ	0xFDA
  8443                           fsr2l	equ	0xFD9
  8444                           status	equ	0xFD8
  8445                           
  8446 ;; *************** function ___awdiv *****************
  8447 ;; Defined at:
  8448 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;  dividend        2   13[BANK0 ] int 
  8451 ;;  divisor         2   15[BANK0 ] int 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  quotient        2   19[BANK0 ] int 
  8454 ;;  sign            1   18[BANK0 ] unsigned char 
  8455 ;;  counter         1   17[BANK0 ] unsigned char 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  2   13[BANK0 ] int 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8465 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8466 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8468 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8469 ;;Total ram usage:        8 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    4
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_d_to_x
  8476 ;;		_terminal_operation
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text30
  8481  012148                     __ptext30:
  8482                           	opt stack 0
  8483  012148                     ___awdiv:
  8484                           	opt stack 19
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;incstack = 0
  8488  012148  0E00               	movlw	0
  8489  01214A  0100               	movlb	0	; () banked
  8490  01214C  6F72               	movwf	___awdiv@sign& (0+255),b
  8491                           
  8492                           ; BSR set to: 0
  8493  01214E  0100               	movlb	0	; () banked
  8494  012150  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8495  012152  D008               	goto	l8568
  8496                           
  8497                           ; BSR set to: 0
  8498  012154  0100               	movlb	0	; () banked
  8499  012156  6D6F               	negf	___awdiv@divisor& (0+255),b
  8500  012158  1F70               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8501  01215A  B0D8               	btfsc	status,0,c
  8502  01215C  2B70               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8503                           
  8504                           ; BSR set to: 0
  8505  01215E  0E01               	movlw	1
  8506  012160  0100               	movlb	0	; () banked
  8507  012162  6F72               	movwf	___awdiv@sign& (0+255),b
  8508  012164                     l8568:
  8509                           
  8510                           ; BSR set to: 0
  8511  012164  0100               	movlb	0	; () banked
  8512  012166  AF6E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8513  012168  D008               	goto	l8574
  8514                           
  8515                           ; BSR set to: 0
  8516  01216A  0100               	movlb	0	; () banked
  8517  01216C  6D6D               	negf	___awdiv@dividend& (0+255),b
  8518  01216E  1F6E               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8519  012170  B0D8               	btfsc	status,0,c
  8520  012172  2B6E               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8521                           
  8522                           ; BSR set to: 0
  8523  012174  0E01               	movlw	1
  8524  012176  0100               	movlb	0	; () banked
  8525  012178  1B72               	xorwf	___awdiv@sign& (0+255),f,b
  8526  01217A                     l8574:
  8527                           
  8528                           ; BSR set to: 0
  8529  01217A  0E00               	movlw	0
  8530  01217C  0100               	movlb	0	; () banked
  8531  01217E  6F74               	movwf	(___awdiv@quotient+1)& (0+255),b
  8532  012180  0E00               	movlw	0
  8533  012182  6F73               	movwf	___awdiv@quotient& (0+255),b
  8534                           
  8535                           ; BSR set to: 0
  8536  012184  0100               	movlb	0	; () banked
  8537  012186  516F               	movf	___awdiv@divisor& (0+255),w,b
  8538  012188  0100               	movlb	0	; () banked
  8539  01218A  1170               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8540  01218C  B4D8               	btfsc	status,2,c
  8541  01218E  D02C               	goto	l8596
  8542                           
  8543                           ; BSR set to: 0
  8544  012190  0E01               	movlw	1
  8545  012192  0100               	movlb	0	; () banked
  8546  012194  6F71               	movwf	___awdiv@counter& (0+255),b
  8547  012196  D006               	goto	l8582
  8548  012198                     l8580:
  8549                           
  8550                           ; BSR set to: 0
  8551  012198  0100               	movlb	0	; () banked
  8552  01219A  90D8               	bcf	status,0,c
  8553  01219C  376F               	rlcf	___awdiv@divisor& (0+255),f,b
  8554  01219E  3770               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8555  0121A0  0100               	movlb	0	; () banked
  8556  0121A2  2B71               	incf	___awdiv@counter& (0+255),f,b
  8557  0121A4                     l8582:
  8558                           
  8559                           ; BSR set to: 0
  8560  0121A4  0100               	movlb	0	; () banked
  8561  0121A6  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8562  0121A8  D7F7               	goto	l8580
  8563  0121AA                     l8584:
  8564                           
  8565                           ; BSR set to: 0
  8566  0121AA  0100               	movlb	0	; () banked
  8567  0121AC  90D8               	bcf	status,0,c
  8568  0121AE  3773               	rlcf	___awdiv@quotient& (0+255),f,b
  8569  0121B0  3774               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8570                           
  8571                           ; BSR set to: 0
  8572  0121B2  0100               	movlb	0	; () banked
  8573  0121B4  516F               	movf	___awdiv@divisor& (0+255),w,b
  8574  0121B6  0100               	movlb	0	; () banked
  8575  0121B8  5D6D               	subwf	___awdiv@dividend& (0+255),w,b
  8576  0121BA  0100               	movlb	0	; () banked
  8577  0121BC  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8578  0121BE  0100               	movlb	0	; () banked
  8579  0121C0  596E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8580  0121C2  A0D8               	btfss	status,0,c
  8581  0121C4  D00A               	goto	l8592
  8582                           
  8583                           ; BSR set to: 0
  8584  0121C6  0100               	movlb	0	; () banked
  8585  0121C8  516F               	movf	___awdiv@divisor& (0+255),w,b
  8586  0121CA  0100               	movlb	0	; () banked
  8587  0121CC  5F6D               	subwf	___awdiv@dividend& (0+255),f,b
  8588  0121CE  0100               	movlb	0	; () banked
  8589  0121D0  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8590  0121D2  0100               	movlb	0	; () banked
  8591  0121D4  5B6E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8592                           
  8593                           ; BSR set to: 0
  8594  0121D6  0100               	movlb	0	; () banked
  8595  0121D8  8173               	bsf	___awdiv@quotient& (0+255),0,b
  8596  0121DA                     l8592:
  8597                           
  8598                           ; BSR set to: 0
  8599  0121DA  0100               	movlb	0	; () banked
  8600  0121DC  90D8               	bcf	status,0,c
  8601  0121DE  3370               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8602  0121E0  336F               	rrcf	___awdiv@divisor& (0+255),f,b
  8603                           
  8604                           ; BSR set to: 0
  8605  0121E2  0100               	movlb	0	; () banked
  8606  0121E4  2F71               	decfsz	___awdiv@counter& (0+255),f,b
  8607  0121E6  D7E1               	goto	l8584
  8608  0121E8                     l8596:
  8609                           
  8610                           ; BSR set to: 0
  8611  0121E8  0100               	movlb	0	; () banked
  8612  0121EA  5172               	movf	___awdiv@sign& (0+255),w,b
  8613  0121EC  0100               	movlb	0	; () banked
  8614  0121EE  B4D8               	btfsc	status,2,c
  8615  0121F0  D005               	goto	l8600
  8616                           
  8617                           ; BSR set to: 0
  8618  0121F2  0100               	movlb	0	; () banked
  8619  0121F4  6D73               	negf	___awdiv@quotient& (0+255),b
  8620  0121F6  1F74               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8621  0121F8  B0D8               	btfsc	status,0,c
  8622  0121FA  2B74               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8623  0121FC                     l8600:
  8624                           
  8625                           ; BSR set to: 0
  8626  0121FC  C073  F06D         	movff	___awdiv@quotient,?___awdiv
  8627  012200  C074  F06E         	movff	___awdiv@quotient+1,?___awdiv+1
  8628  012204  0012               	return	
  8629  012206                     __end_of___awdiv:
  8630                           	opt stack 0
  8631                           tblptru	equ	0xFF8
  8632                           tblptrh	equ	0xFF7
  8633                           tblptrl	equ	0xFF6
  8634                           tablat	equ	0xFF5
  8635                           prodh	equ	0xFF4
  8636                           prodl	equ	0xFF3
  8637                           intcon	equ	0xFF2
  8638                           intcon2	equ	0xFF1
  8639                           indf0	equ	0xFEF
  8640                           postinc0	equ	0xFEE
  8641                           fsr0h	equ	0xFEA
  8642                           fsr0l	equ	0xFE9
  8643                           wreg	equ	0xFE8
  8644                           postinc1	equ	0xFE6
  8645                           postdec1	equ	0xFE5
  8646                           fsr1h	equ	0xFE2
  8647                           fsr1l	equ	0xFE1
  8648                           indf2	equ	0xFDF
  8649                           postinc2	equ	0xFDE
  8650                           postdec2	equ	0xFDD
  8651                           fsr2h	equ	0xFDA
  8652                           fsr2l	equ	0xFD9
  8653                           status	equ	0xFD8
  8654                           
  8655 ;; *************** function _PWM_init *****************
  8656 ;; Defined at:
  8657 ;;		line 80 in file "PIC18F27J53-killifish_light05.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  PR              1    wreg     unsigned char 
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;  PR              1   31[COMRAM] unsigned char 
  8662 ;; Return value:  Size  Location     Type
  8663 ;;		None               void
  8664 ;; Registers used:
  8665 ;;		wreg, status,2, status,0
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/0
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8675 ;;Total ram usage:        1 bytes
  8676 ;; Hardware stack levels used:    1
  8677 ;; Hardware stack levels required when called:    4
  8678 ;; This function calls:
  8679 ;;		Nothing
  8680 ;; This function is called by:
  8681 ;;		_main_init
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text31
  8686  01243A                     __ptext31:
  8687                           	opt stack 0
  8688  01243A                     _PWM_init:
  8689                           	opt stack 25
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;incstack = 0
  8693                           ;PWM_init@PR stored from wreg
  8694  01243A  6E20               	movwf	PWM_init@PR,c
  8695                           
  8696                           ;PIC18F27J53-killifish_light05.c: 81: PPSCONbits.IOLOCK = 0;
  8697  01243C  010E               	movlb	14	; () banked
  8698  01243E  91BF               	bcf	191,0,b	;volatile
  8699                           
  8700                           ;PIC18F27J53-killifish_light05.c: 82: if (PPSCONbits.IOLOCK != 0) {
  8701  012440  010E               	movlb	14	; () banked
  8702  012442  A1BF               	btfss	191,0,b	;volatile
  8703  012444  D006               	goto	l1507
  8704                           
  8705                           ; BSR set to: 14
  8706                           ;PIC18F27J53-killifish_light05.c: 83: EECON2 = 0x55;
  8707  012446  0E55               	movlw	85
  8708  012448  6EA7               	movwf	4007,c	;volatile
  8709                           
  8710                           ;PIC18F27J53-killifish_light05.c: 84: EECON2 = 0xAA;
  8711  01244A  0EAA               	movlw	170
  8712  01244C  6EA7               	movwf	4007,c	;volatile
  8713                           
  8714                           ; BSR set to: 14
  8715                           ;PIC18F27J53-killifish_light05.c: 85: PPSCONbits.IOLOCK = 0;
  8716  01244E  010E               	movlb	14	; () banked
  8717  012450  91BF               	bcf	191,0,b	;volatile
  8718  012452                     l1507:
  8719                           
  8720                           ; BSR set to: 14
  8721                           ;PIC18F27J53-killifish_light05.c: 86: }
  8722                           ;PIC18F27J53-killifish_light05.c: 88: RPOR3 = 14;
  8723  012452  0E0E               	movlw	14
  8724  012454  010E               	movlb	14	; () banked
  8725  012456  6FC3               	movwf	195,b	;volatile
  8726                           
  8727                           ;PIC18F27J53-killifish_light05.c: 89: RPOR4 = 18;
  8728  012458  0E12               	movlw	18
  8729  01245A  010E               	movlb	14	; () banked
  8730  01245C  6FC4               	movwf	196,b	;volatile
  8731                           
  8732                           ;PIC18F27J53-killifish_light05.c: 90: RPOR5 = 22;
  8733  01245E  0E16               	movlw	22
  8734  012460  010E               	movlb	14	; () banked
  8735  012462  6FC5               	movwf	197,b	;volatile
  8736                           
  8737                           ; BSR set to: 14
  8738                           ;PIC18F27J53-killifish_light05.c: 92: CCP1CONbits.CCP1M = 12;
  8739  012464  50BA               	movf	4026,w,c	;volatile
  8740  012466  0BF0               	andlw	-16
  8741  012468  090C               	iorlw	12
  8742  01246A  6EBA               	movwf	4026,c	;volatile
  8743                           
  8744                           ; BSR set to: 14
  8745                           ;PIC18F27J53-killifish_light05.c: 93: CCP1CONbits.P1M = 0;
  8746  01246C  0E3F               	movlw	-193
  8747  01246E  16BA               	andwf	4026,f,c	;volatile
  8748                           
  8749                           ; BSR set to: 14
  8750                           ;PIC18F27J53-killifish_light05.c: 94: CCPTMRS0bits.C1TSEL = 0;
  8751  012470  010F               	movlb	15	; () banked
  8752  012472  9152               	bcf	82,0,b	;volatile
  8753  012474  9352               	bcf	82,1,b	;volatile
  8754  012476  9552               	bcf	82,2,b	;volatile
  8755                           
  8756                           ; BSR set to: 15
  8757                           ;PIC18F27J53-killifish_light05.c: 95: CCPR1Lbits.CCPR1L = 0;
  8758  012478  0E00               	movlw	0
  8759  01247A  6EBB               	movwf	4027,c	;volatile
  8760                           
  8761                           ; BSR set to: 15
  8762                           ;PIC18F27J53-killifish_light05.c: 96: CCP1CONbits.DC1B = 0;
  8763  01247C  0ECF               	movlw	-49
  8764  01247E  16BA               	andwf	4026,f,c	;volatile
  8765                           
  8766                           ; BSR set to: 15
  8767                           ;PIC18F27J53-killifish_light05.c: 98: CCP2CONbits.CCP2M = 12;
  8768  012480  50B4               	movf	4020,w,c	;volatile
  8769  012482  0BF0               	andlw	-16
  8770  012484  090C               	iorlw	12
  8771  012486  6EB4               	movwf	4020,c	;volatile
  8772                           
  8773                           ; BSR set to: 15
  8774                           ;PIC18F27J53-killifish_light05.c: 99: CCP2CONbits.P2M = 0;
  8775  012488  0E3F               	movlw	-193
  8776  01248A  16B4               	andwf	4020,f,c	;volatile
  8777                           
  8778                           ; BSR set to: 15
  8779                           ;PIC18F27J53-killifish_light05.c: 100: CCPTMRS0bits.C2TSEL = 0;
  8780  01248C  010F               	movlb	15	; () banked
  8781  01248E  9752               	bcf	82,3,b	;volatile
  8782  012490  9952               	bcf	82,4,b	;volatile
  8783  012492  9B52               	bcf	82,5,b	;volatile
  8784                           
  8785                           ; BSR set to: 15
  8786                           ;PIC18F27J53-killifish_light05.c: 101: CCPR2Lbits.CCPR2L = 0;
  8787  012494  0E00               	movlw	0
  8788  012496  6EB5               	movwf	4021,c	;volatile
  8789                           
  8790                           ; BSR set to: 15
  8791                           ;PIC18F27J53-killifish_light05.c: 102: CCP2CONbits.DC2B = 0;
  8792  012498  0ECF               	movlw	-49
  8793  01249A  16B4               	andwf	4020,f,c	;volatile
  8794                           
  8795                           ; BSR set to: 15
  8796                           ;PIC18F27J53-killifish_light05.c: 104: CCP3CONbits.CCP3M = 12;
  8797  01249C  010F               	movlb	15	; () banked
  8798  01249E  5115               	movf	21,w,b	;volatile
  8799  0124A0  0BF0               	andlw	-16
  8800  0124A2  090C               	iorlw	12
  8801  0124A4  6F15               	movwf	21,b	;volatile
  8802                           
  8803                           ; BSR set to: 15
  8804                           ;PIC18F27J53-killifish_light05.c: 105: CCP3CONbits.P3M = 0;
  8805  0124A6  0E3F               	movlw	-193
  8806  0124A8  010F               	movlb	15	; () banked
  8807  0124AA  1715               	andwf	21,f,b	;volatile
  8808                           
  8809                           ; BSR set to: 15
  8810                           ;PIC18F27J53-killifish_light05.c: 106: CCPTMRS0bits.C3TSEL = 0;
  8811  0124AC  0E3F               	movlw	-193
  8812  0124AE  010F               	movlb	15	; () banked
  8813  0124B0  1752               	andwf	82,f,b	;volatile
  8814                           
  8815                           ; BSR set to: 15
  8816                           ;PIC18F27J53-killifish_light05.c: 107: CCPR3Lbits.CCPR3L = 0;
  8817  0124B2  0E00               	movlw	0
  8818  0124B4  010F               	movlb	15	; () banked
  8819  0124B6  6F16               	movwf	22,b	;volatile
  8820                           
  8821                           ; BSR set to: 15
  8822                           ;PIC18F27J53-killifish_light05.c: 108: CCP3CONbits.DC3B = 0;
  8823  0124B8  0ECF               	movlw	-49
  8824  0124BA  010F               	movlb	15	; () banked
  8825  0124BC  1715               	andwf	21,f,b	;volatile
  8826                           
  8827                           ; BSR set to: 15
  8828                           ;PIC18F27J53-killifish_light05.c: 110: CCP4CONbits.CCP4M = 12;
  8829  0124BE  010F               	movlb	15	; () banked
  8830  0124C0  5112               	movf	18,w,b	;volatile
  8831  0124C2  0BF0               	andlw	-16
  8832  0124C4  090C               	iorlw	12
  8833  0124C6  6F12               	movwf	18,b	;volatile
  8834                           
  8835                           ; BSR set to: 15
  8836                           ;PIC18F27J53-killifish_light05.c: 111: CCPTMRS1bits.C4TSEL = 0;
  8837  0124C8  0EFC               	movlw	-4
  8838  0124CA  010F               	movlb	15	; () banked
  8839  0124CC  1751               	andwf	81,f,b	;volatile
  8840                           
  8841                           ; BSR set to: 15
  8842                           ;PIC18F27J53-killifish_light05.c: 112: CCPR4Lbits.CCPR4L = 0;
  8843  0124CE  0E00               	movlw	0
  8844  0124D0  010F               	movlb	15	; () banked
  8845  0124D2  6F13               	movwf	19,b	;volatile
  8846                           
  8847                           ; BSR set to: 15
  8848                           ;PIC18F27J53-killifish_light05.c: 113: CCP4CONbits.DC4B = 0;
  8849  0124D4  0ECF               	movlw	-49
  8850  0124D6  010F               	movlb	15	; () banked
  8851  0124D8  1712               	andwf	18,f,b	;volatile
  8852                           
  8853                           ; BSR set to: 15
  8854                           ;PIC18F27J53-killifish_light05.c: 115: T2CONbits.T2OUTPS = 0;
  8855  0124DA  96CA               	bcf	4042,3,c	;volatile
  8856  0124DC  98CA               	bcf	4042,4,c	;volatile
  8857  0124DE  9ACA               	bcf	4042,5,c	;volatile
  8858  0124E0  9CCA               	bcf	4042,6,c	;volatile
  8859                           
  8860                           ; BSR set to: 15
  8861                           ;PIC18F27J53-killifish_light05.c: 116: T2CONbits.T2CKPS = 2;
  8862  0124E2  50CA               	movf	4042,w,c	;volatile
  8863  0124E4  0BFC               	andlw	-4
  8864  0124E6  0902               	iorlw	2
  8865  0124E8  6ECA               	movwf	4042,c	;volatile
  8866                           
  8867                           ; BSR set to: 15
  8868                           ;PIC18F27J53-killifish_light05.c: 117: PR2 = PR - 1;
  8869  0124EA  0420               	decf	PWM_init@PR,w,c
  8870  0124EC  6ECB               	movwf	4043,c	;volatile
  8871                           
  8872                           ; BSR set to: 15
  8873                           ;PIC18F27J53-killifish_light05.c: 118: T2CONbits.TMR2ON = 1;
  8874  0124EE  84CA               	bsf	4042,2,c	;volatile
  8875                           
  8876                           ; BSR set to: 15
  8877  0124F0  0012               	return		;funcret
  8878  0124F2                     __end_of_PWM_init:
  8879                           	opt stack 0
  8880                           tblptru	equ	0xFF8
  8881                           tblptrh	equ	0xFF7
  8882                           tblptrl	equ	0xFF6
  8883                           tablat	equ	0xFF5
  8884                           prodh	equ	0xFF4
  8885                           prodl	equ	0xFF3
  8886                           intcon	equ	0xFF2
  8887                           intcon2	equ	0xFF1
  8888                           indf0	equ	0xFEF
  8889                           postinc0	equ	0xFEE
  8890                           fsr0h	equ	0xFEA
  8891                           fsr0l	equ	0xFE9
  8892                           wreg	equ	0xFE8
  8893                           postinc1	equ	0xFE6
  8894                           postdec1	equ	0xFE5
  8895                           fsr1h	equ	0xFE2
  8896                           fsr1l	equ	0xFE1
  8897                           indf2	equ	0xFDF
  8898                           postinc2	equ	0xFDE
  8899                           postdec2	equ	0xFDD
  8900                           fsr2h	equ	0xFDA
  8901                           fsr2l	equ	0xFD9
  8902                           status	equ	0xFD8
  8903                           
  8904 ;; *************** function _OSC_init *****************
  8905 ;; Defined at:
  8906 ;;		line 8 in file "../My_library/My_PIC.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;		None
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;		None
  8911 ;; Return value:  Size  Location     Type
  8912 ;;		None               void
  8913 ;; Registers used:
  8914 ;;		wreg, status,2
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8924 ;;Total ram usage:        0 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; Hardware stack levels required when called:    4
  8927 ;; This function calls:
  8928 ;;		Nothing
  8929 ;; This function is called by:
  8930 ;;		_main_init
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text32
  8935  013086                     __ptext32:
  8936                           	opt stack 0
  8937  013086                     _OSC_init:
  8938                           	opt stack 25
  8939                           
  8940                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  8941                           
  8942                           ; BSR set to: 15
  8943                           ;incstack = 0
  8944  013086  88D3               	bsf	4051,4,c	;volatile
  8945  013088  8AD3               	bsf	4051,5,c	;volatile
  8946  01308A  8CD3               	bsf	4051,6,c	;volatile
  8947                           
  8948                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  8949  01308C  8C9B               	bsf	3995,6,c	;volatile
  8950                           
  8951                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  8952  01308E  0EFC               	movlw	-4
  8953  013090  16D3               	andwf	4051,f,c	;volatile
  8954  013092  0012               	return		;funcret
  8955  013094                     __end_of_OSC_init:
  8956                           	opt stack 0
  8957                           tblptru	equ	0xFF8
  8958                           tblptrh	equ	0xFF7
  8959                           tblptrl	equ	0xFF6
  8960                           tablat	equ	0xFF5
  8961                           prodh	equ	0xFF4
  8962                           prodl	equ	0xFF3
  8963                           intcon	equ	0xFF2
  8964                           intcon2	equ	0xFF1
  8965                           indf0	equ	0xFEF
  8966                           postinc0	equ	0xFEE
  8967                           fsr0h	equ	0xFEA
  8968                           fsr0l	equ	0xFE9
  8969                           wreg	equ	0xFE8
  8970                           postinc1	equ	0xFE6
  8971                           postdec1	equ	0xFE5
  8972                           fsr1h	equ	0xFE2
  8973                           fsr1l	equ	0xFE1
  8974                           indf2	equ	0xFDF
  8975                           postinc2	equ	0xFDE
  8976                           postdec2	equ	0xFDD
  8977                           fsr2h	equ	0xFDA
  8978                           fsr2l	equ	0xFD9
  8979                           status	equ	0xFD8
  8980                           
  8981 ;; *************** function _ADC_init *****************
  8982 ;; Defined at:
  8983 ;;		line 133 in file "../My_library/My_PIC.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;  p_ref           1    wreg     unsigned char 
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;  p_ref           1   31[COMRAM] unsigned char 
  8988 ;; Return value:  Size  Location     Type
  8989 ;;		None               void
  8990 ;; Registers used:
  8991 ;;		wreg, status,2
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 0/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9001 ;;Total ram usage:        1 bytes
  9002 ;; Hardware stack levels used:    1
  9003 ;; Hardware stack levels required when called:    4
  9004 ;; This function calls:
  9005 ;;		Nothing
  9006 ;; This function is called by:
  9007 ;;		_main_init
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           	psect	text33
  9012  01301A                     __ptext33:
  9013                           	opt stack 0
  9014  01301A                     _ADC_init:
  9015                           	opt stack 25
  9016                           
  9017                           ;incstack = 0
  9018                           ;ADC_init@p_ref stored from wreg
  9019  01301A  6E20               	movwf	ADC_init@p_ref,c
  9020                           
  9021                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
  9022  01301C  9EC2               	bcf	4034,7,c	;volatile
  9023                           
  9024                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
  9025  01301E  B020               	btfsc	ADC_init@p_ref,0,c
  9026  013020  D002               	bra	u6315
  9027  013022  9CC2               	bcf	4034,6,c	;volatile
  9028  013024  D001               	bra	u6316
  9029  013026                     u6315:
  9030  013026  8CC2               	bsf	4034,6,c	;volatile
  9031  013028                     u6316:
  9032                           
  9033                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
  9034  013028  8EC1               	bsf	4033,7,c	;volatile
  9035                           
  9036                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
  9037  01302A  9CC1               	bcf	4033,6,c	;volatile
  9038                           
  9039                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
  9040  01302C  50C1               	movf	4033,w,c	;volatile
  9041  01302E  0BF8               	andlw	-8
  9042  013030  0906               	iorlw	6
  9043  013032  6EC1               	movwf	4033,c	;volatile
  9044  013034  0012               	return		;funcret
  9045  013036                     __end_of_ADC_init:
  9046                           	opt stack 0
  9047                           tblptru	equ	0xFF8
  9048                           tblptrh	equ	0xFF7
  9049                           tblptrl	equ	0xFF6
  9050                           tablat	equ	0xFF5
  9051                           prodh	equ	0xFF4
  9052                           prodl	equ	0xFF3
  9053                           intcon	equ	0xFF2
  9054                           intcon2	equ	0xFF1
  9055                           indf0	equ	0xFEF
  9056                           postinc0	equ	0xFEE
  9057                           fsr0h	equ	0xFEA
  9058                           fsr0l	equ	0xFE9
  9059                           wreg	equ	0xFE8
  9060                           postinc1	equ	0xFE6
  9061                           postdec1	equ	0xFE5
  9062                           fsr1h	equ	0xFE2
  9063                           fsr1l	equ	0xFE1
  9064                           indf2	equ	0xFDF
  9065                           postinc2	equ	0xFDE
  9066                           postdec2	equ	0xFDD
  9067                           fsr2h	equ	0xFDA
  9068                           fsr2l	equ	0xFD9
  9069                           status	equ	0xFD8
  9070                           
  9071 ;; *************** function _light_task *****************
  9072 ;; Defined at:
  9073 ;;		line 231 in file "PIC18F27J53-killifish_light05.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;		None
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;  temp            4   46[BANK0 ] unsigned long 
  9078 ;;  value           1   45[BANK0 ] unsigned char 
  9079 ;;  value           1   44[BANK0 ] unsigned char 
  9080 ;;  i               1   50[BANK0 ] unsigned char 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;		None               void
  9083 ;; Registers used:
  9084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9091 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9092 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9093 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9094 ;;Total ram usage:       11 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:    8
  9097 ;; This function calls:
  9098 ;;		_PWM_set
  9099 ;;		_RTCC_from_RTCC
  9100 ;;		___lldiv
  9101 ;;		___llmod
  9102 ;;		___lmul
  9103 ;; This function is called by:
  9104 ;;		_main
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           	psect	text34
  9109  011598                     __ptext34:
  9110                           	opt stack 0
  9111  011598                     _light_task:
  9112                           	opt stack 22
  9113                           
  9114                           ;PIC18F27J53-killifish_light05.c: 232: uint8_t i;
  9115                           ;PIC18F27J53-killifish_light05.c: 233: if (time_change_flag) {
  9116                           
  9117                           ;incstack = 0
  9118  011598  0100               	movlb	0	; () banked
  9119  01159A  51E8               	movf	_time_change_flag& (0+255),w,b
  9120  01159C  B4D8               	btfsc	status,2,c
  9121  01159E  D0AE               	goto	l1561
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;PIC18F27J53-killifish_light05.c: 234: time_change_flag = 0;
  9125  0115A0  0E00               	movlw	0
  9126  0115A2  0100               	movlb	0	; () banked
  9127  0115A4  6FE8               	movwf	_time_change_flag& (0+255),b
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;PIC18F27J53-killifish_light05.c: 235: RTCC_from_RTCC(&now);
  9131  0115A6  0E37               	movlw	low _now
  9132  0115A8  0100               	movlb	0	; () banked
  9133  0115AA  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  9134  0115AC  0E01               	movlw	high _now
  9135  0115AE  0100               	movlb	0	; () banked
  9136  0115B0  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  9137  0115B2  EC36  F098         	call	_RTCC_from_RTCC	;wreg free
  9138                           
  9139                           ;PIC18F27J53-killifish_light05.c: 236: if (light_mode == TIME_SYNC_mode) {
  9140  0115B6  0100               	movlb	0	; () banked
  9141  0115B8  51E7               	movf	_light_mode& (0+255),w,b
  9142  0115BA  A4D8               	btfss	status,2,c
  9143  0115BC  D09F               	goto	l1561
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;PIC18F27J53-killifish_light05.c: 237: epoch_t temp = (epoch_t) now.epoch % ((epoch_t)60
      +                          *60*24);
  9147  0115BE  C137  F060         	movff	_now,___llmod@dividend
  9148  0115C2  C138  F061         	movff	_now+1,___llmod@dividend+1
  9149  0115C6  C139  F062         	movff	_now+2,___llmod@dividend+2
  9150  0115CA  C13A  F063         	movff	_now+3,___llmod@dividend+3
  9151  0115CE  0E80               	movlw	128
  9152  0115D0  0100               	movlb	0	; () banked
  9153  0115D2  6F64               	movwf	___llmod@divisor& (0+255),b
  9154  0115D4  0E51               	movlw	81
  9155  0115D6  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  9156  0115D8  0E01               	movlw	1
  9157  0115DA  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  9158  0115DC  0E00               	movlw	0
  9159  0115DE  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  9160  0115E0  ECC6  F093         	call	___llmod	;wreg free
  9161  0115E4  C060  F08E         	movff	?___llmod,light_task@temp
  9162  0115E8  C061  F08F         	movff	?___llmod+1,light_task@temp+1
  9163  0115EC  C062  F090         	movff	?___llmod+2,light_task@temp+2
  9164  0115F0  C063  F091         	movff	?___llmod+3,light_task@temp+3
  9165                           
  9166                           ;PIC18F27J53-killifish_light05.c: 238: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  9167  0115F4  0100               	movlb	0	; () banked
  9168  0115F6  5191               	movf	(light_task@temp+3)& (0+255),w,b
  9169  0115F8  0100               	movlb	0	; () banked
  9170  0115FA  1190               	iorwf	(light_task@temp+2)& (0+255),w,b
  9171  0115FC  E108               	bnz	u10060
  9172  0115FE  0EC1               	movlw	193
  9173  011600  0100               	movlb	0	; () banked
  9174  011602  5D8E               	subwf	light_task@temp& (0+255),w,b
  9175  011604  0EA8               	movlw	168
  9176  011606  0100               	movlb	0	; () banked
  9177  011608  598F               	subwfb	(light_task@temp+1)& (0+255),w,b
  9178  01160A  A0D8               	btfss	status,0,c
  9179  01160C  D026               	goto	l9640
  9180  01160E                     u10060:
  9181                           
  9182                           ; BSR set to: 0
  9183  01160E  C08E  F088         	movff	light_task@temp,??_light_task
  9184  011612  C08F  F089         	movff	light_task@temp+1,??_light_task+1
  9185  011616  C090  F08A         	movff	light_task@temp+2,??_light_task+2
  9186  01161A  C091  F08B         	movff	light_task@temp+3,??_light_task+3
  9187  01161E  0100               	movlb	0	; () banked
  9188  011620  1F88               	comf	??_light_task& (0+255),f,b
  9189  011622  1F89               	comf	(??_light_task+1)& (0+255),f,b
  9190  011624  1F8A               	comf	(??_light_task+2)& (0+255),f,b
  9191  011626  1F8B               	comf	(??_light_task+3)& (0+255),f,b
  9192  011628  2B88               	incf	??_light_task& (0+255),f,b
  9193  01162A  0E00               	movlw	0
  9194  01162C  2389               	addwfc	(??_light_task+1)& (0+255),f,b
  9195  01162E  238A               	addwfc	(??_light_task+2)& (0+255),f,b
  9196  011630  238B               	addwfc	(??_light_task+3)& (0+255),f,b
  9197  011632  0E80               	movlw	128
  9198  011634  0100               	movlb	0	; () banked
  9199  011636  2588               	addwf	??_light_task& (0+255),w,b
  9200  011638  0100               	movlb	0	; () banked
  9201  01163A  6F8E               	movwf	light_task@temp& (0+255),b
  9202  01163C  0E51               	movlw	81
  9203  01163E  0100               	movlb	0	; () banked
  9204  011640  2189               	addwfc	(??_light_task+1)& (0+255),w,b
  9205  011642  0100               	movlb	0	; () banked
  9206  011644  6F8F               	movwf	(light_task@temp+1)& (0+255),b
  9207  011646  0E01               	movlw	1
  9208  011648  0100               	movlb	0	; () banked
  9209  01164A  218A               	addwfc	(??_light_task+2)& (0+255),w,b
  9210  01164C  0100               	movlb	0	; () banked
  9211  01164E  6F90               	movwf	(light_task@temp+2)& (0+255),b
  9212  011650  0E00               	movlw	0
  9213  011652  0100               	movlb	0	; () banked
  9214  011654  218B               	addwfc	(??_light_task+3)& (0+255),w,b
  9215  011656  0100               	movlb	0	; () banked
  9216  011658  6F91               	movwf	(light_task@temp+3)& (0+255),b
  9217  01165A                     l9640:
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;PIC18F27J53-killifish_light05.c: 239: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  9221  01165A  90D8               	bcf	status,0,c
  9222  01165C  0100               	movlb	0	; () banked
  9223  01165E  358E               	rlcf	light_task@temp& (0+255),w,b
  9224  011660  0100               	movlb	0	; () banked
  9225  011662  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9226  011664  0100               	movlb	0	; () banked
  9227  011666  358F               	rlcf	(light_task@temp+1)& (0+255),w,b
  9228  011668  0100               	movlb	0	; () banked
  9229  01166A  6F6E               	movwf	(___lmul@multiplier+1)& (0+255),b
  9230  01166C  0100               	movlb	0	; () banked
  9231  01166E  3590               	rlcf	(light_task@temp+2)& (0+255),w,b
  9232  011670  0100               	movlb	0	; () banked
  9233  011672  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  9234  011674  0100               	movlb	0	; () banked
  9235  011676  3591               	rlcf	(light_task@temp+3)& (0+255),w,b
  9236  011678  0100               	movlb	0	; () banked
  9237  01167A  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  9238  01167C  0EFA               	movlw	250
  9239  01167E  0100               	movlb	0	; () banked
  9240  011680  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9241  011682  0E00               	movlw	0
  9242  011684  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9243  011686  0E00               	movlw	0
  9244  011688  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9245  01168A  0E00               	movlw	0
  9246  01168C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9247  01168E  EC5D  F095         	call	___lmul	;wreg free
  9248  011692  C06D  F060         	movff	?___lmul,___lldiv@dividend
  9249  011696  C06E  F061         	movff	?___lmul+1,___lldiv@dividend+1
  9250  01169A  C06F  F062         	movff	?___lmul+2,___lldiv@dividend+2
  9251  01169E  C070  F063         	movff	?___lmul+3,___lldiv@dividend+3
  9252  0116A2  0E80               	movlw	128
  9253  0116A4  0100               	movlb	0	; () banked
  9254  0116A6  6F64               	movwf	___lldiv@divisor& (0+255),b
  9255  0116A8  0E51               	movlw	81
  9256  0116AA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9257  0116AC  0E01               	movlw	1
  9258  0116AE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9259  0116B0  0E00               	movlw	0
  9260  0116B2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9261  0116B4  EC03  F091         	call	___lldiv	;wreg free
  9262  0116B8  C060  F08E         	movff	?___lldiv,light_task@temp
  9263  0116BC  C061  F08F         	movff	?___lldiv+1,light_task@temp+1
  9264  0116C0  C062  F090         	movff	?___lldiv+2,light_task@temp+2
  9265  0116C4  C063  F091         	movff	?___lldiv+3,light_task@temp+3
  9266                           
  9267                           ;PIC18F27J53-killifish_light05.c: 240: PWM_set(3, temp);
  9268  0116C8  C08E  F075         	movff	light_task@temp,PWM_set@value
  9269  0116CC  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9270  0116D0  0E03               	movlw	3
  9271  0116D2  ECD1  F08C         	call	_PWM_set
  9272                           
  9273                           ;PIC18F27J53-killifish_light05.c: 241: for (i = 0; i < 3; i++) {
  9274  0116D6  0E00               	movlw	0
  9275  0116D8  0100               	movlb	0	; () banked
  9276  0116DA  6F92               	movwf	light_task@i& (0+255),b
  9277  0116DC                     l9646:
  9278                           
  9279                           ; BSR set to: 0
  9280  0116DC  0E02               	movlw	2
  9281  0116DE  0100               	movlb	0	; () banked
  9282  0116E0  6592               	cpfsgt	light_task@i& (0+255),b
  9283  0116E2  D001               	goto	l9650
  9284  0116E4  D00B               	goto	l1561
  9285  0116E6                     l9650:
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;PIC18F27J53-killifish_light05.c: 242: PWM_set(i, temp);
  9289  0116E6  C08E  F075         	movff	light_task@temp,PWM_set@value
  9290  0116EA  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9291  0116EE  0100               	movlb	0	; () banked
  9292  0116F0  5192               	movf	light_task@i& (0+255),w,b
  9293  0116F2  ECD1  F08C         	call	_PWM_set
  9294  0116F6  0100               	movlb	0	; () banked
  9295  0116F8  2B92               	incf	light_task@i& (0+255),f,b
  9296  0116FA  D7F0               	goto	l9646
  9297  0116FC                     l1561:
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;PIC18F27J53-killifish_light05.c: 243: }
  9301                           ;PIC18F27J53-killifish_light05.c: 244: }
  9302                           ;PIC18F27J53-killifish_light05.c: 245: }
  9303                           ;PIC18F27J53-killifish_light05.c: 246: if (sw_G.flag.press) {
  9304  0116FC  0101               	movlb	1	; () banked
  9305  0116FE  A182               	btfss	(_sw_G+2)& (0+255),0,b
  9306  011700  D02A               	goto	l1566
  9307                           
  9308                           ; BSR set to: 1
  9309                           ;PIC18F27J53-killifish_light05.c: 247: sw_G.flags = 0;
  9310  011702  0E00               	movlw	0
  9311  011704  0101               	movlb	1	; () banked
  9312  011706  6F83               	movwf	(_sw_G+3)& (0+255),b
  9313  011708  0E00               	movlw	0
  9314  01170A  6F82               	movwf	(_sw_G+2)& (0+255),b
  9315                           
  9316                           ;PIC18F27J53-killifish_light05.c: 248: light_mode = COMMAND_mode;
  9317  01170C  0E02               	movlw	2
  9318  01170E  0100               	movlb	0	; () banked
  9319  011710  6FE7               	movwf	_light_mode& (0+255),b
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;PIC18F27J53-killifish_light05.c: 249: static uint8_t n = 0;
  9323                           ;PIC18F27J53-killifish_light05.c: 250: if (n >= 3) n = 0;
  9324  011712  0E02               	movlw	2
  9325  011714  0100               	movlb	0	; () banked
  9326  011716  65F3               	cpfsgt	light_task@n& (0+255),b
  9327  011718  D004               	goto	l9662
  9328                           
  9329                           ; BSR set to: 0
  9330  01171A  0E00               	movlw	0
  9331  01171C  0100               	movlb	0	; () banked
  9332  01171E  6FF3               	movwf	light_task@n& (0+255),b
  9333  011720  D002               	goto	l9664
  9334  011722                     l9662:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;PIC18F27J53-killifish_light05.c: 251: else n++;
  9338  011722  0100               	movlb	0	; () banked
  9339  011724  2BF3               	incf	light_task@n& (0+255),f,b
  9340  011726                     l9664:
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;PIC18F27J53-killifish_light05.c: 252: uint8_t value = 250 / 3 * n;
  9344  011726  0100               	movlb	0	; () banked
  9345  011728  51F3               	movf	light_task@n& (0+255),w,b
  9346  01172A  0D53               	mullw	83
  9347  01172C  CFF3 F08C          	movff	prodl,light_task@value
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;PIC18F27J53-killifish_light05.c: 253: for (i = 0; i < 3; i++) {
  9351  011730  0E00               	movlw	0
  9352  011732  0100               	movlb	0	; () banked
  9353  011734  6F92               	movwf	light_task@i& (0+255),b
  9354  011736                     l9668:
  9355                           
  9356                           ; BSR set to: 0
  9357  011736  0E02               	movlw	2
  9358  011738  0100               	movlb	0	; () banked
  9359  01173A  6592               	cpfsgt	light_task@i& (0+255),b
  9360  01173C  D001               	goto	l9672
  9361  01173E  D00B               	goto	l1566
  9362  011740                     l9672:
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;PIC18F27J53-killifish_light05.c: 254: PWM_set(i, value);
  9366  011740  C08C  F075         	movff	light_task@value,PWM_set@value
  9367  011744  0100               	movlb	0	; () banked
  9368  011746  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9369  011748  0100               	movlb	0	; () banked
  9370  01174A  5192               	movf	light_task@i& (0+255),w,b
  9371  01174C  ECD1  F08C         	call	_PWM_set
  9372  011750  0100               	movlb	0	; () banked
  9373  011752  2B92               	incf	light_task@i& (0+255),f,b
  9374  011754  D7F0               	goto	l9668
  9375  011756                     l1566:
  9376                           
  9377                           ;PIC18F27J53-killifish_light05.c: 255: }
  9378                           ;PIC18F27J53-killifish_light05.c: 256: }
  9379                           ;PIC18F27J53-killifish_light05.c: 257: if (sw_B.flag.press) {
  9380  011756  0101               	movlb	1	; () banked
  9381  011758  A17E               	btfss	(_sw_B+2)& (0+255),0,b
  9382  01175A  D01E               	goto	l9690
  9383                           
  9384                           ; BSR set to: 1
  9385                           ;PIC18F27J53-killifish_light05.c: 258: sw_B.flags = 0;
  9386  01175C  0E00               	movlw	0
  9387  01175E  0101               	movlb	1	; () banked
  9388  011760  6F7F               	movwf	(_sw_B+3)& (0+255),b
  9389  011762  0E00               	movlw	0
  9390  011764  6F7E               	movwf	(_sw_B+2)& (0+255),b
  9391                           
  9392                           ;PIC18F27J53-killifish_light05.c: 259: light_mode = COMMAND_mode;
  9393  011766  0E02               	movlw	2
  9394  011768  0100               	movlb	0	; () banked
  9395  01176A  6FE7               	movwf	_light_mode& (0+255),b
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;PIC18F27J53-killifish_light05.c: 260: static uint8_t n = 0;
  9399                           ;PIC18F27J53-killifish_light05.c: 261: if (n >= 3) n = 0;
  9400  01176C  0E02               	movlw	2
  9401  01176E  0100               	movlb	0	; () banked
  9402  011770  65F2               	cpfsgt	light_task@_6006& (0+255),b
  9403  011772  D004               	goto	l9684
  9404                           
  9405                           ; BSR set to: 0
  9406  011774  0E00               	movlw	0
  9407  011776  0100               	movlb	0	; () banked
  9408  011778  6FF2               	movwf	light_task@_6006& (0+255),b
  9409  01177A  D002               	goto	l9686
  9410  01177C                     l9684:
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;PIC18F27J53-killifish_light05.c: 262: else n++;
  9414  01177C  0100               	movlb	0	; () banked
  9415  01177E  2BF2               	incf	light_task@_6006& (0+255),f,b
  9416  011780                     l9686:
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;PIC18F27J53-killifish_light05.c: 263: uint8_t value = 250 / 3 * n;
  9420  011780  0100               	movlb	0	; () banked
  9421  011782  51F2               	movf	light_task@_6006& (0+255),w,b
  9422  011784  0D53               	mullw	83
  9423  011786  CFF3 F08D          	movff	prodl,light_task@value_6007
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;PIC18F27J53-killifish_light05.c: 264: PWM_set(3, value);
  9427  01178A  C08D  F075         	movff	light_task@value_6007,PWM_set@value
  9428  01178E  0100               	movlb	0	; () banked
  9429  011790  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9430  011792  0E03               	movlw	3
  9431  011794  ECD1  F08C         	call	_PWM_set
  9432  011798                     l9690:
  9433                           
  9434                           ;PIC18F27J53-killifish_light05.c: 265: }
  9435                           ;PIC18F27J53-killifish_light05.c: 266: if (sw_R.flag.press) {
  9436  011798  0101               	movlb	1	; () banked
  9437  01179A  A186               	btfss	(_sw_R+2)& (0+255),0,b
  9438  01179C  0012               	return	
  9439                           
  9440                           ; BSR set to: 1
  9441                           ;PIC18F27J53-killifish_light05.c: 267: sw_R.flags = 0;
  9442  01179E  0E00               	movlw	0
  9443  0117A0  0101               	movlb	1	; () banked
  9444  0117A2  6F87               	movwf	(_sw_R+3)& (0+255),b
  9445  0117A4  0E00               	movlw	0
  9446  0117A6  6F86               	movwf	(_sw_R+2)& (0+255),b
  9447                           
  9448                           ;PIC18F27J53-killifish_light05.c: 268: light_mode = TIME_SYNC_mode;
  9449  0117A8  0E00               	movlw	0
  9450  0117AA  0100               	movlb	0	; () banked
  9451  0117AC  6FE7               	movwf	_light_mode& (0+255),b
  9452  0117AE  0012               	return	
  9453  0117B0                     __end_of_light_task:
  9454                           	opt stack 0
  9455                           tblptru	equ	0xFF8
  9456                           tblptrh	equ	0xFF7
  9457                           tblptrl	equ	0xFF6
  9458                           tablat	equ	0xFF5
  9459                           prodh	equ	0xFF4
  9460                           prodl	equ	0xFF3
  9461                           intcon	equ	0xFF2
  9462                           intcon2	equ	0xFF1
  9463                           indf0	equ	0xFEF
  9464                           postinc0	equ	0xFEE
  9465                           fsr0h	equ	0xFEA
  9466                           fsr0l	equ	0xFE9
  9467                           wreg	equ	0xFE8
  9468                           postinc1	equ	0xFE6
  9469                           postdec1	equ	0xFE5
  9470                           fsr1h	equ	0xFE2
  9471                           fsr1l	equ	0xFE1
  9472                           indf2	equ	0xFDF
  9473                           postinc2	equ	0xFDE
  9474                           postdec2	equ	0xFDD
  9475                           fsr2h	equ	0xFDA
  9476                           fsr2l	equ	0xFD9
  9477                           status	equ	0xFD8
  9478                           
  9479 ;; *************** function ___llmod *****************
  9480 ;; Defined at:
  9481 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;  dividend        4    0[BANK0 ] unsigned long 
  9484 ;;  divisor         4    4[BANK0 ] unsigned long 
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;  counter         1   31[COMRAM] unsigned char 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  4    0[BANK0 ] unsigned long 
  9489 ;; Registers used:
  9490 ;;		wreg, status,2, status,0
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9496 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9499 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9500 ;;Total ram usage:        9 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    4
  9503 ;; This function calls:
  9504 ;;		Nothing
  9505 ;; This function is called by:
  9506 ;;		_light_task
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           	psect	text35
  9511  01278C                     __ptext35:
  9512                           	opt stack 0
  9513  01278C                     ___llmod:
  9514                           	opt stack 25
  9515                           
  9516                           ;incstack = 0
  9517  01278C  0100               	movlb	0	; () banked
  9518  01278E  5164               	movf	___llmod@divisor& (0+255),w,b
  9519  012790  0100               	movlb	0	; () banked
  9520  012792  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9521  012794  0100               	movlb	0	; () banked
  9522  012796  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9523  012798  0100               	movlb	0	; () banked
  9524  01279A  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9525  01279C  B4D8               	btfsc	status,2,c
  9526  01279E  D037               	goto	l2037
  9527                           
  9528                           ; BSR set to: 0
  9529  0127A0  0E01               	movlw	1
  9530  0127A2  6E20               	movwf	___llmod@counter,c
  9531  0127A4  D007               	goto	l9384
  9532  0127A6                     l9382:
  9533                           
  9534                           ; BSR set to: 0
  9535  0127A6  0100               	movlb	0	; () banked
  9536  0127A8  90D8               	bcf	status,0,c
  9537  0127AA  3764               	rlcf	___llmod@divisor& (0+255),f,b
  9538  0127AC  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9539  0127AE  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9540  0127B0  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9541  0127B2  2A20               	incf	___llmod@counter,f,c
  9542  0127B4                     l9384:
  9543                           
  9544                           ; BSR set to: 0
  9545  0127B4  0100               	movlb	0	; () banked
  9546  0127B6  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9547  0127B8  D7F6               	goto	l9382
  9548  0127BA                     l9386:
  9549                           
  9550                           ; BSR set to: 0
  9551  0127BA  0100               	movlb	0	; () banked
  9552  0127BC  5164               	movf	___llmod@divisor& (0+255),w,b
  9553  0127BE  0100               	movlb	0	; () banked
  9554  0127C0  5D60               	subwf	___llmod@dividend& (0+255),w,b
  9555  0127C2  0100               	movlb	0	; () banked
  9556  0127C4  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  9557  0127C6  0100               	movlb	0	; () banked
  9558  0127C8  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9559  0127CA  0100               	movlb	0	; () banked
  9560  0127CC  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  9561  0127CE  0100               	movlb	0	; () banked
  9562  0127D0  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9563  0127D2  0100               	movlb	0	; () banked
  9564  0127D4  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  9565  0127D6  0100               	movlb	0	; () banked
  9566  0127D8  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9567  0127DA  A0D8               	btfss	status,0,c
  9568  0127DC  D010               	goto	l9390
  9569                           
  9570                           ; BSR set to: 0
  9571  0127DE  0100               	movlb	0	; () banked
  9572  0127E0  5164               	movf	___llmod@divisor& (0+255),w,b
  9573  0127E2  0100               	movlb	0	; () banked
  9574  0127E4  5F60               	subwf	___llmod@dividend& (0+255),f,b
  9575  0127E6  0100               	movlb	0	; () banked
  9576  0127E8  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  9577  0127EA  0100               	movlb	0	; () banked
  9578  0127EC  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9579  0127EE  0100               	movlb	0	; () banked
  9580  0127F0  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  9581  0127F2  0100               	movlb	0	; () banked
  9582  0127F4  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9583  0127F6  0100               	movlb	0	; () banked
  9584  0127F8  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  9585  0127FA  0100               	movlb	0	; () banked
  9586  0127FC  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9587  0127FE                     l9390:
  9588                           
  9589                           ; BSR set to: 0
  9590  0127FE  0100               	movlb	0	; () banked
  9591  012800  90D8               	bcf	status,0,c
  9592  012802  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9593  012804  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9594  012806  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9595  012808  3364               	rrcf	___llmod@divisor& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  01280A  2E20               	decfsz	___llmod@counter,f,c
  9599  01280C  D7D6               	goto	l9386
  9600  01280E                     l2037:
  9601                           
  9602                           ; BSR set to: 0
  9603  01280E  C060  F060         	movff	___llmod@dividend,?___llmod
  9604  012812  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  9605  012816  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  9606  01281A  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  9607                           
  9608                           ; BSR set to: 0
  9609  01281E  0012               	return		;funcret
  9610  012820                     __end_of___llmod:
  9611                           	opt stack 0
  9612                           tblptru	equ	0xFF8
  9613                           tblptrh	equ	0xFF7
  9614                           tblptrl	equ	0xFF6
  9615                           tablat	equ	0xFF5
  9616                           prodh	equ	0xFF4
  9617                           prodl	equ	0xFF3
  9618                           intcon	equ	0xFF2
  9619                           intcon2	equ	0xFF1
  9620                           indf0	equ	0xFEF
  9621                           postinc0	equ	0xFEE
  9622                           fsr0h	equ	0xFEA
  9623                           fsr0l	equ	0xFE9
  9624                           wreg	equ	0xFE8
  9625                           postinc1	equ	0xFE6
  9626                           postdec1	equ	0xFE5
  9627                           fsr1h	equ	0xFE2
  9628                           fsr1l	equ	0xFE1
  9629                           indf2	equ	0xFDF
  9630                           postinc2	equ	0xFDE
  9631                           postdec2	equ	0xFDD
  9632                           fsr2h	equ	0xFDA
  9633                           fsr2l	equ	0xFD9
  9634                           status	equ	0xFD8
  9635                           
  9636 ;; *************** function ___lldiv *****************
  9637 ;; Defined at:
  9638 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  dividend        4    0[BANK0 ] unsigned long 
  9641 ;;  divisor         4    4[BANK0 ] unsigned long 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;  quotient        4    8[BANK0 ] unsigned long 
  9644 ;;  counter         1   12[BANK0 ] unsigned char 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  4    0[BANK0 ] unsigned long 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9654 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9655 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9657 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9658 ;;Total ram usage:       13 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    4
  9661 ;; This function calls:
  9662 ;;		Nothing
  9663 ;; This function is called by:
  9664 ;;		_get_quot_rem
  9665 ;;		_light_task
  9666 ;;		_CTMU_read
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           	psect	text36
  9671  012206                     __ptext36:
  9672                           	opt stack 0
  9673  012206                     ___lldiv:
  9674                           	opt stack 19
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;incstack = 0
  9678  012206  0E00               	movlw	0
  9679  012208  0100               	movlb	0	; () banked
  9680  01220A  6F68               	movwf	___lldiv@quotient& (0+255),b
  9681  01220C  0E00               	movlw	0
  9682  01220E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  9683  012210  0E00               	movlw	0
  9684  012212  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  9685  012214  0E00               	movlw	0
  9686  012216  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  9687                           
  9688                           ; BSR set to: 0
  9689  012218  0100               	movlb	0	; () banked
  9690  01221A  5164               	movf	___lldiv@divisor& (0+255),w,b
  9691  01221C  0100               	movlb	0	; () banked
  9692  01221E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9693  012220  0100               	movlb	0	; () banked
  9694  012222  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9695  012224  0100               	movlb	0	; () banked
  9696  012226  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9697  012228  B4D8               	btfsc	status,2,c
  9698  01222A  D042               	goto	l2027
  9699                           
  9700                           ; BSR set to: 0
  9701  01222C  0E01               	movlw	1
  9702  01222E  0100               	movlb	0	; () banked
  9703  012230  6F6C               	movwf	___lldiv@counter& (0+255),b
  9704  012232  D008               	goto	l8612
  9705  012234                     l8610:
  9706                           
  9707                           ; BSR set to: 0
  9708  012234  0100               	movlb	0	; () banked
  9709  012236  90D8               	bcf	status,0,c
  9710  012238  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  9711  01223A  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9712  01223C  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9713  01223E  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9714  012240  0100               	movlb	0	; () banked
  9715  012242  2B6C               	incf	___lldiv@counter& (0+255),f,b
  9716  012244                     l8612:
  9717                           
  9718                           ; BSR set to: 0
  9719  012244  0100               	movlb	0	; () banked
  9720  012246  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  9721  012248  D7F5               	goto	l8610
  9722  01224A                     l8614:
  9723                           
  9724                           ; BSR set to: 0
  9725  01224A  0100               	movlb	0	; () banked
  9726  01224C  90D8               	bcf	status,0,c
  9727  01224E  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  9728  012250  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9729  012252  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9730  012254  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9731                           
  9732                           ; BSR set to: 0
  9733  012256  0100               	movlb	0	; () banked
  9734  012258  5164               	movf	___lldiv@divisor& (0+255),w,b
  9735  01225A  0100               	movlb	0	; () banked
  9736  01225C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  9737  01225E  0100               	movlb	0	; () banked
  9738  012260  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9739  012262  0100               	movlb	0	; () banked
  9740  012264  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9741  012266  0100               	movlb	0	; () banked
  9742  012268  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9743  01226A  0100               	movlb	0	; () banked
  9744  01226C  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9745  01226E  0100               	movlb	0	; () banked
  9746  012270  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9747  012272  0100               	movlb	0	; () banked
  9748  012274  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9749  012276  A0D8               	btfss	status,0,c
  9750  012278  D012               	goto	l8622
  9751                           
  9752                           ; BSR set to: 0
  9753  01227A  0100               	movlb	0	; () banked
  9754  01227C  5164               	movf	___lldiv@divisor& (0+255),w,b
  9755  01227E  0100               	movlb	0	; () banked
  9756  012280  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  9757  012282  0100               	movlb	0	; () banked
  9758  012284  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9759  012286  0100               	movlb	0	; () banked
  9760  012288  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9761  01228A  0100               	movlb	0	; () banked
  9762  01228C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9763  01228E  0100               	movlb	0	; () banked
  9764  012290  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9765  012292  0100               	movlb	0	; () banked
  9766  012294  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9767  012296  0100               	movlb	0	; () banked
  9768  012298  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9769                           
  9770                           ; BSR set to: 0
  9771  01229A  0100               	movlb	0	; () banked
  9772  01229C  8168               	bsf	___lldiv@quotient& (0+255),0,b
  9773  01229E                     l8622:
  9774                           
  9775                           ; BSR set to: 0
  9776  01229E  0100               	movlb	0	; () banked
  9777  0122A0  90D8               	bcf	status,0,c
  9778  0122A2  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9779  0122A4  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9780  0122A6  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9781  0122A8  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  9782                           
  9783                           ; BSR set to: 0
  9784  0122AA  0100               	movlb	0	; () banked
  9785  0122AC  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  9786  0122AE  D7CD               	goto	l8614
  9787  0122B0                     l2027:
  9788                           
  9789                           ; BSR set to: 0
  9790  0122B0  C068  F060         	movff	___lldiv@quotient,?___lldiv
  9791  0122B4  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  9792  0122B8  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  9793  0122BC  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  9794                           
  9795                           ; BSR set to: 0
  9796  0122C0  0012               	return		;funcret
  9797  0122C2                     __end_of___lldiv:
  9798                           	opt stack 0
  9799                           tblptru	equ	0xFF8
  9800                           tblptrh	equ	0xFF7
  9801                           tblptrl	equ	0xFF6
  9802                           tablat	equ	0xFF5
  9803                           prodh	equ	0xFF4
  9804                           prodl	equ	0xFF3
  9805                           intcon	equ	0xFF2
  9806                           intcon2	equ	0xFF1
  9807                           indf0	equ	0xFEF
  9808                           postinc0	equ	0xFEE
  9809                           fsr0h	equ	0xFEA
  9810                           fsr0l	equ	0xFE9
  9811                           wreg	equ	0xFE8
  9812                           postinc1	equ	0xFE6
  9813                           postdec1	equ	0xFE5
  9814                           fsr1h	equ	0xFE2
  9815                           fsr1l	equ	0xFE1
  9816                           indf2	equ	0xFDF
  9817                           postinc2	equ	0xFDE
  9818                           postdec2	equ	0xFDD
  9819                           fsr2h	equ	0xFDA
  9820                           fsr2l	equ	0xFD9
  9821                           status	equ	0xFD8
  9822                           
  9823 ;; *************** function _PWM_set *****************
  9824 ;; Defined at:
  9825 ;;		line 121 in file "PIC18F27J53-killifish_light05.c"
  9826 ;; Parameters:    Size  Location     Type
  9827 ;;  color           1    wreg     unsigned char 
  9828 ;;  value           2   21[BANK0 ] unsigned int 
  9829 ;; Auto vars:     Size  Location     Type
  9830 ;;  color           1   25[BANK0 ] unsigned char 
  9831 ;; Return value:  Size  Location     Type
  9832 ;;		None               void
  9833 ;; Registers used:
  9834 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9843 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9844 ;;Total ram usage:        5 bytes
  9845 ;; Hardware stack levels used:    1
  9846 ;; Hardware stack levels required when called:    5
  9847 ;; This function calls:
  9848 ;;		___lwdiv
  9849 ;;		___wmul
  9850 ;; This function is called by:
  9851 ;;		_terminal_operation
  9852 ;;		_light_task
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           	psect	text37
  9857  0119A2                     __ptext37:
  9858                           	opt stack 0
  9859  0119A2                     _PWM_set:
  9860                           	opt stack 23
  9861                           
  9862                           ; BSR set to: 0
  9863                           ;incstack = 0
  9864                           ;PWM_set@color stored from wreg
  9865  0119A2  0100               	movlb	0	; () banked
  9866  0119A4  6F79               	movwf	PWM_set@color& (0+255),b
  9867                           
  9868                           ;PIC18F27J53-killifish_light05.c: 122: value = value * value / 250;
  9869  0119A6  C075  F060         	movff	PWM_set@value,___wmul@multiplier
  9870  0119AA  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  9871  0119AE  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
  9872  0119B2  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  9873  0119B6  EC6F  F097         	call	___wmul	;wreg free
  9874  0119BA  C060  F066         	movff	?___wmul,___lwdiv@dividend
  9875  0119BE  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  9876  0119C2  0E00               	movlw	0
  9877  0119C4  0100               	movlb	0	; () banked
  9878  0119C6  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9879  0119C8  0EFA               	movlw	250
  9880  0119CA  6F68               	movwf	___lwdiv@divisor& (0+255),b
  9881  0119CC  EC21  F095         	call	___lwdiv	;wreg free
  9882  0119D0  C066  F075         	movff	?___lwdiv,PWM_set@value
  9883  0119D4  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
  9884                           
  9885                           ;PIC18F27J53-killifish_light05.c: 123: value = value * value / 250;
  9886  0119D8  C075  F060         	movff	PWM_set@value,___wmul@multiplier
  9887  0119DC  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  9888  0119E0  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
  9889  0119E4  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  9890  0119E8  EC6F  F097         	call	___wmul	;wreg free
  9891  0119EC  C060  F066         	movff	?___wmul,___lwdiv@dividend
  9892  0119F0  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  9893  0119F4  0E00               	movlw	0
  9894  0119F6  0100               	movlb	0	; () banked
  9895  0119F8  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9896  0119FA  0EFA               	movlw	250
  9897  0119FC  6F68               	movwf	___lwdiv@divisor& (0+255),b
  9898  0119FE  EC21  F095         	call	___lwdiv	;wreg free
  9899  011A02  C066  F075         	movff	?___lwdiv,PWM_set@value
  9900  011A06  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
  9901                           
  9902                           ;PIC18F27J53-killifish_light05.c: 124: value = value * 3 / 4;
  9903  011A0A  C075  F060         	movff	PWM_set@value,___wmul@multiplier
  9904  011A0E  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  9905  011A12  0E00               	movlw	0
  9906  011A14  0100               	movlb	0	; () banked
  9907  011A16  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9908  011A18  0E03               	movlw	3
  9909  011A1A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9910  011A1C  EC6F  F097         	call	___wmul	;wreg free
  9911  011A20  0100               	movlb	0	; () banked
  9912  011A22  90D8               	bcf	status,0,c
  9913  011A24  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  9914  011A26  3360               	rrcf	?___wmul& (0+255),f,b
  9915  011A28  0100               	movlb	0	; () banked
  9916  011A2A  90D8               	bcf	status,0,c
  9917  011A2C  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  9918  011A2E  3360               	rrcf	?___wmul& (0+255),f,b
  9919  011A30  C060  F075         	movff	?___wmul,PWM_set@value
  9920  011A34  C061  F076         	movff	?___wmul+1,PWM_set@value+1
  9921                           
  9922                           ;PIC18F27J53-killifish_light05.c: 125: switch (color) {
  9923  011A38  D056               	goto	l9116
  9924  011A3A                     l9098:
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;PIC18F27J53-killifish_light05.c: 127: if (value < 250 / 4) {
  9928  011A3A  0100               	movlb	0	; () banked
  9929  011A3C  5176               	movf	(PWM_set@value+1)& (0+255),w,b
  9930  011A3E  E105               	bnz	l9102
  9931  011A40  0E3E               	movlw	62
  9932  011A42  0100               	movlb	0	; () banked
  9933  011A44  5D75               	subwf	PWM_set@value& (0+255),w,b
  9934  011A46  A0D8               	btfss	status,0,c
  9935  011A48  D071               	goto	l9136
  9936  011A4A                     l9102:
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;PIC18F27J53-killifish_light05.c: 130: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
  9940  011A4A  C075  F077         	movff	PWM_set@value,??_PWM_set
  9941  011A4E  C076  F078         	movff	PWM_set@value+1,??_PWM_set+1
  9942  011A52  90D8               	bcf	status,0,c
  9943  011A54  0100               	movlb	0	; () banked
  9944  011A56  3777               	rlcf	??_PWM_set& (0+255),f,b
  9945  011A58  3778               	rlcf	(??_PWM_set+1)& (0+255),f,b
  9946  011A5A  0E84               	movlw	132
  9947  011A5C  0100               	movlb	0	; () banked
  9948  011A5E  2577               	addwf	??_PWM_set& (0+255),w,b
  9949  011A60  0100               	movlb	0	; () banked
  9950  011A62  6F66               	movwf	___lwdiv@dividend& (0+255),b
  9951  011A64  0EFF               	movlw	255
  9952  011A66  0100               	movlb	0	; () banked
  9953  011A68  2178               	addwfc	(??_PWM_set+1)& (0+255),w,b
  9954  011A6A  0100               	movlb	0	; () banked
  9955  011A6C  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
  9956  011A6E  0E00               	movlw	0
  9957  011A70  0100               	movlb	0	; () banked
  9958  011A72  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9959  011A74  0E03               	movlw	3
  9960  011A76  6F68               	movwf	___lwdiv@divisor& (0+255),b
  9961  011A78  EC21  F095         	call	___lwdiv	;wreg free
  9962  011A7C  0E3E               	movlw	62
  9963  011A7E  0100               	movlb	0	; () banked
  9964  011A80  2566               	addwf	?___lwdiv& (0+255),w,b
  9965  011A82  0100               	movlb	0	; () banked
  9966  011A84  6F75               	movwf	PWM_set@value& (0+255),b
  9967  011A86  0E00               	movlw	0
  9968  011A88  0100               	movlb	0	; () banked
  9969  011A8A  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
  9970  011A8C  D029               	goto	L1
  9971  011A8E                     l9108:
  9972                           
  9973                           ; BSR set to: 0
  9974                           ;PIC18F27J53-killifish_light05.c: 141: if (value < 250 / 4) {
  9975  011A8E  0100               	movlb	0	; () banked
  9976  011A90  5176               	movf	(PWM_set@value+1)& (0+255),w,b
  9977  011A92  E105               	bnz	l9112
  9978  011A94  0E3E               	movlw	62
  9979  011A96  0100               	movlb	0	; () banked
  9980  011A98  5D75               	subwf	PWM_set@value& (0+255),w,b
  9981  011A9A  A0D8               	btfss	status,0,c
  9982  011A9C  D047               	goto	l9136
  9983  011A9E                     l9112:
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;PIC18F27J53-killifish_light05.c: 144: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
  9987  011A9E  0EC2               	movlw	194
  9988  011AA0  0100               	movlb	0	; () banked
  9989  011AA2  2575               	addwf	PWM_set@value& (0+255),w,b
  9990  011AA4  0100               	movlb	0	; () banked
  9991  011AA6  6F60               	movwf	___wmul@multiplier& (0+255),b
  9992  011AA8  0EFF               	movlw	255
  9993  011AAA  0100               	movlb	0	; () banked
  9994  011AAC  2176               	addwfc	(PWM_set@value+1)& (0+255),w,b
  9995  011AAE  0100               	movlb	0	; () banked
  9996  011AB0  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
  9997  011AB2  0E00               	movlw	0
  9998  011AB4  0100               	movlb	0	; () banked
  9999  011AB6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10000  011AB8  0E03               	movlw	3
 10001  011ABA  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10002  011ABC  EC6F  F097         	call	___wmul	;wreg free
 10003  011AC0  0100               	movlb	0	; () banked
 10004  011AC2  90D8               	bcf	status,0,c
 10005  011AC4  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10006  011AC6  3360               	rrcf	?___wmul& (0+255),f,b
 10007  011AC8  0100               	movlb	0	; () banked
 10008  011ACA  90D8               	bcf	status,0,c
 10009  011ACC  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10010  011ACE  3360               	rrcf	?___wmul& (0+255),f,b
 10011  011AD0  0E3E               	movlw	62
 10012  011AD2  0100               	movlb	0	; () banked
 10013  011AD4  2560               	addwf	?___wmul& (0+255),w,b
 10014  011AD6  0100               	movlb	0	; () banked
 10015  011AD8  6F75               	movwf	PWM_set@value& (0+255),b
 10016  011ADA  0E00               	movlw	0
 10017  011ADC  0100               	movlb	0	; () banked
 10018  011ADE  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 10019  011AE0                     L1:
 10020  011AE0  0100               	movlb	0	; () banked
 10021  011AE2  6F76               	movwf	(PWM_set@value+1)& (0+255),b
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;PIC18F27J53-killifish_light05.c: 149: }
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;PIC18F27J53-killifish_light05.c: 148: break;
 10028                           
 10029                           ;PIC18F27J53-killifish_light05.c: 147: case 3:
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;PIC18F27J53-killifish_light05.c: 145: }
 10033                           ;PIC18F27J53-killifish_light05.c: 146: break;
 10034  011AE4  D023               	goto	l9136
 10035  011AE6                     l9116:
 10036                           
 10037                           ; BSR set to: 0
 10038  011AE6  0100               	movlb	0	; () banked
 10039  011AE8  5179               	movf	PWM_set@color& (0+255),w,b
 10040                           
 10041                           ; Switch size 1, requested type "space"
 10042                           ; Number of cases is 4, Range of values is 0 to 3
 10043                           ; switch strategies available:
 10044                           ; Name         Instructions Cycles
 10045                           ; simple_byte           13     7 (average)
 10046                           ;	Chosen strategy is simple_byte
 10047  011AEA  0A00               	xorlw	0	; case 0
 10048  011AEC  B4D8               	btfsc	status,2,c
 10049  011AEE  D7A5               	goto	l9098
 10050  011AF0  0A01               	xorlw	1	; case 1
 10051  011AF2  B4D8               	btfsc	status,2,c
 10052  011AF4  D01B               	goto	l9136
 10053  011AF6  0A03               	xorlw	3	; case 2
 10054  011AF8  B4D8               	btfsc	status,2,c
 10055  011AFA  D7C9               	goto	l9108
 10056  011AFC  0A01               	xorlw	1	; case 3
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;PIC18F27J53-killifish_light05.c: 150: switch (color) {
 10060  011AFE  D016               	goto	l9136
 10061  011B00                     l9118:
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;PIC18F27J53-killifish_light05.c: 152: CCP1CONbits.DC1B = 0;
 10065  011B00  0ECF               	movlw	-49
 10066  011B02  16BA               	andwf	4026,f,c	;volatile
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;PIC18F27J53-killifish_light05.c: 153: CCPR1L = value;
 10070  011B04  C075  FFBB         	movff	PWM_set@value,4027	;volatile
 10071                           
 10072                           ;PIC18F27J53-killifish_light05.c: 154: break;
 10073  011B08  0012               	return	
 10074  011B0A                     l9122:
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;PIC18F27J53-killifish_light05.c: 156: CCP2CONbits.DC2B = 0;
 10078  011B0A  0ECF               	movlw	-49
 10079  011B0C  16B4               	andwf	4020,f,c	;volatile
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;PIC18F27J53-killifish_light05.c: 157: CCPR2L = value;
 10083  011B0E  C075  FFB5         	movff	PWM_set@value,4021	;volatile
 10084                           
 10085                           ;PIC18F27J53-killifish_light05.c: 158: break;
 10086  011B12  0012               	return	
 10087  011B14                     l9126:
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;PIC18F27J53-killifish_light05.c: 160: CCP3CONbits.DC3B = 0;
 10091  011B14  0ECF               	movlw	-49
 10092  011B16  010F               	movlb	15	; () banked
 10093  011B18  1715               	andwf	21,f,b	;volatile
 10094                           
 10095                           ; BSR set to: 15
 10096                           ;PIC18F27J53-killifish_light05.c: 161: CCPR3L = value;
 10097  011B1A  C075  FF16         	movff	PWM_set@value,3862	;volatile
 10098                           
 10099                           ;PIC18F27J53-killifish_light05.c: 162: break;
 10100  011B1E  0012               	return	
 10101  011B20                     l9130:
 10102                           
 10103                           ;PIC18F27J53-killifish_light05.c: 164: CCP4CONbits.DC4B = 0;
 10104  011B20  0ECF               	movlw	-49
 10105  011B22  010F               	movlb	15	; () banked
 10106  011B24  1712               	andwf	18,f,b	;volatile
 10107                           
 10108                           ; BSR set to: 15
 10109                           ;PIC18F27J53-killifish_light05.c: 165: CCPR4L = value;
 10110  011B26  C075  FF13         	movff	PWM_set@value,3859	;volatile
 10111                           
 10112                           ; BSR set to: 15
 10113                           ;PIC18F27J53-killifish_light05.c: 167: }
 10114                           
 10115                           ;PIC18F27J53-killifish_light05.c: 166: break;
 10116  011B2A  0012               	return	
 10117  011B2C                     l9136:
 10118  011B2C  0100               	movlb	0	; () banked
 10119  011B2E  5179               	movf	PWM_set@color& (0+255),w,b
 10120                           
 10121                           ; Switch size 1, requested type "space"
 10122                           ; Number of cases is 4, Range of values is 0 to 3
 10123                           ; switch strategies available:
 10124                           ; Name         Instructions Cycles
 10125                           ; simple_byte           13     7 (average)
 10126                           ;	Chosen strategy is simple_byte
 10127  011B30  0A00               	xorlw	0	; case 0
 10128  011B32  B4D8               	btfsc	status,2,c
 10129  011B34  D7E5               	goto	l9118
 10130  011B36  0A01               	xorlw	1	; case 1
 10131  011B38  B4D8               	btfsc	status,2,c
 10132  011B3A  D7E7               	goto	l9122
 10133  011B3C  0A03               	xorlw	3	; case 2
 10134  011B3E  B4D8               	btfsc	status,2,c
 10135  011B40  D7E9               	goto	l9126
 10136  011B42  0A01               	xorlw	1	; case 3
 10137  011B44  A4D8               	btfss	status,2,c
 10138  011B46  0012               	return	
 10139  011B48  D7EB               	goto	l9130
 10140  011B4A                     __end_of_PWM_set:
 10141                           	opt stack 0
 10142                           tblptru	equ	0xFF8
 10143                           tblptrh	equ	0xFF7
 10144                           tblptrl	equ	0xFF6
 10145                           tablat	equ	0xFF5
 10146                           prodh	equ	0xFF4
 10147                           prodl	equ	0xFF3
 10148                           intcon	equ	0xFF2
 10149                           intcon2	equ	0xFF1
 10150                           indf0	equ	0xFEF
 10151                           postinc0	equ	0xFEE
 10152                           fsr0h	equ	0xFEA
 10153                           fsr0l	equ	0xFE9
 10154                           wreg	equ	0xFE8
 10155                           postinc1	equ	0xFE6
 10156                           postdec1	equ	0xFE5
 10157                           fsr1h	equ	0xFE2
 10158                           fsr1l	equ	0xFE1
 10159                           indf2	equ	0xFDF
 10160                           postinc2	equ	0xFDE
 10161                           postdec2	equ	0xFDD
 10162                           fsr2h	equ	0xFDA
 10163                           fsr2l	equ	0xFD9
 10164                           status	equ	0xFD8
 10165                           
 10166 ;; *************** function ___wmul *****************
 10167 ;; Defined at:
 10168 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10171 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;  product         2    4[BANK0 ] unsigned int 
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  2    0[BANK0 ] unsigned int 
 10176 ;; Registers used:
 10177 ;;		wreg, status,2, status,0, prodl, prodh
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10183 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10184 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10186 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10187 ;;Total ram usage:        6 bytes
 10188 ;; Hardware stack levels used:    1
 10189 ;; Hardware stack levels required when called:    4
 10190 ;; This function calls:
 10191 ;;		Nothing
 10192 ;; This function is called by:
 10193 ;;		_PWM_set
 10194 ;;		_terminal_operation
 10195 ;;		_sprintf
 10196 ;;		_atoi
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           	psect	text38
 10201  012EDE                     __ptext38:
 10202                           	opt stack 0
 10203  012EDE                     ___wmul:
 10204                           	opt stack 20
 10205                           
 10206                           ;incstack = 0
 10207  012EDE  0100               	movlb	0	; () banked
 10208  012EE0  5160               	movf	___wmul@multiplier& (0+255),w,b
 10209  012EE2  0100               	movlb	0	; () banked
 10210  012EE4  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10211  012EE6  CFF3 F064          	movff	prodl,___wmul@product
 10212  012EEA  CFF4 F065          	movff	prodh,___wmul@product+1
 10213  012EEE  0100               	movlb	0	; () banked
 10214  012EF0  5160               	movf	___wmul@multiplier& (0+255),w,b
 10215  012EF2  0100               	movlb	0	; () banked
 10216  012EF4  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10217  012EF6  50F3               	movf	prodl,w,c
 10218  012EF8  0100               	movlb	0	; () banked
 10219  012EFA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10220  012EFC  0100               	movlb	0	; () banked
 10221  012EFE  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10222  012F00  0100               	movlb	0	; () banked
 10223  012F02  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10224  012F04  50F3               	movf	prodl,w,c
 10225  012F06  0100               	movlb	0	; () banked
 10226  012F08  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10227                           
 10228                           ; BSR set to: 0
 10229  012F0A  C064  F060         	movff	___wmul@product,?___wmul
 10230  012F0E  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10231  012F12  0012               	return	
 10232  012F14                     __end_of___wmul:
 10233                           	opt stack 0
 10234                           tblptru	equ	0xFF8
 10235                           tblptrh	equ	0xFF7
 10236                           tblptrl	equ	0xFF6
 10237                           tablat	equ	0xFF5
 10238                           prodh	equ	0xFF4
 10239                           prodl	equ	0xFF3
 10240                           intcon	equ	0xFF2
 10241                           intcon2	equ	0xFF1
 10242                           indf0	equ	0xFEF
 10243                           postinc0	equ	0xFEE
 10244                           fsr0h	equ	0xFEA
 10245                           fsr0l	equ	0xFE9
 10246                           wreg	equ	0xFE8
 10247                           postinc1	equ	0xFE6
 10248                           postdec1	equ	0xFE5
 10249                           fsr1h	equ	0xFE2
 10250                           fsr1l	equ	0xFE1
 10251                           indf2	equ	0xFDF
 10252                           postinc2	equ	0xFDE
 10253                           postdec2	equ	0xFDD
 10254                           fsr2h	equ	0xFDA
 10255                           fsr2l	equ	0xFD9
 10256                           status	equ	0xFD8
 10257                           
 10258 ;; *************** function ___lwdiv *****************
 10259 ;; Defined at:
 10260 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 10261 ;; Parameters:    Size  Location     Type
 10262 ;;  dividend        2    6[BANK0 ] unsigned int 
 10263 ;;  divisor         2    8[BANK0 ] unsigned int 
 10264 ;; Auto vars:     Size  Location     Type
 10265 ;;  quotient        2   11[BANK0 ] unsigned int 
 10266 ;;  counter         1   10[BANK0 ] unsigned char 
 10267 ;; Return value:  Size  Location     Type
 10268 ;;                  2    6[BANK0 ] unsigned int 
 10269 ;; Registers used:
 10270 ;;		wreg, status,2, status,0
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10276 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10277 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10279 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10280 ;;Total ram usage:        7 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; Hardware stack levels required when called:    4
 10283 ;; This function calls:
 10284 ;;		Nothing
 10285 ;; This function is called by:
 10286 ;;		_ringbuf_put_num
 10287 ;;		_PWM_set
 10288 ;;		_sprintf
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292                           	psect	text39
 10293  012A42                     __ptext39:
 10294                           	opt stack 0
 10295  012A42                     ___lwdiv:
 10296                           	opt stack 20
 10297                           
 10298                           ; BSR set to: 0
 10299                           ;incstack = 0
 10300  012A42  0E00               	movlw	0
 10301  012A44  0100               	movlb	0	; () banked
 10302  012A46  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10303  012A48  0E00               	movlw	0
 10304  012A4A  6F6B               	movwf	___lwdiv@quotient& (0+255),b
 10305                           
 10306                           ; BSR set to: 0
 10307  012A4C  0100               	movlb	0	; () banked
 10308  012A4E  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10309  012A50  0100               	movlb	0	; () banked
 10310  012A52  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10311  012A54  B4D8               	btfsc	status,2,c
 10312  012A56  D02C               	goto	l2080
 10313                           
 10314                           ; BSR set to: 0
 10315  012A58  0E01               	movlw	1
 10316  012A5A  0100               	movlb	0	; () banked
 10317  012A5C  6F6A               	movwf	___lwdiv@counter& (0+255),b
 10318  012A5E  D006               	goto	l8710
 10319  012A60                     l8708:
 10320                           
 10321                           ; BSR set to: 0
 10322  012A60  0100               	movlb	0	; () banked
 10323  012A62  90D8               	bcf	status,0,c
 10324  012A64  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
 10325  012A66  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10326  012A68  0100               	movlb	0	; () banked
 10327  012A6A  2B6A               	incf	___lwdiv@counter& (0+255),f,b
 10328  012A6C                     l8710:
 10329                           
 10330                           ; BSR set to: 0
 10331  012A6C  0100               	movlb	0	; () banked
 10332  012A6E  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10333  012A70  D7F7               	goto	l8708
 10334  012A72                     l8712:
 10335                           
 10336                           ; BSR set to: 0
 10337  012A72  0100               	movlb	0	; () banked
 10338  012A74  90D8               	bcf	status,0,c
 10339  012A76  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
 10340  012A78  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10341                           
 10342                           ; BSR set to: 0
 10343  012A7A  0100               	movlb	0	; () banked
 10344  012A7C  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10345  012A7E  0100               	movlb	0	; () banked
 10346  012A80  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
 10347  012A82  0100               	movlb	0	; () banked
 10348  012A84  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10349  012A86  0100               	movlb	0	; () banked
 10350  012A88  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10351  012A8A  A0D8               	btfss	status,0,c
 10352  012A8C  D00A               	goto	l8720
 10353                           
 10354                           ; BSR set to: 0
 10355  012A8E  0100               	movlb	0	; () banked
 10356  012A90  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10357  012A92  0100               	movlb	0	; () banked
 10358  012A94  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
 10359  012A96  0100               	movlb	0	; () banked
 10360  012A98  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10361  012A9A  0100               	movlb	0	; () banked
 10362  012A9C  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10363                           
 10364                           ; BSR set to: 0
 10365  012A9E  0100               	movlb	0	; () banked
 10366  012AA0  816B               	bsf	___lwdiv@quotient& (0+255),0,b
 10367  012AA2                     l8720:
 10368                           
 10369                           ; BSR set to: 0
 10370  012AA2  0100               	movlb	0	; () banked
 10371  012AA4  90D8               	bcf	status,0,c
 10372  012AA6  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10373  012AA8  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
 10374                           
 10375                           ; BSR set to: 0
 10376  012AAA  0100               	movlb	0	; () banked
 10377  012AAC  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
 10378  012AAE  D7E1               	goto	l8712
 10379  012AB0                     l2080:
 10380                           
 10381                           ; BSR set to: 0
 10382  012AB0  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
 10383  012AB4  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10384                           
 10385                           ; BSR set to: 0
 10386  012AB8  0012               	return		;funcret
 10387  012ABA                     __end_of___lwdiv:
 10388                           	opt stack 0
 10389                           tblptru	equ	0xFF8
 10390                           tblptrh	equ	0xFF7
 10391                           tblptrl	equ	0xFF6
 10392                           tablat	equ	0xFF5
 10393                           prodh	equ	0xFF4
 10394                           prodl	equ	0xFF3
 10395                           intcon	equ	0xFF2
 10396                           intcon2	equ	0xFF1
 10397                           indf0	equ	0xFEF
 10398                           postinc0	equ	0xFEE
 10399                           fsr0h	equ	0xFEA
 10400                           fsr0l	equ	0xFE9
 10401                           wreg	equ	0xFE8
 10402                           postinc1	equ	0xFE6
 10403                           postdec1	equ	0xFE5
 10404                           fsr1h	equ	0xFE2
 10405                           fsr1l	equ	0xFE1
 10406                           indf2	equ	0xFDF
 10407                           postinc2	equ	0xFDE
 10408                           postdec2	equ	0xFDD
 10409                           fsr2h	equ	0xFDA
 10410                           fsr2l	equ	0xFD9
 10411                           status	equ	0xFD8
 10412                           
 10413 ;; *************** function _UART_task *****************
 10414 ;; Defined at:
 10415 ;;		line 43 in file "../My_library/My_UART.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;		None
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;		None
 10420 ;; Return value:  Size  Location     Type
 10421 ;;		None               void
 10422 ;; Registers used:
 10423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/0
 10426 ;;		On exit  : 0/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10433 ;;Total ram usage:        0 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; Hardware stack levels required when called:    5
 10436 ;; This function calls:
 10437 ;;		_ringbuf_num
 10438 ;; This function is called by:
 10439 ;;		_main
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           
 10443                           	psect	text40
 10444  012FFA                     __ptext40:
 10445                           	opt stack 0
 10446  012FFA                     _UART_task:
 10447                           	opt stack 25
 10448                           
 10449                           ;My_UART.c: 44: if (ringbuf_num(&uart_tx)) {
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;incstack = 0
 10453  012FFA  0E55               	movlw	low _uart_tx
 10454  012FFC  0100               	movlb	0	; () banked
 10455  012FFE  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10456  013000  0E01               	movlw	high _uart_tx
 10457  013002  0100               	movlb	0	; () banked
 10458  013004  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10459  013006  EC1E  F08E         	call	_ringbuf_num	;wreg free
 10460  01300A  0100               	movlb	0	; () banked
 10461  01300C  5160               	movf	?_ringbuf_num& (0+255),w,b
 10462  01300E  0100               	movlb	0	; () banked
 10463  013010  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10464  013012  B4D8               	btfsc	status,2,c
 10465  013014  0012               	return	
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;My_UART.c: 45: PIE1bits.TXIE = 1;
 10469  013016  889D               	bsf	3997,4,c	;volatile
 10470  013018  0012               	return	
 10471  01301A                     __end_of_UART_task:
 10472                           	opt stack 0
 10473                           tblptru	equ	0xFF8
 10474                           tblptrh	equ	0xFF7
 10475                           tblptrl	equ	0xFF6
 10476                           tablat	equ	0xFF5
 10477                           prodh	equ	0xFF4
 10478                           prodl	equ	0xFF3
 10479                           intcon	equ	0xFF2
 10480                           intcon2	equ	0xFF1
 10481                           indf0	equ	0xFEF
 10482                           postinc0	equ	0xFEE
 10483                           fsr0h	equ	0xFEA
 10484                           fsr0l	equ	0xFE9
 10485                           wreg	equ	0xFE8
 10486                           postinc1	equ	0xFE6
 10487                           postdec1	equ	0xFE5
 10488                           fsr1h	equ	0xFE2
 10489                           fsr1l	equ	0xFE1
 10490                           indf2	equ	0xFDF
 10491                           postinc2	equ	0xFDE
 10492                           postdec2	equ	0xFDD
 10493                           fsr2h	equ	0xFDA
 10494                           fsr2l	equ	0xFD9
 10495                           status	equ	0xFD8
 10496                           
 10497 ;; *************** function _ringbuf_num *****************
 10498 ;; Defined at:
 10499 ;;		line 12 in file "../My_library/My_ringbuf.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 10502 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 10503 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;		None
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  2    0[BANK0 ] unsigned int 
 10508 ;; Registers used:
 10509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10517 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10518 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10519 ;;Total ram usage:        8 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; Hardware stack levels required when called:    4
 10522 ;; This function calls:
 10523 ;;		Nothing
 10524 ;; This function is called by:
 10525 ;;		_ringbuf_put
 10526 ;;		_ringbuf_pop
 10527 ;;		_ringbuf_backspace
 10528 ;;		_terminal_task
 10529 ;;		_UART_task
 10530 ;;		_ST7032_task
 10531 ;;		_USB_task
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           	psect	text41
 10536  011C3C                     __ptext41:
 10537                           	opt stack 0
 10538  011C3C                     _ringbuf_num:
 10539                           	opt stack 20
 10540                           
 10541                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;incstack = 0
 10545  011C3C  0100               	movlb	0	; () banked
 10546  011C3E  EE20 F006          	lfsr	2,6
 10547  011C42  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10548  011C44  26D9               	addwf	fsr2l,f,c
 10549  011C46  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10550  011C48  22DA               	addwfc	fsr2h,f,c
 10551  011C4A  0100               	movlb	0	; () banked
 10552  011C4C  EE10 F004          	lfsr	1,4
 10553  011C50  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10554  011C52  26E1               	addwf	fsr1l,f,c
 10555  011C54  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10556  011C56  22E2               	addwfc	fsr1h,f,c
 10557  011C58  50DE               	movf	postinc2,w,c
 10558  011C5A  5CE6               	subwf	postinc1,w,c
 10559  011C5C  50DE               	movf	postinc2,w,c
 10560  011C5E  58E6               	subwfb	postinc1,w,c
 10561  011C60  A0D8               	btfss	status,0,c
 10562  011C62  D028               	goto	l8530
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 10566  011C64  0100               	movlb	0	; () banked
 10567  011C66  EE20 F004          	lfsr	2,4
 10568  011C6A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10569  011C6C  26D9               	addwf	fsr2l,f,c
 10570  011C6E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10571  011C70  22DA               	addwfc	fsr2h,f,c
 10572  011C72  CFDE F062          	movff	postinc2,??_ringbuf_num
 10573  011C76  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 10574  011C7A  0100               	movlb	0	; () banked
 10575  011C7C  EE20 F006          	lfsr	2,6
 10576  011C80  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10577  011C82  26D9               	addwf	fsr2l,f,c
 10578  011C84  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10579  011C86  22DA               	addwfc	fsr2h,f,c
 10580  011C88  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 10581  011C8C  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 10582  011C90  0100               	movlb	0	; () banked
 10583  011C92  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 10584  011C94  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 10585  011C96  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 10586  011C98  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 10587  011C9A  0100               	movlb	0	; () banked
 10588  011C9C  5162               	movf	??_ringbuf_num& (0+255),w,b
 10589  011C9E  0100               	movlb	0	; () banked
 10590  011CA0  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 10591  011CA2  0100               	movlb	0	; () banked
 10592  011CA4  6F60               	movwf	?_ringbuf_num& (0+255),b
 10593  011CA6  0100               	movlb	0	; () banked
 10594  011CA8  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 10595  011CAA  0100               	movlb	0	; () banked
 10596  011CAC  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 10597  011CAE  0100               	movlb	0	; () banked
 10598  011CB0  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;My_ringbuf.c: 15: } else {
 10602                           
 10603                           ; BSR set to: 0
 10604  011CB2  0012               	return	
 10605  011CB4                     l8530:
 10606                           
 10607                           ; BSR set to: 0
 10608                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 10609  011CB4  0100               	movlb	0	; () banked
 10610  011CB6  EE20 F004          	lfsr	2,4
 10611  011CBA  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10612  011CBC  26D9               	addwf	fsr2l,f,c
 10613  011CBE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10614  011CC0  22DA               	addwfc	fsr2h,f,c
 10615  011CC2  CFDE F062          	movff	postinc2,??_ringbuf_num
 10616  011CC6  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 10617  011CCA  0100               	movlb	0	; () banked
 10618  011CCC  EE20 F002          	lfsr	2,2
 10619  011CD0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10620  011CD2  26D9               	addwf	fsr2l,f,c
 10621  011CD4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10622  011CD6  22DA               	addwfc	fsr2h,f,c
 10623  011CD8  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 10624  011CDC  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 10625  011CE0  0100               	movlb	0	; () banked
 10626  011CE2  EE20 F006          	lfsr	2,6
 10627  011CE6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10628  011CE8  26D9               	addwf	fsr2l,f,c
 10629  011CEA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10630  011CEC  22DA               	addwfc	fsr2h,f,c
 10631  011CEE  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 10632  011CF2  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 10633  011CF6  0100               	movlb	0	; () banked
 10634  011CF8  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 10635  011CFA  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 10636  011CFC  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 10637  011CFE  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 10638  011D00  0100               	movlb	0	; () banked
 10639  011D02  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 10640  011D04  0100               	movlb	0	; () banked
 10641  011D06  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 10642  011D08  0100               	movlb	0	; () banked
 10643  011D0A  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 10644  011D0C  0100               	movlb	0	; () banked
 10645  011D0E  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 10646  011D10  0100               	movlb	0	; () banked
 10647  011D12  5162               	movf	??_ringbuf_num& (0+255),w,b
 10648  011D14  0100               	movlb	0	; () banked
 10649  011D16  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 10650  011D18  0100               	movlb	0	; () banked
 10651  011D1A  6F60               	movwf	?_ringbuf_num& (0+255),b
 10652  011D1C  0100               	movlb	0	; () banked
 10653  011D1E  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 10654  011D20  0100               	movlb	0	; () banked
 10655  011D22  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 10656  011D24  0100               	movlb	0	; () banked
 10657  011D26  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 10658                           
 10659                           ; BSR set to: 0
 10660  011D28  0012               	return	
 10661  011D2A                     __end_of_ringbuf_num:
 10662                           	opt stack 0
 10663                           tblptru	equ	0xFF8
 10664                           tblptrh	equ	0xFF7
 10665                           tblptrl	equ	0xFF6
 10666                           tablat	equ	0xFF5
 10667                           prodh	equ	0xFF4
 10668                           prodl	equ	0xFF3
 10669                           intcon	equ	0xFF2
 10670                           intcon2	equ	0xFF1
 10671                           indf0	equ	0xFEF
 10672                           postinc0	equ	0xFEE
 10673                           fsr0h	equ	0xFEA
 10674                           fsr0l	equ	0xFE9
 10675                           wreg	equ	0xFE8
 10676                           postinc1	equ	0xFE6
 10677                           postdec1	equ	0xFE5
 10678                           fsr1h	equ	0xFE2
 10679                           fsr1l	equ	0xFE1
 10680                           indf2	equ	0xFDF
 10681                           postinc2	equ	0xFDE
 10682                           postdec2	equ	0xFDD
 10683                           fsr2h	equ	0xFDA
 10684                           fsr2l	equ	0xFD9
 10685                           status	equ	0xFD8
 10686                           
 10687 ;; *************** function _RTCC_task *****************
 10688 ;; Defined at:
 10689 ;;		line 352 in file "../My_library/My_RTCC.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;		None
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;		None
 10694 ;; Return value:  Size  Location     Type
 10695 ;;		None               void
 10696 ;; Registers used:
 10697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10707 ;;Total ram usage:        0 bytes
 10708 ;; Hardware stack levels used:    1
 10709 ;; Hardware stack levels required when called:    8
 10710 ;; This function calls:
 10711 ;;		_RTCC_from_RTCC
 10712 ;; This function is called by:
 10713 ;;		_main
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717                           	psect	text42
 10718  012E6C                     __ptext42:
 10719                           	opt stack 0
 10720  012E6C                     _RTCC_task:
 10721                           	opt stack 22
 10722                           
 10723                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 10724                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;incstack = 0
 10728  012E6C  010F               	movlb	15	; () banked
 10729  012E6E  B93F               	btfsc	63,4,b	;volatile
 10730  012E70  0012               	return	
 10731                           
 10732                           ; BSR set to: 15
 10733                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 10734                           
 10735                           ; BSR set to: 15
 10736                           
 10737                           ; BSR set to: 15
 10738  012E72  0E00               	movlw	0
 10739  012E74  B73F               	btfsc	63,3,b	;volatile
 10740  012E76  0E01               	movlw	1
 10741  012E78  0101               	movlb	1	; () banked
 10742  012E7A  6F43               	movwf	(_now+12)& (0+255),b
 10743                           
 10744                           ; BSR set to: 1
 10745                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 10746  012E7C  0100               	movlb	0	; () banked
 10747  012E7E  51DF               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 10748  012E80  0101               	movlb	1	; () banked
 10749  012E82  1943               	xorwf	(_now+12)& (0+255),w,b
 10750  012E84  B4D8               	btfsc	status,2,c
 10751  012E86  0012               	return	
 10752                           
 10753                           ; BSR set to: 1
 10754                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 10755  012E88  C143  F0DF         	movff	_now+12,RTCC_task@prev_halfsec
 10756                           
 10757                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 10758  012E8C  C143  F142         	movff	_now+12,_now+11
 10759                           
 10760                           ; BSR set to: 1
 10761                           ;My_RTCC.c: 359: time_change_flag = 1;
 10762  012E90  0E01               	movlw	1
 10763  012E92  0100               	movlb	0	; () banked
 10764  012E94  6FE8               	movwf	_time_change_flag& (0+255),b
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 10768  012E96  0E37               	movlw	low _now
 10769  012E98  0100               	movlb	0	; () banked
 10770  012E9A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 10771  012E9C  0E01               	movlw	high _now
 10772  012E9E  0100               	movlb	0	; () banked
 10773  012EA0  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 10774  012EA2  EC36  F098         	call	_RTCC_from_RTCC	;wreg free
 10775  012EA6  0012               	return	
 10776  012EA8                     __end_of_RTCC_task:
 10777                           	opt stack 0
 10778                           tblptru	equ	0xFF8
 10779                           tblptrh	equ	0xFF7
 10780                           tblptrl	equ	0xFF6
 10781                           tablat	equ	0xFF5
 10782                           prodh	equ	0xFF4
 10783                           prodl	equ	0xFF3
 10784                           intcon	equ	0xFF2
 10785                           intcon2	equ	0xFF1
 10786                           indf0	equ	0xFEF
 10787                           postinc0	equ	0xFEE
 10788                           fsr0h	equ	0xFEA
 10789                           fsr0l	equ	0xFE9
 10790                           wreg	equ	0xFE8
 10791                           postinc1	equ	0xFE6
 10792                           postdec1	equ	0xFE5
 10793                           fsr1h	equ	0xFE2
 10794                           fsr1l	equ	0xFE1
 10795                           indf2	equ	0xFDF
 10796                           postinc2	equ	0xFDE
 10797                           postdec2	equ	0xFDD
 10798                           fsr2h	equ	0xFDA
 10799                           fsr2l	equ	0xFD9
 10800                           status	equ	0xFD8
 10801                           
 10802 ;; *************** function _RTCC_from_RTCC *****************
 10803 ;; Defined at:
 10804 ;;		line 199 in file "../My_library/My_RTCC.c"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;  tm              2   38[BANK0 ] PTR struct .
 10807 ;;		 -> now(14), 
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;		None
 10810 ;; Return value:  Size  Location     Type
 10811 ;;		None               void
 10812 ;; Registers used:
 10813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10814 ;; Tracked objects:
 10815 ;;		On entry : 0/0
 10816 ;;		On exit  : 0/0
 10817 ;;		Unchanged: 0/0
 10818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10819 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10822 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10823 ;;Total ram usage:        2 bytes
 10824 ;; Hardware stack levels used:    1
 10825 ;; Hardware stack levels required when called:    7
 10826 ;; This function calls:
 10827 ;;		_RTCC_to_caltime
 10828 ;;		_caltime_to_epoch
 10829 ;; This function is called by:
 10830 ;;		_RTCC_init
 10831 ;;		_RTCC_task
 10832 ;;		_print_time
 10833 ;;		_light_task
 10834 ;;		_main
 10835 ;;		_display_time_0802
 10836 ;;		_display_time_1602
 10837 ;;		_RTCC_adjust_time_inc
 10838 ;;		_RTCC_adjust_time_dec
 10839 ;; This function uses a non-reentrant model
 10840 ;;
 10841                           
 10842                           	psect	text43
 10843  01306C                     __ptext43:
 10844                           	opt stack 0
 10845  01306C                     _RTCC_from_RTCC:
 10846                           	opt stack 18
 10847                           
 10848                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 10849                           
 10850                           ;incstack = 0
 10851  01306C  C086  F061         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 10852  013070  C087  F062         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 10853  013074  EC61  F091         	call	_RTCC_to_caltime	;wreg free
 10854                           
 10855                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 10856  013078  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 10857  01307C  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 10858  013080  EC44  F088         	call	_caltime_to_epoch	;wreg free
 10859  013084  0012               	return		;funcret
 10860  013086                     __end_of_RTCC_from_RTCC:
 10861                           	opt stack 0
 10862                           tblptru	equ	0xFF8
 10863                           tblptrh	equ	0xFF7
 10864                           tblptrl	equ	0xFF6
 10865                           tablat	equ	0xFF5
 10866                           prodh	equ	0xFF4
 10867                           prodl	equ	0xFF3
 10868                           intcon	equ	0xFF2
 10869                           intcon2	equ	0xFF1
 10870                           indf0	equ	0xFEF
 10871                           postinc0	equ	0xFEE
 10872                           fsr0h	equ	0xFEA
 10873                           fsr0l	equ	0xFE9
 10874                           wreg	equ	0xFE8
 10875                           postinc1	equ	0xFE6
 10876                           postdec1	equ	0xFE5
 10877                           fsr1h	equ	0xFE2
 10878                           fsr1l	equ	0xFE1
 10879                           indf2	equ	0xFDF
 10880                           postinc2	equ	0xFDE
 10881                           postdec2	equ	0xFDD
 10882                           fsr2h	equ	0xFDA
 10883                           fsr2l	equ	0xFD9
 10884                           status	equ	0xFD8
 10885                           
 10886 ;; *************** function _caltime_to_epoch *****************
 10887 ;; Defined at:
 10888 ;;		line 179 in file "../My_library/My_RTCC.c"
 10889 ;; Parameters:    Size  Location     Type
 10890 ;;  tm              2   25[BANK0 ] PTR struct .
 10891 ;;		 -> now(14), 
 10892 ;; Auto vars:     Size  Location     Type
 10893 ;;  month           1   37[BANK0 ] unsigned char 
 10894 ;;  month           1   32[BANK0 ] unsigned char 
 10895 ;;  year            1   31[BANK0 ] unsigned char 
 10896 ;;  epoch           4   33[BANK0 ] unsigned long 
 10897 ;; Return value:  Size  Location     Type
 10898 ;;		None               void
 10899 ;; Registers used:
 10900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10907 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10908 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10909 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10910 ;;Total ram usage:       13 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; Hardware stack levels required when called:    6
 10913 ;; This function calls:
 10914 ;;		___lmul
 10915 ;;		_month_length
 10916 ;; This function is called by:
 10917 ;;		_RTCC_from_RTCC
 10918 ;;		_RTCC_from_caltime
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           	psect	text44
 10923  011088                     __ptext44:
 10924                           	opt stack 0
 10925  011088                     _caltime_to_epoch:
 10926                           	opt stack 18
 10927                           
 10928                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 10929                           
 10930                           ;incstack = 0
 10931  011088  0E00               	movlw	0
 10932  01108A  0100               	movlb	0	; () banked
 10933  01108C  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 10934  01108E  0E00               	movlw	0
 10935  011090  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 10936  011092  0E00               	movlw	0
 10937  011094  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 10938  011096  0E00               	movlw	0
 10939  011098  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 10940                           
 10941                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 10942  01109A  0E00               	movlw	0
 10943  01109C  0100               	movlb	0	; () banked
 10944  01109E  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 10945  0110A0  D037               	goto	l8668
 10946  0110A2                     l8654:
 10947                           
 10948                           ; BSR set to: 0
 10949                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 10950  0110A2  0E01               	movlw	1
 10951  0110A4  0100               	movlb	0	; () banked
 10952  0110A6  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 10953  0110A8                     l8656:
 10954                           
 10955                           ; BSR set to: 0
 10956  0110A8  0E0C               	movlw	12
 10957  0110AA  0100               	movlb	0	; () banked
 10958  0110AC  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 10959  0110AE  D001               	goto	l8660
 10960  0110B0  D02D               	goto	l8666
 10961  0110B2                     l8660:
 10962                           
 10963                           ; BSR set to: 0
 10964                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 10965  0110B2  C085  F020         	movff	caltime_to_epoch@month,month_length@month
 10966  0110B6  0100               	movlb	0	; () banked
 10967  0110B8  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 10968  0110BA  EC95  F08E         	call	_month_length
 10969  0110BE  0100               	movlb	0	; () banked
 10970  0110C0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 10971  0110C2  0100               	movlb	0	; () banked
 10972  0110C4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 10973  0110C6  0100               	movlb	0	; () banked
 10974  0110C8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 10975  0110CA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 10976  0110CC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 10977  0110CE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 10978  0110D0  0E80               	movlw	128
 10979  0110D2  0100               	movlb	0	; () banked
 10980  0110D4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10981  0110D6  0E51               	movlw	81
 10982  0110D8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10983  0110DA  0E01               	movlw	1
 10984  0110DC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10985  0110DE  0E00               	movlw	0
 10986  0110E0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10987  0110E2  EC5D  F095         	call	___lmul	;wreg free
 10988  0110E6  0100               	movlb	0	; () banked
 10989  0110E8  516D               	movf	?___lmul& (0+255),w,b
 10990  0110EA  0100               	movlb	0	; () banked
 10991  0110EC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 10992  0110EE  0100               	movlb	0	; () banked
 10993  0110F0  516E               	movf	(?___lmul+1)& (0+255),w,b
 10994  0110F2  0100               	movlb	0	; () banked
 10995  0110F4  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 10996  0110F6  0100               	movlb	0	; () banked
 10997  0110F8  516F               	movf	(?___lmul+2)& (0+255),w,b
 10998  0110FA  0100               	movlb	0	; () banked
 10999  0110FC  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11000  0110FE  0100               	movlb	0	; () banked
 11001  011100  5170               	movf	(?___lmul+3)& (0+255),w,b
 11002  011102  0100               	movlb	0	; () banked
 11003  011104  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11004                           
 11005                           ; BSR set to: 0
 11006  011106  0100               	movlb	0	; () banked
 11007  011108  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 11008  01110A  D7CE               	goto	l8656
 11009  01110C                     l8666:
 11010                           
 11011                           ; BSR set to: 0
 11012  01110C  0100               	movlb	0	; () banked
 11013  01110E  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 11014  011110                     l8668:
 11015                           
 11016                           ; BSR set to: 0
 11017  011110  0100               	movlb	0	; () banked
 11018  011112  EE20 F00A          	lfsr	2,10
 11019  011116  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11020  011118  26D9               	addwf	fsr2l,f,c
 11021  01111A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11022  01111C  22DA               	addwfc	fsr2h,f,c
 11023  01111E  50DE               	movf	postinc2,w,c
 11024  011120  0100               	movlb	0	; () banked
 11025  011122  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 11026  011124  A0D8               	btfss	status,0,c
 11027  011126  D7BD               	goto	l8654
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;My_RTCC.c: 184: }
 11031                           ;My_RTCC.c: 185: }
 11032                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 11033                           
 11034                           ; BSR set to: 0
 11035  011128  0E01               	movlw	1
 11036  01112A  0100               	movlb	0	; () banked
 11037  01112C  6F80               	movwf	caltime_to_epoch@month_3637& (0+255),b
 11038  01112E  D032               	goto	l8676
 11039  011130                     l8672:
 11040                           
 11041                           ; BSR set to: 0
 11042                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 11043  011130  C080  F020         	movff	caltime_to_epoch@month_3637,month_length@month
 11044  011134  0100               	movlb	0	; () banked
 11045  011136  EE20 F00A          	lfsr	2,10
 11046  01113A  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11047  01113C  26D9               	addwf	fsr2l,f,c
 11048  01113E  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11049  011140  22DA               	addwfc	fsr2h,f,c
 11050  011142  50DF               	movf	indf2,w,c
 11051  011144  EC95  F08E         	call	_month_length
 11052  011148  0100               	movlb	0	; () banked
 11053  01114A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11054  01114C  0100               	movlb	0	; () banked
 11055  01114E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11056  011150  0100               	movlb	0	; () banked
 11057  011152  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11058  011154  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11059  011156  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11060  011158  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11061  01115A  0E80               	movlw	128
 11062  01115C  0100               	movlb	0	; () banked
 11063  01115E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11064  011160  0E51               	movlw	81
 11065  011162  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11066  011164  0E01               	movlw	1
 11067  011166  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11068  011168  0E00               	movlw	0
 11069  01116A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11070  01116C  EC5D  F095         	call	___lmul	;wreg free
 11071  011170  0100               	movlb	0	; () banked
 11072  011172  516D               	movf	?___lmul& (0+255),w,b
 11073  011174  0100               	movlb	0	; () banked
 11074  011176  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11075  011178  0100               	movlb	0	; () banked
 11076  01117A  516E               	movf	(?___lmul+1)& (0+255),w,b
 11077  01117C  0100               	movlb	0	; () banked
 11078  01117E  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11079  011180  0100               	movlb	0	; () banked
 11080  011182  516F               	movf	(?___lmul+2)& (0+255),w,b
 11081  011184  0100               	movlb	0	; () banked
 11082  011186  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11083  011188  0100               	movlb	0	; () banked
 11084  01118A  5170               	movf	(?___lmul+3)& (0+255),w,b
 11085  01118C  0100               	movlb	0	; () banked
 11086  01118E  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11087                           
 11088                           ; BSR set to: 0
 11089  011190  0100               	movlb	0	; () banked
 11090  011192  2B80               	incf	caltime_to_epoch@month_3637& (0+255),f,b
 11091  011194                     l8676:
 11092                           
 11093                           ; BSR set to: 0
 11094  011194  0100               	movlb	0	; () banked
 11095  011196  EE20 F009          	lfsr	2,9
 11096  01119A  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11097  01119C  26D9               	addwf	fsr2l,f,c
 11098  01119E  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11099  0111A0  22DA               	addwfc	fsr2h,f,c
 11100  0111A2  50DE               	movf	postinc2,w,c
 11101  0111A4  0100               	movlb	0	; () banked
 11102  0111A6  5D80               	subwf	caltime_to_epoch@month_3637& (0+255),w,b
 11103  0111A8  A0D8               	btfss	status,0,c
 11104  0111AA  D7C2               	goto	l8672
 11105                           
 11106                           ; BSR set to: 0
 11107                           ;My_RTCC.c: 188: }
 11108                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 11109                           
 11110                           ; BSR set to: 0
 11111  0111AC  0EFF               	movlw	255
 11112  0111AE  0100               	movlb	0	; () banked
 11113  0111B0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11114  0111B2  0EFF               	movlw	255
 11115  0111B4  0100               	movlb	0	; () banked
 11116  0111B6  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 11117  0111B8  0100               	movlb	0	; () banked
 11118  0111BA  EE20 F008          	lfsr	2,8
 11119  0111BE  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11120  0111C0  26D9               	addwf	fsr2l,f,c
 11121  0111C2  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11122  0111C4  22DA               	addwfc	fsr2h,f,c
 11123  0111C6  50DF               	movf	indf2,w,c
 11124  0111C8  0100               	movlb	0	; () banked
 11125  0111CA  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 11126  0111CC  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 11127  0111CE  0100               	movlb	0	; () banked
 11128  0111D0  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11129  0111D2  0100               	movlb	0	; () banked
 11130  0111D4  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 11131  0111D6  0100               	movlb	0	; () banked
 11132  0111D8  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 11133  0111DA  0100               	movlb	0	; () banked
 11134  0111DC  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 11135  0111DE  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 11136  0111E2  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 11137  0111E6  0100               	movlb	0	; () banked
 11138  0111E8  0E00               	movlw	0
 11139  0111EA  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 11140  0111EC  0EFF               	movlw	-1
 11141  0111EE  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 11142  0111F0  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 11143  0111F2  0E80               	movlw	128
 11144  0111F4  0100               	movlb	0	; () banked
 11145  0111F6  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11146  0111F8  0E51               	movlw	81
 11147  0111FA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11148  0111FC  0E01               	movlw	1
 11149  0111FE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11150  011200  0E00               	movlw	0
 11151  011202  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11152  011204  EC5D  F095         	call	___lmul	;wreg free
 11153  011208  0100               	movlb	0	; () banked
 11154  01120A  516D               	movf	?___lmul& (0+255),w,b
 11155  01120C  0100               	movlb	0	; () banked
 11156  01120E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11157  011210  0100               	movlb	0	; () banked
 11158  011212  516E               	movf	(?___lmul+1)& (0+255),w,b
 11159  011214  0100               	movlb	0	; () banked
 11160  011216  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11161  011218  0100               	movlb	0	; () banked
 11162  01121A  516F               	movf	(?___lmul+2)& (0+255),w,b
 11163  01121C  0100               	movlb	0	; () banked
 11164  01121E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11165  011220  0100               	movlb	0	; () banked
 11166  011222  5170               	movf	(?___lmul+3)& (0+255),w,b
 11167  011224  0100               	movlb	0	; () banked
 11168  011226  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11169                           
 11170                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 11171  011228  0100               	movlb	0	; () banked
 11172  01122A  EE20 F006          	lfsr	2,6
 11173  01122E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11174  011230  26D9               	addwf	fsr2l,f,c
 11175  011232  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11176  011234  22DA               	addwfc	fsr2h,f,c
 11177  011236  50DF               	movf	indf2,w,c
 11178  011238  0100               	movlb	0	; () banked
 11179  01123A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11180  01123C  0100               	movlb	0	; () banked
 11181  01123E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11182  011240  0100               	movlb	0	; () banked
 11183  011242  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11184  011244  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11185  011246  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11186  011248  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11187  01124A  0E10               	movlw	16
 11188  01124C  0100               	movlb	0	; () banked
 11189  01124E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11190  011250  0E0E               	movlw	14
 11191  011252  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11192  011254  0E00               	movlw	0
 11193  011256  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11194  011258  0E00               	movlw	0
 11195  01125A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11196  01125C  EC5D  F095         	call	___lmul	;wreg free
 11197  011260  0100               	movlb	0	; () banked
 11198  011262  516D               	movf	?___lmul& (0+255),w,b
 11199  011264  0100               	movlb	0	; () banked
 11200  011266  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11201  011268  0100               	movlb	0	; () banked
 11202  01126A  516E               	movf	(?___lmul+1)& (0+255),w,b
 11203  01126C  0100               	movlb	0	; () banked
 11204  01126E  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11205  011270  0100               	movlb	0	; () banked
 11206  011272  516F               	movf	(?___lmul+2)& (0+255),w,b
 11207  011274  0100               	movlb	0	; () banked
 11208  011276  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11209  011278  0100               	movlb	0	; () banked
 11210  01127A  5170               	movf	(?___lmul+3)& (0+255),w,b
 11211  01127C  0100               	movlb	0	; () banked
 11212  01127E  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11213                           
 11214                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 11215  011280  0100               	movlb	0	; () banked
 11216  011282  EE20 F005          	lfsr	2,5
 11217  011286  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11218  011288  26D9               	addwf	fsr2l,f,c
 11219  01128A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11220  01128C  22DA               	addwfc	fsr2h,f,c
 11221  01128E  50DF               	movf	indf2,w,c
 11222  011290  0100               	movlb	0	; () banked
 11223  011292  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11224  011294  0100               	movlb	0	; () banked
 11225  011296  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11226  011298  0100               	movlb	0	; () banked
 11227  01129A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11228  01129C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11229  01129E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11230  0112A0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11231  0112A2  0E3C               	movlw	60
 11232  0112A4  0100               	movlb	0	; () banked
 11233  0112A6  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11234  0112A8  0E00               	movlw	0
 11235  0112AA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11236  0112AC  0E00               	movlw	0
 11237  0112AE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11238  0112B0  0E00               	movlw	0
 11239  0112B2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11240  0112B4  EC5D  F095         	call	___lmul	;wreg free
 11241  0112B8  0100               	movlb	0	; () banked
 11242  0112BA  516D               	movf	?___lmul& (0+255),w,b
 11243  0112BC  0100               	movlb	0	; () banked
 11244  0112BE  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11245  0112C0  0100               	movlb	0	; () banked
 11246  0112C2  516E               	movf	(?___lmul+1)& (0+255),w,b
 11247  0112C4  0100               	movlb	0	; () banked
 11248  0112C6  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11249  0112C8  0100               	movlb	0	; () banked
 11250  0112CA  516F               	movf	(?___lmul+2)& (0+255),w,b
 11251  0112CC  0100               	movlb	0	; () banked
 11252  0112CE  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11253  0112D0  0100               	movlb	0	; () banked
 11254  0112D2  5170               	movf	(?___lmul+3)& (0+255),w,b
 11255  0112D4  0100               	movlb	0	; () banked
 11256  0112D6  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11257                           
 11258                           ; BSR set to: 0
 11259                           ;My_RTCC.c: 192: epoch += tm->ss;
 11260  0112D8  0100               	movlb	0	; () banked
 11261  0112DA  EE20 F004          	lfsr	2,4
 11262  0112DE  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11263  0112E0  26D9               	addwf	fsr2l,f,c
 11264  0112E2  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11265  0112E4  22DA               	addwfc	fsr2h,f,c
 11266  0112E6  50DF               	movf	indf2,w,c
 11267  0112E8  0100               	movlb	0	; () banked
 11268  0112EA  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11269  0112EC  0100               	movlb	0	; () banked
 11270  0112EE  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11271  0112F0  0100               	movlb	0	; () banked
 11272  0112F2  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11273  0112F4  0E00               	movlw	0
 11274  0112F6  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11275  0112F8  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11276  0112FA  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11277                           
 11278                           ; BSR set to: 0
 11279                           ;My_RTCC.c: 194: tm->epoch = epoch;
 11280  0112FC  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 11281  011300  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 11282  011304  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 11283  011308  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 11284  01130C  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 11285  011310  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 11286                           
 11287                           ; BSR set to: 0
 11288  011314  0012               	return		;funcret
 11289  011316                     __end_of_caltime_to_epoch:
 11290                           	opt stack 0
 11291                           tblptru	equ	0xFF8
 11292                           tblptrh	equ	0xFF7
 11293                           tblptrl	equ	0xFF6
 11294                           tablat	equ	0xFF5
 11295                           prodh	equ	0xFF4
 11296                           prodl	equ	0xFF3
 11297                           intcon	equ	0xFF2
 11298                           intcon2	equ	0xFF1
 11299                           indf0	equ	0xFEF
 11300                           postinc0	equ	0xFEE
 11301                           fsr0h	equ	0xFEA
 11302                           fsr0l	equ	0xFE9
 11303                           wreg	equ	0xFE8
 11304                           postinc1	equ	0xFE6
 11305                           postdec1	equ	0xFE5
 11306                           fsr1h	equ	0xFE2
 11307                           fsr1l	equ	0xFE1
 11308                           indf2	equ	0xFDF
 11309                           postinc2	equ	0xFDE
 11310                           postdec2	equ	0xFDD
 11311                           fsr2h	equ	0xFDA
 11312                           fsr2l	equ	0xFD9
 11313                           status	equ	0xFD8
 11314                           
 11315 ;; *************** function _month_length *****************
 11316 ;; Defined at:
 11317 ;;		line 55 in file "../My_library/My_RTCC.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;  year            1    wreg     unsigned char 
 11320 ;;  month           1   31[COMRAM] unsigned char 
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;  year            1   10[BANK0 ] unsigned char 
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  1    wreg      unsigned char 
 11325 ;; Registers used:
 11326 ;;		wreg, status,2, status,0, cstack
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11332 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11333 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11334 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11335 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11336 ;;Total ram usage:        6 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:    5
 11339 ;; This function calls:
 11340 ;;		___awmod
 11341 ;; This function is called by:
 11342 ;;		_epoch_to_caltime
 11343 ;;		_caltime_to_epoch
 11344 ;;		_terminal_time
 11345 ;;		_RTCC_adjust_time_inc
 11346 ;;		_RTCC_adjust_time_dec
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text45
 11351  011D2A                     __ptext45:
 11352                           	opt stack 0
 11353  011D2A                     _month_length:
 11354                           	opt stack 18
 11355                           
 11356                           ; BSR set to: 0
 11357                           ;incstack = 0
 11358                           ;month_length@year stored from wreg
 11359  011D2A  0100               	movlb	0	; () banked
 11360  011D2C  6F6A               	movwf	month_length@year& (0+255),b
 11361                           
 11362                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 11363  011D2E  0E02               	movlw	2
 11364  011D30  1820               	xorwf	month_length@month,w,c
 11365  011D32  A4D8               	btfss	status,2,c
 11366  011D34  D03E               	goto	l8546
 11367  011D36  C06A  F060         	movff	month_length@year,___awmod@dividend
 11368  011D3A  0100               	movlb	0	; () banked
 11369  011D3C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11370  011D3E  0E00               	movlw	0
 11371  011D40  0100               	movlb	0	; () banked
 11372  011D42  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11373  011D44  0E64               	movlw	100
 11374  011D46  6F62               	movwf	___awmod@divisor& (0+255),b
 11375  011D48  EC2A  F093         	call	___awmod	;wreg free
 11376  011D4C  0100               	movlb	0	; () banked
 11377  011D4E  5160               	movf	?___awmod& (0+255),w,b
 11378  011D50  0100               	movlb	0	; () banked
 11379  011D52  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 11380  011D54  A4D8               	btfss	status,2,c
 11381  011D56  D002               	goto	u8430
 11382  011D58  0E01               	movlw	1
 11383  011D5A  D001               	goto	u8440
 11384  011D5C                     u8430:
 11385  011D5C  0E00               	movlw	0
 11386  011D5E                     u8440:
 11387  011D5E  0800               	sublw	0
 11388  011D60  0100               	movlb	0	; () banked
 11389  011D62  6F66               	movwf	??_month_length& (0+255),b
 11390  011D64  C06A  F060         	movff	month_length@year,___awmod@dividend
 11391  011D68  0100               	movlb	0	; () banked
 11392  011D6A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11393  011D6C  0E01               	movlw	1
 11394  011D6E  0100               	movlb	0	; () banked
 11395  011D70  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11396  011D72  0E90               	movlw	144
 11397  011D74  6F62               	movwf	___awmod@divisor& (0+255),b
 11398  011D76  EC2A  F093         	call	___awmod	;wreg free
 11399  011D7A  0100               	movlb	0	; () banked
 11400  011D7C  5160               	movf	?___awmod& (0+255),w,b
 11401  011D7E  0100               	movlb	0	; () banked
 11402  011D80  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 11403  011D82  A4D8               	btfss	status,2,c
 11404  011D84  D004               	goto	u8450
 11405  011D86  0100               	movlb	0	; () banked
 11406  011D88  6B67               	clrf	(??_month_length+1)& (0+255),b
 11407  011D8A  2B67               	incf	(??_month_length+1)& (0+255),f,b
 11408  011D8C  D002               	goto	u8468
 11409  011D8E                     u8450:
 11410  011D8E  0100               	movlb	0	; () banked
 11411  011D90  6B67               	clrf	(??_month_length+1)& (0+255),b
 11412  011D92                     u8468:
 11413  011D92  C06A  F068         	movff	month_length@year,??_month_length+2
 11414  011D96  0E03               	movlw	3
 11415  011D98  0100               	movlb	0	; () banked
 11416  011D9A  1768               	andwf	(??_month_length+2)& (0+255),f,b
 11417  011D9C  A4D8               	btfss	status,2,c
 11418  011D9E  D002               	goto	u8470
 11419  011DA0  0E01               	movlw	1
 11420  011DA2  D001               	goto	u8480
 11421  011DA4                     u8470:
 11422  011DA4  0E00               	movlw	0
 11423  011DA6                     u8480:
 11424  011DA6  0100               	movlb	0	; () banked
 11425  011DA8  2567               	addwf	(??_month_length+1)& (0+255),w,b
 11426  011DAA  0100               	movlb	0	; () banked
 11427  011DAC  2566               	addwf	??_month_length& (0+255),w,b
 11428  011DAE  0F1C               	addlw	28
 11429                           
 11430                           ; BSR set to: 0
 11431                           
 11432                           ; BSR set to: 0
 11433  011DB0  0012               	return	
 11434  011DB2                     l8546:
 11435                           
 11436                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 11437  011DB2  5020               	movf	month_length@month,w,c
 11438  011DB4  0B01               	andlw	1
 11439  011DB6  0100               	movlb	0	; () banked
 11440  011DB8  6F66               	movwf	??_month_length& (0+255),b
 11441  011DBA  6B67               	clrf	(??_month_length+1)& (0+255),b
 11442  011DBC  0100               	movlb	0	; () banked
 11443  011DBE  1F66               	comf	??_month_length& (0+255),f,b
 11444  011DC0  1F67               	comf	(??_month_length+1)& (0+255),f,b
 11445  011DC2  4B66               	infsnz	??_month_length& (0+255),f,b
 11446  011DC4  2B67               	incf	(??_month_length+1)& (0+255),f,b
 11447  011DC6  5020               	movf	month_length@month,w,c
 11448  011DC8  0100               	movlb	0	; () banked
 11449  011DCA  6F68               	movwf	(??_month_length+2)& (0+255),b
 11450  011DCC  6B69               	clrf	(??_month_length+3)& (0+255),b
 11451  011DCE  0100               	movlb	0	; () banked
 11452  011DD0  5166               	movf	??_month_length& (0+255),w,b
 11453  011DD2  0100               	movlb	0	; () banked
 11454  011DD4  1B68               	xorwf	(??_month_length+2)& (0+255),f,b
 11455  011DD6  0100               	movlb	0	; () banked
 11456  011DD8  5167               	movf	(??_month_length+1)& (0+255),w,b
 11457  011DDA  0100               	movlb	0	; () banked
 11458  011DDC  1B69               	xorwf	(??_month_length+3)& (0+255),f,b
 11459  011DDE  0E0D               	movlw	13
 11460  011DE0  0100               	movlb	0	; () banked
 11461  011DE2  1768               	andwf	(??_month_length+2)& (0+255),f,b
 11462  011DE4  0E00               	movlw	0
 11463  011DE6  1769               	andwf	(??_month_length+3)& (0+255),f,b
 11464  011DE8  0E04               	movlw	4
 11465  011DEA  0100               	movlb	0	; () banked
 11466  011DEC  1968               	xorwf	(??_month_length+2)& (0+255),w,b
 11467  011DEE  0100               	movlb	0	; () banked
 11468  011DF0  1169               	iorwf	(??_month_length+3)& (0+255),w,b
 11469  011DF2  A4D8               	btfss	status,2,c
 11470  011DF4  D002               	goto	u8490
 11471  011DF6  0E01               	movlw	1
 11472  011DF8  D001               	goto	u8500
 11473  011DFA                     u8490:
 11474  011DFA  0E00               	movlw	0
 11475  011DFC                     u8500:
 11476  011DFC  0800               	sublw	0
 11477  011DFE  0F1F               	addlw	31
 11478                           
 11479                           ; BSR set to: 0
 11480  011E00  0012               	return	
 11481  011E02                     __end_of_month_length:
 11482                           	opt stack 0
 11483                           tblptru	equ	0xFF8
 11484                           tblptrh	equ	0xFF7
 11485                           tblptrl	equ	0xFF6
 11486                           tablat	equ	0xFF5
 11487                           prodh	equ	0xFF4
 11488                           prodl	equ	0xFF3
 11489                           intcon	equ	0xFF2
 11490                           intcon2	equ	0xFF1
 11491                           indf0	equ	0xFEF
 11492                           postinc0	equ	0xFEE
 11493                           fsr0h	equ	0xFEA
 11494                           fsr0l	equ	0xFE9
 11495                           wreg	equ	0xFE8
 11496                           postinc1	equ	0xFE6
 11497                           postdec1	equ	0xFE5
 11498                           fsr1h	equ	0xFE2
 11499                           fsr1l	equ	0xFE1
 11500                           indf2	equ	0xFDF
 11501                           postinc2	equ	0xFDE
 11502                           postdec2	equ	0xFDD
 11503                           fsr2h	equ	0xFDA
 11504                           fsr2l	equ	0xFD9
 11505                           status	equ	0xFD8
 11506                           
 11507 ;; *************** function ___awmod *****************
 11508 ;; Defined at:
 11509 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  dividend        2    0[BANK0 ] int 
 11512 ;;  divisor         2    2[BANK0 ] int 
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;  sign            1    5[BANK0 ] unsigned char 
 11515 ;;  counter         1    4[BANK0 ] unsigned char 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  2    0[BANK0 ] int 
 11518 ;; Registers used:
 11519 ;;		wreg, status,2, status,0
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11528 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11529 ;;Total ram usage:        6 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:    4
 11532 ;; This function calls:
 11533 ;;		Nothing
 11534 ;; This function is called by:
 11535 ;;		_month_length
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           	psect	text46
 11540  012654                     __ptext46:
 11541                           	opt stack 0
 11542  012654                     ___awmod:
 11543                           	opt stack 18
 11544                           
 11545                           ; BSR set to: 0
 11546                           ;incstack = 0
 11547  012654  0E00               	movlw	0
 11548  012656  0100               	movlb	0	; () banked
 11549  012658  6F65               	movwf	___awmod@sign& (0+255),b
 11550                           
 11551                           ; BSR set to: 0
 11552  01265A  0100               	movlb	0	; () banked
 11553  01265C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11554  01265E  D008               	goto	l8494
 11555                           
 11556                           ; BSR set to: 0
 11557  012660  0100               	movlb	0	; () banked
 11558  012662  6D60               	negf	___awmod@dividend& (0+255),b
 11559  012664  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11560  012666  B0D8               	btfsc	status,0,c
 11561  012668  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11562                           
 11563                           ; BSR set to: 0
 11564  01266A  0E01               	movlw	1
 11565  01266C  0100               	movlb	0	; () banked
 11566  01266E  6F65               	movwf	___awmod@sign& (0+255),b
 11567  012670                     l8494:
 11568                           
 11569                           ; BSR set to: 0
 11570  012670  0100               	movlb	0	; () banked
 11571  012672  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11572  012674  D005               	goto	l8498
 11573                           
 11574                           ; BSR set to: 0
 11575  012676  0100               	movlb	0	; () banked
 11576  012678  6D62               	negf	___awmod@divisor& (0+255),b
 11577  01267A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11578  01267C  B0D8               	btfsc	status,0,c
 11579  01267E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11580  012680                     l8498:
 11581                           
 11582                           ; BSR set to: 0
 11583  012680  0100               	movlb	0	; () banked
 11584  012682  5162               	movf	___awmod@divisor& (0+255),w,b
 11585  012684  0100               	movlb	0	; () banked
 11586  012686  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11587  012688  B4D8               	btfsc	status,2,c
 11588  01268A  D026               	goto	l8514
 11589                           
 11590                           ; BSR set to: 0
 11591  01268C  0E01               	movlw	1
 11592  01268E  0100               	movlb	0	; () banked
 11593  012690  6F64               	movwf	___awmod@counter& (0+255),b
 11594  012692  D006               	goto	l8504
 11595  012694                     l8502:
 11596                           
 11597                           ; BSR set to: 0
 11598  012694  0100               	movlb	0	; () banked
 11599  012696  90D8               	bcf	status,0,c
 11600  012698  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11601  01269A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11602  01269C  0100               	movlb	0	; () banked
 11603  01269E  2B64               	incf	___awmod@counter& (0+255),f,b
 11604  0126A0                     l8504:
 11605                           
 11606                           ; BSR set to: 0
 11607  0126A0  0100               	movlb	0	; () banked
 11608  0126A2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11609  0126A4  D7F7               	goto	l8502
 11610  0126A6                     l8506:
 11611                           
 11612                           ; BSR set to: 0
 11613  0126A6  0100               	movlb	0	; () banked
 11614  0126A8  5162               	movf	___awmod@divisor& (0+255),w,b
 11615  0126AA  0100               	movlb	0	; () banked
 11616  0126AC  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11617  0126AE  0100               	movlb	0	; () banked
 11618  0126B0  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11619  0126B2  0100               	movlb	0	; () banked
 11620  0126B4  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11621  0126B6  A0D8               	btfss	status,0,c
 11622  0126B8  D008               	goto	l8510
 11623                           
 11624                           ; BSR set to: 0
 11625  0126BA  0100               	movlb	0	; () banked
 11626  0126BC  5162               	movf	___awmod@divisor& (0+255),w,b
 11627  0126BE  0100               	movlb	0	; () banked
 11628  0126C0  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11629  0126C2  0100               	movlb	0	; () banked
 11630  0126C4  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11631  0126C6  0100               	movlb	0	; () banked
 11632  0126C8  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11633  0126CA                     l8510:
 11634                           
 11635                           ; BSR set to: 0
 11636  0126CA  0100               	movlb	0	; () banked
 11637  0126CC  90D8               	bcf	status,0,c
 11638  0126CE  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11639  0126D0  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11640                           
 11641                           ; BSR set to: 0
 11642  0126D2  0100               	movlb	0	; () banked
 11643  0126D4  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11644  0126D6  D7E7               	goto	l8506
 11645  0126D8                     l8514:
 11646                           
 11647                           ; BSR set to: 0
 11648  0126D8  0100               	movlb	0	; () banked
 11649  0126DA  5165               	movf	___awmod@sign& (0+255),w,b
 11650  0126DC  0100               	movlb	0	; () banked
 11651  0126DE  B4D8               	btfsc	status,2,c
 11652  0126E0  D005               	goto	l8518
 11653                           
 11654                           ; BSR set to: 0
 11655  0126E2  0100               	movlb	0	; () banked
 11656  0126E4  6D60               	negf	___awmod@dividend& (0+255),b
 11657  0126E6  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11658  0126E8  B0D8               	btfsc	status,0,c
 11659  0126EA  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11660  0126EC                     l8518:
 11661                           
 11662                           ; BSR set to: 0
 11663  0126EC  C060  F060         	movff	___awmod@dividend,?___awmod
 11664  0126F0  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11665  0126F4  0012               	return	
 11666  0126F6                     __end_of___awmod:
 11667                           	opt stack 0
 11668                           tblptru	equ	0xFF8
 11669                           tblptrh	equ	0xFF7
 11670                           tblptrl	equ	0xFF6
 11671                           tablat	equ	0xFF5
 11672                           prodh	equ	0xFF4
 11673                           prodl	equ	0xFF3
 11674                           intcon	equ	0xFF2
 11675                           intcon2	equ	0xFF1
 11676                           indf0	equ	0xFEF
 11677                           postinc0	equ	0xFEE
 11678                           fsr0h	equ	0xFEA
 11679                           fsr0l	equ	0xFE9
 11680                           wreg	equ	0xFE8
 11681                           postinc1	equ	0xFE6
 11682                           postdec1	equ	0xFE5
 11683                           fsr1h	equ	0xFE2
 11684                           fsr1l	equ	0xFE1
 11685                           indf2	equ	0xFDF
 11686                           postinc2	equ	0xFDE
 11687                           postdec2	equ	0xFDD
 11688                           fsr2h	equ	0xFDA
 11689                           fsr2l	equ	0xFD9
 11690                           status	equ	0xFD8
 11691                           
 11692 ;; *************** function ___lmul *****************
 11693 ;; Defined at:
 11694 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;  multiplier      4   13[BANK0 ] unsigned long 
 11697 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 11698 ;; Auto vars:     Size  Location     Type
 11699 ;;  product         4   21[BANK0 ] unsigned long 
 11700 ;; Return value:  Size  Location     Type
 11701 ;;                  4   13[BANK0 ] unsigned long 
 11702 ;; Registers used:
 11703 ;;		wreg, status,2, status,0
 11704 ;; Tracked objects:
 11705 ;;		On entry : 0/0
 11706 ;;		On exit  : 0/0
 11707 ;;		Unchanged: 0/0
 11708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11709 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11710 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11712 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11713 ;;Total ram usage:       12 bytes
 11714 ;; Hardware stack levels used:    1
 11715 ;; Hardware stack levels required when called:    4
 11716 ;; This function calls:
 11717 ;;		Nothing
 11718 ;; This function is called by:
 11719 ;;		_get_quot_rem
 11720 ;;		_caltime_to_epoch
 11721 ;;		_light_task
 11722 ;;		_RTCC_adjust_time_inc
 11723 ;;		_RTCC_adjust_time_dec
 11724 ;; This function uses a non-reentrant model
 11725 ;;
 11726                           
 11727                           	psect	text47
 11728  012ABA                     __ptext47:
 11729                           	opt stack 0
 11730  012ABA                     ___lmul:
 11731                           	opt stack 19
 11732                           
 11733                           ; BSR set to: 0
 11734                           ;incstack = 0
 11735  012ABA  0E00               	movlw	0
 11736  012ABC  0100               	movlb	0	; () banked
 11737  012ABE  6F75               	movwf	___lmul@product& (0+255),b
 11738  012AC0  0E00               	movlw	0
 11739  012AC2  6F76               	movwf	(___lmul@product+1)& (0+255),b
 11740  012AC4  0E00               	movlw	0
 11741  012AC6  6F77               	movwf	(___lmul@product+2)& (0+255),b
 11742  012AC8  0E00               	movlw	0
 11743  012ACA  6F78               	movwf	(___lmul@product+3)& (0+255),b
 11744  012ACC                     l8552:
 11745                           
 11746                           ; BSR set to: 0
 11747  012ACC  0100               	movlb	0	; () banked
 11748  012ACE  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 11749  012AD0  D010               	goto	l8556
 11750                           
 11751                           ; BSR set to: 0
 11752  012AD2  0100               	movlb	0	; () banked
 11753  012AD4  5171               	movf	___lmul@multiplicand& (0+255),w,b
 11754  012AD6  0100               	movlb	0	; () banked
 11755  012AD8  2775               	addwf	___lmul@product& (0+255),f,b
 11756  012ADA  0100               	movlb	0	; () banked
 11757  012ADC  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 11758  012ADE  0100               	movlb	0	; () banked
 11759  012AE0  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 11760  012AE2  0100               	movlb	0	; () banked
 11761  012AE4  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 11762  012AE6  0100               	movlb	0	; () banked
 11763  012AE8  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 11764  012AEA  0100               	movlb	0	; () banked
 11765  012AEC  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 11766  012AEE  0100               	movlb	0	; () banked
 11767  012AF0  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 11768  012AF2                     l8556:
 11769                           
 11770                           ; BSR set to: 0
 11771  012AF2  0100               	movlb	0	; () banked
 11772  012AF4  90D8               	bcf	status,0,c
 11773  012AF6  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 11774  012AF8  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 11775  012AFA  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 11776  012AFC  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 11777                           
 11778                           ; BSR set to: 0
 11779  012AFE  0100               	movlb	0	; () banked
 11780  012B00  90D8               	bcf	status,0,c
 11781  012B02  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 11782  012B04  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 11783  012B06  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 11784  012B08  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 11785  012B0A  0100               	movlb	0	; () banked
 11786  012B0C  516D               	movf	___lmul@multiplier& (0+255),w,b
 11787  012B0E  0100               	movlb	0	; () banked
 11788  012B10  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 11789  012B12  0100               	movlb	0	; () banked
 11790  012B14  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 11791  012B16  0100               	movlb	0	; () banked
 11792  012B18  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 11793  012B1A  A4D8               	btfss	status,2,c
 11794  012B1C  D7D7               	goto	l8552
 11795                           
 11796                           ; BSR set to: 0
 11797  012B1E  C075  F06D         	movff	___lmul@product,?___lmul
 11798  012B22  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 11799  012B26  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 11800  012B2A  C078  F070         	movff	___lmul@product+3,?___lmul+3
 11801                           
 11802                           ; BSR set to: 0
 11803  012B2E  0012               	return		;funcret
 11804  012B30                     __end_of___lmul:
 11805                           	opt stack 0
 11806                           tblptru	equ	0xFF8
 11807                           tblptrh	equ	0xFF7
 11808                           tblptrl	equ	0xFF6
 11809                           tablat	equ	0xFF5
 11810                           prodh	equ	0xFF4
 11811                           prodl	equ	0xFF3
 11812                           intcon	equ	0xFF2
 11813                           intcon2	equ	0xFF1
 11814                           indf0	equ	0xFEF
 11815                           postinc0	equ	0xFEE
 11816                           fsr0h	equ	0xFEA
 11817                           fsr0l	equ	0xFE9
 11818                           wreg	equ	0xFE8
 11819                           postinc1	equ	0xFE6
 11820                           postdec1	equ	0xFE5
 11821                           fsr1h	equ	0xFE2
 11822                           fsr1l	equ	0xFE1
 11823                           indf2	equ	0xFDF
 11824                           postinc2	equ	0xFDE
 11825                           postdec2	equ	0xFDD
 11826                           fsr2h	equ	0xFDA
 11827                           fsr2l	equ	0xFD9
 11828                           status	equ	0xFD8
 11829                           
 11830 ;; *************** function _RTCC_to_caltime *****************
 11831 ;; Defined at:
 11832 ;;		line 89 in file "../My_library/My_RTCC.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;  tm              2    1[BANK0 ] PTR struct .
 11835 ;;		 -> now(14), 
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;  dumy            1    3[BANK0 ] unsigned char 
 11838 ;; Return value:  Size  Location     Type
 11839 ;;		None               void
 11840 ;; Registers used:
 11841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11847 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11850 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11851 ;;Total ram usage:        3 bytes
 11852 ;; Hardware stack levels used:    1
 11853 ;; Hardware stack levels required when called:    5
 11854 ;; This function calls:
 11855 ;;		_x_to_d
 11856 ;; This function is called by:
 11857 ;;		_RTCC_from_RTCC
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861                           	psect	text48
 11862  0122C2                     __ptext48:
 11863                           	opt stack 0
 11864  0122C2                     _RTCC_to_caltime:
 11865                           	opt stack 19
 11866  0122C2                     l855:
 11867  0122C2  010F               	movlb	15	; () banked
 11868  0122C4  B93F               	btfsc	63,4,b	;volatile
 11869  0122C6  D7FD               	goto	l855
 11870                           
 11871                           ; BSR set to: 15
 11872                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 11873  0122C8  010F               	movlb	15	; () banked
 11874  0122CA  813F               	bsf	63,0,b	;volatile
 11875                           
 11876                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 11877  0122CC  010F               	movlb	15	; () banked
 11878  0122CE  833F               	bsf	63,1,b	;volatile
 11879                           
 11880                           ; BSR set to: 15
 11881                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 11882  0122D0  0100               	movlb	0	; () banked
 11883  0122D2  EE20 F00A          	lfsr	2,10
 11884  0122D6  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11885  0122D8  26D9               	addwf	fsr2l,f,c
 11886  0122DA  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11887  0122DC  22DA               	addwfc	fsr2h,f,c
 11888  0122DE  010F               	movlb	15	; () banked
 11889  0122E0  513A               	movf	58,w,b	;volatile
 11890  0122E2  EC1B  F098         	call	_x_to_d
 11891  0122E6  6EDF               	movwf	indf2,c
 11892                           
 11893                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 11894  0122E8  CF3B F063          	movff	3899,RTCC_to_caltime@dumy	;volatile
 11895                           
 11896                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 11897  0122EC  0100               	movlb	0	; () banked
 11898  0122EE  EE20 F008          	lfsr	2,8
 11899  0122F2  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11900  0122F4  26D9               	addwf	fsr2l,f,c
 11901  0122F6  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11902  0122F8  22DA               	addwfc	fsr2h,f,c
 11903  0122FA  010F               	movlb	15	; () banked
 11904  0122FC  513A               	movf	58,w,b	;volatile
 11905  0122FE  EC1B  F098         	call	_x_to_d
 11906  012302  6EDF               	movwf	indf2,c
 11907                           
 11908                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 11909  012304  0100               	movlb	0	; () banked
 11910  012306  EE20 F009          	lfsr	2,9
 11911  01230A  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11912  01230C  26D9               	addwf	fsr2l,f,c
 11913  01230E  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11914  012310  22DA               	addwfc	fsr2h,f,c
 11915  012312  010F               	movlb	15	; () banked
 11916  012314  513B               	movf	59,w,b	;volatile
 11917  012316  EC1B  F098         	call	_x_to_d
 11918  01231A  6EDF               	movwf	indf2,c
 11919                           
 11920                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 11921  01231C  0100               	movlb	0	; () banked
 11922  01231E  EE20 F006          	lfsr	2,6
 11923  012322  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11924  012324  26D9               	addwf	fsr2l,f,c
 11925  012326  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11926  012328  22DA               	addwfc	fsr2h,f,c
 11927  01232A  010F               	movlb	15	; () banked
 11928  01232C  513A               	movf	58,w,b	;volatile
 11929  01232E  EC1B  F098         	call	_x_to_d
 11930  012332  6EDF               	movwf	indf2,c
 11931                           
 11932                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 11933  012334  0100               	movlb	0	; () banked
 11934  012336  EE20 F007          	lfsr	2,7
 11935  01233A  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11936  01233C  26D9               	addwf	fsr2l,f,c
 11937  01233E  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11938  012340  22DA               	addwfc	fsr2h,f,c
 11939  012342  010F               	movlb	15	; () banked
 11940  012344  513B               	movf	59,w,b	;volatile
 11941  012346  EC1B  F098         	call	_x_to_d
 11942  01234A  6EDF               	movwf	indf2,c
 11943                           
 11944                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 11945  01234C  0100               	movlb	0	; () banked
 11946  01234E  EE20 F004          	lfsr	2,4
 11947  012352  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11948  012354  26D9               	addwf	fsr2l,f,c
 11949  012356  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11950  012358  22DA               	addwfc	fsr2h,f,c
 11951  01235A  010F               	movlb	15	; () banked
 11952  01235C  513A               	movf	58,w,b	;volatile
 11953  01235E  EC1B  F098         	call	_x_to_d
 11954  012362  6EDF               	movwf	indf2,c
 11955                           
 11956                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 11957  012364  0100               	movlb	0	; () banked
 11958  012366  EE20 F005          	lfsr	2,5
 11959  01236A  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11960  01236C  26D9               	addwf	fsr2l,f,c
 11961  01236E  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11962  012370  22DA               	addwfc	fsr2h,f,c
 11963  012372  010F               	movlb	15	; () banked
 11964  012374  513B               	movf	59,w,b	;volatile
 11965  012376  EC1B  F098         	call	_x_to_d
 11966  01237A  6EDF               	movwf	indf2,c
 11967  01237C  0012               	return		;funcret
 11968  01237E                     __end_of_RTCC_to_caltime:
 11969                           	opt stack 0
 11970                           tblptru	equ	0xFF8
 11971                           tblptrh	equ	0xFF7
 11972                           tblptrl	equ	0xFF6
 11973                           tablat	equ	0xFF5
 11974                           prodh	equ	0xFF4
 11975                           prodl	equ	0xFF3
 11976                           intcon	equ	0xFF2
 11977                           intcon2	equ	0xFF1
 11978                           indf0	equ	0xFEF
 11979                           postinc0	equ	0xFEE
 11980                           fsr0h	equ	0xFEA
 11981                           fsr0l	equ	0xFE9
 11982                           wreg	equ	0xFE8
 11983                           postinc1	equ	0xFE6
 11984                           postdec1	equ	0xFE5
 11985                           fsr1h	equ	0xFE2
 11986                           fsr1l	equ	0xFE1
 11987                           indf2	equ	0xFDF
 11988                           postinc2	equ	0xFDE
 11989                           postdec2	equ	0xFDD
 11990                           fsr2h	equ	0xFDA
 11991                           fsr2l	equ	0xFD9
 11992                           status	equ	0xFD8
 11993                           
 11994 ;; *************** function _x_to_d *****************
 11995 ;; Defined at:
 11996 ;;		line 51 in file "../My_library/My_RTCC.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;  hex             1    wreg     unsigned char 
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;  hex             1    0[BANK0 ] unsigned char 
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      unsigned char 
 12003 ;; Registers used:
 12004 ;;		wreg, status,2, status,0, prodl, prodh
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12013 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12014 ;;Total ram usage:        2 bytes
 12015 ;; Hardware stack levels used:    1
 12016 ;; Hardware stack levels required when called:    4
 12017 ;; This function calls:
 12018 ;;		Nothing
 12019 ;; This function is called by:
 12020 ;;		_RTCC_to_caltime
 12021 ;; This function uses a non-reentrant model
 12022 ;;
 12023                           
 12024                           	psect	text49
 12025  013036                     __ptext49:
 12026                           	opt stack 0
 12027  013036                     _x_to_d:
 12028                           	opt stack 19
 12029                           
 12030                           ;incstack = 0
 12031                           ;x_to_d@hex stored from wreg
 12032  013036  0100               	movlb	0	; () banked
 12033  013038  6F60               	movwf	x_to_d@hex& (0+255),b
 12034                           
 12035                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 12036  01303A  C060  F020         	movff	x_to_d@hex,??_x_to_d
 12037  01303E  0E0F               	movlw	15
 12038  013040  1620               	andwf	??_x_to_d,f,c
 12039  013042  0100               	movlb	0	; () banked
 12040  013044  3960               	swapf	x_to_d@hex& (0+255),w,b
 12041  013046  0B0F               	andlw	15
 12042  013048  0B0F               	andlw	15
 12043  01304A  0D0A               	mullw	10
 12044  01304C  50F3               	movf	prodl,w,c
 12045  01304E  2420               	addwf	??_x_to_d,w,c
 12046  013050  0012               	return	
 12047  013052                     __end_of_x_to_d:
 12048                           	opt stack 0
 12049                           tblptru	equ	0xFF8
 12050                           tblptrh	equ	0xFF7
 12051                           tblptrl	equ	0xFF6
 12052                           tablat	equ	0xFF5
 12053                           prodh	equ	0xFF4
 12054                           prodl	equ	0xFF3
 12055                           intcon	equ	0xFF2
 12056                           intcon2	equ	0xFF1
 12057                           indf0	equ	0xFEF
 12058                           postinc0	equ	0xFEE
 12059                           fsr0h	equ	0xFEA
 12060                           fsr0l	equ	0xFE9
 12061                           wreg	equ	0xFE8
 12062                           postinc1	equ	0xFE6
 12063                           postdec1	equ	0xFE5
 12064                           fsr1h	equ	0xFE2
 12065                           fsr1l	equ	0xFE1
 12066                           indf2	equ	0xFDF
 12067                           postinc2	equ	0xFDE
 12068                           postdec2	equ	0xFDD
 12069                           fsr2h	equ	0xFDA
 12070                           fsr2l	equ	0xFD9
 12071                           status	equ	0xFD8
 12072                           
 12073 ;; *************** function _ISR *****************
 12074 ;; Defined at:
 12075 ;;		line 61 in file "PIC18F27J53-killifish_light05.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;		None
 12078 ;; Auto vars:     Size  Location     Type
 12079 ;;		None
 12080 ;; Return value:  Size  Location     Type
 12081 ;;		None               void
 12082 ;; Registers used:
 12083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12084 ;; Tracked objects:
 12085 ;;		On entry : 0/0
 12086 ;;		On exit  : 0/0
 12087 ;;		Unchanged: 0/0
 12088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12091 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12092 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12093 ;;Total ram usage:       15 bytes
 12094 ;; Hardware stack levels used:    1
 12095 ;; Hardware stack levels required when called:    3
 12096 ;; This function calls:
 12097 ;;		_UART_ISR
 12098 ;;		_button_timer_interrupt
 12099 ;; This function is called by:
 12100 ;;		Interrupt level 2
 12101 ;; This function uses a non-reentrant model
 12102 ;;
 12103                           
 12104                           	psect	intcode
 12105  000008                     __pintcode:
 12106                           	opt stack 0
 12107  000008                     _ISR:
 12108                           	opt stack 18
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;incstack = 0
 12112  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12113  00000A  CFFA F012          	movff	pclath,??_ISR+1
 12114  00000E  CFFB F013          	movff	pclatu,??_ISR+2
 12115  000012  CFE9 F014          	movff	fsr0l,??_ISR+3
 12116  000016  CFEA F015          	movff	fsr0h,??_ISR+4
 12117  00001A  CFE1 F016          	movff	fsr1l,??_ISR+5
 12118  00001E  CFE2 F017          	movff	fsr1h,??_ISR+6
 12119  000022  CFD9 F018          	movff	fsr2l,??_ISR+7
 12120  000026  CFDA F019          	movff	fsr2h,??_ISR+8
 12121  00002A  CFF3 F01A          	movff	prodl,??_ISR+9
 12122  00002E  CFF4 F01B          	movff	prodh,??_ISR+10
 12123  000032  CFF6 F01C          	movff	tblptrl,??_ISR+11
 12124  000036  CFF7 F01D          	movff	tblptrh,??_ISR+12
 12125  00003A  CFF8 F01E          	movff	tblptru,??_ISR+13
 12126  00003E  CFF5 F01F          	movff	tablat,??_ISR+14
 12127                           
 12128                           ;PIC18F27J53-killifish_light05.c: 62: UART_ISR();
 12129  000042  EC11  F097         	call	_UART_ISR	;wreg free
 12130                           
 12131                           ;PIC18F27J53-killifish_light05.c: 63: if (INTCONbits.T0IF) {
 12132  000046  B4F2               	btfsc	intcon,2,c	;volatile
 12133                           
 12134                           ;PIC18F27J53-killifish_light05.c: 64: INTCONbits.T0IF = 0;
 12135  000048  94F2               	bcf	intcon,2,c	;volatile
 12136                           
 12137                           ;PIC18F27J53-killifish_light05.c: 65: }
 12138                           ;PIC18F27J53-killifish_light05.c: 66: if (PIR1bits.TMR1IF) {
 12139  00004A  A09E               	btfss	3998,0,c	;volatile
 12140  00004C  D010               	goto	i2l10006
 12141                           
 12142                           ;PIC18F27J53-killifish_light05.c: 67: PIR1bits.TMR1IF = 0;
 12143  00004E  909E               	bcf	3998,0,c	;volatile
 12144                           
 12145                           ;PIC18F27J53-killifish_light05.c: 68: TMR1H = 0x80;
 12146  000050  0E80               	movlw	128
 12147  000052  6ECF               	movwf	4047,c	;volatile
 12148                           
 12149                           ;PIC18F27J53-killifish_light05.c: 69: LATBbits.LATB5 = !LATBbits.LATB5;
 12150  000054  BA8A               	btfsc	3978,5,c	;volatile
 12151  000056  D003               	goto	i2u1040_40
 12152  000058  6A11               	clrf	??_ISR& (0+255),c
 12153  00005A  2A11               	incf	??_ISR& (0+255),f,c
 12154  00005C  D001               	goto	i2u1041_48
 12155  00005E                     i2u1040_40:
 12156  00005E  6A11               	clrf	??_ISR& (0+255),c
 12157  000060                     i2u1041_48:
 12158  000060  3A11               	swapf	??_ISR,f,c
 12159  000062  4611               	rlncf	??_ISR,f,c
 12160  000064  508A               	movf	3978,w,c	;volatile
 12161  000066  1811               	xorwf	??_ISR,w,c
 12162  000068  0BDF               	andlw	-33
 12163  00006A  1811               	xorwf	??_ISR,w,c
 12164  00006C  6E8A               	movwf	3978,c	;volatile
 12165  00006E                     i2l10006:
 12166                           
 12167                           ;PIC18F27J53-killifish_light05.c: 70: }
 12168                           ;PIC18F27J53-killifish_light05.c: 71: if (PIR2bits.TMR3IF) {
 12169  00006E  A2A1               	btfss	4001,1,c	;volatile
 12170  000070  D028               	goto	i2l1504
 12171                           
 12172                           ;PIC18F27J53-killifish_light05.c: 72: PIR2bits.TMR3IF = 0;
 12173  000072  92A1               	bcf	4001,1,c	;volatile
 12174                           
 12175                           ;PIC18F27J53-killifish_light05.c: 73: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 12176  000074  0E84               	movlw	low _sw_R
 12177  000076  6E01               	movwf	button_timer_interrupt@bt,c
 12178  000078  0E01               	movlw	high _sw_R
 12179  00007A  6E02               	movwf	button_timer_interrupt@bt+1,c
 12180  00007C  BA80               	btfsc	3968,5,c	;volatile
 12181  00007E  D002               	goto	i2u1043_40
 12182  000080  0E01               	movlw	1
 12183  000082  D001               	goto	i2u1044_40
 12184  000084                     i2u1043_40:
 12185  000084  0E00               	movlw	0
 12186  000086                     i2u1044_40:
 12187  000086  6E03               	movwf	button_timer_interrupt@sw_value,c
 12188  000088  EC8B  F089         	call	_button_timer_interrupt	;wreg free
 12189                           
 12190                           ;PIC18F27J53-killifish_light05.c: 74: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 12191  00008C  0E80               	movlw	low _sw_G
 12192  00008E  6E01               	movwf	button_timer_interrupt@bt,c
 12193  000090  0E01               	movlw	high _sw_G
 12194  000092  6E02               	movwf	button_timer_interrupt@bt+1,c
 12195  000094  BC80               	btfsc	3968,6,c	;volatile
 12196  000096  D002               	goto	i2u1045_40
 12197  000098  0E01               	movlw	1
 12198  00009A  D001               	goto	i2u1046_40
 12199  00009C                     i2u1045_40:
 12200  00009C  0E00               	movlw	0
 12201  00009E                     i2u1046_40:
 12202  00009E  6E03               	movwf	button_timer_interrupt@sw_value,c
 12203  0000A0  EC8B  F089         	call	_button_timer_interrupt	;wreg free
 12204                           
 12205                           ;PIC18F27J53-killifish_light05.c: 75: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 12206  0000A4  0E7C               	movlw	low _sw_B
 12207  0000A6  6E01               	movwf	button_timer_interrupt@bt,c
 12208  0000A8  0E01               	movlw	high _sw_B
 12209  0000AA  6E02               	movwf	button_timer_interrupt@bt+1,c
 12210  0000AC  BE80               	btfsc	3968,7,c	;volatile
 12211  0000AE  D002               	goto	i2u1047_40
 12212  0000B0  0E01               	movlw	1
 12213  0000B2  D001               	goto	i2u1048_40
 12214  0000B4                     i2u1047_40:
 12215  0000B4  0E00               	movlw	0
 12216  0000B6                     i2u1048_40:
 12217  0000B6  6E03               	movwf	button_timer_interrupt@sw_value,c
 12218  0000B8  EC8B  F089         	call	_button_timer_interrupt	;wreg free
 12219                           
 12220                           ;PIC18F27J53-killifish_light05.c: 76: ADC_flag = 1;
 12221  0000BC  0E01               	movlw	1
 12222  0000BE  0101               	movlb	1	; () banked
 12223  0000C0  6F30               	movwf	_ADC_flag& (0+255),b
 12224  0000C2                     i2l1504:
 12225  0000C2  C01F  FFF5         	movff	??_ISR+14,tablat
 12226  0000C6  C01E  FFF8         	movff	??_ISR+13,tblptru
 12227  0000CA  C01D  FFF7         	movff	??_ISR+12,tblptrh
 12228  0000CE  C01C  FFF6         	movff	??_ISR+11,tblptrl
 12229  0000D2  C01B  FFF4         	movff	??_ISR+10,prodh
 12230  0000D6  C01A  FFF3         	movff	??_ISR+9,prodl
 12231  0000DA  C019  FFDA         	movff	??_ISR+8,fsr2h
 12232  0000DE  C018  FFD9         	movff	??_ISR+7,fsr2l
 12233  0000E2  C017  FFE2         	movff	??_ISR+6,fsr1h
 12234  0000E6  C016  FFE1         	movff	??_ISR+5,fsr1l
 12235  0000EA  C015  FFEA         	movff	??_ISR+4,fsr0h
 12236  0000EE  C014  FFE9         	movff	??_ISR+3,fsr0l
 12237  0000F2  C013  FFFB         	movff	??_ISR+2,pclatu
 12238  0000F6  C012  FFFA         	movff	??_ISR+1,pclath
 12239  0000FA  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12240  0000FC  0011               	retfie		f
 12241  0000FE                     __end_of_ISR:
 12242                           	opt stack 0
 12243                           pclatu	equ	0xFFB
 12244                           pclath	equ	0xFFA
 12245                           tblptru	equ	0xFF8
 12246                           tblptrh	equ	0xFF7
 12247                           tblptrl	equ	0xFF6
 12248                           tablat	equ	0xFF5
 12249                           prodh	equ	0xFF4
 12250                           prodl	equ	0xFF3
 12251                           intcon	equ	0xFF2
 12252                           intcon2	equ	0xFF1
 12253                           indf0	equ	0xFEF
 12254                           postinc0	equ	0xFEE
 12255                           fsr0h	equ	0xFEA
 12256                           fsr0l	equ	0xFE9
 12257                           wreg	equ	0xFE8
 12258                           postinc1	equ	0xFE6
 12259                           postdec1	equ	0xFE5
 12260                           fsr1h	equ	0xFE2
 12261                           fsr1l	equ	0xFE1
 12262                           indf2	equ	0xFDF
 12263                           postinc2	equ	0xFDE
 12264                           postdec2	equ	0xFDD
 12265                           fsr2h	equ	0xFDA
 12266                           fsr2l	equ	0xFD9
 12267                           status	equ	0xFD8
 12268                           
 12269 ;; *************** function _button_timer_interrupt *****************
 12270 ;; Defined at:
 12271 ;;		line 3 in file "../My_library/My_button.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;  bt              2    0[COMRAM] PTR struct button
 12274 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 12275 ;;  sw_value        1    2[COMRAM] unsigned char 
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;		None
 12278 ;; Return value:  Size  Location     Type
 12279 ;;		None               void
 12280 ;; Registers used:
 12281 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12282 ;; Tracked objects:
 12283 ;;		On entry : 0/0
 12284 ;;		On exit  : 0/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12287 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12290 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12291 ;;Total ram usage:        5 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; This function calls:
 12294 ;;		Nothing
 12295 ;; This function is called by:
 12296 ;;		_ISR
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           	psect	text51
 12301  011316                     __ptext51:
 12302                           	opt stack 0
 12303  011316                     _button_timer_interrupt:
 12304                           	opt stack 20
 12305                           
 12306                           ;My_button.c: 4: if (sw_value) {
 12307                           
 12308                           ;incstack = 0
 12309  011316  5003               	movf	button_timer_interrupt@sw_value,w,c
 12310  011318  B4D8               	btfsc	status,2,c
 12311  01131A  D098               	goto	i2l7522
 12312                           
 12313                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 12314  01131C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12315  011320  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12316  011324  0E84               	movlw	132
 12317  011326  18DE               	xorwf	postinc2,w,c
 12318  011328  E10B               	bnz	i2l525
 12319  01132A  0E03               	movlw	3
 12320  01132C  18DE               	xorwf	postinc2,w,c
 12321  01132E  A4D8               	btfss	status,2,c
 12322  011330  D007               	goto	i2l525
 12323  011332  EE20 F003          	lfsr	2,3
 12324  011336  5001               	movf	button_timer_interrupt@bt,w,c
 12325  011338  26D9               	addwf	fsr2l,f,c
 12326  01133A  5002               	movf	button_timer_interrupt@bt+1,w,c
 12327  01133C  22DA               	addwfc	fsr2h,f,c
 12328  01133E  8EDF               	bsf	indf2,7,c
 12329  011340                     i2l525:
 12330                           
 12331                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 12332  011340  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12333  011344  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12334  011348  0EBC               	movlw	188
 12335  01134A  18DE               	xorwf	postinc2,w,c
 12336  01134C  E10B               	bnz	i2l526
 12337  01134E  0E02               	movlw	2
 12338  011350  18DE               	xorwf	postinc2,w,c
 12339  011352  A4D8               	btfss	status,2,c
 12340  011354  D007               	goto	i2l526
 12341  011356  EE20 F003          	lfsr	2,3
 12342  01135A  5001               	movf	button_timer_interrupt@bt,w,c
 12343  01135C  26D9               	addwf	fsr2l,f,c
 12344  01135E  5002               	movf	button_timer_interrupt@bt+1,w,c
 12345  011360  22DA               	addwfc	fsr2h,f,c
 12346  011362  8CDF               	bsf	indf2,6,c
 12347  011364                     i2l526:
 12348                           
 12349                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 12350  011364  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12351  011368  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12352  01136C  0EF4               	movlw	244
 12353  01136E  18DE               	xorwf	postinc2,w,c
 12354  011370  E10A               	bnz	i2l527
 12355  011372  04DE               	decf	postinc2,w,c
 12356  011374  A4D8               	btfss	status,2,c
 12357  011376  D007               	goto	i2l527
 12358  011378  EE20 F003          	lfsr	2,3
 12359  01137C  5001               	movf	button_timer_interrupt@bt,w,c
 12360  01137E  26D9               	addwf	fsr2l,f,c
 12361  011380  5002               	movf	button_timer_interrupt@bt+1,w,c
 12362  011382  22DA               	addwfc	fsr2h,f,c
 12363  011384  8ADF               	bsf	indf2,5,c
 12364  011386                     i2l527:
 12365                           
 12366                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 12367  011386  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12368  01138A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12369  01138E  0E2C               	movlw	44
 12370  011390  18DE               	xorwf	postinc2,w,c
 12371  011392  E10A               	bnz	i2l528
 12372  011394  04DE               	decf	postinc2,w,c
 12373  011396  A4D8               	btfss	status,2,c
 12374  011398  D007               	goto	i2l528
 12375  01139A  EE20 F003          	lfsr	2,3
 12376  01139E  5001               	movf	button_timer_interrupt@bt,w,c
 12377  0113A0  26D9               	addwf	fsr2l,f,c
 12378  0113A2  5002               	movf	button_timer_interrupt@bt+1,w,c
 12379  0113A4  22DA               	addwfc	fsr2h,f,c
 12380  0113A6  88DF               	bsf	indf2,4,c
 12381  0113A8                     i2l528:
 12382                           
 12383                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 12384  0113A8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12385  0113AC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12386  0113B0  0E96               	movlw	150
 12387  0113B2  18DE               	xorwf	postinc2,w,c
 12388  0113B4  10DE               	iorwf	postinc2,w,c
 12389  0113B6  A4D8               	btfss	status,2,c
 12390  0113B8  D007               	goto	i2l529
 12391  0113BA  EE20 F003          	lfsr	2,3
 12392  0113BE  5001               	movf	button_timer_interrupt@bt,w,c
 12393  0113C0  26D9               	addwf	fsr2l,f,c
 12394  0113C2  5002               	movf	button_timer_interrupt@bt+1,w,c
 12395  0113C4  22DA               	addwfc	fsr2h,f,c
 12396  0113C6  86DF               	bsf	indf2,3,c
 12397  0113C8                     i2l529:
 12398                           
 12399                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 12400  0113C8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12401  0113CC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12402  0113D0  0E3C               	movlw	60
 12403  0113D2  18DE               	xorwf	postinc2,w,c
 12404  0113D4  10DE               	iorwf	postinc2,w,c
 12405  0113D6  A4D8               	btfss	status,2,c
 12406  0113D8  D007               	goto	i2l530
 12407  0113DA  EE20 F003          	lfsr	2,3
 12408  0113DE  5001               	movf	button_timer_interrupt@bt,w,c
 12409  0113E0  26D9               	addwf	fsr2l,f,c
 12410  0113E2  5002               	movf	button_timer_interrupt@bt+1,w,c
 12411  0113E4  22DA               	addwfc	fsr2h,f,c
 12412  0113E6  84DF               	bsf	indf2,2,c
 12413  0113E8                     i2l530:
 12414                           
 12415                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 12416  0113E8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12417  0113EC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12418  0113F0  0E10               	movlw	16
 12419  0113F2  18DE               	xorwf	postinc2,w,c
 12420  0113F4  10DE               	iorwf	postinc2,w,c
 12421  0113F6  A4D8               	btfss	status,2,c
 12422  0113F8  D007               	goto	i2l531
 12423  0113FA  EE20 F003          	lfsr	2,3
 12424  0113FE  5001               	movf	button_timer_interrupt@bt,w,c
 12425  011400  26D9               	addwf	fsr2l,f,c
 12426  011402  5002               	movf	button_timer_interrupt@bt+1,w,c
 12427  011404  22DA               	addwfc	fsr2h,f,c
 12428  011406  82DF               	bsf	indf2,1,c
 12429  011408                     i2l531:
 12430                           
 12431                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 12432  011408  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12433  01140C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12434  011410  0E02               	movlw	2
 12435  011412  18DE               	xorwf	postinc2,w,c
 12436  011414  10DE               	iorwf	postinc2,w,c
 12437  011416  A4D8               	btfss	status,2,c
 12438  011418  D007               	goto	i2l532
 12439  01141A  EE20 F003          	lfsr	2,3
 12440  01141E  5001               	movf	button_timer_interrupt@bt,w,c
 12441  011420  26D9               	addwf	fsr2l,f,c
 12442  011422  5002               	movf	button_timer_interrupt@bt+1,w,c
 12443  011424  22DA               	addwfc	fsr2h,f,c
 12444  011426  80DF               	bsf	indf2,0,c
 12445  011428                     i2l532:
 12446                           
 12447                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 12448  011428  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12449  01142C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12450  011430  0E85               	movlw	133
 12451  011432  5CDE               	subwf	postinc2,w,c
 12452  011434  0E03               	movlw	3
 12453  011436  58DE               	subwfb	postinc2,w,c
 12454  011438  B0D8               	btfsc	status,0,c
 12455  01143A  0012               	return	
 12456  01143C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12457  011440  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12458  011444  2ADE               	incf	postinc2,f,c
 12459  011446  0E00               	movlw	0
 12460  011448  22DD               	addwfc	postdec2,f,c
 12461                           
 12462                           ;My_button.c: 14: } else {
 12463  01144A  0012               	return	
 12464  01144C                     i2l7522:
 12465                           
 12466                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 12467  01144C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12468  011450  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12469  011454  0E84               	movlw	132
 12470  011456  5CDE               	subwf	postinc2,w,c
 12471  011458  0E03               	movlw	3
 12472  01145A  58DE               	subwfb	postinc2,w,c
 12473  01145C  A0D8               	btfss	status,0,c
 12474  01145E  D008               	goto	i2l7526
 12475  011460  EE20 F002          	lfsr	2,2
 12476  011464  5001               	movf	button_timer_interrupt@bt,w,c
 12477  011466  26D9               	addwf	fsr2l,f,c
 12478  011468  5002               	movf	button_timer_interrupt@bt+1,w,c
 12479  01146A  22DA               	addwfc	fsr2h,f,c
 12480  01146C  8EDF               	bsf	indf2,7,c
 12481  01146E  D081               	goto	i2l7554
 12482  011470                     i2l7526:
 12483                           
 12484                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 12485  011470  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12486  011474  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12487  011478  0EBC               	movlw	188
 12488  01147A  5CDE               	subwf	postinc2,w,c
 12489  01147C  0E02               	movlw	2
 12490  01147E  58DE               	subwfb	postinc2,w,c
 12491  011480  A0D8               	btfss	status,0,c
 12492  011482  D008               	goto	i2l7530
 12493  011484  EE20 F002          	lfsr	2,2
 12494  011488  5001               	movf	button_timer_interrupt@bt,w,c
 12495  01148A  26D9               	addwf	fsr2l,f,c
 12496  01148C  5002               	movf	button_timer_interrupt@bt+1,w,c
 12497  01148E  22DA               	addwfc	fsr2h,f,c
 12498  011490  8CDF               	bsf	indf2,6,c
 12499  011492  D06F               	goto	i2l7554
 12500  011494                     i2l7530:
 12501                           
 12502                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 12503  011494  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12504  011498  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12505  01149C  0EF4               	movlw	244
 12506  01149E  5CDE               	subwf	postinc2,w,c
 12507  0114A0  0E01               	movlw	1
 12508  0114A2  58DE               	subwfb	postinc2,w,c
 12509  0114A4  A0D8               	btfss	status,0,c
 12510  0114A6  D008               	goto	i2l7534
 12511  0114A8  EE20 F002          	lfsr	2,2
 12512  0114AC  5001               	movf	button_timer_interrupt@bt,w,c
 12513  0114AE  26D9               	addwf	fsr2l,f,c
 12514  0114B0  5002               	movf	button_timer_interrupt@bt+1,w,c
 12515  0114B2  22DA               	addwfc	fsr2h,f,c
 12516  0114B4  8ADF               	bsf	indf2,5,c
 12517  0114B6  D05D               	goto	i2l7554
 12518  0114B8                     i2l7534:
 12519                           
 12520                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 12521  0114B8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12522  0114BC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12523  0114C0  0E2C               	movlw	44
 12524  0114C2  5CDE               	subwf	postinc2,w,c
 12525  0114C4  0E01               	movlw	1
 12526  0114C6  58DE               	subwfb	postinc2,w,c
 12527  0114C8  A0D8               	btfss	status,0,c
 12528  0114CA  D008               	goto	i2l7538
 12529  0114CC  EE20 F002          	lfsr	2,2
 12530  0114D0  5001               	movf	button_timer_interrupt@bt,w,c
 12531  0114D2  26D9               	addwf	fsr2l,f,c
 12532  0114D4  5002               	movf	button_timer_interrupt@bt+1,w,c
 12533  0114D6  22DA               	addwfc	fsr2h,f,c
 12534  0114D8  88DF               	bsf	indf2,4,c
 12535  0114DA  D04B               	goto	i2l7554
 12536  0114DC                     i2l7538:
 12537                           
 12538                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 12539  0114DC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12540  0114E0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12541  0114E4  0E01               	movlw	1
 12542  0114E6  50DB               	movf	plusw2,w,c
 12543  0114E8  E104               	bnz	i2u721_40
 12544  0114EA  0E96               	movlw	150
 12545  0114EC  5CDE               	subwf	postinc2,w,c
 12546  0114EE  A0D8               	btfss	status,0,c
 12547  0114F0  D008               	goto	i2l7542
 12548  0114F2                     i2u721_40:
 12549  0114F2  EE20 F002          	lfsr	2,2
 12550  0114F6  5001               	movf	button_timer_interrupt@bt,w,c
 12551  0114F8  26D9               	addwf	fsr2l,f,c
 12552  0114FA  5002               	movf	button_timer_interrupt@bt+1,w,c
 12553  0114FC  22DA               	addwfc	fsr2h,f,c
 12554  0114FE  86DF               	bsf	indf2,3,c
 12555  011500  D038               	goto	i2l7554
 12556  011502                     i2l7542:
 12557                           
 12558                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 12559  011502  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12560  011506  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12561  01150A  0E01               	movlw	1
 12562  01150C  50DB               	movf	plusw2,w,c
 12563  01150E  E104               	bnz	i2u722_40
 12564  011510  0E3C               	movlw	60
 12565  011512  5CDE               	subwf	postinc2,w,c
 12566  011514  A0D8               	btfss	status,0,c
 12567  011516  D008               	goto	i2l7546
 12568  011518                     i2u722_40:
 12569  011518  EE20 F002          	lfsr	2,2
 12570  01151C  5001               	movf	button_timer_interrupt@bt,w,c
 12571  01151E  26D9               	addwf	fsr2l,f,c
 12572  011520  5002               	movf	button_timer_interrupt@bt+1,w,c
 12573  011522  22DA               	addwfc	fsr2h,f,c
 12574  011524  84DF               	bsf	indf2,2,c
 12575  011526  D025               	goto	i2l7554
 12576  011528                     i2l7546:
 12577                           
 12578                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 12579  011528  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12580  01152C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12581  011530  0E01               	movlw	1
 12582  011532  50DB               	movf	plusw2,w,c
 12583  011534  E104               	bnz	i2u723_40
 12584  011536  0E10               	movlw	16
 12585  011538  5CDE               	subwf	postinc2,w,c
 12586  01153A  A0D8               	btfss	status,0,c
 12587  01153C  D008               	goto	i2l7550
 12588  01153E                     i2u723_40:
 12589  01153E  EE20 F002          	lfsr	2,2
 12590  011542  5001               	movf	button_timer_interrupt@bt,w,c
 12591  011544  26D9               	addwf	fsr2l,f,c
 12592  011546  5002               	movf	button_timer_interrupt@bt+1,w,c
 12593  011548  22DA               	addwfc	fsr2h,f,c
 12594  01154A  82DF               	bsf	indf2,1,c
 12595  01154C  D012               	goto	i2l7554
 12596  01154E                     i2l7550:
 12597                           
 12598                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 12599  01154E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12600  011552  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12601  011556  0E01               	movlw	1
 12602  011558  50DB               	movf	plusw2,w,c
 12603  01155A  E104               	bnz	i2u724_40
 12604  01155C  0E02               	movlw	2
 12605  01155E  5CDE               	subwf	postinc2,w,c
 12606  011560  A0D8               	btfss	status,0,c
 12607  011562  D007               	goto	i2l7554
 12608  011564                     i2u724_40:
 12609  011564  EE20 F002          	lfsr	2,2
 12610  011568  5001               	movf	button_timer_interrupt@bt,w,c
 12611  01156A  26D9               	addwf	fsr2l,f,c
 12612  01156C  5002               	movf	button_timer_interrupt@bt+1,w,c
 12613  01156E  22DA               	addwfc	fsr2h,f,c
 12614  011570  80DF               	bsf	indf2,0,c
 12615  011572                     i2l7554:
 12616                           
 12617                           ;My_button.c: 23: bt->cnt_sw = 0;
 12618  011572  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12619  011576  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12620  01157A  0E00               	movlw	0
 12621  01157C  6EDE               	movwf	postinc2,c
 12622  01157E  0E00               	movlw	0
 12623  011580  6EDD               	movwf	postdec2,c
 12624                           
 12625                           ;My_button.c: 24: bt->flags &= 0x00FF;
 12626  011582  EE20 F002          	lfsr	2,2
 12627  011586  5001               	movf	button_timer_interrupt@bt,w,c
 12628  011588  26D9               	addwf	fsr2l,f,c
 12629  01158A  5002               	movf	button_timer_interrupt@bt+1,w,c
 12630  01158C  22DA               	addwfc	fsr2h,f,c
 12631  01158E  0EFF               	movlw	255
 12632  011590  16DE               	andwf	postinc2,f,c
 12633  011592  0E00               	movlw	0
 12634  011594  16DD               	andwf	postdec2,f,c
 12635  011596  0012               	return	
 12636  011598                     __end_of_button_timer_interrupt:
 12637                           	opt stack 0
 12638                           pclatu	equ	0xFFB
 12639                           pclath	equ	0xFFA
 12640                           tblptru	equ	0xFF8
 12641                           tblptrh	equ	0xFF7
 12642                           tblptrl	equ	0xFF6
 12643                           tablat	equ	0xFF5
 12644                           prodh	equ	0xFF4
 12645                           prodl	equ	0xFF3
 12646                           intcon	equ	0xFF2
 12647                           intcon2	equ	0xFF1
 12648                           indf0	equ	0xFEF
 12649                           postinc0	equ	0xFEE
 12650                           fsr0h	equ	0xFEA
 12651                           fsr0l	equ	0xFE9
 12652                           wreg	equ	0xFE8
 12653                           postinc1	equ	0xFE6
 12654                           postdec1	equ	0xFE5
 12655                           fsr1h	equ	0xFE2
 12656                           fsr1l	equ	0xFE1
 12657                           indf2	equ	0xFDF
 12658                           postinc2	equ	0xFDE
 12659                           postdec2	equ	0xFDD
 12660                           plusw2	equ	0xFDB
 12661                           fsr2h	equ	0xFDA
 12662                           fsr2l	equ	0xFD9
 12663                           status	equ	0xFD8
 12664                           
 12665 ;; *************** function _UART_ISR *****************
 12666 ;; Defined at:
 12667 ;;		line 29 in file "../My_library/My_UART.c"
 12668 ;; Parameters:    Size  Location     Type
 12669 ;;		None
 12670 ;; Auto vars:     Size  Location     Type
 12671 ;;  ascii           1   15[COMRAM] unsigned char 
 12672 ;; Return value:  Size  Location     Type
 12673 ;;		None               void
 12674 ;; Registers used:
 12675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12676 ;; Tracked objects:
 12677 ;;		On entry : 0/0
 12678 ;;		On exit  : 0/0
 12679 ;;		Unchanged: 0/0
 12680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12684 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12685 ;;Total ram usage:        1 bytes
 12686 ;; Hardware stack levels used:    1
 12687 ;; Hardware stack levels required when called:    2
 12688 ;; This function calls:
 12689 ;;		i2_ringbuf_num
 12690 ;;		i2_ringbuf_pop
 12691 ;;		i2_ringbuf_put
 12692 ;; This function is called by:
 12693 ;;		_ISR
 12694 ;; This function uses a non-reentrant model
 12695 ;;
 12696                           
 12697                           	psect	text52
 12698  012E22                     __ptext52:
 12699                           	opt stack 0
 12700  012E22                     _UART_ISR:
 12701                           	opt stack 18
 12702                           
 12703                           ;My_UART.c: 30: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 12704                           
 12705                           ;incstack = 0
 12706  012E22  B89D               	btfsc	3997,4,c	;volatile
 12707  012E24  A89E               	btfss	3998,4,c	;volatile
 12708  012E26  D013               	goto	i2l1286
 12709                           
 12710                           ;My_UART.c: 31: if (ringbuf_num(&uart_tx)) {
 12711  012E28  0E55               	movlw	low _uart_tx
 12712  012E2A  6E01               	movwf	i2ringbuf_num@rb,c
 12713  012E2C  0E01               	movlw	high _uart_tx
 12714  012E2E  6E02               	movwf	i2ringbuf_num@rb+1,c
 12715  012E30  ECBF  F091         	call	i2_ringbuf_num	;wreg free
 12716  012E34  5001               	movf	?i2_ringbuf_num,w,c
 12717  012E36  1002               	iorwf	?i2_ringbuf_num+1,w,c
 12718  012E38  B4D8               	btfsc	status,2,c
 12719  012E3A  D008               	goto	i2l1287
 12720                           
 12721                           ;My_UART.c: 32: TXREG1 = ringbuf_pop(&uart_tx);
 12722  012E3C  0E55               	movlw	low _uart_tx
 12723  012E3E  6E09               	movwf	i2ringbuf_pop@rb,c
 12724  012E40  0E01               	movlw	high _uart_tx
 12725  012E42  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 12726  012E44  ECD4  F092         	call	i2_ringbuf_pop	;wreg free
 12727  012E48  6EAE               	movwf	4014,c	;volatile
 12728                           
 12729                           ;My_UART.c: 33: } else {
 12730  012E4A  D001               	goto	i2l1286
 12731  012E4C                     i2l1287:
 12732                           
 12733                           ;My_UART.c: 34: PIE1bits.TXIE = 0;
 12734  012E4C  989D               	bcf	3997,4,c	;volatile
 12735  012E4E                     i2l1286:
 12736                           
 12737                           ;My_UART.c: 35: }
 12738                           ;My_UART.c: 36: }
 12739                           ;My_UART.c: 37: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 12740  012E4E  AA9D               	btfss	3997,5,c	;volatile
 12741  012E50  0012               	return	
 12742  012E52  AA9E               	btfss	3998,5,c	;volatile
 12743  012E54  0012               	return	
 12744                           
 12745                           ;My_UART.c: 38: char ascii = RCREG1;
 12746  012E56  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 12747                           
 12748                           ;My_UART.c: 39: ringbuf_put(&uart_rx, ascii);
 12749  012E5A  0E4D               	movlw	low _uart_rx
 12750  012E5C  6E09               	movwf	i2ringbuf_put@rb,c
 12751  012E5E  0E01               	movlw	high _uart_rx
 12752  012E60  6E0A               	movwf	i2ringbuf_put@rb+1,c
 12753  012E62  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 12754  012E66  EC79  F092         	call	i2_ringbuf_put	;wreg free
 12755  012E6A  0012               	return	
 12756  012E6C                     __end_of_UART_ISR:
 12757                           	opt stack 0
 12758                           pclatu	equ	0xFFB
 12759                           pclath	equ	0xFFA
 12760                           tblptru	equ	0xFF8
 12761                           tblptrh	equ	0xFF7
 12762                           tblptrl	equ	0xFF6
 12763                           tablat	equ	0xFF5
 12764                           prodh	equ	0xFF4
 12765                           prodl	equ	0xFF3
 12766                           intcon	equ	0xFF2
 12767                           intcon2	equ	0xFF1
 12768                           indf0	equ	0xFEF
 12769                           postinc0	equ	0xFEE
 12770                           fsr0h	equ	0xFEA
 12771                           fsr0l	equ	0xFE9
 12772                           wreg	equ	0xFE8
 12773                           postinc1	equ	0xFE6
 12774                           postdec1	equ	0xFE5
 12775                           fsr1h	equ	0xFE2
 12776                           fsr1l	equ	0xFE1
 12777                           indf2	equ	0xFDF
 12778                           postinc2	equ	0xFDE
 12779                           postdec2	equ	0xFDD
 12780                           plusw2	equ	0xFDB
 12781                           fsr2h	equ	0xFDA
 12782                           fsr2l	equ	0xFD9
 12783                           status	equ	0xFD8
 12784                           
 12785 ;; *************** function i2_ringbuf_put *****************
 12786 ;; Defined at:
 12787 ;;		line 20 in file "../My_library/My_ringbuf.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 12790 ;;		 -> usb_rx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
 12791 ;;		 -> lcd_tx(8), 
 12792 ;;  asciicode       1   10[COMRAM] unsigned char 
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;		None
 12795 ;; Return value:  Size  Location     Type
 12796 ;;		None               void
 12797 ;; Registers used:
 12798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/0
 12801 ;;		On exit  : 0/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12804 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12806 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12807 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12808 ;;Total ram usage:        7 bytes
 12809 ;; Hardware stack levels used:    1
 12810 ;; Hardware stack levels required when called:    1
 12811 ;; This function calls:
 12812 ;;		i2_ringbuf_num
 12813 ;; This function is called by:
 12814 ;;		_UART_ISR
 12815 ;; This function uses a non-reentrant model
 12816 ;;
 12817                           
 12818                           	psect	text53
 12819  0124F2                     __ptext53:
 12820                           	opt stack 0
 12821  0124F2                     i2_ringbuf_put:
 12822                           	opt stack 18
 12823                           
 12824                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 12825                           
 12826                           ;incstack = 0
 12827  0124F2  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 12828  0124F6  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 12829  0124FA  ECBF  F091         	call	i2_ringbuf_num	;wreg free
 12830  0124FE  EE20 F002          	lfsr	2,2
 12831  012502  5009               	movf	i2ringbuf_put@rb,w,c
 12832  012504  26D9               	addwf	fsr2l,f,c
 12833  012506  500A               	movf	i2ringbuf_put@rb+1,w,c
 12834  012508  22DA               	addwfc	fsr2h,f,c
 12835  01250A  50DE               	movf	postinc2,w,c
 12836  01250C  5C01               	subwf	?i2_ringbuf_num,w,c
 12837  01250E  50DE               	movf	postinc2,w,c
 12838  012510  5802               	subwfb	?i2_ringbuf_num+1,w,c
 12839  012512  B0D8               	btfsc	status,0,c
 12840  012514  0012               	return	
 12841                           
 12842                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 12843  012516  EE20 F004          	lfsr	2,4
 12844  01251A  5009               	movf	i2ringbuf_put@rb,w,c
 12845  01251C  26D9               	addwf	fsr2l,f,c
 12846  01251E  500A               	movf	i2ringbuf_put@rb+1,w,c
 12847  012520  22DA               	addwfc	fsr2h,f,c
 12848  012522  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 12849  012526  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 12850  01252A  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 12851  01252E  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 12852  012532  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 12853  012536  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 12854  01253A  500C               	movf	??i2_ringbuf_put,w,c
 12855  01253C  240E               	addwf	??i2_ringbuf_put+2,w,c
 12856  01253E  6ED9               	movwf	fsr2l,c
 12857  012540  500D               	movf	??i2_ringbuf_put+1,w,c
 12858  012542  200F               	addwfc	??i2_ringbuf_put+3,w,c
 12859  012544  6EDA               	movwf	fsr2h,c
 12860  012546  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 12861                           
 12862                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 12863  01254A  EE20 F002          	lfsr	2,2
 12864  01254E  5009               	movf	i2ringbuf_put@rb,w,c
 12865  012550  26D9               	addwf	fsr2l,f,c
 12866  012552  500A               	movf	i2ringbuf_put@rb+1,w,c
 12867  012554  22DA               	addwfc	fsr2h,f,c
 12868  012556  EE10 F004          	lfsr	1,4
 12869  01255A  5009               	movf	i2ringbuf_put@rb,w,c
 12870  01255C  26E1               	addwf	fsr1l,f,c
 12871  01255E  500A               	movf	i2ringbuf_put@rb+1,w,c
 12872  012560  22E2               	addwfc	fsr1h,f,c
 12873  012562  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 12874  012566  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 12875  01256A  0E01               	movlw	1
 12876  01256C  260E               	addwf	??i2_ringbuf_put+2,f,c
 12877  01256E  0E00               	movlw	0
 12878  012570  220F               	addwfc	??i2_ringbuf_put+3,f,c
 12879  012572  50DE               	movf	postinc2,w,c
 12880  012574  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 12881  012576  50DE               	movf	postinc2,w,c
 12882  012578  580F               	subwfb	??i2_ringbuf_put+3,w,c
 12883  01257A  B0D8               	btfsc	status,0,c
 12884  01257C  D00A               	goto	i2l9402
 12885  01257E  EE20 F004          	lfsr	2,4
 12886  012582  5009               	movf	i2ringbuf_put@rb,w,c
 12887  012584  26D9               	addwf	fsr2l,f,c
 12888  012586  500A               	movf	i2ringbuf_put@rb+1,w,c
 12889  012588  22DA               	addwfc	fsr2h,f,c
 12890  01258A  2ADE               	incf	postinc2,f,c
 12891  01258C  0E00               	movlw	0
 12892  01258E  22DD               	addwfc	postdec2,f,c
 12893  012590  0012               	return	
 12894  012592                     i2l9402:
 12895                           
 12896                           ;My_ringbuf.c: 24: else rb->head = 0;
 12897  012592  EE20 F004          	lfsr	2,4
 12898  012596  5009               	movf	i2ringbuf_put@rb,w,c
 12899  012598  26D9               	addwf	fsr2l,f,c
 12900  01259A  500A               	movf	i2ringbuf_put@rb+1,w,c
 12901  01259C  22DA               	addwfc	fsr2h,f,c
 12902  01259E  0E00               	movlw	0
 12903  0125A0  6EDE               	movwf	postinc2,c
 12904  0125A2  0E00               	movlw	0
 12905  0125A4  6EDD               	movwf	postdec2,c
 12906  0125A6  0012               	return	
 12907  0125A8                     __end_ofi2_ringbuf_put:
 12908                           	opt stack 0
 12909                           pclatu	equ	0xFFB
 12910                           pclath	equ	0xFFA
 12911                           tblptru	equ	0xFF8
 12912                           tblptrh	equ	0xFF7
 12913                           tblptrl	equ	0xFF6
 12914                           tablat	equ	0xFF5
 12915                           prodh	equ	0xFF4
 12916                           prodl	equ	0xFF3
 12917                           intcon	equ	0xFF2
 12918                           intcon2	equ	0xFF1
 12919                           indf0	equ	0xFEF
 12920                           postinc0	equ	0xFEE
 12921                           fsr0h	equ	0xFEA
 12922                           fsr0l	equ	0xFE9
 12923                           wreg	equ	0xFE8
 12924                           postinc1	equ	0xFE6
 12925                           postdec1	equ	0xFE5
 12926                           fsr1h	equ	0xFE2
 12927                           fsr1l	equ	0xFE1
 12928                           indf2	equ	0xFDF
 12929                           postinc2	equ	0xFDE
 12930                           postdec2	equ	0xFDD
 12931                           plusw2	equ	0xFDB
 12932                           fsr2h	equ	0xFDA
 12933                           fsr2l	equ	0xFD9
 12934                           status	equ	0xFD8
 12935                           
 12936 ;; *************** function i2_ringbuf_pop *****************
 12937 ;; Defined at:
 12938 ;;		line 45 in file "../My_library/My_ringbuf.c"
 12939 ;; Parameters:    Size  Location     Type
 12940 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 12941 ;;		 -> usb_tx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
 12942 ;;		 -> lcd_tx(8), 
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 12945 ;; Return value:  Size  Location     Type
 12946 ;;                  1    wreg      unsigned char 
 12947 ;; Registers used:
 12948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12949 ;; Tracked objects:
 12950 ;;		On entry : 0/0
 12951 ;;		On exit  : 0/0
 12952 ;;		Unchanged: 0/0
 12953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12956 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12957 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12958 ;;Total ram usage:        7 bytes
 12959 ;; Hardware stack levels used:    1
 12960 ;; Hardware stack levels required when called:    1
 12961 ;; This function calls:
 12962 ;;		i2_ringbuf_num
 12963 ;; This function is called by:
 12964 ;;		_UART_ISR
 12965 ;; This function uses a non-reentrant model
 12966 ;;
 12967                           
 12968                           	psect	text54
 12969  0125A8                     __ptext54:
 12970                           	opt stack 0
 12971  0125A8                     i2_ringbuf_pop:
 12972                           	opt stack 18
 12973                           
 12974                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 12975                           
 12976                           ;incstack = 0
 12977  0125A8  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 12978  0125AC  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 12979  0125B0  ECBF  F091         	call	i2_ringbuf_num	;wreg free
 12980  0125B4  5001               	movf	?i2_ringbuf_num,w,c
 12981  0125B6  1002               	iorwf	?i2_ringbuf_num+1,w,c
 12982  0125B8  B4D8               	btfsc	status,2,c
 12983  0125BA  D04A               	goto	i2l9420
 12984                           
 12985                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 12986  0125BC  EE20 F006          	lfsr	2,6
 12987  0125C0  5009               	movf	i2ringbuf_pop@rb,w,c
 12988  0125C2  26D9               	addwf	fsr2l,f,c
 12989  0125C4  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12990  0125C6  22DA               	addwfc	fsr2h,f,c
 12991  0125C8  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 12992  0125CC  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 12993  0125D0  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 12994  0125D4  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 12995  0125D8  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 12996  0125DC  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 12997  0125E0  500B               	movf	??i2_ringbuf_pop,w,c
 12998  0125E2  240D               	addwf	??i2_ringbuf_pop+2,w,c
 12999  0125E4  6ED9               	movwf	fsr2l,c
 13000  0125E6  500C               	movf	??i2_ringbuf_pop+1,w,c
 13001  0125E8  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 13002  0125EA  6EDA               	movwf	fsr2h,c
 13003  0125EC  50DF               	movf	indf2,w,c
 13004  0125EE  6E0F               	movwf	i2ringbuf_pop@ret,c
 13005                           
 13006                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 13007  0125F0  EE20 F002          	lfsr	2,2
 13008  0125F4  5009               	movf	i2ringbuf_pop@rb,w,c
 13009  0125F6  26D9               	addwf	fsr2l,f,c
 13010  0125F8  500A               	movf	i2ringbuf_pop@rb+1,w,c
 13011  0125FA  22DA               	addwfc	fsr2h,f,c
 13012  0125FC  EE10 F006          	lfsr	1,6
 13013  012600  5009               	movf	i2ringbuf_pop@rb,w,c
 13014  012602  26E1               	addwf	fsr1l,f,c
 13015  012604  500A               	movf	i2ringbuf_pop@rb+1,w,c
 13016  012606  22E2               	addwfc	fsr1h,f,c
 13017  012608  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 13018  01260C  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 13019  012610  0E01               	movlw	1
 13020  012612  260D               	addwf	??i2_ringbuf_pop+2,f,c
 13021  012614  0E00               	movlw	0
 13022  012616  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 13023  012618  50DE               	movf	postinc2,w,c
 13024  01261A  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 13025  01261C  50DE               	movf	postinc2,w,c
 13026  01261E  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 13027  012620  B0D8               	btfsc	status,0,c
 13028  012622  D00A               	goto	i2l9412
 13029                           
 13030                           ;My_ringbuf.c: 49: rb->tail++;
 13031  012624  EE20 F006          	lfsr	2,6
 13032  012628  5009               	movf	i2ringbuf_pop@rb,w,c
 13033  01262A  26D9               	addwf	fsr2l,f,c
 13034  01262C  500A               	movf	i2ringbuf_pop@rb+1,w,c
 13035  01262E  22DA               	addwfc	fsr2h,f,c
 13036  012630  2ADE               	incf	postinc2,f,c
 13037  012632  0E00               	movlw	0
 13038  012634  22DD               	addwfc	postdec2,f,c
 13039                           
 13040                           ;My_ringbuf.c: 50: } else {
 13041  012636  D00A               	goto	i2l9414
 13042  012638                     i2l9412:
 13043                           
 13044                           ;My_ringbuf.c: 51: rb->tail = 0;
 13045  012638  EE20 F006          	lfsr	2,6
 13046  01263C  5009               	movf	i2ringbuf_pop@rb,w,c
 13047  01263E  26D9               	addwf	fsr2l,f,c
 13048  012640  500A               	movf	i2ringbuf_pop@rb+1,w,c
 13049  012642  22DA               	addwfc	fsr2h,f,c
 13050  012644  0E00               	movlw	0
 13051  012646  6EDE               	movwf	postinc2,c
 13052  012648  0E00               	movlw	0
 13053  01264A  6EDD               	movwf	postdec2,c
 13054  01264C                     i2l9414:
 13055                           
 13056                           ;My_ringbuf.c: 52: }
 13057                           ;My_ringbuf.c: 53: return ret;
 13058  01264C  500F               	movf	i2ringbuf_pop@ret,w,c
 13059                           
 13060                           ;My_ringbuf.c: 54: } else {
 13061  01264E  0012               	return	
 13062  012650                     i2l9420:
 13063                           
 13064                           ;My_ringbuf.c: 55: return 0;
 13065  012650  0E00               	movlw	0
 13066  012652  0012               	return	
 13067  012654                     __end_ofi2_ringbuf_pop:
 13068                           	opt stack 0
 13069                           pclatu	equ	0xFFB
 13070                           pclath	equ	0xFFA
 13071                           tblptru	equ	0xFF8
 13072                           tblptrh	equ	0xFF7
 13073                           tblptrl	equ	0xFF6
 13074                           tablat	equ	0xFF5
 13075                           prodh	equ	0xFF4
 13076                           prodl	equ	0xFF3
 13077                           intcon	equ	0xFF2
 13078                           intcon2	equ	0xFF1
 13079                           indf0	equ	0xFEF
 13080                           postinc0	equ	0xFEE
 13081                           fsr0h	equ	0xFEA
 13082                           fsr0l	equ	0xFE9
 13083                           wreg	equ	0xFE8
 13084                           postinc1	equ	0xFE6
 13085                           postdec1	equ	0xFE5
 13086                           fsr1h	equ	0xFE2
 13087                           fsr1l	equ	0xFE1
 13088                           indf2	equ	0xFDF
 13089                           postinc2	equ	0xFDE
 13090                           postdec2	equ	0xFDD
 13091                           plusw2	equ	0xFDB
 13092                           fsr2h	equ	0xFDA
 13093                           fsr2l	equ	0xFD9
 13094                           status	equ	0xFD8
 13095                           
 13096 ;; *************** function i2_ringbuf_num *****************
 13097 ;; Defined at:
 13098 ;;		line 12 in file "../My_library/My_ringbuf.c"
 13099 ;; Parameters:    Size  Location     Type
 13100 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 13101 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 13102 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;		None
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  2    0[COMRAM] unsigned int 
 13107 ;; Registers used:
 13108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13116 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13117 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13118 ;;Total ram usage:        8 bytes
 13119 ;; Hardware stack levels used:    1
 13120 ;; This function calls:
 13121 ;;		Nothing
 13122 ;; This function is called by:
 13123 ;;		_UART_ISR
 13124 ;;		i2_ringbuf_put
 13125 ;;		i2_ringbuf_pop
 13126 ;; This function uses a non-reentrant model
 13127 ;;
 13128                           
 13129                           	psect	text55
 13130  01237E                     __ptext55:
 13131                           	opt stack 0
 13132  01237E                     i2_ringbuf_num:
 13133                           	opt stack 18
 13134                           
 13135                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 13136                           
 13137                           ;incstack = 0
 13138  01237E  EE20 F006          	lfsr	2,6
 13139  012382  5001               	movf	i2ringbuf_num@rb,w,c
 13140  012384  26D9               	addwf	fsr2l,f,c
 13141  012386  5002               	movf	i2ringbuf_num@rb+1,w,c
 13142  012388  22DA               	addwfc	fsr2h,f,c
 13143  01238A  EE10 F004          	lfsr	1,4
 13144  01238E  5001               	movf	i2ringbuf_num@rb,w,c
 13145  012390  26E1               	addwf	fsr1l,f,c
 13146  012392  5002               	movf	i2ringbuf_num@rb+1,w,c
 13147  012394  22E2               	addwfc	fsr1h,f,c
 13148  012396  50DE               	movf	postinc2,w,c
 13149  012398  5CE6               	subwf	postinc1,w,c
 13150  01239A  50DE               	movf	postinc2,w,c
 13151  01239C  58E6               	subwfb	postinc1,w,c
 13152  01239E  A0D8               	btfss	status,0,c
 13153  0123A0  D01F               	goto	i2l9146
 13154                           
 13155                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 13156  0123A2  EE20 F004          	lfsr	2,4
 13157  0123A6  5001               	movf	i2ringbuf_num@rb,w,c
 13158  0123A8  26D9               	addwf	fsr2l,f,c
 13159  0123AA  5002               	movf	i2ringbuf_num@rb+1,w,c
 13160  0123AC  22DA               	addwfc	fsr2h,f,c
 13161  0123AE  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 13162  0123B2  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 13163  0123B6  EE20 F006          	lfsr	2,6
 13164  0123BA  5001               	movf	i2ringbuf_num@rb,w,c
 13165  0123BC  26D9               	addwf	fsr2l,f,c
 13166  0123BE  5002               	movf	i2ringbuf_num@rb+1,w,c
 13167  0123C0  22DA               	addwfc	fsr2h,f,c
 13168  0123C2  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 13169  0123C6  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 13170  0123CA  1E05               	comf	??i2_ringbuf_num+2,f,c
 13171  0123CC  1E06               	comf	??i2_ringbuf_num+3,f,c
 13172  0123CE  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 13173  0123D0  2A06               	incf	??i2_ringbuf_num+3,f,c
 13174  0123D2  5003               	movf	??i2_ringbuf_num,w,c
 13175  0123D4  2405               	addwf	??i2_ringbuf_num+2,w,c
 13176  0123D6  6E01               	movwf	?i2_ringbuf_num,c
 13177  0123D8  5004               	movf	??i2_ringbuf_num+1,w,c
 13178  0123DA  2006               	addwfc	??i2_ringbuf_num+3,w,c
 13179  0123DC  6E02               	movwf	?i2_ringbuf_num+1,c
 13180                           
 13181                           ;My_ringbuf.c: 15: } else {
 13182  0123DE  0012               	return	
 13183  0123E0                     i2l9146:
 13184                           
 13185                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 13186  0123E0  EE20 F004          	lfsr	2,4
 13187  0123E4  5001               	movf	i2ringbuf_num@rb,w,c
 13188  0123E6  26D9               	addwf	fsr2l,f,c
 13189  0123E8  5002               	movf	i2ringbuf_num@rb+1,w,c
 13190  0123EA  22DA               	addwfc	fsr2h,f,c
 13191  0123EC  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 13192  0123F0  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 13193  0123F4  EE20 F002          	lfsr	2,2
 13194  0123F8  5001               	movf	i2ringbuf_num@rb,w,c
 13195  0123FA  26D9               	addwf	fsr2l,f,c
 13196  0123FC  5002               	movf	i2ringbuf_num@rb+1,w,c
 13197  0123FE  22DA               	addwfc	fsr2h,f,c
 13198  012400  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 13199  012404  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 13200  012408  EE20 F006          	lfsr	2,6
 13201  01240C  5001               	movf	i2ringbuf_num@rb,w,c
 13202  01240E  26D9               	addwf	fsr2l,f,c
 13203  012410  5002               	movf	i2ringbuf_num@rb+1,w,c
 13204  012412  22DA               	addwfc	fsr2h,f,c
 13205  012414  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 13206  012418  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 13207  01241C  1E07               	comf	??i2_ringbuf_num+4,f,c
 13208  01241E  1E08               	comf	??i2_ringbuf_num+5,f,c
 13209  012420  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 13210  012422  2A08               	incf	??i2_ringbuf_num+5,f,c
 13211  012424  5005               	movf	??i2_ringbuf_num+2,w,c
 13212  012426  2607               	addwf	??i2_ringbuf_num+4,f,c
 13213  012428  5006               	movf	??i2_ringbuf_num+3,w,c
 13214  01242A  2208               	addwfc	??i2_ringbuf_num+5,f,c
 13215  01242C  5003               	movf	??i2_ringbuf_num,w,c
 13216  01242E  2407               	addwf	??i2_ringbuf_num+4,w,c
 13217  012430  6E01               	movwf	?i2_ringbuf_num,c
 13218  012432  5004               	movf	??i2_ringbuf_num+1,w,c
 13219  012434  2008               	addwfc	??i2_ringbuf_num+5,w,c
 13220  012436  6E02               	movwf	?i2_ringbuf_num+1,c
 13221  012438  0012               	return	
 13222  01243A                     __end_ofi2_ringbuf_num:
 13223                           	opt stack 0
 13224                           pclatu	equ	0xFFB
 13225                           pclath	equ	0xFFA
 13226                           tblptru	equ	0xFF8
 13227                           tblptrh	equ	0xFF7
 13228                           tblptrl	equ	0xFF6
 13229                           tablat	equ	0xFF5
 13230                           prodh	equ	0xFF4
 13231                           prodl	equ	0xFF3
 13232                           intcon	equ	0xFF2
 13233                           intcon2	equ	0xFF1
 13234                           indf0	equ	0xFEF
 13235                           postinc0	equ	0xFEE
 13236                           fsr0h	equ	0xFEA
 13237                           fsr0l	equ	0xFE9
 13238                           wreg	equ	0xFE8
 13239                           postinc1	equ	0xFE6
 13240                           postdec1	equ	0xFE5
 13241                           fsr1h	equ	0xFE2
 13242                           fsr1l	equ	0xFE1
 13243                           indf2	equ	0xFDF
 13244                           postinc2	equ	0xFDE
 13245                           postdec2	equ	0xFDD
 13246                           plusw2	equ	0xFDB
 13247                           fsr2h	equ	0xFDA
 13248                           fsr2l	equ	0xFD9
 13249                           status	equ	0xFD8
 13250                           pclatu	equ	0xFFB
 13251                           pclath	equ	0xFFA
 13252                           tblptru	equ	0xFF8
 13253                           tblptrh	equ	0xFF7
 13254                           tblptrl	equ	0xFF6
 13255                           tablat	equ	0xFF5
 13256                           prodh	equ	0xFF4
 13257                           prodl	equ	0xFF3
 13258                           intcon	equ	0xFF2
 13259                           intcon2	equ	0xFF1
 13260                           indf0	equ	0xFEF
 13261                           postinc0	equ	0xFEE
 13262                           fsr0h	equ	0xFEA
 13263                           fsr0l	equ	0xFE9
 13264                           wreg	equ	0xFE8
 13265                           postinc1	equ	0xFE6
 13266                           postdec1	equ	0xFE5
 13267                           fsr1h	equ	0xFE2
 13268                           fsr1l	equ	0xFE1
 13269                           indf2	equ	0xFDF
 13270                           postinc2	equ	0xFDE
 13271                           postdec2	equ	0xFDD
 13272                           plusw2	equ	0xFDB
 13273                           fsr2h	equ	0xFDA
 13274                           fsr2l	equ	0xFD9
 13275                           status	equ	0xFD8
 13276                           
 13277                           	psect	rparam
 13278  0000                     pclatu	equ	0xFFB
 13279                           pclath	equ	0xFFA
 13280                           tblptru	equ	0xFF8
 13281                           tblptrh	equ	0xFF7
 13282                           tblptrl	equ	0xFF6
 13283                           tablat	equ	0xFF5
 13284                           prodh	equ	0xFF4
 13285                           prodl	equ	0xFF3
 13286                           intcon	equ	0xFF2
 13287                           intcon2	equ	0xFF1
 13288                           indf0	equ	0xFEF
 13289                           postinc0	equ	0xFEE
 13290                           fsr0h	equ	0xFEA
 13291                           fsr0l	equ	0xFE9
 13292                           wreg	equ	0xFE8
 13293                           postinc1	equ	0xFE6
 13294                           postdec1	equ	0xFE5
 13295                           fsr1h	equ	0xFE2
 13296                           fsr1l	equ	0xFE1
 13297                           indf2	equ	0xFDF
 13298                           postinc2	equ	0xFDE
 13299                           postdec2	equ	0xFDD
 13300                           plusw2	equ	0xFDB
 13301                           fsr2h	equ	0xFDA
 13302                           fsr2l	equ	0xFD9
 13303                           status	equ	0xFD8
 13304                           
 13305                           	psect	temp
 13306  000040                     btemp:
 13307                           	opt stack 0
 13308  000040                     	ds	1
 13309  0000                     int$flags	set	btemp
 13310                           pclatu	equ	0xFFB
 13311                           pclath	equ	0xFFA
 13312                           tblptru	equ	0xFF8
 13313                           tblptrh	equ	0xFF7
 13314                           tblptrl	equ	0xFF6
 13315                           tablat	equ	0xFF5
 13316                           prodh	equ	0xFF4
 13317                           prodl	equ	0xFF3
 13318                           intcon	equ	0xFF2
 13319                           intcon2	equ	0xFF1
 13320                           indf0	equ	0xFEF
 13321                           postinc0	equ	0xFEE
 13322                           fsr0h	equ	0xFEA
 13323                           fsr0l	equ	0xFE9
 13324                           wreg	equ	0xFE8
 13325                           postinc1	equ	0xFE6
 13326                           postdec1	equ	0xFE5
 13327                           fsr1h	equ	0xFE2
 13328                           fsr1l	equ	0xFE1
 13329                           indf2	equ	0xFDF
 13330                           postinc2	equ	0xFDE
 13331                           postdec2	equ	0xFDD
 13332                           plusw2	equ	0xFDB
 13333                           fsr2h	equ	0xFDA
 13334                           fsr2l	equ	0xFD9
 13335                           status	equ	0xFD8


Data Sizes:
    Strings     534
    Constant    239
    Data        5
    BSS         1877
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160    118     148
    BANK1           256     34     177
    BANK2           256      0     228
    BANK3           256      0     200
    BANK4           256      0     250
    BANK5           256    105     105
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_61(CODE[6]), STR_60(CODE[2]), STR_59(CODE[2]), STR_58(CODE[2]), 
		 -> STR_57(CODE[2]), STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_53(CODE[2]), STR_52(CODE[4]), STR_51(CODE[4]), STR_50(CODE[4]), 
		 -> STR_49(CODE[4]), STR_48(CODE[5]), STR_47(CODE[4]), STR_45(CODE[3]), 
		 -> STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[7]), 
		 -> STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[6]), 
		 -> STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_62(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_46(CODE[15]), STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> terminal_operation@str(BANK1[30]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK0[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 315
		 -> terminal_operation@str(BANK1[30]), STR_43(CODE[315]), STR_24(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(BANK0[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), lcd_tx(BANK0[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(BANK1[4]), sw_R(BANK1[4]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    _terminal_task->_ringbuf_pop
    _terminal_operation->_strcmp
    _terminal_time->_month_length
    _terminal_time->_strcmp
    _sprintf->___lwmod
    _sprintf->_isdigit
    _atoi->_isdigit
    _ringbuf_put_num->___lwmod
    _main_init->_ADC_init
    _main_init->_PWM_init
    _main_init->_timer0_init
    _main_init->_timer1_init
    _main_init->_timer3_init
    _epoch_to_caltime->_month_length
    _light_task->___llmod
    _caltime_to_epoch->_month_length
    ___lmul->_month_length
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->___lwmod
    _ringbuf_put->_ringbuf_num
    ___lwmod->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    ___awdiv->_atoi
    _light_task->_RTCC_from_RTCC
    _PWM_set->___awdiv
    ___lwdiv->___wmul
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _terminal_task->_terminal_operation

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_terminal_task

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  316580
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_task
                          _UART_task
                         _light_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  240778
                                            112 BANK0      6     2      4
                                              0 BANK5    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  58    48     10  201286
                                            100 BANK0     12     2     10
                                              0 BANK1     34    34      0
                            _PWM_set
                            ___awdiv
                             ___wmul
                               _atoi
                    _ringbuf_put_str
                            _sprintf
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  125150
                                             91 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   66172
                                             84 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   34403
                                             52 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   15592
                                             17 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   10721
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   17230
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    8463
                                             31 COMRAM     1     1      0
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   12299
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   11480
                                             17 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8721
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                             31 COMRAM     1     1      0
                                             13 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2659
                                             31 COMRAM     1     1      0
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1646
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   21053
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                             31 COMRAM     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1614
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   19090
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2   11391
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8701
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5084
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    2152
                                             22 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0    1697
                                             21 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1635
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_task                                          11    11      0   26588
                                             40 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     470
                                             31 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     955
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2   14046
                                             21 BANK0      5     3      2
                            ___awdiv (ARG)
                            ___lwdiv
                             ___wmul
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4   10676
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1431
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1372
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1372
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7699
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7699
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    6165
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                             31 COMRAM     1     0      1
                                              6 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2988
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              1 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0    3067
                                             16 COMRAM    15    15      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1432
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1635
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     671
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     608
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     322
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _light_task
     _PWM_set
       ___awdiv (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _atoi (ARG)
         ___wmul
         _isdigit
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
     ___llmod
     ___lmul
       ___lldiv (ARG)
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
               ___wmul (ARG)
               _atoi (ARG)
                 ___wmul
                 _isdigit
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _PWM_set
         ___awdiv (ARG)
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___awdiv
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lwdiv
           ___wmul (ARG)
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
         ___wmul
         _isdigit
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
                   ___wmul (ARG)
                   _atoi (ARG)
                     ___wmul
                     _isdigit
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     3E8      36       30.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     69      69      16       41.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      FA      14       97.7%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      E4      10       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     22      B1       7       69.1%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     76      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     493       8        0.0%
DATA                 0      0     87B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Jan 02 18:41:34 2016

                     _USB_SD_Ptr FD03                  _ringbuf_put_num 29C0  
                _ringbuf_put_str 2C06                     ___awdiv@sign 0072  
                             _ms 0114              ___wmul@multiplicand 0062  
              ??_RTCC_from_epoch 0021                     __CFG_CP0$OFF 000000  
                            l710 2DFC                              l705 2EC0  
                            _BDT 000D00                              l861 1E02  
                            l774 29C2                              l855 22C2  
                            l874 189C                              _PR2 000FCB  
                            _ISR 0008                              _UIE 000F36  
                            _UIR 000F62                    ?_get_quot_rem 0079  
             caltime_to_epoch@tm 0079                              _now 0137  
              _RTCC_from_caltime 2F8C                     ___awmod@sign 0065  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                   _USBDeviceState 0036  
             ?_RTCC_from_caltime 008F                             ?_ISR 0001  
               _terminal_at_hand 2C6A                             l2027 22B0  
                           l2037 280E                             l2080 2AB0  
                           l2090 2D1E                             l1507 2452  
                           l1561 16FC                             l1566 1756  
                           l1830 1C32                             l9002 2CB2  
                           l9020 1B52                             l9012 2D70  
                           l9102 1A4A                             l9030 1B98  
                           l9006 2D2A                             l9112 1A9E  
                           l9008 2D36               __CFG_WPFP$PAGE_127 000000  
                           l9130 1B20                             l9122 1B0A  
                           l9034 1BAA                             l9018 1B4C  
                           l9108 1A8E                             l9116 1AE6  
                           l9220 29F4                             l9036 1BF4  
                           l9052 09BA                             l8510 26CA  
                           l8502 2694                             l9126 1B14  
                           l9118 1B00                             l9038 1BFA  
                           l9070 0B0E                             l9062 0A56  
                           l9054 09C6                             l9302 0138  
                           l8504 26A0                             l9136 1B2C  
                           l8600 21FC                             l9216 29D2  
                           l9064 0A8E                             l9312 01CE  
                           l8506 26A6                             l8514 26D8  
                           l8530 1CB4                             l8610 2234  
                           l9170 2DFE                             l9226 2A34  
                           l9090 0C9C                             l9082 0BE4  
                           l9074 0B56                             l9058 0A0E  
                           l9330 02C0                             l9322 0264  
                           l9314 01D4                             l8612 2244  
                           l9236 212A                             l9244 2144  
                           l9084 0C1C                             l9068 0AD6  
                           l9308 0186                             l8518 26EC  
                           l8710 2A6C                             l8622 229E  
                           l8614 224A                             l9158 2ED4  
                           l9254 2864                             l9238 2140  
                           l9094 0CE4                             l9078 0B9C  
                           l9342 0364                             l9334 0308  
                           l9318 021C                             l8552 2ACC  
                           l8720 2AA2                             l8712 2A72  
                           l9264 2BB2                             l9088 0C64  
                           l8546 1DB2                             l9098 1A3A  
                           l8730 2CE8                             l8634 1F94  
                           l9354 0408                             l9346 03AC  
                           l9290 0060                             l8556 2AF2  
                           l8660 10B2                             l8708 2A60  
                           l8580 2198                             l8820 191A  
                           l8732 2CEE                             l8494 2670  
                           l8654 10A2                             l9390 27FE  
                           l9382 27A6                             l8582 21A4  
                           l8574 217A                             l8814 190E  
                           l8742 2C08                             l8910 0790  
                           l9366 04AC                             l9358 0450  
                           l9550 0DFE                             l9606 106A  
                           l9542 0D54                             l8672 1130  
                           l8656 10A8                             l9384 27B4  
                           l9640 165A                             l8592 21DA  
                           l8584 21AA                             l8568 2164  
                           l8816 1912                             l8736 2D12  
                           l8728 2CDE                             l8840 0544  
                           l9288 0048                             l9560 0E54  
                           l9552 0E02                             l8498 2680  
                           l8666 110C                             l9386 27BA  
                           l9650 16E6                             l8746 2C40  
                           l8922 07CC                             l8842 0556  
                           l8834 0526                             l9546 0D7E  
                           l8676 1194                             l8668 1110  
                           l8596 21E8                             l8692 2F34  
                           l8932 0826                             l8908 078A  
                           l8860 0618                             l8852 0598  
                           l9662 1722                             l9646 16DC  
                           l8942 0856                             l8950 087E  
                           l8934 0830                             l8870 0656  
                           l8846 0560                             l9590 0FD8  
                           l9582 0F7C                             l9574 0EF4  
                           l9566 0EA2                             l9558 0E50  
                           l9672 1740                             l9664 1726  
                           l8952 088A                             l8928 07EE  
                           l8880 06BC                             l8872 065C  
                           l9584 0FA6                             l9576 0EF8  
                           l9568 0EA6                             l9690 1798  
                           l9594 0FF4                             l9684 177C  
                           l9668 1736                             l8972 0938  
                           l8964 08D0                             l8892 070C  
                           l8884 06CE                             l8868 064A  
                           l9588 0FD0                             l9686 1780  
                           l8966 08D6                             l8958 08B0  
                           l8886 06E6                             l8878 06B0  
                           l8974 0944                             l9598 1034  
                           STR_1 FFBD                             l8976 0964  
                           l8896 0724                             l8898 075A  
                           STR_4 FFFA                             STR_7 FFFC  
                           STR_9 FFF8                             u6315 3026  
                           u6316 3028                             u8500 1DFC  
                           u8430 1D5C                             _UCFG 000F39  
                           u8440 1D5E                             u8450 1D8E  
                           _UEP0 000F26                             _UEP1 000F27  
                           u8470 1DA4                             u9510 00F2  
                           u8480 1DA6                             u9520 010E  
                           u8490 1DFA                             _UEIE 000F37  
                           u8468 1D92                             u9518 00F6  
                           u9528 0112                             u8770 2C32  
                           u8780 2C62                             _UEIR 000F63  
                           _UCON 000F65                             u8777 2C28  
                           u8787 2C58                  _CDCDataInHandle 0128  
            ??_RTCC_from_caltime 0021                             _pDst 012A  
                           _atoi 1B4A                             _main 2B30  
       button_timer_interrupt@bt 0001                             _sw_B 017C  
                           _sw_G 0180                             _sw_R 0184  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2h 000FDA                      _BaudRateGen 0110  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 0040  
         __CFG_DSWDTOSC$T1OSCREF 000000                             pclat 000FFA  
                           prodh 000FF4                             prodl 000FF3  
                __end_of_PWM_set 1B4A                             start 00FE  
               __end_of_ADC_init 3036                    __CFG_IESO$OFF 000000  
                 terminal_task@i 0568                     ___param_bank 000010  
                ??_terminal_task 00D4                  ??_terminal_time 0021  
          __end_ofi2_ringbuf_pop 2654            __end_ofi2_ringbuf_num 243A  
          __end_ofi2_ringbuf_put 25A8               terminal_task@ascii 0567  
                  ADC_init@p_ref 0020                            ??_ISR 0011  
                   print_time@tx 0094                ??_RTCC_to_caltime 0021  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                          l10022 2B6E        __end_of_RTCC_from_caltime 2FB2  
                          ?_atoi 0066                            ?_main 0001  
                 ??_get_quot_rem 0021                  __end_of___awdiv 2206  
                          _ADRES 000FC3                            STR_20 FFD6  
                          STR_13 FFF6                            STR_30 FFB3  
                          STR_31 FFC8                            STR_15 FF77  
                          STR_23 FF23                            STR_32 FFA3  
                          STR_40 FF8F                            STR_24 FF80  
                          STR_33 FFC0                            STR_41 FFAE  
                          STR_25 FF63                            STR_26 FFE2  
                          STR_42 FFE4                            STR_34 FFDA  
                          STR_50 FFC2                            STR_35 FFA7  
                          STR_27 FFE1                            STR_19 FFD6  
                          STR_51 FFCE                            STR_43 FDE8  
                          STR_60 FFEC                            STR_52 FFC6  
                          STR_36 FFB8                            STR_44 FF6E  
                          STR_28 FF57                  __end_of___awmod 26F6  
                          STR_37 FFD0                            STR_53 FFA1  
                          STR_29 FFDC                            STR_45 FFDE  
                          STR_61 FF9D                            STR_54 FFEA  
                          STR_38 FF96                            STR_62 FF88  
                          STR_46 FF48                            STR_39 FFF4  
                          STR_55 FFF0                            STR_47 FFD2  
                          STR_56 FFE8                            STR_48 FFA9  
                          STR_57 FFEE                            STR_49 FFCA  
                          STR_58 FFE6                            STR_59 FFF2  
                __end_of___lldiv 22C2                            u10060 160E  
                ___awdiv@divisor 006F                  __end_of___llmod 2820  
                          _LATB2 007C52                  __end_of___lwdiv 2ABA  
                __end_of___lwmod 2D28                            i2l530 13E8  
                          i2l531 1408                            i2l532 1428  
                          i2l525 1340                            i2l526 1364  
                          i2l527 1386                            i2l528 13A8  
                          i2l529 13C8                            _UADDR 000F38  
                ___awdiv@counter 0071          ST7032_task@st7032_state 00E0  
                          _TMR1H 000FCF                            _RPOR3 000EC3  
                          _RPOR4 000EC4                            _RPOR5 000EC5  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _USTAT 000F64  
            ___lmul@multiplicand 0071                   __CFG_FCMEN$OFF 000000  
               __end_of_UART_ISR 2E6C                            _sd000 FDE4  
                          _sd001 FD4E                            _sd002 FD82  
           caltime_to_epoch@year 007F               __size_of_UART_init 0022  
                __end_of_dpowers FD03               __size_of_UART_task 0020  
               __end_of_OSC_init 3094                  __end_of_isdigit 2F3C  
             __size_of_RTCC_init 006A               __size_of_RTCC_task 003C  
               ringbuf_delete@rb 0060                            atoi@a 006B  
                          atoi@s 0066                            tablat 000FF5  
                          plusw2 000FDB                 __end_of_PWM_init 24F2  
     __size_of_ringbuf_backspace 008E                            status 000FD8  
                __end_of_sprintf 0972                month_length@month 0020  
        __end_of_ringbuf_put_num 2A42          __end_of_ringbuf_put_str 2C6A  
            terminal_task@i_4539 0566                  __initialization 293A  
                terminal_task@rx 00D2                  terminal_task@tx 00D0  
                terminal_time@tx 00BB                     __end_of_atoi 1C3C  
                   __end_of_main 2B9C            _control_signal_bitmap 0134  
            ringbuf_init@bufsize 0064                 RTCC_from_RTCC@tm 0086  
                  print_time@str 0096                           ??_atoi 0068  
                         ??_main 0021                    __activetblptr 000003  
                   _cdc_mem_type 00E6                           _BCL1IF 007D0B  
               _CDCDataOutHandle 002D                 ___llmod@dividend 0060  
                         _CCPR1L 000FBB                           _CCPR2L 000FB5  
                         _CCPR3L 000F16                           _CCPR4L 000F13  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 006D  
        _terminal_operation$6895 01A8          _terminal_operation$6896 01AA  
                      ??_PWM_set 0077                           i2l1504 00C2  
                         i2l1286 2E4E                           i2l1287 2E4C  
                 __CFG_WDTEN$OFF 000000                           i2l7530 1494  
                         i2l7522 144C                           i2l7550 154E  
                         i2l7542 1502                           i2l7534 14B8  
                         i2l7526 1470                           i2l9146 23E0  
                         i2l9402 2592                           i2l7546 1528  
                         i2l7538 14DC                           i2l7554 1572  
                         i2l9412 2638                           i2l9420 2650  
                         i2l9414 264C                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _SSPBUF 000FC9                           _TXREG1 000FAE  
                i2ringbuf_pop@rb 0009                  i2ringbuf_num@rb 0001  
                i2ringbuf_put@rb 0009                   __CFG_WPDIS$OFF 000000  
             epoch_to_caltime@tm 0081               _terminal_task$6893 0564  
              _shortPacketStatus 003D                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 0081                 ringbuf_put_num@i 0076  
                   _CCPTMRS0bits 000F52                     _CCPTMRS1bits 000F51  
          caltime_to_epoch@epoch 0081               _terminal_time$6894 00C3  
                   ?_ringbuf_pop 0068                     ?_ringbuf_num 0060  
                   ?_ringbuf_put 0068            caltime_to_epoch@month 0085  
                         ___lmul 2ABA                  _caltime_to_RTCC 1E02  
                         ___wmul 2EDE               ??_epoch_to_caltime 0083  
              __end_of_UART_init 2FFA                      light_task@i 0092  
                    light_task@n 00F3                        ??___awdiv 0021  
              __end_of_UART_task 301A                        ??___awmod 0020  
                         _d_to_x 2F64                        ??___lldiv 0020  
           ringbuf_put_num@value 0073                     ?_timer0_init 0001  
                      ??___llmod 0020                __end_of_RTCC_init 2C06  
                   ?_timer1_init 0020                        ??___lwdiv 0020  
              __end_of_RTCC_task 2EA8                        ??___lwmod 0020  
                   ?_timer3_init 0001                           _lcd_tx 00EA  
                         clear_0 2942                           clear_1 2954  
                         clear_2 2960                           clear_3 296C  
                         clear_4 2978                           clear_5 2984  
                         clear_6 2990                  __CFG_CLKOEC$OFF 000000  
               ___awdiv@quotient 0073                  ___awmod@divisor 0062  
                ___awmod@counter 0064                           _x_to_d 3036  
     __size_of_RTCC_from_caltime 0026                           _usb_rx 015D  
                         _usb_tx 0165                           _strcmp 2D28  
      __size_of_caltime_to_epoch 028E               _terminal_operation 0000  
                      ??_isdigit 0020                     _st7032_state 0135  
                   __mediumconst FCF8                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ?_ADC_init 0001                        ??_sprintf 0083  
            ?_terminal_operation 00C4                      _CtrlTrfData 000D38  
           _controlTransferState 003B             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 29B6  
                   __pbssBIGRAMl 0569             __end_of_get_quot_rem 2080  
                  ___rparam_used 000001                  _RTCC_from_epoch 3052  
               ?_ringbuf_put_num 0071                 ?_ringbuf_put_str 006F  
           __CFG_WPEND$PAGE_WPFP 000000                 terminal_task@op0 0280  
               terminal_task@op1 0299                 terminal_task@op2 02B2  
               terminal_task@op3 02CB                 terminal_task@buf 0500  
                 __pcstackCOMRAM 0001                    __end_of_sd000 FDE8  
                  __end_of_sd001 FD82                    __end_of_sd002 FDB6  
               terminal_time@op0 00BD                 terminal_time@op1 00BF  
               terminal_time@op2 00C1                     __pidataBANK1 3094  
                      ?_UART_ISR 0001             ??_terminal_operation 00CE  
       __end_of_terminal_at_hand 2CCC                        ?_OSC_init 0001  
                __CFG_DSWDTPS$G2 000000                  light_task@_6006 00F2  
                      ?_PWM_init 0001             terminal_task@command 016D  
                  _I2C_cfct_flag 0132                       _cdc_notice 0100  
        __size_of_ringbuf_delete 0026                       _cdc_rx_len 0038  
                     _cdc_tx_len 003A                       ??_ADC_init 0020  
     caltime_to_epoch@month_3637 0080                  light_task@value 008C  
                   sprintf@width 0092               __size_of_main_init 0096  
                     __pbssBANK0 00D6                       __pbssBANK1 0100  
                     __pbssBANK2 0200                       __pbssBANK3 0300  
                     __pbssBANK4 0400          __end_of_caltime_to_RTCC 1ED8  
                _RTCC_to_caltime 22C2                      _pBDTEntryIn 0027  
          __end_of_weekday_3char FDD2            RTCC_task@prev_halfsec 00DF  
                        ?___lmul 006D                       ??_UART_ISR 0010  
                        ?___wmul 0060                   ST7032_init@buf 0300  
                        ?_d_to_x 0001                       ??_OSC_init 0020  
                 ___lmul@product 0075                       _device_dsc FDD2  
                        ?_x_to_d 0001                       _ep_data_in 0118  
                        ?_strcmp 0060                       ??_PWM_init 0020  
              _configDescriptor1 FD0B                          i2l10006 006E  
             __CFG_OSC$INTOSCPLL 000000           I2C_LCD_SetCursor@F8685 01AC  
                __CFG_WDTPS$1024 000000                          _SPBRGH1 000F7F  
                  _I2C_sent_flag 00E1                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9             terminal_operation@tx 00C4  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
                        _UIEbits 000F36          __end_of_RTCC_from_epoch 306C  
           timer1_init@prescaler 0061                          _UIRbits 000F62  
                        _PWM_set 19A2                 i2ringbuf_pop@ret 000F  
                   PWM_set@color 0079                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                    _cdc_trf_state 0039  
                   PWM_set@value 0075                    ?_month_length 0020  
            epoch_to_caltime@day 0087              epoch_to_caltime@num 008B  
              RTCC_from_epoch@tm 008F                          _pCDCDst 011E  
                        _pCDCSrc 0121                          __Hparam 0000  
                        __Lparam 0000                ringbuf_put_num@rb 0071  
              ringbuf_put_str@rb 006F                    ?_ringbuf_init 0060  
                        ___awdiv 2148                  __size_of___lmul 0076  
                        ___awmod 2654                          ___lldiv 2206  
                __size_of___wmul 0036                          ___llmod 278C  
          ringbuf_put_num@digits 0075                       _light_mode 00E7  
                        ___lwdiv 2A42                       _light_task 1598  
                        ___lwmod 2CCC                  __size_of_d_to_x 0028  
          __end_of_terminal_task 1088            __end_of_terminal_time 0D1E  
           __size_of_ringbuf_pop 00C8             __size_of_ringbuf_num 00EE  
           __size_of_ringbuf_put 00D4                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 278C      epoch_to_caltime@month_cache 01B0  
                        __pcinit 293A        __end_of_configDescriptor1 FD4E  
                        __ramtop 0F00             __size_of_timer0_init 0036  
           __size_of_timer1_init 004E                          __ptext0 2B30  
                        __ptext1 0D1E                          __ptext2 0000  
                        __ptext3 0972                          __ptext4 2C6A  
                        __ptext5 28AE                          __ptext6 0518  
                        __ptext7 2C06                          __ptext8 2F8C  
                        __ptext9 2D28                          _inPipes 0021  
           __size_of_timer3_init 0028                  __size_of_x_to_d 001C  
    _USBDeferOUTDataStagePackets 00E3                        _T0CONbits 000FD5  
               _time_change_flag 00E8                 _caltime_to_epoch 1088  
                __size_of_strcmp 0058                     __size_of_ISR 00F6  
                      _T1CONbits 000FCD                          _dpowers FCF9  
        __size_of_RTCC_from_RTCC 001A                        _T2CONbits 000FCA  
                        _isdigit 2F14                        _T3CONbits 000F79  
               ___awmod@dividend 0060                        _T5CONbits 000F22  
                        _uart_rx 014D                          _uart_tx 0155  
             __end_of_USB_CD_Ptr FD0B                          _sprintf 0518  
        __end_of_RTCC_to_caltime 237E            __size_of_get_quot_rem 00D4  
           end_of_initialization 29B6           __size_ofi2_ringbuf_pop 00AC  
         __size_ofi2_ringbuf_num 00BC           __size_ofi2_ringbuf_put 00B6  
                   _CTMUCONHbits 000FB3               __end_of_USB_SD_Ptr FD09  
                   _CTMUCONLbits 000FB2              _pBDTEntryEP0OutNext 0031  
                 ??_month_length 0066  _dummy_encapsulated_cmd_response 0145  
                      i2u1040_40 005E                        i2u1041_48 0060  
                      i2u1043_40 0084                        i2u1044_40 0086  
                      i2u1045_40 009C                        i2u1046_40 009E  
                      i2u1047_40 00B4                        i2u1048_40 00B6  
               ?_caltime_to_RTCC 0076                  ___lldiv@divisor 0064  
           timer3_init@prescaler 0060                  ___lldiv@counter 006C  
                 ??_ringbuf_init 0020                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                        strcmp@r 0064       _USBStatusStageEnabledFlag1 00E4  
     _USBStatusStageEnabledFlag2 00E5                        _PORTAbits 000F80  
                      _UART_init 2FD8                        _UART_task 2FFA  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 2B9C  
                      _RTCC_task 2E6C        epoch_to_caltime@day_cache 012C  
         i2ringbuf_put@asciicode 000B               ST7032_cursor@F8640 01AE  
                   _get_quot_rem 1FAC                       _print_time 28AE  
                 _ringbuf_delete 2FB2        __size_of_epoch_to_caltime 01F2  
               __CFG_CPUDIV$OSC1 000000               _BothEP0OutUOWNsSet 0033  
            RTCC_from_caltime@tm 008F                __size_of_ADC_init 001C  
               ?_RTCC_from_epoch 008F                        _USTATcopy 003F  
__size_of_button_timer_interrupt 0282          timer1_init@clock_select 0020  
                    _CCP1CONbits 000FBA                      _CCP2CONbits 000FB4  
               __CFG_IOL1WAY$OFF 000000                      _CCP3CONbits 000F15  
                    _CCP4CONbits 000F12              __CFG_MSSP7B_EN$MSK7 000000  
                 ringbuf_init@rb 0060                   ringbuf_pop@ret 0020  
                  i2_ringbuf_pop 25A8                    i2_ringbuf_num 237E  
                  i2_ringbuf_put 24F2                      ?_light_task 0001  
              ?_terminal_at_hand 00B4                   __end_of___lmul 2B30  
                 __end_of___wmul 2F14                   __end_of_d_to_x 2F8C  
              __size_of_UART_ISR 004A           __end_of_ringbuf_delete 2FD8  
             ??_terminal_at_hand 0021                       ?_UART_init 0001  
                     ?_UART_task 0001                       ?_RTCC_init 0001  
              __size_of_OSC_init 000E                       ?_RTCC_task 0001  
               __CFG_DSWDTEN$OFF 000000                _USBBusIsSuspended 0133  
                 __end_of_x_to_d 3052            epoch_to_caltime@month 008A  
                 __end_of_strcmp 2D80              start_initialization 293A  
               month_length@year 006A                      __end_of_ISR 00FE  
              __size_of_PWM_init 00B8                      _cdc_data_rx 0200  
                    _cdc_data_tx 0240                    UART_ISR@ascii 0010  
               ?_RTCC_to_caltime 0061                  ___llmod@divisor 0064  
                ___llmod@counter 0020           _pBDTEntryEP0OutCurrent 002F  
            ringbuf_put_num@temp 0077                         ??___lmul 0021  
                 ?i2_ringbuf_pop 0009                   ?i2_ringbuf_num 0001  
                 ?i2_ringbuf_put 0009                         ??___wmul 0020  
                       ??_d_to_x 0021      __size_of_terminal_operation 0518  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK1 01AC  
       __size_of_ringbuf_put_num 0082         __size_of_ringbuf_put_str 0064  
         _button_timer_interrupt 1316                         ??_x_to_d 0020  
                ?_ringbuf_delete 0060                         ??_strcmp 0020  
           __end_of_month_length 1E02                   _RTCC_from_RTCC 306C  
         _USBActiveConfiguration 003E                      ?_print_time 0094  
                    __pbssCOMRAM 0021              RTCC_to_caltime@dumy 0063  
                  __pcstackBANK0 0060                    __pcstackBANK1 018A  
                  __pcstackBANK5 0500             __end_of_ringbuf_init 2DD4  
                   _isdigit$6298 0060                         ?_PWM_set 0075  
            __size_of_light_task 0218                      sprintf@flag 0090  
                 light_task@temp 008E                      sprintf@prec 0087  
                   _pBDTEntryOut 010A         __end_of_caltime_to_epoch 1316  
                millis_timer@cnt 012E                 ___lwdiv@dividend 0066  
                      __pintcode 0008                    __pmediumconst FCF8  
                       ?___awdiv 006D                         ?___awmod 0060  
                       ?___lldiv 0060                         ?___llmod 0060  
                       ?___lwdiv 0066                         ?___lwmod 006D  
         __end_of_RTCC_from_RTCC 3086                      ??_UART_init 0020  
     USBCBSendResume@delay_count 0126                      ??_UART_task 0020  
                    ??_RTCC_init 0021                      ??_RTCC_task 0021  
                      _main_init 26F6                         ?_isdigit 0001  
               _epoch_to_caltime 17B0             __CFG_RTCOSC$T1OSCREF 000000  
                       _I2C_busy 0131                         _ADC_flag 0130  
                       _ADC_init 301A                      _PADCFG1bits 000F3C  
            ringbuf_backspace@rb 0068                      _ep_data_out 011B  
               ___lwdiv@quotient 006B            terminal_at_hand@value 00BA  
                ST7032_task@wait 0124                         ?_sprintf 0071  
                      d_to_x@dec 0075                         _CTMUCONH 000FB3  
                       _CTMUCONL 000FB2                         _CTMUICON 000FB1  
       ringbuf_init@internal_buf 0062                   ___wmul@product 0064  
                       _LATBbits 000F8A                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                         _IPR5bits 000F99  
                       _PIE5bits 000F91              __size_of_print_time 008C  
                ??i2_ringbuf_pop 000B                  ??i2_ringbuf_num 0003  
                ??i2_ringbuf_put 000C                         _PIR1bits 000F9E  
                       _PIR2bits 000FA1                         i2u721_40 14F2  
                       _PIR5bits 000F98                         i2u722_40 1518  
     epoch_to_caltime@year_cache 0136                         i2u723_40 153E  
                       i2u724_40 1564                    ??_ringbuf_pop 006A  
                  ??_ringbuf_num 0062                    ??_ringbuf_put 006B  
                       _RCONbits 000FD0                         _UEP0bits 000F26  
     _USBDeferINDataStagePackets 00E2                         _UART_ISR 2E22  
          terminal_operation@op0 00C6            terminal_operation@op1 00C8  
          terminal_operation@op2 00CA            terminal_operation@op3 00CC  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                  ??_timer0_init 0020                    ??_timer1_init 0060  
          terminal_operation@str 018A                    ??_timer3_init 0020  
                       _SSP1STAT 000FC7                         _UCONbits 000F65  
                       _OSC_init 3086                  ?_RTCC_from_RTCC 0086  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
              ___wmul@multiplier 0060                 __CFG_SOSCSEL$LOW 000000  
                       _PWM_init 243A   button_timer_interrupt@sw_value 0003  
                     ?_main_init 0001                     _RemoteWakeup 0034  
              ??_ringbuf_put_num 0021                ??_ringbuf_put_str 0020  
                  ringbuf_pop@rb 0068                    ringbuf_num@rb 0060  
                  ringbuf_put@rb 0068                ___lmul@multiplier 006D  
                    _INTCON2bits 000FF1                        copy_data0 29AA  
           epoch_to_caltime@year 0089           __size_of_terminal_task 036A  
         __size_of_terminal_time 03AC                 __size_of_PWM_set 01A8  
                     _CCPR1Lbits 000FBB                       _CCPR2Lbits 000FB5  
                     _CCPR3Lbits 000F16               __end_of_device_dsc FDE4  
                     _CCPR4Lbits 000F13                         __Hrparam 0000  
           light_task@value_6007 008D                         __Lrparam 0000  
                       _SetupPkt 000D30                    _weekday_3char FDB6  
          __size_of_month_length 00D8               ringbuf_put_str@str 0071  
                   ??_light_task 0088         __size_of_caltime_to_RTCC 00D6  
               __size_of___awdiv 00BE                 __size_of___awmod 00A2  
               __size_of___lldiv 00BC                 __size_of___llmod 0094  
               __size_of___lwdiv 0078                 __size_of___lwmod 005C  
            __end_of_ringbuf_pop 2148              __end_of_ringbuf_num 1D2A  
            __end_of_ringbuf_put 1FAC                      _line_coding 0175  
            __end_of_timer0_init 2EDE            __size_of_ringbuf_init 0054  
            __end_of_timer1_init 2E22                       sprintf@len 008E  
            __end_of_timer3_init 2F64                       sprintf@val 008C  
               __size_of_isdigit 0028                  ___lwdiv@divisor 0068  
                ___lwdiv@counter 006A             timer0_init@prescaler 0060  
                       __ptext10 1B4A                         __ptext11 2F14  
                       __ptext20 2DD4                         __ptext12 29C0  
                       __ptext21 2EA8                         __ptext13 1ED8  
                       __ptext30 2148                         __ptext22 2D80  
                       __ptext14 2CCC                         __ptext31 243A  
                       __ptext23 2FD8                         __ptext15 2080  
                       __ptext40 2FFA                         __ptext32 3086  
                       __ptext24 2B9C                         __ptext16 2FB2  
                       __ptext41 1C3C                         __ptext33 301A  
                       __ptext25 3052                         __ptext17 2820  
                       __ptext42 2E6C                         __ptext34 1598  
                       __ptext26 17B0                         __ptext18 26F6  
                       __ptext51 1316                         __ptext43 306C  
                       __ptext35 278C                         __ptext27 1FAC  
                       __ptext19 2F3C                         __ptext52 2E22  
                       __ptext44 1088                         __ptext36 2206  
                       __ptext28 1E02                         __ptext53 24F2  
                       __ptext45 1D2A                         __ptext37 19A2  
                       __ptext29 2F64                         __ptext54 25A8  
                       __ptext46 2654                         __ptext38 2EDE  
                       __ptext55 237E                         __ptext47 2ABA  
                       __ptext39 2A42                         __ptext48 22C2  
                       __ptext49 3036                     _SSP1CON1bits 000FC6  
                   _SSP1CON2bits 000FC5                       PWM_init@PR 0020  
      __size_of_terminal_at_hand 0062                 __size_of_sprintf 045A  
           terminal_at_hand@hand 00B6               __end_of_light_task 17B0  
                  __size_of_atoi 00F2                    __size_of_main 006C  
                   _month_length 1D2A         __size_of_RTCC_from_epoch 001A  
                       _outPipes 00D6                 ??_ringbuf_delete 0020  
        ?_button_timer_interrupt 0001                         int$flags 0040  
                   _ringbuf_init 2D80                         atoi@sign 006A  
                      x_to_d@hex 0060                     _SSP1STATbits 000FC7  
                  _terminal_task 0D1E                    _terminal_time 0972  
      _USBDeferStatusStagePacket 0035                     ??_print_time 0021  
                 main_init@rxbuf 0400                   main_init@txbuf 0569  
                    ??_main_init 0021                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 006A  
                       isdigit@c 0061                 get_quot_rem@quot 0079  
      terminal_task@command_init 00E9                RTCC_to_caltime@tm 0061  
                       intlevel2 0000                        sprintf@ap 0088  
                      sprintf@cp 008A                        sprintf@sp 0071  
               ___lwmod@dividend 006D                 ___lldiv@dividend 0060  
                     _RCSTA1bits 000FAC              terminal_at_hand@max 00B9  
            terminal_at_hand@min 00B8                ?_caltime_to_epoch 0079  
              _ringbuf_backspace 2820         __end_of_epoch_to_caltime 19A2  
       __size_of_RTCC_to_caltime 00BC                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 1598       __end_of_terminal_operation 0518  
             __end_of_print_time 293A               ??_caltime_to_epoch 007B  
             ?_ringbuf_backspace 0068                      _ringbuf_pop 2080  
                    _ringbuf_num 1C3C                      _ringbuf_put 1ED8  
                    _timer0_init 2EA8                      _timer1_init 2DD4  
                    _timer3_init 2F3C                   ?_terminal_task 00D0  
                 ?_terminal_time 00BB              ??_ringbuf_backspace 006A  
                get_quot_rem@div 007B                  get_quot_rem@num 007D  
                     _RTCCFGbits 000F3F                         sprintf@c 0091  
                       sprintf@f 0073                         strcmp@s1 0060  
                       strcmp@s2 0062                       _PPSCONbits 000EBF  
               ___lldiv@quotient 0068                  ___lwmod@divisor 006F  
              caltime_to_RTCC@tm 0076                ??_caltime_to_RTCC 0021  
          _USBAlternateInterface 0188                  ___lwmod@counter 0020  
             terminal_at_hand@tx 00B4                  _endpoint_number 003C  
epoch_to_caltime@day_since_epoch 0085        __end_of_ringbuf_backspace 28AE  
   _USBStatusStageTimeoutCounter 0037                       _USB_CD_Ptr FD09  
               ??_RTCC_from_RTCC 0021  
