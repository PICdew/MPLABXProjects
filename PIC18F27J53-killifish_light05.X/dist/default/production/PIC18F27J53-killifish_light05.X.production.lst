

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Nov 11 15:20:49 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78                           	dabs	1,0xD00,48,_BDT
    79                           	dabs	1,0xD38,8,_CtrlTrfData
    80                           	dabs	1,0xD30,8,_SetupPkt
    81  0000                     
    82                           	psect	idataBANK1
    83  013084                     __pidataBANK1:
    84                           	opt stack 0
    85                           
    86                           ;initializer for I2C_LCD_SetCursor@F8620
    87  013084  00                 	db	0
    88  013085  40                 	db	64
    89                           
    90                           ;initializer for epoch_to_caltime@month_cache
    91  013086  01                 	db	1
    92                           
    93                           	psect	mediumconst
    94  00FCF8                     __pmediumconst:
    95                           	opt stack 0
    96  00FCF8  00                 	db	0
    97  00FCF9                     _dpowers:
    98                           	opt stack 0
    99  00FCF9  0001               	dw	1
   100  00FCFB  000A               	dw	10
   101  00FCFD  0064               	dw	100
   102  00FCFF  03E8               	dw	1000
   103  00FD01  2710               	dw	10000
   104  00FD03                     __end_of_dpowers:
   105                           	opt stack 0
   106  00FD03                     _USB_SD_Ptr:
   107                           	opt stack 0
   108  00FD03  E4                 	db	low _sd000
   109  00FD04  FD                 	db	high _sd000
   110  00FD05  4E                 	db	low _sd001
   111  00FD06  FD                 	db	high _sd001
   112  00FD07  82                 	db	low _sd002
   113  00FD08  FD                 	db	high _sd002
   114  00FD09                     __end_of_USB_SD_Ptr:
   115                           	opt stack 0
   116  00FD09                     _USB_CD_Ptr:
   117                           	opt stack 0
   118  00FD09  0B                 	db	low _configDescriptor1
   119  00FD0A  FD                 	db	high _configDescriptor1
   120  00FD0B                     __end_of_USB_CD_Ptr:
   121                           	opt stack 0
   122  00FD0B                     _configDescriptor1:
   123                           	opt stack 0
   124  00FD0B  09                 	db	9
   125  00FD0C  02                 	db	2
   126  00FD0D  43                 	db	67
   127  00FD0E  00                 	db	0
   128  00FD0F  02                 	db	2
   129  00FD10  01                 	db	1
   130  00FD11  00                 	db	0
   131  00FD12  C0                 	db	192
   132  00FD13  32                 	db	50
   133  00FD14  09                 	db	9
   134  00FD15  04                 	db	4
   135  00FD16  00                 	db	0
   136  00FD17  00                 	db	0
   137  00FD18  01                 	db	1
   138  00FD19  02                 	db	2
   139  00FD1A  02                 	db	2
   140  00FD1B  01                 	db	1
   141  00FD1C  00                 	db	0
   142  00FD1D  05                 	db	5
   143  00FD1E  24                 	db	36
   144  00FD1F  00                 	db	0
   145  00FD20  10                 	db	16
   146  00FD21  01                 	db	1
   147  00FD22  04                 	db	4
   148  00FD23  24                 	db	36
   149  00FD24  02                 	db	2
   150  00FD25  02                 	db	2
   151  00FD26  05                 	db	5
   152  00FD27  24                 	db	36
   153  00FD28  06                 	db	6
   154  00FD29  00                 	db	0
   155  00FD2A  01                 	db	1
   156  00FD2B  05                 	db	5
   157  00FD2C  24                 	db	36
   158  00FD2D  01                 	db	1
   159  00FD2E  00                 	db	0
   160  00FD2F  01                 	db	1
   161  00FD30  07                 	db	7
   162  00FD31  05                 	db	5
   163  00FD32  81                 	db	129
   164  00FD33  03                 	db	3
   165  00FD34  08                 	db	8
   166  00FD35  00                 	db	0
   167  00FD36  02                 	db	2
   168  00FD37  09                 	db	9
   169  00FD38  04                 	db	4
   170  00FD39  01                 	db	1
   171  00FD3A  00                 	db	0
   172  00FD3B  02                 	db	2
   173  00FD3C  0A                 	db	10
   174  00FD3D  00                 	db	0
   175  00FD3E  00                 	db	0
   176  00FD3F  00                 	db	0
   177  00FD40  07                 	db	7
   178  00FD41  05                 	db	5
   179  00FD42  02                 	db	2
   180  00FD43  02                 	db	2
   181  00FD44  40                 	db	64
   182  00FD45  00                 	db	0
   183  00FD46  00                 	db	0
   184  00FD47  07                 	db	7
   185  00FD48  05                 	db	5
   186  00FD49  82                 	db	130
   187  00FD4A  02                 	db	2
   188  00FD4B  40                 	db	64
   189  00FD4C  00                 	db	0
   190  00FD4D  00                 	db	0
   191  00FD4E                     __end_of_configDescriptor1:
   192                           	opt stack 0
   193  00FD4E                     _sd001:
   194                           	opt stack 0
   195  00FD4E  34                 	db	52
   196  00FD4F  03                 	db	3
   197  00FD50  004D               	dw	77
   198  00FD52  0069               	dw	105
   199  00FD54  0063               	dw	99
   200  00FD56  0072               	dw	114
   201  00FD58  006F               	dw	111
   202  00FD5A  0063               	dw	99
   203  00FD5C  0068               	dw	104
   204  00FD5E  0069               	dw	105
   205  00FD60  0070               	dw	112
   206  00FD62  0020               	dw	32
   207  00FD64  0054               	dw	84
   208  00FD66  0065               	dw	101
   209  00FD68  0063               	dw	99
   210  00FD6A  0068               	dw	104
   211  00FD6C  006E               	dw	110
   212  00FD6E  006F               	dw	111
   213  00FD70  006C               	dw	108
   214  00FD72  006F               	dw	111
   215  00FD74  0067               	dw	103
   216  00FD76  0079               	dw	121
   217  00FD78  0020               	dw	32
   218  00FD7A  0049               	dw	73
   219  00FD7C  006E               	dw	110
   220  00FD7E  0063               	dw	99
   221  00FD80  002E               	dw	46
   222  00FD82                     __end_of_sd001:
   223                           	opt stack 0
   224  00FD82                     _sd002:
   225                           	opt stack 0
   226  00FD82  34                 	db	52
   227  00FD83  03                 	db	3
   228  00FD84  0043               	dw	67
   229  00FD86  0044               	dw	68
   230  00FD88  0043               	dw	67
   231  00FD8A  0020               	dw	32
   232  00FD8C  0052               	dw	82
   233  00FD8E  0053               	dw	83
   234  00FD90  002D               	dw	45
   235  00FD92  0032               	dw	50
   236  00FD94  0033               	dw	51
   237  00FD96  0032               	dw	50
   238  00FD98  0020               	dw	32
   239  00FD9A  0045               	dw	69
   240  00FD9C  006D               	dw	109
   241  00FD9E  0075               	dw	117
   242  00FDA0  006C               	dw	108
   243  00FDA2  0061               	dw	97
   244  00FDA4  0074               	dw	116
   245  00FDA6  0069               	dw	105
   246  00FDA8  006F               	dw	111
   247  00FDAA  006E               	dw	110
   248  00FDAC  0020               	dw	32
   249  00FDAE  0044               	dw	68
   250  00FDB0  0065               	dw	101
   251  00FDB2  006D               	dw	109
   252  00FDB4  006F               	dw	111
   253  00FDB6                     __end_of_sd002:
   254                           	opt stack 0
   255  00FDB6                     _weekday_3char:
   256                           	opt stack 0
   257  00FDB6  53                 	db	83
   258  00FDB7  55                 	db	85
   259  00FDB8  4E                 	db	78
   260  00FDB9  00                 	db	0
   261  00FDBA  4D                 	db	77
   262  00FDBB  4F                 	db	79
   263  00FDBC  4E                 	db	78
   264  00FDBD  00                 	db	0
   265  00FDBE  54                 	db	84
   266  00FDBF  55                 	db	85
   267  00FDC0  45                 	db	69
   268  00FDC1  00                 	db	0
   269  00FDC2  57                 	db	87
   270  00FDC3  45                 	db	69
   271  00FDC4  44                 	db	68
   272  00FDC5  00                 	db	0
   273  00FDC6  54                 	db	84
   274  00FDC7  48                 	db	72
   275  00FDC8  55                 	db	85
   276  00FDC9  00                 	db	0
   277  00FDCA  46                 	db	70
   278  00FDCB  52                 	db	82
   279  00FDCC  49                 	db	73
   280  00FDCD  00                 	db	0
   281  00FDCE  53                 	db	83
   282  00FDCF  41                 	db	65
   283  00FDD0  54                 	db	84
   284  00FDD1  00                 	db	0
   285  00FDD2                     __end_of_weekday_3char:
   286                           	opt stack 0
   287  00FDD2                     _device_dsc:
   288                           	opt stack 0
   289  00FDD2  12                 	db	18
   290  00FDD3  01                 	db	1
   291  00FDD4  0200               	dw	512
   292  00FDD6  02                 	db	2
   293  00FDD7  00                 	db	0
   294  00FDD8  00                 	db	0
   295  00FDD9  08                 	db	8
   296  00FDDA  04D8               	dw	1240
   297  00FDDC  000A               	dw	10
   298  00FDDE  0100               	dw	256
   299  00FDE0  01                 	db	1
   300  00FDE1  02                 	db	2
   301  00FDE2  00                 	db	0
   302  00FDE3  01                 	db	1
   303  00FDE4                     __end_of_device_dsc:
   304                           	opt stack 0
   305  00FDE4                     _sd000:
   306                           	opt stack 0
   307  00FDE4  04                 	db	4
   308  00FDE5  03                 	db	3
   309  00FDE6  0409               	dw	1033
   310  00FDE8                     __end_of_sd000:
   311                           	opt stack 0
   312  0000                     _PPSCONbits	set	3775
   313  0000                     _RPOR3	set	3779
   314  0000                     _RPOR4	set	3780
   315  0000                     _RPOR5	set	3781
   316  0000                     _ANCON0	set	3912
   317  0000                     _ANCON1	set	3913
   318  0000                     _CCP3CONbits	set	3861
   319  0000                     _CCP4CONbits	set	3858
   320  0000                     _CCPR3L	set	3862
   321  0000                     _CCPR3Lbits	set	3862
   322  0000                     _CCPR4L	set	3859
   323  0000                     _CCPR4Lbits	set	3859
   324  0000                     _CCPTMRS0bits	set	3922
   325  0000                     _CCPTMRS1bits	set	3921
   326  0000                     _PADCFG1bits	set	3900
   327  0000                     _RTCCAL	set	3902
   328  0000                     _RTCCFGbits	set	3903
   329  0000                     _RTCVALH	set	3899
   330  0000                     _RTCVALL	set	3898
   331  0000                     _T5CONbits	set	3874
   332  0000                     _UADDR	set	3896
   333  0000                     _UCFG	set	3897
   334  0000                     _UEIE	set	3895
   335  0000                     _UEP0bits	set	3878
   336  0000                     _UIE	set	3894
   337  0000                     _UIEbits	set	3894
   338  0000                     _UEP0	set	3878
   339  0000                     _UEP1	set	3879
   340  0000                     _ADRES	set	4035
   341  0000                     _ADCON0bits	set	4034
   342  0000                     _ADCON1bits	set	4033
   343  0000                     _BAUDCON1bits	set	3966
   344  0000                     _CCP1CONbits	set	4026
   345  0000                     _CCP2CONbits	set	4020
   346  0000                     _CCPR1L	set	4027
   347  0000                     _CCPR1Lbits	set	4027
   348  0000                     _CCPR2L	set	4021
   349  0000                     _CCPR2Lbits	set	4021
   350  0000                     _CTMUCONH	set	4019
   351  0000                     _CTMUCONHbits	set	4019
   352  0000                     _CTMUCONL	set	4018
   353  0000                     _CTMUCONLbits	set	4018
   354  0000                     _CTMUICON	set	4017
   355  0000                     _EECON2	set	4007
   356  0000                     _INTCON2bits	set	4081
   357  0000                     _INTCONbits	set	4082
   358  0000                     _IPR1bits	set	3999
   359  0000                     _IPR2bits	set	4002
   360  0000                     _IPR5bits	set	3993
   361  0000                     _LATBbits	set	3978
   362  0000                     _OSCCONbits	set	4051
   363  0000                     _OSCTUNEbits	set	3995
   364  0000                     _PIE1bits	set	3997
   365  0000                     _PIE2bits	set	4000
   366  0000                     _PIE5bits	set	3985
   367  0000                     _PIR1bits	set	3998
   368  0000                     _PIR2bits	set	4001
   369  0000                     _PIR5bits	set	3992
   370  0000                     _PORTAbits	set	3968
   371  0000                     _PR2	set	4043
   372  0000                     _RCONbits	set	4048
   373  0000                     _RCREG1	set	4015
   374  0000                     _RCSTA1bits	set	4012
   375  0000                     _SPBRG1	set	4016
   376  0000                     _SPBRGH1	set	3967
   377  0000                     _SSP1ADD	set	4040
   378  0000                     _SSP1BUF	set	4041
   379  0000                     _SSP1CON1	set	4038
   380  0000                     _SSP1CON1bits	set	4038
   381  0000                     _SSP1CON2	set	4037
   382  0000                     _SSP1CON2bits	set	4037
   383  0000                     _SSP1STAT	set	4039
   384  0000                     _SSP1STATbits	set	4039
   385  0000                     _T0CONbits	set	4053
   386  0000                     _T1CONbits	set	4045
   387  0000                     _T2CONbits	set	4042
   388  0000                     _T3CONbits	set	3961
   389  0000                     _TMR1H	set	4047
   390  0000                     _TRISA	set	3986
   391  0000                     _TRISB	set	3987
   392  0000                     _TRISC	set	3988
   393  0000                     _TXREG1	set	4014
   394  0000                     _TXSTA1bits	set	4013
   395  0000                     _UCON	set	3941
   396  0000                     _UCONbits	set	3941
   397  0000                     _UEIR	set	3939
   398  0000                     _UIR	set	3938
   399  0000                     _UIRbits	set	3938
   400  0000                     _USTAT	set	3940
   401  0000                     _BCL1IF	set	32011
   402  0000                     _LATB2	set	31826
   403  0000                     _SSP1IF	set	31987
   404  00FDE8                     STR_43:
   405  00FDE8  09                 	db	9
   406  00FDE9  2A                 	db	42
   407  00FDEA  2A                 	db	42
   408  00FDEB  2A                 	db	42
   409  00FDEC  2A                 	db	42
   410  00FDED  2A                 	db	42
   411  00FDEE  2A                 	db	42
   412  00FDEF  2A                 	db	42
   413  00FDF0  2A                 	db	42
   414  00FDF1  2A                 	db	42
   415  00FDF2  2A                 	db	42
   416  00FDF3  2A                 	db	42
   417  00FDF4  2A                 	db	42
   418  00FDF5  2A                 	db	42
   419  00FDF6  2A                 	db	42
   420  00FDF7  2A                 	db	42
   421  00FDF8  2A                 	db	42
   422  00FDF9  2A                 	db	42
   423  00FDFA  2A                 	db	42
   424  00FDFB  2A                 	db	42
   425  00FDFC  2A                 	db	42
   426  00FDFD  2A                 	db	42
   427  00FDFE  2A                 	db	42
   428  00FDFF  2A                 	db	42
   429  00FE00  2A                 	db	42
   430  00FE01  2A                 	db	42
   431  00FE02  2A                 	db	42
   432  00FE03  0A                 	db	10
   433  00FE04  09                 	db	9
   434  00FE05  2A                 	db	42
   435  00FE06  2A                 	db	42
   436  00FE07  2A                 	db	42
   437  00FE08  2A                 	db	42
   438  00FE09  20                 	db	32
   439  00FE0A  4B                 	db	75	;'K'
   440  00FE0B  69                 	db	105	;'i'
   441  00FE0C  6C                 	db	108	;'l'
   442  00FE0D  6C                 	db	108	;'l'
   443  00FE0E  69                 	db	105	;'i'
   444  00FE0F  66                 	db	102	;'f'
   445  00FE10  69                 	db	105	;'i'
   446  00FE11  73                 	db	115	;'s'
   447  00FE12  68                 	db	104	;'h'
   448  00FE13  20                 	db	32
   449  00FE14  4C                 	db	76	;'L'
   450  00FE15  69                 	db	105	;'i'
   451  00FE16  67                 	db	103	;'g'
   452  00FE17  68                 	db	104	;'h'
   453  00FE18  74                 	db	116	;'t'
   454  00FE19  20                 	db	32
   455  00FE1A  20                 	db	32
   456  00FE1B  2A                 	db	42
   457  00FE1C  2A                 	db	42
   458  00FE1D  2A                 	db	42
   459  00FE1E  2A                 	db	42
   460  00FE1F  0A                 	db	10
   461  00FE20  09                 	db	9
   462  00FE21  2A                 	db	42
   463  00FE22  2A                 	db	42
   464  00FE23  2A                 	db	42
   465  00FE24  2A                 	db	42
   466  00FE25  20                 	db	32
   467  00FE26  4D                 	db	77	;'M'
   468  00FE27  61                 	db	97	;'a'
   469  00FE28  64                 	db	100	;'d'
   470  00FE29  65                 	db	101	;'e'
   471  00FE2A  20                 	db	32
   472  00FE2B  62                 	db	98	;'b'
   473  00FE2C  79                 	db	121	;'y'
   474  00FE2D  20                 	db	32
   475  00FE2E  40                 	db	64	;'@'
   476  00FE2F  52                 	db	82	;'R'
   477  00FE30  79                 	db	121	;'y'
   478  00FE31  6F                 	db	111	;'o'
   479  00FE32  6B                 	db	107	;'k'
   480  00FE33  65                 	db	101	;'e'
   481  00FE34  72                 	db	114	;'r'
   482  00FE35  69                 	db	105	;'i'
   483  00FE36  20                 	db	32
   484  00FE37  2A                 	db	42
   485  00FE38  2A                 	db	42
   486  00FE39  2A                 	db	42
   487  00FE3A  2A                 	db	42
   488  00FE3B  0A                 	db	10
   489  00FE3C  09                 	db	9
   490  00FE3D  2A                 	db	42
   491  00FE3E  2A                 	db	42
   492  00FE3F  2A                 	db	42
   493  00FE40  2A                 	db	42
   494  00FE41  2A                 	db	42
   495  00FE42  2A                 	db	42
   496  00FE43  2A                 	db	42
   497  00FE44  2A                 	db	42
   498  00FE45  2A                 	db	42
   499  00FE46  2A                 	db	42
   500  00FE47  2A                 	db	42
   501  00FE48  2A                 	db	42
   502  00FE49  2A                 	db	42
   503  00FE4A  2A                 	db	42
   504  00FE4B  2A                 	db	42
   505  00FE4C  2A                 	db	42
   506  00FE4D  2A                 	db	42
   507  00FE4E  2A                 	db	42
   508  00FE4F  2A                 	db	42
   509  00FE50  2A                 	db	42
   510  00FE51  2A                 	db	42
   511  00FE52  2A                 	db	42
   512  00FE53  2A                 	db	42
   513  00FE54  2A                 	db	42
   514  00FE55  2A                 	db	42
   515  00FE56  2A                 	db	42
   516  00FE57  0A                 	db	10
   517  00FE58  0A                 	db	10
   518  00FE59  09                 	db	9
   519  00FE5A  63                 	db	99	;'c'
   520  00FE5B  6F                 	db	111	;'o'
   521  00FE5C  6D                 	db	109	;'m'
   522  00FE5D  6D                 	db	109	;'m'
   523  00FE5E  61                 	db	97	;'a'
   524  00FE5F  6E                 	db	110	;'n'
   525  00FE60  64                 	db	100	;'d'
   526  00FE61  20                 	db	32
   527  00FE62  09                 	db	9
   528  00FE63  6F                 	db	111	;'o'
   529  00FE64  70                 	db	112	;'p'
   530  00FE65  65                 	db	101	;'e'
   531  00FE66  6C                 	db	108	;'l'
   532  00FE67  61                 	db	97	;'a'
   533  00FE68  6E                 	db	110	;'n'
   534  00FE69  64                 	db	100	;'d'
   535  00FE6A  31                 	db	49	;'1'
   536  00FE6B  09                 	db	9
   537  00FE6C  6F                 	db	111	;'o'
   538  00FE6D  70                 	db	112	;'p'
   539  00FE6E  65                 	db	101	;'e'
   540  00FE6F  6C                 	db	108	;'l'
   541  00FE70  61                 	db	97	;'a'
   542  00FE71  6E                 	db	110	;'n'
   543  00FE72  64                 	db	100	;'d'
   544  00FE73  32                 	db	50	;'2'
   545  00FE74  0A                 	db	10
   546  00FE75  0A                 	db	10
   547  00FE76  09                 	db	9
   548  00FE77  70                 	db	112	;'p'
   549  00FE78  72                 	db	114	;'r'
   550  00FE79  69                 	db	105	;'i'
   551  00FE7A  6E                 	db	110	;'n'
   552  00FE7B  74                 	db	116	;'t'
   553  00FE7C  5F                 	db	95	;'_'
   554  00FE7D  74                 	db	116	;'t'
   555  00FE7E  69                 	db	105	;'i'
   556  00FE7F  6D                 	db	109	;'m'
   557  00FE80  65                 	db	101	;'e'
   558  00FE81  28                 	db	40
   559  00FE82  74                 	db	116	;'t'
   560  00FE83  29                 	db	41
   561  00FE84  0A                 	db	10
   562  00FE85  09                 	db	9
   563  00FE86  61                 	db	97	;'a'
   564  00FE87  64                 	db	100	;'d'
   565  00FE88  6A                 	db	106	;'j'
   566  00FE89  75                 	db	117	;'u'
   567  00FE8A  73                 	db	115	;'s'
   568  00FE8B  74                 	db	116	;'t'
   569  00FE8C  5F                 	db	95	;'_'
   570  00FE8D  74                 	db	116	;'t'
   571  00FE8E  69                 	db	105	;'i'
   572  00FE8F  6D                 	db	109	;'m'
   573  00FE90  65                 	db	101	;'e'
   574  00FE91  28                 	db	40
   575  00FE92  61                 	db	97	;'a'
   576  00FE93  74                 	db	116	;'t'
   577  00FE94  29                 	db	41
   578  00FE95  20                 	db	32
   579  00FE96  5B                 	db	91	;'['
   580  00FE97  68                 	db	104	;'h'
   581  00FE98  61                 	db	97	;'a'
   582  00FE99  6E                 	db	110	;'n'
   583  00FE9A  64                 	db	100	;'d'
   584  00FE9B  3A                 	db	58	;':'
   585  00FE9C  79                 	db	121	;'y'
   586  00FE9D  2C                 	db	44
   587  00FE9E  4D                 	db	77	;'M'
   588  00FE9F  2C                 	db	44
   589  00FEA0  64                 	db	100	;'d'
   590  00FEA1  2C                 	db	44
   591  00FEA2  68                 	db	104	;'h'
   592  00FEA3  2C                 	db	44
   593  00FEA4  6D                 	db	109	;'m'
   594  00FEA5  2C                 	db	44
   595  00FEA6  73                 	db	115	;'s'
   596  00FEA7  5D                 	db	93	;']'
   597  00FEA8  20                 	db	32
   598  00FEA9  5B                 	db	91	;'['
   599  00FEAA  76                 	db	118	;'v'
   600  00FEAB  61                 	db	97	;'a'
   601  00FEAC  6C                 	db	108	;'l'
   602  00FEAD  75                 	db	117	;'u'
   603  00FEAE  65                 	db	101	;'e'
   604  00FEAF  28                 	db	40
   605  00FEB0  64                 	db	100	;'d'
   606  00FEB1  65                 	db	101	;'e'
   607  00FEB2  63                 	db	99	;'c'
   608  00FEB3  69                 	db	105	;'i'
   609  00FEB4  6D                 	db	109	;'m'
   610  00FEB5  61                 	db	97	;'a'
   611  00FEB6  6C                 	db	108	;'l'
   612  00FEB7  29                 	db	41
   613  00FEB8  5D                 	db	93	;']'
   614  00FEB9  0A                 	db	10
   615  00FEBA  09                 	db	9
   616  00FEBB  70                 	db	112	;'p'
   617  00FEBC  77                 	db	119	;'w'
   618  00FEBD  6D                 	db	109	;'m'
   619  00FEBE  20                 	db	32
   620  00FEBF  5B                 	db	91	;'['
   621  00FEC0  63                 	db	99	;'c'
   622  00FEC1  6F                 	db	111	;'o'
   623  00FEC2  6C                 	db	108	;'l'
   624  00FEC3  6F                 	db	111	;'o'
   625  00FEC4  72                 	db	114	;'r'
   626  00FEC5  3A                 	db	58	;':'
   627  00FEC6  52                 	db	82	;'R'
   628  00FEC7  2C                 	db	44
   629  00FEC8  47                 	db	71	;'G'
   630  00FEC9  2C                 	db	44
   631  00FECA  42                 	db	66	;'B'
   632  00FECB  2C                 	db	44
   633  00FECC  57                 	db	87	;'W'
   634  00FECD  5D                 	db	93	;']'
   635  00FECE  20                 	db	32
   636  00FECF  5B                 	db	91	;'['
   637  00FED0  76                 	db	118	;'v'
   638  00FED1  61                 	db	97	;'a'
   639  00FED2  6C                 	db	108	;'l'
   640  00FED3  75                 	db	117	;'u'
   641  00FED4  65                 	db	101	;'e'
   642  00FED5  28                 	db	40
   643  00FED6  25                 	db	37
   644  00FED7  29                 	db	41
   645  00FED8  3A                 	db	58	;':'
   646  00FED9  30                 	db	48	;'0'
   647  00FEDA  7E                 	db	126
   648  00FEDB  31                 	db	49	;'1'
   649  00FEDC  30                 	db	48	;'0'
   650  00FEDD  30                 	db	48	;'0'
   651  00FEDE  5D                 	db	93	;']'
   652  00FEDF  0A                 	db	10
   653  00FEE0  09                 	db	9
   654  00FEE1  70                 	db	112	;'p'
   655  00FEE2  77                 	db	119	;'w'
   656  00FEE3  6D                 	db	109	;'m'
   657  00FEE4  20                 	db	32
   658  00FEE5  63                 	db	99	;'c'
   659  00FEE6  6C                 	db	108	;'l'
   660  00FEE7  65                 	db	101	;'e'
   661  00FEE8  61                 	db	97	;'a'
   662  00FEE9  72                 	db	114	;'r'
   663  00FEEA  0A                 	db	10
   664  00FEEB  09                 	db	9
   665  00FEEC  73                 	db	115	;'s'
   666  00FEED  65                 	db	101	;'e'
   667  00FEEE  74                 	db	116	;'t'
   668  00FEEF  20                 	db	32
   669  00FEF0  74                 	db	116	;'t'
   670  00FEF1  69                 	db	105	;'i'
   671  00FEF2  6D                 	db	109	;'m'
   672  00FEF3  65                 	db	101	;'e'
   673  00FEF4  5F                 	db	95	;'_'
   674  00FEF5  73                 	db	115	;'s'
   675  00FEF6  79                 	db	121	;'y'
   676  00FEF7  6E                 	db	110	;'n'
   677  00FEF8  63                 	db	99	;'c'
   678  00FEF9  5F                 	db	95	;'_'
   679  00FEFA  6D                 	db	109	;'m'
   680  00FEFB  6F                 	db	111	;'o'
   681  00FEFC  64                 	db	100	;'d'
   682  00FEFD  65                 	db	101	;'e'
   683  00FEFE  28                 	db	40
   684  00FEFF  73                 	db	115	;'s'
   685  00FF00  79                 	db	121	;'y'
   686  00FF01  6E                 	db	110	;'n'
   687  00FF02  63                 	db	99	;'c'
   688  00FF03  29                 	db	41
   689  00FF04  0A                 	db	10
   690  00FF05  09                 	db	9
   691  00FF06  73                 	db	115	;'s'
   692  00FF07  65                 	db	101	;'e'
   693  00FF08  74                 	db	116	;'t'
   694  00FF09  20                 	db	32
   695  00FF0A  41                 	db	65	;'A'
   696  00FF0B  44                 	db	68	;'D'
   697  00FF0C  43                 	db	67	;'C'
   698  00FF0D  5F                 	db	95	;'_'
   699  00FF0E  6D                 	db	109	;'m'
   700  00FF0F  6F                 	db	111	;'o'
   701  00FF10  64                 	db	100	;'d'
   702  00FF11  65                 	db	101	;'e'
   703  00FF12  28                 	db	40
   704  00FF13  61                 	db	97	;'a'
   705  00FF14  64                 	db	100	;'d'
   706  00FF15  63                 	db	99	;'c'
   707  00FF16  29                 	db	41
   708  00FF17  0A                 	db	10
   709  00FF18  09                 	db	9
   710  00FF19  52                 	db	82	;'R'
   711  00FF1A  45                 	db	69	;'E'
   712  00FF1B  53                 	db	83	;'S'
   713  00FF1C  45                 	db	69	;'E'
   714  00FF1D  54                 	db	84	;'T'
   715  00FF1E  28                 	db	40
   716  00FF1F  29                 	db	41
   717  00FF20  3B                 	db	59	;';'
   718  00FF21  0A                 	db	10
   719  00FF22  00                 	db	0
   720  00FF23                     STR_23:
   721  00FF23  09                 	db	9
   722  00FF24  32                 	db	50	;'2'
   723  00FF25  30                 	db	48	;'0'
   724  00FF26  25                 	db	37
   725  00FF27  30                 	db	48	;'0'
   726  00FF28  32                 	db	50	;'2'
   727  00FF29  64                 	db	100	;'d'
   728  00FF2A  2F                 	db	47
   729  00FF2B  25                 	db	37
   730  00FF2C  30                 	db	48	;'0'
   731  00FF2D  32                 	db	50	;'2'
   732  00FF2E  64                 	db	100	;'d'
   733  00FF2F  2F                 	db	47
   734  00FF30  25                 	db	37
   735  00FF31  30                 	db	48	;'0'
   736  00FF32  32                 	db	50	;'2'
   737  00FF33  64                 	db	100	;'d'
   738  00FF34  28                 	db	40
   739  00FF35  25                 	db	37
   740  00FF36  73                 	db	115	;'s'
   741  00FF37  29                 	db	41
   742  00FF38  25                 	db	37
   743  00FF39  30                 	db	48	;'0'
   744  00FF3A  32                 	db	50	;'2'
   745  00FF3B  64                 	db	100	;'d'
   746  00FF3C  3A                 	db	58	;':'
   747  00FF3D  25                 	db	37
   748  00FF3E  30                 	db	48	;'0'
   749  00FF3F  32                 	db	50	;'2'
   750  00FF40  64                 	db	100	;'d'
   751  00FF41  2D                 	db	45
   752  00FF42  25                 	db	37
   753  00FF43  30                 	db	48	;'0'
   754  00FF44  32                 	db	50	;'2'
   755  00FF45  64                 	db	100	;'d'
   756  00FF46  0A                 	db	10
   757  00FF47  00                 	db	0
   758  00FF48                     STR_46:
   759  00FF48  57                 	db	87	;'W'
   760  00FF49  52                 	db	82	;'R'
   761  00FF4A  45                 	db	69	;'E'
   762  00FF4B  4E                 	db	78	;'N'
   763  00FF4C  3D                 	db	61	;'='
   764  00FF4D  25                 	db	37
   765  00FF4E  64                 	db	100	;'d'
   766  00FF4F  2C                 	db	44
   767  00FF50  45                 	db	69	;'E'
   768  00FF51  4E                 	db	78	;'N'
   769  00FF52  3D                 	db	61	;'='
   770  00FF53  25                 	db	37
   771  00FF54  64                 	db	100	;'d'
   772  00FF55  0A                 	db	10
   773  00FF56  00                 	db	0
   774  00FF57                     STR_28:
   775  00FF57  61                 	db	97	;'a'
   776  00FF58  64                 	db	100	;'d'
   777  00FF59  6A                 	db	106	;'j'
   778  00FF5A  75                 	db	117	;'u'
   779  00FF5B  73                 	db	115	;'s'
   780  00FF5C  74                 	db	116	;'t'
   781  00FF5D  5F                 	db	95	;'_'
   782  00FF5E  74                 	db	116	;'t'
   783  00FF5F  69                 	db	105	;'i'
   784  00FF60  6D                 	db	109	;'m'
   785  00FF61  65                 	db	101	;'e'
   786  00FF62  00                 	db	0
   787  00FF63                     STR_25:
   788  00FF63  70                 	db	112	;'p'
   789  00FF64  72                 	db	114	;'r'
   790  00FF65  69                 	db	105	;'i'
   791  00FF66  6E                 	db	110	;'n'
   792  00FF67  74                 	db	116	;'t'
   793  00FF68  5F                 	db	95	;'_'
   794  00FF69  74                 	db	116	;'t'
   795  00FF6A  69                 	db	105	;'i'
   796  00FF6B  6D                 	db	109	;'m'
   797  00FF6C  65                 	db	101	;'e'
   798  00FF6D  00                 	db	0
   799  00FF6E                     STR_44:
   800  00FF6E  52                 	db	82	;'R'
   801  00FF6F  45                 	db	69	;'E'
   802  00FF70  53                 	db	83	;'S'
   803  00FF71  45                 	db	69	;'E'
   804  00FF72  54                 	db	84	;'T'
   805  00FF73  28                 	db	40
   806  00FF74  29                 	db	41
   807  00FF75  3B                 	db	59	;';'
   808  00FF76  00                 	db	0
   809  00FF77                     STR_15:
   810  00FF77  20                 	db	32
   811  00FF78  20                 	db	32
   812  00FF79  20                 	db	32
   813  00FF7A  20                 	db	32
   814  00FF7B  20                 	db	32
   815  00FF7C  20                 	db	32
   816  00FF7D  20                 	db	32
   817  00FF7E  20                 	db	32
   818  00FF7F  00                 	db	0
   819  00FF80                     STR_24:
   820  00FF80  09                 	db	9
   821  00FF81  65                 	db	101	;'e'
   822  00FF82  72                 	db	114	;'r'
   823  00FF83  72                 	db	114	;'r'
   824  00FF84  6F                 	db	111	;'o'
   825  00FF85  72                 	db	114	;'r'
   826  00FF86  0A                 	db	10
   827  00FF87  00                 	db	0
   828  00FF88                     STR_62:
   829  00FF88  28                 	db	40
   830  00FF89  6E                 	db	110	;'n'
   831  00FF8A  75                 	db	117	;'u'
   832  00FF8B  6C                 	db	108	;'l'
   833  00FF8C  6C                 	db	108	;'l'
   834  00FF8D  29                 	db	41
   835  00FF8E  00                 	db	0
   836  00FF8F                     STR_40:
   837  00FF8F  73                 	db	115	;'s'
   838  00FF90  65                 	db	101	;'e'
   839  00FF91  63                 	db	99	;'c'
   840  00FF92  6F                 	db	111	;'o'
   841  00FF93  6E                 	db	110	;'n'
   842  00FF94  64                 	db	100	;'d'
   843  00FF95  00                 	db	0
   844  00FF96                     STR_38:
   845  00FF96  6D                 	db	109	;'m'
   846  00FF97  69                 	db	105	;'i'
   847  00FF98  6E                 	db	110	;'n'
   848  00FF99  75                 	db	117	;'u'
   849  00FF9A  74                 	db	116	;'t'
   850  00FF9B  65                 	db	101	;'e'
   851  00FF9C  00                 	db	0
   852  00FF9D                     STR_61:
   853  00FF9D  63                 	db	99	;'c'
   854  00FF9E  6C                 	db	108	;'l'
   855  00FF9F  65                 	db	101	;'e'
   856  00FFA0  61                 	db	97	;'a'
   857  00FFA1  72                 	db	114	;'r'
   858  00FFA2  00                 	db	0
   859  00FFA3                     STR_32:
   860  00FFA3  6D                 	db	109	;'m'
   861  00FFA4  6F                 	db	111	;'o'
   862  00FFA5  6E                 	db	110	;'n'
   863  00FFA6  74                 	db	116	;'t'
   864  00FFA7  68                 	db	104	;'h'
   865  00FFA8  00                 	db	0
   866  00FFA9                     STR_48:
   867  00FFA9  73                 	db	115	;'s'
   868  00FFAA  79                 	db	121	;'y'
   869  00FFAB  6E                 	db	110	;'n'
   870  00FFAC  63                 	db	99	;'c'
   871  00FFAD  00                 	db	0
   872  00FFAE                     STR_41:
   873  00FFAE  68                 	db	104	;'h'
   874  00FFAF  65                 	db	101	;'e'
   875  00FFB0  6C                 	db	108	;'l'
   876  00FFB1  70                 	db	112	;'p'
   877  00FFB2  00                 	db	0
   878  00FFB3                     STR_30:
   879  00FFB3  79                 	db	121	;'y'
   880  00FFB4  65                 	db	101	;'e'
   881  00FFB5  61                 	db	97	;'a'
   882  00FFB6  72                 	db	114	;'r'
   883  00FFB7  00                 	db	0
   884  00FFB8                     STR_36:
   885  00FFB8  68                 	db	104	;'h'
   886  00FFB9  6F                 	db	111	;'o'
   887  00FFBA  75                 	db	117	;'u'
   888  00FFBB  72                 	db	114	;'r'
   889  00FFBC  00                 	db	0
   890  00FFBD                     STR_1:
   891  00FFBD  25                 	db	37
   892  00FFBE  30                 	db	48	;'0'
   893  00FFBF  32                 	db	50	;'2'
   894  00FFC0  64                 	db	100	;'d'
   895  00FFC1  00                 	db	0
   896  00FFC2                     STR_50:
   897  00FFC2  41                 	db	65	;'A'
   898  00FFC3  44                 	db	68	;'D'
   899  00FFC4  43                 	db	67	;'C'
   900  00FFC5  00                 	db	0
   901  00FFC6                     STR_52:
   902  00FFC6  50                 	db	80	;'P'
   903  00FFC7  57                 	db	87	;'W'
   904  00FFC8  4D                 	db	77	;'M'
   905  00FFC9  00                 	db	0
   906  00FFCA                     STR_49:
   907  00FFCA  61                 	db	97	;'a'
   908  00FFCB  64                 	db	100	;'d'
   909  00FFCC  63                 	db	99	;'c'
   910  00FFCD  00                 	db	0
   911  00FFCE                     STR_51:
   912  00FFCE  70                 	db	112	;'p'
   913  00FFCF  77                 	db	119	;'w'
   914  00FFD0  6D                 	db	109	;'m'
   915  00FFD1  00                 	db	0
   916  00FFD2                     STR_47:
   917  00FFD2  73                 	db	115	;'s'
   918  00FFD3  65                 	db	101	;'e'
   919  00FFD4  74                 	db	116	;'t'
   920  00FFD5  00                 	db	0
   921  00FFD6                     STR_19:
   922  00FFD6  08                 	db	8
   923  00FFD7  20                 	db	32
   924  00FFD8  08                 	db	8
   925  00FFD9  00                 	db	0
   926  00FFDA                     STR_34:
   927  00FFDA  64                 	db	100	;'d'
   928  00FFDB  61                 	db	97	;'a'
   929  00FFDC  79                 	db	121	;'y'
   930  00FFDD  00                 	db	0
   931  00FFDE                     STR_45:
   932  00FFDE  65                 	db	101	;'e'
   933  00FFDF  6E                 	db	110	;'n'
   934  00FFE0  00                 	db	0
   935  00FFE1                     STR_27:
   936  00FFE1  61                 	db	97	;'a'
   937  00FFE2  74                 	db	116	;'t'
   938  00FFE3  00                 	db	0
   939  00FFE4                     STR_42:
   940  00FFE4  3F                 	db	63	;'?'
   941  00FFE5  00                 	db	0
   942  00FFE6                     STR_58:
   943  00FFE6  42                 	db	66	;'B'
   944  00FFE7  00                 	db	0
   945  00FFE8                     STR_56:
   946  00FFE8  47                 	db	71	;'G'
   947  00FFE9  00                 	db	0
   948  00FFEA                     STR_54:
   949  00FFEA  52                 	db	82	;'R'
   950  00FFEB  00                 	db	0
   951  00FFEC                     STR_60:
   952  00FFEC  57                 	db	87	;'W'
   953  00FFED  00                 	db	0
   954  00FFEE                     STR_57:
   955  00FFEE  62                 	db	98	;'b'
   956  00FFEF  00                 	db	0
   957  00FFF0                     STR_55:
   958  00FFF0  67                 	db	103	;'g'
   959  00FFF1  00                 	db	0
   960  00FFF2                     STR_59:
   961  00FFF2  77                 	db	119	;'w'
   962  00FFF3  00                 	db	0
   963  00FFF4                     STR_39:
   964  00FFF4  73                 	db	115	;'s'
   965  00FFF5  00                 	db	0
   966  00FFF6  28                 	db	40
   967  00FFF7  00                 	db	0
   968  00FFF8                     STR_9:
   969  00FFF8  2D                 	db	45
   970  00FFF9  00                 	db	0
   971  00FFFA                     STR_4:
   972  00FFFA  2F                 	db	47
   973  00FFFB  00                 	db	0
   974  00FFFC                     STR_7:
   975  00FFFC  3A                 	db	58	;':'
   976  00FFFD  00                 	db	0
   977  0000                     
   978                           ; #config settings
   979  00FFFE  00                 	db	0	; dummy byte at the end
   980  0000                     
   981                           	psect	cinit
   982  0129BC                     __pcinit:
   983                           	opt stack 0
   984  0129BC                     start_initialization:
   985                           	opt stack 0
   986  0129BC                     __initialization:
   987                           	opt stack 0
   988                           
   989                           ; Clear objects allocated to BIGRAMl (1000 bytes)
   990  0129BC  EE04  F069         	lfsr	0,__pbssBIGRAMl
   991  0129C0  EE13 F0E8          	lfsr	1,1000
   992  0129C4                     clear_0:
   993  0129C4  6AEE               	clrf	postinc0,c
   994  0129C6  50E5               	movf	postdec1,w,c
   995  0129C8  50E1               	movf	fsr1l,w,c
   996  0129CA  E1FC               	bnz	clear_0
   997  0129CC  50E2               	movf	fsr1h,w,c
   998  0129CE  E1FA               	bnz	clear_0
   999                           
  1000                           ; Clear objects allocated to BANK3 (250 bytes)
  1001  0129D0  EE03  F000         	lfsr	0,__pbssBANK3
  1002  0129D4  0EFA               	movlw	250
  1003  0129D6                     clear_1:
  1004  0129D6  6AEE               	clrf	postinc0,c
  1005  0129D8  06E8               	decf	wreg,f,c
  1006  0129DA  E1FD               	bnz	clear_1
  1007                           
  1008                           ; Clear objects allocated to BANK2 (203 bytes)
  1009  0129DC  EE02  F000         	lfsr	0,__pbssBANK2
  1010  0129E0  0ECB               	movlw	203
  1011  0129E2                     clear_2:
  1012  0129E2  6AEE               	clrf	postinc0,c
  1013  0129E4  06E8               	decf	wreg,f,c
  1014  0129E6  E1FD               	bnz	clear_2
  1015                           
  1016                           ; Clear objects allocated to BANK1 (148 bytes)
  1017  0129E8  EE01  F000         	lfsr	0,__pbssBANK1
  1018  0129EC  0E94               	movlw	148
  1019  0129EE                     clear_3:
  1020  0129EE  6AEE               	clrf	postinc0,c
  1021  0129F0  06E8               	decf	wreg,f,c
  1022  0129F2  E1FD               	bnz	clear_3
  1023                           
  1024                           ; Clear objects allocated to BANK0 (30 bytes)
  1025  0129F4  EE00  F0D6         	lfsr	0,__pbssBANK0
  1026  0129F8  0E1E               	movlw	30
  1027  0129FA                     clear_4:
  1028  0129FA  6AEE               	clrf	postinc0,c
  1029  0129FC  06E8               	decf	wreg,f,c
  1030  0129FE  E1FD               	bnz	clear_4
  1031                           
  1032                           ; Clear objects allocated to COMRAM (31 bytes)
  1033  012A00  EE00  F021         	lfsr	0,__pbssCOMRAM
  1034  012A04  0E1F               	movlw	31
  1035  012A06                     clear_5:
  1036  012A06  6AEE               	clrf	postinc0,c
  1037  012A08  06E8               	decf	wreg,f,c
  1038  012A0A  E1FD               	bnz	clear_5
  1039                           
  1040                           ; Initialize objects allocated to BANK1 (3 bytes)
  1041                           ; load TBLPTR registers with __pidataBANK1
  1042  012A0C  0E84               	movlw	low __pidataBANK1
  1043  012A0E  6EF6               	movwf	tblptrl,c
  1044  012A10  0E30               	movlw	high __pidataBANK1
  1045  012A12  6EF7               	movwf	tblptrh,c
  1046  012A14  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1047  012A16  6EF8               	movwf	tblptru,c
  1048  012A18  0009               	tblrd		*+	;fetch initializer
  1049  012A1A  CFF5 F1B6          	movff	tablat,__pdataBANK1
  1050  012A1E  0009               	tblrd		*+	;fetch initializer
  1051  012A20  CFF5 F1B7          	movff	tablat,__pdataBANK1+1
  1052  012A24  0009               	tblrd		*+	;fetch initializer
  1053  012A26  CFF5 F1B8          	movff	tablat,__pdataBANK1+2
  1054  012A2A                     end_of_initialization:
  1055                           	opt stack 0
  1056  012A2A                     __end_of__initialization:
  1057                           	opt stack 0
  1058  012A2A  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1059  012A2C  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1060  012A2E  0100               	movlb	0
  1061  012A30  EF91  F095         	goto	_main	;jump to C main() function
  1062                           tblptru	equ	0xFF8
  1063                           tblptrh	equ	0xFF7
  1064                           tblptrl	equ	0xFF6
  1065                           tablat	equ	0xFF5
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           postdec1	equ	0xFE5
  1069                           fsr1h	equ	0xFE2
  1070                           fsr1l	equ	0xFE1
  1071                           
  1072                           	psect	bssCOMRAM
  1073  000021                     __pbssCOMRAM:
  1074                           	opt stack 0
  1075  000021                     _inPipes:
  1076                           	opt stack 0
  1077  000021                     	ds	6
  1078  000027                     _pBDTEntryIn:
  1079                           	opt stack 0
  1080  000027                     	ds	6
  1081  00002D                     _CDCDataOutHandle:
  1082                           	opt stack 0
  1083  00002D                     	ds	2
  1084  00002F                     _pBDTEntryEP0OutCurrent:
  1085                           	opt stack 0
  1086  00002F                     	ds	2
  1087  000031                     _pBDTEntryEP0OutNext:
  1088                           	opt stack 0
  1089  000031                     	ds	2
  1090  000033                     _BothEP0OutUOWNsSet:
  1091                           	opt stack 0
  1092  000033                     	ds	1
  1093  000034                     _RemoteWakeup:
  1094                           	opt stack 0
  1095  000034                     	ds	1
  1096  000035                     _USBDeferStatusStagePacket:
  1097                           	opt stack 0
  1098  000035                     	ds	1
  1099  000036                     _USBDeviceState:
  1100                           	opt stack 0
  1101  000036                     	ds	1
  1102  000037                     _USBStatusStageTimeoutCounter:
  1103                           	opt stack 0
  1104  000037                     	ds	1
  1105  000038                     _cdc_rx_len:
  1106                           	opt stack 0
  1107  000038                     	ds	1
  1108  000039                     _cdc_trf_state:
  1109                           	opt stack 0
  1110  000039                     	ds	1
  1111  00003A                     _cdc_tx_len:
  1112                           	opt stack 0
  1113  00003A                     	ds	1
  1114  00003B                     _controlTransferState:
  1115                           	opt stack 0
  1116  00003B                     	ds	1
  1117  00003C                     _endpoint_number:
  1118                           	opt stack 0
  1119  00003C                     	ds	1
  1120  00003D                     _shortPacketStatus:
  1121                           	opt stack 0
  1122  00003D                     	ds	1
  1123  00003E                     _USBActiveConfiguration:
  1124                           	opt stack 0
  1125  00003E                     	ds	1
  1126  00003F                     _USTATcopy:
  1127                           	opt stack 0
  1128  00003F                     	ds	1
  1129                           tblptru	equ	0xFF8
  1130                           tblptrh	equ	0xFF7
  1131                           tblptrl	equ	0xFF6
  1132                           tablat	equ	0xFF5
  1133                           postinc0	equ	0xFEE
  1134                           wreg	equ	0xFE8
  1135                           postdec1	equ	0xFE5
  1136                           fsr1h	equ	0xFE2
  1137                           fsr1l	equ	0xFE1
  1138                           
  1139                           	psect	bssBANK0
  1140  0000D6                     __pbssBANK0:
  1141                           	opt stack 0
  1142  0000D6                     _outPipes:
  1143                           	opt stack 0
  1144  0000D6                     	ds	9
  1145  0000DF                     _ep_data_in:
  1146                           	opt stack 0
  1147  0000DF                     	ds	3
  1148  0000E2                     _ep_data_out:
  1149                           	opt stack 0
  1150  0000E2                     	ds	3
  1151  0000E5                     _CDCDataInHandle:
  1152                           	opt stack 0
  1153  0000E5                     	ds	2
  1154  0000E7                     RTCC_task@prev_halfsec:
  1155                           	opt stack 0
  1156  0000E7                     	ds	1
  1157  0000E8                     _USBDeferINDataStagePackets:
  1158                           	opt stack 0
  1159  0000E8                     	ds	1
  1160  0000E9                     _USBDeferOUTDataStagePackets:
  1161                           	opt stack 0
  1162  0000E9                     	ds	1
  1163  0000EA                     _USBStatusStageEnabledFlag1:
  1164                           	opt stack 0
  1165  0000EA                     	ds	1
  1166  0000EB                     _USBStatusStageEnabledFlag2:
  1167                           	opt stack 0
  1168  0000EB                     	ds	1
  1169  0000EC                     _cdc_mem_type:
  1170                           	opt stack 0
  1171  0000EC                     	ds	1
  1172  0000ED                     _light_mode:
  1173                           	opt stack 0
  1174  0000ED                     	ds	1
  1175  0000EE                     _time_change_flag:
  1176                           	opt stack 0
  1177  0000EE                     	ds	1
  1178  0000EF                     terminal_task@command_init:
  1179                           	opt stack 0
  1180  0000EF                     	ds	1
  1181  0000F0                     _USBAlternateInterface:
  1182                           	opt stack 0
  1183  0000F0                     	ds	2
  1184  0000F2                     light_task@_3359:
  1185                           	opt stack 0
  1186  0000F2                     	ds	1
  1187  0000F3                     light_task@n:
  1188                           	opt stack 0
  1189  0000F3                     	ds	1
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec1	equ	0xFE5
  1197                           fsr1h	equ	0xFE2
  1198                           fsr1l	equ	0xFE1
  1199                           
  1200                           	psect	bssBANK1
  1201  000100                     __pbssBANK1:
  1202                           	opt stack 0
  1203  000100                     _cdc_notice:
  1204                           	opt stack 0
  1205  000100                     	ds	10
  1206  00010A                     _pBDTEntryOut:
  1207                           	opt stack 0
  1208  00010A                     	ds	6
  1209  000110                     _BaudRateGen:
  1210                           	opt stack 0
  1211  000110                     	ds	4
  1212  000114                     _ms:
  1213                           	opt stack 0
  1214  000114                     	ds	4
  1215  000118                     _pCDCDst:
  1216                           	opt stack 0
  1217  000118                     	ds	3
  1218  00011B                     _pCDCSrc:
  1219                           	opt stack 0
  1220  00011B                     	ds	3
  1221  00011E                     USBCBSendResume@delay_count:
  1222                           	opt stack 0
  1223  00011E                     	ds	2
  1224  000120                     _pDst:
  1225                           	opt stack 0
  1226  000120                     	ds	2
  1227  000122                     epoch_to_caltime@day_cache:
  1228                           	opt stack 0
  1229  000122                     	ds	2
  1230  000124                     millis_timer@cnt:
  1231                           	opt stack 0
  1232  000124                     	ds	2
  1233  000126                     _ADC_flag:
  1234                           	opt stack 0
  1235  000126                     	ds	1
  1236  000127                     _USBBusIsSuspended:
  1237                           	opt stack 0
  1238  000127                     	ds	1
  1239  000128                     _control_signal_bitmap:
  1240                           	opt stack 0
  1241  000128                     	ds	1
  1242  000129                     epoch_to_caltime@year_cache:
  1243                           	opt stack 0
  1244  000129                     	ds	1
  1245  00012A                     terminal_task@op0:
  1246                           	opt stack 0
  1247  00012A                     	ds	25
  1248  000143                     _now:
  1249                           	opt stack 0
  1250  000143                     	ds	14
  1251  000151                     _dummy_encapsulated_cmd_response:
  1252                           	opt stack 0
  1253  000151                     	ds	8
  1254  000159                     _uart_rx:
  1255                           	opt stack 0
  1256  000159                     	ds	8
  1257  000161                     _uart_tx:
  1258                           	opt stack 0
  1259  000161                     	ds	8
  1260  000169                     _usb_rx:
  1261                           	opt stack 0
  1262  000169                     	ds	8
  1263  000171                     _usb_tx:
  1264                           	opt stack 0
  1265  000171                     	ds	8
  1266  000179                     terminal_task@command:
  1267                           	opt stack 0
  1268  000179                     	ds	8
  1269  000181                     _line_coding:
  1270                           	opt stack 0
  1271  000181                     	ds	7
  1272  000188                     _sw_B:
  1273                           	opt stack 0
  1274  000188                     	ds	4
  1275  00018C                     _sw_G:
  1276                           	opt stack 0
  1277  00018C                     	ds	4
  1278  000190                     _sw_R:
  1279                           	opt stack 0
  1280  000190                     	ds	4
  1281                           tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           postdec1	equ	0xFE5
  1288                           fsr1h	equ	0xFE2
  1289                           fsr1l	equ	0xFE1
  1290                           
  1291                           	psect	dataBANK1
  1292  0001B6                     __pdataBANK1:
  1293                           	opt stack 0
  1294  0001B6                     I2C_LCD_SetCursor@F8620:
  1295                           	opt stack 0
  1296  0001B6                     	ds	2
  1297  0001B8                     epoch_to_caltime@month_cache:
  1298                           	opt stack 0
  1299  0001B8                     	ds	1
  1300                           tblptru	equ	0xFF8
  1301                           tblptrh	equ	0xFF7
  1302                           tblptrl	equ	0xFF6
  1303                           tablat	equ	0xFF5
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           postdec1	equ	0xFE5
  1307                           fsr1h	equ	0xFE2
  1308                           fsr1l	equ	0xFE1
  1309                           
  1310                           	psect	bssBANK2
  1311  000200                     __pbssBANK2:
  1312                           	opt stack 0
  1313  000200                     _cdc_data_rx:
  1314                           	opt stack 0
  1315  000200                     	ds	64
  1316  000240                     _cdc_data_tx:
  1317                           	opt stack 0
  1318  000240                     	ds	64
  1319  000280                     terminal_task@op1:
  1320                           	opt stack 0
  1321  000280                     	ds	25
  1322  000299                     terminal_task@op2:
  1323                           	opt stack 0
  1324  000299                     	ds	25
  1325  0002B2                     terminal_task@op3:
  1326                           	opt stack 0
  1327  0002B2                     	ds	25
  1328                           tblptru	equ	0xFF8
  1329                           tblptrh	equ	0xFF7
  1330                           tblptrl	equ	0xFF6
  1331                           tablat	equ	0xFF5
  1332                           postinc0	equ	0xFEE
  1333                           wreg	equ	0xFE8
  1334                           postdec1	equ	0xFE5
  1335                           fsr1h	equ	0xFE2
  1336                           fsr1l	equ	0xFE1
  1337                           
  1338                           	psect	bssBANK3
  1339  000300                     __pbssBANK3:
  1340                           	opt stack 0
  1341  000300                     main_init@rxbuf:
  1342                           	opt stack 0
  1343  000300                     	ds	250
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           postinc0	equ	0xFEE
  1349                           wreg	equ	0xFE8
  1350                           postdec1	equ	0xFE5
  1351                           fsr1h	equ	0xFE2
  1352                           fsr1l	equ	0xFE1
  1353                           
  1354                           	psect	bssBIGRAMl
  1355  000469                     __pbssBIGRAMl:
  1356                           	opt stack 0
  1357  000469                     main_init@txbuf:
  1358                           	opt stack 0
  1359  000469                     	ds	1000
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           postdec1	equ	0xFE5
  1367                           fsr1h	equ	0xFE2
  1368                           fsr1l	equ	0xFE1
  1369                           
  1370                           	psect	cstackBANK4
  1371  000400                     __pcstackBANK4:
  1372                           	opt stack 0
  1373  000400                     terminal_task@buf:
  1374                           	opt stack 0
  1375                           
  1376                           ; 100 bytes @ 0x0
  1377  000400                     	ds	100
  1378  000464                     _terminal_task$6625:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x64
  1382  000464                     	ds	2
  1383  000466                     terminal_task@i_2431:
  1384                           	opt stack 0
  1385                           
  1386                           ; 1 bytes @ 0x66
  1387  000466                     	ds	1
  1388  000467                     terminal_task@ascii:
  1389                           	opt stack 0
  1390                           
  1391                           ; 1 bytes @ 0x67
  1392  000467                     	ds	1
  1393  000468                     terminal_task@i:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0x68
  1397  000468                     	ds	1
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           postinc0	equ	0xFEE
  1403                           wreg	equ	0xFE8
  1404                           postdec1	equ	0xFE5
  1405                           fsr1h	equ	0xFE2
  1406                           fsr1l	equ	0xFE1
  1407                           
  1408                           	psect	cstackBANK1
  1409  000194                     __pcstackBANK1:
  1410                           	opt stack 0
  1411  000194                     terminal_operation@str:
  1412                           	opt stack 0
  1413                           
  1414                           ; 30 bytes @ 0x0
  1415  000194                     	ds	30
  1416  0001B2                     _terminal_operation$6627:
  1417                           	opt stack 0
  1418                           
  1419                           ; 2 bytes @ 0x1E
  1420  0001B2                     	ds	2
  1421  0001B4                     _terminal_operation$6628:
  1422                           	opt stack 0
  1423                           
  1424                           ; 2 bytes @ 0x20
  1425  0001B4                     	ds	2
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           postinc0	equ	0xFEE
  1431                           wreg	equ	0xFE8
  1432                           postdec1	equ	0xFE5
  1433                           fsr1h	equ	0xFE2
  1434                           fsr1l	equ	0xFE1
  1435                           
  1436                           	psect	cstackBANK0
  1437  000060                     __pcstackBANK0:
  1438                           	opt stack 0
  1439  000060                     ??_timer1_init:
  1440  000060                     ?_strcmp:
  1441                           	opt stack 0
  1442  000060                     ?_ringbuf_num:
  1443                           	opt stack 0
  1444  000060                     ?___wmul:
  1445                           	opt stack 0
  1446  000060                     ?___awmod:
  1447                           	opt stack 0
  1448  000060                     ?___lldiv:
  1449                           	opt stack 0
  1450  000060                     ?___llmod:
  1451                           	opt stack 0
  1452  000060                     timer0_init@prescaler:
  1453                           	opt stack 0
  1454  000060                     timer3_init@prescaler:
  1455                           	opt stack 0
  1456  000060                     x_to_d@hex:
  1457                           	opt stack 0
  1458  000060                     _isdigit$6089:
  1459                           	opt stack 0
  1460  000060                     ringbuf_init@rb:
  1461                           	opt stack 0
  1462  000060                     ringbuf_num@rb:
  1463                           	opt stack 0
  1464  000060                     ringbuf_delete@rb:
  1465                           	opt stack 0
  1466  000060                     ___wmul@multiplier:
  1467                           	opt stack 0
  1468  000060                     ___awmod@dividend:
  1469                           	opt stack 0
  1470  000060                     strcmp@s1:
  1471                           	opt stack 0
  1472  000060                     ___lldiv@dividend:
  1473                           	opt stack 0
  1474  000060                     ___llmod@dividend:
  1475                           	opt stack 0
  1476                           
  1477                           ; 4 bytes @ 0x0
  1478  000060                     	ds	1
  1479  000061                     timer1_init@prescaler:
  1480                           	opt stack 0
  1481  000061                     isdigit@c:
  1482                           	opt stack 0
  1483  000061                     RTCC_to_caltime@tm:
  1484                           	opt stack 0
  1485                           
  1486                           ; 2 bytes @ 0x1
  1487  000061                     	ds	1
  1488  000062                     ??_ringbuf_num:
  1489  000062                     ringbuf_init@internal_buf:
  1490                           	opt stack 0
  1491  000062                     ___wmul@multiplicand:
  1492                           	opt stack 0
  1493  000062                     ___awmod@divisor:
  1494                           	opt stack 0
  1495  000062                     strcmp@s2:
  1496                           	opt stack 0
  1497                           
  1498                           ; 2 bytes @ 0x2
  1499  000062                     	ds	1
  1500  000063                     RTCC_to_caltime@dumy:
  1501                           	opt stack 0
  1502                           
  1503                           ; 1 bytes @ 0x3
  1504  000063                     	ds	1
  1505  000064                     ___awmod@counter:
  1506                           	opt stack 0
  1507  000064                     strcmp@r:
  1508                           	opt stack 0
  1509  000064                     ringbuf_init@bufsize:
  1510                           	opt stack 0
  1511  000064                     ___wmul@product:
  1512                           	opt stack 0
  1513  000064                     ___lldiv@divisor:
  1514                           	opt stack 0
  1515  000064                     ___llmod@divisor:
  1516                           	opt stack 0
  1517                           
  1518                           ; 4 bytes @ 0x4
  1519  000064                     	ds	1
  1520  000065                     ___awmod@sign:
  1521                           	opt stack 0
  1522                           
  1523                           ; 1 bytes @ 0x5
  1524  000065                     	ds	1
  1525  000066                     ??_month_length:
  1526  000066                     ?_atoi:
  1527                           	opt stack 0
  1528  000066                     ?___lwdiv:
  1529                           	opt stack 0
  1530  000066                     atoi@s:
  1531                           	opt stack 0
  1532  000066                     ___lwdiv@dividend:
  1533                           	opt stack 0
  1534                           
  1535                           ; 2 bytes @ 0x6
  1536  000066                     	ds	2
  1537  000068                     ??_atoi:
  1538  000068                     ringbuf_put@rb:
  1539                           	opt stack 0
  1540  000068                     ringbuf_pop@rb:
  1541                           	opt stack 0
  1542  000068                     ringbuf_backspace@rb:
  1543                           	opt stack 0
  1544  000068                     ___lwdiv@divisor:
  1545                           	opt stack 0
  1546  000068                     ___lldiv@quotient:
  1547                           	opt stack 0
  1548                           
  1549                           ; 4 bytes @ 0x8
  1550  000068                     	ds	2
  1551  00006A                     ??_ringbuf_pop:
  1552  00006A                     ??_ringbuf_backspace:
  1553  00006A                     ringbuf_put@asciicode:
  1554                           	opt stack 0
  1555  00006A                     month_length@year:
  1556                           	opt stack 0
  1557  00006A                     atoi@sign:
  1558                           	opt stack 0
  1559  00006A                     ___lwdiv@counter:
  1560                           	opt stack 0
  1561                           
  1562                           ; 1 bytes @ 0xA
  1563  00006A                     	ds	1
  1564  00006B                     ??_ringbuf_put:
  1565  00006B                     atoi@a:
  1566                           	opt stack 0
  1567  00006B                     ___lwdiv@quotient:
  1568                           	opt stack 0
  1569                           
  1570                           ; 2 bytes @ 0xB
  1571  00006B                     	ds	1
  1572  00006C                     ___lldiv@counter:
  1573                           	opt stack 0
  1574                           
  1575                           ; 1 bytes @ 0xC
  1576  00006C                     	ds	1
  1577  00006D                     ?___awdiv:
  1578                           	opt stack 0
  1579  00006D                     ?___lwmod:
  1580                           	opt stack 0
  1581  00006D                     ?___lmul:
  1582                           	opt stack 0
  1583  00006D                     ___awdiv@dividend:
  1584                           	opt stack 0
  1585  00006D                     ___lwmod@dividend:
  1586                           	opt stack 0
  1587  00006D                     ___lmul@multiplier:
  1588                           	opt stack 0
  1589                           
  1590                           ; 4 bytes @ 0xD
  1591  00006D                     	ds	2
  1592  00006F                     ringbuf_put_str@rb:
  1593                           	opt stack 0
  1594  00006F                     ___awdiv@divisor:
  1595                           	opt stack 0
  1596  00006F                     ___lwmod@divisor:
  1597                           	opt stack 0
  1598                           
  1599                           ; 2 bytes @ 0xF
  1600  00006F                     	ds	2
  1601  000071                     ?_sprintf:
  1602                           	opt stack 0
  1603  000071                     ___awdiv@counter:
  1604                           	opt stack 0
  1605  000071                     ringbuf_put_num@rb:
  1606                           	opt stack 0
  1607  000071                     ringbuf_put_str@str:
  1608                           	opt stack 0
  1609  000071                     sprintf@sp:
  1610                           	opt stack 0
  1611  000071                     ___lmul@multiplicand:
  1612                           	opt stack 0
  1613                           
  1614                           ; 4 bytes @ 0x11
  1615  000071                     	ds	1
  1616  000072                     ___awdiv@sign:
  1617                           	opt stack 0
  1618                           
  1619                           ; 1 bytes @ 0x12
  1620  000072                     	ds	1
  1621  000073                     ringbuf_put_num@value:
  1622                           	opt stack 0
  1623  000073                     sprintf@f:
  1624                           	opt stack 0
  1625  000073                     ___awdiv@quotient:
  1626                           	opt stack 0
  1627                           
  1628                           ; 2 bytes @ 0x13
  1629  000073                     	ds	2
  1630  000075                     ringbuf_put_num@digits:
  1631                           	opt stack 0
  1632  000075                     d_to_x@dec:
  1633                           	opt stack 0
  1634  000075                     PWM_set@value:
  1635                           	opt stack 0
  1636  000075                     ___lmul@product:
  1637                           	opt stack 0
  1638                           
  1639                           ; 4 bytes @ 0x15
  1640  000075                     	ds	1
  1641  000076                     ringbuf_put_num@i:
  1642                           	opt stack 0
  1643  000076                     caltime_to_RTCC@tm:
  1644                           	opt stack 0
  1645                           
  1646                           ; 2 bytes @ 0x16
  1647  000076                     	ds	1
  1648  000077                     ??_PWM_set:
  1649  000077                     ringbuf_put_num@temp:
  1650                           	opt stack 0
  1651                           
  1652                           ; 2 bytes @ 0x17
  1653  000077                     	ds	2
  1654  000079                     ?_get_quot_rem:
  1655                           	opt stack 0
  1656  000079                     PWM_set@color:
  1657                           	opt stack 0
  1658  000079                     get_quot_rem@quot:
  1659                           	opt stack 0
  1660  000079                     caltime_to_epoch@tm:
  1661                           	opt stack 0
  1662                           
  1663                           ; 2 bytes @ 0x19
  1664  000079                     	ds	2
  1665  00007B                     ??_caltime_to_epoch:
  1666  00007B                     get_quot_rem@div:
  1667                           	opt stack 0
  1668                           
  1669                           ; 1 bytes @ 0x1B
  1670  00007B                     	ds	2
  1671  00007D                     get_quot_rem@num:
  1672                           	opt stack 0
  1673                           
  1674                           ; 4 bytes @ 0x1D
  1675  00007D                     	ds	2
  1676  00007F                     caltime_to_epoch@year:
  1677                           	opt stack 0
  1678                           
  1679                           ; 1 bytes @ 0x1F
  1680  00007F                     	ds	1
  1681  000080                     caltime_to_epoch@month_1589:
  1682                           	opt stack 0
  1683                           
  1684                           ; 1 bytes @ 0x20
  1685  000080                     	ds	1
  1686  000081                     epoch_to_caltime@tm:
  1687                           	opt stack 0
  1688  000081                     caltime_to_epoch@epoch:
  1689                           	opt stack 0
  1690                           
  1691                           ; 4 bytes @ 0x21
  1692  000081                     	ds	2
  1693  000083                     ??_sprintf:
  1694  000083                     ??_epoch_to_caltime:
  1695                           
  1696                           ; 0 bytes @ 0x23
  1697  000083                     	ds	2
  1698  000085                     caltime_to_epoch@month:
  1699                           	opt stack 0
  1700  000085                     epoch_to_caltime@day_since_epoch:
  1701                           	opt stack 0
  1702                           
  1703                           ; 2 bytes @ 0x25
  1704  000085                     	ds	1
  1705  000086                     RTCC_from_RTCC@tm:
  1706                           	opt stack 0
  1707                           
  1708                           ; 2 bytes @ 0x26
  1709  000086                     	ds	1
  1710  000087                     sprintf@prec:
  1711                           	opt stack 0
  1712  000087                     epoch_to_caltime@day:
  1713                           	opt stack 0
  1714                           
  1715                           ; 2 bytes @ 0x27
  1716  000087                     	ds	1
  1717  000088                     ??_light_task:
  1718  000088                     sprintf@ap:
  1719                           	opt stack 0
  1720                           
  1721                           ; 2 bytes @ 0x28
  1722  000088                     	ds	1
  1723  000089                     epoch_to_caltime@year:
  1724                           	opt stack 0
  1725                           
  1726                           ; 1 bytes @ 0x29
  1727  000089                     	ds	1
  1728  00008A                     epoch_to_caltime@month:
  1729                           	opt stack 0
  1730  00008A                     sprintf@cp:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0x2A
  1734  00008A                     	ds	1
  1735  00008B                     epoch_to_caltime@num:
  1736                           	opt stack 0
  1737                           
  1738                           ; 4 bytes @ 0x2B
  1739  00008B                     	ds	1
  1740  00008C                     light_task@value:
  1741                           	opt stack 0
  1742  00008C                     sprintf@val:
  1743                           	opt stack 0
  1744                           
  1745                           ; 2 bytes @ 0x2C
  1746  00008C                     	ds	1
  1747  00008D                     light_task@value_3360:
  1748                           	opt stack 0
  1749                           
  1750                           ; 1 bytes @ 0x2D
  1751  00008D                     	ds	1
  1752  00008E                     sprintf@len:
  1753                           	opt stack 0
  1754  00008E                     light_task@temp:
  1755                           	opt stack 0
  1756                           
  1757                           ; 4 bytes @ 0x2E
  1758  00008E                     	ds	1
  1759  00008F                     RTCC_from_caltime@tm:
  1760                           	opt stack 0
  1761  00008F                     RTCC_from_epoch@tm:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0x2F
  1765  00008F                     	ds	1
  1766  000090                     sprintf@flag:
  1767                           	opt stack 0
  1768                           
  1769                           ; 1 bytes @ 0x30
  1770  000090                     	ds	1
  1771  000091                     sprintf@c:
  1772                           	opt stack 0
  1773                           
  1774                           ; 1 bytes @ 0x31
  1775  000091                     	ds	1
  1776  000092                     light_task@i:
  1777                           	opt stack 0
  1778  000092                     sprintf@width:
  1779                           	opt stack 0
  1780                           
  1781                           ; 2 bytes @ 0x32
  1782  000092                     	ds	2
  1783  000094                     print_time@tx:
  1784                           	opt stack 0
  1785                           
  1786                           ; 2 bytes @ 0x34
  1787  000094                     	ds	2
  1788  000096                     print_time@str:
  1789                           	opt stack 0
  1790                           
  1791                           ; 30 bytes @ 0x36
  1792  000096                     	ds	30
  1793  0000B4                     terminal_at_hand@tx:
  1794                           	opt stack 0
  1795                           
  1796                           ; 2 bytes @ 0x54
  1797  0000B4                     	ds	2
  1798  0000B6                     terminal_at_hand@hand:
  1799                           	opt stack 0
  1800                           
  1801                           ; 2 bytes @ 0x56
  1802  0000B6                     	ds	2
  1803  0000B8                     terminal_at_hand@min:
  1804                           	opt stack 0
  1805                           
  1806                           ; 1 bytes @ 0x58
  1807  0000B8                     	ds	1
  1808  0000B9                     terminal_at_hand@max:
  1809                           	opt stack 0
  1810                           
  1811                           ; 1 bytes @ 0x59
  1812  0000B9                     	ds	1
  1813  0000BA                     terminal_at_hand@value:
  1814                           	opt stack 0
  1815                           
  1816                           ; 1 bytes @ 0x5A
  1817  0000BA                     	ds	1
  1818  0000BB                     terminal_time@tx:
  1819                           	opt stack 0
  1820                           
  1821                           ; 2 bytes @ 0x5B
  1822  0000BB                     	ds	2
  1823  0000BD                     terminal_time@op0:
  1824                           	opt stack 0
  1825                           
  1826                           ; 2 bytes @ 0x5D
  1827  0000BD                     	ds	2
  1828  0000BF                     terminal_time@op1:
  1829                           	opt stack 0
  1830                           
  1831                           ; 2 bytes @ 0x5F
  1832  0000BF                     	ds	2
  1833  0000C1                     terminal_time@op2:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x61
  1837  0000C1                     	ds	2
  1838  0000C3                     _terminal_time$6626:
  1839                           	opt stack 0
  1840                           
  1841                           ; 1 bytes @ 0x63
  1842  0000C3                     	ds	1
  1843  0000C4                     terminal_operation@tx:
  1844                           	opt stack 0
  1845                           
  1846                           ; 2 bytes @ 0x64
  1847  0000C4                     	ds	2
  1848  0000C6                     terminal_operation@op0:
  1849                           	opt stack 0
  1850                           
  1851                           ; 2 bytes @ 0x66
  1852  0000C6                     	ds	2
  1853  0000C8                     terminal_operation@op1:
  1854                           	opt stack 0
  1855                           
  1856                           ; 2 bytes @ 0x68
  1857  0000C8                     	ds	2
  1858  0000CA                     terminal_operation@op2:
  1859                           	opt stack 0
  1860                           
  1861                           ; 2 bytes @ 0x6A
  1862  0000CA                     	ds	2
  1863  0000CC                     terminal_operation@op3:
  1864                           	opt stack 0
  1865                           
  1866                           ; 2 bytes @ 0x6C
  1867  0000CC                     	ds	2
  1868  0000CE                     ??_terminal_operation:
  1869                           
  1870                           ; 0 bytes @ 0x6E
  1871  0000CE                     	ds	2
  1872  0000D0                     terminal_task@tx:
  1873                           	opt stack 0
  1874                           
  1875                           ; 2 bytes @ 0x70
  1876  0000D0                     	ds	2
  1877  0000D2                     terminal_task@rx:
  1878                           	opt stack 0
  1879                           
  1880                           ; 2 bytes @ 0x72
  1881  0000D2                     	ds	2
  1882  0000D4                     ??_terminal_task:
  1883                           
  1884                           ; 0 bytes @ 0x74
  1885  0000D4                     	ds	2
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           postdec1	equ	0xFE5
  1893                           fsr1h	equ	0xFE2
  1894                           fsr1l	equ	0xFE1
  1895                           
  1896                           	psect	cstackCOMRAM
  1897  000001                     __pcstackCOMRAM:
  1898                           	opt stack 0
  1899  000001                     ?i2_ringbuf_num:
  1900                           	opt stack 0
  1901  000001                     button_timer_interrupt@bt:
  1902                           	opt stack 0
  1903  000001                     i2ringbuf_num@rb:
  1904                           	opt stack 0
  1905                           
  1906                           ; 2 bytes @ 0x0
  1907  000001                     	ds	2
  1908  000003                     ??i2_ringbuf_num:
  1909  000003                     button_timer_interrupt@sw_value:
  1910                           	opt stack 0
  1911                           
  1912                           ; 1 bytes @ 0x2
  1913  000003                     	ds	1
  1914  000004                     
  1915                           ; 0 bytes @ 0x3
  1916  000004                     	ds	5
  1917  000009                     i2ringbuf_put@rb:
  1918                           	opt stack 0
  1919  000009                     i2ringbuf_pop@rb:
  1920                           	opt stack 0
  1921                           
  1922                           ; 2 bytes @ 0x8
  1923  000009                     	ds	2
  1924  00000B                     ??i2_ringbuf_pop:
  1925  00000B                     i2ringbuf_put@asciicode:
  1926                           	opt stack 0
  1927                           
  1928                           ; 1 bytes @ 0xA
  1929  00000B                     	ds	1
  1930  00000C                     ??i2_ringbuf_put:
  1931                           
  1932                           ; 0 bytes @ 0xB
  1933  00000C                     	ds	3
  1934  00000F                     i2ringbuf_pop@ret:
  1935                           	opt stack 0
  1936                           
  1937                           ; 1 bytes @ 0xE
  1938  00000F                     	ds	1
  1939  000010                     UART_ISR@ascii:
  1940                           	opt stack 0
  1941                           
  1942                           ; 1 bytes @ 0xF
  1943  000010                     	ds	1
  1944  000011                     ??_ISR:
  1945                           
  1946                           ; 0 bytes @ 0x10
  1947  000011                     	ds	15
  1948  000020                     ??_strcmp:
  1949  000020                     ??_isdigit:
  1950  000020                     ??_timer0_init:
  1951  000020                     ??_timer3_init:
  1952  000020                     ??_x_to_d:
  1953  000020                     timer1_init@clock_select:
  1954                           	opt stack 0
  1955  000020                     ADC_init@p_ref:
  1956                           	opt stack 0
  1957  000020                     ringbuf_pop@ret:
  1958                           	opt stack 0
  1959  000020                     month_length@month:
  1960                           	opt stack 0
  1961  000020                     PWM_init@PR:
  1962                           	opt stack 0
  1963  000020                     ___llmod@counter:
  1964                           	opt stack 0
  1965  000020                     ___lwmod@counter:
  1966                           	opt stack 0
  1967                           
  1968                           ; 1 bytes @ 0x1F
  1969  000020                     	ds	1
  1970  000021                     tblptru	equ	0xFF8
  1971                           tblptrh	equ	0xFF7
  1972                           tblptrl	equ	0xFF6
  1973                           tablat	equ	0xFF5
  1974                           postinc0	equ	0xFEE
  1975                           wreg	equ	0xFE8
  1976                           postdec1	equ	0xFE5
  1977                           fsr1h	equ	0xFE2
  1978                           fsr1l	equ	0xFE1
  1979                           
  1980                           ; 0 bytes @ 0x20
  1981 ;;
  1982 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1983 ;;
  1984 ;; *************** function _main *****************
  1985 ;; Defined at:
  1986 ;;		line 310 in file "PIC18F27J53-killifish_light05.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  2  813[None  ] int 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels required when called:   13
  2006 ;; This function calls:
  2007 ;;		_RTCC_from_RTCC
  2008 ;;		_RTCC_from_epoch
  2009 ;;		_RTCC_task
  2010 ;;		_UART_task
  2011 ;;		_light_task
  2012 ;;		_main_init
  2013 ;;		_terminal_task
  2014 ;; This function is called by:
  2015 ;;		Startup code after reset
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text0
  2020  012B22                     __ptext0:
  2021                           	opt stack 0
  2022  012B22                     _main:
  2023                           	opt stack 18
  2024                           
  2025                           ;PIC18F27J53-killifish_light05.c: 311: main_init();
  2026                           
  2027                           ;incstack = 0
  2028  012B22  EC7B  F093         	call	_main_init	;wreg free
  2029                           
  2030                           ;PIC18F27J53-killifish_light05.c: 313: RTCC_from_RTCC(&now);
  2031  012B26  0E43               	movlw	low _now
  2032  012B28  0100               	movlb	0	; () banked
  2033  012B2A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  2034  012B2C  0E01               	movlw	high _now
  2035  012B2E  0100               	movlb	0	; () banked
  2036  012B30  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  2037  012B32  EC2E  F098         	call	_RTCC_from_RTCC	;wreg free
  2038                           
  2039                           ;PIC18F27J53-killifish_light05.c: 314: if (now.DD == 0) {
  2040  012B36  0101               	movlb	1	; () banked
  2041  012B38  514B               	movf	(_now+8)& (0+255),w,b
  2042  012B3A  A4D8               	btfss	status,2,c
  2043  012B3C  D011               	goto	l9396
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;PIC18F27J53-killifish_light05.c: 315: now.epoch = 0;
  2047  012B3E  0E00               	movlw	0
  2048  012B40  0101               	movlb	1	; () banked
  2049  012B42  6F43               	movwf	_now& (0+255),b
  2050  012B44  0E00               	movlw	0
  2051  012B46  6F44               	movwf	(_now+1)& (0+255),b
  2052  012B48  0E00               	movlw	0
  2053  012B4A  6F45               	movwf	(_now+2)& (0+255),b
  2054  012B4C  0E00               	movlw	0
  2055  012B4E  6F46               	movwf	(_now+3)& (0+255),b
  2056                           
  2057                           ; BSR set to: 1
  2058                           ;PIC18F27J53-killifish_light05.c: 316: RTCC_from_epoch(&now);
  2059  012B50  0E43               	movlw	low _now
  2060  012B52  0100               	movlb	0	; () banked
  2061  012B54  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  2062  012B56  0E01               	movlw	high _now
  2063  012B58  0100               	movlb	0	; () banked
  2064  012B5A  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  2065  012B5C  EC21  F098         	call	_RTCC_from_epoch	;wreg free
  2066  012B60                     l9396:
  2067                           
  2068                           ;PIC18F27J53-killifish_light05.c: 320: INTCONbits.GIE = 0;
  2069  012B60  9EF2               	bcf	intcon,7,c	;volatile
  2070                           
  2071                           ;PIC18F27J53-killifish_light05.c: 321: RTCC_task();
  2072  012B62  EC2F  F097         	call	_RTCC_task	;wreg free
  2073                           
  2074                           ;PIC18F27J53-killifish_light05.c: 322: terminal_task(&uart_tx, &uart_rx);
  2075  012B66  0E61               	movlw	low _uart_tx
  2076  012B68  0100               	movlb	0	; () banked
  2077  012B6A  6FD0               	movwf	terminal_task@tx& (0+255),b
  2078  012B6C  0E01               	movlw	high _uart_tx
  2079  012B6E  0100               	movlb	0	; () banked
  2080  012B70  6FD1               	movwf	(terminal_task@tx+1)& (0+255),b
  2081  012B72  0E59               	movlw	low _uart_rx
  2082  012B74  0100               	movlb	0	; () banked
  2083  012B76  6FD2               	movwf	terminal_task@rx& (0+255),b
  2084  012B78  0E01               	movlw	high _uart_rx
  2085  012B7A  0100               	movlb	0	; () banked
  2086  012B7C  6FD3               	movwf	(terminal_task@rx+1)& (0+255),b
  2087  012B7E  EC8F  F086         	call	_terminal_task	;wreg free
  2088                           
  2089                           ;PIC18F27J53-killifish_light05.c: 323: UART_task();
  2090  012B82  ECF5  F097         	call	_UART_task	;wreg free
  2091                           
  2092                           ;PIC18F27J53-killifish_light05.c: 324: light_task();
  2093  012B86  ECCC  F08A         	call	_light_task	;wreg free
  2094                           
  2095                           ;PIC18F27J53-killifish_light05.c: 325: INTCONbits.GIE = 1;
  2096  012B8A  8EF2               	bsf	intcon,7,c	;volatile
  2097  012B8C  D7E9               	goto	l9396
  2098  012B8E                     __end_of_main:
  2099                           	opt stack 0
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           intcon	equ	0xFF2
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           postdec1	equ	0xFE5
  2108                           fsr1h	equ	0xFE2
  2109                           fsr1l	equ	0xFE1
  2110                           status	equ	0xFD8
  2111                           
  2112 ;; *************** function _terminal_task *****************
  2113 ;; Defined at:
  2114 ;;		line 8 in file "../My_library/My_terminal.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  tx              2  112[BANK0 ] PTR struct ringbuf
  2117 ;;		 -> uart_tx(8), 
  2118 ;;  rx              2  114[BANK0 ] PTR struct ringbuf
  2119 ;;		 -> uart_rx(8), 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  i               1  102[BANK4 ] unsigned char 
  2122 ;;  i               1  104[BANK4 ] unsigned char 
  2123 ;;  ascii           1  103[BANK4 ] unsigned char 
  2124 ;;  buf           100    0[BANK4 ] unsigned char [100]
  2125 ;; Return value:  Size  Location     Type
  2126 ;;		None               void
  2127 ;; Registers used:
  2128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  2136 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2137 ;;      Totals:         0       6       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  2138 ;;Total ram usage:      111 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:   12
  2141 ;; This function calls:
  2142 ;;		_ringbuf_backspace
  2143 ;;		_ringbuf_delete
  2144 ;;		_ringbuf_init
  2145 ;;		_ringbuf_num
  2146 ;;		_ringbuf_pop
  2147 ;;		_ringbuf_put
  2148 ;;		_ringbuf_put_num
  2149 ;;		_ringbuf_put_str
  2150 ;;		_terminal_operation
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text1
  2157  010D1E                     __ptext1:
  2158                           	opt stack 0
  2159  010D1E                     _terminal_task:
  2160                           	opt stack 18
  2161                           
  2162                           ;My_terminal.c: 9: static ringbuf_t command;
  2163                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2164                           ;My_terminal.c: 11: if (command_init == 0) {
  2165                           
  2166                           ;incstack = 0
  2167  010D1E  0100               	movlb	0	; () banked
  2168  010D20  51EF               	movf	terminal_task@command_init& (0+255),w,b
  2169  010D22  0100               	movlb	0	; () banked
  2170  010D24  A4D8               	btfss	status,2,c
  2171  010D26  D016               	goto	l9046
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;My_terminal.c: 12: command_init = 1;
  2175  010D28  0E01               	movlw	1
  2176  010D2A  0100               	movlb	0	; () banked
  2177  010D2C  6FEF               	movwf	terminal_task@command_init& (0+255),b
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;My_terminal.c: 13: char buf[100];
  2181                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2182  010D2E  0E79               	movlw	low terminal_task@command
  2183  010D30  0100               	movlb	0	; () banked
  2184  010D32  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2185  010D34  0E01               	movlw	high terminal_task@command
  2186  010D36  0100               	movlb	0	; () banked
  2187  010D38  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2188  010D3A  0E00               	movlw	low terminal_task@buf
  2189  010D3C  0100               	movlb	0	; () banked
  2190  010D3E  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2191  010D40  0E04               	movlw	high terminal_task@buf
  2192  010D42  0100               	movlb	0	; () banked
  2193  010D44  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2194  010D46  0E00               	movlw	0
  2195  010D48  0100               	movlb	0	; () banked
  2196  010D4A  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2197  010D4C  0E64               	movlw	100
  2198  010D4E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2199  010D50  ECB9  F096         	call	_ringbuf_init	;wreg free
  2200  010D54                     l9046:
  2201                           
  2202                           ;My_terminal.c: 15: }
  2203                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2204  010D54  C0D2  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2205  010D58  C0D3  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2206  010D5C  EC1E  F08E         	call	_ringbuf_num	;wreg free
  2207  010D60  0100               	movlb	0	; () banked
  2208  010D62  5160               	movf	?_ringbuf_num& (0+255),w,b
  2209  010D64  0100               	movlb	0	; () banked
  2210  010D66  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2211  010D68  B4D8               	btfsc	status,2,c
  2212  010D6A  0012               	return	
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2216  010D6C  C0D2  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2217  010D70  C0D3  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2218  010D74  EC40  F090         	call	_ringbuf_pop	;wreg free
  2219  010D78  0104               	movlb	4	; () banked
  2220  010D7A  6F67               	movwf	terminal_task@ascii& (0+255),b
  2221                           
  2222                           ;My_terminal.c: 18: switch (ascii) {
  2223  010D7C  D176               	goto	l9110
  2224  010D7E                     l9050:
  2225                           
  2226                           ; BSR set to: 4
  2227                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2228  010D7E  0E79               	movlw	low terminal_task@command
  2229  010D80  0100               	movlb	0	; () banked
  2230  010D82  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2231  010D84  0E01               	movlw	high terminal_task@command
  2232  010D86  0100               	movlb	0	; () banked
  2233  010D88  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2234  010D8A  0E00               	movlw	0
  2235  010D8C  0100               	movlb	0	; () banked
  2236  010D8E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2237  010D90  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2238                           
  2239                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2240  010D94  C0D0  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2241  010D98  C0D1  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2242  010D9C  0E09               	movlw	9
  2243  010D9E  0100               	movlb	0	; () banked
  2244  010DA0  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2245  010DA2  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2246                           
  2247                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2248  010DA6  0E79               	movlw	low terminal_task@command
  2249  010DA8  0100               	movlb	0	; () banked
  2250  010DAA  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2251  010DAC  0E01               	movlw	high terminal_task@command
  2252  010DAE  0100               	movlb	0	; () banked
  2253  010DB0  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2254  010DB2  EC1E  F08E         	call	_ringbuf_num	;wreg free
  2255  010DB6  0EFF               	movlw	255
  2256  010DB8  0100               	movlb	0	; () banked
  2257  010DBA  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2258  010DBC  0104               	movlb	4	; () banked
  2259  010DBE  6F64               	movwf	_terminal_task$6625& (0+255),b
  2260  010DC0  0EFF               	movlw	255
  2261  010DC2  0100               	movlb	0	; () banked
  2262  010DC4  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2263  010DC6  0104               	movlb	4	; () banked
  2264  010DC8  6F65               	movwf	(_terminal_task$6625+1)& (0+255),b
  2265                           
  2266                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2267  010DCA  C0D0  F071         	movff	terminal_task@tx,ringbuf_put_num@rb
  2268  010DCE  C0D1  F072         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2269  010DD2  C464  F073         	movff	_terminal_task$6625,ringbuf_put_num@value
  2270  010DD6  C465  F074         	movff	_terminal_task$6625+1,ringbuf_put_num@value+1
  2271  010DDA  0E02               	movlw	2
  2272  010DDC  0100               	movlb	0	; () banked
  2273  010DDE  6F75               	movwf	ringbuf_put_num@digits& (0+255),b
  2274  010DE0  EC9D  F094         	call	_ringbuf_put_num	;wreg free
  2275                           
  2276                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2277  010DE4  C0D0  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2278  010DE8  C0D1  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2279  010DEC  0E0A               	movlw	10
  2280  010DEE  0100               	movlb	0	; () banked
  2281  010DF0  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2282  010DF2  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2283                           
  2284                           ;My_terminal.c: 24: static char op0[25];
  2285                           ;My_terminal.c: 25: static char op1[25];
  2286                           ;My_terminal.c: 26: static char op2[25];
  2287                           ;My_terminal.c: 27: static char op3[25];
  2288                           ;My_terminal.c: 28: uint8_t i;
  2289                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2290  010DF6  0E00               	movlw	0
  2291  010DF8  0104               	movlb	4	; () banked
  2292  010DFA  6F68               	movwf	terminal_task@i& (0+255),b
  2293  010DFC  D002               	goto	l9056
  2294  010DFE                     l9054:
  2295                           
  2296                           ; BSR set to: 4
  2297  010DFE  0104               	movlb	4	; () banked
  2298  010E00  2B68               	incf	terminal_task@i& (0+255),f,b
  2299  010E02                     l9056:
  2300                           
  2301                           ; BSR set to: 4
  2302  010E02  0E79               	movlw	low terminal_task@command
  2303  010E04  0100               	movlb	0	; () banked
  2304  010E06  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2305  010E08  0E01               	movlw	high terminal_task@command
  2306  010E0A  0100               	movlb	0	; () banked
  2307  010E0C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2308  010E0E  EC40  F090         	call	_ringbuf_pop	;wreg free
  2309  010E12  0100               	movlb	0	; () banked
  2310  010E14  6FD4               	movwf	??_terminal_task& (0+255),b
  2311  010E16  0104               	movlb	4	; () banked
  2312  010E18  5168               	movf	terminal_task@i& (0+255),w,b
  2313  010E1A  0D01               	mullw	1
  2314  010E1C  0E2A               	movlw	low terminal_task@op0
  2315  010E1E  24F3               	addwf	prodl,w,c
  2316  010E20  6ED9               	movwf	fsr2l,c
  2317  010E22  0E01               	movlw	high terminal_task@op0
  2318  010E24  20F4               	addwfc	prodh,w,c
  2319  010E26  6EDA               	movwf	fsr2h,c
  2320  010E28  C0D4  FFDF         	movff	??_terminal_task,indf2
  2321  010E2C  50DF               	movf	indf2,w,c
  2322  010E2E  A4D8               	btfss	status,2,c
  2323  010E30  D7E6               	goto	l9054
  2324                           
  2325                           ; BSR set to: 4
  2326                           ;My_terminal.c: 30: op0[i] = '\0';
  2327                           
  2328                           ; BSR set to: 4
  2329  010E32  0104               	movlb	4	; () banked
  2330  010E34  5168               	movf	terminal_task@i& (0+255),w,b
  2331  010E36  0D01               	mullw	1
  2332  010E38  0E2A               	movlw	low terminal_task@op0
  2333  010E3A  24F3               	addwf	prodl,w,c
  2334  010E3C  6ED9               	movwf	fsr2l,c
  2335  010E3E  0E01               	movlw	high terminal_task@op0
  2336  010E40  20F4               	addwfc	prodh,w,c
  2337  010E42  6EDA               	movwf	fsr2h,c
  2338  010E44  0E00               	movlw	0
  2339  010E46  6EDF               	movwf	indf2,c
  2340                           
  2341                           ; BSR set to: 4
  2342                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2343  010E48  0E00               	movlw	0
  2344  010E4A  0104               	movlb	4	; () banked
  2345  010E4C  6F68               	movwf	terminal_task@i& (0+255),b
  2346  010E4E  D002               	goto	l9064
  2347  010E50                     l9062:
  2348                           
  2349                           ; BSR set to: 4
  2350  010E50  0104               	movlb	4	; () banked
  2351  010E52  2B68               	incf	terminal_task@i& (0+255),f,b
  2352  010E54                     l9064:
  2353                           
  2354                           ; BSR set to: 4
  2355  010E54  0E79               	movlw	low terminal_task@command
  2356  010E56  0100               	movlb	0	; () banked
  2357  010E58  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2358  010E5A  0E01               	movlw	high terminal_task@command
  2359  010E5C  0100               	movlb	0	; () banked
  2360  010E5E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2361  010E60  EC40  F090         	call	_ringbuf_pop	;wreg free
  2362  010E64  0100               	movlb	0	; () banked
  2363  010E66  6FD4               	movwf	??_terminal_task& (0+255),b
  2364  010E68  0104               	movlb	4	; () banked
  2365  010E6A  5168               	movf	terminal_task@i& (0+255),w,b
  2366  010E6C  0D01               	mullw	1
  2367  010E6E  0E80               	movlw	low terminal_task@op1
  2368  010E70  24F3               	addwf	prodl,w,c
  2369  010E72  6ED9               	movwf	fsr2l,c
  2370  010E74  0E02               	movlw	high terminal_task@op1
  2371  010E76  20F4               	addwfc	prodh,w,c
  2372  010E78  6EDA               	movwf	fsr2h,c
  2373  010E7A  C0D4  FFDF         	movff	??_terminal_task,indf2
  2374  010E7E  50DF               	movf	indf2,w,c
  2375  010E80  A4D8               	btfss	status,2,c
  2376  010E82  D7E6               	goto	l9062
  2377                           
  2378                           ; BSR set to: 4
  2379                           ;My_terminal.c: 32: op1[i] = '\0';
  2380                           
  2381                           ; BSR set to: 4
  2382  010E84  0104               	movlb	4	; () banked
  2383  010E86  5168               	movf	terminal_task@i& (0+255),w,b
  2384  010E88  0D01               	mullw	1
  2385  010E8A  0E80               	movlw	low terminal_task@op1
  2386  010E8C  24F3               	addwf	prodl,w,c
  2387  010E8E  6ED9               	movwf	fsr2l,c
  2388  010E90  0E02               	movlw	high terminal_task@op1
  2389  010E92  20F4               	addwfc	prodh,w,c
  2390  010E94  6EDA               	movwf	fsr2h,c
  2391  010E96  0E00               	movlw	0
  2392  010E98  6EDF               	movwf	indf2,c
  2393                           
  2394                           ; BSR set to: 4
  2395                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2396  010E9A  0E00               	movlw	0
  2397  010E9C  0104               	movlb	4	; () banked
  2398  010E9E  6F68               	movwf	terminal_task@i& (0+255),b
  2399  010EA0  D002               	goto	l9072
  2400  010EA2                     l9070:
  2401                           
  2402                           ; BSR set to: 4
  2403  010EA2  0104               	movlb	4	; () banked
  2404  010EA4  2B68               	incf	terminal_task@i& (0+255),f,b
  2405  010EA6                     l9072:
  2406                           
  2407                           ; BSR set to: 4
  2408  010EA6  0E79               	movlw	low terminal_task@command
  2409  010EA8  0100               	movlb	0	; () banked
  2410  010EAA  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2411  010EAC  0E01               	movlw	high terminal_task@command
  2412  010EAE  0100               	movlb	0	; () banked
  2413  010EB0  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2414  010EB2  EC40  F090         	call	_ringbuf_pop	;wreg free
  2415  010EB6  0100               	movlb	0	; () banked
  2416  010EB8  6FD4               	movwf	??_terminal_task& (0+255),b
  2417  010EBA  0104               	movlb	4	; () banked
  2418  010EBC  5168               	movf	terminal_task@i& (0+255),w,b
  2419  010EBE  0D01               	mullw	1
  2420  010EC0  0E99               	movlw	low terminal_task@op2
  2421  010EC2  24F3               	addwf	prodl,w,c
  2422  010EC4  6ED9               	movwf	fsr2l,c
  2423  010EC6  0E02               	movlw	high terminal_task@op2
  2424  010EC8  20F4               	addwfc	prodh,w,c
  2425  010ECA  6EDA               	movwf	fsr2h,c
  2426  010ECC  C0D4  FFDF         	movff	??_terminal_task,indf2
  2427  010ED0  50DF               	movf	indf2,w,c
  2428  010ED2  A4D8               	btfss	status,2,c
  2429  010ED4  D7E6               	goto	l9070
  2430                           
  2431                           ; BSR set to: 4
  2432                           ;My_terminal.c: 34: op2[i] = '\0';
  2433                           
  2434                           ; BSR set to: 4
  2435  010ED6  0104               	movlb	4	; () banked
  2436  010ED8  5168               	movf	terminal_task@i& (0+255),w,b
  2437  010EDA  0D01               	mullw	1
  2438  010EDC  0E99               	movlw	low terminal_task@op2
  2439  010EDE  24F3               	addwf	prodl,w,c
  2440  010EE0  6ED9               	movwf	fsr2l,c
  2441  010EE2  0E02               	movlw	high terminal_task@op2
  2442  010EE4  20F4               	addwfc	prodh,w,c
  2443  010EE6  6EDA               	movwf	fsr2h,c
  2444  010EE8  0E00               	movlw	0
  2445  010EEA  6EDF               	movwf	indf2,c
  2446                           
  2447                           ; BSR set to: 4
  2448                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2449  010EEC  0E00               	movlw	0
  2450  010EEE  0104               	movlb	4	; () banked
  2451  010EF0  6F68               	movwf	terminal_task@i& (0+255),b
  2452  010EF2  D002               	goto	l9080
  2453  010EF4                     l9078:
  2454                           
  2455                           ; BSR set to: 4
  2456  010EF4  0104               	movlb	4	; () banked
  2457  010EF6  2B68               	incf	terminal_task@i& (0+255),f,b
  2458  010EF8                     l9080:
  2459                           
  2460                           ; BSR set to: 4
  2461  010EF8  0E79               	movlw	low terminal_task@command
  2462  010EFA  0100               	movlb	0	; () banked
  2463  010EFC  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2464  010EFE  0E01               	movlw	high terminal_task@command
  2465  010F00  0100               	movlb	0	; () banked
  2466  010F02  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2467  010F04  EC40  F090         	call	_ringbuf_pop	;wreg free
  2468  010F08  0100               	movlb	0	; () banked
  2469  010F0A  6FD4               	movwf	??_terminal_task& (0+255),b
  2470  010F0C  0104               	movlb	4	; () banked
  2471  010F0E  5168               	movf	terminal_task@i& (0+255),w,b
  2472  010F10  0D01               	mullw	1
  2473  010F12  0EB2               	movlw	low terminal_task@op3
  2474  010F14  24F3               	addwf	prodl,w,c
  2475  010F16  6ED9               	movwf	fsr2l,c
  2476  010F18  0E02               	movlw	high terminal_task@op3
  2477  010F1A  20F4               	addwfc	prodh,w,c
  2478  010F1C  6EDA               	movwf	fsr2h,c
  2479  010F1E  C0D4  FFDF         	movff	??_terminal_task,indf2
  2480  010F22  50DF               	movf	indf2,w,c
  2481  010F24  A4D8               	btfss	status,2,c
  2482  010F26  D7E6               	goto	l9078
  2483                           
  2484                           ; BSR set to: 4
  2485                           ;My_terminal.c: 36: op3[i] = '\0';
  2486                           
  2487                           ; BSR set to: 4
  2488  010F28  0104               	movlb	4	; () banked
  2489  010F2A  5168               	movf	terminal_task@i& (0+255),w,b
  2490  010F2C  0D01               	mullw	1
  2491  010F2E  0EB2               	movlw	low terminal_task@op3
  2492  010F30  24F3               	addwf	prodl,w,c
  2493  010F32  6ED9               	movwf	fsr2l,c
  2494  010F34  0E02               	movlw	high terminal_task@op3
  2495  010F36  20F4               	addwfc	prodh,w,c
  2496  010F38  6EDA               	movwf	fsr2h,c
  2497  010F3A  0E00               	movlw	0
  2498  010F3C  6EDF               	movwf	indf2,c
  2499                           
  2500                           ; BSR set to: 4
  2501                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2502  010F3E  C0D0  F0C4         	movff	terminal_task@tx,terminal_operation@tx
  2503  010F42  C0D1  F0C5         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2504  010F46  0E2A               	movlw	low terminal_task@op0
  2505  010F48  0100               	movlb	0	; () banked
  2506  010F4A  6FC6               	movwf	terminal_operation@op0& (0+255),b
  2507  010F4C  0E01               	movlw	high terminal_task@op0
  2508  010F4E  0100               	movlb	0	; () banked
  2509  010F50  6FC7               	movwf	(terminal_operation@op0+1)& (0+255),b
  2510  010F52  0E80               	movlw	low terminal_task@op1
  2511  010F54  0100               	movlb	0	; () banked
  2512  010F56  6FC8               	movwf	terminal_operation@op1& (0+255),b
  2513  010F58  0E02               	movlw	high terminal_task@op1
  2514  010F5A  0100               	movlb	0	; () banked
  2515  010F5C  6FC9               	movwf	(terminal_operation@op1+1)& (0+255),b
  2516  010F5E  0E99               	movlw	low terminal_task@op2
  2517  010F60  0100               	movlb	0	; () banked
  2518  010F62  6FCA               	movwf	terminal_operation@op2& (0+255),b
  2519  010F64  0E02               	movlw	high terminal_task@op2
  2520  010F66  0100               	movlb	0	; () banked
  2521  010F68  6FCB               	movwf	(terminal_operation@op2+1)& (0+255),b
  2522  010F6A  0EB2               	movlw	low terminal_task@op3
  2523  010F6C  0100               	movlb	0	; () banked
  2524  010F6E  6FCC               	movwf	terminal_operation@op3& (0+255),b
  2525  010F70  0E02               	movlw	high terminal_task@op3
  2526  010F72  0100               	movlb	0	; () banked
  2527  010F74  6FCD               	movwf	(terminal_operation@op3+1)& (0+255),b
  2528  010F76  EC00  F080         	call	_terminal_operation	;wreg free
  2529                           
  2530                           ;My_terminal.c: 38: break;
  2531  010F7A  0012               	return	
  2532  010F7C                     l9086:
  2533                           
  2534                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2535  010F7C  0E79               	movlw	low terminal_task@command
  2536  010F7E  0100               	movlb	0	; () banked
  2537  010F80  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2538  010F82  0E01               	movlw	high terminal_task@command
  2539  010F84  0100               	movlb	0	; () banked
  2540  010F86  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2541  010F88  0E00               	movlw	0
  2542  010F8A  0100               	movlb	0	; () banked
  2543  010F8C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2544  010F8E  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2545                           
  2546                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2547  010F92  C0D0  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2548  010F96  C0D1  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2549  010F9A  0E20               	movlw	32
  2550  010F9C  0100               	movlb	0	; () banked
  2551  010F9E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2552  010FA0  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2553                           
  2554                           ;My_terminal.c: 42: break;
  2555  010FA4  0012               	return	
  2556  010FA6                     l9088:
  2557                           
  2558                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2559  010FA6  0E79               	movlw	low terminal_task@command
  2560  010FA8  0100               	movlb	0	; () banked
  2561  010FAA  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2562  010FAC  0E01               	movlw	high terminal_task@command
  2563  010FAE  0100               	movlb	0	; () banked
  2564  010FB0  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2565  010FB2  EC10  F094         	call	_ringbuf_backspace	;wreg free
  2566                           
  2567                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2568  010FB6  C0D0  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2569  010FBA  C0D1  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2570  010FBE  0ED6               	movlw	low STR_19
  2571  010FC0  0100               	movlb	0	; () banked
  2572  010FC2  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2573  010FC4  0EFF               	movlw	high STR_19
  2574  010FC6  0100               	movlb	0	; () banked
  2575  010FC8  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2576  010FCA  ECFC  F095         	call	_ringbuf_put_str	;wreg free
  2577                           
  2578                           ;My_terminal.c: 46: break;
  2579  010FCE  0012               	return	
  2580  010FD0                     l9092:
  2581                           
  2582                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2583  010FD0  0E00               	movlw	0
  2584  010FD2  0104               	movlb	4	; () banked
  2585  010FD4  6F66               	movwf	terminal_task@i_2431& (0+255),b
  2586  010FD6  D00E               	goto	l9098
  2587  010FD8                     l9094:
  2588  010FD8  C0D0  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2589  010FDC  C0D1  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2590  010FE0  0ED6               	movlw	low STR_19
  2591  010FE2  0100               	movlb	0	; () banked
  2592  010FE4  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2593  010FE6  0EFF               	movlw	high STR_19
  2594  010FE8  0100               	movlb	0	; () banked
  2595  010FEA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2596  010FEC  ECFC  F095         	call	_ringbuf_put_str	;wreg free
  2597  010FF0  0104               	movlb	4	; () banked
  2598  010FF2  2B66               	incf	terminal_task@i_2431& (0+255),f,b
  2599  010FF4                     l9098:
  2600                           
  2601                           ; BSR set to: 4
  2602  010FF4  0E79               	movlw	low terminal_task@command
  2603  010FF6  0100               	movlb	0	; () banked
  2604  010FF8  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2605  010FFA  0E01               	movlw	high terminal_task@command
  2606  010FFC  0100               	movlb	0	; () banked
  2607  010FFE  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2608  011000  EC1E  F08E         	call	_ringbuf_num	;wreg free
  2609  011004  0104               	movlb	4	; () banked
  2610  011006  5166               	movf	terminal_task@i_2431& (0+255),w,b
  2611  011008  0100               	movlb	0	; () banked
  2612  01100A  6FD4               	movwf	??_terminal_task& (0+255),b
  2613  01100C  6BD5               	clrf	(??_terminal_task+1)& (0+255),b
  2614  01100E  0100               	movlb	0	; () banked
  2615  011010  5160               	movf	?_ringbuf_num& (0+255),w,b
  2616  011012  0100               	movlb	0	; () banked
  2617  011014  5DD4               	subwf	??_terminal_task& (0+255),w,b
  2618  011016  0100               	movlb	0	; () banked
  2619  011018  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2620  01101A  0100               	movlb	0	; () banked
  2621  01101C  59D5               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2622  01101E  A0D8               	btfss	status,0,c
  2623  011020  D7DB               	goto	l9094
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2627                           
  2628                           ; BSR set to: 0
  2629  011022  0E79               	movlw	low terminal_task@command
  2630  011024  0100               	movlb	0	; () banked
  2631  011026  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2632  011028  0E01               	movlw	high terminal_task@command
  2633  01102A  0100               	movlb	0	; () banked
  2634  01102C  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2635  01102E  ECD2  F097         	call	_ringbuf_delete	;wreg free
  2636                           
  2637                           ;My_terminal.c: 50: break;
  2638  011032  0012               	return	
  2639  011034                     l9102:
  2640                           
  2641                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2642  011034  0E1F               	movlw	31
  2643  011036  0104               	movlb	4	; () banked
  2644  011038  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  2645  01103A  0012               	return	
  2646                           
  2647                           ; BSR set to: 4
  2648  01103C  0E7F               	movlw	127
  2649  01103E  0104               	movlb	4	; () banked
  2650  011040  6167               	cpfslt	terminal_task@ascii& (0+255),b
  2651  011042  0012               	return	
  2652                           
  2653                           ; BSR set to: 4
  2654                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2655  011044  0E79               	movlw	low terminal_task@command
  2656  011046  0100               	movlb	0	; () banked
  2657  011048  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2658  01104A  0E01               	movlw	high terminal_task@command
  2659  01104C  0100               	movlb	0	; () banked
  2660  01104E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2661  011050  C467  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2662  011054  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2663                           
  2664                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2665  011058  C0D0  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2666  01105C  C0D1  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2667  011060  C467  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2668  011064  EC6C  F08F         	call	_ringbuf_put	;wreg free
  2669                           
  2670                           ;My_terminal.c: 57: }
  2671                           
  2672                           ;My_terminal.c: 55: }
  2673                           ;My_terminal.c: 56: break;
  2674  011068  0012               	return	
  2675  01106A                     l9110:
  2676  01106A  0104               	movlb	4	; () banked
  2677  01106C  5167               	movf	terminal_task@ascii& (0+255),w,b
  2678                           
  2679                           ; Switch size 1, requested type "space"
  2680                           ; Number of cases is 4, Range of values is 8 to 127
  2681                           ; switch strategies available:
  2682                           ; Name         Instructions Cycles
  2683                           ; simple_byte           13     7 (average)
  2684                           ;	Chosen strategy is simple_byte
  2685  01106E  0A08               	xorlw	8	; case 8
  2686  011070  B4D8               	btfsc	status,2,c
  2687  011072  D799               	goto	l9088
  2688  011074  0A05               	xorlw	5	; case 13
  2689  011076  B4D8               	btfsc	status,2,c
  2690  011078  D682               	goto	l9050
  2691  01107A  0A2D               	xorlw	45	; case 32
  2692  01107C  B4D8               	btfsc	status,2,c
  2693  01107E  D77E               	goto	l9086
  2694  011080  0A5F               	xorlw	95	; case 127
  2695  011082  B4D8               	btfsc	status,2,c
  2696  011084  D7A5               	goto	l9092
  2697  011086  D7D6               	goto	l9102
  2698  011088                     __end_of_terminal_task:
  2699                           	opt stack 0
  2700                           tblptru	equ	0xFF8
  2701                           tblptrh	equ	0xFF7
  2702                           tblptrl	equ	0xFF6
  2703                           tablat	equ	0xFF5
  2704                           prodh	equ	0xFF4
  2705                           prodl	equ	0xFF3
  2706                           intcon	equ	0xFF2
  2707                           postinc0	equ	0xFEE
  2708                           wreg	equ	0xFE8
  2709                           postdec1	equ	0xFE5
  2710                           fsr1h	equ	0xFE2
  2711                           fsr1l	equ	0xFE1
  2712                           indf2	equ	0xFDF
  2713                           fsr2h	equ	0xFDA
  2714                           fsr2l	equ	0xFD9
  2715                           status	equ	0xFD8
  2716                           
  2717 ;; *************** function _terminal_operation *****************
  2718 ;; Defined at:
  2719 ;;		line 170 in file "PIC18F27J53-killifish_light05.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  tx              2  100[BANK0 ] PTR struct ringbuf
  2722 ;;		 -> uart_tx(8), 
  2723 ;;  op0             2  102[BANK0 ] PTR unsigned char 
  2724 ;;		 -> terminal_task@op0(25), 
  2725 ;;  op1             2  104[BANK0 ] PTR unsigned char 
  2726 ;;		 -> terminal_task@op1(25), 
  2727 ;;  op2             2  106[BANK0 ] PTR unsigned char 
  2728 ;;		 -> terminal_task@op2(25), 
  2729 ;;  op3             2  108[BANK0 ] PTR unsigned char 
  2730 ;;		 -> terminal_task@op3(25), 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  str            30    0[BANK1 ] unsigned char [30]
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2742 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2743 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2744 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2745 ;;      Totals:         0      12      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2746 ;;Total ram usage:       46 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:   11
  2749 ;; This function calls:
  2750 ;;		_PWM_set
  2751 ;;		___awdiv
  2752 ;;		___wmul
  2753 ;;		_atoi
  2754 ;;		_ringbuf_put_str
  2755 ;;		_sprintf
  2756 ;;		_strcmp
  2757 ;;		_terminal_time
  2758 ;; This function is called by:
  2759 ;;		_terminal_task
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text2
  2764  010000                     __ptext2:
  2765                           	opt stack 0
  2766  010000                     _terminal_operation:
  2767                           	opt stack 18
  2768                           
  2769                           ;PIC18F27J53-killifish_light05.c: 171: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2770                           
  2771                           ;incstack = 0
  2772  010000  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  2773  010004  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2774  010008  0EAE               	movlw	low STR_41
  2775  01000A  0100               	movlb	0	; () banked
  2776  01000C  6F62               	movwf	strcmp@s2& (0+255),b
  2777  01000E  0EFF               	movlw	high STR_41
  2778  010010  0100               	movlb	0	; () banked
  2779  010012  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2780  010014  EC8D  F096         	call	_strcmp	;wreg free
  2781  010018  0100               	movlb	0	; () banked
  2782  01001A  5160               	movf	?_strcmp& (0+255),w,b
  2783  01001C  0100               	movlb	0	; () banked
  2784  01001E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2785  010020  B4D8               	btfsc	status,2,c
  2786  010022  D012               	goto	l8798
  2787                           
  2788                           ; BSR set to: 0
  2789  010024  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  2790  010028  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2791  01002C  0EE4               	movlw	low STR_42
  2792  01002E  0100               	movlb	0	; () banked
  2793  010030  6F62               	movwf	strcmp@s2& (0+255),b
  2794  010032  0EFF               	movlw	high STR_42
  2795  010034  0100               	movlb	0	; () banked
  2796  010036  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2797  010038  EC8D  F096         	call	_strcmp	;wreg free
  2798  01003C  0100               	movlb	0	; () banked
  2799  01003E  5160               	movf	?_strcmp& (0+255),w,b
  2800  010040  0100               	movlb	0	; () banked
  2801  010042  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2802  010044  A4D8               	btfss	status,2,c
  2803  010046  D00C               	goto	l8800
  2804  010048                     l8798:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;PIC18F27J53-killifish_light05.c: 172: ringbuf_put_str(tx,
  2808                           ;PIC18F27J53-killifish_light05.c: 173: "\t**************************\n"
  2809                           ;PIC18F27J53-killifish_light05.c: 174: "\t**** Killifish Light  ****\n"
  2810                           ;PIC18F27J53-killifish_light05.c: 175: "\t**** Made by @Ryokeri ****\n"
  2811                           ;PIC18F27J53-killifish_light05.c: 176: "\t**************************\n\n"
  2812                           ;PIC18F27J53-killifish_light05.c: 177: "\tcommand \topeland1\topeland2\n\n"
  2813                           ;PIC18F27J53-killifish_light05.c: 178: "\tprint_time(t)\n"
  2814                           ;PIC18F27J53-killifish_light05.c: 179: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  2815  010048  C0C4  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  2816  01004C  C0C5  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2817  010050  0EE8               	movlw	low STR_43
  2818  010052  0100               	movlb	0	; () banked
  2819  010054  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2820  010056  0EFD               	movlw	high STR_43
  2821  010058  0100               	movlb	0	; () banked
  2822  01005A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2823  01005C  ECFC  F095         	call	_ringbuf_put_str	;wreg free
  2824  010060                     l8800:
  2825                           
  2826                           ;PIC18F27J53-killifish_light05.c: 186: }
  2827                           ;PIC18F27J53-killifish_light05.c: 187: terminal_time(tx, op0, op1, op2);
  2828  010060  C0C4  F0BB         	movff	terminal_operation@tx,terminal_time@tx
  2829  010064  C0C5  F0BC         	movff	terminal_operation@tx+1,terminal_time@tx+1
  2830  010068  C0C6  F0BD         	movff	terminal_operation@op0,terminal_time@op0
  2831  01006C  C0C7  F0BE         	movff	terminal_operation@op0+1,terminal_time@op0+1
  2832  010070  C0C8  F0BF         	movff	terminal_operation@op1,terminal_time@op1
  2833  010074  C0C9  F0C0         	movff	terminal_operation@op1+1,terminal_time@op1+1
  2834  010078  C0CA  F0C1         	movff	terminal_operation@op2,terminal_time@op2
  2835  01007C  C0CB  F0C2         	movff	terminal_operation@op2+1,terminal_time@op2+1
  2836  010080  ECB9  F084         	call	_terminal_time	;wreg free
  2837                           
  2838                           ;PIC18F27J53-killifish_light05.c: 188: if (!strcmp(op0, "RESET();")) {
  2839  010084  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  2840  010088  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2841  01008C  0E6E               	movlw	low STR_44
  2842  01008E  0100               	movlb	0	; () banked
  2843  010090  6F62               	movwf	strcmp@s2& (0+255),b
  2844  010092  0EFF               	movlw	high STR_44
  2845  010094  0100               	movlb	0	; () banked
  2846  010096  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2847  010098  EC8D  F096         	call	_strcmp	;wreg free
  2848  01009C  0100               	movlb	0	; () banked
  2849  01009E  5160               	movf	?_strcmp& (0+255),w,b
  2850  0100A0  0100               	movlb	0	; () banked
  2851  0100A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2852  0100A4  B4D8               	btfsc	status,2,c
  2853                           
  2854                           ; BSR set to: 0
  2855  0100A6  00FF               	reset		;# 
  2856                           
  2857                           ;PIC18F27J53-killifish_light05.c: 190: }
  2858                           ;PIC18F27J53-killifish_light05.c: 191: if (!strcmp(op0, "en")) {
  2859  0100A8  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  2860  0100AC  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2861  0100B0  0EDE               	movlw	low STR_45
  2862  0100B2  0100               	movlb	0	; () banked
  2863  0100B4  6F62               	movwf	strcmp@s2& (0+255),b
  2864  0100B6  0EFF               	movlw	high STR_45
  2865  0100B8  0100               	movlb	0	; () banked
  2866  0100BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2867  0100BC  EC8D  F096         	call	_strcmp	;wreg free
  2868  0100C0  0100               	movlb	0	; () banked
  2869  0100C2  5160               	movf	?_strcmp& (0+255),w,b
  2870  0100C4  0100               	movlb	0	; () banked
  2871  0100C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2872  0100C8  A4D8               	btfss	status,2,c
  2873  0100CA  D036               	goto	l8812
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;PIC18F27J53-killifish_light05.c: 192: char str[30];
  2877                           ;PIC18F27J53-killifish_light05.c: 193: sprintf(str, "WREN=%d,EN=%d\n", RTCCFGbits.RTCWRE
      +                          N, RTCCFGbits.RTCEN);
  2878  0100CC  0E94               	movlw	low terminal_operation@str
  2879  0100CE  0100               	movlb	0	; () banked
  2880  0100D0  6F71               	movwf	sprintf@sp& (0+255),b
  2881  0100D2  0E01               	movlw	high terminal_operation@str
  2882  0100D4  0100               	movlb	0	; () banked
  2883  0100D6  6F72               	movwf	(sprintf@sp+1)& (0+255),b
  2884  0100D8  0E48               	movlw	low STR_46
  2885  0100DA  0100               	movlb	0	; () banked
  2886  0100DC  6F73               	movwf	sprintf@f& (0+255),b
  2887  0100DE  0EFF               	movlw	high STR_46
  2888  0100E0  0100               	movlb	0	; () banked
  2889  0100E2  6F74               	movwf	(sprintf@f+1)& (0+255),b
  2890  0100E4  010F               	movlb	15	; () banked
  2891  0100E6  AB3F               	btfss	63,5,b	;volatile
  2892  0100E8  D004               	goto	u9270
  2893  0100EA  0100               	movlb	0	; () banked
  2894  0100EC  6BCE               	clrf	??_terminal_operation& (0+255),b
  2895  0100EE  2BCE               	incf	??_terminal_operation& (0+255),f,b
  2896  0100F0  D002               	goto	u9278
  2897  0100F2                     u9270:
  2898  0100F2  0100               	movlb	0	; () banked
  2899  0100F4  6BCE               	clrf	??_terminal_operation& (0+255),b
  2900  0100F6                     u9278:
  2901  0100F6  0100               	movlb	0	; () banked
  2902  0100F8  51CE               	movf	??_terminal_operation& (0+255),w,b
  2903  0100FA  0100               	movlb	0	; () banked
  2904  0100FC  6F75               	movwf	(?_sprintf+4)& (0+255),b
  2905  0100FE  6B76               	clrf	(?_sprintf+5)& (0+255),b
  2906  010100  010F               	movlb	15	; () banked
  2907  010102  AF3F               	btfss	63,7,b	;volatile
  2908  010104  D004               	goto	u9280
  2909  010106  0100               	movlb	0	; () banked
  2910  010108  6BCF               	clrf	(??_terminal_operation+1)& (0+255),b
  2911  01010A  2BCF               	incf	(??_terminal_operation+1)& (0+255),f,b
  2912  01010C  D002               	goto	u9288
  2913  01010E                     u9280:
  2914  01010E  0100               	movlb	0	; () banked
  2915  010110  6BCF               	clrf	(??_terminal_operation+1)& (0+255),b
  2916  010112                     u9288:
  2917  010112  0100               	movlb	0	; () banked
  2918  010114  51CF               	movf	(??_terminal_operation+1)& (0+255),w,b
  2919  010116  0100               	movlb	0	; () banked
  2920  010118  6F77               	movwf	(?_sprintf+6)& (0+255),b
  2921  01011A  6B78               	clrf	(?_sprintf+7)& (0+255),b
  2922  01011C  EC8C  F082         	call	_sprintf	;wreg free
  2923                           
  2924                           ;PIC18F27J53-killifish_light05.c: 194: ringbuf_put_str(tx, str);
  2925  010120  C0C4  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  2926  010124  C0C5  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2927  010128  0E94               	movlw	low terminal_operation@str
  2928  01012A  0100               	movlb	0	; () banked
  2929  01012C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2930  01012E  0E01               	movlw	high terminal_operation@str
  2931  010130  0100               	movlb	0	; () banked
  2932  010132  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2933  010134  ECFC  F095         	call	_ringbuf_put_str	;wreg free
  2934  010138                     l8812:
  2935                           
  2936                           ;PIC18F27J53-killifish_light05.c: 195: }
  2937                           ;PIC18F27J53-killifish_light05.c: 196: if (!strcmp(op0, "set")) {
  2938  010138  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  2939  01013C  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2940  010140  0ED2               	movlw	low STR_47
  2941  010142  0100               	movlb	0	; () banked
  2942  010144  6F62               	movwf	strcmp@s2& (0+255),b
  2943  010146  0EFF               	movlw	high STR_47
  2944  010148  0100               	movlb	0	; () banked
  2945  01014A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2946  01014C  EC8D  F096         	call	_strcmp	;wreg free
  2947  010150  0100               	movlb	0	; () banked
  2948  010152  5160               	movf	?_strcmp& (0+255),w,b
  2949  010154  0100               	movlb	0	; () banked
  2950  010156  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2951  010158  A4D8               	btfss	status,2,c
  2952  01015A  D03C               	goto	l8824
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;PIC18F27J53-killifish_light05.c: 197: if (!strcmp(op1, "sync")) {
  2956  01015C  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  2957  010160  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  2958  010164  0EA9               	movlw	low STR_48
  2959  010166  0100               	movlb	0	; () banked
  2960  010168  6F62               	movwf	strcmp@s2& (0+255),b
  2961  01016A  0EFF               	movlw	high STR_48
  2962  01016C  0100               	movlb	0	; () banked
  2963  01016E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2964  010170  EC8D  F096         	call	_strcmp	;wreg free
  2965  010174  0100               	movlb	0	; () banked
  2966  010176  5160               	movf	?_strcmp& (0+255),w,b
  2967  010178  0100               	movlb	0	; () banked
  2968  01017A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2969  01017C  A4D8               	btfss	status,2,c
  2970  01017E  D003               	goto	l8818
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;PIC18F27J53-killifish_light05.c: 198: light_mode = TIME_SYNC_mode;
  2974  010180  0E00               	movlw	0
  2975  010182  0100               	movlb	0	; () banked
  2976  010184  6FED               	movwf	_light_mode& (0+255),b
  2977  010186                     l8818:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;PIC18F27J53-killifish_light05.c: 199: }
  2981                           ;PIC18F27J53-killifish_light05.c: 200: if (!strcmp(op1, "adc") || !strcmp(op1, "ADC")) {
  2982  010186  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  2983  01018A  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  2984  01018E  0ECA               	movlw	low STR_49
  2985  010190  0100               	movlb	0	; () banked
  2986  010192  6F62               	movwf	strcmp@s2& (0+255),b
  2987  010194  0EFF               	movlw	high STR_49
  2988  010196  0100               	movlb	0	; () banked
  2989  010198  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2990  01019A  EC8D  F096         	call	_strcmp	;wreg free
  2991  01019E  0100               	movlb	0	; () banked
  2992  0101A0  5160               	movf	?_strcmp& (0+255),w,b
  2993  0101A2  0100               	movlb	0	; () banked
  2994  0101A4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2995  0101A6  B4D8               	btfsc	status,2,c
  2996  0101A8  D012               	goto	l8822
  2997                           
  2998                           ; BSR set to: 0
  2999  0101AA  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3000  0101AE  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3001  0101B2  0EC2               	movlw	low STR_50
  3002  0101B4  0100               	movlb	0	; () banked
  3003  0101B6  6F62               	movwf	strcmp@s2& (0+255),b
  3004  0101B8  0EFF               	movlw	high STR_50
  3005  0101BA  0100               	movlb	0	; () banked
  3006  0101BC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3007  0101BE  EC8D  F096         	call	_strcmp	;wreg free
  3008  0101C2  0100               	movlb	0	; () banked
  3009  0101C4  5160               	movf	?_strcmp& (0+255),w,b
  3010  0101C6  0100               	movlb	0	; () banked
  3011  0101C8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3012  0101CA  A4D8               	btfss	status,2,c
  3013  0101CC  D003               	goto	l8824
  3014  0101CE                     l8822:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;PIC18F27J53-killifish_light05.c: 201: light_mode = ADC_mode;
  3018  0101CE  0E01               	movlw	1
  3019  0101D0  0100               	movlb	0	; () banked
  3020  0101D2  6FED               	movwf	_light_mode& (0+255),b
  3021  0101D4                     l8824:
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;PIC18F27J53-killifish_light05.c: 202: }
  3025                           ;PIC18F27J53-killifish_light05.c: 203: }
  3026                           ;PIC18F27J53-killifish_light05.c: 204: if (!strcmp(op0, "pwm") || !strcmp(op0, "PWM")) {
  3027  0101D4  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  3028  0101D8  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3029  0101DC  0ECE               	movlw	low STR_51
  3030  0101DE  0100               	movlb	0	; () banked
  3031  0101E0  6F62               	movwf	strcmp@s2& (0+255),b
  3032  0101E2  0EFF               	movlw	high STR_51
  3033  0101E4  0100               	movlb	0	; () banked
  3034  0101E6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3035  0101E8  EC8D  F096         	call	_strcmp	;wreg free
  3036  0101EC  0100               	movlb	0	; () banked
  3037  0101EE  5160               	movf	?_strcmp& (0+255),w,b
  3038  0101F0  0100               	movlb	0	; () banked
  3039  0101F2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3040  0101F4  B4D8               	btfsc	status,2,c
  3041  0101F6  D012               	goto	l8828
  3042                           
  3043                           ; BSR set to: 0
  3044  0101F8  C0C6  F060         	movff	terminal_operation@op0,strcmp@s1
  3045  0101FC  C0C7  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3046  010200  0EC6               	movlw	low STR_52
  3047  010202  0100               	movlb	0	; () banked
  3048  010204  6F62               	movwf	strcmp@s2& (0+255),b
  3049  010206  0EFF               	movlw	high STR_52
  3050  010208  0100               	movlb	0	; () banked
  3051  01020A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3052  01020C  EC8D  F096         	call	_strcmp	;wreg free
  3053  010210  0100               	movlb	0	; () banked
  3054  010212  5160               	movf	?_strcmp& (0+255),w,b
  3055  010214  0100               	movlb	0	; () banked
  3056  010216  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3057  010218  A4D8               	btfss	status,2,c
  3058  01021A  0012               	return	
  3059  01021C                     l8828:
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;PIC18F27J53-killifish_light05.c: 205: if (!strcmp(op1, "r") || !strcmp(op1, "R")) {
  3063  01021C  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3064  010220  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3065  010224  0EA1               	movlw	low (STR_61+4)
  3066  010226  0100               	movlb	0	; () banked
  3067  010228  6F62               	movwf	strcmp@s2& (0+255),b
  3068  01022A  0EFF               	movlw	high (STR_61+4)
  3069  01022C  0100               	movlb	0	; () banked
  3070  01022E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3071  010230  EC8D  F096         	call	_strcmp	;wreg free
  3072  010234  0100               	movlb	0	; () banked
  3073  010236  5160               	movf	?_strcmp& (0+255),w,b
  3074  010238  0100               	movlb	0	; () banked
  3075  01023A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3076  01023C  B4D8               	btfsc	status,2,c
  3077  01023E  D012               	goto	l8832
  3078                           
  3079                           ; BSR set to: 0
  3080  010240  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3081  010244  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3082  010248  0EEA               	movlw	low STR_54
  3083  01024A  0100               	movlb	0	; () banked
  3084  01024C  6F62               	movwf	strcmp@s2& (0+255),b
  3085  01024E  0EFF               	movlw	high STR_54
  3086  010250  0100               	movlb	0	; () banked
  3087  010252  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3088  010254  EC8D  F096         	call	_strcmp	;wreg free
  3089  010258  0100               	movlb	0	; () banked
  3090  01025A  5160               	movf	?_strcmp& (0+255),w,b
  3091  01025C  0100               	movlb	0	; () banked
  3092  01025E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3093  010260  A4D8               	btfss	status,2,c
  3094  010262  D02E               	goto	l8840
  3095  010264                     l8832:
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;PIC18F27J53-killifish_light05.c: 206: light_mode = COMMAND_mode;
  3099  010264  0E02               	movlw	2
  3100  010266  0100               	movlb	0	; () banked
  3101  010268  6FED               	movwf	_light_mode& (0+255),b
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;PIC18F27J53-killifish_light05.c: 207: PWM_set(0, atoi(op2) * 250 / 100);
  3105  01026A  C0CA  F066         	movff	terminal_operation@op2,atoi@s
  3106  01026E  C0CB  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3107  010272  ECA5  F08D         	call	_atoi	;wreg free
  3108  010276  C066  F1B2         	movff	?_atoi,_terminal_operation$6627
  3109  01027A  C067  F1B3         	movff	?_atoi+1,_terminal_operation$6627+1
  3110                           
  3111                           ;PIC18F27J53-killifish_light05.c: 207: PWM_set(0, atoi(op2) * 250 / 100);
  3112  01027E  C1B2  F060         	movff	_terminal_operation$6627,___wmul@multiplier
  3113  010282  C1B3  F061         	movff	_terminal_operation$6627+1,___wmul@multiplier+1
  3114  010286  0E00               	movlw	0
  3115  010288  0100               	movlb	0	; () banked
  3116  01028A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3117  01028C  0EFA               	movlw	250
  3118  01028E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3119  010290  EC68  F097         	call	___wmul	;wreg free
  3120  010294  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3121  010298  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3122  01029C  0E00               	movlw	0
  3123  01029E  0100               	movlb	0	; () banked
  3124  0102A0  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3125  0102A2  0E64               	movlw	100
  3126  0102A4  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3127  0102A6  ECA4  F090         	call	___awdiv	;wreg free
  3128  0102AA  C06D  F1B4         	movff	?___awdiv,_terminal_operation$6628
  3129  0102AE  C06E  F1B5         	movff	?___awdiv+1,_terminal_operation$6628+1
  3130                           
  3131                           ;PIC18F27J53-killifish_light05.c: 207: PWM_set(0, atoi(op2) * 250 / 100);
  3132  0102B2  C1B4  F075         	movff	_terminal_operation$6628,PWM_set@value
  3133  0102B6  C1B5  F076         	movff	_terminal_operation$6628+1,PWM_set@value+1
  3134  0102BA  0E00               	movlw	0
  3135  0102BC  ECD1  F08C         	call	_PWM_set
  3136  0102C0                     l8840:
  3137                           
  3138                           ;PIC18F27J53-killifish_light05.c: 208: }
  3139                           ;PIC18F27J53-killifish_light05.c: 209: if (!strcmp(op1, "g") || !strcmp(op1, "G")) {
  3140  0102C0  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3141  0102C4  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3142  0102C8  0EF0               	movlw	low STR_55
  3143  0102CA  0100               	movlb	0	; () banked
  3144  0102CC  6F62               	movwf	strcmp@s2& (0+255),b
  3145  0102CE  0EFF               	movlw	high STR_55
  3146  0102D0  0100               	movlb	0	; () banked
  3147  0102D2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3148  0102D4  EC8D  F096         	call	_strcmp	;wreg free
  3149  0102D8  0100               	movlb	0	; () banked
  3150  0102DA  5160               	movf	?_strcmp& (0+255),w,b
  3151  0102DC  0100               	movlb	0	; () banked
  3152  0102DE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3153  0102E0  B4D8               	btfsc	status,2,c
  3154  0102E2  D012               	goto	l8844
  3155                           
  3156                           ; BSR set to: 0
  3157  0102E4  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3158  0102E8  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3159  0102EC  0EE8               	movlw	low STR_56
  3160  0102EE  0100               	movlb	0	; () banked
  3161  0102F0  6F62               	movwf	strcmp@s2& (0+255),b
  3162  0102F2  0EFF               	movlw	high STR_56
  3163  0102F4  0100               	movlb	0	; () banked
  3164  0102F6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3165  0102F8  EC8D  F096         	call	_strcmp	;wreg free
  3166  0102FC  0100               	movlb	0	; () banked
  3167  0102FE  5160               	movf	?_strcmp& (0+255),w,b
  3168  010300  0100               	movlb	0	; () banked
  3169  010302  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3170  010304  A4D8               	btfss	status,2,c
  3171  010306  D02E               	goto	l8852
  3172  010308                     l8844:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;PIC18F27J53-killifish_light05.c: 210: light_mode = COMMAND_mode;
  3176  010308  0E02               	movlw	2
  3177  01030A  0100               	movlb	0	; () banked
  3178  01030C  6FED               	movwf	_light_mode& (0+255),b
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;PIC18F27J53-killifish_light05.c: 211: PWM_set(1, atoi(op2) * 250 / 100);
  3182  01030E  C0CA  F066         	movff	terminal_operation@op2,atoi@s
  3183  010312  C0CB  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3184  010316  ECA5  F08D         	call	_atoi	;wreg free
  3185  01031A  C066  F1B2         	movff	?_atoi,_terminal_operation$6627
  3186  01031E  C067  F1B3         	movff	?_atoi+1,_terminal_operation$6627+1
  3187                           
  3188                           ;PIC18F27J53-killifish_light05.c: 211: PWM_set(1, atoi(op2) * 250 / 100);
  3189  010322  C1B2  F060         	movff	_terminal_operation$6627,___wmul@multiplier
  3190  010326  C1B3  F061         	movff	_terminal_operation$6627+1,___wmul@multiplier+1
  3191  01032A  0E00               	movlw	0
  3192  01032C  0100               	movlb	0	; () banked
  3193  01032E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3194  010330  0EFA               	movlw	250
  3195  010332  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3196  010334  EC68  F097         	call	___wmul	;wreg free
  3197  010338  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3198  01033C  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3199  010340  0E00               	movlw	0
  3200  010342  0100               	movlb	0	; () banked
  3201  010344  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3202  010346  0E64               	movlw	100
  3203  010348  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3204  01034A  ECA4  F090         	call	___awdiv	;wreg free
  3205  01034E  C06D  F1B4         	movff	?___awdiv,_terminal_operation$6628
  3206  010352  C06E  F1B5         	movff	?___awdiv+1,_terminal_operation$6628+1
  3207                           
  3208                           ;PIC18F27J53-killifish_light05.c: 211: PWM_set(1, atoi(op2) * 250 / 100);
  3209  010356  C1B4  F075         	movff	_terminal_operation$6628,PWM_set@value
  3210  01035A  C1B5  F076         	movff	_terminal_operation$6628+1,PWM_set@value+1
  3211  01035E  0E01               	movlw	1
  3212  010360  ECD1  F08C         	call	_PWM_set
  3213  010364                     l8852:
  3214                           
  3215                           ;PIC18F27J53-killifish_light05.c: 212: }
  3216                           ;PIC18F27J53-killifish_light05.c: 213: if (!strcmp(op1, "b") || !strcmp(op1, "B")) {
  3217  010364  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3218  010368  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3219  01036C  0EEE               	movlw	low STR_57
  3220  01036E  0100               	movlb	0	; () banked
  3221  010370  6F62               	movwf	strcmp@s2& (0+255),b
  3222  010372  0EFF               	movlw	high STR_57
  3223  010374  0100               	movlb	0	; () banked
  3224  010376  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3225  010378  EC8D  F096         	call	_strcmp	;wreg free
  3226  01037C  0100               	movlb	0	; () banked
  3227  01037E  5160               	movf	?_strcmp& (0+255),w,b
  3228  010380  0100               	movlb	0	; () banked
  3229  010382  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3230  010384  B4D8               	btfsc	status,2,c
  3231  010386  D012               	goto	l8856
  3232                           
  3233                           ; BSR set to: 0
  3234  010388  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3235  01038C  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3236  010390  0EE6               	movlw	low STR_58
  3237  010392  0100               	movlb	0	; () banked
  3238  010394  6F62               	movwf	strcmp@s2& (0+255),b
  3239  010396  0EFF               	movlw	high STR_58
  3240  010398  0100               	movlb	0	; () banked
  3241  01039A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3242  01039C  EC8D  F096         	call	_strcmp	;wreg free
  3243  0103A0  0100               	movlb	0	; () banked
  3244  0103A2  5160               	movf	?_strcmp& (0+255),w,b
  3245  0103A4  0100               	movlb	0	; () banked
  3246  0103A6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3247  0103A8  A4D8               	btfss	status,2,c
  3248  0103AA  D02E               	goto	l8864
  3249  0103AC                     l8856:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;PIC18F27J53-killifish_light05.c: 214: light_mode = COMMAND_mode;
  3253  0103AC  0E02               	movlw	2
  3254  0103AE  0100               	movlb	0	; () banked
  3255  0103B0  6FED               	movwf	_light_mode& (0+255),b
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;PIC18F27J53-killifish_light05.c: 215: PWM_set(2, atoi(op2) * 250 / 100);
  3259  0103B2  C0CA  F066         	movff	terminal_operation@op2,atoi@s
  3260  0103B6  C0CB  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3261  0103BA  ECA5  F08D         	call	_atoi	;wreg free
  3262  0103BE  C066  F1B2         	movff	?_atoi,_terminal_operation$6627
  3263  0103C2  C067  F1B3         	movff	?_atoi+1,_terminal_operation$6627+1
  3264                           
  3265                           ;PIC18F27J53-killifish_light05.c: 215: PWM_set(2, atoi(op2) * 250 / 100);
  3266  0103C6  C1B2  F060         	movff	_terminal_operation$6627,___wmul@multiplier
  3267  0103CA  C1B3  F061         	movff	_terminal_operation$6627+1,___wmul@multiplier+1
  3268  0103CE  0E00               	movlw	0
  3269  0103D0  0100               	movlb	0	; () banked
  3270  0103D2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3271  0103D4  0EFA               	movlw	250
  3272  0103D6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3273  0103D8  EC68  F097         	call	___wmul	;wreg free
  3274  0103DC  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3275  0103E0  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3276  0103E4  0E00               	movlw	0
  3277  0103E6  0100               	movlb	0	; () banked
  3278  0103E8  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3279  0103EA  0E64               	movlw	100
  3280  0103EC  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3281  0103EE  ECA4  F090         	call	___awdiv	;wreg free
  3282  0103F2  C06D  F1B4         	movff	?___awdiv,_terminal_operation$6628
  3283  0103F6  C06E  F1B5         	movff	?___awdiv+1,_terminal_operation$6628+1
  3284                           
  3285                           ;PIC18F27J53-killifish_light05.c: 215: PWM_set(2, atoi(op2) * 250 / 100);
  3286  0103FA  C1B4  F075         	movff	_terminal_operation$6628,PWM_set@value
  3287  0103FE  C1B5  F076         	movff	_terminal_operation$6628+1,PWM_set@value+1
  3288  010402  0E02               	movlw	2
  3289  010404  ECD1  F08C         	call	_PWM_set
  3290  010408                     l8864:
  3291                           
  3292                           ;PIC18F27J53-killifish_light05.c: 216: }
  3293                           ;PIC18F27J53-killifish_light05.c: 217: if (!strcmp(op1, "w") || !strcmp(op1, "W")) {
  3294  010408  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3295  01040C  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3296  010410  0EF2               	movlw	low STR_59
  3297  010412  0100               	movlb	0	; () banked
  3298  010414  6F62               	movwf	strcmp@s2& (0+255),b
  3299  010416  0EFF               	movlw	high STR_59
  3300  010418  0100               	movlb	0	; () banked
  3301  01041A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3302  01041C  EC8D  F096         	call	_strcmp	;wreg free
  3303  010420  0100               	movlb	0	; () banked
  3304  010422  5160               	movf	?_strcmp& (0+255),w,b
  3305  010424  0100               	movlb	0	; () banked
  3306  010426  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3307  010428  B4D8               	btfsc	status,2,c
  3308  01042A  D012               	goto	l8868
  3309                           
  3310                           ; BSR set to: 0
  3311  01042C  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3312  010430  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3313  010434  0EEC               	movlw	low STR_60
  3314  010436  0100               	movlb	0	; () banked
  3315  010438  6F62               	movwf	strcmp@s2& (0+255),b
  3316  01043A  0EFF               	movlw	high STR_60
  3317  01043C  0100               	movlb	0	; () banked
  3318  01043E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3319  010440  EC8D  F096         	call	_strcmp	;wreg free
  3320  010444  0100               	movlb	0	; () banked
  3321  010446  5160               	movf	?_strcmp& (0+255),w,b
  3322  010448  0100               	movlb	0	; () banked
  3323  01044A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3324  01044C  A4D8               	btfss	status,2,c
  3325  01044E  D02E               	goto	l8876
  3326  010450                     l8868:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;PIC18F27J53-killifish_light05.c: 218: light_mode = COMMAND_mode;
  3330  010450  0E02               	movlw	2
  3331  010452  0100               	movlb	0	; () banked
  3332  010454  6FED               	movwf	_light_mode& (0+255),b
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;PIC18F27J53-killifish_light05.c: 219: PWM_set(3, atoi(op2) * 250 / 100);
  3336  010456  C0CA  F066         	movff	terminal_operation@op2,atoi@s
  3337  01045A  C0CB  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3338  01045E  ECA5  F08D         	call	_atoi	;wreg free
  3339  010462  C066  F1B2         	movff	?_atoi,_terminal_operation$6627
  3340  010466  C067  F1B3         	movff	?_atoi+1,_terminal_operation$6627+1
  3341                           
  3342                           ;PIC18F27J53-killifish_light05.c: 219: PWM_set(3, atoi(op2) * 250 / 100);
  3343  01046A  C1B2  F060         	movff	_terminal_operation$6627,___wmul@multiplier
  3344  01046E  C1B3  F061         	movff	_terminal_operation$6627+1,___wmul@multiplier+1
  3345  010472  0E00               	movlw	0
  3346  010474  0100               	movlb	0	; () banked
  3347  010476  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3348  010478  0EFA               	movlw	250
  3349  01047A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3350  01047C  EC68  F097         	call	___wmul	;wreg free
  3351  010480  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3352  010484  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3353  010488  0E00               	movlw	0
  3354  01048A  0100               	movlb	0	; () banked
  3355  01048C  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3356  01048E  0E64               	movlw	100
  3357  010490  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3358  010492  ECA4  F090         	call	___awdiv	;wreg free
  3359  010496  C06D  F1B4         	movff	?___awdiv,_terminal_operation$6628
  3360  01049A  C06E  F1B5         	movff	?___awdiv+1,_terminal_operation$6628+1
  3361                           
  3362                           ;PIC18F27J53-killifish_light05.c: 219: PWM_set(3, atoi(op2) * 250 / 100);
  3363  01049E  C1B4  F075         	movff	_terminal_operation$6628,PWM_set@value
  3364  0104A2  C1B5  F076         	movff	_terminal_operation$6628+1,PWM_set@value+1
  3365  0104A6  0E03               	movlw	3
  3366  0104A8  ECD1  F08C         	call	_PWM_set
  3367  0104AC                     l8876:
  3368                           
  3369                           ;PIC18F27J53-killifish_light05.c: 220: }
  3370                           ;PIC18F27J53-killifish_light05.c: 221: if (!strcmp(op1, "clear")) {
  3371  0104AC  C0C8  F060         	movff	terminal_operation@op1,strcmp@s1
  3372  0104B0  C0C9  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3373  0104B4  0E9D               	movlw	low STR_61
  3374  0104B6  0100               	movlb	0	; () banked
  3375  0104B8  6F62               	movwf	strcmp@s2& (0+255),b
  3376  0104BA  0EFF               	movlw	high STR_61
  3377  0104BC  0100               	movlb	0	; () banked
  3378  0104BE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3379  0104C0  EC8D  F096         	call	_strcmp	;wreg free
  3380  0104C4  0100               	movlb	0	; () banked
  3381  0104C6  5160               	movf	?_strcmp& (0+255),w,b
  3382  0104C8  0100               	movlb	0	; () banked
  3383  0104CA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3384  0104CC  A4D8               	btfss	status,2,c
  3385  0104CE  0012               	return	
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;PIC18F27J53-killifish_light05.c: 222: light_mode = COMMAND_mode;
  3389  0104D0  0E02               	movlw	2
  3390  0104D2  0100               	movlb	0	; () banked
  3391  0104D4  6FED               	movwf	_light_mode& (0+255),b
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;PIC18F27J53-killifish_light05.c: 223: PWM_set(0, 0);
  3395  0104D6  0E00               	movlw	0
  3396  0104D8  0100               	movlb	0	; () banked
  3397  0104DA  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3398  0104DC  0E00               	movlw	0
  3399  0104DE  6F75               	movwf	PWM_set@value& (0+255),b
  3400  0104E0  0E00               	movlw	0
  3401  0104E2  ECD1  F08C         	call	_PWM_set
  3402                           
  3403                           ;PIC18F27J53-killifish_light05.c: 224: PWM_set(1, 0);
  3404  0104E6  0E00               	movlw	0
  3405  0104E8  0100               	movlb	0	; () banked
  3406  0104EA  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3407  0104EC  0E00               	movlw	0
  3408  0104EE  6F75               	movwf	PWM_set@value& (0+255),b
  3409  0104F0  0E01               	movlw	1
  3410  0104F2  ECD1  F08C         	call	_PWM_set
  3411                           
  3412                           ;PIC18F27J53-killifish_light05.c: 225: PWM_set(2, 0);
  3413  0104F6  0E00               	movlw	0
  3414  0104F8  0100               	movlb	0	; () banked
  3415  0104FA  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3416  0104FC  0E00               	movlw	0
  3417  0104FE  6F75               	movwf	PWM_set@value& (0+255),b
  3418  010500  0E02               	movlw	2
  3419  010502  ECD1  F08C         	call	_PWM_set
  3420                           
  3421                           ;PIC18F27J53-killifish_light05.c: 226: PWM_set(3, 0);
  3422  010506  0E00               	movlw	0
  3423  010508  0100               	movlb	0	; () banked
  3424  01050A  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3425  01050C  0E00               	movlw	0
  3426  01050E  6F75               	movwf	PWM_set@value& (0+255),b
  3427  010510  0E03               	movlw	3
  3428  010512  ECD1  F08C         	call	_PWM_set
  3429  010516  0012               	return	
  3430  010518                     __end_of_terminal_operation:
  3431                           	opt stack 0
  3432                           tblptru	equ	0xFF8
  3433                           tblptrh	equ	0xFF7
  3434                           tblptrl	equ	0xFF6
  3435                           tablat	equ	0xFF5
  3436                           prodh	equ	0xFF4
  3437                           prodl	equ	0xFF3
  3438                           intcon	equ	0xFF2
  3439                           postinc0	equ	0xFEE
  3440                           wreg	equ	0xFE8
  3441                           postdec1	equ	0xFE5
  3442                           fsr1h	equ	0xFE2
  3443                           fsr1l	equ	0xFE1
  3444                           indf2	equ	0xFDF
  3445                           fsr2h	equ	0xFDA
  3446                           fsr2l	equ	0xFD9
  3447                           status	equ	0xFD8
  3448                           
  3449 ;; *************** function _terminal_time *****************
  3450 ;; Defined at:
  3451 ;;		line 93 in file "../My_library/My_terminal.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  tx              2   91[BANK0 ] PTR struct ringbuf
  3454 ;;		 -> uart_tx(8), 
  3455 ;;  op0             2   93[BANK0 ] PTR unsigned char 
  3456 ;;		 -> terminal_task@op0(25), 
  3457 ;;  op1             2   95[BANK0 ] PTR unsigned char 
  3458 ;;		 -> terminal_task@op1(25), 
  3459 ;;  op2             2   97[BANK0 ] PTR unsigned char 
  3460 ;;		 -> terminal_task@op2(25), 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;		None               void
  3465 ;; Registers used:
  3466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3472 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;Total ram usage:        9 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:   10
  3479 ;; This function calls:
  3480 ;;		_atoi
  3481 ;;		_month_length
  3482 ;;		_print_time
  3483 ;;		_strcmp
  3484 ;;		_terminal_at_hand
  3485 ;; This function is called by:
  3486 ;;		_terminal_operation
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text3
  3491  010972                     __ptext3:
  3492                           	opt stack 0
  3493  010972                     _terminal_time:
  3494                           	opt stack 18
  3495                           
  3496                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3497                           
  3498                           ;incstack = 0
  3499  010972  C0BD  F060         	movff	terminal_time@op0,strcmp@s1
  3500  010976  C0BE  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3501  01097A  0E63               	movlw	low STR_25
  3502  01097C  0100               	movlb	0	; () banked
  3503  01097E  6F62               	movwf	strcmp@s2& (0+255),b
  3504  010980  0EFF               	movlw	high STR_25
  3505  010982  0100               	movlb	0	; () banked
  3506  010984  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3507  010986  EC8D  F096         	call	_strcmp	;wreg free
  3508  01098A  0100               	movlb	0	; () banked
  3509  01098C  5160               	movf	?_strcmp& (0+255),w,b
  3510  01098E  0100               	movlb	0	; () banked
  3511  010990  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3512  010992  B4D8               	btfsc	status,2,c
  3513  010994  D012               	goto	l8564
  3514                           
  3515                           ; BSR set to: 0
  3516  010996  C0BD  F060         	movff	terminal_time@op0,strcmp@s1
  3517  01099A  C0BE  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3518  01099E  0EE2               	movlw	low (STR_27+1)
  3519  0109A0  0100               	movlb	0	; () banked
  3520  0109A2  6F62               	movwf	strcmp@s2& (0+255),b
  3521  0109A4  0EFF               	movlw	high (STR_27+1)
  3522  0109A6  0100               	movlb	0	; () banked
  3523  0109A8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3524  0109AA  EC8D  F096         	call	_strcmp	;wreg free
  3525  0109AE  0100               	movlb	0	; () banked
  3526  0109B0  5160               	movf	?_strcmp& (0+255),w,b
  3527  0109B2  0100               	movlb	0	; () banked
  3528  0109B4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3529  0109B6  A4D8               	btfss	status,2,c
  3530  0109B8  D006               	goto	l8566
  3531  0109BA                     l8564:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;My_terminal.c: 95: print_time(tx);
  3535  0109BA  C0BB  F094         	movff	terminal_time@tx,print_time@tx
  3536  0109BE  C0BC  F095         	movff	terminal_time@tx+1,print_time@tx+1
  3537  0109C2  EC57  F094         	call	_print_time	;wreg free
  3538  0109C6                     l8566:
  3539                           
  3540                           ;My_terminal.c: 96: }
  3541                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3542  0109C6  C0BD  F060         	movff	terminal_time@op0,strcmp@s1
  3543  0109CA  C0BE  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3544  0109CE  0EE1               	movlw	low STR_27
  3545  0109D0  0100               	movlb	0	; () banked
  3546  0109D2  6F62               	movwf	strcmp@s2& (0+255),b
  3547  0109D4  0EFF               	movlw	high STR_27
  3548  0109D6  0100               	movlb	0	; () banked
  3549  0109D8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3550  0109DA  EC8D  F096         	call	_strcmp	;wreg free
  3551  0109DE  0100               	movlb	0	; () banked
  3552  0109E0  5160               	movf	?_strcmp& (0+255),w,b
  3553  0109E2  0100               	movlb	0	; () banked
  3554  0109E4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3555  0109E6  B4D8               	btfsc	status,2,c
  3556  0109E8  D012               	goto	l8570
  3557                           
  3558                           ; BSR set to: 0
  3559  0109EA  C0BD  F060         	movff	terminal_time@op0,strcmp@s1
  3560  0109EE  C0BE  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3561  0109F2  0E57               	movlw	low STR_28
  3562  0109F4  0100               	movlb	0	; () banked
  3563  0109F6  6F62               	movwf	strcmp@s2& (0+255),b
  3564  0109F8  0EFF               	movlw	high STR_28
  3565  0109FA  0100               	movlb	0	; () banked
  3566  0109FC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3567  0109FE  EC8D  F096         	call	_strcmp	;wreg free
  3568  010A02  0100               	movlb	0	; () banked
  3569  010A04  5160               	movf	?_strcmp& (0+255),w,b
  3570  010A06  0100               	movlb	0	; () banked
  3571  010A08  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3572  010A0A  A4D8               	btfss	status,2,c
  3573  010A0C  0012               	return	
  3574  010A0E                     l8570:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3578  010A0E  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3579  010A12  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3580  010A16  0EDC               	movlw	low (STR_34+2)
  3581  010A18  0100               	movlb	0	; () banked
  3582  010A1A  6F62               	movwf	strcmp@s2& (0+255),b
  3583  010A1C  0EFF               	movlw	high (STR_34+2)
  3584  010A1E  0100               	movlb	0	; () banked
  3585  010A20  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3586  010A22  EC8D  F096         	call	_strcmp	;wreg free
  3587  010A26  0100               	movlb	0	; () banked
  3588  010A28  5160               	movf	?_strcmp& (0+255),w,b
  3589  010A2A  0100               	movlb	0	; () banked
  3590  010A2C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3591  010A2E  B4D8               	btfsc	status,2,c
  3592  010A30  D012               	goto	l8574
  3593                           
  3594                           ; BSR set to: 0
  3595  010A32  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3596  010A36  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3597  010A3A  0EB3               	movlw	low STR_30
  3598  010A3C  0100               	movlb	0	; () banked
  3599  010A3E  6F62               	movwf	strcmp@s2& (0+255),b
  3600  010A40  0EFF               	movlw	high STR_30
  3601  010A42  0100               	movlb	0	; () banked
  3602  010A44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3603  010A46  EC8D  F096         	call	_strcmp	;wreg free
  3604  010A4A  0100               	movlb	0	; () banked
  3605  010A4C  5160               	movf	?_strcmp& (0+255),w,b
  3606  010A4E  0100               	movlb	0	; () banked
  3607  010A50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3608  010A52  A4D8               	btfss	status,2,c
  3609  010A54  D01C               	goto	l8576
  3610  010A56                     l8574:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3614  010A56  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3615  010A5A  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3616  010A5E  0E4D               	movlw	low (_now+10)
  3617  010A60  0100               	movlb	0	; () banked
  3618  010A62  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3619  010A64  0E01               	movlw	high (_now+10)
  3620  010A66  0100               	movlb	0	; () banked
  3621  010A68  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3622  010A6A  0E00               	movlw	0
  3623  010A6C  0100               	movlb	0	; () banked
  3624  010A6E  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3625  010A70  0E63               	movlw	99
  3626  010A72  0100               	movlb	0	; () banked
  3627  010A74  6FB9               	movwf	terminal_at_hand@max& (0+255),b
  3628  010A76  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3629  010A7A  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3630  010A7E  ECA5  F08D         	call	_atoi	;wreg free
  3631  010A82  0100               	movlb	0	; () banked
  3632  010A84  5166               	movf	?_atoi& (0+255),w,b
  3633  010A86  0100               	movlb	0	; () banked
  3634  010A88  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3635  010A8A  EC2E  F096         	call	_terminal_at_hand	;wreg free
  3636  010A8E                     l8576:
  3637                           
  3638                           ;My_terminal.c: 100: }
  3639                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3640  010A8E  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3641  010A92  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3642  010A96  0EC8               	movlw	low (STR_52+2)
  3643  010A98  0100               	movlb	0	; () banked
  3644  010A9A  6F62               	movwf	strcmp@s2& (0+255),b
  3645  010A9C  0EFF               	movlw	high (STR_52+2)
  3646  010A9E  0100               	movlb	0	; () banked
  3647  010AA0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3648  010AA2  EC8D  F096         	call	_strcmp	;wreg free
  3649  010AA6  0100               	movlb	0	; () banked
  3650  010AA8  5160               	movf	?_strcmp& (0+255),w,b
  3651  010AAA  0100               	movlb	0	; () banked
  3652  010AAC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3653  010AAE  B4D8               	btfsc	status,2,c
  3654  010AB0  D012               	goto	l8580
  3655                           
  3656                           ; BSR set to: 0
  3657  010AB2  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3658  010AB6  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3659  010ABA  0EA3               	movlw	low STR_32
  3660  010ABC  0100               	movlb	0	; () banked
  3661  010ABE  6F62               	movwf	strcmp@s2& (0+255),b
  3662  010AC0  0EFF               	movlw	high STR_32
  3663  010AC2  0100               	movlb	0	; () banked
  3664  010AC4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3665  010AC6  EC8D  F096         	call	_strcmp	;wreg free
  3666  010ACA  0100               	movlb	0	; () banked
  3667  010ACC  5160               	movf	?_strcmp& (0+255),w,b
  3668  010ACE  0100               	movlb	0	; () banked
  3669  010AD0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3670  010AD2  A4D8               	btfss	status,2,c
  3671  010AD4  D01C               	goto	l8582
  3672  010AD6                     l8580:
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3676  010AD6  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3677  010ADA  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3678  010ADE  0E4C               	movlw	low (_now+9)
  3679  010AE0  0100               	movlb	0	; () banked
  3680  010AE2  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3681  010AE4  0E01               	movlw	high (_now+9)
  3682  010AE6  0100               	movlb	0	; () banked
  3683  010AE8  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3684  010AEA  0E01               	movlw	1
  3685  010AEC  0100               	movlb	0	; () banked
  3686  010AEE  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3687  010AF0  0E0C               	movlw	12
  3688  010AF2  0100               	movlb	0	; () banked
  3689  010AF4  6FB9               	movwf	terminal_at_hand@max& (0+255),b
  3690  010AF6  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3691  010AFA  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3692  010AFE  ECA5  F08D         	call	_atoi	;wreg free
  3693  010B02  0100               	movlb	0	; () banked
  3694  010B04  5166               	movf	?_atoi& (0+255),w,b
  3695  010B06  0100               	movlb	0	; () banked
  3696  010B08  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3697  010B0A  EC2E  F096         	call	_terminal_at_hand	;wreg free
  3698  010B0E                     l8582:
  3699                           
  3700                           ;My_terminal.c: 103: }
  3701                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3702  010B0E  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3703  010B12  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3704  010B16  0EC0               	movlw	low (STR_1+3)
  3705  010B18  0100               	movlb	0	; () banked
  3706  010B1A  6F62               	movwf	strcmp@s2& (0+255),b
  3707  010B1C  0EFF               	movlw	high (STR_1+3)
  3708  010B1E  0100               	movlb	0	; () banked
  3709  010B20  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3710  010B22  EC8D  F096         	call	_strcmp	;wreg free
  3711  010B26  0100               	movlb	0	; () banked
  3712  010B28  5160               	movf	?_strcmp& (0+255),w,b
  3713  010B2A  0100               	movlb	0	; () banked
  3714  010B2C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3715  010B2E  B4D8               	btfsc	status,2,c
  3716  010B30  D012               	goto	l8586
  3717                           
  3718                           ; BSR set to: 0
  3719  010B32  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3720  010B36  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3721  010B3A  0EDA               	movlw	low STR_34
  3722  010B3C  0100               	movlb	0	; () banked
  3723  010B3E  6F62               	movwf	strcmp@s2& (0+255),b
  3724  010B40  0EFF               	movlw	high STR_34
  3725  010B42  0100               	movlb	0	; () banked
  3726  010B44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3727  010B46  EC8D  F096         	call	_strcmp	;wreg free
  3728  010B4A  0100               	movlb	0	; () banked
  3729  010B4C  5160               	movf	?_strcmp& (0+255),w,b
  3730  010B4E  0100               	movlb	0	; () banked
  3731  010B50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3732  010B52  A4D8               	btfss	status,2,c
  3733  010B54  D023               	goto	l8590
  3734  010B56                     l8586:
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3738  010B56  C14C  F020         	movff	_now+9,month_length@month
  3739  010B5A  0101               	movlb	1	; () banked
  3740  010B5C  514D               	movf	(_now+10)& (0+255),w,b
  3741  010B5E  EC95  F08E         	call	_month_length
  3742  010B62  0100               	movlb	0	; () banked
  3743  010B64  6FC3               	movwf	_terminal_time$6626& (0+255),b
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3747  010B66  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3748  010B6A  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3749  010B6E  0E4B               	movlw	low (_now+8)
  3750  010B70  0100               	movlb	0	; () banked
  3751  010B72  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3752  010B74  0E01               	movlw	high (_now+8)
  3753  010B76  0100               	movlb	0	; () banked
  3754  010B78  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3755  010B7A  0E01               	movlw	1
  3756  010B7C  0100               	movlb	0	; () banked
  3757  010B7E  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3758  010B80  C0C3  F0B9         	movff	_terminal_time$6626,terminal_at_hand@max
  3759  010B84  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3760  010B88  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3761  010B8C  ECA5  F08D         	call	_atoi	;wreg free
  3762  010B90  0100               	movlb	0	; () banked
  3763  010B92  5166               	movf	?_atoi& (0+255),w,b
  3764  010B94  0100               	movlb	0	; () banked
  3765  010B96  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3766  010B98  EC2E  F096         	call	_terminal_at_hand	;wreg free
  3767  010B9C                     l8590:
  3768                           
  3769                           ;My_terminal.c: 106: }
  3770                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3771  010B9C  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3772  010BA0  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3773  010BA4  0EA7               	movlw	low (STR_32+4)
  3774  010BA6  0100               	movlb	0	; () banked
  3775  010BA8  6F62               	movwf	strcmp@s2& (0+255),b
  3776  010BAA  0EFF               	movlw	high (STR_32+4)
  3777  010BAC  0100               	movlb	0	; () banked
  3778  010BAE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3779  010BB0  EC8D  F096         	call	_strcmp	;wreg free
  3780  010BB4  0100               	movlb	0	; () banked
  3781  010BB6  5160               	movf	?_strcmp& (0+255),w,b
  3782  010BB8  0100               	movlb	0	; () banked
  3783  010BBA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3784  010BBC  B4D8               	btfsc	status,2,c
  3785  010BBE  D012               	goto	l8594
  3786                           
  3787                           ; BSR set to: 0
  3788  010BC0  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3789  010BC4  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3790  010BC8  0EB8               	movlw	low STR_36
  3791  010BCA  0100               	movlb	0	; () banked
  3792  010BCC  6F62               	movwf	strcmp@s2& (0+255),b
  3793  010BCE  0EFF               	movlw	high STR_36
  3794  010BD0  0100               	movlb	0	; () banked
  3795  010BD2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3796  010BD4  EC8D  F096         	call	_strcmp	;wreg free
  3797  010BD8  0100               	movlb	0	; () banked
  3798  010BDA  5160               	movf	?_strcmp& (0+255),w,b
  3799  010BDC  0100               	movlb	0	; () banked
  3800  010BDE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3801  010BE0  A4D8               	btfss	status,2,c
  3802  010BE2  D01C               	goto	l8596
  3803  010BE4                     l8594:
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3807  010BE4  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3808  010BE8  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3809  010BEC  0E49               	movlw	low (_now+6)
  3810  010BEE  0100               	movlb	0	; () banked
  3811  010BF0  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3812  010BF2  0E01               	movlw	high (_now+6)
  3813  010BF4  0100               	movlb	0	; () banked
  3814  010BF6  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3815  010BF8  0E00               	movlw	0
  3816  010BFA  0100               	movlb	0	; () banked
  3817  010BFC  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3818  010BFE  0E17               	movlw	23
  3819  010C00  0100               	movlb	0	; () banked
  3820  010C02  6FB9               	movwf	terminal_at_hand@max& (0+255),b
  3821  010C04  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3822  010C08  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3823  010C0C  ECA5  F08D         	call	_atoi	;wreg free
  3824  010C10  0100               	movlb	0	; () banked
  3825  010C12  5166               	movf	?_atoi& (0+255),w,b
  3826  010C14  0100               	movlb	0	; () banked
  3827  010C16  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3828  010C18  EC2E  F096         	call	_terminal_at_hand	;wreg free
  3829  010C1C                     l8596:
  3830                           
  3831                           ;My_terminal.c: 109: }
  3832                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3833  010C1C  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3834  010C20  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3835  010C24  0ED0               	movlw	low (STR_51+2)
  3836  010C26  0100               	movlb	0	; () banked
  3837  010C28  6F62               	movwf	strcmp@s2& (0+255),b
  3838  010C2A  0EFF               	movlw	high (STR_51+2)
  3839  010C2C  0100               	movlb	0	; () banked
  3840  010C2E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3841  010C30  EC8D  F096         	call	_strcmp	;wreg free
  3842  010C34  0100               	movlb	0	; () banked
  3843  010C36  5160               	movf	?_strcmp& (0+255),w,b
  3844  010C38  0100               	movlb	0	; () banked
  3845  010C3A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3846  010C3C  B4D8               	btfsc	status,2,c
  3847  010C3E  D012               	goto	l8600
  3848                           
  3849                           ; BSR set to: 0
  3850  010C40  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3851  010C44  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3852  010C48  0E96               	movlw	low STR_38
  3853  010C4A  0100               	movlb	0	; () banked
  3854  010C4C  6F62               	movwf	strcmp@s2& (0+255),b
  3855  010C4E  0EFF               	movlw	high STR_38
  3856  010C50  0100               	movlb	0	; () banked
  3857  010C52  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3858  010C54  EC8D  F096         	call	_strcmp	;wreg free
  3859  010C58  0100               	movlb	0	; () banked
  3860  010C5A  5160               	movf	?_strcmp& (0+255),w,b
  3861  010C5C  0100               	movlb	0	; () banked
  3862  010C5E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3863  010C60  A4D8               	btfss	status,2,c
  3864  010C62  D01C               	goto	l8602
  3865  010C64                     l8600:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3869  010C64  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3870  010C68  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3871  010C6C  0E48               	movlw	low (_now+5)
  3872  010C6E  0100               	movlb	0	; () banked
  3873  010C70  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3874  010C72  0E01               	movlw	high (_now+5)
  3875  010C74  0100               	movlb	0	; () banked
  3876  010C76  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3877  010C78  0E00               	movlw	0
  3878  010C7A  0100               	movlb	0	; () banked
  3879  010C7C  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3880  010C7E  0E3B               	movlw	59
  3881  010C80  0100               	movlb	0	; () banked
  3882  010C82  6FB9               	movwf	terminal_at_hand@max& (0+255),b
  3883  010C84  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3884  010C88  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3885  010C8C  ECA5  F08D         	call	_atoi	;wreg free
  3886  010C90  0100               	movlb	0	; () banked
  3887  010C92  5166               	movf	?_atoi& (0+255),w,b
  3888  010C94  0100               	movlb	0	; () banked
  3889  010C96  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3890  010C98  EC2E  F096         	call	_terminal_at_hand	;wreg free
  3891  010C9C                     l8602:
  3892                           
  3893                           ;My_terminal.c: 112: }
  3894                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  3895  010C9C  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3896  010CA0  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3897  010CA4  0EF4               	movlw	low STR_39
  3898  010CA6  0100               	movlb	0	; () banked
  3899  010CA8  6F62               	movwf	strcmp@s2& (0+255),b
  3900  010CAA  0EFF               	movlw	high STR_39
  3901  010CAC  0100               	movlb	0	; () banked
  3902  010CAE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3903  010CB0  EC8D  F096         	call	_strcmp	;wreg free
  3904  010CB4  0100               	movlb	0	; () banked
  3905  010CB6  5160               	movf	?_strcmp& (0+255),w,b
  3906  010CB8  0100               	movlb	0	; () banked
  3907  010CBA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3908  010CBC  B4D8               	btfsc	status,2,c
  3909  010CBE  D012               	goto	l8606
  3910                           
  3911                           ; BSR set to: 0
  3912  010CC0  C0BF  F060         	movff	terminal_time@op1,strcmp@s1
  3913  010CC4  C0C0  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3914  010CC8  0E8F               	movlw	low STR_40
  3915  010CCA  0100               	movlb	0	; () banked
  3916  010CCC  6F62               	movwf	strcmp@s2& (0+255),b
  3917  010CCE  0EFF               	movlw	high STR_40
  3918  010CD0  0100               	movlb	0	; () banked
  3919  010CD2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3920  010CD4  EC8D  F096         	call	_strcmp	;wreg free
  3921  010CD8  0100               	movlb	0	; () banked
  3922  010CDA  5160               	movf	?_strcmp& (0+255),w,b
  3923  010CDC  0100               	movlb	0	; () banked
  3924  010CDE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3925  010CE0  A4D8               	btfss	status,2,c
  3926  010CE2  0012               	return	
  3927  010CE4                     l8606:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  3931  010CE4  C0BB  F0B4         	movff	terminal_time@tx,terminal_at_hand@tx
  3932  010CE8  C0BC  F0B5         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3933  010CEC  0E47               	movlw	low (_now+4)
  3934  010CEE  0100               	movlb	0	; () banked
  3935  010CF0  6FB6               	movwf	terminal_at_hand@hand& (0+255),b
  3936  010CF2  0E01               	movlw	high (_now+4)
  3937  010CF4  0100               	movlb	0	; () banked
  3938  010CF6  6FB7               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3939  010CF8  0E00               	movlw	0
  3940  010CFA  0100               	movlb	0	; () banked
  3941  010CFC  6FB8               	movwf	terminal_at_hand@min& (0+255),b
  3942  010CFE  0E3B               	movlw	59
  3943  010D00  0100               	movlb	0	; () banked
  3944  010D02  6FB9               	movwf	terminal_at_hand@max& (0+255),b
  3945  010D04  C0C1  F066         	movff	terminal_time@op2,atoi@s
  3946  010D08  C0C2  F067         	movff	terminal_time@op2+1,atoi@s+1
  3947  010D0C  ECA5  F08D         	call	_atoi	;wreg free
  3948  010D10  0100               	movlb	0	; () banked
  3949  010D12  5166               	movf	?_atoi& (0+255),w,b
  3950  010D14  0100               	movlb	0	; () banked
  3951  010D16  6FBA               	movwf	terminal_at_hand@value& (0+255),b
  3952  010D18  EC2E  F096         	call	_terminal_at_hand	;wreg free
  3953  010D1C  0012               	return	
  3954  010D1E                     __end_of_terminal_time:
  3955                           	opt stack 0
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           prodh	equ	0xFF4
  3961                           prodl	equ	0xFF3
  3962                           intcon	equ	0xFF2
  3963                           postinc0	equ	0xFEE
  3964                           wreg	equ	0xFE8
  3965                           postdec1	equ	0xFE5
  3966                           fsr1h	equ	0xFE2
  3967                           fsr1l	equ	0xFE1
  3968                           indf2	equ	0xFDF
  3969                           fsr2h	equ	0xFDA
  3970                           fsr2l	equ	0xFD9
  3971                           status	equ	0xFD8
  3972                           
  3973 ;; *************** function _terminal_at_hand *****************
  3974 ;; Defined at:
  3975 ;;		line 82 in file "../My_library/My_terminal.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  tx              2   84[BANK0 ] PTR struct ringbuf
  3978 ;;		 -> uart_tx(8), 
  3979 ;;  hand            2   86[BANK0 ] PTR unsigned char 
  3980 ;;		 -> now(14), 
  3981 ;;  min             1   88[BANK0 ] unsigned char 
  3982 ;;  max             1   89[BANK0 ] unsigned char 
  3983 ;;  value           1   90[BANK0 ] unsigned char 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;		None               void
  3988 ;; Registers used:
  3989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3995 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3998 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3999 ;;Total ram usage:        7 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    9
  4002 ;; This function calls:
  4003 ;;		_RTCC_from_caltime
  4004 ;;		_print_time
  4005 ;;		_ringbuf_put_str
  4006 ;; This function is called by:
  4007 ;;		_terminal_time
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text4
  4012  012C5C                     __ptext4:
  4013                           	opt stack 0
  4014  012C5C                     _terminal_at_hand:
  4015                           	opt stack 18
  4016                           
  4017                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4018                           
  4019                           ;incstack = 0
  4020  012C5C  0100               	movlb	0	; () banked
  4021  012C5E  51B8               	movf	terminal_at_hand@min& (0+255),w,b
  4022  012C60  0100               	movlb	0	; () banked
  4023  012C62  5DBA               	subwf	terminal_at_hand@value& (0+255),w,b
  4024  012C64  A0D8               	btfss	status,0,c
  4025  012C66  D01E               	goto	l8514
  4026                           
  4027                           ; BSR set to: 0
  4028  012C68  0100               	movlb	0	; () banked
  4029  012C6A  51BA               	movf	terminal_at_hand@value& (0+255),w,b
  4030  012C6C  0100               	movlb	0	; () banked
  4031  012C6E  5DB9               	subwf	terminal_at_hand@max& (0+255),w,b
  4032  012C70  A0D8               	btfss	status,0,c
  4033  012C72  D018               	goto	l8514
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;My_terminal.c: 84: *hand = value;
  4037  012C74  C0B6  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4038  012C78  C0B7  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4039  012C7C  C0BA  FFDF         	movff	terminal_at_hand@value,indf2
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4043  012C80  0E43               	movlw	low _now
  4044  012C82  0100               	movlb	0	; () banked
  4045  012C84  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  4046  012C86  0E01               	movlw	high _now
  4047  012C88  0100               	movlb	0	; () banked
  4048  012C8A  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  4049  012C8C  ECBF  F097         	call	_RTCC_from_caltime	;wreg free
  4050                           
  4051                           ;My_terminal.c: 86: time_change_flag = 1;
  4052  012C90  0E01               	movlw	1
  4053  012C92  0100               	movlb	0	; () banked
  4054  012C94  6FEE               	movwf	_time_change_flag& (0+255),b
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;My_terminal.c: 87: print_time(tx);
  4058  012C96  C0B4  F094         	movff	terminal_at_hand@tx,print_time@tx
  4059  012C9A  C0B5  F095         	movff	terminal_at_hand@tx+1,print_time@tx+1
  4060  012C9E  EC57  F094         	call	_print_time	;wreg free
  4061                           
  4062                           ;My_terminal.c: 88: } else {
  4063  012CA2  0012               	return	
  4064  012CA4                     l8514:
  4065                           
  4066                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  4067  012CA4  C0B4  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  4068  012CA8  C0B5  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  4069  012CAC  0E80               	movlw	low STR_24
  4070  012CAE  0100               	movlb	0	; () banked
  4071  012CB0  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4072  012CB2  0EFF               	movlw	high STR_24
  4073  012CB4  0100               	movlb	0	; () banked
  4074  012CB6  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4075  012CB8  ECFC  F095         	call	_ringbuf_put_str	;wreg free
  4076  012CBC  0012               	return	
  4077  012CBE                     __end_of_terminal_at_hand:
  4078                           	opt stack 0
  4079                           tblptru	equ	0xFF8
  4080                           tblptrh	equ	0xFF7
  4081                           tblptrl	equ	0xFF6
  4082                           tablat	equ	0xFF5
  4083                           prodh	equ	0xFF4
  4084                           prodl	equ	0xFF3
  4085                           intcon	equ	0xFF2
  4086                           postinc0	equ	0xFEE
  4087                           wreg	equ	0xFE8
  4088                           postdec1	equ	0xFE5
  4089                           fsr1h	equ	0xFE2
  4090                           fsr1l	equ	0xFE1
  4091                           indf2	equ	0xFDF
  4092                           fsr2h	equ	0xFDA
  4093                           fsr2l	equ	0xFD9
  4094                           status	equ	0xFD8
  4095                           
  4096 ;; *************** function _print_time *****************
  4097 ;; Defined at:
  4098 ;;		line 68 in file "../My_library/My_terminal.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  tx              2   52[BANK0 ] PTR struct ringbuf
  4101 ;;		 -> uart_tx(8), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  str            30   54[BANK0 ] unsigned char [30]
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4116 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4117 ;;Total ram usage:       32 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    8
  4120 ;; This function calls:
  4121 ;;		_RTCC_from_RTCC
  4122 ;;		_ringbuf_put_str
  4123 ;;		_sprintf
  4124 ;; This function is called by:
  4125 ;;		_terminal_at_hand
  4126 ;;		_terminal_time
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text5
  4131  0128AE                     __ptext5:
  4132                           	opt stack 0
  4133  0128AE                     _print_time:
  4134                           	opt stack 18
  4135                           
  4136                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  4137                           
  4138                           ;incstack = 0
  4139  0128AE  0E43               	movlw	low _now
  4140  0128B0  0100               	movlb	0	; () banked
  4141  0128B2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  4142  0128B4  0E01               	movlw	high _now
  4143  0128B6  0100               	movlb	0	; () banked
  4144  0128B8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  4145  0128BA  EC2E  F098         	call	_RTCC_from_RTCC	;wreg free
  4146                           
  4147                           ;My_terminal.c: 70: char str[30];
  4148                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4149                           ;My_terminal.c: 72: now.YY,
  4150                           ;My_terminal.c: 73: now.MM,
  4151                           ;My_terminal.c: 74: now.DD,
  4152                           ;My_terminal.c: 75: weekday_3char[now.EE],
  4153                           ;My_terminal.c: 76: now.hh,
  4154                           ;My_terminal.c: 77: now.mm,
  4155                           ;My_terminal.c: 78: now.ss);
  4156  0128BE  0E96               	movlw	low print_time@str
  4157  0128C0  0100               	movlb	0	; () banked
  4158  0128C2  6F71               	movwf	sprintf@sp& (0+255),b
  4159  0128C4  0E00               	movlw	high print_time@str
  4160  0128C6  0100               	movlb	0	; () banked
  4161  0128C8  6F72               	movwf	(sprintf@sp+1)& (0+255),b
  4162  0128CA  0E23               	movlw	low STR_23
  4163  0128CC  0100               	movlb	0	; () banked
  4164  0128CE  6F73               	movwf	sprintf@f& (0+255),b
  4165  0128D0  0EFF               	movlw	high STR_23
  4166  0128D2  0100               	movlb	0	; () banked
  4167  0128D4  6F74               	movwf	(sprintf@f+1)& (0+255),b
  4168  0128D6  C14D  F075         	movff	_now+10,?_sprintf+4
  4169  0128DA  0100               	movlb	0	; () banked
  4170  0128DC  6B76               	clrf	(?_sprintf+5)& (0+255),b
  4171  0128DE  C14C  F077         	movff	_now+9,?_sprintf+6
  4172  0128E2  0100               	movlb	0	; () banked
  4173  0128E4  6B78               	clrf	(?_sprintf+7)& (0+255),b
  4174  0128E6  C14B  F079         	movff	_now+8,?_sprintf+8
  4175  0128EA  0100               	movlb	0	; () banked
  4176  0128EC  6B7A               	clrf	(?_sprintf+9)& (0+255),b
  4177  0128EE  0101               	movlb	1	; () banked
  4178  0128F0  514A               	movf	(_now+7)& (0+255),w,b
  4179  0128F2  0D04               	mullw	4
  4180  0128F4  0EB6               	movlw	low _weekday_3char
  4181  0128F6  24F3               	addwf	prodl,w,c
  4182  0128F8  0100               	movlb	0	; () banked
  4183  0128FA  6F7B               	movwf	(?_sprintf+10)& (0+255),b
  4184  0128FC  0EFD               	movlw	high _weekday_3char
  4185  0128FE  20F4               	addwfc	prodh,w,c
  4186  012900  0100               	movlb	0	; () banked
  4187  012902  6F7C               	movwf	(?_sprintf+11)& (0+255),b
  4188  012904  C149  F07D         	movff	_now+6,?_sprintf+12
  4189  012908  0100               	movlb	0	; () banked
  4190  01290A  6B7E               	clrf	(?_sprintf+13)& (0+255),b
  4191  01290C  C148  F07F         	movff	_now+5,?_sprintf+14
  4192  012910  0100               	movlb	0	; () banked
  4193  012912  6B80               	clrf	(?_sprintf+15)& (0+255),b
  4194  012914  C147  F081         	movff	_now+4,?_sprintf+16
  4195  012918  0100               	movlb	0	; () banked
  4196  01291A  6B82               	clrf	(?_sprintf+17)& (0+255),b
  4197  01291C  EC8C  F082         	call	_sprintf	;wreg free
  4198                           
  4199                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  4200  012920  C094  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  4201  012924  C095  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4202  012928  0E96               	movlw	low print_time@str
  4203  01292A  0100               	movlb	0	; () banked
  4204  01292C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4205  01292E  0E00               	movlw	high print_time@str
  4206  012930  0100               	movlb	0	; () banked
  4207  012932  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4208  012934  ECFC  F095         	call	_ringbuf_put_str	;wreg free
  4209  012938  0012               	return		;funcret
  4210  01293A                     __end_of_print_time:
  4211                           	opt stack 0
  4212                           tblptru	equ	0xFF8
  4213                           tblptrh	equ	0xFF7
  4214                           tblptrl	equ	0xFF6
  4215                           tablat	equ	0xFF5
  4216                           prodh	equ	0xFF4
  4217                           prodl	equ	0xFF3
  4218                           intcon	equ	0xFF2
  4219                           postinc0	equ	0xFEE
  4220                           wreg	equ	0xFE8
  4221                           postdec1	equ	0xFE5
  4222                           fsr1h	equ	0xFE2
  4223                           fsr1l	equ	0xFE1
  4224                           indf2	equ	0xFDF
  4225                           fsr2h	equ	0xFDA
  4226                           fsr2l	equ	0xFD9
  4227                           status	equ	0xFD8
  4228                           
  4229 ;; *************** function _sprintf *****************
  4230 ;; Defined at:
  4231 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  sp              2   17[BANK0 ] PTR unsigned char 
  4234 ;;		 -> terminal_operation@str(30), print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  4235 ;;  f               2   19[BANK0 ] PTR const unsigned char 
  4236 ;;		 -> STR_46(15), STR_23(37), STR_21(5), STR_1(5), 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  tmpval          4    0        struct .
  4239 ;;  width           2   50[BANK0 ] int 
  4240 ;;  len             2   46[BANK0 ] unsigned int 
  4241 ;;  val             2   44[BANK0 ] unsigned int 
  4242 ;;  cp              2   42[BANK0 ] PTR const unsigned char 
  4243 ;;		 -> STR_62(7), weekday_3char(28), 
  4244 ;;  ap              2   40[BANK0 ] PTR void [1]
  4245 ;;		 -> ?_sprintf(2), 
  4246 ;;  c               1   49[BANK0 ] char 
  4247 ;;  flag            1   48[BANK0 ] unsigned char 
  4248 ;;  prec            1   39[BANK0 ] char 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  2   17[BANK0 ] int 
  4251 ;; Registers used:
  4252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4258 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4259 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4260 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4261 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4262 ;;Total ram usage:       35 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    5
  4265 ;; This function calls:
  4266 ;;		___lwdiv
  4267 ;;		___lwmod
  4268 ;;		___wmul
  4269 ;;		_isdigit
  4270 ;; This function is called by:
  4271 ;;		_print_time
  4272 ;;		_terminal_operation
  4273 ;;		_display_dec
  4274 ;;		_print_time_dec
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text6
  4279  010518                     __ptext6:
  4280                           	opt stack 0
  4281  010518                     _sprintf:
  4282                           	opt stack 20
  4283                           
  4284                           ;doprnt.c: 494: va_list ap;
  4285                           ;doprnt.c: 499: signed char c;
  4286                           ;doprnt.c: 501: int width;
  4287                           ;doprnt.c: 506: signed char prec;
  4288                           ;doprnt.c: 508: unsigned char flag;
  4289                           ;doprnt.c: 523: union {
  4290                           ;doprnt.c: 524: unsigned long vd;
  4291                           ;doprnt.c: 525: double integ;
  4292                           ;doprnt.c: 526: } tmpval;
  4293                           ;doprnt.c: 528: unsigned int val;
  4294                           ;doprnt.c: 529: unsigned len;
  4295                           ;doprnt.c: 530: const char * cp;
  4296                           ;doprnt.c: 533: *ap = __va_start();
  4297                           
  4298                           ;incstack = 0
  4299  010518  0E75               	movlw	low (?_sprintf+4)
  4300  01051A  0100               	movlb	0	; () banked
  4301  01051C  6F88               	movwf	sprintf@ap& (0+255),b
  4302  01051E  0E00               	movlw	high (?_sprintf+4)
  4303  010520  0100               	movlb	0	; () banked
  4304  010522  6F89               	movwf	(sprintf@ap+1)& (0+255),b
  4305                           
  4306                           ;doprnt.c: 536: while(c = *f++) {
  4307  010524  D20F               	goto	l8486
  4308  010526                     l8346:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;doprnt.c: 538: if(c != '%')
  4312  010526  0E25               	movlw	37
  4313  010528  0100               	movlb	0	; () banked
  4314  01052A  1991               	xorwf	sprintf@c& (0+255),w,b
  4315  01052C  B4D8               	btfsc	status,2,c
  4316  01052E  D00A               	goto	l8352
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;doprnt.c: 540: {
  4320                           ;doprnt.c: 541: ((*sp++ = (c)));
  4321  010530  C071  FFD9         	movff	sprintf@sp,fsr2l
  4322  010534  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4323  010538  C091  FFDF         	movff	sprintf@c,indf2
  4324                           
  4325                           ; BSR set to: 0
  4326  01053C  0100               	movlb	0	; () banked
  4327  01053E  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4328  010540  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4329                           
  4330                           ;doprnt.c: 542: continue;
  4331  010542  D200               	goto	l8486
  4332  010544                     l8352:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;doprnt.c: 543: }
  4336                           ;doprnt.c: 546: width = 0;
  4337  010544  0E00               	movlw	0
  4338  010546  0100               	movlb	0	; () banked
  4339  010548  6F93               	movwf	(sprintf@width+1)& (0+255),b
  4340  01054A  0E00               	movlw	0
  4341  01054C  6F92               	movwf	sprintf@width& (0+255),b
  4342                           
  4343                           ;doprnt.c: 548: flag = 0;
  4344  01054E  0E00               	movlw	0
  4345  010550  0100               	movlb	0	; () banked
  4346  010552  6F90               	movwf	sprintf@flag& (0+255),b
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;doprnt.c: 551: switch(*f) {
  4350                           
  4351                           ;doprnt.c: 550: for(;;) {
  4352  010554  D005               	goto	l8358
  4353  010556                     l8354:
  4354                           
  4355                           ;doprnt.c: 580: flag |= 0x04;
  4356  010556  0100               	movlb	0	; () banked
  4357  010558  8590               	bsf	sprintf@flag& (0+255),2,b
  4358                           
  4359                           ;doprnt.c: 581: f++;
  4360  01055A  0100               	movlb	0	; () banked
  4361  01055C  4B73               	infsnz	sprintf@f& (0+255),f,b
  4362  01055E  2B74               	incf	(sprintf@f+1)& (0+255),f,b
  4363  010560                     l8358:
  4364  010560  C073  FFF6         	movff	sprintf@f,tblptrl
  4365  010564  C074  FFF7         	movff	sprintf@f+1,tblptrh
  4366  010568                     	if	0	;tblptru may be non-zero
  4367  010568                     	endif
  4368  010568                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4369  010568  0E00               	movlw	low (__mediumconst shr (0+16))
  4370  01056A  6EF8               	movwf	tblptru,c
  4371  01056C                     	endif
  4372  01056C  0008               	tblrd		*
  4373  01056E  50F5               	movf	tablat,w,c
  4374                           
  4375                           ; Switch size 1, requested type "space"
  4376                           ; Number of cases is 1, Range of values is 48 to 48
  4377                           ; switch strategies available:
  4378                           ; Name         Instructions Cycles
  4379                           ; simple_byte            4     3 (average)
  4380                           ;	Chosen strategy is simple_byte
  4381  010570  0A30               	xorlw	48	; case 48
  4382  010572  B4D8               	btfsc	status,2,c
  4383  010574  D7F0               	goto	l8354
  4384                           
  4385                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4386                           
  4387                           ;doprnt.c: 586: }
  4388                           
  4389                           ;doprnt.c: 585: break;
  4390  010576  C073  FFF6         	movff	sprintf@f,tblptrl
  4391  01057A  C074  FFF7         	movff	sprintf@f+1,tblptrh
  4392  01057E                     	if	0	;tblptru may be non-zero
  4393  01057E                     	endif
  4394  01057E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4395  01057E  0E00               	movlw	low (__mediumconst shr (0+16))
  4396  010580  6EF8               	movwf	tblptru,c
  4397  010582                     	endif
  4398  010582  0008               	tblrd		*
  4399  010584  50F5               	movf	tablat,w,c
  4400  010586  EC83  F097         	call	_isdigit
  4401  01058A  A0D8               	btfss	status,0,c
  4402  01058C  D0CB               	goto	l8408
  4403                           
  4404                           ;doprnt.c: 598: width = 0;
  4405  01058E  0E00               	movlw	0
  4406  010590  0100               	movlb	0	; () banked
  4407  010592  6F93               	movwf	(sprintf@width+1)& (0+255),b
  4408  010594  0E00               	movlw	0
  4409  010596  6F92               	movwf	sprintf@width& (0+255),b
  4410  010598                     l8364:
  4411                           
  4412                           ;doprnt.c: 600: width *= 10;
  4413  010598  C092  F060         	movff	sprintf@width,___wmul@multiplier
  4414  01059C  C093  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  4415  0105A0  0E00               	movlw	0
  4416  0105A2  0100               	movlb	0	; () banked
  4417  0105A4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4418  0105A6  0E0A               	movlw	10
  4419  0105A8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4420  0105AA  EC68  F097         	call	___wmul	;wreg free
  4421  0105AE  C060  F092         	movff	?___wmul,sprintf@width
  4422  0105B2  C061  F093         	movff	?___wmul+1,sprintf@width+1
  4423                           
  4424                           ;doprnt.c: 601: width += *f++ - '0';
  4425  0105B6  0ED0               	movlw	208
  4426  0105B8  0100               	movlb	0	; () banked
  4427  0105BA  6F83               	movwf	??_sprintf& (0+255),b
  4428  0105BC  0EFF               	movlw	255
  4429  0105BE  0100               	movlb	0	; () banked
  4430  0105C0  6F84               	movwf	(??_sprintf+1)& (0+255),b
  4431  0105C2  C073  FFF6         	movff	sprintf@f,tblptrl
  4432  0105C6  C074  FFF7         	movff	sprintf@f+1,tblptrh
  4433  0105CA                     	if	0	;tblptru may be non-zero
  4434  0105CA                     	endif
  4435  0105CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4436  0105CA  0E00               	movlw	low (__mediumconst shr (0+16))
  4437  0105CC  6EF8               	movwf	tblptru,c
  4438  0105CE                     	endif
  4439  0105CE  0008               	tblrd		*
  4440  0105D0  50F5               	movf	tablat,w,c
  4441  0105D2  0100               	movlb	0	; () banked
  4442  0105D4  6F85               	movwf	(??_sprintf+2)& (0+255),b
  4443  0105D6  6B86               	clrf	(??_sprintf+3)& (0+255),b
  4444  0105D8  0100               	movlb	0	; () banked
  4445  0105DA  5183               	movf	??_sprintf& (0+255),w,b
  4446  0105DC  0100               	movlb	0	; () banked
  4447  0105DE  2785               	addwf	(??_sprintf+2)& (0+255),f,b
  4448  0105E0  0100               	movlb	0	; () banked
  4449  0105E2  5184               	movf	(??_sprintf+1)& (0+255),w,b
  4450  0105E4  0100               	movlb	0	; () banked
  4451  0105E6  2386               	addwfc	(??_sprintf+3)& (0+255),f,b
  4452  0105E8  0100               	movlb	0	; () banked
  4453  0105EA  5185               	movf	(??_sprintf+2)& (0+255),w,b
  4454  0105EC  0100               	movlb	0	; () banked
  4455  0105EE  2792               	addwf	sprintf@width& (0+255),f,b
  4456  0105F0  0100               	movlb	0	; () banked
  4457  0105F2  5186               	movf	(??_sprintf+3)& (0+255),w,b
  4458  0105F4  0100               	movlb	0	; () banked
  4459  0105F6  2393               	addwfc	(sprintf@width+1)& (0+255),f,b
  4460                           
  4461                           ; BSR set to: 0
  4462  0105F8  0100               	movlb	0	; () banked
  4463  0105FA  4B73               	infsnz	sprintf@f& (0+255),f,b
  4464  0105FC  2B74               	incf	(sprintf@f+1)& (0+255),f,b
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4468  0105FE  C073  FFF6         	movff	sprintf@f,tblptrl
  4469  010602  C074  FFF7         	movff	sprintf@f+1,tblptrh
  4470  010606                     	if	0	;tblptru may be non-zero
  4471  010606                     	endif
  4472  010606                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4473  010606  0E00               	movlw	low (__mediumconst shr (0+16))
  4474  010608  6EF8               	movwf	tblptru,c
  4475  01060A                     	endif
  4476  01060A  0008               	tblrd		*
  4477  01060C  50F5               	movf	tablat,w,c
  4478  01060E  EC83  F097         	call	_isdigit
  4479  010612  A0D8               	btfss	status,0,c
  4480  010614  D087               	goto	l8408
  4481  010616  D7C0               	goto	l8364
  4482  010618                     l8372:
  4483                           
  4484                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4485  010618  C088  FFD9         	movff	sprintf@ap,fsr2l
  4486  01061C  C089  FFDA         	movff	sprintf@ap+1,fsr2h
  4487  010620  CFDE F08A          	movff	postinc2,sprintf@cp
  4488  010624  CFDD F08B          	movff	postdec2,sprintf@cp+1
  4489  010628  0E02               	movlw	2
  4490  01062A  0100               	movlb	0	; () banked
  4491  01062C  2788               	addwf	sprintf@ap& (0+255),f,b
  4492  01062E  0E00               	movlw	0
  4493  010630  2389               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;doprnt.c: 740: if(!cp)
  4497  010632  0100               	movlb	0	; () banked
  4498  010634  518A               	movf	sprintf@cp& (0+255),w,b
  4499  010636  0100               	movlb	0	; () banked
  4500  010638  118B               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4501  01063A  A4D8               	btfss	status,2,c
  4502  01063C  D006               	goto	l8380
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;doprnt.c: 741: cp = "(null)";
  4506  01063E  0E88               	movlw	low STR_62
  4507  010640  0100               	movlb	0	; () banked
  4508  010642  6F8A               	movwf	sprintf@cp& (0+255),b
  4509  010644  0EFF               	movlw	high STR_62
  4510  010646  0100               	movlb	0	; () banked
  4511  010648  6F8B               	movwf	(sprintf@cp+1)& (0+255),b
  4512  01064A                     l8380:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;doprnt.c: 745: len = 0;
  4516  01064A  0E00               	movlw	0
  4517  01064C  0100               	movlb	0	; () banked
  4518  01064E  6F8F               	movwf	(sprintf@len+1)& (0+255),b
  4519  010650  0E00               	movlw	0
  4520  010652  6F8E               	movwf	sprintf@len& (0+255),b
  4521                           
  4522                           ;doprnt.c: 746: while(cp[len])
  4523  010654  D003               	goto	l8384
  4524  010656                     l8382:
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;doprnt.c: 747: len++;
  4528  010656  0100               	movlb	0	; () banked
  4529  010658  4B8E               	infsnz	sprintf@len& (0+255),f,b
  4530  01065A  2B8F               	incf	(sprintf@len+1)& (0+255),f,b
  4531  01065C                     l8384:
  4532                           
  4533                           ; BSR set to: 0
  4534  01065C  0100               	movlb	0	; () banked
  4535  01065E  518E               	movf	sprintf@len& (0+255),w,b
  4536  010660  0100               	movlb	0	; () banked
  4537  010662  258A               	addwf	sprintf@cp& (0+255),w,b
  4538  010664  0100               	movlb	0	; () banked
  4539  010666  6F83               	movwf	??_sprintf& (0+255),b
  4540  010668  0100               	movlb	0	; () banked
  4541  01066A  518F               	movf	(sprintf@len+1)& (0+255),w,b
  4542  01066C  0100               	movlb	0	; () banked
  4543  01066E  218B               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4544  010670  0100               	movlb	0	; () banked
  4545  010672  6F84               	movwf	(??_sprintf+1)& (0+255),b
  4546  010674  C083  FFF6         	movff	??_sprintf,tblptrl
  4547  010678  C084  FFF7         	movff	??_sprintf+1,tblptrh
  4548  01067C                     	if	0	;tblptru may be non-zero
  4549  01067C                     	endif
  4550  01067C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4551  01067C  0E00               	movlw	low (__mediumconst shr (0+16))
  4552  01067E  6EF8               	movwf	tblptru,c
  4553  010680                     	endif
  4554  010680  0008               	tblrd		*
  4555  010682  50F5               	movf	tablat,w,c
  4556  010684  0900               	iorlw	0
  4557  010686  A4D8               	btfss	status,2,c
  4558  010688  D7E6               	goto	l8382
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;doprnt.c: 757: if(width > len)
  4562                           
  4563                           ; BSR set to: 0
  4564  01068A  0100               	movlb	0	; () banked
  4565  01068C  5192               	movf	sprintf@width& (0+255),w,b
  4566  01068E  0100               	movlb	0	; () banked
  4567  010690  5D8E               	subwf	sprintf@len& (0+255),w,b
  4568  010692  0100               	movlb	0	; () banked
  4569  010694  5193               	movf	(sprintf@width+1)& (0+255),w,b
  4570  010696  0100               	movlb	0	; () banked
  4571  010698  598F               	subwfb	(sprintf@len+1)& (0+255),w,b
  4572  01069A  B0D8               	btfsc	status,0,c
  4573  01069C  D009               	goto	l8390
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;doprnt.c: 758: width -= len;
  4577  01069E  0100               	movlb	0	; () banked
  4578  0106A0  518E               	movf	sprintf@len& (0+255),w,b
  4579  0106A2  0100               	movlb	0	; () banked
  4580  0106A4  5F92               	subwf	sprintf@width& (0+255),f,b
  4581  0106A6  0100               	movlb	0	; () banked
  4582  0106A8  518F               	movf	(sprintf@len+1)& (0+255),w,b
  4583  0106AA  0100               	movlb	0	; () banked
  4584  0106AC  5B93               	subwfb	(sprintf@width+1)& (0+255),f,b
  4585  0106AE  D00F               	goto	l8396
  4586  0106B0                     l8390:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;doprnt.c: 759: else
  4590                           ;doprnt.c: 760: width = 0;
  4591  0106B0  0E00               	movlw	0
  4592  0106B2  0100               	movlb	0	; () banked
  4593  0106B4  6F93               	movwf	(sprintf@width+1)& (0+255),b
  4594  0106B6  0E00               	movlw	0
  4595  0106B8  6F92               	movwf	sprintf@width& (0+255),b
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;doprnt.c: 764: while(width--)
  4599  0106BA  D009               	goto	l8396
  4600  0106BC                     l8392:
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4604  0106BC  C071  FFD9         	movff	sprintf@sp,fsr2l
  4605  0106C0  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4606  0106C4  0E20               	movlw	32
  4607  0106C6  6EDF               	movwf	indf2,c
  4608                           
  4609                           ; BSR set to: 0
  4610  0106C8  0100               	movlb	0	; () banked
  4611  0106CA  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4612  0106CC  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4613  0106CE                     l8396:
  4614                           
  4615                           ; BSR set to: 0
  4616  0106CE  0100               	movlb	0	; () banked
  4617  0106D0  0792               	decf	sprintf@width& (0+255),f,b
  4618  0106D2  A0D8               	btfss	status,0,c
  4619  0106D4  0793               	decf	(sprintf@width+1)& (0+255),f,b
  4620  0106D6  0100               	movlb	0	; () banked
  4621  0106D8  2992               	incf	sprintf@width& (0+255),w,b
  4622  0106DA  E1F0               	bnz	l8392
  4623  0106DC  0100               	movlb	0	; () banked
  4624  0106DE  2993               	incf	(sprintf@width+1)& (0+255),w,b
  4625  0106E0  B4D8               	btfsc	status,2,c
  4626  0106E2  D014               	goto	l8404
  4627  0106E4  D7EB               	goto	l8392
  4628  0106E6                     l8398:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4632  0106E6  C08A  FFF6         	movff	sprintf@cp,tblptrl
  4633  0106EA  C08B  FFF7         	movff	sprintf@cp+1,tblptrh
  4634  0106EE                     	if	0	;tblptru may be non-zero
  4635  0106EE                     	endif
  4636  0106EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4637  0106EE  0E00               	movlw	low (__mediumconst shr (0+16))
  4638  0106F0  6EF8               	movwf	tblptru,c
  4639  0106F2                     	endif
  4640  0106F2  C071  FFD9         	movff	sprintf@sp,fsr2l
  4641  0106F6  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4642  0106FA  0008               	tblrd		*
  4643  0106FC  CFF5 FFDF          	movff	tablat,indf2
  4644                           
  4645                           ; BSR set to: 0
  4646  010700  0100               	movlb	0	; () banked
  4647  010702  4B8A               	infsnz	sprintf@cp& (0+255),f,b
  4648  010704  2B8B               	incf	(sprintf@cp+1)& (0+255),f,b
  4649                           
  4650                           ; BSR set to: 0
  4651  010706  0100               	movlb	0	; () banked
  4652  010708  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4653  01070A  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4654  01070C                     l8404:
  4655                           
  4656                           ; BSR set to: 0
  4657  01070C  0100               	movlb	0	; () banked
  4658  01070E  078E               	decf	sprintf@len& (0+255),f,b
  4659  010710  A0D8               	btfss	status,0,c
  4660  010712  078F               	decf	(sprintf@len+1)& (0+255),f,b
  4661  010714  0100               	movlb	0	; () banked
  4662  010716  298E               	incf	sprintf@len& (0+255),w,b
  4663  010718  E1E6               	bnz	l8398
  4664  01071A  0100               	movlb	0	; () banked
  4665  01071C  298F               	incf	(sprintf@len+1)& (0+255),w,b
  4666  01071E  B4D8               	btfsc	status,2,c
  4667  010720  D111               	goto	l8486
  4668  010722  D7E1               	goto	l8398
  4669  010724                     l8408:
  4670  010724  C073  FFF6         	movff	sprintf@f,tblptrl
  4671  010728  C074  FFF7         	movff	sprintf@f+1,tblptrh
  4672  01072C  0100               	movlb	0	; () banked
  4673  01072E  4B73               	infsnz	sprintf@f& (0+255),f,b
  4674  010730  2B74               	incf	(sprintf@f+1)& (0+255),f,b
  4675  010732                     	if	0	;tblptru may be non-zero
  4676  010732                     	endif
  4677  010732                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4678  010732  0E00               	movlw	low (__mediumconst shr (0+16))
  4679  010734  6EF8               	movwf	tblptru,c
  4680  010736                     	endif
  4681  010736  0008               	tblrd		*
  4682  010738  CFF5 F091          	movff	tablat,sprintf@c
  4683  01073C  0100               	movlb	0	; () banked
  4684  01073E  5191               	movf	sprintf@c& (0+255),w,b
  4685                           
  4686                           ; Switch size 1, requested type "space"
  4687                           ; Number of cases is 4, Range of values is 0 to 115
  4688                           ; switch strategies available:
  4689                           ; Name         Instructions Cycles
  4690                           ; simple_byte           13     7 (average)
  4691                           ;	Chosen strategy is simple_byte
  4692  010740  0A00               	xorlw	0	; case 0
  4693  010742  B4D8               	btfsc	status,2,c
  4694  010744  D10F               	goto	l8488
  4695  010746  0A64               	xorlw	100	; case 100
  4696  010748  B4D8               	btfsc	status,2,c
  4697  01074A  D007               	goto	l8410
  4698  01074C  0A0D               	xorlw	13	; case 105
  4699  01074E  B4D8               	btfsc	status,2,c
  4700  010750  D004               	goto	l8410
  4701  010752  0A1A               	xorlw	26	; case 115
  4702  010754  B4D8               	btfsc	status,2,c
  4703  010756  D760               	goto	l8372
  4704  010758  D0F5               	goto	l8486
  4705  01075A                     l8410:
  4706                           
  4707                           ;doprnt.c: 1253: {
  4708                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4709  01075A  C088  FFD9         	movff	sprintf@ap,fsr2l
  4710  01075E  C089  FFDA         	movff	sprintf@ap+1,fsr2h
  4711  010762  CFDE F08C          	movff	postinc2,sprintf@val
  4712  010766  CFDD F08D          	movff	postdec2,sprintf@val+1
  4713  01076A  0E02               	movlw	2
  4714  01076C  0100               	movlb	0	; () banked
  4715  01076E  2788               	addwf	sprintf@ap& (0+255),f,b
  4716  010770  0E00               	movlw	0
  4717  010772  2389               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;doprnt.c: 1261: if((int)val < 0) {
  4721  010774  0100               	movlb	0	; () banked
  4722  010776  AF8D               	btfss	(sprintf@val+1)& (0+255),7,b
  4723  010778  D008               	goto	l8420
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;doprnt.c: 1262: flag |= 0x03;
  4727  01077A  0E03               	movlw	3
  4728  01077C  0100               	movlb	0	; () banked
  4729  01077E  1390               	iorwf	sprintf@flag& (0+255),f,b
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;doprnt.c: 1263: val = -val;
  4733  010780  0100               	movlb	0	; () banked
  4734  010782  6D8C               	negf	sprintf@val& (0+255),b
  4735  010784  1F8D               	comf	(sprintf@val+1)& (0+255),f,b
  4736  010786  B0D8               	btfsc	status,0,c
  4737  010788  2B8D               	incf	(sprintf@val+1)& (0+255),f,b
  4738  01078A                     l8420:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;doprnt.c: 1264: }
  4742                           ;doprnt.c: 1266: }
  4743                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4744  01078A  0E01               	movlw	1
  4745  01078C  0100               	movlb	0	; () banked
  4746  01078E  6F91               	movwf	sprintf@c& (0+255),b
  4747  010790                     l8422:
  4748                           
  4749                           ; BSR set to: 0
  4750  010790  0E05               	movlw	5
  4751  010792  0100               	movlb	0	; () banked
  4752  010794  1991               	xorwf	sprintf@c& (0+255),w,b
  4753  010796  B4D8               	btfsc	status,2,c
  4754  010798  D019               	goto	l8434
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;doprnt.c: 1306: if(val < dpowers[c])
  4758                           
  4759                           ; BSR set to: 0
  4760                           
  4761                           ; BSR set to: 0
  4762  01079A  0100               	movlb	0	; () banked
  4763  01079C  5191               	movf	sprintf@c& (0+255),w,b
  4764  01079E  0D02               	mullw	2
  4765  0107A0  0EF9               	movlw	low _dpowers
  4766  0107A2  24F3               	addwf	prodl,w,c
  4767  0107A4  6EF6               	movwf	tblptrl,c
  4768  0107A6  0EFC               	movlw	high _dpowers
  4769  0107A8  20F4               	addwfc	prodh,w,c
  4770  0107AA  6EF7               	movwf	tblptrh,c
  4771  0107AC                     	if	1	;There are 3 active tblptr bytes
  4772  0107AC  6AF8               	clrf	tblptru,c
  4773  0107AE  0E00               	movlw	low (__mediumconst shr (0+16))
  4774  0107B0  22F8               	addwfc	tblptru,f,c
  4775  0107B2                     	endif
  4776  0107B2  0009               	tblrd		*+
  4777  0107B4  50F5               	movf	tablat,w,c
  4778  0107B6  0100               	movlb	0	; () banked
  4779  0107B8  5D8C               	subwf	sprintf@val& (0+255),w,b
  4780  0107BA  0009               	tblrd		*+
  4781  0107BC  50F5               	movf	tablat,w,c
  4782  0107BE  0100               	movlb	0	; () banked
  4783  0107C0  598D               	subwfb	(sprintf@val+1)& (0+255),w,b
  4784  0107C2  A0D8               	btfss	status,0,c
  4785  0107C4  D003               	goto	l8434
  4786                           
  4787                           ; BSR set to: 0
  4788                           
  4789                           ; BSR set to: 0
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;doprnt.c: 1307: break;
  4793  0107C6  0100               	movlb	0	; () banked
  4794  0107C8  2B91               	incf	sprintf@c& (0+255),f,b
  4795  0107CA  D7E2               	goto	l8422
  4796  0107CC                     l8434:
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4800  0107CC  0100               	movlb	0	; () banked
  4801  0107CE  5192               	movf	sprintf@width& (0+255),w,b
  4802  0107D0  0100               	movlb	0	; () banked
  4803  0107D2  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  4804  0107D4  B4D8               	btfsc	status,2,c
  4805  0107D6  D00B               	goto	l8440
  4806                           
  4807                           ; BSR set to: 0
  4808  0107D8  C090  F083         	movff	sprintf@flag,??_sprintf
  4809  0107DC  0E03               	movlw	3
  4810  0107DE  0100               	movlb	0	; () banked
  4811  0107E0  1783               	andwf	??_sprintf& (0+255),f,b
  4812  0107E2  B4D8               	btfsc	status,2,c
  4813  0107E4  D004               	goto	l8440
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;doprnt.c: 1346: width--;
  4817  0107E6  0100               	movlb	0	; () banked
  4818  0107E8  0792               	decf	sprintf@width& (0+255),f,b
  4819  0107EA  A0D8               	btfss	status,0,c
  4820  0107EC  0793               	decf	(sprintf@width+1)& (0+255),f,b
  4821  0107EE                     l8440:
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;doprnt.c: 1381: if(width > c)
  4825  0107EE  0E80               	movlw	128
  4826  0107F0  0100               	movlb	0	; () banked
  4827  0107F2  BF91               	btfsc	sprintf@c& (0+255),7,b
  4828  0107F4  0E7F               	movlw	127
  4829  0107F6  0100               	movlb	0	; () banked
  4830  0107F8  6F83               	movwf	??_sprintf& (0+255),b
  4831  0107FA  0100               	movlb	0	; () banked
  4832  0107FC  5192               	movf	sprintf@width& (0+255),w,b
  4833  0107FE  0100               	movlb	0	; () banked
  4834  010800  5D91               	subwf	sprintf@c& (0+255),w,b
  4835  010802  0100               	movlb	0	; () banked
  4836  010804  5193               	movf	(sprintf@width+1)& (0+255),w,b
  4837  010806  0A80               	xorlw	128
  4838  010808  0100               	movlb	0	; () banked
  4839  01080A  5983               	subwfb	??_sprintf& (0+255),w,b
  4840  01080C  B0D8               	btfsc	status,0,c
  4841  01080E  D00B               	goto	l8444
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;doprnt.c: 1382: width -= c;
  4845  010810  0100               	movlb	0	; () banked
  4846  010812  5191               	movf	sprintf@c& (0+255),w,b
  4847  010814  0100               	movlb	0	; () banked
  4848  010816  5F92               	subwf	sprintf@width& (0+255),f,b
  4849  010818  0E00               	movlw	0
  4850  01081A  0100               	movlb	0	; () banked
  4851  01081C  BF91               	btfsc	sprintf@c& (0+255),7,b
  4852  01081E  0EFF               	movlw	255
  4853  010820  0100               	movlb	0	; () banked
  4854  010822  5B93               	subwfb	(sprintf@width+1)& (0+255),f,b
  4855  010824  D005               	goto	l8446
  4856  010826                     l8444:
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;doprnt.c: 1383: else
  4860                           ;doprnt.c: 1384: width = 0;
  4861  010826  0E00               	movlw	0
  4862  010828  0100               	movlb	0	; () banked
  4863  01082A  6F93               	movwf	(sprintf@width+1)& (0+255),b
  4864  01082C  0E00               	movlw	0
  4865  01082E  6F92               	movwf	sprintf@width& (0+255),b
  4866  010830                     l8446:
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;doprnt.c: 1387: if(flag & 0x04) {
  4870  010830  0100               	movlb	0	; () banked
  4871  010832  A590               	btfss	sprintf@flag& (0+255),2,b
  4872  010834  D024               	goto	l8462
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;doprnt.c: 1392: if(flag & 0x03)
  4876  010836  C090  F083         	movff	sprintf@flag,??_sprintf
  4877  01083A  0E03               	movlw	3
  4878  01083C  0100               	movlb	0	; () banked
  4879  01083E  1783               	andwf	??_sprintf& (0+255),f,b
  4880  010840  B4D8               	btfsc	status,2,c
  4881  010842  D009               	goto	l8454
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4885  010844  C071  FFD9         	movff	sprintf@sp,fsr2l
  4886  010848  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4887  01084C  0E2D               	movlw	45
  4888  01084E  6EDF               	movwf	indf2,c
  4889                           
  4890                           ; BSR set to: 0
  4891  010850  0100               	movlb	0	; () banked
  4892  010852  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4893  010854  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4894  010856                     l8454:
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;doprnt.c: 1415: if(width)
  4898  010856  0100               	movlb	0	; () banked
  4899  010858  5192               	movf	sprintf@width& (0+255),w,b
  4900  01085A  0100               	movlb	0	; () banked
  4901  01085C  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  4902  01085E  B4D8               	btfsc	status,2,c
  4903  010860  D037               	goto	l8476
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4907                           
  4908                           ; BSR set to: 0
  4909                           
  4910                           ;doprnt.c: 1416: do
  4911  010862  C071  FFD9         	movff	sprintf@sp,fsr2l
  4912  010866  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4913  01086A  0E30               	movlw	48
  4914  01086C  6EDF               	movwf	indf2,c
  4915                           
  4916                           ; BSR set to: 0
  4917  01086E  0100               	movlb	0	; () banked
  4918  010870  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4919  010872  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;doprnt.c: 1418: while(--width);
  4923  010874  0100               	movlb	0	; () banked
  4924  010876  0792               	decf	sprintf@width& (0+255),f,b
  4925  010878  A0D8               	btfss	status,0,c
  4926  01087A  0793               	decf	(sprintf@width+1)& (0+255),f,b
  4927  01087C  D7EC               	goto	l8454
  4928  01087E                     l8462:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;doprnt.c: 1422: {
  4932                           ;doprnt.c: 1424: if(width
  4933                           ;doprnt.c: 1428: )
  4934  01087E  0100               	movlb	0	; () banked
  4935  010880  5192               	movf	sprintf@width& (0+255),w,b
  4936  010882  0100               	movlb	0	; () banked
  4937  010884  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  4938  010886  B4D8               	btfsc	status,2,c
  4939  010888  D013               	goto	l8470
  4940  01088A                     l8464:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4944  01088A  C071  FFD9         	movff	sprintf@sp,fsr2l
  4945  01088E  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4946  010892  0E20               	movlw	32
  4947  010894  6EDF               	movwf	indf2,c
  4948                           
  4949                           ; BSR set to: 0
  4950  010896  0100               	movlb	0	; () banked
  4951  010898  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4952  01089A  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;doprnt.c: 1431: while(--width);
  4956  01089C  0100               	movlb	0	; () banked
  4957  01089E  0792               	decf	sprintf@width& (0+255),f,b
  4958  0108A0  A0D8               	btfss	status,0,c
  4959  0108A2  0793               	decf	(sprintf@width+1)& (0+255),f,b
  4960  0108A4  0100               	movlb	0	; () banked
  4961  0108A6  5192               	movf	sprintf@width& (0+255),w,b
  4962  0108A8  0100               	movlb	0	; () banked
  4963  0108AA  1193               	iorwf	(sprintf@width+1)& (0+255),w,b
  4964  0108AC  A4D8               	btfss	status,2,c
  4965  0108AE  D7ED               	goto	l8464
  4966  0108B0                     l8470:
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;doprnt.c: 1438: if(flag & 0x03)
  4970  0108B0  C090  F083         	movff	sprintf@flag,??_sprintf
  4971  0108B4  0E03               	movlw	3
  4972  0108B6  0100               	movlb	0	; () banked
  4973  0108B8  1783               	andwf	??_sprintf& (0+255),f,b
  4974  0108BA  B4D8               	btfsc	status,2,c
  4975  0108BC  D009               	goto	l8476
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4979  0108BE  C071  FFD9         	movff	sprintf@sp,fsr2l
  4980  0108C2  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  4981  0108C6  0E2D               	movlw	45
  4982  0108C8  6EDF               	movwf	indf2,c
  4983                           
  4984                           ; BSR set to: 0
  4985  0108CA  0100               	movlb	0	; () banked
  4986  0108CC  4B71               	infsnz	sprintf@sp& (0+255),f,b
  4987  0108CE  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  4988  0108D0                     l8476:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;doprnt.c: 1469: }
  4992                           ;doprnt.c: 1472: prec = c;
  4993  0108D0  C091  F087         	movff	sprintf@c,sprintf@prec
  4994                           
  4995                           ;doprnt.c: 1474: while(prec--) {
  4996  0108D4  D031               	goto	l8484
  4997  0108D6                     l8478:
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;doprnt.c: 1478: {
  5001                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5002  0108D6  0100               	movlb	0	; () banked
  5003  0108D8  5187               	movf	sprintf@prec& (0+255),w,b
  5004  0108DA  0D02               	mullw	2
  5005  0108DC  0EF9               	movlw	low _dpowers
  5006  0108DE  24F3               	addwf	prodl,w,c
  5007  0108E0  6EF6               	movwf	tblptrl,c
  5008  0108E2  0EFC               	movlw	high _dpowers
  5009  0108E4  20F4               	addwfc	prodh,w,c
  5010  0108E6  6EF7               	movwf	tblptrh,c
  5011  0108E8                     	if	1	;There are 3 active tblptr bytes
  5012  0108E8  6AF8               	clrf	tblptru,c
  5013  0108EA  0E00               	movlw	low (__mediumconst shr (0+16))
  5014  0108EC  22F8               	addwfc	tblptru,f,c
  5015  0108EE                     	endif
  5016  0108EE  0009               	tblrd		*+
  5017  0108F0  CFF5 F068          	movff	tablat,___lwdiv@divisor
  5018  0108F4  000A               	tblrd		*-
  5019  0108F6  CFF5 F069          	movff	tablat,___lwdiv@divisor+1
  5020  0108FA  C08C  F066         	movff	sprintf@val,___lwdiv@dividend
  5021  0108FE  C08D  F067         	movff	sprintf@val+1,___lwdiv@dividend+1
  5022  010902  EC1A  F095         	call	___lwdiv	;wreg free
  5023  010906  C066  F06D         	movff	?___lwdiv,___lwmod@dividend
  5024  01090A  C067  F06E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5025  01090E  0E00               	movlw	0
  5026  010910  0100               	movlb	0	; () banked
  5027  010912  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5028  010914  0E0A               	movlw	10
  5029  010916  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5030  010918  EC5F  F096         	call	___lwmod	;wreg free
  5031  01091C  0100               	movlb	0	; () banked
  5032  01091E  516D               	movf	?___lwmod& (0+255),w,b
  5033  010920  0F30               	addlw	48
  5034  010922  0100               	movlb	0	; () banked
  5035  010924  6F91               	movwf	sprintf@c& (0+255),b
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;doprnt.c: 1523: }
  5039                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5040  010926  C071  FFD9         	movff	sprintf@sp,fsr2l
  5041  01092A  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  5042  01092E  C091  FFDF         	movff	sprintf@c,indf2
  5043                           
  5044                           ; BSR set to: 0
  5045  010932  0100               	movlb	0	; () banked
  5046  010934  4B71               	infsnz	sprintf@sp& (0+255),f,b
  5047  010936  2B72               	incf	(sprintf@sp+1)& (0+255),f,b
  5048  010938                     l8484:
  5049                           
  5050                           ; BSR set to: 0
  5051  010938  0100               	movlb	0	; () banked
  5052  01093A  0787               	decf	sprintf@prec& (0+255),f,b
  5053  01093C  0100               	movlb	0	; () banked
  5054  01093E  2987               	incf	sprintf@prec& (0+255),w,b
  5055  010940  A4D8               	btfss	status,2,c
  5056  010942  D7C9               	goto	l8478
  5057  010944                     l8486:
  5058                           
  5059                           ; BSR set to: 0
  5060  010944  C073  FFF6         	movff	sprintf@f,tblptrl
  5061  010948  C074  FFF7         	movff	sprintf@f+1,tblptrh
  5062  01094C  0100               	movlb	0	; () banked
  5063  01094E  4B73               	infsnz	sprintf@f& (0+255),f,b
  5064  010950  2B74               	incf	(sprintf@f+1)& (0+255),f,b
  5065  010952                     	if	0	;tblptru may be non-zero
  5066  010952                     	endif
  5067  010952                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5068  010952  0E00               	movlw	low (__mediumconst shr (0+16))
  5069  010954  6EF8               	movwf	tblptru,c
  5070  010956                     	endif
  5071  010956  0008               	tblrd		*
  5072  010958  CFF5 F091          	movff	tablat,sprintf@c
  5073  01095C  0100               	movlb	0	; () banked
  5074  01095E  5191               	movf	sprintf@c& (0+255),w,b
  5075  010960  A4D8               	btfss	status,2,c
  5076  010962  D5E1               	goto	l8346
  5077  010964                     l8488:
  5078                           
  5079                           ;doprnt.c: 1538: *sp = 0;
  5080  010964  C071  FFD9         	movff	sprintf@sp,fsr2l
  5081  010968  C072  FFDA         	movff	sprintf@sp+1,fsr2h
  5082  01096C  0E00               	movlw	0
  5083  01096E  6EDF               	movwf	indf2,c
  5084  010970  0012               	return	
  5085  010972                     __end_of_sprintf:
  5086                           	opt stack 0
  5087                           tblptru	equ	0xFF8
  5088                           tblptrh	equ	0xFF7
  5089                           tblptrl	equ	0xFF6
  5090                           tablat	equ	0xFF5
  5091                           prodh	equ	0xFF4
  5092                           prodl	equ	0xFF3
  5093                           intcon	equ	0xFF2
  5094                           postinc0	equ	0xFEE
  5095                           wreg	equ	0xFE8
  5096                           postdec1	equ	0xFE5
  5097                           fsr1h	equ	0xFE2
  5098                           fsr1l	equ	0xFE1
  5099                           indf2	equ	0xFDF
  5100                           postinc2	equ	0xFDE
  5101                           postdec2	equ	0xFDD
  5102                           fsr2h	equ	0xFDA
  5103                           fsr2l	equ	0xFD9
  5104                           status	equ	0xFD8
  5105                           
  5106 ;; *************** function _ringbuf_put_str *****************
  5107 ;; Defined at:
  5108 ;;		line 39 in file "../My_library/My_ringbuf.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5111 ;;		 -> uart_tx(8), 
  5112 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  5113 ;;		 -> terminal_operation@str(30), STR_43(315), STR_24(8), print_time@str(30), 
  5114 ;;		 -> STR_22(3), print_time_dec@str(10), STR_20(4), STR_19(4), 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;		None               void
  5119 ;; Registers used:
  5120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5126 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5129 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5130 ;;Total ram usage:        4 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    6
  5133 ;; This function calls:
  5134 ;;		_ringbuf_put
  5135 ;; This function is called by:
  5136 ;;		_terminal_task
  5137 ;;		_print_time
  5138 ;;		_terminal_at_hand
  5139 ;;		_terminal_operation
  5140 ;;		_print_time_dec
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text7
  5145  012BF8                     __ptext7:
  5146                           	opt stack 0
  5147  012BF8                     _ringbuf_put_str:
  5148                           	opt stack 20
  5149                           
  5150                           ;My_ringbuf.c: 40: while (*str) {
  5151                           
  5152                           ;incstack = 0
  5153  012BF8  D01C               	goto	l8258
  5154  012BFA                     l8254:
  5155                           
  5156                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  5157  012BFA  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5158  012BFE  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5159  012C02  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5160  012C06  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5161  012C0A  0E00               	movlw	low (__mediumconst shr (0+16))
  5162  012C0C  6EF8               	movwf	tblptru,c
  5163  012C0E  0E0E               	movlw	(high __ramtop+-1)
  5164  012C10  64F7               	cpfsgt	tblptrh,c
  5165  012C12  D003               	bra	u8537
  5166  012C14  0008               	tblrd		*
  5167  012C16  50F5               	movf	tablat,w,c
  5168  012C18  D005               	bra	u8530
  5169  012C1A                     u8537:
  5170  012C1A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5171  012C1E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5172  012C22  50EF               	movf	indf0,w,c
  5173  012C24                     u8530:
  5174  012C24  0100               	movlb	0	; () banked
  5175  012C26  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5176  012C28  EC6C  F08F         	call	_ringbuf_put	;wreg free
  5177  012C2C  0100               	movlb	0	; () banked
  5178  012C2E  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  5179  012C30  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5180  012C32                     l8258:
  5181  012C32  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5182  012C36  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5183  012C3A  0E00               	movlw	low (__mediumconst shr (0+16))
  5184  012C3C  6EF8               	movwf	tblptru,c
  5185  012C3E  0E0E               	movlw	(high __ramtop+-1)
  5186  012C40  64F7               	cpfsgt	tblptrh,c
  5187  012C42  D003               	bra	u8547
  5188  012C44  0008               	tblrd		*
  5189  012C46  50F5               	movf	tablat,w,c
  5190  012C48  D005               	bra	u8540
  5191  012C4A                     u8547:
  5192  012C4A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5193  012C4E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5194  012C52  50EF               	movf	indf0,w,c
  5195  012C54                     u8540:
  5196  012C54  0900               	iorlw	0
  5197  012C56  B4D8               	btfsc	status,2,c
  5198  012C58  0012               	return	
  5199  012C5A  D7CF               	goto	l8254
  5200  012C5C                     __end_of_ringbuf_put_str:
  5201                           	opt stack 0
  5202                           tblptru	equ	0xFF8
  5203                           tblptrh	equ	0xFF7
  5204                           tblptrl	equ	0xFF6
  5205                           tablat	equ	0xFF5
  5206                           prodh	equ	0xFF4
  5207                           prodl	equ	0xFF3
  5208                           intcon	equ	0xFF2
  5209                           indf0	equ	0xFEF
  5210                           postinc0	equ	0xFEE
  5211                           fsr0h	equ	0xFEA
  5212                           fsr0l	equ	0xFE9
  5213                           wreg	equ	0xFE8
  5214                           postdec1	equ	0xFE5
  5215                           fsr1h	equ	0xFE2
  5216                           fsr1l	equ	0xFE1
  5217                           indf2	equ	0xFDF
  5218                           postinc2	equ	0xFDE
  5219                           postdec2	equ	0xFDD
  5220                           fsr2h	equ	0xFDA
  5221                           fsr2l	equ	0xFD9
  5222                           status	equ	0xFD8
  5223                           
  5224 ;; *************** function _RTCC_from_caltime *****************
  5225 ;; Defined at:
  5226 ;;		line 205 in file "../My_library/My_RTCC.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  tm              2   47[BANK0 ] PTR struct .
  5229 ;;		 -> now(14), 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;		None
  5232 ;; Return value:  Size  Location     Type
  5233 ;;		None               void
  5234 ;; Registers used:
  5235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5241 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5245 ;;Total ram usage:        2 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    7
  5248 ;; This function calls:
  5249 ;;		_caltime_to_RTCC
  5250 ;;		_caltime_to_epoch
  5251 ;;		_epoch_to_caltime
  5252 ;; This function is called by:
  5253 ;;		_terminal_at_hand
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text8
  5258  012F7E                     __ptext8:
  5259                           	opt stack 0
  5260  012F7E                     _RTCC_from_caltime:
  5261                           	opt stack 19
  5262                           
  5263                           ;My_RTCC.c: 206: caltime_to_epoch(tm);
  5264                           
  5265                           ;incstack = 0
  5266  012F7E  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5267  012F82  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5268  012F86  EC44  F088         	call	_caltime_to_epoch	;wreg free
  5269                           
  5270                           ;My_RTCC.c: 207: epoch_to_caltime(tm);
  5271  012F8A  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5272  012F8E  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5273  012F92  ECD8  F08B         	call	_epoch_to_caltime	;wreg free
  5274                           
  5275                           ;My_RTCC.c: 208: caltime_to_RTCC(tm);
  5276  012F96  C08F  F076         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5277  012F9A  C090  F077         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5278  012F9E  EC01  F08F         	call	_caltime_to_RTCC	;wreg free
  5279  012FA2  0012               	return		;funcret
  5280  012FA4                     __end_of_RTCC_from_caltime:
  5281                           	opt stack 0
  5282                           tblptru	equ	0xFF8
  5283                           tblptrh	equ	0xFF7
  5284                           tblptrl	equ	0xFF6
  5285                           tablat	equ	0xFF5
  5286                           prodh	equ	0xFF4
  5287                           prodl	equ	0xFF3
  5288                           intcon	equ	0xFF2
  5289                           indf0	equ	0xFEF
  5290                           postinc0	equ	0xFEE
  5291                           fsr0h	equ	0xFEA
  5292                           fsr0l	equ	0xFE9
  5293                           wreg	equ	0xFE8
  5294                           postdec1	equ	0xFE5
  5295                           fsr1h	equ	0xFE2
  5296                           fsr1l	equ	0xFE1
  5297                           indf2	equ	0xFDF
  5298                           postinc2	equ	0xFDE
  5299                           postdec2	equ	0xFDD
  5300                           fsr2h	equ	0xFDA
  5301                           fsr2l	equ	0xFD9
  5302                           status	equ	0xFD8
  5303                           
  5304 ;; *************** function _strcmp *****************
  5305 ;; Defined at:
  5306 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5309 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5310 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5311 ;;		 -> STR_61(6), STR_60(2), STR_59(2), STR_58(2), 
  5312 ;;		 -> STR_57(2), STR_56(2), STR_55(2), STR_54(2), 
  5313 ;;		 -> STR_53(2), STR_52(4), STR_51(4), STR_50(4), 
  5314 ;;		 -> STR_49(4), STR_48(5), STR_47(4), STR_45(3), 
  5315 ;;		 -> STR_44(9), STR_42(2), STR_41(5), STR_40(7), 
  5316 ;;		 -> STR_39(2), STR_38(7), STR_37(2), STR_36(5), 
  5317 ;;		 -> STR_35(2), STR_34(4), STR_33(2), STR_32(6), 
  5318 ;;		 -> STR_31(2), STR_30(5), STR_29(2), STR_28(12), 
  5319 ;;		 -> STR_27(3), STR_26(2), STR_25(11), 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  r               1    4[BANK0 ] char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  2    0[BANK0 ] int 
  5324 ;; Registers used:
  5325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5331 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5335 ;;Total ram usage:        6 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:    4
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_terminal_time
  5342 ;;		_terminal_operation
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text9
  5347  012D1A                     __ptext9:
  5348                           	opt stack 0
  5349  012D1A                     _strcmp:
  5350                           	opt stack 23
  5351                           
  5352                           ;incstack = 0
  5353  012D1A  D006               	goto	l8520
  5354  012D1C                     l8518:
  5355  012D1C  0100               	movlb	0	; () banked
  5356  012D1E  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5357  012D20  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5358  012D22  0100               	movlb	0	; () banked
  5359  012D24  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5360  012D26  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5361  012D28                     l8520:
  5362  012D28  C060  FFD9         	movff	strcmp@s1,fsr2l
  5363  012D2C  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5364  012D30  50DF               	movf	indf2,w,c
  5365  012D32  6E20               	movwf	??_strcmp& (0+255),c
  5366  012D34  C062  FFF6         	movff	strcmp@s2,tblptrl
  5367  012D38  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5368  012D3C                     	if	0	;tblptru may be non-zero
  5369  012D3C                     	endif
  5370  012D3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5371  012D3C  0E00               	movlw	low (__mediumconst shr (0+16))
  5372  012D3E  6EF8               	movwf	tblptru,c
  5373  012D40                     	endif
  5374  012D40  0008               	tblrd		*
  5375  012D42  50F5               	movf	tablat,w,c
  5376  012D44  0800               	sublw	0
  5377  012D46  2420               	addwf	??_strcmp,w,c
  5378  012D48  0100               	movlb	0	; () banked
  5379  012D4A  6F64               	movwf	strcmp@r& (0+255),b
  5380  012D4C  0100               	movlb	0	; () banked
  5381  012D4E  5164               	movf	strcmp@r& (0+255),w,b
  5382  012D50  A4D8               	btfss	status,2,c
  5383  012D52  D007               	goto	l8524
  5384                           
  5385                           ; BSR set to: 0
  5386  012D54  C060  FFD9         	movff	strcmp@s1,fsr2l
  5387  012D58  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5388  012D5C  50DF               	movf	indf2,w,c
  5389  012D5E  A4D8               	btfss	status,2,c
  5390  012D60  D7DD               	goto	l8518
  5391  012D62                     l8524:
  5392                           
  5393                           ; BSR set to: 0
  5394  012D62  0100               	movlb	0	; () banked
  5395  012D64  5164               	movf	strcmp@r& (0+255),w,b
  5396  012D66  0100               	movlb	0	; () banked
  5397  012D68  6F60               	movwf	?_strcmp& (0+255),b
  5398  012D6A  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5399  012D6C  BF60               	btfsc	?_strcmp& (0+255),7,b
  5400  012D6E  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5401  012D70  0012               	return	
  5402  012D72                     __end_of_strcmp:
  5403                           	opt stack 0
  5404                           tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           intcon	equ	0xFF2
  5411                           indf0	equ	0xFEF
  5412                           postinc0	equ	0xFEE
  5413                           fsr0h	equ	0xFEA
  5414                           fsr0l	equ	0xFE9
  5415                           wreg	equ	0xFE8
  5416                           postdec1	equ	0xFE5
  5417                           fsr1h	equ	0xFE2
  5418                           fsr1l	equ	0xFE1
  5419                           indf2	equ	0xFDF
  5420                           postinc2	equ	0xFDE
  5421                           postdec2	equ	0xFDD
  5422                           fsr2h	equ	0xFDA
  5423                           fsr2l	equ	0xFD9
  5424                           status	equ	0xFD8
  5425                           
  5426 ;; *************** function _atoi *****************
  5427 ;; Defined at:
  5428 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5431 ;;		 -> terminal_task@op2(25), 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  a               2   11[BANK0 ] int 
  5434 ;;  sign            1   10[BANK0 ] unsigned char 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  2    6[BANK0 ] int 
  5437 ;; Registers used:
  5438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5445 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5447 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;Total ram usage:        7 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    5
  5451 ;; This function calls:
  5452 ;;		___wmul
  5453 ;;		_isdigit
  5454 ;; This function is called by:
  5455 ;;		_terminal_time
  5456 ;;		_terminal_operation
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text10
  5461  011B4A                     __ptext10:
  5462                           	opt stack 0
  5463  011B4A                     _atoi:
  5464                           	opt stack 22
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;incstack = 0
  5468  011B4A  D003               	goto	l8532
  5469  011B4C                     l8530:
  5470  011B4C  0100               	movlb	0	; () banked
  5471  011B4E  4B66               	infsnz	atoi@s& (0+255),f,b
  5472  011B50  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5473  011B52                     l8532:
  5474  011B52  C066  FFD9         	movff	atoi@s,fsr2l
  5475  011B56  C067  FFDA         	movff	atoi@s+1,fsr2h
  5476  011B5A  0E20               	movlw	32
  5477  011B5C  18DE               	xorwf	postinc2,w,c
  5478  011B5E  B4D8               	btfsc	status,2,c
  5479  011B60  D7F5               	goto	l8530
  5480  011B62  C066  FFD9         	movff	atoi@s,fsr2l
  5481  011B66  C067  FFDA         	movff	atoi@s+1,fsr2h
  5482  011B6A  0E09               	movlw	9
  5483  011B6C  18DE               	xorwf	postinc2,w,c
  5484  011B6E  B4D8               	btfsc	status,2,c
  5485  011B70  D7ED               	goto	l8530
  5486  011B72  0E00               	movlw	0
  5487  011B74  0100               	movlb	0	; () banked
  5488  011B76  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5489  011B78  0E00               	movlw	0
  5490  011B7A  6F6B               	movwf	atoi@a& (0+255),b
  5491  011B7C  0E00               	movlw	0
  5492  011B7E  0100               	movlb	0	; () banked
  5493  011B80  6F6A               	movwf	atoi@sign& (0+255),b
  5494                           
  5495                           ; BSR set to: 0
  5496  011B82  C066  FFD9         	movff	atoi@s,fsr2l
  5497  011B86  C067  FFDA         	movff	atoi@s+1,fsr2h
  5498  011B8A  0E2D               	movlw	45
  5499  011B8C  18DE               	xorwf	postinc2,w,c
  5500  011B8E  A4D8               	btfss	status,2,c
  5501  011B90  D003               	goto	l8542
  5502                           
  5503                           ; BSR set to: 0
  5504  011B92  0100               	movlb	0	; () banked
  5505  011B94  2B6A               	incf	atoi@sign& (0+255),f,b
  5506  011B96  D02E               	goto	l8548
  5507  011B98                     l8542:
  5508                           
  5509                           ; BSR set to: 0
  5510  011B98  C066  FFD9         	movff	atoi@s,fsr2l
  5511  011B9C  C067  FFDA         	movff	atoi@s+1,fsr2h
  5512  011BA0  0E2B               	movlw	43
  5513  011BA2  18DE               	xorwf	postinc2,w,c
  5514  011BA4  A4D8               	btfss	status,2,c
  5515  011BA6  D029               	goto	l8550
  5516  011BA8  D025               	goto	l8548
  5517  011BAA                     l8546:
  5518  011BAA  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5519  011BAE  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5520  011BB2  0E00               	movlw	0
  5521  011BB4  0100               	movlb	0	; () banked
  5522  011BB6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5523  011BB8  0E0A               	movlw	10
  5524  011BBA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5525  011BBC  EC68  F097         	call	___wmul	;wreg free
  5526  011BC0  C066  FFD9         	movff	atoi@s,fsr2l
  5527  011BC4  C067  FFDA         	movff	atoi@s+1,fsr2h
  5528  011BC8  50DF               	movf	indf2,w,c
  5529  011BCA  0100               	movlb	0	; () banked
  5530  011BCC  6F68               	movwf	??_atoi& (0+255),b
  5531  011BCE  6B69               	clrf	(??_atoi+1)& (0+255),b
  5532  011BD0  0100               	movlb	0	; () banked
  5533  011BD2  5160               	movf	?___wmul& (0+255),w,b
  5534  011BD4  0100               	movlb	0	; () banked
  5535  011BD6  2768               	addwf	??_atoi& (0+255),f,b
  5536  011BD8  0100               	movlb	0	; () banked
  5537  011BDA  5161               	movf	(?___wmul+1)& (0+255),w,b
  5538  011BDC  0100               	movlb	0	; () banked
  5539  011BDE  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5540  011BE0  0ED0               	movlw	208
  5541  011BE2  0100               	movlb	0	; () banked
  5542  011BE4  2568               	addwf	??_atoi& (0+255),w,b
  5543  011BE6  0100               	movlb	0	; () banked
  5544  011BE8  6F6B               	movwf	atoi@a& (0+255),b
  5545  011BEA  0EFF               	movlw	255
  5546  011BEC  0100               	movlb	0	; () banked
  5547  011BEE  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5548  011BF0  0100               	movlb	0	; () banked
  5549  011BF2  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5550  011BF4                     l8548:
  5551                           
  5552                           ; BSR set to: 0
  5553  011BF4  0100               	movlb	0	; () banked
  5554  011BF6  4B66               	infsnz	atoi@s& (0+255),f,b
  5555  011BF8  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5556  011BFA                     l8550:
  5557                           
  5558                           ; BSR set to: 0
  5559  011BFA  C066  FFD9         	movff	atoi@s,fsr2l
  5560  011BFE  C067  FFDA         	movff	atoi@s+1,fsr2h
  5561  011C02  50DF               	movf	indf2,w,c
  5562  011C04  EC83  F097         	call	_isdigit
  5563  011C08  B0D8               	btfsc	status,0,c
  5564  011C0A  D7CF               	goto	l8546
  5565  011C0C  0100               	movlb	0	; () banked
  5566  011C0E  516A               	movf	atoi@sign& (0+255),w,b
  5567  011C10  0100               	movlb	0	; () banked
  5568  011C12  B4D8               	btfsc	status,2,c
  5569  011C14  D00E               	goto	l1700
  5570                           
  5571                           ; BSR set to: 0
  5572  011C16  C06B  F068         	movff	atoi@a,??_atoi
  5573  011C1A  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5574  011C1E  0100               	movlb	0	; () banked
  5575  011C20  1F68               	comf	??_atoi& (0+255),f,b
  5576  011C22  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5577  011C24  4B68               	infsnz	??_atoi& (0+255),f,b
  5578  011C26  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5579  011C28  C068  F066         	movff	??_atoi,?_atoi
  5580  011C2C  C069  F067         	movff	??_atoi+1,?_atoi+1
  5581  011C30  0012               	return	
  5582  011C32                     l1700:
  5583                           
  5584                           ; BSR set to: 0
  5585  011C32  C06B  F066         	movff	atoi@a,?_atoi
  5586  011C36  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5587                           
  5588                           ; BSR set to: 0
  5589  011C3A  0012               	return		;funcret
  5590  011C3C                     __end_of_atoi:
  5591                           	opt stack 0
  5592                           tblptru	equ	0xFF8
  5593                           tblptrh	equ	0xFF7
  5594                           tblptrl	equ	0xFF6
  5595                           tablat	equ	0xFF5
  5596                           prodh	equ	0xFF4
  5597                           prodl	equ	0xFF3
  5598                           intcon	equ	0xFF2
  5599                           indf0	equ	0xFEF
  5600                           postinc0	equ	0xFEE
  5601                           fsr0h	equ	0xFEA
  5602                           fsr0l	equ	0xFE9
  5603                           wreg	equ	0xFE8
  5604                           postdec1	equ	0xFE5
  5605                           fsr1h	equ	0xFE2
  5606                           fsr1l	equ	0xFE1
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           postdec2	equ	0xFDD
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _isdigit *****************
  5615 ;; Defined at:
  5616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  c               1    wreg     unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  c               1    1[BANK0 ] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;		None               void
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5631 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5634 ;;Total ram usage:        3 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:    4
  5637 ;; This function calls:
  5638 ;;		Nothing
  5639 ;; This function is called by:
  5640 ;;		_sprintf
  5641 ;;		_atoi
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text11
  5646  012F06                     __ptext11:
  5647                           	opt stack 0
  5648  012F06                     _isdigit:
  5649                           	opt stack 20
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;incstack = 0
  5653                           ;isdigit@c stored from wreg
  5654  012F06  0100               	movlb	0	; () banked
  5655  012F08  6F61               	movwf	isdigit@c& (0+255),b
  5656  012F0A  0E00               	movlw	0
  5657  012F0C  0100               	movlb	0	; () banked
  5658  012F0E  6F60               	movwf	_isdigit$6089& (0+255),b
  5659                           
  5660                           ; BSR set to: 0
  5661  012F10  0E3A               	movlw	58
  5662  012F12  0100               	movlb	0	; () banked
  5663  012F14  6161               	cpfslt	isdigit@c& (0+255),b
  5664  012F16  D007               	goto	l8204
  5665                           
  5666                           ; BSR set to: 0
  5667  012F18  0E2F               	movlw	47
  5668  012F1A  0100               	movlb	0	; () banked
  5669  012F1C  6561               	cpfsgt	isdigit@c& (0+255),b
  5670  012F1E  D003               	goto	l8204
  5671                           
  5672                           ; BSR set to: 0
  5673  012F20  0E01               	movlw	1
  5674  012F22  0100               	movlb	0	; () banked
  5675  012F24  6F60               	movwf	_isdigit$6089& (0+255),b
  5676  012F26                     l8204:
  5677                           
  5678                           ; BSR set to: 0
  5679  012F26  C060  F020         	movff	_isdigit$6089,??_isdigit
  5680  012F2A  3020               	rrcf	??_isdigit,w,c
  5681  012F2C  0012               	return	
  5682  012F2E                     __end_of_isdigit:
  5683                           	opt stack 0
  5684                           tblptru	equ	0xFF8
  5685                           tblptrh	equ	0xFF7
  5686                           tblptrl	equ	0xFF6
  5687                           tablat	equ	0xFF5
  5688                           prodh	equ	0xFF4
  5689                           prodl	equ	0xFF3
  5690                           intcon	equ	0xFF2
  5691                           indf0	equ	0xFEF
  5692                           postinc0	equ	0xFEE
  5693                           fsr0h	equ	0xFEA
  5694                           fsr0l	equ	0xFE9
  5695                           wreg	equ	0xFE8
  5696                           postdec1	equ	0xFE5
  5697                           fsr1h	equ	0xFE2
  5698                           fsr1l	equ	0xFE1
  5699                           indf2	equ	0xFDF
  5700                           postinc2	equ	0xFDE
  5701                           postdec2	equ	0xFDD
  5702                           fsr2h	equ	0xFDA
  5703                           fsr2l	equ	0xFD9
  5704                           status	equ	0xFD8
  5705                           
  5706 ;; *************** function _ringbuf_put_num *****************
  5707 ;; Defined at:
  5708 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  rb              2   17[BANK0 ] PTR struct ringbuf
  5711 ;;		 -> uart_tx(8), 
  5712 ;;  value           2   19[BANK0 ] const unsigned int 
  5713 ;;  digits          1   21[BANK0 ] unsigned char 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  i               1   22[BANK0 ] unsigned char 
  5716 ;;  temp            2   23[BANK0 ] unsigned int 
  5717 ;; Return value:  Size  Location     Type
  5718 ;;		None               void
  5719 ;; Registers used:
  5720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5726 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5727 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5729 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5730 ;;Total ram usage:        8 bytes
  5731 ;; Hardware stack levels used:    1
  5732 ;; Hardware stack levels required when called:    6
  5733 ;; This function calls:
  5734 ;;		___lwdiv
  5735 ;;		___lwmod
  5736 ;;		_ringbuf_put
  5737 ;; This function is called by:
  5738 ;;		_terminal_task
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text12
  5743  01293A                     __ptext12:
  5744                           	opt stack 0
  5745  01293A                     _ringbuf_put_num:
  5746                           	opt stack 23
  5747                           
  5748                           ;My_ringbuf.c: 29: while (digits--) {
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;incstack = 0
  5752  01293A  D039               	goto	l8738
  5753  01293C                     l205:
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5757  01293C  C073  F077         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5758  012940  C074  F078         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5762  012944  0E00               	movlw	0
  5763  012946  0100               	movlb	0	; () banked
  5764  012948  6F76               	movwf	ringbuf_put_num@i& (0+255),b
  5765  01294A  D011               	goto	l8732
  5766  01294C                     l8728:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;My_ringbuf.c: 32: temp /= 10;
  5770  01294C  C077  F066         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5771  012950  C078  F067         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5772  012954  0E00               	movlw	0
  5773  012956  0100               	movlb	0	; () banked
  5774  012958  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5775  01295A  0E0A               	movlw	10
  5776  01295C  6F68               	movwf	___lwdiv@divisor& (0+255),b
  5777  01295E  EC1A  F095         	call	___lwdiv	;wreg free
  5778  012962  C066  F077         	movff	?___lwdiv,ringbuf_put_num@temp
  5779  012966  C067  F078         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5780  01296A  0100               	movlb	0	; () banked
  5781  01296C  2B76               	incf	ringbuf_put_num@i& (0+255),f,b
  5782  01296E                     l8732:
  5783                           
  5784                           ; BSR set to: 0
  5785  01296E  0100               	movlb	0	; () banked
  5786  012970  5175               	movf	ringbuf_put_num@digits& (0+255),w,b
  5787  012972  0100               	movlb	0	; () banked
  5788  012974  5D76               	subwf	ringbuf_put_num@i& (0+255),w,b
  5789  012976  A0D8               	btfss	status,0,c
  5790  012978  D7E9               	goto	l8728
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;My_ringbuf.c: 33: }
  5794                           ;My_ringbuf.c: 34: temp %= 10;
  5795                           
  5796                           ; BSR set to: 0
  5797  01297A  C077  F06D         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5798  01297E  C078  F06E         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5799  012982  0E00               	movlw	0
  5800  012984  0100               	movlb	0	; () banked
  5801  012986  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5802  012988  0E0A               	movlw	10
  5803  01298A  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5804  01298C  EC5F  F096         	call	___lwmod	;wreg free
  5805  012990  C06D  F077         	movff	?___lwmod,ringbuf_put_num@temp
  5806  012994  C06E  F078         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5807                           
  5808                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5809  012998  C071  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5810  01299C  C072  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5811  0129A0  0100               	movlb	0	; () banked
  5812  0129A2  5177               	movf	ringbuf_put_num@temp& (0+255),w,b
  5813  0129A4  0F30               	addlw	48
  5814  0129A6  0100               	movlb	0	; () banked
  5815  0129A8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5816  0129AA  EC6C  F08F         	call	_ringbuf_put	;wreg free
  5817  0129AE                     l8738:
  5818  0129AE  0100               	movlb	0	; () banked
  5819  0129B0  0775               	decf	ringbuf_put_num@digits& (0+255),f,b
  5820  0129B2  0100               	movlb	0	; () banked
  5821  0129B4  2975               	incf	ringbuf_put_num@digits& (0+255),w,b
  5822  0129B6  B4D8               	btfsc	status,2,c
  5823  0129B8  0012               	return	
  5824  0129BA  D7C0               	goto	l205
  5825  0129BC                     __end_of_ringbuf_put_num:
  5826                           	opt stack 0
  5827                           tblptru	equ	0xFF8
  5828                           tblptrh	equ	0xFF7
  5829                           tblptrl	equ	0xFF6
  5830                           tablat	equ	0xFF5
  5831                           prodh	equ	0xFF4
  5832                           prodl	equ	0xFF3
  5833                           intcon	equ	0xFF2
  5834                           indf0	equ	0xFEF
  5835                           postinc0	equ	0xFEE
  5836                           fsr0h	equ	0xFEA
  5837                           fsr0l	equ	0xFE9
  5838                           wreg	equ	0xFE8
  5839                           postdec1	equ	0xFE5
  5840                           fsr1h	equ	0xFE2
  5841                           fsr1l	equ	0xFE1
  5842                           indf2	equ	0xFDF
  5843                           postinc2	equ	0xFDE
  5844                           postdec2	equ	0xFDD
  5845                           fsr2h	equ	0xFDA
  5846                           fsr2l	equ	0xFD9
  5847                           status	equ	0xFD8
  5848                           
  5849 ;; *************** function _ringbuf_put *****************
  5850 ;; Defined at:
  5851 ;;		line 20 in file "../My_library/My_ringbuf.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5854 ;;		 -> usb_rx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
  5855 ;;  asciicode       1   10[BANK0 ] unsigned char 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;		None
  5858 ;; Return value:  Size  Location     Type
  5859 ;;		None               void
  5860 ;; Registers used:
  5861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5867 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5869 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5870 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5871 ;;Total ram usage:        7 bytes
  5872 ;; Hardware stack levels used:    1
  5873 ;; Hardware stack levels required when called:    5
  5874 ;; This function calls:
  5875 ;;		_ringbuf_num
  5876 ;; This function is called by:
  5877 ;;		_ringbuf_put_num
  5878 ;;		_ringbuf_put_str
  5879 ;;		_terminal_task
  5880 ;;		_USB_task
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text13
  5885  011ED8                     __ptext13:
  5886                           	opt stack 0
  5887  011ED8                     _ringbuf_put:
  5888                           	opt stack 20
  5889                           
  5890                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;incstack = 0
  5894  011ED8  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  5895  011EDC  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  5896  011EE0  EC1E  F08E         	call	_ringbuf_num	;wreg free
  5897  011EE4  0100               	movlb	0	; () banked
  5898  011EE6  EE20 F002          	lfsr	2,2
  5899  011EEA  5168               	movf	ringbuf_put@rb& (0+255),w,b
  5900  011EEC  26D9               	addwf	fsr2l,f,c
  5901  011EEE  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5902  011EF0  22DA               	addwfc	fsr2h,f,c
  5903  011EF2  50DE               	movf	postinc2,w,c
  5904  011EF4  0100               	movlb	0	; () banked
  5905  011EF6  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  5906  011EF8  50DE               	movf	postinc2,w,c
  5907  011EFA  0100               	movlb	0	; () banked
  5908  011EFC  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  5909  011EFE  B0D8               	btfsc	status,0,c
  5910  011F00  0012               	return	
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
  5914  011F02  0100               	movlb	0	; () banked
  5915  011F04  EE20 F004          	lfsr	2,4
  5916  011F08  5168               	movf	ringbuf_put@rb& (0+255),w,b
  5917  011F0A  26D9               	addwf	fsr2l,f,c
  5918  011F0C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5919  011F0E  22DA               	addwfc	fsr2h,f,c
  5920  011F10  CFDE F06B          	movff	postinc2,??_ringbuf_put
  5921  011F14  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
  5922  011F18  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
  5923  011F1C  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  5924  011F20  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
  5925  011F24  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
  5926  011F28  0100               	movlb	0	; () banked
  5927  011F2A  516B               	movf	??_ringbuf_put& (0+255),w,b
  5928  011F2C  0100               	movlb	0	; () banked
  5929  011F2E  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  5930  011F30  6ED9               	movwf	fsr2l,c
  5931  011F32  0100               	movlb	0	; () banked
  5932  011F34  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
  5933  011F36  0100               	movlb	0	; () banked
  5934  011F38  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  5935  011F3A  6EDA               	movwf	fsr2h,c
  5936  011F3C  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  5940  011F40  0100               	movlb	0	; () banked
  5941  011F42  EE20 F002          	lfsr	2,2
  5942  011F46  5168               	movf	ringbuf_put@rb& (0+255),w,b
  5943  011F48  26D9               	addwf	fsr2l,f,c
  5944  011F4A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5945  011F4C  22DA               	addwfc	fsr2h,f,c
  5946  011F4E  0100               	movlb	0	; () banked
  5947  011F50  EE10 F004          	lfsr	1,4
  5948  011F54  5168               	movf	ringbuf_put@rb& (0+255),w,b
  5949  011F56  26E1               	addwf	fsr1l,f,c
  5950  011F58  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5951  011F5A  22E2               	addwfc	fsr1h,f,c
  5952  011F5C  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
  5953  011F60  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
  5954  011F64  0E01               	movlw	1
  5955  011F66  0100               	movlb	0	; () banked
  5956  011F68  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  5957  011F6A  0E00               	movlw	0
  5958  011F6C  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  5959  011F6E  50DE               	movf	postinc2,w,c
  5960  011F70  0100               	movlb	0	; () banked
  5961  011F72  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  5962  011F74  50DE               	movf	postinc2,w,c
  5963  011F76  0100               	movlb	0	; () banked
  5964  011F78  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  5965  011F7A  B0D8               	btfsc	status,0,c
  5966  011F7C  D00B               	goto	l8146
  5967                           
  5968                           ; BSR set to: 0
  5969  011F7E  0100               	movlb	0	; () banked
  5970  011F80  EE20 F004          	lfsr	2,4
  5971  011F84  5168               	movf	ringbuf_put@rb& (0+255),w,b
  5972  011F86  26D9               	addwf	fsr2l,f,c
  5973  011F88  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5974  011F8A  22DA               	addwfc	fsr2h,f,c
  5975  011F8C  2ADE               	incf	postinc2,f,c
  5976  011F8E  0E00               	movlw	0
  5977  011F90  22DD               	addwfc	postdec2,f,c
  5978  011F92  0012               	return	
  5979  011F94                     l8146:
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;My_ringbuf.c: 24: else rb->head = 0;
  5983  011F94  0100               	movlb	0	; () banked
  5984  011F96  EE20 F004          	lfsr	2,4
  5985  011F9A  5168               	movf	ringbuf_put@rb& (0+255),w,b
  5986  011F9C  26D9               	addwf	fsr2l,f,c
  5987  011F9E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  5988  011FA0  22DA               	addwfc	fsr2h,f,c
  5989  011FA2  0E00               	movlw	0
  5990  011FA4  6EDE               	movwf	postinc2,c
  5991  011FA6  0E00               	movlw	0
  5992  011FA8  6EDD               	movwf	postdec2,c
  5993                           
  5994                           ; BSR set to: 0
  5995  011FAA  0012               	return	
  5996  011FAC                     __end_of_ringbuf_put:
  5997                           	opt stack 0
  5998                           tblptru	equ	0xFF8
  5999                           tblptrh	equ	0xFF7
  6000                           tblptrl	equ	0xFF6
  6001                           tablat	equ	0xFF5
  6002                           prodh	equ	0xFF4
  6003                           prodl	equ	0xFF3
  6004                           intcon	equ	0xFF2
  6005                           indf0	equ	0xFEF
  6006                           postinc0	equ	0xFEE
  6007                           fsr0h	equ	0xFEA
  6008                           fsr0l	equ	0xFE9
  6009                           wreg	equ	0xFE8
  6010                           postinc1	equ	0xFE6
  6011                           postdec1	equ	0xFE5
  6012                           fsr1h	equ	0xFE2
  6013                           fsr1l	equ	0xFE1
  6014                           indf2	equ	0xFDF
  6015                           postinc2	equ	0xFDE
  6016                           postdec2	equ	0xFDD
  6017                           fsr2h	equ	0xFDA
  6018                           fsr2l	equ	0xFD9
  6019                           status	equ	0xFD8
  6020                           
  6021 ;; *************** function ___lwmod *****************
  6022 ;; Defined at:
  6023 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  dividend        2   13[BANK0 ] unsigned int 
  6026 ;;  divisor         2   15[BANK0 ] unsigned int 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  counter         1   31[COMRAM] unsigned char 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  2   13[BANK0 ] unsigned int 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2, status,0
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6038 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6041 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6042 ;;Total ram usage:        5 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; Hardware stack levels required when called:    4
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_ringbuf_put_num
  6049 ;;		_sprintf
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text14
  6054  012CBE                     __ptext14:
  6055                           	opt stack 0
  6056  012CBE                     ___lwmod:
  6057                           	opt stack 20
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;incstack = 0
  6061  012CBE  0100               	movlb	0	; () banked
  6062  012CC0  516F               	movf	___lwmod@divisor& (0+255),w,b
  6063  012CC2  0100               	movlb	0	; () banked
  6064  012CC4  1170               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6065  012CC6  B4D8               	btfsc	status,2,c
  6066  012CC8  D023               	goto	l1960
  6067                           
  6068                           ; BSR set to: 0
  6069  012CCA  0E01               	movlw	1
  6070  012CCC  6E20               	movwf	___lwmod@counter,c
  6071  012CCE  D005               	goto	l8242
  6072  012CD0                     l8240:
  6073                           
  6074                           ; BSR set to: 0
  6075  012CD0  0100               	movlb	0	; () banked
  6076  012CD2  90D8               	bcf	status,0,c
  6077  012CD4  376F               	rlcf	___lwmod@divisor& (0+255),f,b
  6078  012CD6  3770               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6079  012CD8  2A20               	incf	___lwmod@counter,f,c
  6080  012CDA                     l8242:
  6081                           
  6082                           ; BSR set to: 0
  6083  012CDA  0100               	movlb	0	; () banked
  6084  012CDC  AF70               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6085  012CDE  D7F8               	goto	l8240
  6086  012CE0                     l8244:
  6087                           
  6088                           ; BSR set to: 0
  6089  012CE0  0100               	movlb	0	; () banked
  6090  012CE2  516F               	movf	___lwmod@divisor& (0+255),w,b
  6091  012CE4  0100               	movlb	0	; () banked
  6092  012CE6  5D6D               	subwf	___lwmod@dividend& (0+255),w,b
  6093  012CE8  0100               	movlb	0	; () banked
  6094  012CEA  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6095  012CEC  0100               	movlb	0	; () banked
  6096  012CEE  596E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6097  012CF0  A0D8               	btfss	status,0,c
  6098  012CF2  D008               	goto	l8248
  6099                           
  6100                           ; BSR set to: 0
  6101  012CF4  0100               	movlb	0	; () banked
  6102  012CF6  516F               	movf	___lwmod@divisor& (0+255),w,b
  6103  012CF8  0100               	movlb	0	; () banked
  6104  012CFA  5F6D               	subwf	___lwmod@dividend& (0+255),f,b
  6105  012CFC  0100               	movlb	0	; () banked
  6106  012CFE  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6107  012D00  0100               	movlb	0	; () banked
  6108  012D02  5B6E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6109  012D04                     l8248:
  6110                           
  6111                           ; BSR set to: 0
  6112  012D04  0100               	movlb	0	; () banked
  6113  012D06  90D8               	bcf	status,0,c
  6114  012D08  3370               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6115  012D0A  336F               	rrcf	___lwmod@divisor& (0+255),f,b
  6116                           
  6117                           ; BSR set to: 0
  6118  012D0C  2E20               	decfsz	___lwmod@counter,f,c
  6119  012D0E  D7E8               	goto	l8244
  6120  012D10                     l1960:
  6121                           
  6122                           ; BSR set to: 0
  6123  012D10  C06D  F06D         	movff	___lwmod@dividend,?___lwmod
  6124  012D14  C06E  F06E         	movff	___lwmod@dividend+1,?___lwmod+1
  6125                           
  6126                           ; BSR set to: 0
  6127  012D18  0012               	return		;funcret
  6128  012D1A                     __end_of___lwmod:
  6129                           	opt stack 0
  6130                           tblptru	equ	0xFF8
  6131                           tblptrh	equ	0xFF7
  6132                           tblptrl	equ	0xFF6
  6133                           tablat	equ	0xFF5
  6134                           prodh	equ	0xFF4
  6135                           prodl	equ	0xFF3
  6136                           intcon	equ	0xFF2
  6137                           indf0	equ	0xFEF
  6138                           postinc0	equ	0xFEE
  6139                           fsr0h	equ	0xFEA
  6140                           fsr0l	equ	0xFE9
  6141                           wreg	equ	0xFE8
  6142                           postinc1	equ	0xFE6
  6143                           postdec1	equ	0xFE5
  6144                           fsr1h	equ	0xFE2
  6145                           fsr1l	equ	0xFE1
  6146                           indf2	equ	0xFDF
  6147                           postinc2	equ	0xFDE
  6148                           postdec2	equ	0xFDD
  6149                           fsr2h	equ	0xFDA
  6150                           fsr2l	equ	0xFD9
  6151                           status	equ	0xFD8
  6152                           
  6153 ;; *************** function _ringbuf_pop *****************
  6154 ;; Defined at:
  6155 ;;		line 45 in file "../My_library/My_ringbuf.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6158 ;;		 -> usb_tx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  ret             1   31[COMRAM] unsigned char 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  1    wreg      unsigned char 
  6163 ;; Registers used:
  6164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6174 ;;Total ram usage:        7 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    5
  6177 ;; This function calls:
  6178 ;;		_ringbuf_num
  6179 ;; This function is called by:
  6180 ;;		_terminal_task
  6181 ;;		_USB_task
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text15
  6186  012080                     __ptext15:
  6187                           	opt stack 0
  6188  012080                     _ringbuf_pop:
  6189                           	opt stack 24
  6190                           
  6191                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;incstack = 0
  6195  012080  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  6196  012084  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  6197  012088  EC1E  F08E         	call	_ringbuf_num	;wreg free
  6198  01208C  0100               	movlb	0	; () banked
  6199  01208E  5160               	movf	?_ringbuf_num& (0+255),w,b
  6200  012090  0100               	movlb	0	; () banked
  6201  012092  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6202  012094  B4D8               	btfsc	status,2,c
  6203  012096  D056               	goto	l8756
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  6207  012098  0100               	movlb	0	; () banked
  6208  01209A  EE20 F006          	lfsr	2,6
  6209  01209E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  6210  0120A0  26D9               	addwf	fsr2l,f,c
  6211  0120A2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6212  0120A4  22DA               	addwfc	fsr2h,f,c
  6213  0120A6  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  6214  0120AA  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  6215  0120AE  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  6216  0120B2  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  6217  0120B6  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  6218  0120BA  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  6219  0120BE  0100               	movlb	0	; () banked
  6220  0120C0  516A               	movf	??_ringbuf_pop& (0+255),w,b
  6221  0120C2  0100               	movlb	0	; () banked
  6222  0120C4  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  6223  0120C6  6ED9               	movwf	fsr2l,c
  6224  0120C8  0100               	movlb	0	; () banked
  6225  0120CA  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  6226  0120CC  0100               	movlb	0	; () banked
  6227  0120CE  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  6228  0120D0  6EDA               	movwf	fsr2h,c
  6229  0120D2  50DF               	movf	indf2,w,c
  6230  0120D4  6E20               	movwf	ringbuf_pop@ret,c
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  6234  0120D6  0100               	movlb	0	; () banked
  6235  0120D8  EE20 F002          	lfsr	2,2
  6236  0120DC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  6237  0120DE  26D9               	addwf	fsr2l,f,c
  6238  0120E0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6239  0120E2  22DA               	addwfc	fsr2h,f,c
  6240  0120E4  0100               	movlb	0	; () banked
  6241  0120E6  EE10 F006          	lfsr	1,6
  6242  0120EA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  6243  0120EC  26E1               	addwf	fsr1l,f,c
  6244  0120EE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6245  0120F0  22E2               	addwfc	fsr1h,f,c
  6246  0120F2  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  6247  0120F6  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  6248  0120FA  0E01               	movlw	1
  6249  0120FC  0100               	movlb	0	; () banked
  6250  0120FE  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  6251  012100  0E00               	movlw	0
  6252  012102  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  6253  012104  50DE               	movf	postinc2,w,c
  6254  012106  0100               	movlb	0	; () banked
  6255  012108  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  6256  01210A  50DE               	movf	postinc2,w,c
  6257  01210C  0100               	movlb	0	; () banked
  6258  01210E  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  6259  012110  B0D8               	btfsc	status,0,c
  6260  012112  D00B               	goto	l8748
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;My_ringbuf.c: 49: rb->tail++;
  6264  012114  0100               	movlb	0	; () banked
  6265  012116  EE20 F006          	lfsr	2,6
  6266  01211A  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  6267  01211C  26D9               	addwf	fsr2l,f,c
  6268  01211E  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6269  012120  22DA               	addwfc	fsr2h,f,c
  6270  012122  2ADE               	incf	postinc2,f,c
  6271  012124  0E00               	movlw	0
  6272  012126  22DD               	addwfc	postdec2,f,c
  6273                           
  6274                           ;My_ringbuf.c: 50: } else {
  6275  012128  D00B               	goto	l8750
  6276  01212A                     l8748:
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;My_ringbuf.c: 51: rb->tail = 0;
  6280  01212A  0100               	movlb	0	; () banked
  6281  01212C  EE20 F006          	lfsr	2,6
  6282  012130  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  6283  012132  26D9               	addwf	fsr2l,f,c
  6284  012134  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  6285  012136  22DA               	addwfc	fsr2h,f,c
  6286  012138  0E00               	movlw	0
  6287  01213A  6EDE               	movwf	postinc2,c
  6288  01213C  0E00               	movlw	0
  6289  01213E  6EDD               	movwf	postdec2,c
  6290  012140                     l8750:
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;My_ringbuf.c: 52: }
  6294                           ;My_ringbuf.c: 53: return ret;
  6295  012140  5020               	movf	ringbuf_pop@ret,w,c
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;My_ringbuf.c: 54: } else {
  6299                           
  6300                           ; BSR set to: 0
  6301  012142  0012               	return	
  6302  012144                     l8756:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;My_ringbuf.c: 55: return 0;
  6306  012144  0E00               	movlw	0
  6307                           
  6308                           ; BSR set to: 0
  6309  012146  0012               	return	
  6310  012148                     __end_of_ringbuf_pop:
  6311                           	opt stack 0
  6312                           tblptru	equ	0xFF8
  6313                           tblptrh	equ	0xFF7
  6314                           tblptrl	equ	0xFF6
  6315                           tablat	equ	0xFF5
  6316                           prodh	equ	0xFF4
  6317                           prodl	equ	0xFF3
  6318                           intcon	equ	0xFF2
  6319                           indf0	equ	0xFEF
  6320                           postinc0	equ	0xFEE
  6321                           fsr0h	equ	0xFEA
  6322                           fsr0l	equ	0xFE9
  6323                           wreg	equ	0xFE8
  6324                           postinc1	equ	0xFE6
  6325                           postdec1	equ	0xFE5
  6326                           fsr1h	equ	0xFE2
  6327                           fsr1l	equ	0xFE1
  6328                           indf2	equ	0xFDF
  6329                           postinc2	equ	0xFDE
  6330                           postdec2	equ	0xFDD
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _ringbuf_delete *****************
  6336 ;; Defined at:
  6337 ;;		line 66 in file "../My_library/My_ringbuf.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6340 ;;		 -> terminal_task@command(8), 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;		None               void
  6345 ;; Registers used:
  6346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6356 ;;Total ram usage:        2 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    4
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_terminal_task
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text16
  6367  012FA4                     __ptext16:
  6368                           	opt stack 0
  6369  012FA4                     _ringbuf_delete:
  6370                           	opt stack 25
  6371                           
  6372                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;incstack = 0
  6376  012FA4  0100               	movlb	0	; () banked
  6377  012FA6  EE20 F006          	lfsr	2,6
  6378  012FAA  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6379  012FAC  26D9               	addwf	fsr2l,f,c
  6380  012FAE  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6381  012FB0  22DA               	addwfc	fsr2h,f,c
  6382  012FB2  0100               	movlb	0	; () banked
  6383  012FB4  EE10 F004          	lfsr	1,4
  6384  012FB8  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6385  012FBA  26E1               	addwf	fsr1l,f,c
  6386  012FBC  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6387  012FBE  22E2               	addwfc	fsr1h,f,c
  6388  012FC0  CFDE FFE6          	movff	postinc2,postinc1
  6389  012FC4  CFDD FFE5          	movff	postdec2,postdec1
  6390                           
  6391                           ; BSR set to: 0
  6392  012FC8  0012               	return		;funcret
  6393  012FCA                     __end_of_ringbuf_delete:
  6394                           	opt stack 0
  6395                           tblptru	equ	0xFF8
  6396                           tblptrh	equ	0xFF7
  6397                           tblptrl	equ	0xFF6
  6398                           tablat	equ	0xFF5
  6399                           prodh	equ	0xFF4
  6400                           prodl	equ	0xFF3
  6401                           intcon	equ	0xFF2
  6402                           indf0	equ	0xFEF
  6403                           postinc0	equ	0xFEE
  6404                           fsr0h	equ	0xFEA
  6405                           fsr0l	equ	0xFE9
  6406                           wreg	equ	0xFE8
  6407                           postinc1	equ	0xFE6
  6408                           postdec1	equ	0xFE5
  6409                           fsr1h	equ	0xFE2
  6410                           fsr1l	equ	0xFE1
  6411                           indf2	equ	0xFDF
  6412                           postinc2	equ	0xFDE
  6413                           postdec2	equ	0xFDD
  6414                           fsr2h	equ	0xFDA
  6415                           fsr2l	equ	0xFD9
  6416                           status	equ	0xFD8
  6417                           
  6418 ;; *************** function _ringbuf_backspace *****************
  6419 ;; Defined at:
  6420 ;;		line 59 in file "../My_library/My_ringbuf.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6423 ;;		 -> terminal_task@command(8), 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;		None               void
  6428 ;; Registers used:
  6429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6435 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6437 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6438 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6439 ;;Total ram usage:        6 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    5
  6442 ;; This function calls:
  6443 ;;		_ringbuf_num
  6444 ;; This function is called by:
  6445 ;;		_terminal_task
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text17
  6450  012820                     __ptext17:
  6451                           	opt stack 0
  6452  012820                     _ringbuf_backspace:
  6453                           	opt stack 24
  6454                           
  6455                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;incstack = 0
  6459  012820  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6460  012824  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6461  012828  EC1E  F08E         	call	_ringbuf_num	;wreg free
  6462  01282C  0100               	movlb	0	; () banked
  6463  01282E  5160               	movf	?_ringbuf_num& (0+255),w,b
  6464  012830  0100               	movlb	0	; () banked
  6465  012832  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6466  012834  B4D8               	btfsc	status,2,c
  6467  012836  0012               	return	
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6471  012838  0100               	movlb	0	; () banked
  6472  01283A  EE20 F004          	lfsr	2,4
  6473  01283E  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6474  012840  26D9               	addwf	fsr2l,f,c
  6475  012842  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6476  012844  22DA               	addwfc	fsr2h,f,c
  6477  012846  50DE               	movf	postinc2,w,c
  6478  012848  10DE               	iorwf	postinc2,w,c
  6479  01284A  B4D8               	btfsc	status,2,c
  6480  01284C  D00B               	goto	l8766
  6481                           
  6482                           ; BSR set to: 0
  6483  01284E  0100               	movlb	0	; () banked
  6484  012850  EE20 F004          	lfsr	2,4
  6485  012854  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6486  012856  26D9               	addwf	fsr2l,f,c
  6487  012858  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6488  01285A  22DA               	addwfc	fsr2h,f,c
  6489  01285C  06DE               	decf	postinc2,f,c
  6490  01285E  0E00               	movlw	0
  6491  012860  5ADD               	subwfb	postdec2,f,c
  6492  012862  0012               	return	
  6493  012864                     l8766:
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6497  012864  0EFF               	movlw	255
  6498  012866  0100               	movlb	0	; () banked
  6499  012868  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6500  01286A  0EFF               	movlw	255
  6501  01286C  0100               	movlb	0	; () banked
  6502  01286E  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6503  012870  0100               	movlb	0	; () banked
  6504  012872  EE20 F002          	lfsr	2,2
  6505  012876  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6506  012878  26D9               	addwf	fsr2l,f,c
  6507  01287A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6508  01287C  22DA               	addwfc	fsr2h,f,c
  6509  01287E  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6510  012882  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6511  012886  0100               	movlb	0	; () banked
  6512  012888  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6513  01288A  0100               	movlb	0	; () banked
  6514  01288C  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6515  01288E  0100               	movlb	0	; () banked
  6516  012890  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6517  012892  0100               	movlb	0	; () banked
  6518  012894  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6519  012896  0100               	movlb	0	; () banked
  6520  012898  EE20 F004          	lfsr	2,4
  6521  01289C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6522  01289E  26D9               	addwf	fsr2l,f,c
  6523  0128A0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6524  0128A2  22DA               	addwfc	fsr2h,f,c
  6525  0128A4  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6526  0128A8  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6527                           
  6528                           ; BSR set to: 0
  6529  0128AC  0012               	return	
  6530  0128AE                     __end_of_ringbuf_backspace:
  6531                           	opt stack 0
  6532                           tblptru	equ	0xFF8
  6533                           tblptrh	equ	0xFF7
  6534                           tblptrl	equ	0xFF6
  6535                           tablat	equ	0xFF5
  6536                           prodh	equ	0xFF4
  6537                           prodl	equ	0xFF3
  6538                           intcon	equ	0xFF2
  6539                           indf0	equ	0xFEF
  6540                           postinc0	equ	0xFEE
  6541                           fsr0h	equ	0xFEA
  6542                           fsr0l	equ	0xFE9
  6543                           wreg	equ	0xFE8
  6544                           postinc1	equ	0xFE6
  6545                           postdec1	equ	0xFE5
  6546                           fsr1h	equ	0xFE2
  6547                           fsr1l	equ	0xFE1
  6548                           indf2	equ	0xFDF
  6549                           postinc2	equ	0xFDE
  6550                           postdec2	equ	0xFDD
  6551                           fsr2h	equ	0xFDA
  6552                           fsr2l	equ	0xFD9
  6553                           status	equ	0xFD8
  6554                           
  6555 ;; *************** function _main_init *****************
  6556 ;; Defined at:
  6557 ;;		line 287 in file "PIC18F27J53-killifish_light05.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;		None
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;		None               void
  6564 ;; Registers used:
  6565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6575 ;;Total ram usage:        0 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    9
  6578 ;; This function calls:
  6579 ;;		_ADC_init
  6580 ;;		_OSC_init
  6581 ;;		_PWM_init
  6582 ;;		_RTCC_init
  6583 ;;		_UART_init
  6584 ;;		_ringbuf_init
  6585 ;;		_timer0_init
  6586 ;;		_timer1_init
  6587 ;;		_timer3_init
  6588 ;; This function is called by:
  6589 ;;		_main
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text18
  6594  0126F6                     __ptext18:
  6595                           	opt stack 0
  6596  0126F6                     _main_init:
  6597                           	opt stack 21
  6598                           
  6599                           ;PIC18F27J53-killifish_light05.c: 288: OSC_init();
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;incstack = 0
  6603  0126F6  EC3B  F098         	call	_OSC_init	;wreg free
  6604                           
  6605                           ;PIC18F27J53-killifish_light05.c: 289: TRISA = 0b11100111;
  6606  0126FA  0EE7               	movlw	231
  6607  0126FC  6E92               	movwf	3986,c	;volatile
  6608                           
  6609                           ;PIC18F27J53-killifish_light05.c: 290: TRISB = 0b00000000;
  6610  0126FE  0E00               	movlw	0
  6611  012700  6E93               	movwf	3987,c	;volatile
  6612                           
  6613                           ;PIC18F27J53-killifish_light05.c: 291: TRISC = 0b10111010;
  6614  012702  0EBA               	movlw	186
  6615  012704  6E94               	movwf	3988,c	;volatile
  6616                           
  6617                           ;PIC18F27J53-killifish_light05.c: 292: ANCON0 = 0b11111000;
  6618  012706  0EF8               	movlw	248
  6619  012708  010F               	movlb	15	; () banked
  6620  01270A  6F48               	movwf	72,b	;volatile
  6621                           
  6622                           ; BSR set to: 15
  6623                           ;PIC18F27J53-killifish_light05.c: 293: ANCON1 = 0b00011111;
  6624  01270C  0E1F               	movlw	31
  6625  01270E  010F               	movlb	15	; () banked
  6626  012710  6F49               	movwf	73,b	;volatile
  6627                           
  6628                           ; BSR set to: 15
  6629                           ;PIC18F27J53-killifish_light05.c: 294: INTCON2bits.RBPU = 0;
  6630  012712  9EF1               	bcf	intcon2,7,c	;volatile
  6631                           
  6632                           ; BSR set to: 15
  6633                           ;PIC18F27J53-killifish_light05.c: 296: timer0_init(8);
  6634  012714  0E08               	movlw	8
  6635  012716  EC4D  F097         	call	_timer0_init
  6636                           
  6637                           ;PIC18F27J53-killifish_light05.c: 297: timer1_init(0, 2);
  6638  01271A  0E02               	movlw	2
  6639  01271C  6E20               	movwf	timer1_init@clock_select,c
  6640  01271E  0E00               	movlw	0
  6641  012720  ECE3  F096         	call	_timer1_init
  6642                           
  6643                           ;PIC18F27J53-killifish_light05.c: 298: timer3_init(2);
  6644  012724  0E02               	movlw	2
  6645  012726  EC97  F097         	call	_timer3_init
  6646                           
  6647                           ;PIC18F27J53-killifish_light05.c: 299: ADC_init(0);
  6648  01272A  0E00               	movlw	0
  6649  01272C  EC05  F098         	call	_ADC_init
  6650                           
  6651                           ;PIC18F27J53-killifish_light05.c: 300: RTCC_init();
  6652  012730  ECC7  F095         	call	_RTCC_init	;wreg free
  6653                           
  6654                           ;PIC18F27J53-killifish_light05.c: 301: PWM_init(250);
  6655  012734  0EFA               	movlw	250
  6656  012736  EC1D  F092         	call	_PWM_init
  6657                           
  6658                           ;PIC18F27J53-killifish_light05.c: 303: UART_init();
  6659  01273A  ECE5  F097         	call	_UART_init	;wreg free
  6660                           
  6661                           ;PIC18F27J53-killifish_light05.c: 304: static uint8_t txbuf[1000];
  6662                           ;PIC18F27J53-killifish_light05.c: 305: ringbuf_init(&uart_tx, txbuf, sizeof (txbuf));
  6663  01273E  0E61               	movlw	low _uart_tx
  6664  012740  0100               	movlb	0	; () banked
  6665  012742  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6666  012744  0E01               	movlw	high _uart_tx
  6667  012746  0100               	movlb	0	; () banked
  6668  012748  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6669  01274A  0E69               	movlw	low main_init@txbuf
  6670  01274C  0100               	movlb	0	; () banked
  6671  01274E  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6672  012750  0E04               	movlw	high main_init@txbuf
  6673  012752  0100               	movlb	0	; () banked
  6674  012754  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6675  012756  0E03               	movlw	3
  6676  012758  0100               	movlb	0	; () banked
  6677  01275A  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6678  01275C  0EE8               	movlw	232
  6679  01275E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6680  012760  ECB9  F096         	call	_ringbuf_init	;wreg free
  6681                           
  6682                           ;PIC18F27J53-killifish_light05.c: 306: static uint8_t rxbuf[250];
  6683                           ;PIC18F27J53-killifish_light05.c: 307: ringbuf_init(&uart_rx, rxbuf, sizeof (rxbuf));
  6684  012764  0E59               	movlw	low _uart_rx
  6685  012766  0100               	movlb	0	; () banked
  6686  012768  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6687  01276A  0E01               	movlw	high _uart_rx
  6688  01276C  0100               	movlb	0	; () banked
  6689  01276E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6690  012770  0E00               	movlw	low main_init@rxbuf
  6691  012772  0100               	movlb	0	; () banked
  6692  012774  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6693  012776  0E03               	movlw	high main_init@rxbuf
  6694  012778  0100               	movlb	0	; () banked
  6695  01277A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6696  01277C  0E00               	movlw	0
  6697  01277E  0100               	movlb	0	; () banked
  6698  012780  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6699  012782  0EFA               	movlw	250
  6700  012784  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6701  012786  ECB9  F096         	call	_ringbuf_init	;wreg free
  6702  01278A  0012               	return		;funcret
  6703  01278C                     __end_of_main_init:
  6704                           	opt stack 0
  6705                           tblptru	equ	0xFF8
  6706                           tblptrh	equ	0xFF7
  6707                           tblptrl	equ	0xFF6
  6708                           tablat	equ	0xFF5
  6709                           prodh	equ	0xFF4
  6710                           prodl	equ	0xFF3
  6711                           intcon	equ	0xFF2
  6712                           intcon2	equ	0xFF1
  6713                           indf0	equ	0xFEF
  6714                           postinc0	equ	0xFEE
  6715                           fsr0h	equ	0xFEA
  6716                           fsr0l	equ	0xFE9
  6717                           wreg	equ	0xFE8
  6718                           postinc1	equ	0xFE6
  6719                           postdec1	equ	0xFE5
  6720                           fsr1h	equ	0xFE2
  6721                           fsr1l	equ	0xFE1
  6722                           indf2	equ	0xFDF
  6723                           postinc2	equ	0xFDE
  6724                           postdec2	equ	0xFDD
  6725                           fsr2h	equ	0xFDA
  6726                           fsr2l	equ	0xFD9
  6727                           status	equ	0xFD8
  6728                           
  6729 ;; *************** function _timer3_init *****************
  6730 ;; Defined at:
  6731 ;;		line 72 in file "../My_library/My_PIC.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  prescaler       1    wreg     unsigned char 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  prescaler       1    0[BANK0 ] unsigned char 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;		None               void
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, status,0
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6748 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6749 ;;Total ram usage:        2 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    4
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_main_init
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text19
  6760  012F2E                     __ptext19:
  6761                           	opt stack 0
  6762  012F2E                     _timer3_init:
  6763                           	opt stack 25
  6764                           
  6765                           ;incstack = 0
  6766                           ;timer3_init@prescaler stored from wreg
  6767  012F2E  0100               	movlb	0	; () banked
  6768  012F30  6F60               	movwf	timer3_init@prescaler& (0+255),b
  6769                           
  6770                           ;My_PIC.c: 73: T3CONbits.TMR3CS = 0;
  6771  012F32  0E3F               	movlw	-193
  6772  012F34  1679               	andwf	3961,f,c	;volatile
  6773                           
  6774                           ;My_PIC.c: 74: T3CONbits.T3OSCEN = 0;
  6775  012F36  9679               	bcf	3961,3,c	;volatile
  6776                           
  6777                           ;My_PIC.c: 75: T3CONbits.T3CKPS = prescaler;
  6778  012F38  C060  F020         	movff	timer3_init@prescaler,??_timer3_init
  6779  012F3C  3A20               	swapf	??_timer3_init,f,c
  6780  012F3E  5079               	movf	3961,w,c	;volatile
  6781  012F40  1820               	xorwf	??_timer3_init,w,c
  6782  012F42  0BCF               	andlw	-49
  6783  012F44  1820               	xorwf	??_timer3_init,w,c
  6784  012F46  6E79               	movwf	3961,c	;volatile
  6785                           
  6786                           ;My_PIC.c: 76: T3CONbits.RD163 = 0;
  6787  012F48  9E79               	bcf	3961,7,c	;volatile
  6788                           
  6789                           ;My_PIC.c: 77: T3CONbits.TMR3ON = 1;
  6790  012F4A  8079               	bsf	3961,0,c	;volatile
  6791                           
  6792                           ;My_PIC.c: 78: IPR2bits.TMR3IP = 0;
  6793  012F4C  92A2               	bcf	4002,1,c	;volatile
  6794                           
  6795                           ;My_PIC.c: 79: PIR2bits.TMR3IF = 0;
  6796  012F4E  92A1               	bcf	4001,1,c	;volatile
  6797                           
  6798                           ;My_PIC.c: 80: PIE2bits.TMR3IE = 1;
  6799  012F50  82A0               	bsf	4000,1,c	;volatile
  6800                           
  6801                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  6802  012F52  8CF2               	bsf	intcon,6,c	;volatile
  6803  012F54  0012               	return		;funcret
  6804  012F56                     __end_of_timer3_init:
  6805                           	opt stack 0
  6806                           tblptru	equ	0xFF8
  6807                           tblptrh	equ	0xFF7
  6808                           tblptrl	equ	0xFF6
  6809                           tablat	equ	0xFF5
  6810                           prodh	equ	0xFF4
  6811                           prodl	equ	0xFF3
  6812                           intcon	equ	0xFF2
  6813                           intcon2	equ	0xFF1
  6814                           indf0	equ	0xFEF
  6815                           postinc0	equ	0xFEE
  6816                           fsr0h	equ	0xFEA
  6817                           fsr0l	equ	0xFE9
  6818                           wreg	equ	0xFE8
  6819                           postinc1	equ	0xFE6
  6820                           postdec1	equ	0xFE5
  6821                           fsr1h	equ	0xFE2
  6822                           fsr1l	equ	0xFE1
  6823                           indf2	equ	0xFDF
  6824                           postinc2	equ	0xFDE
  6825                           postdec2	equ	0xFDD
  6826                           fsr2h	equ	0xFDA
  6827                           fsr2l	equ	0xFD9
  6828                           status	equ	0xFD8
  6829                           
  6830 ;; *************** function _timer1_init *****************
  6831 ;; Defined at:
  6832 ;;		line 41 in file "../My_library/My_PIC.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  prescaler       1    wreg     unsigned char 
  6835 ;;  clock_select    1   31[COMRAM] unsigned char 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;		None               void
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6847 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6850 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6851 ;;Total ram usage:        3 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; Hardware stack levels required when called:    4
  6854 ;; This function calls:
  6855 ;;		Nothing
  6856 ;; This function is called by:
  6857 ;;		_main_init
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text20
  6862  012DC6                     __ptext20:
  6863                           	opt stack 0
  6864  012DC6                     _timer1_init:
  6865                           	opt stack 25
  6866                           
  6867                           ;incstack = 0
  6868                           ;timer1_init@prescaler stored from wreg
  6869  012DC6  0100               	movlb	0	; () banked
  6870  012DC8  6F61               	movwf	timer1_init@prescaler& (0+255),b
  6871                           
  6872                           ;My_PIC.c: 42: T1CONbits.TMR1CS = clock_select;
  6873  012DCA  C020  F060         	movff	timer1_init@clock_select,??_timer1_init
  6874  012DCE  0100               	movlb	0	; () banked
  6875  012DD0  3B60               	swapf	??_timer1_init& (0+255),f,b
  6876  012DD2  4760               	rlncf	??_timer1_init& (0+255),f,b
  6877  012DD4  4760               	rlncf	??_timer1_init& (0+255),f,b
  6878  012DD6  50CD               	movf	4045,w,c	;volatile
  6879  012DD8  0100               	movlb	0	; () banked
  6880  012DDA  1960               	xorwf	??_timer1_init& (0+255),w,b
  6881  012DDC  0B3F               	andlw	-193
  6882  012DDE  1960               	xorwf	??_timer1_init& (0+255),w,b
  6883  012DE0  6ECD               	movwf	4045,c	;volatile
  6884                           
  6885                           ;My_PIC.c: 43: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6886  012DE2  0E02               	movlw	2
  6887  012DE4  1820               	xorwf	timer1_init@clock_select,w,c
  6888  012DE6  A4D8               	btfss	status,2,c
  6889  012DE8  D002               	goto	l138
  6890                           
  6891                           ; BSR set to: 0
  6892  012DEA  86CD               	bsf	4045,3,c	;volatile
  6893  012DEC  D001               	goto	l8682
  6894  012DEE                     l138:
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;My_PIC.c: 44: else T1CONbits.T1OSCEN = 0;
  6898  012DEE  96CD               	bcf	4045,3,c	;volatile
  6899  012DF0                     l8682:
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;My_PIC.c: 45: T1CONbits.T1CKPS = prescaler;
  6903  012DF0  C061  F060         	movff	timer1_init@prescaler,??_timer1_init
  6904  012DF4  0100               	movlb	0	; () banked
  6905  012DF6  3B60               	swapf	??_timer1_init& (0+255),f,b
  6906  012DF8  50CD               	movf	4045,w,c	;volatile
  6907  012DFA  0100               	movlb	0	; () banked
  6908  012DFC  1960               	xorwf	??_timer1_init& (0+255),w,b
  6909  012DFE  0BCF               	andlw	-49
  6910  012E00  1960               	xorwf	??_timer1_init& (0+255),w,b
  6911  012E02  6ECD               	movwf	4045,c	;volatile
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;My_PIC.c: 46: T1CONbits.nT1SYNC = 1;
  6915  012E04  84CD               	bsf	4045,2,c	;volatile
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;My_PIC.c: 47: T1CONbits.RD16 = 0;
  6919  012E06  92CD               	bcf	4045,1,c	;volatile
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;My_PIC.c: 48: T1CONbits.TMR1ON = 1;
  6923  012E08  80CD               	bsf	4045,0,c	;volatile
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;My_PIC.c: 49: IPR1bits.TMR1IP = 0;
  6927  012E0A  909F               	bcf	3999,0,c	;volatile
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;My_PIC.c: 50: PIR1bits.TMR1IF = 0;
  6931  012E0C  909E               	bcf	3998,0,c	;volatile
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;My_PIC.c: 51: PIE1bits.TMR1IE = 1;
  6935  012E0E  809D               	bsf	3997,0,c	;volatile
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;My_PIC.c: 52: INTCONbits.PEIE = 1;
  6939  012E10  8CF2               	bsf	intcon,6,c	;volatile
  6940                           
  6941                           ; BSR set to: 0
  6942  012E12  0012               	return		;funcret
  6943  012E14                     __end_of_timer1_init:
  6944                           	opt stack 0
  6945                           tblptru	equ	0xFF8
  6946                           tblptrh	equ	0xFF7
  6947                           tblptrl	equ	0xFF6
  6948                           tablat	equ	0xFF5
  6949                           prodh	equ	0xFF4
  6950                           prodl	equ	0xFF3
  6951                           intcon	equ	0xFF2
  6952                           intcon2	equ	0xFF1
  6953                           indf0	equ	0xFEF
  6954                           postinc0	equ	0xFEE
  6955                           fsr0h	equ	0xFEA
  6956                           fsr0l	equ	0xFE9
  6957                           wreg	equ	0xFE8
  6958                           postinc1	equ	0xFE6
  6959                           postdec1	equ	0xFE5
  6960                           fsr1h	equ	0xFE2
  6961                           fsr1l	equ	0xFE1
  6962                           indf2	equ	0xFDF
  6963                           postinc2	equ	0xFDE
  6964                           postdec2	equ	0xFDD
  6965                           fsr2h	equ	0xFDA
  6966                           fsr2l	equ	0xFD9
  6967                           status	equ	0xFD8
  6968                           
  6969 ;; *************** function _timer0_init *****************
  6970 ;; Defined at:
  6971 ;;		line 6 in file "../My_library/My_PIC.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  prescaler       1    wreg     unsigned char 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  prescaler       1    0[BANK0 ] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;		None               void
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6988 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6989 ;;Total ram usage:        2 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; Hardware stack levels required when called:    4
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_main_init
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text21
  7000  012E9A                     __ptext21:
  7001                           	opt stack 0
  7002  012E9A                     _timer0_init:
  7003                           	opt stack 25
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;incstack = 0
  7007                           ;timer0_init@prescaler stored from wreg
  7008  012E9A  0100               	movlb	0	; () banked
  7009  012E9C  6F60               	movwf	timer0_init@prescaler& (0+255),b
  7010                           
  7011                           ;My_PIC.c: 7: T0CONbits.TMR0ON = 1;
  7012  012E9E  8ED5               	bsf	4053,7,c	;volatile
  7013                           
  7014                           ;My_PIC.c: 8: T0CONbits.T08BIT = 1;
  7015  012EA0  8CD5               	bsf	4053,6,c	;volatile
  7016                           
  7017                           ;My_PIC.c: 9: T0CONbits.T0CS = 0;
  7018  012EA2  9AD5               	bcf	4053,5,c	;volatile
  7019                           
  7020                           ;My_PIC.c: 10: if (prescaler == 0) {
  7021  012EA4  0100               	movlb	0	; () banked
  7022  012EA6  5160               	movf	timer0_init@prescaler& (0+255),w,b
  7023  012EA8  0100               	movlb	0	; () banked
  7024  012EAA  A4D8               	btfss	status,2,c
  7025  012EAC  D002               	goto	l133
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;My_PIC.c: 11: T0CONbits.PSA = 1;
  7029  012EAE  86D5               	bsf	4053,3,c	;volatile
  7030                           
  7031                           ;My_PIC.c: 12: } else {
  7032  012EB0  D00A               	goto	l8670
  7033  012EB2                     l133:
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;My_PIC.c: 13: T0CONbits.PSA = 0;
  7037  012EB2  96D5               	bcf	4053,3,c	;volatile
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;My_PIC.c: 14: T0CONbits.T0PS = prescaler - 1;
  7041  012EB4  C060  F020         	movff	timer0_init@prescaler,??_timer0_init
  7042  012EB8  0EFF               	movlw	255
  7043  012EBA  2620               	addwf	??_timer0_init,f,c
  7044  012EBC  50D5               	movf	4053,w,c	;volatile
  7045  012EBE  1820               	xorwf	??_timer0_init,w,c
  7046  012EC0  0BF8               	andlw	-8
  7047  012EC2  1820               	xorwf	??_timer0_init,w,c
  7048  012EC4  6ED5               	movwf	4053,c	;volatile
  7049  012EC6                     l8670:
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;My_PIC.c: 15: }
  7053                           ;My_PIC.c: 16: INTCONbits.T0IE = 1;
  7054  012EC6  8AF2               	bsf	intcon,5,c	;volatile
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;My_PIC.c: 17: INTCONbits.TMR0IF = 0;
  7058  012EC8  94F2               	bcf	intcon,2,c	;volatile
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;My_PIC.c: 18: INTCON2bits.TMR0IP = 0;
  7062  012ECA  94F1               	bcf	intcon2,2,c	;volatile
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;My_PIC.c: 19: INTCONbits.PEIE = 1;
  7066  012ECC  8CF2               	bsf	intcon,6,c	;volatile
  7067                           
  7068                           ; BSR set to: 0
  7069  012ECE  0012               	return		;funcret
  7070  012ED0                     __end_of_timer0_init:
  7071                           	opt stack 0
  7072                           tblptru	equ	0xFF8
  7073                           tblptrh	equ	0xFF7
  7074                           tblptrl	equ	0xFF6
  7075                           tablat	equ	0xFF5
  7076                           prodh	equ	0xFF4
  7077                           prodl	equ	0xFF3
  7078                           intcon	equ	0xFF2
  7079                           intcon2	equ	0xFF1
  7080                           indf0	equ	0xFEF
  7081                           postinc0	equ	0xFEE
  7082                           fsr0h	equ	0xFEA
  7083                           fsr0l	equ	0xFE9
  7084                           wreg	equ	0xFE8
  7085                           postinc1	equ	0xFE6
  7086                           postdec1	equ	0xFE5
  7087                           fsr1h	equ	0xFE2
  7088                           fsr1l	equ	0xFE1
  7089                           indf2	equ	0xFDF
  7090                           postinc2	equ	0xFDE
  7091                           postdec2	equ	0xFDD
  7092                           fsr2h	equ	0xFDA
  7093                           fsr2l	equ	0xFD9
  7094                           status	equ	0xFD8
  7095                           
  7096 ;; *************** function _ringbuf_init *****************
  7097 ;; Defined at:
  7098 ;;		line 5 in file "../My_library/My_ringbuf.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7101 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), 
  7102 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7103 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), terminal_task@buf(100), 
  7104 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;		None
  7107 ;; Return value:  Size  Location     Type
  7108 ;;		None               void
  7109 ;; Registers used:
  7110 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7116 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7119 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;Total ram usage:        6 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    4
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		_terminal_task
  7127 ;;		_main_init
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text22
  7132  012D72                     __ptext22:
  7133                           	opt stack 0
  7134  012D72                     _ringbuf_init:
  7135                           	opt stack 25
  7136                           
  7137                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;incstack = 0
  7141  012D72  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7142  012D76  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7143  012D7A  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7144  012D7E  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7145                           
  7146                           ;My_ringbuf.c: 7: rb->size = bufsize;
  7147  012D82  0100               	movlb	0	; () banked
  7148  012D84  EE20 F002          	lfsr	2,2
  7149  012D88  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7150  012D8A  26D9               	addwf	fsr2l,f,c
  7151  012D8C  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7152  012D8E  22DA               	addwfc	fsr2h,f,c
  7153  012D90  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7154  012D94  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;My_ringbuf.c: 8: rb->head = 0;
  7158  012D98  0100               	movlb	0	; () banked
  7159  012D9A  EE20 F004          	lfsr	2,4
  7160  012D9E  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7161  012DA0  26D9               	addwf	fsr2l,f,c
  7162  012DA2  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7163  012DA4  22DA               	addwfc	fsr2h,f,c
  7164  012DA6  0E00               	movlw	0
  7165  012DA8  6EDE               	movwf	postinc2,c
  7166  012DAA  0E00               	movlw	0
  7167  012DAC  6EDD               	movwf	postdec2,c
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;My_ringbuf.c: 9: rb->tail = 0;
  7171  012DAE  0100               	movlb	0	; () banked
  7172  012DB0  EE20 F006          	lfsr	2,6
  7173  012DB4  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7174  012DB6  26D9               	addwf	fsr2l,f,c
  7175  012DB8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7176  012DBA  22DA               	addwfc	fsr2h,f,c
  7177  012DBC  0E00               	movlw	0
  7178  012DBE  6EDE               	movwf	postinc2,c
  7179  012DC0  0E00               	movlw	0
  7180  012DC2  6EDD               	movwf	postdec2,c
  7181                           
  7182                           ; BSR set to: 0
  7183  012DC4  0012               	return		;funcret
  7184  012DC6                     __end_of_ringbuf_init:
  7185                           	opt stack 0
  7186                           tblptru	equ	0xFF8
  7187                           tblptrh	equ	0xFF7
  7188                           tblptrl	equ	0xFF6
  7189                           tablat	equ	0xFF5
  7190                           prodh	equ	0xFF4
  7191                           prodl	equ	0xFF3
  7192                           intcon	equ	0xFF2
  7193                           intcon2	equ	0xFF1
  7194                           indf0	equ	0xFEF
  7195                           postinc0	equ	0xFEE
  7196                           fsr0h	equ	0xFEA
  7197                           fsr0l	equ	0xFE9
  7198                           wreg	equ	0xFE8
  7199                           postinc1	equ	0xFE6
  7200                           postdec1	equ	0xFE5
  7201                           fsr1h	equ	0xFE2
  7202                           fsr1l	equ	0xFE1
  7203                           indf2	equ	0xFDF
  7204                           postinc2	equ	0xFDE
  7205                           postdec2	equ	0xFDD
  7206                           fsr2h	equ	0xFDA
  7207                           fsr2l	equ	0xFD9
  7208                           status	equ	0xFD8
  7209                           
  7210 ;; *************** function _UART_init *****************
  7211 ;; Defined at:
  7212 ;;		line 10 in file "../My_library/My_UART.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;		None
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;		None
  7217 ;; Return value:  Size  Location     Type
  7218 ;;		None               void
  7219 ;; Registers used:
  7220 ;;		wreg, status,2
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7230 ;;Total ram usage:        0 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    4
  7233 ;; This function calls:
  7234 ;;		Nothing
  7235 ;; This function is called by:
  7236 ;;		_main_init
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text23
  7241  012FCA                     __ptext23:
  7242                           	opt stack 0
  7243  012FCA                     _UART_init:
  7244                           	opt stack 25
  7245                           
  7246                           ;My_UART.c: 11: TXSTA1bits.TX9 = 0;
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;incstack = 0
  7250  012FCA  9CAD               	bcf	4013,6,c	;volatile
  7251                           
  7252                           ;My_UART.c: 12: TXSTA1bits.TXEN = 1;
  7253  012FCC  8AAD               	bsf	4013,5,c	;volatile
  7254                           
  7255                           ;My_UART.c: 13: TXSTA1bits.SYNC = 0;
  7256  012FCE  98AD               	bcf	4013,4,c	;volatile
  7257                           
  7258                           ;My_UART.c: 14: TXSTA1bits.BRGH = 0;
  7259  012FD0  94AD               	bcf	4013,2,c	;volatile
  7260                           
  7261                           ;My_UART.c: 15: RCSTA1bits.SPEN = 1;
  7262  012FD2  8EAC               	bsf	4012,7,c	;volatile
  7263                           
  7264                           ;My_UART.c: 16: RCSTA1bits.RX9 = 0;
  7265  012FD4  9CAC               	bcf	4012,6,c	;volatile
  7266                           
  7267                           ;My_UART.c: 17: RCSTA1bits.CREN = 1;
  7268  012FD6  88AC               	bsf	4012,4,c	;volatile
  7269                           
  7270                           ;My_UART.c: 18: BAUDCON1bits.BRG16 = 1;
  7271  012FD8  867E               	bsf	3966,3,c	;volatile
  7272                           
  7273                           ;My_UART.c: 19: SPBRG1 = 48000000 / 16 / 115200 - 1;
  7274  012FDA  0E19               	movlw	25
  7275  012FDC  6EB0               	movwf	4016,c	;volatile
  7276                           
  7277                           ;My_UART.c: 20: SPBRGH1 = (48000000 / 16 / 115200 - 1) >> 8;
  7278  012FDE  0E00               	movlw	0
  7279  012FE0  6E7F               	movwf	3967,c	;volatile
  7280                           
  7281                           ;My_UART.c: 21: IPR1bits.RC1IP = 0;
  7282  012FE2  9A9F               	bcf	3999,5,c	;volatile
  7283                           
  7284                           ;My_UART.c: 22: PIE1bits.RCIE = 1;
  7285  012FE4  8A9D               	bsf	3997,5,c	;volatile
  7286                           
  7287                           ;My_UART.c: 23: INTCONbits.PEIE = 1;
  7288  012FE6  8CF2               	bsf	intcon,6,c	;volatile
  7289  012FE8  0012               	return		;funcret
  7290  012FEA                     __end_of_UART_init:
  7291                           	opt stack 0
  7292                           tblptru	equ	0xFF8
  7293                           tblptrh	equ	0xFF7
  7294                           tblptrl	equ	0xFF6
  7295                           tablat	equ	0xFF5
  7296                           prodh	equ	0xFF4
  7297                           prodl	equ	0xFF3
  7298                           intcon	equ	0xFF2
  7299                           intcon2	equ	0xFF1
  7300                           indf0	equ	0xFEF
  7301                           postinc0	equ	0xFEE
  7302                           fsr0h	equ	0xFEA
  7303                           fsr0l	equ	0xFE9
  7304                           wreg	equ	0xFE8
  7305                           postinc1	equ	0xFE6
  7306                           postdec1	equ	0xFE5
  7307                           fsr1h	equ	0xFE2
  7308                           fsr1l	equ	0xFE1
  7309                           indf2	equ	0xFDF
  7310                           postinc2	equ	0xFDE
  7311                           postdec2	equ	0xFDD
  7312                           fsr2h	equ	0xFDA
  7313                           fsr2l	equ	0xFD9
  7314                           status	equ	0xFD8
  7315                           
  7316 ;; *************** function _RTCC_init *****************
  7317 ;; Defined at:
  7318 ;;		line 22 in file "../My_library/My_RTCC.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;		None               void
  7325 ;; Registers used:
  7326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7336 ;;Total ram usage:        0 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:    8
  7339 ;; This function calls:
  7340 ;;		_RTCC_from_RTCC
  7341 ;;		_RTCC_from_epoch
  7342 ;; This function is called by:
  7343 ;;		_main_init
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text24
  7348  012B8E                     __ptext24:
  7349                           	opt stack 0
  7350  012B8E                     _RTCC_init:
  7351                           	opt stack 21
  7352                           
  7353                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7354                           
  7355                           ;incstack = 0
  7356  012B8E  010F               	movlb	15	; () banked
  7357  012B90  8B3F               	bsf	63,5,b	;volatile
  7358                           
  7359                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7360  012B92  010F               	movlb	15	; () banked
  7361  012B94  BB3F               	btfsc	63,5,b	;volatile
  7362  012B96  D006               	goto	l8776
  7363                           
  7364                           ; BSR set to: 15
  7365                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7366  012B98  0E55               	movlw	85
  7367  012B9A  6EA7               	movwf	4007,c	;volatile
  7368                           
  7369                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7370  012B9C  0EAA               	movlw	170
  7371  012B9E  6EA7               	movwf	4007,c	;volatile
  7372                           
  7373                           ; BSR set to: 15
  7374                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7375  012BA0  010F               	movlb	15	; () banked
  7376  012BA2  8B3F               	bsf	63,5,b	;volatile
  7377  012BA4                     l8776:
  7378                           
  7379                           ; BSR set to: 15
  7380                           ;My_RTCC.c: 28: }
  7381                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7382  012BA4  010F               	movlb	15	; () banked
  7383  012BA6  8F3F               	bsf	63,7,b	;volatile
  7384                           
  7385                           ; BSR set to: 15
  7386                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7387  012BA8  010F               	movlb	15	; () banked
  7388  012BAA  953F               	bcf	63,2,b	;volatile
  7389                           
  7390                           ; BSR set to: 15
  7391                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7392  012BAC  010F               	movlb	15	; () banked
  7393  012BAE  833C               	bsf	60,1,b	;volatile
  7394                           
  7395                           ; BSR set to: 15
  7396                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7397  012BB0  010F               	movlb	15	; () banked
  7398  012BB2  853C               	bsf	60,2,b	;volatile
  7399                           
  7400                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7401  012BB4  0E00               	movlw	0
  7402  012BB6  010F               	movlb	15	; () banked
  7403  012BB8  6F3E               	movwf	62,b	;volatile
  7404                           
  7405                           ; BSR set to: 15
  7406                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7407  012BBA  86CD               	bsf	4045,3,c	;volatile
  7408                           
  7409                           ; BSR set to: 15
  7410                           ;My_RTCC.c: 37: RTCC_from_RTCC(&now);
  7411  012BBC  0E43               	movlw	low _now
  7412  012BBE  0100               	movlb	0	; () banked
  7413  012BC0  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7414  012BC2  0E01               	movlw	high _now
  7415  012BC4  0100               	movlb	0	; () banked
  7416  012BC6  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7417  012BC8  EC2E  F098         	call	_RTCC_from_RTCC	;wreg free
  7418                           
  7419                           ;My_RTCC.c: 38: if (now.DD == 0) {
  7420  012BCC  0101               	movlb	1	; () banked
  7421  012BCE  514B               	movf	(_now+8)& (0+255),w,b
  7422  012BD0  A4D8               	btfss	status,2,c
  7423  012BD2  0012               	return	
  7424                           
  7425                           ; BSR set to: 1
  7426                           ;My_RTCC.c: 39: now.epoch = 0;
  7427  012BD4  0E00               	movlw	0
  7428  012BD6  0101               	movlb	1	; () banked
  7429  012BD8  6F43               	movwf	_now& (0+255),b
  7430  012BDA  0E00               	movlw	0
  7431  012BDC  6F44               	movwf	(_now+1)& (0+255),b
  7432  012BDE  0E00               	movlw	0
  7433  012BE0  6F45               	movwf	(_now+2)& (0+255),b
  7434  012BE2  0E00               	movlw	0
  7435  012BE4  6F46               	movwf	(_now+3)& (0+255),b
  7436                           
  7437                           ; BSR set to: 1
  7438                           ;My_RTCC.c: 40: RTCC_from_epoch(&now);
  7439  012BE6  0E43               	movlw	low _now
  7440  012BE8  0100               	movlb	0	; () banked
  7441  012BEA  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  7442  012BEC  0E01               	movlw	high _now
  7443  012BEE  0100               	movlb	0	; () banked
  7444  012BF0  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7445  012BF2  EC21  F098         	call	_RTCC_from_epoch	;wreg free
  7446  012BF6  0012               	return	
  7447  012BF8                     __end_of_RTCC_init:
  7448                           	opt stack 0
  7449                           tblptru	equ	0xFF8
  7450                           tblptrh	equ	0xFF7
  7451                           tblptrl	equ	0xFF6
  7452                           tablat	equ	0xFF5
  7453                           prodh	equ	0xFF4
  7454                           prodl	equ	0xFF3
  7455                           intcon	equ	0xFF2
  7456                           intcon2	equ	0xFF1
  7457                           indf0	equ	0xFEF
  7458                           postinc0	equ	0xFEE
  7459                           fsr0h	equ	0xFEA
  7460                           fsr0l	equ	0xFE9
  7461                           wreg	equ	0xFE8
  7462                           postinc1	equ	0xFE6
  7463                           postdec1	equ	0xFE5
  7464                           fsr1h	equ	0xFE2
  7465                           fsr1l	equ	0xFE1
  7466                           indf2	equ	0xFDF
  7467                           postinc2	equ	0xFDE
  7468                           postdec2	equ	0xFDD
  7469                           fsr2h	equ	0xFDA
  7470                           fsr2l	equ	0xFD9
  7471                           status	equ	0xFD8
  7472                           
  7473 ;; *************** function _RTCC_from_epoch *****************
  7474 ;; Defined at:
  7475 ;;		line 211 in file "../My_library/My_RTCC.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  tm              2   47[BANK0 ] PTR struct .
  7478 ;;		 -> now(14), 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;		None               void
  7483 ;; Registers used:
  7484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7494 ;;Total ram usage:        2 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    7
  7497 ;; This function calls:
  7498 ;;		_caltime_to_RTCC
  7499 ;;		_epoch_to_caltime
  7500 ;; This function is called by:
  7501 ;;		_RTCC_init
  7502 ;;		_main
  7503 ;;		_RTCC_adjust_time_inc
  7504 ;;		_RTCC_adjust_time_dec
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508                           	psect	text25
  7509  013042                     __ptext25:
  7510                           	opt stack 0
  7511  013042                     _RTCC_from_epoch:
  7512                           	opt stack 21
  7513                           
  7514                           ;My_RTCC.c: 212: epoch_to_caltime(tm);
  7515                           
  7516                           ;incstack = 0
  7517  013042  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  7518  013046  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  7519  01304A  ECD8  F08B         	call	_epoch_to_caltime	;wreg free
  7520                           
  7521                           ;My_RTCC.c: 213: caltime_to_RTCC(tm);
  7522  01304E  C08F  F076         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  7523  013052  C090  F077         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  7524  013056  EC01  F08F         	call	_caltime_to_RTCC	;wreg free
  7525  01305A  0012               	return		;funcret
  7526  01305C                     __end_of_RTCC_from_epoch:
  7527                           	opt stack 0
  7528                           tblptru	equ	0xFF8
  7529                           tblptrh	equ	0xFF7
  7530                           tblptrl	equ	0xFF6
  7531                           tablat	equ	0xFF5
  7532                           prodh	equ	0xFF4
  7533                           prodl	equ	0xFF3
  7534                           intcon	equ	0xFF2
  7535                           intcon2	equ	0xFF1
  7536                           indf0	equ	0xFEF
  7537                           postinc0	equ	0xFEE
  7538                           fsr0h	equ	0xFEA
  7539                           fsr0l	equ	0xFE9
  7540                           wreg	equ	0xFE8
  7541                           postinc1	equ	0xFE6
  7542                           postdec1	equ	0xFE5
  7543                           fsr1h	equ	0xFE2
  7544                           fsr1l	equ	0xFE1
  7545                           indf2	equ	0xFDF
  7546                           postinc2	equ	0xFDE
  7547                           postdec2	equ	0xFDD
  7548                           fsr2h	equ	0xFDA
  7549                           fsr2l	equ	0xFD9
  7550                           status	equ	0xFD8
  7551                           
  7552 ;; *************** function _epoch_to_caltime *****************
  7553 ;; Defined at:
  7554 ;;		line 126 in file "../My_library/My_RTCC.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  tm              2   33[BANK0 ] PTR struct .
  7557 ;;		 -> now(14), 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;  num             4   43[BANK0 ] unsigned long 
  7560 ;;  day             2   39[BANK0 ] unsigned int 
  7561 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  7562 ;;  month           1   42[BANK0 ] unsigned char 
  7563 ;;  year            1   41[BANK0 ] unsigned char 
  7564 ;; Return value:  Size  Location     Type
  7565 ;;		None               void
  7566 ;; Registers used:
  7567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7573 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7574 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7575 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7577 ;;Total ram usage:       14 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; Hardware stack levels required when called:    6
  7580 ;; This function calls:
  7581 ;;		_get_quot_rem
  7582 ;;		_month_length
  7583 ;; This function is called by:
  7584 ;;		_RTCC_from_caltime
  7585 ;;		_RTCC_from_epoch
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text26
  7590  0117B0                     __ptext26:
  7591                           	opt stack 0
  7592  0117B0                     _epoch_to_caltime:
  7593                           	opt stack 19
  7594                           
  7595                           ;My_RTCC.c: 129: static uint16_t day_cache = 0;
  7596                           ;My_RTCC.c: 130: static uint8_t month_cache = 1;
  7597                           ;My_RTCC.c: 131: static uint8_t year_cache = 0;
  7598                           ;My_RTCC.c: 132: uint16_t day_since_epoch;
  7599                           ;My_RTCC.c: 133: uint16_t day;
  7600                           ;My_RTCC.c: 134: uint8_t year = 0;
  7601                           
  7602                           ;incstack = 0
  7603  0117B0  0E00               	movlw	0
  7604  0117B2  0100               	movlb	0	; () banked
  7605  0117B4  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  7606                           
  7607                           ;My_RTCC.c: 135: uint8_t month = 1;
  7608  0117B6  0E01               	movlw	1
  7609  0117B8  0100               	movlb	0	; () banked
  7610  0117BA  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;My_RTCC.c: 136: epoch_t num;
  7614                           ;My_RTCC.c: 138: num = tm->epoch;
  7615  0117BC  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7616  0117C0  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7617  0117C4  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  7618  0117C8  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  7619  0117CC  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  7620  0117D0  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;My_RTCC.c: 139: tm->ss = get_quot_rem(&num, 60);
  7624  0117D4  0E8B               	movlw	low epoch_to_caltime@num
  7625  0117D6  0100               	movlb	0	; () banked
  7626  0117D8  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7627  0117DA  0E00               	movlw	high epoch_to_caltime@num
  7628  0117DC  0100               	movlb	0	; () banked
  7629  0117DE  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7630  0117E0  0E3C               	movlw	60
  7631  0117E2  0100               	movlb	0	; () banked
  7632  0117E4  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7633  0117E6  ECD6  F08F         	call	_get_quot_rem	;wreg free
  7634  0117EA  0100               	movlb	0	; () banked
  7635  0117EC  EE20 F004          	lfsr	2,4
  7636  0117F0  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7637  0117F2  26D9               	addwf	fsr2l,f,c
  7638  0117F4  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7639  0117F6  22DA               	addwfc	fsr2h,f,c
  7640  0117F8  0100               	movlb	0	; () banked
  7641  0117FA  C079  FFDF         	movff	?_get_quot_rem,indf2
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;My_RTCC.c: 140: tm->mm = get_quot_rem(&num, 60);
  7645  0117FE  0E8B               	movlw	low epoch_to_caltime@num
  7646  011800  0100               	movlb	0	; () banked
  7647  011802  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7648  011804  0E00               	movlw	high epoch_to_caltime@num
  7649  011806  0100               	movlb	0	; () banked
  7650  011808  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7651  01180A  0E3C               	movlw	60
  7652  01180C  0100               	movlb	0	; () banked
  7653  01180E  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7654  011810  ECD6  F08F         	call	_get_quot_rem	;wreg free
  7655  011814  0100               	movlb	0	; () banked
  7656  011816  EE20 F005          	lfsr	2,5
  7657  01181A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7658  01181C  26D9               	addwf	fsr2l,f,c
  7659  01181E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7660  011820  22DA               	addwfc	fsr2h,f,c
  7661  011822  0100               	movlb	0	; () banked
  7662  011824  C079  FFDF         	movff	?_get_quot_rem,indf2
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;My_RTCC.c: 141: tm->hh = get_quot_rem(&num, 24);
  7666  011828  0E8B               	movlw	low epoch_to_caltime@num
  7667  01182A  0100               	movlb	0	; () banked
  7668  01182C  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7669  01182E  0E00               	movlw	high epoch_to_caltime@num
  7670  011830  0100               	movlb	0	; () banked
  7671  011832  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7672  011834  0E18               	movlw	24
  7673  011836  0100               	movlb	0	; () banked
  7674  011838  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7675  01183A  ECD6  F08F         	call	_get_quot_rem	;wreg free
  7676  01183E  0100               	movlb	0	; () banked
  7677  011840  EE20 F006          	lfsr	2,6
  7678  011844  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7679  011846  26D9               	addwf	fsr2l,f,c
  7680  011848  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7681  01184A  22DA               	addwfc	fsr2h,f,c
  7682  01184C  0100               	movlb	0	; () banked
  7683  01184E  C079  FFDF         	movff	?_get_quot_rem,indf2
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;My_RTCC.c: 142: day = num;
  7687  011852  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7688  011856  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;My_RTCC.c: 143: day_since_epoch = day;
  7692  01185A  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7693  01185E  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;My_RTCC.c: 145: num += 6;
  7697  011862  0E06               	movlw	6
  7698  011864  0100               	movlb	0	; () banked
  7699  011866  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  7700  011868  0E00               	movlw	0
  7701  01186A  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7702  01186C  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7703  01186E  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;My_RTCC.c: 146: tm->EE = get_quot_rem(&num, 7);
  7707  011870  0E8B               	movlw	low epoch_to_caltime@num
  7708  011872  0100               	movlb	0	; () banked
  7709  011874  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7710  011876  0E00               	movlw	high epoch_to_caltime@num
  7711  011878  0100               	movlb	0	; () banked
  7712  01187A  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7713  01187C  0E07               	movlw	7
  7714  01187E  0100               	movlb	0	; () banked
  7715  011880  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7716  011882  ECD6  F08F         	call	_get_quot_rem	;wreg free
  7717  011886  0100               	movlb	0	; () banked
  7718  011888  EE20 F007          	lfsr	2,7
  7719  01188C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7720  01188E  26D9               	addwf	fsr2l,f,c
  7721  011890  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7722  011892  22DA               	addwfc	fsr2h,f,c
  7723  011894  0100               	movlb	0	; () banked
  7724  011896  C079  FFDF         	movff	?_get_quot_rem,indf2
  7725                           
  7726                           ;My_RTCC.c: 155: while (day >= month_length(year, month)) {
  7727  01189A  D03F               	goto	l8332
  7728  01189C                     l305:
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;My_RTCC.c: 156: LATB2 = 1;
  7732  01189C  848A               	bsf	3978,2,c	;volatile
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;My_RTCC.c: 157: day = day - month_length(year, month);
  7736  01189E  C08A  F020         	movff	epoch_to_caltime@month,month_length@month
  7737  0118A2  0100               	movlb	0	; () banked
  7738  0118A4  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  7739  0118A6  EC95  F08E         	call	_month_length
  7740  0118AA  0100               	movlb	0	; () banked
  7741  0118AC  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  7742  0118AE  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7743  0118B0  0100               	movlb	0	; () banked
  7744  0118B2  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  7745  0118B4  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7746  0118B6  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7747  0118B8  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7748  0118BA  0100               	movlb	0	; () banked
  7749  0118BC  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  7750  0118BE  0100               	movlb	0	; () banked
  7751  0118C0  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  7752  0118C2  0100               	movlb	0	; () banked
  7753  0118C4  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  7754  0118C6  0100               	movlb	0	; () banked
  7755  0118C8  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7756  0118CA  0100               	movlb	0	; () banked
  7757  0118CC  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7758  0118CE  0100               	movlb	0	; () banked
  7759  0118D0  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;My_RTCC.c: 158: if (month == 12) {
  7763  0118D2  0E0C               	movlw	12
  7764  0118D4  0100               	movlb	0	; () banked
  7765  0118D6  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  7766  0118D8  A4D8               	btfss	status,2,c
  7767  0118DA  D019               	goto	l8326
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;My_RTCC.c: 159: month = 1;
  7771  0118DC  0E01               	movlw	1
  7772  0118DE  0100               	movlb	0	; () banked
  7773  0118E0  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;My_RTCC.c: 160: year++;
  7777  0118E2  0100               	movlb	0	; () banked
  7778  0118E4  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;My_RTCC.c: 162: if (year >= 100) {
  7782  0118E6  0E63               	movlw	99
  7783  0118E8  0100               	movlb	0	; () banked
  7784  0118EA  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  7785  0118EC  D012               	goto	l8328
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;My_RTCC.c: 163: tm->epoch -= 3155760000;
  7789  0118EE  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7790  0118F2  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7791  0118F6  0E80               	movlw	128
  7792  0118F8  5EDE               	subwf	postinc2,f,c
  7793  0118FA  0E13               	movlw	19
  7794  0118FC  5ADE               	subwfb	postinc2,f,c
  7795  0118FE  0E19               	movlw	25
  7796  011900  5ADE               	subwfb	postinc2,f,c
  7797  011902  0EBC               	movlw	188
  7798  011904  5ADE               	subwfb	postinc2,f,c
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;My_RTCC.c: 164: year = 0;
  7802  011906  0E00               	movlw	0
  7803  011908  0100               	movlb	0	; () banked
  7804  01190A  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;My_RTCC.c: 165: }
  7808                           ;My_RTCC.c: 166: } else {
  7809  01190C  D002               	goto	l8328
  7810  01190E                     l8326:
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;My_RTCC.c: 167: month++;
  7814  01190E  0100               	movlb	0	; () banked
  7815  011910  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  7816  011912                     l8328:
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;My_RTCC.c: 168: }
  7820                           ;My_RTCC.c: 169: month_cache = month;
  7821  011912  C08A  F1B8         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;My_RTCC.c: 170: year_cache = year;
  7825  011916  C089  F129         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  7826  01191A                     l8332:
  7827                           
  7828                           ; BSR set to: 0
  7829  01191A  C08A  F020         	movff	epoch_to_caltime@month,month_length@month
  7830  01191E  0100               	movlb	0	; () banked
  7831  011920  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  7832  011922  EC95  F08E         	call	_month_length
  7833  011926  0100               	movlb	0	; () banked
  7834  011928  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  7835  01192A  0100               	movlb	0	; () banked
  7836  01192C  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  7837  01192E  0100               	movlb	0	; () banked
  7838  011930  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  7839  011932  0E00               	movlw	0
  7840  011934  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  7841  011936  B0D8               	btfsc	status,0,c
  7842  011938  D7B1               	goto	l305
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;My_RTCC.c: 171: }
  7846                           ;My_RTCC.c: 172: day_cache = day_since_epoch - day;
  7847                           
  7848                           ; BSR set to: 0
  7849  01193A  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  7850  01193E  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  7851  011942  0100               	movlb	0	; () banked
  7852  011944  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  7853  011946  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7854  011948  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7855  01194A  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7856  01194C  0100               	movlb	0	; () banked
  7857  01194E  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  7858  011950  0100               	movlb	0	; () banked
  7859  011952  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  7860  011954  0101               	movlb	1	; () banked
  7861  011956  6F22               	movwf	epoch_to_caltime@day_cache& (0+255),b
  7862  011958  0100               	movlb	0	; () banked
  7863  01195A  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  7864  01195C  0100               	movlb	0	; () banked
  7865  01195E  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7866  011960  0101               	movlb	1	; () banked
  7867  011962  6F23               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  7868                           
  7869                           ; BSR set to: 1
  7870                           ;My_RTCC.c: 173: day++;
  7871  011964  0100               	movlb	0	; () banked
  7872  011966  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  7873  011968  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;My_RTCC.c: 175: tm->YY = year;
  7877  01196A  0100               	movlb	0	; () banked
  7878  01196C  EE20 F00A          	lfsr	2,10
  7879  011970  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7880  011972  26D9               	addwf	fsr2l,f,c
  7881  011974  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7882  011976  22DA               	addwfc	fsr2h,f,c
  7883  011978  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;My_RTCC.c: 176: tm->MM = month;
  7887  01197C  0100               	movlb	0	; () banked
  7888  01197E  EE20 F009          	lfsr	2,9
  7889  011982  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7890  011984  26D9               	addwf	fsr2l,f,c
  7891  011986  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7892  011988  22DA               	addwfc	fsr2h,f,c
  7893  01198A  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;My_RTCC.c: 177: tm->DD = day;
  7897  01198E  0100               	movlb	0	; () banked
  7898  011990  EE20 F008          	lfsr	2,8
  7899  011994  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7900  011996  26D9               	addwf	fsr2l,f,c
  7901  011998  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7902  01199A  22DA               	addwfc	fsr2h,f,c
  7903  01199C  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  7904                           
  7905                           ; BSR set to: 0
  7906  0119A0  0012               	return		;funcret
  7907  0119A2                     __end_of_epoch_to_caltime:
  7908                           	opt stack 0
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           intcon	equ	0xFF2
  7916                           intcon2	equ	0xFF1
  7917                           indf0	equ	0xFEF
  7918                           postinc0	equ	0xFEE
  7919                           fsr0h	equ	0xFEA
  7920                           fsr0l	equ	0xFE9
  7921                           wreg	equ	0xFE8
  7922                           postinc1	equ	0xFE6
  7923                           postdec1	equ	0xFE5
  7924                           fsr1h	equ	0xFE2
  7925                           fsr1l	equ	0xFE1
  7926                           indf2	equ	0xFDF
  7927                           postinc2	equ	0xFDE
  7928                           postdec2	equ	0xFDD
  7929                           fsr2h	equ	0xFDA
  7930                           fsr2l	equ	0xFD9
  7931                           status	equ	0xFD8
  7932                           
  7933 ;; *************** function _get_quot_rem *****************
  7934 ;; Defined at:
  7935 ;;		line 81 in file "../My_library/My_RTCC.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  7938 ;;		 -> epoch_to_caltime@num(4), 
  7939 ;;  div             1   27[BANK0 ] unsigned char 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  num             4   29[BANK0 ] unsigned long 
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  4   25[BANK0 ] unsigned long 
  7944 ;; Registers used:
  7945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7951 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7952 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7954 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7955 ;;Total ram usage:        8 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; Hardware stack levels required when called:    5
  7958 ;; This function calls:
  7959 ;;		___lldiv
  7960 ;;		___lmul
  7961 ;; This function is called by:
  7962 ;;		_epoch_to_caltime
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           	psect	text27
  7967  011FAC                     __ptext27:
  7968                           	opt stack 0
  7969  011FAC                     _get_quot_rem:
  7970                           	opt stack 19
  7971                           
  7972                           ;My_RTCC.c: 84: epoch_t num = *quot;
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;incstack = 0
  7976  011FAC  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  7977  011FB0  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7978  011FB4  CFDE F07D          	movff	postinc2,get_quot_rem@num
  7979  011FB8  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  7980  011FBC  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  7981  011FC0  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  7982                           
  7983                           ;My_RTCC.c: 85: return num - (*quot = num / div) * div;
  7984  011FC4  0100               	movlb	0	; () banked
  7985  011FC6  517B               	movf	get_quot_rem@div& (0+255),w,b
  7986  011FC8  0100               	movlb	0	; () banked
  7987  011FCA  6F64               	movwf	___lldiv@divisor& (0+255),b
  7988  011FCC  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  7989  011FCE  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  7990  011FD0  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  7991  011FD2  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  7992  011FD6  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  7993  011FDA  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  7994  011FDE  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  7995  011FE2  EC03  F091         	call	___lldiv	;wreg free
  7996  011FE6  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  7997  011FEA  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7998  011FEE  0100               	movlb	0	; () banked
  7999  011FF0  C060  FFDE         	movff	?___lldiv,postinc2
  8000  011FF4  0100               	movlb	0	; () banked
  8001  011FF6  C061  FFDE         	movff	?___lldiv+1,postinc2
  8002  011FFA  0100               	movlb	0	; () banked
  8003  011FFC  C062  FFDE         	movff	?___lldiv+2,postinc2
  8004  012000  0100               	movlb	0	; () banked
  8005  012002  C063  FFDD         	movff	?___lldiv+3,postdec2
  8006  012006  52DD               	movf	postdec2,f,c
  8007  012008  52DD               	movf	postdec2,f,c
  8008  01200A  CFDE F06D          	movff	postinc2,___lmul@multiplier
  8009  01200E  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  8010  012012  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  8011  012016  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  8012  01201A  0100               	movlb	0	; () banked
  8013  01201C  517B               	movf	get_quot_rem@div& (0+255),w,b
  8014  01201E  0100               	movlb	0	; () banked
  8015  012020  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8016  012022  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8017  012024  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8018  012026  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8019  012028  EC56  F095         	call	___lmul	;wreg free
  8020  01202C  0100               	movlb	0	; () banked
  8021  01202E  1F6D               	comf	?___lmul& (0+255),f,b
  8022  012030  0100               	movlb	0	; () banked
  8023  012032  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  8024  012034  0100               	movlb	0	; () banked
  8025  012036  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  8026  012038  0100               	movlb	0	; () banked
  8027  01203A  1F70               	comf	(?___lmul+3)& (0+255),f,b
  8028  01203C  0100               	movlb	0	; () banked
  8029  01203E  2B6D               	incf	?___lmul& (0+255),f,b
  8030  012040  0E00               	movlw	0
  8031  012042  0100               	movlb	0	; () banked
  8032  012044  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  8033  012046  0100               	movlb	0	; () banked
  8034  012048  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  8035  01204A  0100               	movlb	0	; () banked
  8036  01204C  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  8037  01204E  0100               	movlb	0	; () banked
  8038  012050  517D               	movf	get_quot_rem@num& (0+255),w,b
  8039  012052  0100               	movlb	0	; () banked
  8040  012054  256D               	addwf	?___lmul& (0+255),w,b
  8041  012056  0100               	movlb	0	; () banked
  8042  012058  6F79               	movwf	?_get_quot_rem& (0+255),b
  8043  01205A  0100               	movlb	0	; () banked
  8044  01205C  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8045  01205E  0100               	movlb	0	; () banked
  8046  012060  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  8047  012062  0100               	movlb	0	; () banked
  8048  012064  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  8049  012066  0100               	movlb	0	; () banked
  8050  012068  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8051  01206A  0100               	movlb	0	; () banked
  8052  01206C  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  8053  01206E  0100               	movlb	0	; () banked
  8054  012070  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  8055  012072  0100               	movlb	0	; () banked
  8056  012074  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8057  012076  0100               	movlb	0	; () banked
  8058  012078  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  8059  01207A  0100               	movlb	0	; () banked
  8060  01207C  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  8061  01207E  0012               	return	
  8062  012080                     __end_of_get_quot_rem:
  8063                           	opt stack 0
  8064                           tblptru	equ	0xFF8
  8065                           tblptrh	equ	0xFF7
  8066                           tblptrl	equ	0xFF6
  8067                           tablat	equ	0xFF5
  8068                           prodh	equ	0xFF4
  8069                           prodl	equ	0xFF3
  8070                           intcon	equ	0xFF2
  8071                           intcon2	equ	0xFF1
  8072                           indf0	equ	0xFEF
  8073                           postinc0	equ	0xFEE
  8074                           fsr0h	equ	0xFEA
  8075                           fsr0l	equ	0xFE9
  8076                           wreg	equ	0xFE8
  8077                           postinc1	equ	0xFE6
  8078                           postdec1	equ	0xFE5
  8079                           fsr1h	equ	0xFE2
  8080                           fsr1l	equ	0xFE1
  8081                           indf2	equ	0xFDF
  8082                           postinc2	equ	0xFDE
  8083                           postdec2	equ	0xFDD
  8084                           fsr2h	equ	0xFDA
  8085                           fsr2l	equ	0xFD9
  8086                           status	equ	0xFD8
  8087                           
  8088 ;; *************** function _caltime_to_RTCC *****************
  8089 ;; Defined at:
  8090 ;;		line 106 in file "../My_library/My_RTCC.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  tm              2   22[BANK0 ] PTR struct .
  8093 ;;		 -> now(14), 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;		None
  8096 ;; Return value:  Size  Location     Type
  8097 ;;		None               void
  8098 ;; Registers used:
  8099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8108 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8109 ;;Total ram usage:        2 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; Hardware stack levels required when called:    6
  8112 ;; This function calls:
  8113 ;;		_d_to_x
  8114 ;; This function is called by:
  8115 ;;		_RTCC_from_caltime
  8116 ;;		_RTCC_from_epoch
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text28
  8121  011E02                     __ptext28:
  8122                           	opt stack 0
  8123  011E02                     _caltime_to_RTCC:
  8124                           	opt stack 19
  8125  011E02                     l292:
  8126  011E02  010F               	movlb	15	; () banked
  8127  011E04  B93F               	btfsc	63,4,b	;volatile
  8128  011E06  D7FD               	goto	l292
  8129                           
  8130                           ; BSR set to: 15
  8131                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR0 = 1;
  8132  011E08  010F               	movlb	15	; () banked
  8133  011E0A  813F               	bsf	63,0,b	;volatile
  8134                           
  8135                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR1 = 1;
  8136  011E0C  010F               	movlb	15	; () banked
  8137  011E0E  833F               	bsf	63,1,b	;volatile
  8138                           
  8139                           ; BSR set to: 15
  8140                           ;My_RTCC.c: 110: RTCVALL = d_to_x(tm->YY);
  8141  011E10  0100               	movlb	0	; () banked
  8142  011E12  EE20 F00A          	lfsr	2,10
  8143  011E16  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8144  011E18  26D9               	addwf	fsr2l,f,c
  8145  011E1A  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8146  011E1C  22DA               	addwfc	fsr2h,f,c
  8147  011E1E  50DF               	movf	indf2,w,c
  8148  011E20  ECAB  F097         	call	_d_to_x
  8149  011E24  010F               	movlb	15	; () banked
  8150  011E26  6F3A               	movwf	58,b	;volatile
  8151                           
  8152                           ; BSR set to: 15
  8153                           ;My_RTCC.c: 111: RTCVALH = 0x00;
  8154  011E28  0E00               	movlw	0
  8155  011E2A  010F               	movlb	15	; () banked
  8156  011E2C  6F3B               	movwf	59,b	;volatile
  8157                           
  8158                           ; BSR set to: 15
  8159                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR0 = 0;
  8160  011E2E  010F               	movlb	15	; () banked
  8161  011E30  913F               	bcf	63,0,b	;volatile
  8162                           
  8163                           ; BSR set to: 15
  8164                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR1 = 1;
  8165  011E32  010F               	movlb	15	; () banked
  8166  011E34  833F               	bsf	63,1,b	;volatile
  8167                           
  8168                           ; BSR set to: 15
  8169                           ;My_RTCC.c: 114: RTCVALL = d_to_x(tm->DD);
  8170  011E36  0100               	movlb	0	; () banked
  8171  011E38  EE20 F008          	lfsr	2,8
  8172  011E3C  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8173  011E3E  26D9               	addwf	fsr2l,f,c
  8174  011E40  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8175  011E42  22DA               	addwfc	fsr2h,f,c
  8176  011E44  50DF               	movf	indf2,w,c
  8177  011E46  ECAB  F097         	call	_d_to_x
  8178  011E4A  010F               	movlb	15	; () banked
  8179  011E4C  6F3A               	movwf	58,b	;volatile
  8180                           
  8181                           ; BSR set to: 15
  8182                           ;My_RTCC.c: 115: RTCVALH = d_to_x(tm->MM);
  8183  011E4E  0100               	movlb	0	; () banked
  8184  011E50  EE20 F009          	lfsr	2,9
  8185  011E54  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8186  011E56  26D9               	addwf	fsr2l,f,c
  8187  011E58  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8188  011E5A  22DA               	addwfc	fsr2h,f,c
  8189  011E5C  50DF               	movf	indf2,w,c
  8190  011E5E  ECAB  F097         	call	_d_to_x
  8191  011E62  010F               	movlb	15	; () banked
  8192  011E64  6F3B               	movwf	59,b	;volatile
  8193                           
  8194                           ; BSR set to: 15
  8195                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR0 = 1;
  8196  011E66  010F               	movlb	15	; () banked
  8197  011E68  813F               	bsf	63,0,b	;volatile
  8198                           
  8199                           ; BSR set to: 15
  8200                           ;My_RTCC.c: 117: RTCCFGbits.RTCPTR1 = 0;
  8201  011E6A  010F               	movlb	15	; () banked
  8202  011E6C  933F               	bcf	63,1,b	;volatile
  8203                           
  8204                           ; BSR set to: 15
  8205                           ;My_RTCC.c: 118: RTCVALL = d_to_x(tm->hh);
  8206  011E6E  0100               	movlb	0	; () banked
  8207  011E70  EE20 F006          	lfsr	2,6
  8208  011E74  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8209  011E76  26D9               	addwf	fsr2l,f,c
  8210  011E78  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8211  011E7A  22DA               	addwfc	fsr2h,f,c
  8212  011E7C  50DF               	movf	indf2,w,c
  8213  011E7E  ECAB  F097         	call	_d_to_x
  8214  011E82  010F               	movlb	15	; () banked
  8215  011E84  6F3A               	movwf	58,b	;volatile
  8216                           
  8217                           ; BSR set to: 15
  8218                           ;My_RTCC.c: 119: RTCVALH = d_to_x(tm->EE);
  8219  011E86  0100               	movlb	0	; () banked
  8220  011E88  EE20 F007          	lfsr	2,7
  8221  011E8C  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8222  011E8E  26D9               	addwf	fsr2l,f,c
  8223  011E90  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8224  011E92  22DA               	addwfc	fsr2h,f,c
  8225  011E94  50DF               	movf	indf2,w,c
  8226  011E96  ECAB  F097         	call	_d_to_x
  8227  011E9A  010F               	movlb	15	; () banked
  8228  011E9C  6F3B               	movwf	59,b	;volatile
  8229                           
  8230                           ; BSR set to: 15
  8231                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR0 = 0;
  8232  011E9E  010F               	movlb	15	; () banked
  8233  011EA0  913F               	bcf	63,0,b	;volatile
  8234                           
  8235                           ; BSR set to: 15
  8236                           ;My_RTCC.c: 121: RTCCFGbits.RTCPTR1 = 0;
  8237  011EA2  010F               	movlb	15	; () banked
  8238  011EA4  933F               	bcf	63,1,b	;volatile
  8239                           
  8240                           ; BSR set to: 15
  8241                           ;My_RTCC.c: 122: RTCVALL = d_to_x(tm->ss);
  8242  011EA6  0100               	movlb	0	; () banked
  8243  011EA8  EE20 F004          	lfsr	2,4
  8244  011EAC  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8245  011EAE  26D9               	addwf	fsr2l,f,c
  8246  011EB0  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8247  011EB2  22DA               	addwfc	fsr2h,f,c
  8248  011EB4  50DF               	movf	indf2,w,c
  8249  011EB6  ECAB  F097         	call	_d_to_x
  8250  011EBA  010F               	movlb	15	; () banked
  8251  011EBC  6F3A               	movwf	58,b	;volatile
  8252                           
  8253                           ; BSR set to: 15
  8254                           ;My_RTCC.c: 123: RTCVALH = d_to_x(tm->mm);
  8255  011EBE  0100               	movlb	0	; () banked
  8256  011EC0  EE20 F005          	lfsr	2,5
  8257  011EC4  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8258  011EC6  26D9               	addwf	fsr2l,f,c
  8259  011EC8  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8260  011ECA  22DA               	addwfc	fsr2h,f,c
  8261  011ECC  50DF               	movf	indf2,w,c
  8262  011ECE  ECAB  F097         	call	_d_to_x
  8263  011ED2  010F               	movlb	15	; () banked
  8264  011ED4  6F3B               	movwf	59,b	;volatile
  8265                           
  8266                           ; BSR set to: 15
  8267  011ED6  0012               	return		;funcret
  8268  011ED8                     __end_of_caltime_to_RTCC:
  8269                           	opt stack 0
  8270                           tblptru	equ	0xFF8
  8271                           tblptrh	equ	0xFF7
  8272                           tblptrl	equ	0xFF6
  8273                           tablat	equ	0xFF5
  8274                           prodh	equ	0xFF4
  8275                           prodl	equ	0xFF3
  8276                           intcon	equ	0xFF2
  8277                           intcon2	equ	0xFF1
  8278                           indf0	equ	0xFEF
  8279                           postinc0	equ	0xFEE
  8280                           fsr0h	equ	0xFEA
  8281                           fsr0l	equ	0xFE9
  8282                           wreg	equ	0xFE8
  8283                           postinc1	equ	0xFE6
  8284                           postdec1	equ	0xFE5
  8285                           fsr1h	equ	0xFE2
  8286                           fsr1l	equ	0xFE1
  8287                           indf2	equ	0xFDF
  8288                           postinc2	equ	0xFDE
  8289                           postdec2	equ	0xFDD
  8290                           fsr2h	equ	0xFDA
  8291                           fsr2l	equ	0xFD9
  8292                           status	equ	0xFD8
  8293                           
  8294 ;; *************** function _d_to_x *****************
  8295 ;; Defined at:
  8296 ;;		line 46 in file "../My_library/My_RTCC.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;  dec             1    wreg     unsigned char 
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;  dec             1   21[BANK0 ] unsigned char 
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      unsigned char 
  8303 ;; Registers used:
  8304 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8313 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8314 ;;Total ram usage:        1 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; Hardware stack levels required when called:    5
  8317 ;; This function calls:
  8318 ;;		___awdiv
  8319 ;; This function is called by:
  8320 ;;		_caltime_to_RTCC
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text29
  8325  012F56                     __ptext29:
  8326                           	opt stack 0
  8327  012F56                     _d_to_x:
  8328                           	opt stack 19
  8329                           
  8330                           ; BSR set to: 15
  8331                           ;incstack = 0
  8332                           ;d_to_x@dec stored from wreg
  8333  012F56  0100               	movlb	0	; () banked
  8334  012F58  6F75               	movwf	d_to_x@dec& (0+255),b
  8335                           
  8336                           ;My_RTCC.c: 49: return dec / 10 * 6 + dec;
  8337  012F5A  C075  F06D         	movff	d_to_x@dec,___awdiv@dividend
  8338  012F5E  0100               	movlb	0	; () banked
  8339  012F60  6B6E               	clrf	(___awdiv@dividend+1)& (0+255),b
  8340  012F62  0E00               	movlw	0
  8341  012F64  0100               	movlb	0	; () banked
  8342  012F66  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  8343  012F68  0E0A               	movlw	10
  8344  012F6A  6F6F               	movwf	___awdiv@divisor& (0+255),b
  8345  012F6C  ECA4  F090         	call	___awdiv	;wreg free
  8346  012F70  0100               	movlb	0	; () banked
  8347  012F72  516D               	movf	?___awdiv& (0+255),w,b
  8348  012F74  0D06               	mullw	6
  8349  012F76  50F3               	movf	prodl,w,c
  8350  012F78  0100               	movlb	0	; () banked
  8351  012F7A  2575               	addwf	d_to_x@dec& (0+255),w,b
  8352  012F7C  0012               	return	
  8353  012F7E                     __end_of_d_to_x:
  8354                           	opt stack 0
  8355                           tblptru	equ	0xFF8
  8356                           tblptrh	equ	0xFF7
  8357                           tblptrl	equ	0xFF6
  8358                           tablat	equ	0xFF5
  8359                           prodh	equ	0xFF4
  8360                           prodl	equ	0xFF3
  8361                           intcon	equ	0xFF2
  8362                           intcon2	equ	0xFF1
  8363                           indf0	equ	0xFEF
  8364                           postinc0	equ	0xFEE
  8365                           fsr0h	equ	0xFEA
  8366                           fsr0l	equ	0xFE9
  8367                           wreg	equ	0xFE8
  8368                           postinc1	equ	0xFE6
  8369                           postdec1	equ	0xFE5
  8370                           fsr1h	equ	0xFE2
  8371                           fsr1l	equ	0xFE1
  8372                           indf2	equ	0xFDF
  8373                           postinc2	equ	0xFDE
  8374                           postdec2	equ	0xFDD
  8375                           fsr2h	equ	0xFDA
  8376                           fsr2l	equ	0xFD9
  8377                           status	equ	0xFD8
  8378                           
  8379 ;; *************** function ___awdiv *****************
  8380 ;; Defined at:
  8381 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  dividend        2   13[BANK0 ] int 
  8384 ;;  divisor         2   15[BANK0 ] int 
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  quotient        2   19[BANK0 ] int 
  8387 ;;  sign            1   18[BANK0 ] unsigned char 
  8388 ;;  counter         1   17[BANK0 ] unsigned char 
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  2   13[BANK0 ] int 
  8391 ;; Registers used:
  8392 ;;		wreg, status,2, status,0
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8398 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8399 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8401 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8402 ;;Total ram usage:        8 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; Hardware stack levels required when called:    4
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_d_to_x
  8409 ;;		_terminal_operation
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           	psect	text30
  8414  012148                     __ptext30:
  8415                           	opt stack 0
  8416  012148                     ___awdiv:
  8417                           	opt stack 19
  8418                           
  8419                           ; BSR set to: 0
  8420                           ;incstack = 0
  8421  012148  0E00               	movlw	0
  8422  01214A  0100               	movlb	0	; () banked
  8423  01214C  6F72               	movwf	___awdiv@sign& (0+255),b
  8424                           
  8425                           ; BSR set to: 0
  8426  01214E  0100               	movlb	0	; () banked
  8427  012150  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8428  012152  D008               	goto	l8080
  8429                           
  8430                           ; BSR set to: 0
  8431  012154  0100               	movlb	0	; () banked
  8432  012156  6D6F               	negf	___awdiv@divisor& (0+255),b
  8433  012158  1F70               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8434  01215A  B0D8               	btfsc	status,0,c
  8435  01215C  2B70               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8436                           
  8437                           ; BSR set to: 0
  8438  01215E  0E01               	movlw	1
  8439  012160  0100               	movlb	0	; () banked
  8440  012162  6F72               	movwf	___awdiv@sign& (0+255),b
  8441  012164                     l8080:
  8442                           
  8443                           ; BSR set to: 0
  8444  012164  0100               	movlb	0	; () banked
  8445  012166  AF6E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8446  012168  D008               	goto	l8086
  8447                           
  8448                           ; BSR set to: 0
  8449  01216A  0100               	movlb	0	; () banked
  8450  01216C  6D6D               	negf	___awdiv@dividend& (0+255),b
  8451  01216E  1F6E               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8452  012170  B0D8               	btfsc	status,0,c
  8453  012172  2B6E               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8454                           
  8455                           ; BSR set to: 0
  8456  012174  0E01               	movlw	1
  8457  012176  0100               	movlb	0	; () banked
  8458  012178  1B72               	xorwf	___awdiv@sign& (0+255),f,b
  8459  01217A                     l8086:
  8460                           
  8461                           ; BSR set to: 0
  8462  01217A  0E00               	movlw	0
  8463  01217C  0100               	movlb	0	; () banked
  8464  01217E  6F74               	movwf	(___awdiv@quotient+1)& (0+255),b
  8465  012180  0E00               	movlw	0
  8466  012182  6F73               	movwf	___awdiv@quotient& (0+255),b
  8467                           
  8468                           ; BSR set to: 0
  8469  012184  0100               	movlb	0	; () banked
  8470  012186  516F               	movf	___awdiv@divisor& (0+255),w,b
  8471  012188  0100               	movlb	0	; () banked
  8472  01218A  1170               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8473  01218C  B4D8               	btfsc	status,2,c
  8474  01218E  D02C               	goto	l8108
  8475                           
  8476                           ; BSR set to: 0
  8477  012190  0E01               	movlw	1
  8478  012192  0100               	movlb	0	; () banked
  8479  012194  6F71               	movwf	___awdiv@counter& (0+255),b
  8480  012196  D006               	goto	l8094
  8481  012198                     l8092:
  8482                           
  8483                           ; BSR set to: 0
  8484  012198  0100               	movlb	0	; () banked
  8485  01219A  90D8               	bcf	status,0,c
  8486  01219C  376F               	rlcf	___awdiv@divisor& (0+255),f,b
  8487  01219E  3770               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8488  0121A0  0100               	movlb	0	; () banked
  8489  0121A2  2B71               	incf	___awdiv@counter& (0+255),f,b
  8490  0121A4                     l8094:
  8491                           
  8492                           ; BSR set to: 0
  8493  0121A4  0100               	movlb	0	; () banked
  8494  0121A6  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8495  0121A8  D7F7               	goto	l8092
  8496  0121AA                     l8096:
  8497                           
  8498                           ; BSR set to: 0
  8499  0121AA  0100               	movlb	0	; () banked
  8500  0121AC  90D8               	bcf	status,0,c
  8501  0121AE  3773               	rlcf	___awdiv@quotient& (0+255),f,b
  8502  0121B0  3774               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8503                           
  8504                           ; BSR set to: 0
  8505  0121B2  0100               	movlb	0	; () banked
  8506  0121B4  516F               	movf	___awdiv@divisor& (0+255),w,b
  8507  0121B6  0100               	movlb	0	; () banked
  8508  0121B8  5D6D               	subwf	___awdiv@dividend& (0+255),w,b
  8509  0121BA  0100               	movlb	0	; () banked
  8510  0121BC  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8511  0121BE  0100               	movlb	0	; () banked
  8512  0121C0  596E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8513  0121C2  A0D8               	btfss	status,0,c
  8514  0121C4  D00A               	goto	l8104
  8515                           
  8516                           ; BSR set to: 0
  8517  0121C6  0100               	movlb	0	; () banked
  8518  0121C8  516F               	movf	___awdiv@divisor& (0+255),w,b
  8519  0121CA  0100               	movlb	0	; () banked
  8520  0121CC  5F6D               	subwf	___awdiv@dividend& (0+255),f,b
  8521  0121CE  0100               	movlb	0	; () banked
  8522  0121D0  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8523  0121D2  0100               	movlb	0	; () banked
  8524  0121D4  5B6E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8525                           
  8526                           ; BSR set to: 0
  8527  0121D6  0100               	movlb	0	; () banked
  8528  0121D8  8173               	bsf	___awdiv@quotient& (0+255),0,b
  8529  0121DA                     l8104:
  8530                           
  8531                           ; BSR set to: 0
  8532  0121DA  0100               	movlb	0	; () banked
  8533  0121DC  90D8               	bcf	status,0,c
  8534  0121DE  3370               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8535  0121E0  336F               	rrcf	___awdiv@divisor& (0+255),f,b
  8536                           
  8537                           ; BSR set to: 0
  8538  0121E2  0100               	movlb	0	; () banked
  8539  0121E4  2F71               	decfsz	___awdiv@counter& (0+255),f,b
  8540  0121E6  D7E1               	goto	l8096
  8541  0121E8                     l8108:
  8542                           
  8543                           ; BSR set to: 0
  8544  0121E8  0100               	movlb	0	; () banked
  8545  0121EA  5172               	movf	___awdiv@sign& (0+255),w,b
  8546  0121EC  0100               	movlb	0	; () banked
  8547  0121EE  B4D8               	btfsc	status,2,c
  8548  0121F0  D005               	goto	l8112
  8549                           
  8550                           ; BSR set to: 0
  8551  0121F2  0100               	movlb	0	; () banked
  8552  0121F4  6D73               	negf	___awdiv@quotient& (0+255),b
  8553  0121F6  1F74               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8554  0121F8  B0D8               	btfsc	status,0,c
  8555  0121FA  2B74               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8556  0121FC                     l8112:
  8557                           
  8558                           ; BSR set to: 0
  8559  0121FC  C073  F06D         	movff	___awdiv@quotient,?___awdiv
  8560  012200  C074  F06E         	movff	___awdiv@quotient+1,?___awdiv+1
  8561  012204  0012               	return	
  8562  012206                     __end_of___awdiv:
  8563                           	opt stack 0
  8564                           tblptru	equ	0xFF8
  8565                           tblptrh	equ	0xFF7
  8566                           tblptrl	equ	0xFF6
  8567                           tablat	equ	0xFF5
  8568                           prodh	equ	0xFF4
  8569                           prodl	equ	0xFF3
  8570                           intcon	equ	0xFF2
  8571                           intcon2	equ	0xFF1
  8572                           indf0	equ	0xFEF
  8573                           postinc0	equ	0xFEE
  8574                           fsr0h	equ	0xFEA
  8575                           fsr0l	equ	0xFE9
  8576                           wreg	equ	0xFE8
  8577                           postinc1	equ	0xFE6
  8578                           postdec1	equ	0xFE5
  8579                           fsr1h	equ	0xFE2
  8580                           fsr1l	equ	0xFE1
  8581                           indf2	equ	0xFDF
  8582                           postinc2	equ	0xFDE
  8583                           postdec2	equ	0xFDD
  8584                           fsr2h	equ	0xFDA
  8585                           fsr2l	equ	0xFD9
  8586                           status	equ	0xFD8
  8587                           
  8588 ;; *************** function _PWM_init *****************
  8589 ;; Defined at:
  8590 ;;		line 80 in file "PIC18F27J53-killifish_light05.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  PR              1    wreg     unsigned char 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  PR              1   31[COMRAM] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;		None               void
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8608 ;;Total ram usage:        1 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    4
  8611 ;; This function calls:
  8612 ;;		Nothing
  8613 ;; This function is called by:
  8614 ;;		_main_init
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text31
  8619  01243A                     __ptext31:
  8620                           	opt stack 0
  8621  01243A                     _PWM_init:
  8622                           	opt stack 25
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;incstack = 0
  8626                           ;PWM_init@PR stored from wreg
  8627  01243A  6E20               	movwf	PWM_init@PR,c
  8628                           
  8629                           ;PIC18F27J53-killifish_light05.c: 81: PPSCONbits.IOLOCK = 0;
  8630  01243C  010E               	movlb	14	; () banked
  8631  01243E  91BF               	bcf	191,0,b	;volatile
  8632                           
  8633                           ;PIC18F27J53-killifish_light05.c: 82: if (PPSCONbits.IOLOCK != 0) {
  8634  012440  010E               	movlb	14	; () banked
  8635  012442  A1BF               	btfss	191,0,b	;volatile
  8636  012444  D006               	goto	l732
  8637                           
  8638                           ; BSR set to: 14
  8639                           ;PIC18F27J53-killifish_light05.c: 83: EECON2 = 0x55;
  8640  012446  0E55               	movlw	85
  8641  012448  6EA7               	movwf	4007,c	;volatile
  8642                           
  8643                           ;PIC18F27J53-killifish_light05.c: 84: EECON2 = 0xAA;
  8644  01244A  0EAA               	movlw	170
  8645  01244C  6EA7               	movwf	4007,c	;volatile
  8646                           
  8647                           ; BSR set to: 14
  8648                           ;PIC18F27J53-killifish_light05.c: 85: PPSCONbits.IOLOCK = 0;
  8649  01244E  010E               	movlb	14	; () banked
  8650  012450  91BF               	bcf	191,0,b	;volatile
  8651  012452                     l732:
  8652                           
  8653                           ; BSR set to: 14
  8654                           ;PIC18F27J53-killifish_light05.c: 86: }
  8655                           ;PIC18F27J53-killifish_light05.c: 88: RPOR3 = 14;
  8656  012452  0E0E               	movlw	14
  8657  012454  010E               	movlb	14	; () banked
  8658  012456  6FC3               	movwf	195,b	;volatile
  8659                           
  8660                           ;PIC18F27J53-killifish_light05.c: 89: RPOR4 = 18;
  8661  012458  0E12               	movlw	18
  8662  01245A  010E               	movlb	14	; () banked
  8663  01245C  6FC4               	movwf	196,b	;volatile
  8664                           
  8665                           ;PIC18F27J53-killifish_light05.c: 90: RPOR5 = 22;
  8666  01245E  0E16               	movlw	22
  8667  012460  010E               	movlb	14	; () banked
  8668  012462  6FC5               	movwf	197,b	;volatile
  8669                           
  8670                           ; BSR set to: 14
  8671                           ;PIC18F27J53-killifish_light05.c: 92: CCP1CONbits.CCP1M = 12;
  8672  012464  50BA               	movf	4026,w,c	;volatile
  8673  012466  0BF0               	andlw	-16
  8674  012468  090C               	iorlw	12
  8675  01246A  6EBA               	movwf	4026,c	;volatile
  8676                           
  8677                           ; BSR set to: 14
  8678                           ;PIC18F27J53-killifish_light05.c: 93: CCP1CONbits.P1M = 0;
  8679  01246C  0E3F               	movlw	-193
  8680  01246E  16BA               	andwf	4026,f,c	;volatile
  8681                           
  8682                           ; BSR set to: 14
  8683                           ;PIC18F27J53-killifish_light05.c: 94: CCPTMRS0bits.C1TSEL = 0;
  8684  012470  010F               	movlb	15	; () banked
  8685  012472  9152               	bcf	82,0,b	;volatile
  8686  012474  9352               	bcf	82,1,b	;volatile
  8687  012476  9552               	bcf	82,2,b	;volatile
  8688                           
  8689                           ; BSR set to: 15
  8690                           ;PIC18F27J53-killifish_light05.c: 95: CCPR1Lbits.CCPR1L = 0;
  8691  012478  0E00               	movlw	0
  8692  01247A  6EBB               	movwf	4027,c	;volatile
  8693                           
  8694                           ; BSR set to: 15
  8695                           ;PIC18F27J53-killifish_light05.c: 96: CCP1CONbits.DC1B = 0;
  8696  01247C  0ECF               	movlw	-49
  8697  01247E  16BA               	andwf	4026,f,c	;volatile
  8698                           
  8699                           ; BSR set to: 15
  8700                           ;PIC18F27J53-killifish_light05.c: 98: CCP2CONbits.CCP2M = 12;
  8701  012480  50B4               	movf	4020,w,c	;volatile
  8702  012482  0BF0               	andlw	-16
  8703  012484  090C               	iorlw	12
  8704  012486  6EB4               	movwf	4020,c	;volatile
  8705                           
  8706                           ; BSR set to: 15
  8707                           ;PIC18F27J53-killifish_light05.c: 99: CCP2CONbits.P2M = 0;
  8708  012488  0E3F               	movlw	-193
  8709  01248A  16B4               	andwf	4020,f,c	;volatile
  8710                           
  8711                           ; BSR set to: 15
  8712                           ;PIC18F27J53-killifish_light05.c: 100: CCPTMRS0bits.C2TSEL = 0;
  8713  01248C  010F               	movlb	15	; () banked
  8714  01248E  9752               	bcf	82,3,b	;volatile
  8715  012490  9952               	bcf	82,4,b	;volatile
  8716  012492  9B52               	bcf	82,5,b	;volatile
  8717                           
  8718                           ; BSR set to: 15
  8719                           ;PIC18F27J53-killifish_light05.c: 101: CCPR2Lbits.CCPR2L = 0;
  8720  012494  0E00               	movlw	0
  8721  012496  6EB5               	movwf	4021,c	;volatile
  8722                           
  8723                           ; BSR set to: 15
  8724                           ;PIC18F27J53-killifish_light05.c: 102: CCP2CONbits.DC2B = 0;
  8725  012498  0ECF               	movlw	-49
  8726  01249A  16B4               	andwf	4020,f,c	;volatile
  8727                           
  8728                           ; BSR set to: 15
  8729                           ;PIC18F27J53-killifish_light05.c: 104: CCP3CONbits.CCP3M = 12;
  8730  01249C  010F               	movlb	15	; () banked
  8731  01249E  5115               	movf	21,w,b	;volatile
  8732  0124A0  0BF0               	andlw	-16
  8733  0124A2  090C               	iorlw	12
  8734  0124A4  6F15               	movwf	21,b	;volatile
  8735                           
  8736                           ; BSR set to: 15
  8737                           ;PIC18F27J53-killifish_light05.c: 105: CCP3CONbits.P3M = 0;
  8738  0124A6  0E3F               	movlw	-193
  8739  0124A8  010F               	movlb	15	; () banked
  8740  0124AA  1715               	andwf	21,f,b	;volatile
  8741                           
  8742                           ; BSR set to: 15
  8743                           ;PIC18F27J53-killifish_light05.c: 106: CCPTMRS0bits.C3TSEL = 0;
  8744  0124AC  0E3F               	movlw	-193
  8745  0124AE  010F               	movlb	15	; () banked
  8746  0124B0  1752               	andwf	82,f,b	;volatile
  8747                           
  8748                           ; BSR set to: 15
  8749                           ;PIC18F27J53-killifish_light05.c: 107: CCPR3Lbits.CCPR3L = 0;
  8750  0124B2  0E00               	movlw	0
  8751  0124B4  010F               	movlb	15	; () banked
  8752  0124B6  6F16               	movwf	22,b	;volatile
  8753                           
  8754                           ; BSR set to: 15
  8755                           ;PIC18F27J53-killifish_light05.c: 108: CCP3CONbits.DC3B = 0;
  8756  0124B8  0ECF               	movlw	-49
  8757  0124BA  010F               	movlb	15	; () banked
  8758  0124BC  1715               	andwf	21,f,b	;volatile
  8759                           
  8760                           ; BSR set to: 15
  8761                           ;PIC18F27J53-killifish_light05.c: 110: CCP4CONbits.CCP4M = 12;
  8762  0124BE  010F               	movlb	15	; () banked
  8763  0124C0  5112               	movf	18,w,b	;volatile
  8764  0124C2  0BF0               	andlw	-16
  8765  0124C4  090C               	iorlw	12
  8766  0124C6  6F12               	movwf	18,b	;volatile
  8767                           
  8768                           ; BSR set to: 15
  8769                           ;PIC18F27J53-killifish_light05.c: 111: CCPTMRS1bits.C4TSEL = 0;
  8770  0124C8  0EFC               	movlw	-4
  8771  0124CA  010F               	movlb	15	; () banked
  8772  0124CC  1751               	andwf	81,f,b	;volatile
  8773                           
  8774                           ; BSR set to: 15
  8775                           ;PIC18F27J53-killifish_light05.c: 112: CCPR4Lbits.CCPR4L = 0;
  8776  0124CE  0E00               	movlw	0
  8777  0124D0  010F               	movlb	15	; () banked
  8778  0124D2  6F13               	movwf	19,b	;volatile
  8779                           
  8780                           ; BSR set to: 15
  8781                           ;PIC18F27J53-killifish_light05.c: 113: CCP4CONbits.DC4B = 0;
  8782  0124D4  0ECF               	movlw	-49
  8783  0124D6  010F               	movlb	15	; () banked
  8784  0124D8  1712               	andwf	18,f,b	;volatile
  8785                           
  8786                           ; BSR set to: 15
  8787                           ;PIC18F27J53-killifish_light05.c: 115: T2CONbits.T2OUTPS = 0;
  8788  0124DA  96CA               	bcf	4042,3,c	;volatile
  8789  0124DC  98CA               	bcf	4042,4,c	;volatile
  8790  0124DE  9ACA               	bcf	4042,5,c	;volatile
  8791  0124E0  9CCA               	bcf	4042,6,c	;volatile
  8792                           
  8793                           ; BSR set to: 15
  8794                           ;PIC18F27J53-killifish_light05.c: 116: T2CONbits.T2CKPS = 2;
  8795  0124E2  50CA               	movf	4042,w,c	;volatile
  8796  0124E4  0BFC               	andlw	-4
  8797  0124E6  0902               	iorlw	2
  8798  0124E8  6ECA               	movwf	4042,c	;volatile
  8799                           
  8800                           ; BSR set to: 15
  8801                           ;PIC18F27J53-killifish_light05.c: 117: PR2 = PR - 1;
  8802  0124EA  0420               	decf	PWM_init@PR,w,c
  8803  0124EC  6ECB               	movwf	4043,c	;volatile
  8804                           
  8805                           ; BSR set to: 15
  8806                           ;PIC18F27J53-killifish_light05.c: 118: T2CONbits.TMR2ON = 1;
  8807  0124EE  84CA               	bsf	4042,2,c	;volatile
  8808                           
  8809                           ; BSR set to: 15
  8810  0124F0  0012               	return		;funcret
  8811  0124F2                     __end_of_PWM_init:
  8812                           	opt stack 0
  8813                           tblptru	equ	0xFF8
  8814                           tblptrh	equ	0xFF7
  8815                           tblptrl	equ	0xFF6
  8816                           tablat	equ	0xFF5
  8817                           prodh	equ	0xFF4
  8818                           prodl	equ	0xFF3
  8819                           intcon	equ	0xFF2
  8820                           intcon2	equ	0xFF1
  8821                           indf0	equ	0xFEF
  8822                           postinc0	equ	0xFEE
  8823                           fsr0h	equ	0xFEA
  8824                           fsr0l	equ	0xFE9
  8825                           wreg	equ	0xFE8
  8826                           postinc1	equ	0xFE6
  8827                           postdec1	equ	0xFE5
  8828                           fsr1h	equ	0xFE2
  8829                           fsr1l	equ	0xFE1
  8830                           indf2	equ	0xFDF
  8831                           postinc2	equ	0xFDE
  8832                           postdec2	equ	0xFDD
  8833                           fsr2h	equ	0xFDA
  8834                           fsr2l	equ	0xFD9
  8835                           status	equ	0xFD8
  8836                           
  8837 ;; *************** function _OSC_init *****************
  8838 ;; Defined at:
  8839 ;;		line 106 in file "../My_library/My_PIC.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;		None
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;		None               void
  8846 ;; Registers used:
  8847 ;;		wreg, status,2
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8857 ;;Total ram usage:        0 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    4
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_main_init
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text32
  8868  013076                     __ptext32:
  8869                           	opt stack 0
  8870  013076                     _OSC_init:
  8871                           	opt stack 25
  8872                           
  8873                           ;My_PIC.c: 107: OSCCONbits.IRCF = 7;
  8874                           
  8875                           ; BSR set to: 15
  8876                           ;incstack = 0
  8877  013076  88D3               	bsf	4051,4,c	;volatile
  8878  013078  8AD3               	bsf	4051,5,c	;volatile
  8879  01307A  8CD3               	bsf	4051,6,c	;volatile
  8880                           
  8881                           ;My_PIC.c: 108: OSCTUNEbits.PLLEN = 1;
  8882  01307C  8C9B               	bsf	3995,6,c	;volatile
  8883                           
  8884                           ;My_PIC.c: 109: OSCCONbits.SCS = 0;
  8885  01307E  0EFC               	movlw	-4
  8886  013080  16D3               	andwf	4051,f,c	;volatile
  8887  013082  0012               	return		;funcret
  8888  013084                     __end_of_OSC_init:
  8889                           	opt stack 0
  8890                           tblptru	equ	0xFF8
  8891                           tblptrh	equ	0xFF7
  8892                           tblptrl	equ	0xFF6
  8893                           tablat	equ	0xFF5
  8894                           prodh	equ	0xFF4
  8895                           prodl	equ	0xFF3
  8896                           intcon	equ	0xFF2
  8897                           intcon2	equ	0xFF1
  8898                           indf0	equ	0xFEF
  8899                           postinc0	equ	0xFEE
  8900                           fsr0h	equ	0xFEA
  8901                           fsr0l	equ	0xFE9
  8902                           wreg	equ	0xFE8
  8903                           postinc1	equ	0xFE6
  8904                           postdec1	equ	0xFE5
  8905                           fsr1h	equ	0xFE2
  8906                           fsr1l	equ	0xFE1
  8907                           indf2	equ	0xFDF
  8908                           postinc2	equ	0xFDE
  8909                           postdec2	equ	0xFDD
  8910                           fsr2h	equ	0xFDA
  8911                           fsr2l	equ	0xFD9
  8912                           status	equ	0xFD8
  8913                           
  8914 ;; *************** function _ADC_init *****************
  8915 ;; Defined at:
  8916 ;;		line 132 in file "../My_library/My_PIC.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  p_ref           1    wreg     unsigned char 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;  p_ref           1   31[COMRAM] unsigned char 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;		None               void
  8923 ;; Registers used:
  8924 ;;		wreg, status,2
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8934 ;;Total ram usage:        1 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:    4
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		_main_init
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           	psect	text33
  8945  01300A                     __ptext33:
  8946                           	opt stack 0
  8947  01300A                     _ADC_init:
  8948                           	opt stack 25
  8949                           
  8950                           ;incstack = 0
  8951                           ;ADC_init@p_ref stored from wreg
  8952  01300A  6E20               	movwf	ADC_init@p_ref,c
  8953                           
  8954                           ;My_PIC.c: 133: ADCON0bits.VCFG1 = 0;
  8955  01300C  9EC2               	bcf	4034,7,c	;volatile
  8956                           
  8957                           ;My_PIC.c: 134: ADCON0bits.VCFG0 = p_ref;
  8958  01300E  B020               	btfsc	ADC_init@p_ref,0,c
  8959  013010  D002               	bra	u5165
  8960  013012  9CC2               	bcf	4034,6,c	;volatile
  8961  013014  D001               	bra	u5166
  8962  013016                     u5165:
  8963  013016  8CC2               	bsf	4034,6,c	;volatile
  8964  013018                     u5166:
  8965                           
  8966                           ;My_PIC.c: 136: ADCON1bits.ADFM = 1;
  8967  013018  8EC1               	bsf	4033,7,c	;volatile
  8968                           
  8969                           ;My_PIC.c: 137: ADCON1bits.ADCAL = 0;
  8970  01301A  9CC1               	bcf	4033,6,c	;volatile
  8971                           
  8972                           ;My_PIC.c: 138: ADCON1bits.ADCS = 6;
  8973  01301C  50C1               	movf	4033,w,c	;volatile
  8974  01301E  0BF8               	andlw	-8
  8975  013020  0906               	iorlw	6
  8976  013022  6EC1               	movwf	4033,c	;volatile
  8977  013024  0012               	return		;funcret
  8978  013026                     __end_of_ADC_init:
  8979                           	opt stack 0
  8980                           tblptru	equ	0xFF8
  8981                           tblptrh	equ	0xFF7
  8982                           tblptrl	equ	0xFF6
  8983                           tablat	equ	0xFF5
  8984                           prodh	equ	0xFF4
  8985                           prodl	equ	0xFF3
  8986                           intcon	equ	0xFF2
  8987                           intcon2	equ	0xFF1
  8988                           indf0	equ	0xFEF
  8989                           postinc0	equ	0xFEE
  8990                           fsr0h	equ	0xFEA
  8991                           fsr0l	equ	0xFE9
  8992                           wreg	equ	0xFE8
  8993                           postinc1	equ	0xFE6
  8994                           postdec1	equ	0xFE5
  8995                           fsr1h	equ	0xFE2
  8996                           fsr1l	equ	0xFE1
  8997                           indf2	equ	0xFDF
  8998                           postinc2	equ	0xFDE
  8999                           postdec2	equ	0xFDD
  9000                           fsr2h	equ	0xFDA
  9001                           fsr2l	equ	0xFD9
  9002                           status	equ	0xFD8
  9003                           
  9004 ;; *************** function _light_task *****************
  9005 ;; Defined at:
  9006 ;;		line 231 in file "PIC18F27J53-killifish_light05.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;		None
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  temp            4   46[BANK0 ] unsigned long 
  9011 ;;  value           1   45[BANK0 ] unsigned char 
  9012 ;;  value           1   44[BANK0 ] unsigned char 
  9013 ;;  i               1   50[BANK0 ] unsigned char 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;		None               void
  9016 ;; Registers used:
  9017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9024 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9026 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9027 ;;Total ram usage:       11 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    8
  9030 ;; This function calls:
  9031 ;;		_PWM_set
  9032 ;;		_RTCC_from_RTCC
  9033 ;;		___lldiv
  9034 ;;		___llmod
  9035 ;;		___lmul
  9036 ;; This function is called by:
  9037 ;;		_main
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text34
  9042  011598                     __ptext34:
  9043                           	opt stack 0
  9044  011598                     _light_task:
  9045                           	opt stack 22
  9046                           
  9047                           ;PIC18F27J53-killifish_light05.c: 232: uint8_t i;
  9048                           ;PIC18F27J53-killifish_light05.c: 233: if (time_change_flag) {
  9049                           
  9050                           ;incstack = 0
  9051  011598  0100               	movlb	0	; () banked
  9052  01159A  51EE               	movf	_time_change_flag& (0+255),w,b
  9053  01159C  B4D8               	btfsc	status,2,c
  9054  01159E  D0AE               	goto	l786
  9055                           
  9056                           ; BSR set to: 0
  9057                           ;PIC18F27J53-killifish_light05.c: 234: time_change_flag = 0;
  9058  0115A0  0E00               	movlw	0
  9059  0115A2  0100               	movlb	0	; () banked
  9060  0115A4  6FEE               	movwf	_time_change_flag& (0+255),b
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;PIC18F27J53-killifish_light05.c: 235: RTCC_from_RTCC(&now);
  9064  0115A6  0E43               	movlw	low _now
  9065  0115A8  0100               	movlb	0	; () banked
  9066  0115AA  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  9067  0115AC  0E01               	movlw	high _now
  9068  0115AE  0100               	movlb	0	; () banked
  9069  0115B0  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  9070  0115B2  EC2E  F098         	call	_RTCC_from_RTCC	;wreg free
  9071                           
  9072                           ;PIC18F27J53-killifish_light05.c: 236: if (light_mode == TIME_SYNC_mode) {
  9073  0115B6  0100               	movlb	0	; () banked
  9074  0115B8  51ED               	movf	_light_mode& (0+255),w,b
  9075  0115BA  A4D8               	btfss	status,2,c
  9076  0115BC  D09F               	goto	l786
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;PIC18F27J53-killifish_light05.c: 237: epoch_t temp = (epoch_t) now.epoch % ((epoch_t)60
      +                          *60*24);
  9080  0115BE  C143  F060         	movff	_now,___llmod@dividend
  9081  0115C2  C144  F061         	movff	_now+1,___llmod@dividend+1
  9082  0115C6  C145  F062         	movff	_now+2,___llmod@dividend+2
  9083  0115CA  C146  F063         	movff	_now+3,___llmod@dividend+3
  9084  0115CE  0E80               	movlw	128
  9085  0115D0  0100               	movlb	0	; () banked
  9086  0115D2  6F64               	movwf	___llmod@divisor& (0+255),b
  9087  0115D4  0E51               	movlw	81
  9088  0115D6  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  9089  0115D8  0E01               	movlw	1
  9090  0115DA  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  9091  0115DC  0E00               	movlw	0
  9092  0115DE  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  9093  0115E0  ECC6  F093         	call	___llmod	;wreg free
  9094  0115E4  C060  F08E         	movff	?___llmod,light_task@temp
  9095  0115E8  C061  F08F         	movff	?___llmod+1,light_task@temp+1
  9096  0115EC  C062  F090         	movff	?___llmod+2,light_task@temp+2
  9097  0115F0  C063  F091         	movff	?___llmod+3,light_task@temp+3
  9098                           
  9099                           ;PIC18F27J53-killifish_light05.c: 238: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  9100  0115F4  0100               	movlb	0	; () banked
  9101  0115F6  5191               	movf	(light_task@temp+3)& (0+255),w,b
  9102  0115F8  0100               	movlb	0	; () banked
  9103  0115FA  1190               	iorwf	(light_task@temp+2)& (0+255),w,b
  9104  0115FC  E108               	bnz	u9810
  9105  0115FE  0EC1               	movlw	193
  9106  011600  0100               	movlb	0	; () banked
  9107  011602  5D8E               	subwf	light_task@temp& (0+255),w,b
  9108  011604  0EA8               	movlw	168
  9109  011606  0100               	movlb	0	; () banked
  9110  011608  598F               	subwfb	(light_task@temp+1)& (0+255),w,b
  9111  01160A  A0D8               	btfss	status,0,c
  9112  01160C  D026               	goto	l9140
  9113  01160E                     u9810:
  9114                           
  9115                           ; BSR set to: 0
  9116  01160E  C08E  F088         	movff	light_task@temp,??_light_task
  9117  011612  C08F  F089         	movff	light_task@temp+1,??_light_task+1
  9118  011616  C090  F08A         	movff	light_task@temp+2,??_light_task+2
  9119  01161A  C091  F08B         	movff	light_task@temp+3,??_light_task+3
  9120  01161E  0100               	movlb	0	; () banked
  9121  011620  1F88               	comf	??_light_task& (0+255),f,b
  9122  011622  1F89               	comf	(??_light_task+1)& (0+255),f,b
  9123  011624  1F8A               	comf	(??_light_task+2)& (0+255),f,b
  9124  011626  1F8B               	comf	(??_light_task+3)& (0+255),f,b
  9125  011628  2B88               	incf	??_light_task& (0+255),f,b
  9126  01162A  0E00               	movlw	0
  9127  01162C  2389               	addwfc	(??_light_task+1)& (0+255),f,b
  9128  01162E  238A               	addwfc	(??_light_task+2)& (0+255),f,b
  9129  011630  238B               	addwfc	(??_light_task+3)& (0+255),f,b
  9130  011632  0E80               	movlw	128
  9131  011634  0100               	movlb	0	; () banked
  9132  011636  2588               	addwf	??_light_task& (0+255),w,b
  9133  011638  0100               	movlb	0	; () banked
  9134  01163A  6F8E               	movwf	light_task@temp& (0+255),b
  9135  01163C  0E51               	movlw	81
  9136  01163E  0100               	movlb	0	; () banked
  9137  011640  2189               	addwfc	(??_light_task+1)& (0+255),w,b
  9138  011642  0100               	movlb	0	; () banked
  9139  011644  6F8F               	movwf	(light_task@temp+1)& (0+255),b
  9140  011646  0E01               	movlw	1
  9141  011648  0100               	movlb	0	; () banked
  9142  01164A  218A               	addwfc	(??_light_task+2)& (0+255),w,b
  9143  01164C  0100               	movlb	0	; () banked
  9144  01164E  6F90               	movwf	(light_task@temp+2)& (0+255),b
  9145  011650  0E00               	movlw	0
  9146  011652  0100               	movlb	0	; () banked
  9147  011654  218B               	addwfc	(??_light_task+3)& (0+255),w,b
  9148  011656  0100               	movlb	0	; () banked
  9149  011658  6F91               	movwf	(light_task@temp+3)& (0+255),b
  9150  01165A                     l9140:
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;PIC18F27J53-killifish_light05.c: 239: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  9154  01165A  90D8               	bcf	status,0,c
  9155  01165C  0100               	movlb	0	; () banked
  9156  01165E  358E               	rlcf	light_task@temp& (0+255),w,b
  9157  011660  0100               	movlb	0	; () banked
  9158  011662  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9159  011664  0100               	movlb	0	; () banked
  9160  011666  358F               	rlcf	(light_task@temp+1)& (0+255),w,b
  9161  011668  0100               	movlb	0	; () banked
  9162  01166A  6F6E               	movwf	(___lmul@multiplier+1)& (0+255),b
  9163  01166C  0100               	movlb	0	; () banked
  9164  01166E  3590               	rlcf	(light_task@temp+2)& (0+255),w,b
  9165  011670  0100               	movlb	0	; () banked
  9166  011672  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  9167  011674  0100               	movlb	0	; () banked
  9168  011676  3591               	rlcf	(light_task@temp+3)& (0+255),w,b
  9169  011678  0100               	movlb	0	; () banked
  9170  01167A  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  9171  01167C  0EFA               	movlw	250
  9172  01167E  0100               	movlb	0	; () banked
  9173  011680  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9174  011682  0E00               	movlw	0
  9175  011684  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9176  011686  0E00               	movlw	0
  9177  011688  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9178  01168A  0E00               	movlw	0
  9179  01168C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9180  01168E  EC56  F095         	call	___lmul	;wreg free
  9181  011692  C06D  F060         	movff	?___lmul,___lldiv@dividend
  9182  011696  C06E  F061         	movff	?___lmul+1,___lldiv@dividend+1
  9183  01169A  C06F  F062         	movff	?___lmul+2,___lldiv@dividend+2
  9184  01169E  C070  F063         	movff	?___lmul+3,___lldiv@dividend+3
  9185  0116A2  0E80               	movlw	128
  9186  0116A4  0100               	movlb	0	; () banked
  9187  0116A6  6F64               	movwf	___lldiv@divisor& (0+255),b
  9188  0116A8  0E51               	movlw	81
  9189  0116AA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9190  0116AC  0E01               	movlw	1
  9191  0116AE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9192  0116B0  0E00               	movlw	0
  9193  0116B2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9194  0116B4  EC03  F091         	call	___lldiv	;wreg free
  9195  0116B8  C060  F08E         	movff	?___lldiv,light_task@temp
  9196  0116BC  C061  F08F         	movff	?___lldiv+1,light_task@temp+1
  9197  0116C0  C062  F090         	movff	?___lldiv+2,light_task@temp+2
  9198  0116C4  C063  F091         	movff	?___lldiv+3,light_task@temp+3
  9199                           
  9200                           ;PIC18F27J53-killifish_light05.c: 240: PWM_set(3, temp);
  9201  0116C8  C08E  F075         	movff	light_task@temp,PWM_set@value
  9202  0116CC  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9203  0116D0  0E03               	movlw	3
  9204  0116D2  ECD1  F08C         	call	_PWM_set
  9205                           
  9206                           ;PIC18F27J53-killifish_light05.c: 241: for (i = 0; i < 3; i++) {
  9207  0116D6  0E00               	movlw	0
  9208  0116D8  0100               	movlb	0	; () banked
  9209  0116DA  6F92               	movwf	light_task@i& (0+255),b
  9210  0116DC                     l9146:
  9211                           
  9212                           ; BSR set to: 0
  9213  0116DC  0E02               	movlw	2
  9214  0116DE  0100               	movlb	0	; () banked
  9215  0116E0  6592               	cpfsgt	light_task@i& (0+255),b
  9216  0116E2  D001               	goto	l9150
  9217  0116E4  D00B               	goto	l786
  9218  0116E6                     l9150:
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;PIC18F27J53-killifish_light05.c: 242: PWM_set(i, temp);
  9222  0116E6  C08E  F075         	movff	light_task@temp,PWM_set@value
  9223  0116EA  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9224  0116EE  0100               	movlb	0	; () banked
  9225  0116F0  5192               	movf	light_task@i& (0+255),w,b
  9226  0116F2  ECD1  F08C         	call	_PWM_set
  9227  0116F6  0100               	movlb	0	; () banked
  9228  0116F8  2B92               	incf	light_task@i& (0+255),f,b
  9229  0116FA  D7F0               	goto	l9146
  9230  0116FC                     l786:
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;PIC18F27J53-killifish_light05.c: 243: }
  9234                           ;PIC18F27J53-killifish_light05.c: 244: }
  9235                           ;PIC18F27J53-killifish_light05.c: 245: }
  9236                           ;PIC18F27J53-killifish_light05.c: 246: if (sw_G.flag.press) {
  9237  0116FC  0101               	movlb	1	; () banked
  9238  0116FE  A18E               	btfss	(_sw_G+2)& (0+255),0,b
  9239  011700  D02A               	goto	l791
  9240                           
  9241                           ; BSR set to: 1
  9242                           ;PIC18F27J53-killifish_light05.c: 247: sw_G.flags = 0;
  9243  011702  0E00               	movlw	0
  9244  011704  0101               	movlb	1	; () banked
  9245  011706  6F8F               	movwf	(_sw_G+3)& (0+255),b
  9246  011708  0E00               	movlw	0
  9247  01170A  6F8E               	movwf	(_sw_G+2)& (0+255),b
  9248                           
  9249                           ;PIC18F27J53-killifish_light05.c: 248: light_mode = COMMAND_mode;
  9250  01170C  0E02               	movlw	2
  9251  01170E  0100               	movlb	0	; () banked
  9252  011710  6FED               	movwf	_light_mode& (0+255),b
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;PIC18F27J53-killifish_light05.c: 249: static uint8_t n = 0;
  9256                           ;PIC18F27J53-killifish_light05.c: 250: if (n >= 3) n = 0;
  9257  011712  0E02               	movlw	2
  9258  011714  0100               	movlb	0	; () banked
  9259  011716  65F3               	cpfsgt	light_task@n& (0+255),b
  9260  011718  D004               	goto	l9162
  9261                           
  9262                           ; BSR set to: 0
  9263  01171A  0E00               	movlw	0
  9264  01171C  0100               	movlb	0	; () banked
  9265  01171E  6FF3               	movwf	light_task@n& (0+255),b
  9266  011720  D002               	goto	l9164
  9267  011722                     l9162:
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;PIC18F27J53-killifish_light05.c: 251: else n++;
  9271  011722  0100               	movlb	0	; () banked
  9272  011724  2BF3               	incf	light_task@n& (0+255),f,b
  9273  011726                     l9164:
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;PIC18F27J53-killifish_light05.c: 252: uint8_t value = 250 / 3 * n;
  9277  011726  0100               	movlb	0	; () banked
  9278  011728  51F3               	movf	light_task@n& (0+255),w,b
  9279  01172A  0D53               	mullw	83
  9280  01172C  CFF3 F08C          	movff	prodl,light_task@value
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;PIC18F27J53-killifish_light05.c: 253: for (i = 0; i < 3; i++) {
  9284  011730  0E00               	movlw	0
  9285  011732  0100               	movlb	0	; () banked
  9286  011734  6F92               	movwf	light_task@i& (0+255),b
  9287  011736                     l9168:
  9288                           
  9289                           ; BSR set to: 0
  9290  011736  0E02               	movlw	2
  9291  011738  0100               	movlb	0	; () banked
  9292  01173A  6592               	cpfsgt	light_task@i& (0+255),b
  9293  01173C  D001               	goto	l9172
  9294  01173E  D00B               	goto	l791
  9295  011740                     l9172:
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;PIC18F27J53-killifish_light05.c: 254: PWM_set(i, value);
  9299  011740  C08C  F075         	movff	light_task@value,PWM_set@value
  9300  011744  0100               	movlb	0	; () banked
  9301  011746  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9302  011748  0100               	movlb	0	; () banked
  9303  01174A  5192               	movf	light_task@i& (0+255),w,b
  9304  01174C  ECD1  F08C         	call	_PWM_set
  9305  011750  0100               	movlb	0	; () banked
  9306  011752  2B92               	incf	light_task@i& (0+255),f,b
  9307  011754  D7F0               	goto	l9168
  9308  011756                     l791:
  9309                           
  9310                           ;PIC18F27J53-killifish_light05.c: 255: }
  9311                           ;PIC18F27J53-killifish_light05.c: 256: }
  9312                           ;PIC18F27J53-killifish_light05.c: 257: if (sw_B.flag.press) {
  9313  011756  0101               	movlb	1	; () banked
  9314  011758  A18A               	btfss	(_sw_B+2)& (0+255),0,b
  9315  01175A  D01E               	goto	l9190
  9316                           
  9317                           ; BSR set to: 1
  9318                           ;PIC18F27J53-killifish_light05.c: 258: sw_B.flags = 0;
  9319  01175C  0E00               	movlw	0
  9320  01175E  0101               	movlb	1	; () banked
  9321  011760  6F8B               	movwf	(_sw_B+3)& (0+255),b
  9322  011762  0E00               	movlw	0
  9323  011764  6F8A               	movwf	(_sw_B+2)& (0+255),b
  9324                           
  9325                           ;PIC18F27J53-killifish_light05.c: 259: light_mode = COMMAND_mode;
  9326  011766  0E02               	movlw	2
  9327  011768  0100               	movlb	0	; () banked
  9328  01176A  6FED               	movwf	_light_mode& (0+255),b
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;PIC18F27J53-killifish_light05.c: 260: static uint8_t n = 0;
  9332                           ;PIC18F27J53-killifish_light05.c: 261: if (n >= 3) n = 0;
  9333  01176C  0E02               	movlw	2
  9334  01176E  0100               	movlb	0	; () banked
  9335  011770  65F2               	cpfsgt	light_task@_3359& (0+255),b
  9336  011772  D004               	goto	l9184
  9337                           
  9338                           ; BSR set to: 0
  9339  011774  0E00               	movlw	0
  9340  011776  0100               	movlb	0	; () banked
  9341  011778  6FF2               	movwf	light_task@_3359& (0+255),b
  9342  01177A  D002               	goto	l9186
  9343  01177C                     l9184:
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;PIC18F27J53-killifish_light05.c: 262: else n++;
  9347  01177C  0100               	movlb	0	; () banked
  9348  01177E  2BF2               	incf	light_task@_3359& (0+255),f,b
  9349  011780                     l9186:
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;PIC18F27J53-killifish_light05.c: 263: uint8_t value = 250 / 3 * n;
  9353  011780  0100               	movlb	0	; () banked
  9354  011782  51F2               	movf	light_task@_3359& (0+255),w,b
  9355  011784  0D53               	mullw	83
  9356  011786  CFF3 F08D          	movff	prodl,light_task@value_3360
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;PIC18F27J53-killifish_light05.c: 264: PWM_set(3, value);
  9360  01178A  C08D  F075         	movff	light_task@value_3360,PWM_set@value
  9361  01178E  0100               	movlb	0	; () banked
  9362  011790  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9363  011792  0E03               	movlw	3
  9364  011794  ECD1  F08C         	call	_PWM_set
  9365  011798                     l9190:
  9366                           
  9367                           ;PIC18F27J53-killifish_light05.c: 265: }
  9368                           ;PIC18F27J53-killifish_light05.c: 266: if (sw_R.flag.press) {
  9369  011798  0101               	movlb	1	; () banked
  9370  01179A  A192               	btfss	(_sw_R+2)& (0+255),0,b
  9371  01179C  0012               	return	
  9372                           
  9373                           ; BSR set to: 1
  9374                           ;PIC18F27J53-killifish_light05.c: 267: sw_R.flags = 0;
  9375  01179E  0E00               	movlw	0
  9376  0117A0  0101               	movlb	1	; () banked
  9377  0117A2  6F93               	movwf	(_sw_R+3)& (0+255),b
  9378  0117A4  0E00               	movlw	0
  9379  0117A6  6F92               	movwf	(_sw_R+2)& (0+255),b
  9380                           
  9381                           ;PIC18F27J53-killifish_light05.c: 268: light_mode = TIME_SYNC_mode;
  9382  0117A8  0E00               	movlw	0
  9383  0117AA  0100               	movlb	0	; () banked
  9384  0117AC  6FED               	movwf	_light_mode& (0+255),b
  9385  0117AE  0012               	return	
  9386  0117B0                     __end_of_light_task:
  9387                           	opt stack 0
  9388                           tblptru	equ	0xFF8
  9389                           tblptrh	equ	0xFF7
  9390                           tblptrl	equ	0xFF6
  9391                           tablat	equ	0xFF5
  9392                           prodh	equ	0xFF4
  9393                           prodl	equ	0xFF3
  9394                           intcon	equ	0xFF2
  9395                           intcon2	equ	0xFF1
  9396                           indf0	equ	0xFEF
  9397                           postinc0	equ	0xFEE
  9398                           fsr0h	equ	0xFEA
  9399                           fsr0l	equ	0xFE9
  9400                           wreg	equ	0xFE8
  9401                           postinc1	equ	0xFE6
  9402                           postdec1	equ	0xFE5
  9403                           fsr1h	equ	0xFE2
  9404                           fsr1l	equ	0xFE1
  9405                           indf2	equ	0xFDF
  9406                           postinc2	equ	0xFDE
  9407                           postdec2	equ	0xFDD
  9408                           fsr2h	equ	0xFDA
  9409                           fsr2l	equ	0xFD9
  9410                           status	equ	0xFD8
  9411                           
  9412 ;; *************** function ___llmod *****************
  9413 ;; Defined at:
  9414 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  dividend        4    0[BANK0 ] unsigned long 
  9417 ;;  divisor         4    4[BANK0 ] unsigned long 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  counter         1   31[COMRAM] unsigned char 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  4    0[BANK0 ] unsigned long 
  9422 ;; Registers used:
  9423 ;;		wreg, status,2, status,0
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9429 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9432 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9433 ;;Total ram usage:        9 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    4
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		_light_task
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           	psect	text35
  9444  01278C                     __ptext35:
  9445                           	opt stack 0
  9446  01278C                     ___llmod:
  9447                           	opt stack 25
  9448                           
  9449                           ;incstack = 0
  9450  01278C  0100               	movlb	0	; () banked
  9451  01278E  5164               	movf	___llmod@divisor& (0+255),w,b
  9452  012790  0100               	movlb	0	; () banked
  9453  012792  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9454  012794  0100               	movlb	0	; () banked
  9455  012796  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9456  012798  0100               	movlb	0	; () banked
  9457  01279A  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9458  01279C  B4D8               	btfsc	status,2,c
  9459  01279E  D037               	goto	l1907
  9460                           
  9461                           ; BSR set to: 0
  9462  0127A0  0E01               	movlw	1
  9463  0127A2  6E20               	movwf	___llmod@counter,c
  9464  0127A4  D007               	goto	l8894
  9465  0127A6                     l8892:
  9466                           
  9467                           ; BSR set to: 0
  9468  0127A6  0100               	movlb	0	; () banked
  9469  0127A8  90D8               	bcf	status,0,c
  9470  0127AA  3764               	rlcf	___llmod@divisor& (0+255),f,b
  9471  0127AC  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9472  0127AE  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9473  0127B0  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9474  0127B2  2A20               	incf	___llmod@counter,f,c
  9475  0127B4                     l8894:
  9476                           
  9477                           ; BSR set to: 0
  9478  0127B4  0100               	movlb	0	; () banked
  9479  0127B6  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9480  0127B8  D7F6               	goto	l8892
  9481  0127BA                     l8896:
  9482                           
  9483                           ; BSR set to: 0
  9484  0127BA  0100               	movlb	0	; () banked
  9485  0127BC  5164               	movf	___llmod@divisor& (0+255),w,b
  9486  0127BE  0100               	movlb	0	; () banked
  9487  0127C0  5D60               	subwf	___llmod@dividend& (0+255),w,b
  9488  0127C2  0100               	movlb	0	; () banked
  9489  0127C4  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  9490  0127C6  0100               	movlb	0	; () banked
  9491  0127C8  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9492  0127CA  0100               	movlb	0	; () banked
  9493  0127CC  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  9494  0127CE  0100               	movlb	0	; () banked
  9495  0127D0  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9496  0127D2  0100               	movlb	0	; () banked
  9497  0127D4  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  9498  0127D6  0100               	movlb	0	; () banked
  9499  0127D8  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9500  0127DA  A0D8               	btfss	status,0,c
  9501  0127DC  D010               	goto	l8900
  9502                           
  9503                           ; BSR set to: 0
  9504  0127DE  0100               	movlb	0	; () banked
  9505  0127E0  5164               	movf	___llmod@divisor& (0+255),w,b
  9506  0127E2  0100               	movlb	0	; () banked
  9507  0127E4  5F60               	subwf	___llmod@dividend& (0+255),f,b
  9508  0127E6  0100               	movlb	0	; () banked
  9509  0127E8  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  9510  0127EA  0100               	movlb	0	; () banked
  9511  0127EC  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9512  0127EE  0100               	movlb	0	; () banked
  9513  0127F0  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  9514  0127F2  0100               	movlb	0	; () banked
  9515  0127F4  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9516  0127F6  0100               	movlb	0	; () banked
  9517  0127F8  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  9518  0127FA  0100               	movlb	0	; () banked
  9519  0127FC  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9520  0127FE                     l8900:
  9521                           
  9522                           ; BSR set to: 0
  9523  0127FE  0100               	movlb	0	; () banked
  9524  012800  90D8               	bcf	status,0,c
  9525  012802  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9526  012804  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9527  012806  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9528  012808  3364               	rrcf	___llmod@divisor& (0+255),f,b
  9529                           
  9530                           ; BSR set to: 0
  9531  01280A  2E20               	decfsz	___llmod@counter,f,c
  9532  01280C  D7D6               	goto	l8896
  9533  01280E                     l1907:
  9534                           
  9535                           ; BSR set to: 0
  9536  01280E  C060  F060         	movff	___llmod@dividend,?___llmod
  9537  012812  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  9538  012816  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  9539  01281A  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  9540                           
  9541                           ; BSR set to: 0
  9542  01281E  0012               	return		;funcret
  9543  012820                     __end_of___llmod:
  9544                           	opt stack 0
  9545                           tblptru	equ	0xFF8
  9546                           tblptrh	equ	0xFF7
  9547                           tblptrl	equ	0xFF6
  9548                           tablat	equ	0xFF5
  9549                           prodh	equ	0xFF4
  9550                           prodl	equ	0xFF3
  9551                           intcon	equ	0xFF2
  9552                           intcon2	equ	0xFF1
  9553                           indf0	equ	0xFEF
  9554                           postinc0	equ	0xFEE
  9555                           fsr0h	equ	0xFEA
  9556                           fsr0l	equ	0xFE9
  9557                           wreg	equ	0xFE8
  9558                           postinc1	equ	0xFE6
  9559                           postdec1	equ	0xFE5
  9560                           fsr1h	equ	0xFE2
  9561                           fsr1l	equ	0xFE1
  9562                           indf2	equ	0xFDF
  9563                           postinc2	equ	0xFDE
  9564                           postdec2	equ	0xFDD
  9565                           fsr2h	equ	0xFDA
  9566                           fsr2l	equ	0xFD9
  9567                           status	equ	0xFD8
  9568                           
  9569 ;; *************** function ___lldiv *****************
  9570 ;; Defined at:
  9571 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;  dividend        4    0[BANK0 ] unsigned long 
  9574 ;;  divisor         4    4[BANK0 ] unsigned long 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;  quotient        4    8[BANK0 ] unsigned long 
  9577 ;;  counter         1   12[BANK0 ] unsigned char 
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  4    0[BANK0 ] unsigned long 
  9580 ;; Registers used:
  9581 ;;		wreg, status,2, status,0
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9587 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9588 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9590 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9591 ;;Total ram usage:       13 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; Hardware stack levels required when called:    4
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_get_quot_rem
  9598 ;;		_light_task
  9599 ;;		_CTMU_read
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603                           	psect	text36
  9604  012206                     __ptext36:
  9605                           	opt stack 0
  9606  012206                     ___lldiv:
  9607                           	opt stack 19
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;incstack = 0
  9611  012206  0E00               	movlw	0
  9612  012208  0100               	movlb	0	; () banked
  9613  01220A  6F68               	movwf	___lldiv@quotient& (0+255),b
  9614  01220C  0E00               	movlw	0
  9615  01220E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  9616  012210  0E00               	movlw	0
  9617  012212  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  9618  012214  0E00               	movlw	0
  9619  012216  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  9620                           
  9621                           ; BSR set to: 0
  9622  012218  0100               	movlb	0	; () banked
  9623  01221A  5164               	movf	___lldiv@divisor& (0+255),w,b
  9624  01221C  0100               	movlb	0	; () banked
  9625  01221E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9626  012220  0100               	movlb	0	; () banked
  9627  012222  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9628  012224  0100               	movlb	0	; () banked
  9629  012226  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9630  012228  B4D8               	btfsc	status,2,c
  9631  01222A  D042               	goto	l1897
  9632                           
  9633                           ; BSR set to: 0
  9634  01222C  0E01               	movlw	1
  9635  01222E  0100               	movlb	0	; () banked
  9636  012230  6F6C               	movwf	___lldiv@counter& (0+255),b
  9637  012232  D008               	goto	l8124
  9638  012234                     l8122:
  9639                           
  9640                           ; BSR set to: 0
  9641  012234  0100               	movlb	0	; () banked
  9642  012236  90D8               	bcf	status,0,c
  9643  012238  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  9644  01223A  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9645  01223C  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9646  01223E  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9647  012240  0100               	movlb	0	; () banked
  9648  012242  2B6C               	incf	___lldiv@counter& (0+255),f,b
  9649  012244                     l8124:
  9650                           
  9651                           ; BSR set to: 0
  9652  012244  0100               	movlb	0	; () banked
  9653  012246  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  9654  012248  D7F5               	goto	l8122
  9655  01224A                     l8126:
  9656                           
  9657                           ; BSR set to: 0
  9658  01224A  0100               	movlb	0	; () banked
  9659  01224C  90D8               	bcf	status,0,c
  9660  01224E  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  9661  012250  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9662  012252  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9663  012254  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9664                           
  9665                           ; BSR set to: 0
  9666  012256  0100               	movlb	0	; () banked
  9667  012258  5164               	movf	___lldiv@divisor& (0+255),w,b
  9668  01225A  0100               	movlb	0	; () banked
  9669  01225C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  9670  01225E  0100               	movlb	0	; () banked
  9671  012260  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9672  012262  0100               	movlb	0	; () banked
  9673  012264  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9674  012266  0100               	movlb	0	; () banked
  9675  012268  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9676  01226A  0100               	movlb	0	; () banked
  9677  01226C  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9678  01226E  0100               	movlb	0	; () banked
  9679  012270  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9680  012272  0100               	movlb	0	; () banked
  9681  012274  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9682  012276  A0D8               	btfss	status,0,c
  9683  012278  D012               	goto	l8134
  9684                           
  9685                           ; BSR set to: 0
  9686  01227A  0100               	movlb	0	; () banked
  9687  01227C  5164               	movf	___lldiv@divisor& (0+255),w,b
  9688  01227E  0100               	movlb	0	; () banked
  9689  012280  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  9690  012282  0100               	movlb	0	; () banked
  9691  012284  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9692  012286  0100               	movlb	0	; () banked
  9693  012288  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9694  01228A  0100               	movlb	0	; () banked
  9695  01228C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9696  01228E  0100               	movlb	0	; () banked
  9697  012290  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9698  012292  0100               	movlb	0	; () banked
  9699  012294  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9700  012296  0100               	movlb	0	; () banked
  9701  012298  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9702                           
  9703                           ; BSR set to: 0
  9704  01229A  0100               	movlb	0	; () banked
  9705  01229C  8168               	bsf	___lldiv@quotient& (0+255),0,b
  9706  01229E                     l8134:
  9707                           
  9708                           ; BSR set to: 0
  9709  01229E  0100               	movlb	0	; () banked
  9710  0122A0  90D8               	bcf	status,0,c
  9711  0122A2  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9712  0122A4  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9713  0122A6  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9714  0122A8  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  9715                           
  9716                           ; BSR set to: 0
  9717  0122AA  0100               	movlb	0	; () banked
  9718  0122AC  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  9719  0122AE  D7CD               	goto	l8126
  9720  0122B0                     l1897:
  9721                           
  9722                           ; BSR set to: 0
  9723  0122B0  C068  F060         	movff	___lldiv@quotient,?___lldiv
  9724  0122B4  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  9725  0122B8  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  9726  0122BC  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  9727                           
  9728                           ; BSR set to: 0
  9729  0122C0  0012               	return		;funcret
  9730  0122C2                     __end_of___lldiv:
  9731                           	opt stack 0
  9732                           tblptru	equ	0xFF8
  9733                           tblptrh	equ	0xFF7
  9734                           tblptrl	equ	0xFF6
  9735                           tablat	equ	0xFF5
  9736                           prodh	equ	0xFF4
  9737                           prodl	equ	0xFF3
  9738                           intcon	equ	0xFF2
  9739                           intcon2	equ	0xFF1
  9740                           indf0	equ	0xFEF
  9741                           postinc0	equ	0xFEE
  9742                           fsr0h	equ	0xFEA
  9743                           fsr0l	equ	0xFE9
  9744                           wreg	equ	0xFE8
  9745                           postinc1	equ	0xFE6
  9746                           postdec1	equ	0xFE5
  9747                           fsr1h	equ	0xFE2
  9748                           fsr1l	equ	0xFE1
  9749                           indf2	equ	0xFDF
  9750                           postinc2	equ	0xFDE
  9751                           postdec2	equ	0xFDD
  9752                           fsr2h	equ	0xFDA
  9753                           fsr2l	equ	0xFD9
  9754                           status	equ	0xFD8
  9755                           
  9756 ;; *************** function _PWM_set *****************
  9757 ;; Defined at:
  9758 ;;		line 121 in file "PIC18F27J53-killifish_light05.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  color           1    wreg     unsigned char 
  9761 ;;  value           2   21[BANK0 ] unsigned int 
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;  color           1   25[BANK0 ] unsigned char 
  9764 ;; Return value:  Size  Location     Type
  9765 ;;		None               void
  9766 ;; Registers used:
  9767 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9768 ;; Tracked objects:
  9769 ;;		On entry : 0/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9773 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9774 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9775 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9776 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9777 ;;Total ram usage:        5 bytes
  9778 ;; Hardware stack levels used:    1
  9779 ;; Hardware stack levels required when called:    5
  9780 ;; This function calls:
  9781 ;;		___lwdiv
  9782 ;;		___wmul
  9783 ;; This function is called by:
  9784 ;;		_terminal_operation
  9785 ;;		_light_task
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	text37
  9790  0119A2                     __ptext37:
  9791                           	opt stack 0
  9792  0119A2                     _PWM_set:
  9793                           	opt stack 23
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;incstack = 0
  9797                           ;PWM_set@color stored from wreg
  9798  0119A2  0100               	movlb	0	; () banked
  9799  0119A4  6F79               	movwf	PWM_set@color& (0+255),b
  9800                           
  9801                           ;PIC18F27J53-killifish_light05.c: 122: value = value * value / 250;
  9802  0119A6  C075  F060         	movff	PWM_set@value,___wmul@multiplier
  9803  0119AA  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  9804  0119AE  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
  9805  0119B2  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  9806  0119B6  EC68  F097         	call	___wmul	;wreg free
  9807  0119BA  C060  F066         	movff	?___wmul,___lwdiv@dividend
  9808  0119BE  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  9809  0119C2  0E00               	movlw	0
  9810  0119C4  0100               	movlb	0	; () banked
  9811  0119C6  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9812  0119C8  0EFA               	movlw	250
  9813  0119CA  6F68               	movwf	___lwdiv@divisor& (0+255),b
  9814  0119CC  EC1A  F095         	call	___lwdiv	;wreg free
  9815  0119D0  C066  F075         	movff	?___lwdiv,PWM_set@value
  9816  0119D4  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
  9817                           
  9818                           ;PIC18F27J53-killifish_light05.c: 123: value = value * value / 250;
  9819  0119D8  C075  F060         	movff	PWM_set@value,___wmul@multiplier
  9820  0119DC  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  9821  0119E0  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
  9822  0119E4  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  9823  0119E8  EC68  F097         	call	___wmul	;wreg free
  9824  0119EC  C060  F066         	movff	?___wmul,___lwdiv@dividend
  9825  0119F0  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  9826  0119F4  0E00               	movlw	0
  9827  0119F6  0100               	movlb	0	; () banked
  9828  0119F8  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9829  0119FA  0EFA               	movlw	250
  9830  0119FC  6F68               	movwf	___lwdiv@divisor& (0+255),b
  9831  0119FE  EC1A  F095         	call	___lwdiv	;wreg free
  9832  011A02  C066  F075         	movff	?___lwdiv,PWM_set@value
  9833  011A06  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
  9834                           
  9835                           ;PIC18F27J53-killifish_light05.c: 124: value = value * 3 / 4;
  9836  011A0A  C075  F060         	movff	PWM_set@value,___wmul@multiplier
  9837  011A0E  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  9838  011A12  0E00               	movlw	0
  9839  011A14  0100               	movlb	0	; () banked
  9840  011A16  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9841  011A18  0E03               	movlw	3
  9842  011A1A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9843  011A1C  EC68  F097         	call	___wmul	;wreg free
  9844  011A20  0100               	movlb	0	; () banked
  9845  011A22  90D8               	bcf	status,0,c
  9846  011A24  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  9847  011A26  3360               	rrcf	?___wmul& (0+255),f,b
  9848  011A28  0100               	movlb	0	; () banked
  9849  011A2A  90D8               	bcf	status,0,c
  9850  011A2C  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  9851  011A2E  3360               	rrcf	?___wmul& (0+255),f,b
  9852  011A30  C060  F075         	movff	?___wmul,PWM_set@value
  9853  011A34  C061  F076         	movff	?___wmul+1,PWM_set@value+1
  9854                           
  9855                           ;PIC18F27J53-killifish_light05.c: 125: switch (color) {
  9856  011A38  D056               	goto	l8628
  9857  011A3A                     l8610:
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;PIC18F27J53-killifish_light05.c: 127: if (value < 250 / 4) {
  9861  011A3A  0100               	movlb	0	; () banked
  9862  011A3C  5176               	movf	(PWM_set@value+1)& (0+255),w,b
  9863  011A3E  E105               	bnz	l8614
  9864  011A40  0E3E               	movlw	62
  9865  011A42  0100               	movlb	0	; () banked
  9866  011A44  5D75               	subwf	PWM_set@value& (0+255),w,b
  9867  011A46  A0D8               	btfss	status,0,c
  9868  011A48  D071               	goto	l8648
  9869  011A4A                     l8614:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;PIC18F27J53-killifish_light05.c: 130: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
  9873  011A4A  C075  F077         	movff	PWM_set@value,??_PWM_set
  9874  011A4E  C076  F078         	movff	PWM_set@value+1,??_PWM_set+1
  9875  011A52  90D8               	bcf	status,0,c
  9876  011A54  0100               	movlb	0	; () banked
  9877  011A56  3777               	rlcf	??_PWM_set& (0+255),f,b
  9878  011A58  3778               	rlcf	(??_PWM_set+1)& (0+255),f,b
  9879  011A5A  0E84               	movlw	132
  9880  011A5C  0100               	movlb	0	; () banked
  9881  011A5E  2577               	addwf	??_PWM_set& (0+255),w,b
  9882  011A60  0100               	movlb	0	; () banked
  9883  011A62  6F66               	movwf	___lwdiv@dividend& (0+255),b
  9884  011A64  0EFF               	movlw	255
  9885  011A66  0100               	movlb	0	; () banked
  9886  011A68  2178               	addwfc	(??_PWM_set+1)& (0+255),w,b
  9887  011A6A  0100               	movlb	0	; () banked
  9888  011A6C  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
  9889  011A6E  0E00               	movlw	0
  9890  011A70  0100               	movlb	0	; () banked
  9891  011A72  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9892  011A74  0E03               	movlw	3
  9893  011A76  6F68               	movwf	___lwdiv@divisor& (0+255),b
  9894  011A78  EC1A  F095         	call	___lwdiv	;wreg free
  9895  011A7C  0E3E               	movlw	62
  9896  011A7E  0100               	movlb	0	; () banked
  9897  011A80  2566               	addwf	?___lwdiv& (0+255),w,b
  9898  011A82  0100               	movlb	0	; () banked
  9899  011A84  6F75               	movwf	PWM_set@value& (0+255),b
  9900  011A86  0E00               	movlw	0
  9901  011A88  0100               	movlb	0	; () banked
  9902  011A8A  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
  9903  011A8C  D029               	goto	L1
  9904  011A8E                     l8620:
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;PIC18F27J53-killifish_light05.c: 141: if (value < 250 / 4) {
  9908  011A8E  0100               	movlb	0	; () banked
  9909  011A90  5176               	movf	(PWM_set@value+1)& (0+255),w,b
  9910  011A92  E105               	bnz	l8624
  9911  011A94  0E3E               	movlw	62
  9912  011A96  0100               	movlb	0	; () banked
  9913  011A98  5D75               	subwf	PWM_set@value& (0+255),w,b
  9914  011A9A  A0D8               	btfss	status,0,c
  9915  011A9C  D047               	goto	l8648
  9916  011A9E                     l8624:
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;PIC18F27J53-killifish_light05.c: 144: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
  9920  011A9E  0EC2               	movlw	194
  9921  011AA0  0100               	movlb	0	; () banked
  9922  011AA2  2575               	addwf	PWM_set@value& (0+255),w,b
  9923  011AA4  0100               	movlb	0	; () banked
  9924  011AA6  6F60               	movwf	___wmul@multiplier& (0+255),b
  9925  011AA8  0EFF               	movlw	255
  9926  011AAA  0100               	movlb	0	; () banked
  9927  011AAC  2176               	addwfc	(PWM_set@value+1)& (0+255),w,b
  9928  011AAE  0100               	movlb	0	; () banked
  9929  011AB0  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
  9930  011AB2  0E00               	movlw	0
  9931  011AB4  0100               	movlb	0	; () banked
  9932  011AB6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9933  011AB8  0E03               	movlw	3
  9934  011ABA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9935  011ABC  EC68  F097         	call	___wmul	;wreg free
  9936  011AC0  0100               	movlb	0	; () banked
  9937  011AC2  90D8               	bcf	status,0,c
  9938  011AC4  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  9939  011AC6  3360               	rrcf	?___wmul& (0+255),f,b
  9940  011AC8  0100               	movlb	0	; () banked
  9941  011ACA  90D8               	bcf	status,0,c
  9942  011ACC  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  9943  011ACE  3360               	rrcf	?___wmul& (0+255),f,b
  9944  011AD0  0E3E               	movlw	62
  9945  011AD2  0100               	movlb	0	; () banked
  9946  011AD4  2560               	addwf	?___wmul& (0+255),w,b
  9947  011AD6  0100               	movlb	0	; () banked
  9948  011AD8  6F75               	movwf	PWM_set@value& (0+255),b
  9949  011ADA  0E00               	movlw	0
  9950  011ADC  0100               	movlb	0	; () banked
  9951  011ADE  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  9952  011AE0                     L1:
  9953  011AE0  0100               	movlb	0	; () banked
  9954  011AE2  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;PIC18F27J53-killifish_light05.c: 149: }
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;PIC18F27J53-killifish_light05.c: 148: break;
  9961                           
  9962                           ;PIC18F27J53-killifish_light05.c: 147: case 3:
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;PIC18F27J53-killifish_light05.c: 145: }
  9966                           ;PIC18F27J53-killifish_light05.c: 146: break;
  9967  011AE4  D023               	goto	l8648
  9968  011AE6                     l8628:
  9969                           
  9970                           ; BSR set to: 0
  9971  011AE6  0100               	movlb	0	; () banked
  9972  011AE8  5179               	movf	PWM_set@color& (0+255),w,b
  9973                           
  9974                           ; Switch size 1, requested type "space"
  9975                           ; Number of cases is 4, Range of values is 0 to 3
  9976                           ; switch strategies available:
  9977                           ; Name         Instructions Cycles
  9978                           ; simple_byte           13     7 (average)
  9979                           ;	Chosen strategy is simple_byte
  9980  011AEA  0A00               	xorlw	0	; case 0
  9981  011AEC  B4D8               	btfsc	status,2,c
  9982  011AEE  D7A5               	goto	l8610
  9983  011AF0  0A01               	xorlw	1	; case 1
  9984  011AF2  B4D8               	btfsc	status,2,c
  9985  011AF4  D01B               	goto	l8648
  9986  011AF6  0A03               	xorlw	3	; case 2
  9987  011AF8  B4D8               	btfsc	status,2,c
  9988  011AFA  D7C9               	goto	l8620
  9989  011AFC  0A01               	xorlw	1	; case 3
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;PIC18F27J53-killifish_light05.c: 150: switch (color) {
  9993  011AFE  D016               	goto	l8648
  9994  011B00                     l8630:
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;PIC18F27J53-killifish_light05.c: 152: CCP1CONbits.DC1B = 0;
  9998  011B00  0ECF               	movlw	-49
  9999  011B02  16BA               	andwf	4026,f,c	;volatile
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;PIC18F27J53-killifish_light05.c: 153: CCPR1L = value;
 10003  011B04  C075  FFBB         	movff	PWM_set@value,4027	;volatile
 10004                           
 10005                           ;PIC18F27J53-killifish_light05.c: 154: break;
 10006  011B08  0012               	return	
 10007  011B0A                     l8634:
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;PIC18F27J53-killifish_light05.c: 156: CCP2CONbits.DC2B = 0;
 10011  011B0A  0ECF               	movlw	-49
 10012  011B0C  16B4               	andwf	4020,f,c	;volatile
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;PIC18F27J53-killifish_light05.c: 157: CCPR2L = value;
 10016  011B0E  C075  FFB5         	movff	PWM_set@value,4021	;volatile
 10017                           
 10018                           ;PIC18F27J53-killifish_light05.c: 158: break;
 10019  011B12  0012               	return	
 10020  011B14                     l8638:
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;PIC18F27J53-killifish_light05.c: 160: CCP3CONbits.DC3B = 0;
 10024  011B14  0ECF               	movlw	-49
 10025  011B16  010F               	movlb	15	; () banked
 10026  011B18  1715               	andwf	21,f,b	;volatile
 10027                           
 10028                           ; BSR set to: 15
 10029                           ;PIC18F27J53-killifish_light05.c: 161: CCPR3L = value;
 10030  011B1A  C075  FF16         	movff	PWM_set@value,3862	;volatile
 10031                           
 10032                           ;PIC18F27J53-killifish_light05.c: 162: break;
 10033  011B1E  0012               	return	
 10034  011B20                     l8642:
 10035                           
 10036                           ;PIC18F27J53-killifish_light05.c: 164: CCP4CONbits.DC4B = 0;
 10037  011B20  0ECF               	movlw	-49
 10038  011B22  010F               	movlb	15	; () banked
 10039  011B24  1712               	andwf	18,f,b	;volatile
 10040                           
 10041                           ; BSR set to: 15
 10042                           ;PIC18F27J53-killifish_light05.c: 165: CCPR4L = value;
 10043  011B26  C075  FF13         	movff	PWM_set@value,3859	;volatile
 10044                           
 10045                           ; BSR set to: 15
 10046                           ;PIC18F27J53-killifish_light05.c: 167: }
 10047                           
 10048                           ;PIC18F27J53-killifish_light05.c: 166: break;
 10049  011B2A  0012               	return	
 10050  011B2C                     l8648:
 10051  011B2C  0100               	movlb	0	; () banked
 10052  011B2E  5179               	movf	PWM_set@color& (0+255),w,b
 10053                           
 10054                           ; Switch size 1, requested type "space"
 10055                           ; Number of cases is 4, Range of values is 0 to 3
 10056                           ; switch strategies available:
 10057                           ; Name         Instructions Cycles
 10058                           ; simple_byte           13     7 (average)
 10059                           ;	Chosen strategy is simple_byte
 10060  011B30  0A00               	xorlw	0	; case 0
 10061  011B32  B4D8               	btfsc	status,2,c
 10062  011B34  D7E5               	goto	l8630
 10063  011B36  0A01               	xorlw	1	; case 1
 10064  011B38  B4D8               	btfsc	status,2,c
 10065  011B3A  D7E7               	goto	l8634
 10066  011B3C  0A03               	xorlw	3	; case 2
 10067  011B3E  B4D8               	btfsc	status,2,c
 10068  011B40  D7E9               	goto	l8638
 10069  011B42  0A01               	xorlw	1	; case 3
 10070  011B44  A4D8               	btfss	status,2,c
 10071  011B46  0012               	return	
 10072  011B48  D7EB               	goto	l8642
 10073  011B4A                     __end_of_PWM_set:
 10074                           	opt stack 0
 10075                           tblptru	equ	0xFF8
 10076                           tblptrh	equ	0xFF7
 10077                           tblptrl	equ	0xFF6
 10078                           tablat	equ	0xFF5
 10079                           prodh	equ	0xFF4
 10080                           prodl	equ	0xFF3
 10081                           intcon	equ	0xFF2
 10082                           intcon2	equ	0xFF1
 10083                           indf0	equ	0xFEF
 10084                           postinc0	equ	0xFEE
 10085                           fsr0h	equ	0xFEA
 10086                           fsr0l	equ	0xFE9
 10087                           wreg	equ	0xFE8
 10088                           postinc1	equ	0xFE6
 10089                           postdec1	equ	0xFE5
 10090                           fsr1h	equ	0xFE2
 10091                           fsr1l	equ	0xFE1
 10092                           indf2	equ	0xFDF
 10093                           postinc2	equ	0xFDE
 10094                           postdec2	equ	0xFDD
 10095                           fsr2h	equ	0xFDA
 10096                           fsr2l	equ	0xFD9
 10097                           status	equ	0xFD8
 10098                           
 10099 ;; *************** function ___wmul *****************
 10100 ;; Defined at:
 10101 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10102 ;; Parameters:    Size  Location     Type
 10103 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10104 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10105 ;; Auto vars:     Size  Location     Type
 10106 ;;  product         2    4[BANK0 ] unsigned int 
 10107 ;; Return value:  Size  Location     Type
 10108 ;;                  2    0[BANK0 ] unsigned int 
 10109 ;; Registers used:
 10110 ;;		wreg, status,2, status,0, prodl, prodh
 10111 ;; Tracked objects:
 10112 ;;		On entry : 0/0
 10113 ;;		On exit  : 0/0
 10114 ;;		Unchanged: 0/0
 10115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10116 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10117 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10119 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10120 ;;Total ram usage:        6 bytes
 10121 ;; Hardware stack levels used:    1
 10122 ;; Hardware stack levels required when called:    4
 10123 ;; This function calls:
 10124 ;;		Nothing
 10125 ;; This function is called by:
 10126 ;;		_PWM_set
 10127 ;;		_terminal_operation
 10128 ;;		_sprintf
 10129 ;;		_atoi
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text38
 10134  012ED0                     __ptext38:
 10135                           	opt stack 0
 10136  012ED0                     ___wmul:
 10137                           	opt stack 20
 10138                           
 10139                           ;incstack = 0
 10140  012ED0  0100               	movlb	0	; () banked
 10141  012ED2  5160               	movf	___wmul@multiplier& (0+255),w,b
 10142  012ED4  0100               	movlb	0	; () banked
 10143  012ED6  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10144  012ED8  CFF3 F064          	movff	prodl,___wmul@product
 10145  012EDC  CFF4 F065          	movff	prodh,___wmul@product+1
 10146  012EE0  0100               	movlb	0	; () banked
 10147  012EE2  5160               	movf	___wmul@multiplier& (0+255),w,b
 10148  012EE4  0100               	movlb	0	; () banked
 10149  012EE6  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10150  012EE8  50F3               	movf	prodl,w,c
 10151  012EEA  0100               	movlb	0	; () banked
 10152  012EEC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10153  012EEE  0100               	movlb	0	; () banked
 10154  012EF0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10155  012EF2  0100               	movlb	0	; () banked
 10156  012EF4  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10157  012EF6  50F3               	movf	prodl,w,c
 10158  012EF8  0100               	movlb	0	; () banked
 10159  012EFA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10160                           
 10161                           ; BSR set to: 0
 10162  012EFC  C064  F060         	movff	___wmul@product,?___wmul
 10163  012F00  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10164  012F04  0012               	return	
 10165  012F06                     __end_of___wmul:
 10166                           	opt stack 0
 10167                           tblptru	equ	0xFF8
 10168                           tblptrh	equ	0xFF7
 10169                           tblptrl	equ	0xFF6
 10170                           tablat	equ	0xFF5
 10171                           prodh	equ	0xFF4
 10172                           prodl	equ	0xFF3
 10173                           intcon	equ	0xFF2
 10174                           intcon2	equ	0xFF1
 10175                           indf0	equ	0xFEF
 10176                           postinc0	equ	0xFEE
 10177                           fsr0h	equ	0xFEA
 10178                           fsr0l	equ	0xFE9
 10179                           wreg	equ	0xFE8
 10180                           postinc1	equ	0xFE6
 10181                           postdec1	equ	0xFE5
 10182                           fsr1h	equ	0xFE2
 10183                           fsr1l	equ	0xFE1
 10184                           indf2	equ	0xFDF
 10185                           postinc2	equ	0xFDE
 10186                           postdec2	equ	0xFDD
 10187                           fsr2h	equ	0xFDA
 10188                           fsr2l	equ	0xFD9
 10189                           status	equ	0xFD8
 10190                           
 10191 ;; *************** function ___lwdiv *****************
 10192 ;; Defined at:
 10193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;  dividend        2    6[BANK0 ] unsigned int 
 10196 ;;  divisor         2    8[BANK0 ] unsigned int 
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;  quotient        2   11[BANK0 ] unsigned int 
 10199 ;;  counter         1   10[BANK0 ] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  2    6[BANK0 ] unsigned int 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2, status,0
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10209 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10210 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10212 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10213 ;;Total ram usage:        7 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:    4
 10216 ;; This function calls:
 10217 ;;		Nothing
 10218 ;; This function is called by:
 10219 ;;		_ringbuf_put_num
 10220 ;;		_PWM_set
 10221 ;;		_sprintf
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           	psect	text39
 10226  012A34                     __ptext39:
 10227                           	opt stack 0
 10228  012A34                     ___lwdiv:
 10229                           	opt stack 20
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;incstack = 0
 10233  012A34  0E00               	movlw	0
 10234  012A36  0100               	movlb	0	; () banked
 10235  012A38  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10236  012A3A  0E00               	movlw	0
 10237  012A3C  6F6B               	movwf	___lwdiv@quotient& (0+255),b
 10238                           
 10239                           ; BSR set to: 0
 10240  012A3E  0100               	movlb	0	; () banked
 10241  012A40  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10242  012A42  0100               	movlb	0	; () banked
 10243  012A44  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10244  012A46  B4D8               	btfsc	status,2,c
 10245  012A48  D02C               	goto	l1950
 10246                           
 10247                           ; BSR set to: 0
 10248  012A4A  0E01               	movlw	1
 10249  012A4C  0100               	movlb	0	; () banked
 10250  012A4E  6F6A               	movwf	___lwdiv@counter& (0+255),b
 10251  012A50  D006               	goto	l8222
 10252  012A52                     l8220:
 10253                           
 10254                           ; BSR set to: 0
 10255  012A52  0100               	movlb	0	; () banked
 10256  012A54  90D8               	bcf	status,0,c
 10257  012A56  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
 10258  012A58  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10259  012A5A  0100               	movlb	0	; () banked
 10260  012A5C  2B6A               	incf	___lwdiv@counter& (0+255),f,b
 10261  012A5E                     l8222:
 10262                           
 10263                           ; BSR set to: 0
 10264  012A5E  0100               	movlb	0	; () banked
 10265  012A60  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10266  012A62  D7F7               	goto	l8220
 10267  012A64                     l8224:
 10268                           
 10269                           ; BSR set to: 0
 10270  012A64  0100               	movlb	0	; () banked
 10271  012A66  90D8               	bcf	status,0,c
 10272  012A68  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
 10273  012A6A  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10274                           
 10275                           ; BSR set to: 0
 10276  012A6C  0100               	movlb	0	; () banked
 10277  012A6E  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10278  012A70  0100               	movlb	0	; () banked
 10279  012A72  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
 10280  012A74  0100               	movlb	0	; () banked
 10281  012A76  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10282  012A78  0100               	movlb	0	; () banked
 10283  012A7A  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10284  012A7C  A0D8               	btfss	status,0,c
 10285  012A7E  D00A               	goto	l8232
 10286                           
 10287                           ; BSR set to: 0
 10288  012A80  0100               	movlb	0	; () banked
 10289  012A82  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10290  012A84  0100               	movlb	0	; () banked
 10291  012A86  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
 10292  012A88  0100               	movlb	0	; () banked
 10293  012A8A  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10294  012A8C  0100               	movlb	0	; () banked
 10295  012A8E  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10296                           
 10297                           ; BSR set to: 0
 10298  012A90  0100               	movlb	0	; () banked
 10299  012A92  816B               	bsf	___lwdiv@quotient& (0+255),0,b
 10300  012A94                     l8232:
 10301                           
 10302                           ; BSR set to: 0
 10303  012A94  0100               	movlb	0	; () banked
 10304  012A96  90D8               	bcf	status,0,c
 10305  012A98  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10306  012A9A  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
 10307                           
 10308                           ; BSR set to: 0
 10309  012A9C  0100               	movlb	0	; () banked
 10310  012A9E  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
 10311  012AA0  D7E1               	goto	l8224
 10312  012AA2                     l1950:
 10313                           
 10314                           ; BSR set to: 0
 10315  012AA2  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
 10316  012AA6  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10317                           
 10318                           ; BSR set to: 0
 10319  012AAA  0012               	return		;funcret
 10320  012AAC                     __end_of___lwdiv:
 10321                           	opt stack 0
 10322                           tblptru	equ	0xFF8
 10323                           tblptrh	equ	0xFF7
 10324                           tblptrl	equ	0xFF6
 10325                           tablat	equ	0xFF5
 10326                           prodh	equ	0xFF4
 10327                           prodl	equ	0xFF3
 10328                           intcon	equ	0xFF2
 10329                           intcon2	equ	0xFF1
 10330                           indf0	equ	0xFEF
 10331                           postinc0	equ	0xFEE
 10332                           fsr0h	equ	0xFEA
 10333                           fsr0l	equ	0xFE9
 10334                           wreg	equ	0xFE8
 10335                           postinc1	equ	0xFE6
 10336                           postdec1	equ	0xFE5
 10337                           fsr1h	equ	0xFE2
 10338                           fsr1l	equ	0xFE1
 10339                           indf2	equ	0xFDF
 10340                           postinc2	equ	0xFDE
 10341                           postdec2	equ	0xFDD
 10342                           fsr2h	equ	0xFDA
 10343                           fsr2l	equ	0xFD9
 10344                           status	equ	0xFD8
 10345                           
 10346 ;; *************** function _UART_task *****************
 10347 ;; Defined at:
 10348 ;;		line 40 in file "../My_library/My_UART.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;		None
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;		None
 10353 ;; Return value:  Size  Location     Type
 10354 ;;		None               void
 10355 ;; Registers used:
 10356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10366 ;;Total ram usage:        0 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; Hardware stack levels required when called:    5
 10369 ;; This function calls:
 10370 ;;		_ringbuf_num
 10371 ;; This function is called by:
 10372 ;;		_main
 10373 ;; This function uses a non-reentrant model
 10374 ;;
 10375                           
 10376                           	psect	text40
 10377  012FEA                     __ptext40:
 10378                           	opt stack 0
 10379  012FEA                     _UART_task:
 10380                           	opt stack 25
 10381                           
 10382                           ;My_UART.c: 41: if (ringbuf_num(&uart_tx)) {
 10383                           
 10384                           ; BSR set to: 0
 10385                           ;incstack = 0
 10386  012FEA  0E61               	movlw	low _uart_tx
 10387  012FEC  0100               	movlb	0	; () banked
 10388  012FEE  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10389  012FF0  0E01               	movlw	high _uart_tx
 10390  012FF2  0100               	movlb	0	; () banked
 10391  012FF4  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10392  012FF6  EC1E  F08E         	call	_ringbuf_num	;wreg free
 10393  012FFA  0100               	movlb	0	; () banked
 10394  012FFC  5160               	movf	?_ringbuf_num& (0+255),w,b
 10395  012FFE  0100               	movlb	0	; () banked
 10396  013000  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10397  013002  B4D8               	btfsc	status,2,c
 10398  013004  0012               	return	
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;My_UART.c: 42: PIE1bits.TXIE = 1;
 10402  013006  889D               	bsf	3997,4,c	;volatile
 10403  013008  0012               	return	
 10404  01300A                     __end_of_UART_task:
 10405                           	opt stack 0
 10406                           tblptru	equ	0xFF8
 10407                           tblptrh	equ	0xFF7
 10408                           tblptrl	equ	0xFF6
 10409                           tablat	equ	0xFF5
 10410                           prodh	equ	0xFF4
 10411                           prodl	equ	0xFF3
 10412                           intcon	equ	0xFF2
 10413                           intcon2	equ	0xFF1
 10414                           indf0	equ	0xFEF
 10415                           postinc0	equ	0xFEE
 10416                           fsr0h	equ	0xFEA
 10417                           fsr0l	equ	0xFE9
 10418                           wreg	equ	0xFE8
 10419                           postinc1	equ	0xFE6
 10420                           postdec1	equ	0xFE5
 10421                           fsr1h	equ	0xFE2
 10422                           fsr1l	equ	0xFE1
 10423                           indf2	equ	0xFDF
 10424                           postinc2	equ	0xFDE
 10425                           postdec2	equ	0xFDD
 10426                           fsr2h	equ	0xFDA
 10427                           fsr2l	equ	0xFD9
 10428                           status	equ	0xFD8
 10429                           
 10430 ;; *************** function _ringbuf_num *****************
 10431 ;; Defined at:
 10432 ;;		line 12 in file "../My_library/My_ringbuf.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 10435 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 10436 ;;		 -> terminal_task@command(8), 
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;		None
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  2    0[BANK0 ] unsigned int 
 10441 ;; Registers used:
 10442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10450 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10451 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10452 ;;Total ram usage:        8 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:    4
 10455 ;; This function calls:
 10456 ;;		Nothing
 10457 ;; This function is called by:
 10458 ;;		_ringbuf_put
 10459 ;;		_ringbuf_pop
 10460 ;;		_ringbuf_backspace
 10461 ;;		_terminal_task
 10462 ;;		_UART_task
 10463 ;;		_USB_task
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           	psect	text41
 10468  011C3C                     __ptext41:
 10469                           	opt stack 0
 10470  011C3C                     _ringbuf_num:
 10471                           	opt stack 20
 10472                           
 10473                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 10474                           
 10475                           ; BSR set to: 0
 10476                           ;incstack = 0
 10477  011C3C  0100               	movlb	0	; () banked
 10478  011C3E  EE20 F006          	lfsr	2,6
 10479  011C42  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10480  011C44  26D9               	addwf	fsr2l,f,c
 10481  011C46  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10482  011C48  22DA               	addwfc	fsr2h,f,c
 10483  011C4A  0100               	movlb	0	; () banked
 10484  011C4C  EE10 F004          	lfsr	1,4
 10485  011C50  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10486  011C52  26E1               	addwf	fsr1l,f,c
 10487  011C54  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10488  011C56  22E2               	addwfc	fsr1h,f,c
 10489  011C58  50DE               	movf	postinc2,w,c
 10490  011C5A  5CE6               	subwf	postinc1,w,c
 10491  011C5C  50DE               	movf	postinc2,w,c
 10492  011C5E  58E6               	subwfb	postinc1,w,c
 10493  011C60  A0D8               	btfss	status,0,c
 10494  011C62  D028               	goto	l8042
 10495                           
 10496                           ; BSR set to: 0
 10497                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 10498  011C64  0100               	movlb	0	; () banked
 10499  011C66  EE20 F004          	lfsr	2,4
 10500  011C6A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10501  011C6C  26D9               	addwf	fsr2l,f,c
 10502  011C6E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10503  011C70  22DA               	addwfc	fsr2h,f,c
 10504  011C72  CFDE F062          	movff	postinc2,??_ringbuf_num
 10505  011C76  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 10506  011C7A  0100               	movlb	0	; () banked
 10507  011C7C  EE20 F006          	lfsr	2,6
 10508  011C80  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10509  011C82  26D9               	addwf	fsr2l,f,c
 10510  011C84  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10511  011C86  22DA               	addwfc	fsr2h,f,c
 10512  011C88  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 10513  011C8C  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 10514  011C90  0100               	movlb	0	; () banked
 10515  011C92  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 10516  011C94  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 10517  011C96  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 10518  011C98  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 10519  011C9A  0100               	movlb	0	; () banked
 10520  011C9C  5162               	movf	??_ringbuf_num& (0+255),w,b
 10521  011C9E  0100               	movlb	0	; () banked
 10522  011CA0  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 10523  011CA2  0100               	movlb	0	; () banked
 10524  011CA4  6F60               	movwf	?_ringbuf_num& (0+255),b
 10525  011CA6  0100               	movlb	0	; () banked
 10526  011CA8  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 10527  011CAA  0100               	movlb	0	; () banked
 10528  011CAC  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 10529  011CAE  0100               	movlb	0	; () banked
 10530  011CB0  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 10531                           
 10532                           ; BSR set to: 0
 10533                           ;My_ringbuf.c: 15: } else {
 10534                           
 10535                           ; BSR set to: 0
 10536  011CB2  0012               	return	
 10537  011CB4                     l8042:
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 10541  011CB4  0100               	movlb	0	; () banked
 10542  011CB6  EE20 F004          	lfsr	2,4
 10543  011CBA  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10544  011CBC  26D9               	addwf	fsr2l,f,c
 10545  011CBE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10546  011CC0  22DA               	addwfc	fsr2h,f,c
 10547  011CC2  CFDE F062          	movff	postinc2,??_ringbuf_num
 10548  011CC6  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 10549  011CCA  0100               	movlb	0	; () banked
 10550  011CCC  EE20 F002          	lfsr	2,2
 10551  011CD0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10552  011CD2  26D9               	addwf	fsr2l,f,c
 10553  011CD4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10554  011CD6  22DA               	addwfc	fsr2h,f,c
 10555  011CD8  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 10556  011CDC  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 10557  011CE0  0100               	movlb	0	; () banked
 10558  011CE2  EE20 F006          	lfsr	2,6
 10559  011CE6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10560  011CE8  26D9               	addwf	fsr2l,f,c
 10561  011CEA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10562  011CEC  22DA               	addwfc	fsr2h,f,c
 10563  011CEE  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 10564  011CF2  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 10565  011CF6  0100               	movlb	0	; () banked
 10566  011CF8  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 10567  011CFA  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 10568  011CFC  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 10569  011CFE  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 10570  011D00  0100               	movlb	0	; () banked
 10571  011D02  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 10572  011D04  0100               	movlb	0	; () banked
 10573  011D06  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 10574  011D08  0100               	movlb	0	; () banked
 10575  011D0A  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 10576  011D0C  0100               	movlb	0	; () banked
 10577  011D0E  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 10578  011D10  0100               	movlb	0	; () banked
 10579  011D12  5162               	movf	??_ringbuf_num& (0+255),w,b
 10580  011D14  0100               	movlb	0	; () banked
 10581  011D16  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 10582  011D18  0100               	movlb	0	; () banked
 10583  011D1A  6F60               	movwf	?_ringbuf_num& (0+255),b
 10584  011D1C  0100               	movlb	0	; () banked
 10585  011D1E  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 10586  011D20  0100               	movlb	0	; () banked
 10587  011D22  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 10588  011D24  0100               	movlb	0	; () banked
 10589  011D26  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 10590                           
 10591                           ; BSR set to: 0
 10592  011D28  0012               	return	
 10593  011D2A                     __end_of_ringbuf_num:
 10594                           	opt stack 0
 10595                           tblptru	equ	0xFF8
 10596                           tblptrh	equ	0xFF7
 10597                           tblptrl	equ	0xFF6
 10598                           tablat	equ	0xFF5
 10599                           prodh	equ	0xFF4
 10600                           prodl	equ	0xFF3
 10601                           intcon	equ	0xFF2
 10602                           intcon2	equ	0xFF1
 10603                           indf0	equ	0xFEF
 10604                           postinc0	equ	0xFEE
 10605                           fsr0h	equ	0xFEA
 10606                           fsr0l	equ	0xFE9
 10607                           wreg	equ	0xFE8
 10608                           postinc1	equ	0xFE6
 10609                           postdec1	equ	0xFE5
 10610                           fsr1h	equ	0xFE2
 10611                           fsr1l	equ	0xFE1
 10612                           indf2	equ	0xFDF
 10613                           postinc2	equ	0xFDE
 10614                           postdec2	equ	0xFDD
 10615                           fsr2h	equ	0xFDA
 10616                           fsr2l	equ	0xFD9
 10617                           status	equ	0xFD8
 10618                           
 10619 ;; *************** function _RTCC_task *****************
 10620 ;; Defined at:
 10621 ;;		line 353 in file "../My_library/My_RTCC.c"
 10622 ;; Parameters:    Size  Location     Type
 10623 ;;		None
 10624 ;; Auto vars:     Size  Location     Type
 10625 ;;		None
 10626 ;; Return value:  Size  Location     Type
 10627 ;;		None               void
 10628 ;; Registers used:
 10629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/0
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10639 ;;Total ram usage:        0 bytes
 10640 ;; Hardware stack levels used:    1
 10641 ;; Hardware stack levels required when called:    8
 10642 ;; This function calls:
 10643 ;;		_RTCC_from_RTCC
 10644 ;; This function is called by:
 10645 ;;		_main
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           
 10649                           	psect	text42
 10650  012E5E                     __ptext42:
 10651                           	opt stack 0
 10652  012E5E                     _RTCC_task:
 10653                           	opt stack 22
 10654  012E5E                     l408:
 10655  012E5E  010F               	movlb	15	; () banked
 10656  012E60  B93F               	btfsc	63,4,b	;volatile
 10657  012E62  D7FD               	goto	l408
 10658                           
 10659                           ; BSR set to: 15
 10660                           ;My_RTCC.c: 356: now.halfsec = RTCCFGbits.HALFSEC;
 10661                           
 10662                           ; BSR set to: 15
 10663  012E64  0E00               	movlw	0
 10664  012E66  B73F               	btfsc	63,3,b	;volatile
 10665  012E68  0E01               	movlw	1
 10666  012E6A  0101               	movlb	1	; () banked
 10667  012E6C  6F4F               	movwf	(_now+12)& (0+255),b
 10668                           
 10669                           ; BSR set to: 1
 10670                           ;My_RTCC.c: 357: if (prev_halfsec != now.halfsec) {
 10671  012E6E  0100               	movlb	0	; () banked
 10672  012E70  51E7               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 10673  012E72  0101               	movlb	1	; () banked
 10674  012E74  194F               	xorwf	(_now+12)& (0+255),w,b
 10675  012E76  B4D8               	btfsc	status,2,c
 10676  012E78  0012               	return	
 10677                           
 10678                           ; BSR set to: 1
 10679                           ;My_RTCC.c: 358: prev_halfsec = now.halfsec;
 10680  012E7A  C14F  F0E7         	movff	_now+12,RTCC_task@prev_halfsec
 10681                           
 10682                           ;My_RTCC.c: 359: now.colon = now.halfsec;
 10683  012E7E  C14F  F14E         	movff	_now+12,_now+11
 10684                           
 10685                           ; BSR set to: 1
 10686                           ;My_RTCC.c: 360: time_change_flag = 1;
 10687  012E82  0E01               	movlw	1
 10688  012E84  0100               	movlb	0	; () banked
 10689  012E86  6FEE               	movwf	_time_change_flag& (0+255),b
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;My_RTCC.c: 361: RTCC_from_RTCC(&now);
 10693  012E88  0E43               	movlw	low _now
 10694  012E8A  0100               	movlb	0	; () banked
 10695  012E8C  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 10696  012E8E  0E01               	movlw	high _now
 10697  012E90  0100               	movlb	0	; () banked
 10698  012E92  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 10699  012E94  EC2E  F098         	call	_RTCC_from_RTCC	;wreg free
 10700  012E98  0012               	return	
 10701  012E9A                     __end_of_RTCC_task:
 10702                           	opt stack 0
 10703                           tblptru	equ	0xFF8
 10704                           tblptrh	equ	0xFF7
 10705                           tblptrl	equ	0xFF6
 10706                           tablat	equ	0xFF5
 10707                           prodh	equ	0xFF4
 10708                           prodl	equ	0xFF3
 10709                           intcon	equ	0xFF2
 10710                           intcon2	equ	0xFF1
 10711                           indf0	equ	0xFEF
 10712                           postinc0	equ	0xFEE
 10713                           fsr0h	equ	0xFEA
 10714                           fsr0l	equ	0xFE9
 10715                           wreg	equ	0xFE8
 10716                           postinc1	equ	0xFE6
 10717                           postdec1	equ	0xFE5
 10718                           fsr1h	equ	0xFE2
 10719                           fsr1l	equ	0xFE1
 10720                           indf2	equ	0xFDF
 10721                           postinc2	equ	0xFDE
 10722                           postdec2	equ	0xFDD
 10723                           fsr2h	equ	0xFDA
 10724                           fsr2l	equ	0xFD9
 10725                           status	equ	0xFD8
 10726                           
 10727 ;; *************** function _RTCC_from_RTCC *****************
 10728 ;; Defined at:
 10729 ;;		line 200 in file "../My_library/My_RTCC.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;  tm              2   38[BANK0 ] PTR struct .
 10732 ;;		 -> now(14), 
 10733 ;; Auto vars:     Size  Location     Type
 10734 ;;		None
 10735 ;; Return value:  Size  Location     Type
 10736 ;;		None               void
 10737 ;; Registers used:
 10738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10739 ;; Tracked objects:
 10740 ;;		On entry : 0/0
 10741 ;;		On exit  : 0/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10747 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10748 ;;Total ram usage:        2 bytes
 10749 ;; Hardware stack levels used:    1
 10750 ;; Hardware stack levels required when called:    7
 10751 ;; This function calls:
 10752 ;;		_RTCC_to_caltime
 10753 ;;		_caltime_to_epoch
 10754 ;; This function is called by:
 10755 ;;		_RTCC_init
 10756 ;;		_RTCC_task
 10757 ;;		_print_time
 10758 ;;		_light_task
 10759 ;;		_main
 10760 ;;		_display_time_0802
 10761 ;;		_display_time_1602
 10762 ;;		_RTCC_adjust_time_inc
 10763 ;;		_RTCC_adjust_time_dec
 10764 ;; This function uses a non-reentrant model
 10765 ;;
 10766                           
 10767                           	psect	text43
 10768  01305C                     __ptext43:
 10769                           	opt stack 0
 10770  01305C                     _RTCC_from_RTCC:
 10771                           	opt stack 18
 10772                           
 10773                           ;My_RTCC.c: 201: RTCC_to_caltime(tm);
 10774                           
 10775                           ;incstack = 0
 10776  01305C  C086  F061         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 10777  013060  C087  F062         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 10778  013064  EC61  F091         	call	_RTCC_to_caltime	;wreg free
 10779                           
 10780                           ;My_RTCC.c: 202: caltime_to_epoch(tm);
 10781  013068  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 10782  01306C  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 10783  013070  EC44  F088         	call	_caltime_to_epoch	;wreg free
 10784  013074  0012               	return		;funcret
 10785  013076                     __end_of_RTCC_from_RTCC:
 10786                           	opt stack 0
 10787                           tblptru	equ	0xFF8
 10788                           tblptrh	equ	0xFF7
 10789                           tblptrl	equ	0xFF6
 10790                           tablat	equ	0xFF5
 10791                           prodh	equ	0xFF4
 10792                           prodl	equ	0xFF3
 10793                           intcon	equ	0xFF2
 10794                           intcon2	equ	0xFF1
 10795                           indf0	equ	0xFEF
 10796                           postinc0	equ	0xFEE
 10797                           fsr0h	equ	0xFEA
 10798                           fsr0l	equ	0xFE9
 10799                           wreg	equ	0xFE8
 10800                           postinc1	equ	0xFE6
 10801                           postdec1	equ	0xFE5
 10802                           fsr1h	equ	0xFE2
 10803                           fsr1l	equ	0xFE1
 10804                           indf2	equ	0xFDF
 10805                           postinc2	equ	0xFDE
 10806                           postdec2	equ	0xFDD
 10807                           fsr2h	equ	0xFDA
 10808                           fsr2l	equ	0xFD9
 10809                           status	equ	0xFD8
 10810                           
 10811 ;; *************** function _caltime_to_epoch *****************
 10812 ;; Defined at:
 10813 ;;		line 180 in file "../My_library/My_RTCC.c"
 10814 ;; Parameters:    Size  Location     Type
 10815 ;;  tm              2   25[BANK0 ] PTR struct .
 10816 ;;		 -> now(14), 
 10817 ;; Auto vars:     Size  Location     Type
 10818 ;;  month           1   37[BANK0 ] unsigned char 
 10819 ;;  month           1   32[BANK0 ] unsigned char 
 10820 ;;  year            1   31[BANK0 ] unsigned char 
 10821 ;;  epoch           4   33[BANK0 ] unsigned long 
 10822 ;; Return value:  Size  Location     Type
 10823 ;;		None               void
 10824 ;; Registers used:
 10825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10832 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10833 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10834 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10835 ;;Total ram usage:       13 bytes
 10836 ;; Hardware stack levels used:    1
 10837 ;; Hardware stack levels required when called:    6
 10838 ;; This function calls:
 10839 ;;		___lmul
 10840 ;;		_month_length
 10841 ;; This function is called by:
 10842 ;;		_RTCC_from_RTCC
 10843 ;;		_RTCC_from_caltime
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847                           	psect	text44
 10848  011088                     __ptext44:
 10849                           	opt stack 0
 10850  011088                     _caltime_to_epoch:
 10851                           	opt stack 18
 10852                           
 10853                           ;My_RTCC.c: 181: epoch_t epoch = 0;
 10854                           
 10855                           ;incstack = 0
 10856  011088  0E00               	movlw	0
 10857  01108A  0100               	movlb	0	; () banked
 10858  01108C  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 10859  01108E  0E00               	movlw	0
 10860  011090  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 10861  011092  0E00               	movlw	0
 10862  011094  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 10863  011096  0E00               	movlw	0
 10864  011098  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 10865                           
 10866                           ;My_RTCC.c: 182: for (uint8_t year = 0; year < tm->YY; year++) {
 10867  01109A  0E00               	movlw	0
 10868  01109C  0100               	movlb	0	; () banked
 10869  01109E  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 10870  0110A0  D037               	goto	l8180
 10871  0110A2                     l8166:
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;My_RTCC.c: 183: for (uint8_t month = 1; month <= 12; month++) {
 10875  0110A2  0E01               	movlw	1
 10876  0110A4  0100               	movlb	0	; () banked
 10877  0110A6  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 10878  0110A8                     l8168:
 10879                           
 10880                           ; BSR set to: 0
 10881  0110A8  0E0C               	movlw	12
 10882  0110AA  0100               	movlb	0	; () banked
 10883  0110AC  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 10884  0110AE  D001               	goto	l8172
 10885  0110B0  D02D               	goto	l8178
 10886  0110B2                     l8172:
 10887                           
 10888                           ; BSR set to: 0
 10889                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 10890  0110B2  C085  F020         	movff	caltime_to_epoch@month,month_length@month
 10891  0110B6  0100               	movlb	0	; () banked
 10892  0110B8  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 10893  0110BA  EC95  F08E         	call	_month_length
 10894  0110BE  0100               	movlb	0	; () banked
 10895  0110C0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 10896  0110C2  0100               	movlb	0	; () banked
 10897  0110C4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 10898  0110C6  0100               	movlb	0	; () banked
 10899  0110C8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 10900  0110CA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 10901  0110CC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 10902  0110CE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 10903  0110D0  0E80               	movlw	128
 10904  0110D2  0100               	movlb	0	; () banked
 10905  0110D4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10906  0110D6  0E51               	movlw	81
 10907  0110D8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10908  0110DA  0E01               	movlw	1
 10909  0110DC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10910  0110DE  0E00               	movlw	0
 10911  0110E0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10912  0110E2  EC56  F095         	call	___lmul	;wreg free
 10913  0110E6  0100               	movlb	0	; () banked
 10914  0110E8  516D               	movf	?___lmul& (0+255),w,b
 10915  0110EA  0100               	movlb	0	; () banked
 10916  0110EC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 10917  0110EE  0100               	movlb	0	; () banked
 10918  0110F0  516E               	movf	(?___lmul+1)& (0+255),w,b
 10919  0110F2  0100               	movlb	0	; () banked
 10920  0110F4  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 10921  0110F6  0100               	movlb	0	; () banked
 10922  0110F8  516F               	movf	(?___lmul+2)& (0+255),w,b
 10923  0110FA  0100               	movlb	0	; () banked
 10924  0110FC  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 10925  0110FE  0100               	movlb	0	; () banked
 10926  011100  5170               	movf	(?___lmul+3)& (0+255),w,b
 10927  011102  0100               	movlb	0	; () banked
 10928  011104  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 10929                           
 10930                           ; BSR set to: 0
 10931  011106  0100               	movlb	0	; () banked
 10932  011108  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 10933  01110A  D7CE               	goto	l8168
 10934  01110C                     l8178:
 10935                           
 10936                           ; BSR set to: 0
 10937  01110C  0100               	movlb	0	; () banked
 10938  01110E  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 10939  011110                     l8180:
 10940                           
 10941                           ; BSR set to: 0
 10942  011110  0100               	movlb	0	; () banked
 10943  011112  EE20 F00A          	lfsr	2,10
 10944  011116  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 10945  011118  26D9               	addwf	fsr2l,f,c
 10946  01111A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 10947  01111C  22DA               	addwfc	fsr2h,f,c
 10948  01111E  50DE               	movf	postinc2,w,c
 10949  011120  0100               	movlb	0	; () banked
 10950  011122  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 10951  011124  A0D8               	btfss	status,0,c
 10952  011126  D7BD               	goto	l8166
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;My_RTCC.c: 185: }
 10956                           ;My_RTCC.c: 186: }
 10957                           ;My_RTCC.c: 187: for (uint8_t month = 1; month < tm->MM; month++) {
 10958                           
 10959                           ; BSR set to: 0
 10960  011128  0E01               	movlw	1
 10961  01112A  0100               	movlb	0	; () banked
 10962  01112C  6F80               	movwf	caltime_to_epoch@month_1589& (0+255),b
 10963  01112E  D032               	goto	l8188
 10964  011130                     l8184:
 10965                           
 10966                           ; BSR set to: 0
 10967                           ;My_RTCC.c: 188: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 10968  011130  C080  F020         	movff	caltime_to_epoch@month_1589,month_length@month
 10969  011134  0100               	movlb	0	; () banked
 10970  011136  EE20 F00A          	lfsr	2,10
 10971  01113A  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 10972  01113C  26D9               	addwf	fsr2l,f,c
 10973  01113E  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 10974  011140  22DA               	addwfc	fsr2h,f,c
 10975  011142  50DF               	movf	indf2,w,c
 10976  011144  EC95  F08E         	call	_month_length
 10977  011148  0100               	movlb	0	; () banked
 10978  01114A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 10979  01114C  0100               	movlb	0	; () banked
 10980  01114E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 10981  011150  0100               	movlb	0	; () banked
 10982  011152  6F6D               	movwf	___lmul@multiplier& (0+255),b
 10983  011154  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 10984  011156  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 10985  011158  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 10986  01115A  0E80               	movlw	128
 10987  01115C  0100               	movlb	0	; () banked
 10988  01115E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10989  011160  0E51               	movlw	81
 10990  011162  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10991  011164  0E01               	movlw	1
 10992  011166  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10993  011168  0E00               	movlw	0
 10994  01116A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10995  01116C  EC56  F095         	call	___lmul	;wreg free
 10996  011170  0100               	movlb	0	; () banked
 10997  011172  516D               	movf	?___lmul& (0+255),w,b
 10998  011174  0100               	movlb	0	; () banked
 10999  011176  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11000  011178  0100               	movlb	0	; () banked
 11001  01117A  516E               	movf	(?___lmul+1)& (0+255),w,b
 11002  01117C  0100               	movlb	0	; () banked
 11003  01117E  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11004  011180  0100               	movlb	0	; () banked
 11005  011182  516F               	movf	(?___lmul+2)& (0+255),w,b
 11006  011184  0100               	movlb	0	; () banked
 11007  011186  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11008  011188  0100               	movlb	0	; () banked
 11009  01118A  5170               	movf	(?___lmul+3)& (0+255),w,b
 11010  01118C  0100               	movlb	0	; () banked
 11011  01118E  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11012                           
 11013                           ; BSR set to: 0
 11014  011190  0100               	movlb	0	; () banked
 11015  011192  2B80               	incf	caltime_to_epoch@month_1589& (0+255),f,b
 11016  011194                     l8188:
 11017                           
 11018                           ; BSR set to: 0
 11019  011194  0100               	movlb	0	; () banked
 11020  011196  EE20 F009          	lfsr	2,9
 11021  01119A  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11022  01119C  26D9               	addwf	fsr2l,f,c
 11023  01119E  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11024  0111A0  22DA               	addwfc	fsr2h,f,c
 11025  0111A2  50DE               	movf	postinc2,w,c
 11026  0111A4  0100               	movlb	0	; () banked
 11027  0111A6  5D80               	subwf	caltime_to_epoch@month_1589& (0+255),w,b
 11028  0111A8  A0D8               	btfss	status,0,c
 11029  0111AA  D7C2               	goto	l8184
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;My_RTCC.c: 189: }
 11033                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 11034                           
 11035                           ; BSR set to: 0
 11036  0111AC  0EFF               	movlw	255
 11037  0111AE  0100               	movlb	0	; () banked
 11038  0111B0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11039  0111B2  0EFF               	movlw	255
 11040  0111B4  0100               	movlb	0	; () banked
 11041  0111B6  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 11042  0111B8  0100               	movlb	0	; () banked
 11043  0111BA  EE20 F008          	lfsr	2,8
 11044  0111BE  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11045  0111C0  26D9               	addwf	fsr2l,f,c
 11046  0111C2  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11047  0111C4  22DA               	addwfc	fsr2h,f,c
 11048  0111C6  50DF               	movf	indf2,w,c
 11049  0111C8  0100               	movlb	0	; () banked
 11050  0111CA  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 11051  0111CC  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 11052  0111CE  0100               	movlb	0	; () banked
 11053  0111D0  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11054  0111D2  0100               	movlb	0	; () banked
 11055  0111D4  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 11056  0111D6  0100               	movlb	0	; () banked
 11057  0111D8  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 11058  0111DA  0100               	movlb	0	; () banked
 11059  0111DC  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 11060  0111DE  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 11061  0111E2  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 11062  0111E6  0100               	movlb	0	; () banked
 11063  0111E8  0E00               	movlw	0
 11064  0111EA  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 11065  0111EC  0EFF               	movlw	-1
 11066  0111EE  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 11067  0111F0  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 11068  0111F2  0E80               	movlw	128
 11069  0111F4  0100               	movlb	0	; () banked
 11070  0111F6  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11071  0111F8  0E51               	movlw	81
 11072  0111FA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11073  0111FC  0E01               	movlw	1
 11074  0111FE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11075  011200  0E00               	movlw	0
 11076  011202  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11077  011204  EC56  F095         	call	___lmul	;wreg free
 11078  011208  0100               	movlb	0	; () banked
 11079  01120A  516D               	movf	?___lmul& (0+255),w,b
 11080  01120C  0100               	movlb	0	; () banked
 11081  01120E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11082  011210  0100               	movlb	0	; () banked
 11083  011212  516E               	movf	(?___lmul+1)& (0+255),w,b
 11084  011214  0100               	movlb	0	; () banked
 11085  011216  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11086  011218  0100               	movlb	0	; () banked
 11087  01121A  516F               	movf	(?___lmul+2)& (0+255),w,b
 11088  01121C  0100               	movlb	0	; () banked
 11089  01121E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11090  011220  0100               	movlb	0	; () banked
 11091  011222  5170               	movf	(?___lmul+3)& (0+255),w,b
 11092  011224  0100               	movlb	0	; () banked
 11093  011226  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11094                           
 11095                           ;My_RTCC.c: 191: epoch += ((epoch_t)60*60) * tm->hh;
 11096  011228  0100               	movlb	0	; () banked
 11097  01122A  EE20 F006          	lfsr	2,6
 11098  01122E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11099  011230  26D9               	addwf	fsr2l,f,c
 11100  011232  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11101  011234  22DA               	addwfc	fsr2h,f,c
 11102  011236  50DF               	movf	indf2,w,c
 11103  011238  0100               	movlb	0	; () banked
 11104  01123A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11105  01123C  0100               	movlb	0	; () banked
 11106  01123E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11107  011240  0100               	movlb	0	; () banked
 11108  011242  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11109  011244  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11110  011246  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11111  011248  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11112  01124A  0E10               	movlw	16
 11113  01124C  0100               	movlb	0	; () banked
 11114  01124E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11115  011250  0E0E               	movlw	14
 11116  011252  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11117  011254  0E00               	movlw	0
 11118  011256  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11119  011258  0E00               	movlw	0
 11120  01125A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11121  01125C  EC56  F095         	call	___lmul	;wreg free
 11122  011260  0100               	movlb	0	; () banked
 11123  011262  516D               	movf	?___lmul& (0+255),w,b
 11124  011264  0100               	movlb	0	; () banked
 11125  011266  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11126  011268  0100               	movlb	0	; () banked
 11127  01126A  516E               	movf	(?___lmul+1)& (0+255),w,b
 11128  01126C  0100               	movlb	0	; () banked
 11129  01126E  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11130  011270  0100               	movlb	0	; () banked
 11131  011272  516F               	movf	(?___lmul+2)& (0+255),w,b
 11132  011274  0100               	movlb	0	; () banked
 11133  011276  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11134  011278  0100               	movlb	0	; () banked
 11135  01127A  5170               	movf	(?___lmul+3)& (0+255),w,b
 11136  01127C  0100               	movlb	0	; () banked
 11137  01127E  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11138                           
 11139                           ;My_RTCC.c: 192: epoch += ((epoch_t)60) * tm->mm;
 11140  011280  0100               	movlb	0	; () banked
 11141  011282  EE20 F005          	lfsr	2,5
 11142  011286  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11143  011288  26D9               	addwf	fsr2l,f,c
 11144  01128A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11145  01128C  22DA               	addwfc	fsr2h,f,c
 11146  01128E  50DF               	movf	indf2,w,c
 11147  011290  0100               	movlb	0	; () banked
 11148  011292  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11149  011294  0100               	movlb	0	; () banked
 11150  011296  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11151  011298  0100               	movlb	0	; () banked
 11152  01129A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11153  01129C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11154  01129E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11155  0112A0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11156  0112A2  0E3C               	movlw	60
 11157  0112A4  0100               	movlb	0	; () banked
 11158  0112A6  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11159  0112A8  0E00               	movlw	0
 11160  0112AA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11161  0112AC  0E00               	movlw	0
 11162  0112AE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11163  0112B0  0E00               	movlw	0
 11164  0112B2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11165  0112B4  EC56  F095         	call	___lmul	;wreg free
 11166  0112B8  0100               	movlb	0	; () banked
 11167  0112BA  516D               	movf	?___lmul& (0+255),w,b
 11168  0112BC  0100               	movlb	0	; () banked
 11169  0112BE  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11170  0112C0  0100               	movlb	0	; () banked
 11171  0112C2  516E               	movf	(?___lmul+1)& (0+255),w,b
 11172  0112C4  0100               	movlb	0	; () banked
 11173  0112C6  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11174  0112C8  0100               	movlb	0	; () banked
 11175  0112CA  516F               	movf	(?___lmul+2)& (0+255),w,b
 11176  0112CC  0100               	movlb	0	; () banked
 11177  0112CE  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11178  0112D0  0100               	movlb	0	; () banked
 11179  0112D2  5170               	movf	(?___lmul+3)& (0+255),w,b
 11180  0112D4  0100               	movlb	0	; () banked
 11181  0112D6  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;My_RTCC.c: 193: epoch += tm->ss;
 11185  0112D8  0100               	movlb	0	; () banked
 11186  0112DA  EE20 F004          	lfsr	2,4
 11187  0112DE  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11188  0112E0  26D9               	addwf	fsr2l,f,c
 11189  0112E2  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11190  0112E4  22DA               	addwfc	fsr2h,f,c
 11191  0112E6  50DF               	movf	indf2,w,c
 11192  0112E8  0100               	movlb	0	; () banked
 11193  0112EA  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11194  0112EC  0100               	movlb	0	; () banked
 11195  0112EE  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11196  0112F0  0100               	movlb	0	; () banked
 11197  0112F2  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11198  0112F4  0E00               	movlw	0
 11199  0112F6  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11200  0112F8  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11201  0112FA  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;My_RTCC.c: 195: tm->epoch = epoch;
 11205  0112FC  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 11206  011300  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 11207  011304  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 11208  011308  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 11209  01130C  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 11210  011310  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 11211                           
 11212                           ; BSR set to: 0
 11213  011314  0012               	return		;funcret
 11214  011316                     __end_of_caltime_to_epoch:
 11215                           	opt stack 0
 11216                           tblptru	equ	0xFF8
 11217                           tblptrh	equ	0xFF7
 11218                           tblptrl	equ	0xFF6
 11219                           tablat	equ	0xFF5
 11220                           prodh	equ	0xFF4
 11221                           prodl	equ	0xFF3
 11222                           intcon	equ	0xFF2
 11223                           intcon2	equ	0xFF1
 11224                           indf0	equ	0xFEF
 11225                           postinc0	equ	0xFEE
 11226                           fsr0h	equ	0xFEA
 11227                           fsr0l	equ	0xFE9
 11228                           wreg	equ	0xFE8
 11229                           postinc1	equ	0xFE6
 11230                           postdec1	equ	0xFE5
 11231                           fsr1h	equ	0xFE2
 11232                           fsr1l	equ	0xFE1
 11233                           indf2	equ	0xFDF
 11234                           postinc2	equ	0xFDE
 11235                           postdec2	equ	0xFDD
 11236                           fsr2h	equ	0xFDA
 11237                           fsr2l	equ	0xFD9
 11238                           status	equ	0xFD8
 11239                           
 11240 ;; *************** function _month_length *****************
 11241 ;; Defined at:
 11242 ;;		line 56 in file "../My_library/My_RTCC.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;  year            1    wreg     unsigned char 
 11245 ;;  month           1   31[COMRAM] unsigned char 
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;  year            1   10[BANK0 ] unsigned char 
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  1    wreg      unsigned char 
 11250 ;; Registers used:
 11251 ;;		wreg, status,2, status,0, cstack
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11257 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11258 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11259 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11260 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11261 ;;Total ram usage:        6 bytes
 11262 ;; Hardware stack levels used:    1
 11263 ;; Hardware stack levels required when called:    5
 11264 ;; This function calls:
 11265 ;;		___awmod
 11266 ;; This function is called by:
 11267 ;;		_epoch_to_caltime
 11268 ;;		_caltime_to_epoch
 11269 ;;		_terminal_time
 11270 ;;		_RTCC_adjust_time_inc
 11271 ;;		_RTCC_adjust_time_dec
 11272 ;; This function uses a non-reentrant model
 11273 ;;
 11274                           
 11275                           	psect	text45
 11276  011D2A                     __ptext45:
 11277                           	opt stack 0
 11278  011D2A                     _month_length:
 11279                           	opt stack 18
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;incstack = 0
 11283                           ;month_length@year stored from wreg
 11284  011D2A  0100               	movlb	0	; () banked
 11285  011D2C  6F6A               	movwf	month_length@year& (0+255),b
 11286                           
 11287                           ;My_RTCC.c: 57: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 11288  011D2E  0E02               	movlw	2
 11289  011D30  1820               	xorwf	month_length@month,w,c
 11290  011D32  A4D8               	btfss	status,2,c
 11291  011D34  D03E               	goto	l8058
 11292  011D36  C06A  F060         	movff	month_length@year,___awmod@dividend
 11293  011D3A  0100               	movlb	0	; () banked
 11294  011D3C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11295  011D3E  0E00               	movlw	0
 11296  011D40  0100               	movlb	0	; () banked
 11297  011D42  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11298  011D44  0E64               	movlw	100
 11299  011D46  6F62               	movwf	___awmod@divisor& (0+255),b
 11300  011D48  EC2A  F093         	call	___awmod	;wreg free
 11301  011D4C  0100               	movlb	0	; () banked
 11302  011D4E  5160               	movf	?___awmod& (0+255),w,b
 11303  011D50  0100               	movlb	0	; () banked
 11304  011D52  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 11305  011D54  A4D8               	btfss	status,2,c
 11306  011D56  D002               	goto	u8190
 11307  011D58  0E01               	movlw	1
 11308  011D5A  D001               	goto	u8200
 11309  011D5C                     u8190:
 11310  011D5C  0E00               	movlw	0
 11311  011D5E                     u8200:
 11312  011D5E  0800               	sublw	0
 11313  011D60  0100               	movlb	0	; () banked
 11314  011D62  6F66               	movwf	??_month_length& (0+255),b
 11315  011D64  C06A  F060         	movff	month_length@year,___awmod@dividend
 11316  011D68  0100               	movlb	0	; () banked
 11317  011D6A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11318  011D6C  0E01               	movlw	1
 11319  011D6E  0100               	movlb	0	; () banked
 11320  011D70  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11321  011D72  0E90               	movlw	144
 11322  011D74  6F62               	movwf	___awmod@divisor& (0+255),b
 11323  011D76  EC2A  F093         	call	___awmod	;wreg free
 11324  011D7A  0100               	movlb	0	; () banked
 11325  011D7C  5160               	movf	?___awmod& (0+255),w,b
 11326  011D7E  0100               	movlb	0	; () banked
 11327  011D80  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 11328  011D82  A4D8               	btfss	status,2,c
 11329  011D84  D004               	goto	u8210
 11330  011D86  0100               	movlb	0	; () banked
 11331  011D88  6B67               	clrf	(??_month_length+1)& (0+255),b
 11332  011D8A  2B67               	incf	(??_month_length+1)& (0+255),f,b
 11333  011D8C  D002               	goto	u8228
 11334  011D8E                     u8210:
 11335  011D8E  0100               	movlb	0	; () banked
 11336  011D90  6B67               	clrf	(??_month_length+1)& (0+255),b
 11337  011D92                     u8228:
 11338  011D92  C06A  F068         	movff	month_length@year,??_month_length+2
 11339  011D96  0E03               	movlw	3
 11340  011D98  0100               	movlb	0	; () banked
 11341  011D9A  1768               	andwf	(??_month_length+2)& (0+255),f,b
 11342  011D9C  A4D8               	btfss	status,2,c
 11343  011D9E  D002               	goto	u8230
 11344  011DA0  0E01               	movlw	1
 11345  011DA2  D001               	goto	u8240
 11346  011DA4                     u8230:
 11347  011DA4  0E00               	movlw	0
 11348  011DA6                     u8240:
 11349  011DA6  0100               	movlb	0	; () banked
 11350  011DA8  2567               	addwf	(??_month_length+1)& (0+255),w,b
 11351  011DAA  0100               	movlb	0	; () banked
 11352  011DAC  2566               	addwf	??_month_length& (0+255),w,b
 11353  011DAE  0F1C               	addlw	28
 11354                           
 11355                           ; BSR set to: 0
 11356                           
 11357                           ; BSR set to: 0
 11358  011DB0  0012               	return	
 11359  011DB2                     l8058:
 11360                           
 11361                           ;My_RTCC.c: 58: else return 31 - (((-(month & 1)^month)&13) == 4);
 11362  011DB2  5020               	movf	month_length@month,w,c
 11363  011DB4  0B01               	andlw	1
 11364  011DB6  0100               	movlb	0	; () banked
 11365  011DB8  6F66               	movwf	??_month_length& (0+255),b
 11366  011DBA  6B67               	clrf	(??_month_length+1)& (0+255),b
 11367  011DBC  0100               	movlb	0	; () banked
 11368  011DBE  1F66               	comf	??_month_length& (0+255),f,b
 11369  011DC0  1F67               	comf	(??_month_length+1)& (0+255),f,b
 11370  011DC2  4B66               	infsnz	??_month_length& (0+255),f,b
 11371  011DC4  2B67               	incf	(??_month_length+1)& (0+255),f,b
 11372  011DC6  5020               	movf	month_length@month,w,c
 11373  011DC8  0100               	movlb	0	; () banked
 11374  011DCA  6F68               	movwf	(??_month_length+2)& (0+255),b
 11375  011DCC  6B69               	clrf	(??_month_length+3)& (0+255),b
 11376  011DCE  0100               	movlb	0	; () banked
 11377  011DD0  5166               	movf	??_month_length& (0+255),w,b
 11378  011DD2  0100               	movlb	0	; () banked
 11379  011DD4  1B68               	xorwf	(??_month_length+2)& (0+255),f,b
 11380  011DD6  0100               	movlb	0	; () banked
 11381  011DD8  5167               	movf	(??_month_length+1)& (0+255),w,b
 11382  011DDA  0100               	movlb	0	; () banked
 11383  011DDC  1B69               	xorwf	(??_month_length+3)& (0+255),f,b
 11384  011DDE  0E0D               	movlw	13
 11385  011DE0  0100               	movlb	0	; () banked
 11386  011DE2  1768               	andwf	(??_month_length+2)& (0+255),f,b
 11387  011DE4  0E00               	movlw	0
 11388  011DE6  1769               	andwf	(??_month_length+3)& (0+255),f,b
 11389  011DE8  0E04               	movlw	4
 11390  011DEA  0100               	movlb	0	; () banked
 11391  011DEC  1968               	xorwf	(??_month_length+2)& (0+255),w,b
 11392  011DEE  0100               	movlb	0	; () banked
 11393  011DF0  1169               	iorwf	(??_month_length+3)& (0+255),w,b
 11394  011DF2  A4D8               	btfss	status,2,c
 11395  011DF4  D002               	goto	u8250
 11396  011DF6  0E01               	movlw	1
 11397  011DF8  D001               	goto	u8260
 11398  011DFA                     u8250:
 11399  011DFA  0E00               	movlw	0
 11400  011DFC                     u8260:
 11401  011DFC  0800               	sublw	0
 11402  011DFE  0F1F               	addlw	31
 11403                           
 11404                           ; BSR set to: 0
 11405  011E00  0012               	return	
 11406  011E02                     __end_of_month_length:
 11407                           	opt stack 0
 11408                           tblptru	equ	0xFF8
 11409                           tblptrh	equ	0xFF7
 11410                           tblptrl	equ	0xFF6
 11411                           tablat	equ	0xFF5
 11412                           prodh	equ	0xFF4
 11413                           prodl	equ	0xFF3
 11414                           intcon	equ	0xFF2
 11415                           intcon2	equ	0xFF1
 11416                           indf0	equ	0xFEF
 11417                           postinc0	equ	0xFEE
 11418                           fsr0h	equ	0xFEA
 11419                           fsr0l	equ	0xFE9
 11420                           wreg	equ	0xFE8
 11421                           postinc1	equ	0xFE6
 11422                           postdec1	equ	0xFE5
 11423                           fsr1h	equ	0xFE2
 11424                           fsr1l	equ	0xFE1
 11425                           indf2	equ	0xFDF
 11426                           postinc2	equ	0xFDE
 11427                           postdec2	equ	0xFDD
 11428                           fsr2h	equ	0xFDA
 11429                           fsr2l	equ	0xFD9
 11430                           status	equ	0xFD8
 11431                           
 11432 ;; *************** function ___awmod *****************
 11433 ;; Defined at:
 11434 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;  dividend        2    0[BANK0 ] int 
 11437 ;;  divisor         2    2[BANK0 ] int 
 11438 ;; Auto vars:     Size  Location     Type
 11439 ;;  sign            1    5[BANK0 ] unsigned char 
 11440 ;;  counter         1    4[BANK0 ] unsigned char 
 11441 ;; Return value:  Size  Location     Type
 11442 ;;                  2    0[BANK0 ] int 
 11443 ;; Registers used:
 11444 ;;		wreg, status,2, status,0
 11445 ;; Tracked objects:
 11446 ;;		On entry : 0/0
 11447 ;;		On exit  : 0/0
 11448 ;;		Unchanged: 0/0
 11449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11451 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11453 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11454 ;;Total ram usage:        6 bytes
 11455 ;; Hardware stack levels used:    1
 11456 ;; Hardware stack levels required when called:    4
 11457 ;; This function calls:
 11458 ;;		Nothing
 11459 ;; This function is called by:
 11460 ;;		_month_length
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text46
 11465  012654                     __ptext46:
 11466                           	opt stack 0
 11467  012654                     ___awmod:
 11468                           	opt stack 18
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;incstack = 0
 11472  012654  0E00               	movlw	0
 11473  012656  0100               	movlb	0	; () banked
 11474  012658  6F65               	movwf	___awmod@sign& (0+255),b
 11475                           
 11476                           ; BSR set to: 0
 11477  01265A  0100               	movlb	0	; () banked
 11478  01265C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11479  01265E  D008               	goto	l8006
 11480                           
 11481                           ; BSR set to: 0
 11482  012660  0100               	movlb	0	; () banked
 11483  012662  6D60               	negf	___awmod@dividend& (0+255),b
 11484  012664  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11485  012666  B0D8               	btfsc	status,0,c
 11486  012668  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11487                           
 11488                           ; BSR set to: 0
 11489  01266A  0E01               	movlw	1
 11490  01266C  0100               	movlb	0	; () banked
 11491  01266E  6F65               	movwf	___awmod@sign& (0+255),b
 11492  012670                     l8006:
 11493                           
 11494                           ; BSR set to: 0
 11495  012670  0100               	movlb	0	; () banked
 11496  012672  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11497  012674  D005               	goto	l8010
 11498                           
 11499                           ; BSR set to: 0
 11500  012676  0100               	movlb	0	; () banked
 11501  012678  6D62               	negf	___awmod@divisor& (0+255),b
 11502  01267A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11503  01267C  B0D8               	btfsc	status,0,c
 11504  01267E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11505  012680                     l8010:
 11506                           
 11507                           ; BSR set to: 0
 11508  012680  0100               	movlb	0	; () banked
 11509  012682  5162               	movf	___awmod@divisor& (0+255),w,b
 11510  012684  0100               	movlb	0	; () banked
 11511  012686  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11512  012688  B4D8               	btfsc	status,2,c
 11513  01268A  D026               	goto	l8026
 11514                           
 11515                           ; BSR set to: 0
 11516  01268C  0E01               	movlw	1
 11517  01268E  0100               	movlb	0	; () banked
 11518  012690  6F64               	movwf	___awmod@counter& (0+255),b
 11519  012692  D006               	goto	l8016
 11520  012694                     l8014:
 11521                           
 11522                           ; BSR set to: 0
 11523  012694  0100               	movlb	0	; () banked
 11524  012696  90D8               	bcf	status,0,c
 11525  012698  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11526  01269A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11527  01269C  0100               	movlb	0	; () banked
 11528  01269E  2B64               	incf	___awmod@counter& (0+255),f,b
 11529  0126A0                     l8016:
 11530                           
 11531                           ; BSR set to: 0
 11532  0126A0  0100               	movlb	0	; () banked
 11533  0126A2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11534  0126A4  D7F7               	goto	l8014
 11535  0126A6                     l8018:
 11536                           
 11537                           ; BSR set to: 0
 11538  0126A6  0100               	movlb	0	; () banked
 11539  0126A8  5162               	movf	___awmod@divisor& (0+255),w,b
 11540  0126AA  0100               	movlb	0	; () banked
 11541  0126AC  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11542  0126AE  0100               	movlb	0	; () banked
 11543  0126B0  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11544  0126B2  0100               	movlb	0	; () banked
 11545  0126B4  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11546  0126B6  A0D8               	btfss	status,0,c
 11547  0126B8  D008               	goto	l8022
 11548                           
 11549                           ; BSR set to: 0
 11550  0126BA  0100               	movlb	0	; () banked
 11551  0126BC  5162               	movf	___awmod@divisor& (0+255),w,b
 11552  0126BE  0100               	movlb	0	; () banked
 11553  0126C0  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11554  0126C2  0100               	movlb	0	; () banked
 11555  0126C4  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11556  0126C6  0100               	movlb	0	; () banked
 11557  0126C8  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11558  0126CA                     l8022:
 11559                           
 11560                           ; BSR set to: 0
 11561  0126CA  0100               	movlb	0	; () banked
 11562  0126CC  90D8               	bcf	status,0,c
 11563  0126CE  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11564  0126D0  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11565                           
 11566                           ; BSR set to: 0
 11567  0126D2  0100               	movlb	0	; () banked
 11568  0126D4  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11569  0126D6  D7E7               	goto	l8018
 11570  0126D8                     l8026:
 11571                           
 11572                           ; BSR set to: 0
 11573  0126D8  0100               	movlb	0	; () banked
 11574  0126DA  5165               	movf	___awmod@sign& (0+255),w,b
 11575  0126DC  0100               	movlb	0	; () banked
 11576  0126DE  B4D8               	btfsc	status,2,c
 11577  0126E0  D005               	goto	l8030
 11578                           
 11579                           ; BSR set to: 0
 11580  0126E2  0100               	movlb	0	; () banked
 11581  0126E4  6D60               	negf	___awmod@dividend& (0+255),b
 11582  0126E6  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11583  0126E8  B0D8               	btfsc	status,0,c
 11584  0126EA  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11585  0126EC                     l8030:
 11586                           
 11587                           ; BSR set to: 0
 11588  0126EC  C060  F060         	movff	___awmod@dividend,?___awmod
 11589  0126F0  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11590  0126F4  0012               	return	
 11591  0126F6                     __end_of___awmod:
 11592                           	opt stack 0
 11593                           tblptru	equ	0xFF8
 11594                           tblptrh	equ	0xFF7
 11595                           tblptrl	equ	0xFF6
 11596                           tablat	equ	0xFF5
 11597                           prodh	equ	0xFF4
 11598                           prodl	equ	0xFF3
 11599                           intcon	equ	0xFF2
 11600                           intcon2	equ	0xFF1
 11601                           indf0	equ	0xFEF
 11602                           postinc0	equ	0xFEE
 11603                           fsr0h	equ	0xFEA
 11604                           fsr0l	equ	0xFE9
 11605                           wreg	equ	0xFE8
 11606                           postinc1	equ	0xFE6
 11607                           postdec1	equ	0xFE5
 11608                           fsr1h	equ	0xFE2
 11609                           fsr1l	equ	0xFE1
 11610                           indf2	equ	0xFDF
 11611                           postinc2	equ	0xFDE
 11612                           postdec2	equ	0xFDD
 11613                           fsr2h	equ	0xFDA
 11614                           fsr2l	equ	0xFD9
 11615                           status	equ	0xFD8
 11616                           
 11617 ;; *************** function ___lmul *****************
 11618 ;; Defined at:
 11619 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;  multiplier      4   13[BANK0 ] unsigned long 
 11622 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;  product         4   21[BANK0 ] unsigned long 
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  4   13[BANK0 ] unsigned long 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11634 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11635 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11637 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11638 ;;Total ram usage:       12 bytes
 11639 ;; Hardware stack levels used:    1
 11640 ;; Hardware stack levels required when called:    4
 11641 ;; This function calls:
 11642 ;;		Nothing
 11643 ;; This function is called by:
 11644 ;;		_get_quot_rem
 11645 ;;		_caltime_to_epoch
 11646 ;;		_light_task
 11647 ;;		_RTCC_adjust_time_inc
 11648 ;;		_RTCC_adjust_time_dec
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text47
 11653  012AAC                     __ptext47:
 11654                           	opt stack 0
 11655  012AAC                     ___lmul:
 11656                           	opt stack 19
 11657                           
 11658                           ; BSR set to: 0
 11659                           ;incstack = 0
 11660  012AAC  0E00               	movlw	0
 11661  012AAE  0100               	movlb	0	; () banked
 11662  012AB0  6F75               	movwf	___lmul@product& (0+255),b
 11663  012AB2  0E00               	movlw	0
 11664  012AB4  6F76               	movwf	(___lmul@product+1)& (0+255),b
 11665  012AB6  0E00               	movlw	0
 11666  012AB8  6F77               	movwf	(___lmul@product+2)& (0+255),b
 11667  012ABA  0E00               	movlw	0
 11668  012ABC  6F78               	movwf	(___lmul@product+3)& (0+255),b
 11669  012ABE                     l8064:
 11670                           
 11671                           ; BSR set to: 0
 11672  012ABE  0100               	movlb	0	; () banked
 11673  012AC0  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 11674  012AC2  D010               	goto	l8068
 11675                           
 11676                           ; BSR set to: 0
 11677  012AC4  0100               	movlb	0	; () banked
 11678  012AC6  5171               	movf	___lmul@multiplicand& (0+255),w,b
 11679  012AC8  0100               	movlb	0	; () banked
 11680  012ACA  2775               	addwf	___lmul@product& (0+255),f,b
 11681  012ACC  0100               	movlb	0	; () banked
 11682  012ACE  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 11683  012AD0  0100               	movlb	0	; () banked
 11684  012AD2  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 11685  012AD4  0100               	movlb	0	; () banked
 11686  012AD6  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 11687  012AD8  0100               	movlb	0	; () banked
 11688  012ADA  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 11689  012ADC  0100               	movlb	0	; () banked
 11690  012ADE  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 11691  012AE0  0100               	movlb	0	; () banked
 11692  012AE2  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 11693  012AE4                     l8068:
 11694                           
 11695                           ; BSR set to: 0
 11696  012AE4  0100               	movlb	0	; () banked
 11697  012AE6  90D8               	bcf	status,0,c
 11698  012AE8  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 11699  012AEA  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 11700  012AEC  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 11701  012AEE  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 11702                           
 11703                           ; BSR set to: 0
 11704  012AF0  0100               	movlb	0	; () banked
 11705  012AF2  90D8               	bcf	status,0,c
 11706  012AF4  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 11707  012AF6  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 11708  012AF8  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 11709  012AFA  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 11710  012AFC  0100               	movlb	0	; () banked
 11711  012AFE  516D               	movf	___lmul@multiplier& (0+255),w,b
 11712  012B00  0100               	movlb	0	; () banked
 11713  012B02  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 11714  012B04  0100               	movlb	0	; () banked
 11715  012B06  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 11716  012B08  0100               	movlb	0	; () banked
 11717  012B0A  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 11718  012B0C  A4D8               	btfss	status,2,c
 11719  012B0E  D7D7               	goto	l8064
 11720                           
 11721                           ; BSR set to: 0
 11722  012B10  C075  F06D         	movff	___lmul@product,?___lmul
 11723  012B14  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 11724  012B18  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 11725  012B1C  C078  F070         	movff	___lmul@product+3,?___lmul+3
 11726                           
 11727                           ; BSR set to: 0
 11728  012B20  0012               	return		;funcret
 11729  012B22                     __end_of___lmul:
 11730                           	opt stack 0
 11731                           tblptru	equ	0xFF8
 11732                           tblptrh	equ	0xFF7
 11733                           tblptrl	equ	0xFF6
 11734                           tablat	equ	0xFF5
 11735                           prodh	equ	0xFF4
 11736                           prodl	equ	0xFF3
 11737                           intcon	equ	0xFF2
 11738                           intcon2	equ	0xFF1
 11739                           indf0	equ	0xFEF
 11740                           postinc0	equ	0xFEE
 11741                           fsr0h	equ	0xFEA
 11742                           fsr0l	equ	0xFE9
 11743                           wreg	equ	0xFE8
 11744                           postinc1	equ	0xFE6
 11745                           postdec1	equ	0xFE5
 11746                           fsr1h	equ	0xFE2
 11747                           fsr1l	equ	0xFE1
 11748                           indf2	equ	0xFDF
 11749                           postinc2	equ	0xFDE
 11750                           postdec2	equ	0xFDD
 11751                           fsr2h	equ	0xFDA
 11752                           fsr2l	equ	0xFD9
 11753                           status	equ	0xFD8
 11754                           
 11755 ;; *************** function _RTCC_to_caltime *****************
 11756 ;; Defined at:
 11757 ;;		line 90 in file "../My_library/My_RTCC.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;  tm              2    1[BANK0 ] PTR struct .
 11760 ;;		 -> now(14), 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;  dumy            1    3[BANK0 ] unsigned char 
 11763 ;; Return value:  Size  Location     Type
 11764 ;;		None               void
 11765 ;; Registers used:
 11766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11775 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11776 ;;Total ram usage:        3 bytes
 11777 ;; Hardware stack levels used:    1
 11778 ;; Hardware stack levels required when called:    5
 11779 ;; This function calls:
 11780 ;;		_x_to_d
 11781 ;; This function is called by:
 11782 ;;		_RTCC_from_RTCC
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           	psect	text48
 11787  0122C2                     __ptext48:
 11788                           	opt stack 0
 11789  0122C2                     _RTCC_to_caltime:
 11790                           	opt stack 19
 11791  0122C2                     l286:
 11792  0122C2  010F               	movlb	15	; () banked
 11793  0122C4  B93F               	btfsc	63,4,b	;volatile
 11794  0122C6  D7FD               	goto	l286
 11795                           
 11796                           ; BSR set to: 15
 11797                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR0 = 1;
 11798  0122C8  010F               	movlb	15	; () banked
 11799  0122CA  813F               	bsf	63,0,b	;volatile
 11800                           
 11801                           ;My_RTCC.c: 94: RTCCFGbits.RTCPTR1 = 1;
 11802  0122CC  010F               	movlb	15	; () banked
 11803  0122CE  833F               	bsf	63,1,b	;volatile
 11804                           
 11805                           ; BSR set to: 15
 11806                           ;My_RTCC.c: 96: tm->YY = x_to_d(RTCVALL);
 11807  0122D0  0100               	movlb	0	; () banked
 11808  0122D2  EE20 F00A          	lfsr	2,10
 11809  0122D6  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11810  0122D8  26D9               	addwf	fsr2l,f,c
 11811  0122DA  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11812  0122DC  22DA               	addwfc	fsr2h,f,c
 11813  0122DE  010F               	movlb	15	; () banked
 11814  0122E0  513A               	movf	58,w,b	;volatile
 11815  0122E2  EC13  F098         	call	_x_to_d
 11816  0122E6  6EDF               	movwf	indf2,c
 11817                           
 11818                           ;My_RTCC.c: 97: uint8_t dumy = RTCVALH;
 11819  0122E8  CF3B F063          	movff	3899,RTCC_to_caltime@dumy	;volatile
 11820                           
 11821                           ;My_RTCC.c: 98: tm->DD = x_to_d(RTCVALL);
 11822  0122EC  0100               	movlb	0	; () banked
 11823  0122EE  EE20 F008          	lfsr	2,8
 11824  0122F2  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11825  0122F4  26D9               	addwf	fsr2l,f,c
 11826  0122F6  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11827  0122F8  22DA               	addwfc	fsr2h,f,c
 11828  0122FA  010F               	movlb	15	; () banked
 11829  0122FC  513A               	movf	58,w,b	;volatile
 11830  0122FE  EC13  F098         	call	_x_to_d
 11831  012302  6EDF               	movwf	indf2,c
 11832                           
 11833                           ;My_RTCC.c: 99: tm->MM = x_to_d(RTCVALH);
 11834  012304  0100               	movlb	0	; () banked
 11835  012306  EE20 F009          	lfsr	2,9
 11836  01230A  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11837  01230C  26D9               	addwf	fsr2l,f,c
 11838  01230E  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11839  012310  22DA               	addwfc	fsr2h,f,c
 11840  012312  010F               	movlb	15	; () banked
 11841  012314  513B               	movf	59,w,b	;volatile
 11842  012316  EC13  F098         	call	_x_to_d
 11843  01231A  6EDF               	movwf	indf2,c
 11844                           
 11845                           ;My_RTCC.c: 100: tm->hh = x_to_d(RTCVALL);
 11846  01231C  0100               	movlb	0	; () banked
 11847  01231E  EE20 F006          	lfsr	2,6
 11848  012322  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11849  012324  26D9               	addwf	fsr2l,f,c
 11850  012326  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11851  012328  22DA               	addwfc	fsr2h,f,c
 11852  01232A  010F               	movlb	15	; () banked
 11853  01232C  513A               	movf	58,w,b	;volatile
 11854  01232E  EC13  F098         	call	_x_to_d
 11855  012332  6EDF               	movwf	indf2,c
 11856                           
 11857                           ;My_RTCC.c: 101: tm->EE = x_to_d(RTCVALH);
 11858  012334  0100               	movlb	0	; () banked
 11859  012336  EE20 F007          	lfsr	2,7
 11860  01233A  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11861  01233C  26D9               	addwf	fsr2l,f,c
 11862  01233E  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11863  012340  22DA               	addwfc	fsr2h,f,c
 11864  012342  010F               	movlb	15	; () banked
 11865  012344  513B               	movf	59,w,b	;volatile
 11866  012346  EC13  F098         	call	_x_to_d
 11867  01234A  6EDF               	movwf	indf2,c
 11868                           
 11869                           ;My_RTCC.c: 102: tm->ss = x_to_d(RTCVALL);
 11870  01234C  0100               	movlb	0	; () banked
 11871  01234E  EE20 F004          	lfsr	2,4
 11872  012352  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11873  012354  26D9               	addwf	fsr2l,f,c
 11874  012356  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11875  012358  22DA               	addwfc	fsr2h,f,c
 11876  01235A  010F               	movlb	15	; () banked
 11877  01235C  513A               	movf	58,w,b	;volatile
 11878  01235E  EC13  F098         	call	_x_to_d
 11879  012362  6EDF               	movwf	indf2,c
 11880                           
 11881                           ;My_RTCC.c: 103: tm->mm = x_to_d(RTCVALH);
 11882  012364  0100               	movlb	0	; () banked
 11883  012366  EE20 F005          	lfsr	2,5
 11884  01236A  5161               	movf	RTCC_to_caltime@tm& (0+255),w,b
 11885  01236C  26D9               	addwf	fsr2l,f,c
 11886  01236E  5162               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 11887  012370  22DA               	addwfc	fsr2h,f,c
 11888  012372  010F               	movlb	15	; () banked
 11889  012374  513B               	movf	59,w,b	;volatile
 11890  012376  EC13  F098         	call	_x_to_d
 11891  01237A  6EDF               	movwf	indf2,c
 11892  01237C  0012               	return		;funcret
 11893  01237E                     __end_of_RTCC_to_caltime:
 11894                           	opt stack 0
 11895                           tblptru	equ	0xFF8
 11896                           tblptrh	equ	0xFF7
 11897                           tblptrl	equ	0xFF6
 11898                           tablat	equ	0xFF5
 11899                           prodh	equ	0xFF4
 11900                           prodl	equ	0xFF3
 11901                           intcon	equ	0xFF2
 11902                           intcon2	equ	0xFF1
 11903                           indf0	equ	0xFEF
 11904                           postinc0	equ	0xFEE
 11905                           fsr0h	equ	0xFEA
 11906                           fsr0l	equ	0xFE9
 11907                           wreg	equ	0xFE8
 11908                           postinc1	equ	0xFE6
 11909                           postdec1	equ	0xFE5
 11910                           fsr1h	equ	0xFE2
 11911                           fsr1l	equ	0xFE1
 11912                           indf2	equ	0xFDF
 11913                           postinc2	equ	0xFDE
 11914                           postdec2	equ	0xFDD
 11915                           fsr2h	equ	0xFDA
 11916                           fsr2l	equ	0xFD9
 11917                           status	equ	0xFD8
 11918                           
 11919 ;; *************** function _x_to_d *****************
 11920 ;; Defined at:
 11921 ;;		line 52 in file "../My_library/My_RTCC.c"
 11922 ;; Parameters:    Size  Location     Type
 11923 ;;  hex             1    wreg     unsigned char 
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;  hex             1    0[BANK0 ] unsigned char 
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  1    wreg      unsigned char 
 11928 ;; Registers used:
 11929 ;;		wreg, status,2, status,0, prodl, prodh
 11930 ;; Tracked objects:
 11931 ;;		On entry : 0/0
 11932 ;;		On exit  : 0/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11938 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11939 ;;Total ram usage:        2 bytes
 11940 ;; Hardware stack levels used:    1
 11941 ;; Hardware stack levels required when called:    4
 11942 ;; This function calls:
 11943 ;;		Nothing
 11944 ;; This function is called by:
 11945 ;;		_RTCC_to_caltime
 11946 ;; This function uses a non-reentrant model
 11947 ;;
 11948                           
 11949                           	psect	text49
 11950  013026                     __ptext49:
 11951                           	opt stack 0
 11952  013026                     _x_to_d:
 11953                           	opt stack 19
 11954                           
 11955                           ;incstack = 0
 11956                           ;x_to_d@hex stored from wreg
 11957  013026  0100               	movlb	0	; () banked
 11958  013028  6F60               	movwf	x_to_d@hex& (0+255),b
 11959                           
 11960                           ;My_RTCC.c: 53: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 11961  01302A  C060  F020         	movff	x_to_d@hex,??_x_to_d
 11962  01302E  0E0F               	movlw	15
 11963  013030  1620               	andwf	??_x_to_d,f,c
 11964  013032  0100               	movlb	0	; () banked
 11965  013034  3960               	swapf	x_to_d@hex& (0+255),w,b
 11966  013036  0B0F               	andlw	15
 11967  013038  0B0F               	andlw	15
 11968  01303A  0D0A               	mullw	10
 11969  01303C  50F3               	movf	prodl,w,c
 11970  01303E  2420               	addwf	??_x_to_d,w,c
 11971  013040  0012               	return	
 11972  013042                     __end_of_x_to_d:
 11973                           	opt stack 0
 11974                           tblptru	equ	0xFF8
 11975                           tblptrh	equ	0xFF7
 11976                           tblptrl	equ	0xFF6
 11977                           tablat	equ	0xFF5
 11978                           prodh	equ	0xFF4
 11979                           prodl	equ	0xFF3
 11980                           intcon	equ	0xFF2
 11981                           intcon2	equ	0xFF1
 11982                           indf0	equ	0xFEF
 11983                           postinc0	equ	0xFEE
 11984                           fsr0h	equ	0xFEA
 11985                           fsr0l	equ	0xFE9
 11986                           wreg	equ	0xFE8
 11987                           postinc1	equ	0xFE6
 11988                           postdec1	equ	0xFE5
 11989                           fsr1h	equ	0xFE2
 11990                           fsr1l	equ	0xFE1
 11991                           indf2	equ	0xFDF
 11992                           postinc2	equ	0xFDE
 11993                           postdec2	equ	0xFDD
 11994                           fsr2h	equ	0xFDA
 11995                           fsr2l	equ	0xFD9
 11996                           status	equ	0xFD8
 11997                           
 11998 ;; *************** function _ISR *****************
 11999 ;; Defined at:
 12000 ;;		line 61 in file "PIC18F27J53-killifish_light05.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;		None
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;		None
 12005 ;; Return value:  Size  Location     Type
 12006 ;;		None               void
 12007 ;; Registers used:
 12008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12016 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12017 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12018 ;;Total ram usage:       15 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    3
 12021 ;; This function calls:
 12022 ;;		_UART_ISR
 12023 ;;		_button_timer_interrupt
 12024 ;; This function is called by:
 12025 ;;		Interrupt level 2
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           	psect	intcode
 12030  000008                     __pintcode:
 12031                           	opt stack 0
 12032  000008                     _ISR:
 12033                           	opt stack 18
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;incstack = 0
 12037  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12038  00000A  CFFA F012          	movff	pclath,??_ISR+1
 12039  00000E  CFFB F013          	movff	pclatu,??_ISR+2
 12040  000012  CFE9 F014          	movff	fsr0l,??_ISR+3
 12041  000016  CFEA F015          	movff	fsr0h,??_ISR+4
 12042  00001A  CFE1 F016          	movff	fsr1l,??_ISR+5
 12043  00001E  CFE2 F017          	movff	fsr1h,??_ISR+6
 12044  000022  CFD9 F018          	movff	fsr2l,??_ISR+7
 12045  000026  CFDA F019          	movff	fsr2h,??_ISR+8
 12046  00002A  CFF3 F01A          	movff	prodl,??_ISR+9
 12047  00002E  CFF4 F01B          	movff	prodh,??_ISR+10
 12048  000032  CFF6 F01C          	movff	tblptrl,??_ISR+11
 12049  000036  CFF7 F01D          	movff	tblptrh,??_ISR+12
 12050  00003A  CFF8 F01E          	movff	tblptru,??_ISR+13
 12051  00003E  CFF5 F01F          	movff	tablat,??_ISR+14
 12052                           
 12053                           ;PIC18F27J53-killifish_light05.c: 62: UART_ISR();
 12054  000042  EC0A  F097         	call	_UART_ISR	;wreg free
 12055                           
 12056                           ;PIC18F27J53-killifish_light05.c: 63: if (INTCONbits.T0IF) {
 12057  000046  B4F2               	btfsc	intcon,2,c	;volatile
 12058                           
 12059                           ;PIC18F27J53-killifish_light05.c: 64: INTCONbits.T0IF = 0;
 12060  000048  94F2               	bcf	intcon,2,c	;volatile
 12061                           
 12062                           ;PIC18F27J53-killifish_light05.c: 65: }
 12063                           ;PIC18F27J53-killifish_light05.c: 66: if (PIR1bits.TMR1IF) {
 12064  00004A  A09E               	btfss	3998,0,c	;volatile
 12065  00004C  D010               	goto	i2l9380
 12066                           
 12067                           ;PIC18F27J53-killifish_light05.c: 67: PIR1bits.TMR1IF = 0;
 12068  00004E  909E               	bcf	3998,0,c	;volatile
 12069                           
 12070                           ;PIC18F27J53-killifish_light05.c: 68: TMR1H = 0x80;
 12071  000050  0E80               	movlw	128
 12072  000052  6ECF               	movwf	4047,c	;volatile
 12073                           
 12074                           ;PIC18F27J53-killifish_light05.c: 69: LATBbits.LATB5 = !LATBbits.LATB5;
 12075  000054  BA8A               	btfsc	3978,5,c	;volatile
 12076  000056  D003               	goto	i2u1006_40
 12077  000058  6A11               	clrf	??_ISR& (0+255),c
 12078  00005A  2A11               	incf	??_ISR& (0+255),f,c
 12079  00005C  D001               	goto	i2u1007_48
 12080  00005E                     i2u1006_40:
 12081  00005E  6A11               	clrf	??_ISR& (0+255),c
 12082  000060                     i2u1007_48:
 12083  000060  3A11               	swapf	??_ISR,f,c
 12084  000062  4611               	rlncf	??_ISR,f,c
 12085  000064  508A               	movf	3978,w,c	;volatile
 12086  000066  1811               	xorwf	??_ISR,w,c
 12087  000068  0BDF               	andlw	-33
 12088  00006A  1811               	xorwf	??_ISR,w,c
 12089  00006C  6E8A               	movwf	3978,c	;volatile
 12090  00006E                     i2l9380:
 12091                           
 12092                           ;PIC18F27J53-killifish_light05.c: 70: }
 12093                           ;PIC18F27J53-killifish_light05.c: 71: if (PIR2bits.TMR3IF) {
 12094  00006E  A2A1               	btfss	4001,1,c	;volatile
 12095  000070  D028               	goto	i2l729
 12096                           
 12097                           ;PIC18F27J53-killifish_light05.c: 72: PIR2bits.TMR3IF = 0;
 12098  000072  92A1               	bcf	4001,1,c	;volatile
 12099                           
 12100                           ;PIC18F27J53-killifish_light05.c: 73: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 12101  000074  0E90               	movlw	low _sw_R
 12102  000076  6E01               	movwf	button_timer_interrupt@bt,c
 12103  000078  0E01               	movlw	high _sw_R
 12104  00007A  6E02               	movwf	button_timer_interrupt@bt+1,c
 12105  00007C  BA80               	btfsc	3968,5,c	;volatile
 12106  00007E  D002               	goto	i2u1009_40
 12107  000080  0E01               	movlw	1
 12108  000082  D001               	goto	i2u1010_40
 12109  000084                     i2u1009_40:
 12110  000084  0E00               	movlw	0
 12111  000086                     i2u1010_40:
 12112  000086  6E03               	movwf	button_timer_interrupt@sw_value,c
 12113  000088  EC8B  F089         	call	_button_timer_interrupt	;wreg free
 12114                           
 12115                           ;PIC18F27J53-killifish_light05.c: 74: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 12116  00008C  0E8C               	movlw	low _sw_G
 12117  00008E  6E01               	movwf	button_timer_interrupt@bt,c
 12118  000090  0E01               	movlw	high _sw_G
 12119  000092  6E02               	movwf	button_timer_interrupt@bt+1,c
 12120  000094  BC80               	btfsc	3968,6,c	;volatile
 12121  000096  D002               	goto	i2u1011_40
 12122  000098  0E01               	movlw	1
 12123  00009A  D001               	goto	i2u1012_40
 12124  00009C                     i2u1011_40:
 12125  00009C  0E00               	movlw	0
 12126  00009E                     i2u1012_40:
 12127  00009E  6E03               	movwf	button_timer_interrupt@sw_value,c
 12128  0000A0  EC8B  F089         	call	_button_timer_interrupt	;wreg free
 12129                           
 12130                           ;PIC18F27J53-killifish_light05.c: 75: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 12131  0000A4  0E88               	movlw	low _sw_B
 12132  0000A6  6E01               	movwf	button_timer_interrupt@bt,c
 12133  0000A8  0E01               	movlw	high _sw_B
 12134  0000AA  6E02               	movwf	button_timer_interrupt@bt+1,c
 12135  0000AC  BE80               	btfsc	3968,7,c	;volatile
 12136  0000AE  D002               	goto	i2u1013_40
 12137  0000B0  0E01               	movlw	1
 12138  0000B2  D001               	goto	i2u1014_40
 12139  0000B4                     i2u1013_40:
 12140  0000B4  0E00               	movlw	0
 12141  0000B6                     i2u1014_40:
 12142  0000B6  6E03               	movwf	button_timer_interrupt@sw_value,c
 12143  0000B8  EC8B  F089         	call	_button_timer_interrupt	;wreg free
 12144                           
 12145                           ;PIC18F27J53-killifish_light05.c: 76: ADC_flag = 1;
 12146  0000BC  0E01               	movlw	1
 12147  0000BE  0101               	movlb	1	; () banked
 12148  0000C0  6F26               	movwf	_ADC_flag& (0+255),b
 12149  0000C2                     i2l729:
 12150  0000C2  C01F  FFF5         	movff	??_ISR+14,tablat
 12151  0000C6  C01E  FFF8         	movff	??_ISR+13,tblptru
 12152  0000CA  C01D  FFF7         	movff	??_ISR+12,tblptrh
 12153  0000CE  C01C  FFF6         	movff	??_ISR+11,tblptrl
 12154  0000D2  C01B  FFF4         	movff	??_ISR+10,prodh
 12155  0000D6  C01A  FFF3         	movff	??_ISR+9,prodl
 12156  0000DA  C019  FFDA         	movff	??_ISR+8,fsr2h
 12157  0000DE  C018  FFD9         	movff	??_ISR+7,fsr2l
 12158  0000E2  C017  FFE2         	movff	??_ISR+6,fsr1h
 12159  0000E6  C016  FFE1         	movff	??_ISR+5,fsr1l
 12160  0000EA  C015  FFEA         	movff	??_ISR+4,fsr0h
 12161  0000EE  C014  FFE9         	movff	??_ISR+3,fsr0l
 12162  0000F2  C013  FFFB         	movff	??_ISR+2,pclatu
 12163  0000F6  C012  FFFA         	movff	??_ISR+1,pclath
 12164  0000FA  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12165  0000FC  0011               	retfie		f
 12166  0000FE                     __end_of_ISR:
 12167                           	opt stack 0
 12168                           pclatu	equ	0xFFB
 12169                           pclath	equ	0xFFA
 12170                           tblptru	equ	0xFF8
 12171                           tblptrh	equ	0xFF7
 12172                           tblptrl	equ	0xFF6
 12173                           tablat	equ	0xFF5
 12174                           prodh	equ	0xFF4
 12175                           prodl	equ	0xFF3
 12176                           intcon	equ	0xFF2
 12177                           intcon2	equ	0xFF1
 12178                           indf0	equ	0xFEF
 12179                           postinc0	equ	0xFEE
 12180                           fsr0h	equ	0xFEA
 12181                           fsr0l	equ	0xFE9
 12182                           wreg	equ	0xFE8
 12183                           postinc1	equ	0xFE6
 12184                           postdec1	equ	0xFE5
 12185                           fsr1h	equ	0xFE2
 12186                           fsr1l	equ	0xFE1
 12187                           indf2	equ	0xFDF
 12188                           postinc2	equ	0xFDE
 12189                           postdec2	equ	0xFDD
 12190                           fsr2h	equ	0xFDA
 12191                           fsr2l	equ	0xFD9
 12192                           status	equ	0xFD8
 12193                           
 12194 ;; *************** function _button_timer_interrupt *****************
 12195 ;; Defined at:
 12196 ;;		line 3 in file "../My_library/My_button.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;  bt              2    0[COMRAM] PTR struct button
 12199 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 12200 ;;  sw_value        1    2[COMRAM] unsigned char 
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;		None
 12203 ;; Return value:  Size  Location     Type
 12204 ;;		None               void
 12205 ;; Registers used:
 12206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12207 ;; Tracked objects:
 12208 ;;		On entry : 0/0
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12212 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12215 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12216 ;;Total ram usage:        5 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; This function calls:
 12219 ;;		Nothing
 12220 ;; This function is called by:
 12221 ;;		_ISR
 12222 ;; This function uses a non-reentrant model
 12223 ;;
 12224                           
 12225                           	psect	text51
 12226  011316                     __ptext51:
 12227                           	opt stack 0
 12228  011316                     _button_timer_interrupt:
 12229                           	opt stack 20
 12230                           
 12231                           ;My_button.c: 4: if (sw_value) {
 12232                           
 12233                           ;incstack = 0
 12234  011316  5003               	movf	button_timer_interrupt@sw_value,w,c
 12235  011318  B4D8               	btfsc	status,2,c
 12236  01131A  D098               	goto	i2l6310
 12237                           
 12238                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 12239  01131C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12240  011320  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12241  011324  0E84               	movlw	132
 12242  011326  18DE               	xorwf	postinc2,w,c
 12243  011328  E10B               	bnz	i2l4
 12244  01132A  0E03               	movlw	3
 12245  01132C  18DE               	xorwf	postinc2,w,c
 12246  01132E  A4D8               	btfss	status,2,c
 12247  011330  D007               	goto	i2l4
 12248  011332  EE20 F003          	lfsr	2,3
 12249  011336  5001               	movf	button_timer_interrupt@bt,w,c
 12250  011338  26D9               	addwf	fsr2l,f,c
 12251  01133A  5002               	movf	button_timer_interrupt@bt+1,w,c
 12252  01133C  22DA               	addwfc	fsr2h,f,c
 12253  01133E  8EDF               	bsf	indf2,7,c
 12254  011340                     i2l4:
 12255                           
 12256                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 12257  011340  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12258  011344  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12259  011348  0EBC               	movlw	188
 12260  01134A  18DE               	xorwf	postinc2,w,c
 12261  01134C  E10B               	bnz	i2l5
 12262  01134E  0E02               	movlw	2
 12263  011350  18DE               	xorwf	postinc2,w,c
 12264  011352  A4D8               	btfss	status,2,c
 12265  011354  D007               	goto	i2l5
 12266  011356  EE20 F003          	lfsr	2,3
 12267  01135A  5001               	movf	button_timer_interrupt@bt,w,c
 12268  01135C  26D9               	addwf	fsr2l,f,c
 12269  01135E  5002               	movf	button_timer_interrupt@bt+1,w,c
 12270  011360  22DA               	addwfc	fsr2h,f,c
 12271  011362  8CDF               	bsf	indf2,6,c
 12272  011364                     i2l5:
 12273                           
 12274                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 12275  011364  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12276  011368  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12277  01136C  0EF4               	movlw	244
 12278  01136E  18DE               	xorwf	postinc2,w,c
 12279  011370  E10A               	bnz	i2l6
 12280  011372  04DE               	decf	postinc2,w,c
 12281  011374  A4D8               	btfss	status,2,c
 12282  011376  D007               	goto	i2l6
 12283  011378  EE20 F003          	lfsr	2,3
 12284  01137C  5001               	movf	button_timer_interrupt@bt,w,c
 12285  01137E  26D9               	addwf	fsr2l,f,c
 12286  011380  5002               	movf	button_timer_interrupt@bt+1,w,c
 12287  011382  22DA               	addwfc	fsr2h,f,c
 12288  011384  8ADF               	bsf	indf2,5,c
 12289  011386                     i2l6:
 12290                           
 12291                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 12292  011386  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12293  01138A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12294  01138E  0E2C               	movlw	44
 12295  011390  18DE               	xorwf	postinc2,w,c
 12296  011392  E10A               	bnz	i2l7
 12297  011394  04DE               	decf	postinc2,w,c
 12298  011396  A4D8               	btfss	status,2,c
 12299  011398  D007               	goto	i2l7
 12300  01139A  EE20 F003          	lfsr	2,3
 12301  01139E  5001               	movf	button_timer_interrupt@bt,w,c
 12302  0113A0  26D9               	addwf	fsr2l,f,c
 12303  0113A2  5002               	movf	button_timer_interrupt@bt+1,w,c
 12304  0113A4  22DA               	addwfc	fsr2h,f,c
 12305  0113A6  88DF               	bsf	indf2,4,c
 12306  0113A8                     i2l7:
 12307                           
 12308                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 12309  0113A8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12310  0113AC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12311  0113B0  0E96               	movlw	150
 12312  0113B2  18DE               	xorwf	postinc2,w,c
 12313  0113B4  10DE               	iorwf	postinc2,w,c
 12314  0113B6  A4D8               	btfss	status,2,c
 12315  0113B8  D007               	goto	i2l8
 12316  0113BA  EE20 F003          	lfsr	2,3
 12317  0113BE  5001               	movf	button_timer_interrupt@bt,w,c
 12318  0113C0  26D9               	addwf	fsr2l,f,c
 12319  0113C2  5002               	movf	button_timer_interrupt@bt+1,w,c
 12320  0113C4  22DA               	addwfc	fsr2h,f,c
 12321  0113C6  86DF               	bsf	indf2,3,c
 12322  0113C8                     i2l8:
 12323                           
 12324                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 12325  0113C8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12326  0113CC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12327  0113D0  0E3C               	movlw	60
 12328  0113D2  18DE               	xorwf	postinc2,w,c
 12329  0113D4  10DE               	iorwf	postinc2,w,c
 12330  0113D6  A4D8               	btfss	status,2,c
 12331  0113D8  D007               	goto	i2l9
 12332  0113DA  EE20 F003          	lfsr	2,3
 12333  0113DE  5001               	movf	button_timer_interrupt@bt,w,c
 12334  0113E0  26D9               	addwf	fsr2l,f,c
 12335  0113E2  5002               	movf	button_timer_interrupt@bt+1,w,c
 12336  0113E4  22DA               	addwfc	fsr2h,f,c
 12337  0113E6  84DF               	bsf	indf2,2,c
 12338  0113E8                     i2l9:
 12339                           
 12340                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 12341  0113E8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12342  0113EC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12343  0113F0  0E10               	movlw	16
 12344  0113F2  18DE               	xorwf	postinc2,w,c
 12345  0113F4  10DE               	iorwf	postinc2,w,c
 12346  0113F6  A4D8               	btfss	status,2,c
 12347  0113F8  D007               	goto	i2l10
 12348  0113FA  EE20 F003          	lfsr	2,3
 12349  0113FE  5001               	movf	button_timer_interrupt@bt,w,c
 12350  011400  26D9               	addwf	fsr2l,f,c
 12351  011402  5002               	movf	button_timer_interrupt@bt+1,w,c
 12352  011404  22DA               	addwfc	fsr2h,f,c
 12353  011406  82DF               	bsf	indf2,1,c
 12354  011408                     i2l10:
 12355                           
 12356                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 12357  011408  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12358  01140C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12359  011410  0E02               	movlw	2
 12360  011412  18DE               	xorwf	postinc2,w,c
 12361  011414  10DE               	iorwf	postinc2,w,c
 12362  011416  A4D8               	btfss	status,2,c
 12363  011418  D007               	goto	i2l11
 12364  01141A  EE20 F003          	lfsr	2,3
 12365  01141E  5001               	movf	button_timer_interrupt@bt,w,c
 12366  011420  26D9               	addwf	fsr2l,f,c
 12367  011422  5002               	movf	button_timer_interrupt@bt+1,w,c
 12368  011424  22DA               	addwfc	fsr2h,f,c
 12369  011426  80DF               	bsf	indf2,0,c
 12370  011428                     i2l11:
 12371                           
 12372                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 12373  011428  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12374  01142C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12375  011430  0E85               	movlw	133
 12376  011432  5CDE               	subwf	postinc2,w,c
 12377  011434  0E03               	movlw	3
 12378  011436  58DE               	subwfb	postinc2,w,c
 12379  011438  B0D8               	btfsc	status,0,c
 12380  01143A  0012               	return	
 12381  01143C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12382  011440  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12383  011444  2ADE               	incf	postinc2,f,c
 12384  011446  0E00               	movlw	0
 12385  011448  22DD               	addwfc	postdec2,f,c
 12386                           
 12387                           ;My_button.c: 14: } else {
 12388  01144A  0012               	return	
 12389  01144C                     i2l6310:
 12390                           
 12391                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 12392  01144C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12393  011450  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12394  011454  0E84               	movlw	132
 12395  011456  5CDE               	subwf	postinc2,w,c
 12396  011458  0E03               	movlw	3
 12397  01145A  58DE               	subwfb	postinc2,w,c
 12398  01145C  A0D8               	btfss	status,0,c
 12399  01145E  D008               	goto	i2l6314
 12400  011460  EE20 F002          	lfsr	2,2
 12401  011464  5001               	movf	button_timer_interrupt@bt,w,c
 12402  011466  26D9               	addwf	fsr2l,f,c
 12403  011468  5002               	movf	button_timer_interrupt@bt+1,w,c
 12404  01146A  22DA               	addwfc	fsr2h,f,c
 12405  01146C  8EDF               	bsf	indf2,7,c
 12406  01146E  D081               	goto	i2l6342
 12407  011470                     i2l6314:
 12408                           
 12409                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 12410  011470  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12411  011474  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12412  011478  0EBC               	movlw	188
 12413  01147A  5CDE               	subwf	postinc2,w,c
 12414  01147C  0E02               	movlw	2
 12415  01147E  58DE               	subwfb	postinc2,w,c
 12416  011480  A0D8               	btfss	status,0,c
 12417  011482  D008               	goto	i2l6318
 12418  011484  EE20 F002          	lfsr	2,2
 12419  011488  5001               	movf	button_timer_interrupt@bt,w,c
 12420  01148A  26D9               	addwf	fsr2l,f,c
 12421  01148C  5002               	movf	button_timer_interrupt@bt+1,w,c
 12422  01148E  22DA               	addwfc	fsr2h,f,c
 12423  011490  8CDF               	bsf	indf2,6,c
 12424  011492  D06F               	goto	i2l6342
 12425  011494                     i2l6318:
 12426                           
 12427                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 12428  011494  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12429  011498  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12430  01149C  0EF4               	movlw	244
 12431  01149E  5CDE               	subwf	postinc2,w,c
 12432  0114A0  0E01               	movlw	1
 12433  0114A2  58DE               	subwfb	postinc2,w,c
 12434  0114A4  A0D8               	btfss	status,0,c
 12435  0114A6  D008               	goto	i2l6322
 12436  0114A8  EE20 F002          	lfsr	2,2
 12437  0114AC  5001               	movf	button_timer_interrupt@bt,w,c
 12438  0114AE  26D9               	addwf	fsr2l,f,c
 12439  0114B0  5002               	movf	button_timer_interrupt@bt+1,w,c
 12440  0114B2  22DA               	addwfc	fsr2h,f,c
 12441  0114B4  8ADF               	bsf	indf2,5,c
 12442  0114B6  D05D               	goto	i2l6342
 12443  0114B8                     i2l6322:
 12444                           
 12445                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 12446  0114B8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12447  0114BC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12448  0114C0  0E2C               	movlw	44
 12449  0114C2  5CDE               	subwf	postinc2,w,c
 12450  0114C4  0E01               	movlw	1
 12451  0114C6  58DE               	subwfb	postinc2,w,c
 12452  0114C8  A0D8               	btfss	status,0,c
 12453  0114CA  D008               	goto	i2l6326
 12454  0114CC  EE20 F002          	lfsr	2,2
 12455  0114D0  5001               	movf	button_timer_interrupt@bt,w,c
 12456  0114D2  26D9               	addwf	fsr2l,f,c
 12457  0114D4  5002               	movf	button_timer_interrupt@bt+1,w,c
 12458  0114D6  22DA               	addwfc	fsr2h,f,c
 12459  0114D8  88DF               	bsf	indf2,4,c
 12460  0114DA  D04B               	goto	i2l6342
 12461  0114DC                     i2l6326:
 12462                           
 12463                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 12464  0114DC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12465  0114E0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12466  0114E4  0E01               	movlw	1
 12467  0114E6  50DB               	movf	plusw2,w,c
 12468  0114E8  E104               	bnz	i2u578_40
 12469  0114EA  0E96               	movlw	150
 12470  0114EC  5CDE               	subwf	postinc2,w,c
 12471  0114EE  A0D8               	btfss	status,0,c
 12472  0114F0  D008               	goto	i2l6330
 12473  0114F2                     i2u578_40:
 12474  0114F2  EE20 F002          	lfsr	2,2
 12475  0114F6  5001               	movf	button_timer_interrupt@bt,w,c
 12476  0114F8  26D9               	addwf	fsr2l,f,c
 12477  0114FA  5002               	movf	button_timer_interrupt@bt+1,w,c
 12478  0114FC  22DA               	addwfc	fsr2h,f,c
 12479  0114FE  86DF               	bsf	indf2,3,c
 12480  011500  D038               	goto	i2l6342
 12481  011502                     i2l6330:
 12482                           
 12483                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 12484  011502  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12485  011506  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12486  01150A  0E01               	movlw	1
 12487  01150C  50DB               	movf	plusw2,w,c
 12488  01150E  E104               	bnz	i2u579_40
 12489  011510  0E3C               	movlw	60
 12490  011512  5CDE               	subwf	postinc2,w,c
 12491  011514  A0D8               	btfss	status,0,c
 12492  011516  D008               	goto	i2l6334
 12493  011518                     i2u579_40:
 12494  011518  EE20 F002          	lfsr	2,2
 12495  01151C  5001               	movf	button_timer_interrupt@bt,w,c
 12496  01151E  26D9               	addwf	fsr2l,f,c
 12497  011520  5002               	movf	button_timer_interrupt@bt+1,w,c
 12498  011522  22DA               	addwfc	fsr2h,f,c
 12499  011524  84DF               	bsf	indf2,2,c
 12500  011526  D025               	goto	i2l6342
 12501  011528                     i2l6334:
 12502                           
 12503                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 12504  011528  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12505  01152C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12506  011530  0E01               	movlw	1
 12507  011532  50DB               	movf	plusw2,w,c
 12508  011534  E104               	bnz	i2u580_40
 12509  011536  0E10               	movlw	16
 12510  011538  5CDE               	subwf	postinc2,w,c
 12511  01153A  A0D8               	btfss	status,0,c
 12512  01153C  D008               	goto	i2l6338
 12513  01153E                     i2u580_40:
 12514  01153E  EE20 F002          	lfsr	2,2
 12515  011542  5001               	movf	button_timer_interrupt@bt,w,c
 12516  011544  26D9               	addwf	fsr2l,f,c
 12517  011546  5002               	movf	button_timer_interrupt@bt+1,w,c
 12518  011548  22DA               	addwfc	fsr2h,f,c
 12519  01154A  82DF               	bsf	indf2,1,c
 12520  01154C  D012               	goto	i2l6342
 12521  01154E                     i2l6338:
 12522                           
 12523                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 12524  01154E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12525  011552  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12526  011556  0E01               	movlw	1
 12527  011558  50DB               	movf	plusw2,w,c
 12528  01155A  E104               	bnz	i2u581_40
 12529  01155C  0E02               	movlw	2
 12530  01155E  5CDE               	subwf	postinc2,w,c
 12531  011560  A0D8               	btfss	status,0,c
 12532  011562  D007               	goto	i2l6342
 12533  011564                     i2u581_40:
 12534  011564  EE20 F002          	lfsr	2,2
 12535  011568  5001               	movf	button_timer_interrupt@bt,w,c
 12536  01156A  26D9               	addwf	fsr2l,f,c
 12537  01156C  5002               	movf	button_timer_interrupt@bt+1,w,c
 12538  01156E  22DA               	addwfc	fsr2h,f,c
 12539  011570  80DF               	bsf	indf2,0,c
 12540  011572                     i2l6342:
 12541                           
 12542                           ;My_button.c: 23: bt->cnt_sw = 0;
 12543  011572  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12544  011576  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12545  01157A  0E00               	movlw	0
 12546  01157C  6EDE               	movwf	postinc2,c
 12547  01157E  0E00               	movlw	0
 12548  011580  6EDD               	movwf	postdec2,c
 12549                           
 12550                           ;My_button.c: 24: bt->flags &= 0x00FF;
 12551  011582  EE20 F002          	lfsr	2,2
 12552  011586  5001               	movf	button_timer_interrupt@bt,w,c
 12553  011588  26D9               	addwf	fsr2l,f,c
 12554  01158A  5002               	movf	button_timer_interrupt@bt+1,w,c
 12555  01158C  22DA               	addwfc	fsr2h,f,c
 12556  01158E  0EFF               	movlw	255
 12557  011590  16DE               	andwf	postinc2,f,c
 12558  011592  0E00               	movlw	0
 12559  011594  16DD               	andwf	postdec2,f,c
 12560  011596  0012               	return	
 12561  011598                     __end_of_button_timer_interrupt:
 12562                           	opt stack 0
 12563                           pclatu	equ	0xFFB
 12564                           pclath	equ	0xFFA
 12565                           tblptru	equ	0xFF8
 12566                           tblptrh	equ	0xFF7
 12567                           tblptrl	equ	0xFF6
 12568                           tablat	equ	0xFF5
 12569                           prodh	equ	0xFF4
 12570                           prodl	equ	0xFF3
 12571                           intcon	equ	0xFF2
 12572                           intcon2	equ	0xFF1
 12573                           indf0	equ	0xFEF
 12574                           postinc0	equ	0xFEE
 12575                           fsr0h	equ	0xFEA
 12576                           fsr0l	equ	0xFE9
 12577                           wreg	equ	0xFE8
 12578                           postinc1	equ	0xFE6
 12579                           postdec1	equ	0xFE5
 12580                           fsr1h	equ	0xFE2
 12581                           fsr1l	equ	0xFE1
 12582                           indf2	equ	0xFDF
 12583                           postinc2	equ	0xFDE
 12584                           postdec2	equ	0xFDD
 12585                           plusw2	equ	0xFDB
 12586                           fsr2h	equ	0xFDA
 12587                           fsr2l	equ	0xFD9
 12588                           status	equ	0xFD8
 12589                           
 12590 ;; *************** function _UART_ISR *****************
 12591 ;; Defined at:
 12592 ;;		line 26 in file "../My_library/My_UART.c"
 12593 ;; Parameters:    Size  Location     Type
 12594 ;;		None
 12595 ;; Auto vars:     Size  Location     Type
 12596 ;;  ascii           1   15[COMRAM] unsigned char 
 12597 ;; Return value:  Size  Location     Type
 12598 ;;		None               void
 12599 ;; Registers used:
 12600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12601 ;; Tracked objects:
 12602 ;;		On entry : 0/0
 12603 ;;		On exit  : 0/0
 12604 ;;		Unchanged: 0/0
 12605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12610 ;;Total ram usage:        1 bytes
 12611 ;; Hardware stack levels used:    1
 12612 ;; Hardware stack levels required when called:    2
 12613 ;; This function calls:
 12614 ;;		i2_ringbuf_num
 12615 ;;		i2_ringbuf_pop
 12616 ;;		i2_ringbuf_put
 12617 ;; This function is called by:
 12618 ;;		_ISR
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           	psect	text52
 12623  012E14                     __ptext52:
 12624                           	opt stack 0
 12625  012E14                     _UART_ISR:
 12626                           	opt stack 18
 12627                           
 12628                           ;My_UART.c: 27: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 12629                           
 12630                           ;incstack = 0
 12631  012E14  B89D               	btfsc	3997,4,c	;volatile
 12632  012E16  A89E               	btfss	3998,4,c	;volatile
 12633  012E18  D013               	goto	i2l856
 12634                           
 12635                           ;My_UART.c: 28: if (ringbuf_num(&uart_tx)) {
 12636  012E1A  0E61               	movlw	low _uart_tx
 12637  012E1C  6E01               	movwf	i2ringbuf_num@rb,c
 12638  012E1E  0E01               	movlw	high _uart_tx
 12639  012E20  6E02               	movwf	i2ringbuf_num@rb+1,c
 12640  012E22  ECBF  F091         	call	i2_ringbuf_num	;wreg free
 12641  012E26  5001               	movf	?i2_ringbuf_num,w,c
 12642  012E28  1002               	iorwf	?i2_ringbuf_num+1,w,c
 12643  012E2A  B4D8               	btfsc	status,2,c
 12644  012E2C  D008               	goto	i2l857
 12645                           
 12646                           ;My_UART.c: 29: TXREG1 = ringbuf_pop(&uart_tx);
 12647  012E2E  0E61               	movlw	low _uart_tx
 12648  012E30  6E09               	movwf	i2ringbuf_pop@rb,c
 12649  012E32  0E01               	movlw	high _uart_tx
 12650  012E34  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 12651  012E36  ECD4  F092         	call	i2_ringbuf_pop	;wreg free
 12652  012E3A  6EAE               	movwf	4014,c	;volatile
 12653                           
 12654                           ;My_UART.c: 30: } else {
 12655  012E3C  D001               	goto	i2l856
 12656  012E3E                     i2l857:
 12657                           
 12658                           ;My_UART.c: 31: PIE1bits.TXIE = 0;
 12659  012E3E  989D               	bcf	3997,4,c	;volatile
 12660  012E40                     i2l856:
 12661                           
 12662                           ;My_UART.c: 32: }
 12663                           ;My_UART.c: 33: }
 12664                           ;My_UART.c: 34: if (PIE1bits.RCIE && PIR1bits.RCIF) {
 12665  012E40  AA9D               	btfss	3997,5,c	;volatile
 12666  012E42  0012               	return	
 12667  012E44  AA9E               	btfss	3998,5,c	;volatile
 12668  012E46  0012               	return	
 12669                           
 12670                           ;My_UART.c: 35: char ascii = RCREG1;
 12671  012E48  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 12672                           
 12673                           ;My_UART.c: 36: ringbuf_put(&uart_rx, ascii);
 12674  012E4C  0E59               	movlw	low _uart_rx
 12675  012E4E  6E09               	movwf	i2ringbuf_put@rb,c
 12676  012E50  0E01               	movlw	high _uart_rx
 12677  012E52  6E0A               	movwf	i2ringbuf_put@rb+1,c
 12678  012E54  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 12679  012E58  EC79  F092         	call	i2_ringbuf_put	;wreg free
 12680  012E5C  0012               	return	
 12681  012E5E                     __end_of_UART_ISR:
 12682                           	opt stack 0
 12683                           pclatu	equ	0xFFB
 12684                           pclath	equ	0xFFA
 12685                           tblptru	equ	0xFF8
 12686                           tblptrh	equ	0xFF7
 12687                           tblptrl	equ	0xFF6
 12688                           tablat	equ	0xFF5
 12689                           prodh	equ	0xFF4
 12690                           prodl	equ	0xFF3
 12691                           intcon	equ	0xFF2
 12692                           intcon2	equ	0xFF1
 12693                           indf0	equ	0xFEF
 12694                           postinc0	equ	0xFEE
 12695                           fsr0h	equ	0xFEA
 12696                           fsr0l	equ	0xFE9
 12697                           wreg	equ	0xFE8
 12698                           postinc1	equ	0xFE6
 12699                           postdec1	equ	0xFE5
 12700                           fsr1h	equ	0xFE2
 12701                           fsr1l	equ	0xFE1
 12702                           indf2	equ	0xFDF
 12703                           postinc2	equ	0xFDE
 12704                           postdec2	equ	0xFDD
 12705                           plusw2	equ	0xFDB
 12706                           fsr2h	equ	0xFDA
 12707                           fsr2l	equ	0xFD9
 12708                           status	equ	0xFD8
 12709                           
 12710 ;; *************** function i2_ringbuf_put *****************
 12711 ;; Defined at:
 12712 ;;		line 20 in file "../My_library/My_ringbuf.c"
 12713 ;; Parameters:    Size  Location     Type
 12714 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 12715 ;;		 -> usb_rx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
 12716 ;;  asciicode       1   10[COMRAM] unsigned char 
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;		None
 12719 ;; Return value:  Size  Location     Type
 12720 ;;		None               void
 12721 ;; Registers used:
 12722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12723 ;; Tracked objects:
 12724 ;;		On entry : 0/0
 12725 ;;		On exit  : 0/0
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12728 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12730 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12731 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12732 ;;Total ram usage:        7 bytes
 12733 ;; Hardware stack levels used:    1
 12734 ;; Hardware stack levels required when called:    1
 12735 ;; This function calls:
 12736 ;;		i2_ringbuf_num
 12737 ;; This function is called by:
 12738 ;;		_UART_ISR
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text53
 12743  0124F2                     __ptext53:
 12744                           	opt stack 0
 12745  0124F2                     i2_ringbuf_put:
 12746                           	opt stack 18
 12747                           
 12748                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 12749                           
 12750                           ;incstack = 0
 12751  0124F2  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 12752  0124F6  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 12753  0124FA  ECBF  F091         	call	i2_ringbuf_num	;wreg free
 12754  0124FE  EE20 F002          	lfsr	2,2
 12755  012502  5009               	movf	i2ringbuf_put@rb,w,c
 12756  012504  26D9               	addwf	fsr2l,f,c
 12757  012506  500A               	movf	i2ringbuf_put@rb+1,w,c
 12758  012508  22DA               	addwfc	fsr2h,f,c
 12759  01250A  50DE               	movf	postinc2,w,c
 12760  01250C  5C01               	subwf	?i2_ringbuf_num,w,c
 12761  01250E  50DE               	movf	postinc2,w,c
 12762  012510  5802               	subwfb	?i2_ringbuf_num+1,w,c
 12763  012512  B0D8               	btfsc	status,0,c
 12764  012514  0012               	return	
 12765                           
 12766                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 12767  012516  EE20 F004          	lfsr	2,4
 12768  01251A  5009               	movf	i2ringbuf_put@rb,w,c
 12769  01251C  26D9               	addwf	fsr2l,f,c
 12770  01251E  500A               	movf	i2ringbuf_put@rb+1,w,c
 12771  012520  22DA               	addwfc	fsr2h,f,c
 12772  012522  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 12773  012526  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 12774  01252A  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 12775  01252E  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 12776  012532  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 12777  012536  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 12778  01253A  500C               	movf	??i2_ringbuf_put,w,c
 12779  01253C  240E               	addwf	??i2_ringbuf_put+2,w,c
 12780  01253E  6ED9               	movwf	fsr2l,c
 12781  012540  500D               	movf	??i2_ringbuf_put+1,w,c
 12782  012542  200F               	addwfc	??i2_ringbuf_put+3,w,c
 12783  012544  6EDA               	movwf	fsr2h,c
 12784  012546  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 12785                           
 12786                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 12787  01254A  EE20 F002          	lfsr	2,2
 12788  01254E  5009               	movf	i2ringbuf_put@rb,w,c
 12789  012550  26D9               	addwf	fsr2l,f,c
 12790  012552  500A               	movf	i2ringbuf_put@rb+1,w,c
 12791  012554  22DA               	addwfc	fsr2h,f,c
 12792  012556  EE10 F004          	lfsr	1,4
 12793  01255A  5009               	movf	i2ringbuf_put@rb,w,c
 12794  01255C  26E1               	addwf	fsr1l,f,c
 12795  01255E  500A               	movf	i2ringbuf_put@rb+1,w,c
 12796  012560  22E2               	addwfc	fsr1h,f,c
 12797  012562  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 12798  012566  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 12799  01256A  0E01               	movlw	1
 12800  01256C  260E               	addwf	??i2_ringbuf_put+2,f,c
 12801  01256E  0E00               	movlw	0
 12802  012570  220F               	addwfc	??i2_ringbuf_put+3,f,c
 12803  012572  50DE               	movf	postinc2,w,c
 12804  012574  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 12805  012576  50DE               	movf	postinc2,w,c
 12806  012578  580F               	subwfb	??i2_ringbuf_put+3,w,c
 12807  01257A  B0D8               	btfsc	status,0,c
 12808  01257C  D00A               	goto	i2l8912
 12809  01257E  EE20 F004          	lfsr	2,4
 12810  012582  5009               	movf	i2ringbuf_put@rb,w,c
 12811  012584  26D9               	addwf	fsr2l,f,c
 12812  012586  500A               	movf	i2ringbuf_put@rb+1,w,c
 12813  012588  22DA               	addwfc	fsr2h,f,c
 12814  01258A  2ADE               	incf	postinc2,f,c
 12815  01258C  0E00               	movlw	0
 12816  01258E  22DD               	addwfc	postdec2,f,c
 12817  012590  0012               	return	
 12818  012592                     i2l8912:
 12819                           
 12820                           ;My_ringbuf.c: 24: else rb->head = 0;
 12821  012592  EE20 F004          	lfsr	2,4
 12822  012596  5009               	movf	i2ringbuf_put@rb,w,c
 12823  012598  26D9               	addwf	fsr2l,f,c
 12824  01259A  500A               	movf	i2ringbuf_put@rb+1,w,c
 12825  01259C  22DA               	addwfc	fsr2h,f,c
 12826  01259E  0E00               	movlw	0
 12827  0125A0  6EDE               	movwf	postinc2,c
 12828  0125A2  0E00               	movlw	0
 12829  0125A4  6EDD               	movwf	postdec2,c
 12830  0125A6  0012               	return	
 12831  0125A8                     __end_ofi2_ringbuf_put:
 12832                           	opt stack 0
 12833                           pclatu	equ	0xFFB
 12834                           pclath	equ	0xFFA
 12835                           tblptru	equ	0xFF8
 12836                           tblptrh	equ	0xFF7
 12837                           tblptrl	equ	0xFF6
 12838                           tablat	equ	0xFF5
 12839                           prodh	equ	0xFF4
 12840                           prodl	equ	0xFF3
 12841                           intcon	equ	0xFF2
 12842                           intcon2	equ	0xFF1
 12843                           indf0	equ	0xFEF
 12844                           postinc0	equ	0xFEE
 12845                           fsr0h	equ	0xFEA
 12846                           fsr0l	equ	0xFE9
 12847                           wreg	equ	0xFE8
 12848                           postinc1	equ	0xFE6
 12849                           postdec1	equ	0xFE5
 12850                           fsr1h	equ	0xFE2
 12851                           fsr1l	equ	0xFE1
 12852                           indf2	equ	0xFDF
 12853                           postinc2	equ	0xFDE
 12854                           postdec2	equ	0xFDD
 12855                           plusw2	equ	0xFDB
 12856                           fsr2h	equ	0xFDA
 12857                           fsr2l	equ	0xFD9
 12858                           status	equ	0xFD8
 12859                           
 12860 ;; *************** function i2_ringbuf_pop *****************
 12861 ;; Defined at:
 12862 ;;		line 45 in file "../My_library/My_ringbuf.c"
 12863 ;; Parameters:    Size  Location     Type
 12864 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 12865 ;;		 -> usb_tx(8), uart_rx(8), uart_tx(8), terminal_task@command(8), 
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  1    wreg      unsigned char 
 12870 ;; Registers used:
 12871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12872 ;; Tracked objects:
 12873 ;;		On entry : 0/0
 12874 ;;		On exit  : 0/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12879 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12880 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12881 ;;Total ram usage:        7 bytes
 12882 ;; Hardware stack levels used:    1
 12883 ;; Hardware stack levels required when called:    1
 12884 ;; This function calls:
 12885 ;;		i2_ringbuf_num
 12886 ;; This function is called by:
 12887 ;;		_UART_ISR
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           
 12891                           	psect	text54
 12892  0125A8                     __ptext54:
 12893                           	opt stack 0
 12894  0125A8                     i2_ringbuf_pop:
 12895                           	opt stack 18
 12896                           
 12897                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 12898                           
 12899                           ;incstack = 0
 12900  0125A8  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 12901  0125AC  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 12902  0125B0  ECBF  F091         	call	i2_ringbuf_num	;wreg free
 12903  0125B4  5001               	movf	?i2_ringbuf_num,w,c
 12904  0125B6  1002               	iorwf	?i2_ringbuf_num+1,w,c
 12905  0125B8  B4D8               	btfsc	status,2,c
 12906  0125BA  D04A               	goto	i2l8930
 12907                           
 12908                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 12909  0125BC  EE20 F006          	lfsr	2,6
 12910  0125C0  5009               	movf	i2ringbuf_pop@rb,w,c
 12911  0125C2  26D9               	addwf	fsr2l,f,c
 12912  0125C4  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12913  0125C6  22DA               	addwfc	fsr2h,f,c
 12914  0125C8  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 12915  0125CC  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 12916  0125D0  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 12917  0125D4  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 12918  0125D8  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 12919  0125DC  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 12920  0125E0  500B               	movf	??i2_ringbuf_pop,w,c
 12921  0125E2  240D               	addwf	??i2_ringbuf_pop+2,w,c
 12922  0125E4  6ED9               	movwf	fsr2l,c
 12923  0125E6  500C               	movf	??i2_ringbuf_pop+1,w,c
 12924  0125E8  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 12925  0125EA  6EDA               	movwf	fsr2h,c
 12926  0125EC  50DF               	movf	indf2,w,c
 12927  0125EE  6E0F               	movwf	i2ringbuf_pop@ret,c
 12928                           
 12929                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 12930  0125F0  EE20 F002          	lfsr	2,2
 12931  0125F4  5009               	movf	i2ringbuf_pop@rb,w,c
 12932  0125F6  26D9               	addwf	fsr2l,f,c
 12933  0125F8  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12934  0125FA  22DA               	addwfc	fsr2h,f,c
 12935  0125FC  EE10 F006          	lfsr	1,6
 12936  012600  5009               	movf	i2ringbuf_pop@rb,w,c
 12937  012602  26E1               	addwf	fsr1l,f,c
 12938  012604  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12939  012606  22E2               	addwfc	fsr1h,f,c
 12940  012608  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 12941  01260C  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 12942  012610  0E01               	movlw	1
 12943  012612  260D               	addwf	??i2_ringbuf_pop+2,f,c
 12944  012614  0E00               	movlw	0
 12945  012616  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 12946  012618  50DE               	movf	postinc2,w,c
 12947  01261A  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 12948  01261C  50DE               	movf	postinc2,w,c
 12949  01261E  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 12950  012620  B0D8               	btfsc	status,0,c
 12951  012622  D00A               	goto	i2l8922
 12952                           
 12953                           ;My_ringbuf.c: 49: rb->tail++;
 12954  012624  EE20 F006          	lfsr	2,6
 12955  012628  5009               	movf	i2ringbuf_pop@rb,w,c
 12956  01262A  26D9               	addwf	fsr2l,f,c
 12957  01262C  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12958  01262E  22DA               	addwfc	fsr2h,f,c
 12959  012630  2ADE               	incf	postinc2,f,c
 12960  012632  0E00               	movlw	0
 12961  012634  22DD               	addwfc	postdec2,f,c
 12962                           
 12963                           ;My_ringbuf.c: 50: } else {
 12964  012636  D00A               	goto	i2l8924
 12965  012638                     i2l8922:
 12966                           
 12967                           ;My_ringbuf.c: 51: rb->tail = 0;
 12968  012638  EE20 F006          	lfsr	2,6
 12969  01263C  5009               	movf	i2ringbuf_pop@rb,w,c
 12970  01263E  26D9               	addwf	fsr2l,f,c
 12971  012640  500A               	movf	i2ringbuf_pop@rb+1,w,c
 12972  012642  22DA               	addwfc	fsr2h,f,c
 12973  012644  0E00               	movlw	0
 12974  012646  6EDE               	movwf	postinc2,c
 12975  012648  0E00               	movlw	0
 12976  01264A  6EDD               	movwf	postdec2,c
 12977  01264C                     i2l8924:
 12978                           
 12979                           ;My_ringbuf.c: 52: }
 12980                           ;My_ringbuf.c: 53: return ret;
 12981  01264C  500F               	movf	i2ringbuf_pop@ret,w,c
 12982                           
 12983                           ;My_ringbuf.c: 54: } else {
 12984  01264E  0012               	return	
 12985  012650                     i2l8930:
 12986                           
 12987                           ;My_ringbuf.c: 55: return 0;
 12988  012650  0E00               	movlw	0
 12989  012652  0012               	return	
 12990  012654                     __end_ofi2_ringbuf_pop:
 12991                           	opt stack 0
 12992                           pclatu	equ	0xFFB
 12993                           pclath	equ	0xFFA
 12994                           tblptru	equ	0xFF8
 12995                           tblptrh	equ	0xFF7
 12996                           tblptrl	equ	0xFF6
 12997                           tablat	equ	0xFF5
 12998                           prodh	equ	0xFF4
 12999                           prodl	equ	0xFF3
 13000                           intcon	equ	0xFF2
 13001                           intcon2	equ	0xFF1
 13002                           indf0	equ	0xFEF
 13003                           postinc0	equ	0xFEE
 13004                           fsr0h	equ	0xFEA
 13005                           fsr0l	equ	0xFE9
 13006                           wreg	equ	0xFE8
 13007                           postinc1	equ	0xFE6
 13008                           postdec1	equ	0xFE5
 13009                           fsr1h	equ	0xFE2
 13010                           fsr1l	equ	0xFE1
 13011                           indf2	equ	0xFDF
 13012                           postinc2	equ	0xFDE
 13013                           postdec2	equ	0xFDD
 13014                           plusw2	equ	0xFDB
 13015                           fsr2h	equ	0xFDA
 13016                           fsr2l	equ	0xFD9
 13017                           status	equ	0xFD8
 13018                           
 13019 ;; *************** function i2_ringbuf_num *****************
 13020 ;; Defined at:
 13021 ;;		line 12 in file "../My_library/My_ringbuf.c"
 13022 ;; Parameters:    Size  Location     Type
 13023 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 13024 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 13025 ;;		 -> terminal_task@command(8), 
 13026 ;; Auto vars:     Size  Location     Type
 13027 ;;		None
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  2    0[COMRAM] unsigned int 
 13030 ;; Registers used:
 13031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13039 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13040 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13041 ;;Total ram usage:        8 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; This function calls:
 13044 ;;		Nothing
 13045 ;; This function is called by:
 13046 ;;		_UART_ISR
 13047 ;;		i2_ringbuf_put
 13048 ;;		i2_ringbuf_pop
 13049 ;; This function uses a non-reentrant model
 13050 ;;
 13051                           
 13052                           	psect	text55
 13053  01237E                     __ptext55:
 13054                           	opt stack 0
 13055  01237E                     i2_ringbuf_num:
 13056                           	opt stack 18
 13057                           
 13058                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 13059                           
 13060                           ;incstack = 0
 13061  01237E  EE20 F006          	lfsr	2,6
 13062  012382  5001               	movf	i2ringbuf_num@rb,w,c
 13063  012384  26D9               	addwf	fsr2l,f,c
 13064  012386  5002               	movf	i2ringbuf_num@rb+1,w,c
 13065  012388  22DA               	addwfc	fsr2h,f,c
 13066  01238A  EE10 F004          	lfsr	1,4
 13067  01238E  5001               	movf	i2ringbuf_num@rb,w,c
 13068  012390  26E1               	addwf	fsr1l,f,c
 13069  012392  5002               	movf	i2ringbuf_num@rb+1,w,c
 13070  012394  22E2               	addwfc	fsr1h,f,c
 13071  012396  50DE               	movf	postinc2,w,c
 13072  012398  5CE6               	subwf	postinc1,w,c
 13073  01239A  50DE               	movf	postinc2,w,c
 13074  01239C  58E6               	subwfb	postinc1,w,c
 13075  01239E  A0D8               	btfss	status,0,c
 13076  0123A0  D01F               	goto	i2l8658
 13077                           
 13078                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 13079  0123A2  EE20 F004          	lfsr	2,4
 13080  0123A6  5001               	movf	i2ringbuf_num@rb,w,c
 13081  0123A8  26D9               	addwf	fsr2l,f,c
 13082  0123AA  5002               	movf	i2ringbuf_num@rb+1,w,c
 13083  0123AC  22DA               	addwfc	fsr2h,f,c
 13084  0123AE  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 13085  0123B2  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 13086  0123B6  EE20 F006          	lfsr	2,6
 13087  0123BA  5001               	movf	i2ringbuf_num@rb,w,c
 13088  0123BC  26D9               	addwf	fsr2l,f,c
 13089  0123BE  5002               	movf	i2ringbuf_num@rb+1,w,c
 13090  0123C0  22DA               	addwfc	fsr2h,f,c
 13091  0123C2  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 13092  0123C6  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 13093  0123CA  1E05               	comf	??i2_ringbuf_num+2,f,c
 13094  0123CC  1E06               	comf	??i2_ringbuf_num+3,f,c
 13095  0123CE  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 13096  0123D0  2A06               	incf	??i2_ringbuf_num+3,f,c
 13097  0123D2  5003               	movf	??i2_ringbuf_num,w,c
 13098  0123D4  2405               	addwf	??i2_ringbuf_num+2,w,c
 13099  0123D6  6E01               	movwf	?i2_ringbuf_num,c
 13100  0123D8  5004               	movf	??i2_ringbuf_num+1,w,c
 13101  0123DA  2006               	addwfc	??i2_ringbuf_num+3,w,c
 13102  0123DC  6E02               	movwf	?i2_ringbuf_num+1,c
 13103                           
 13104                           ;My_ringbuf.c: 15: } else {
 13105  0123DE  0012               	return	
 13106  0123E0                     i2l8658:
 13107                           
 13108                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 13109  0123E0  EE20 F004          	lfsr	2,4
 13110  0123E4  5001               	movf	i2ringbuf_num@rb,w,c
 13111  0123E6  26D9               	addwf	fsr2l,f,c
 13112  0123E8  5002               	movf	i2ringbuf_num@rb+1,w,c
 13113  0123EA  22DA               	addwfc	fsr2h,f,c
 13114  0123EC  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 13115  0123F0  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 13116  0123F4  EE20 F002          	lfsr	2,2
 13117  0123F8  5001               	movf	i2ringbuf_num@rb,w,c
 13118  0123FA  26D9               	addwf	fsr2l,f,c
 13119  0123FC  5002               	movf	i2ringbuf_num@rb+1,w,c
 13120  0123FE  22DA               	addwfc	fsr2h,f,c
 13121  012400  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 13122  012404  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 13123  012408  EE20 F006          	lfsr	2,6
 13124  01240C  5001               	movf	i2ringbuf_num@rb,w,c
 13125  01240E  26D9               	addwf	fsr2l,f,c
 13126  012410  5002               	movf	i2ringbuf_num@rb+1,w,c
 13127  012412  22DA               	addwfc	fsr2h,f,c
 13128  012414  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 13129  012418  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 13130  01241C  1E07               	comf	??i2_ringbuf_num+4,f,c
 13131  01241E  1E08               	comf	??i2_ringbuf_num+5,f,c
 13132  012420  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 13133  012422  2A08               	incf	??i2_ringbuf_num+5,f,c
 13134  012424  5005               	movf	??i2_ringbuf_num+2,w,c
 13135  012426  2607               	addwf	??i2_ringbuf_num+4,f,c
 13136  012428  5006               	movf	??i2_ringbuf_num+3,w,c
 13137  01242A  2208               	addwfc	??i2_ringbuf_num+5,f,c
 13138  01242C  5003               	movf	??i2_ringbuf_num,w,c
 13139  01242E  2407               	addwf	??i2_ringbuf_num+4,w,c
 13140  012430  6E01               	movwf	?i2_ringbuf_num,c
 13141  012432  5004               	movf	??i2_ringbuf_num+1,w,c
 13142  012434  2008               	addwfc	??i2_ringbuf_num+5,w,c
 13143  012436  6E02               	movwf	?i2_ringbuf_num+1,c
 13144  012438  0012               	return	
 13145  01243A                     __end_ofi2_ringbuf_num:
 13146                           	opt stack 0
 13147                           pclatu	equ	0xFFB
 13148                           pclath	equ	0xFFA
 13149                           tblptru	equ	0xFF8
 13150                           tblptrh	equ	0xFF7
 13151                           tblptrl	equ	0xFF6
 13152                           tablat	equ	0xFF5
 13153                           prodh	equ	0xFF4
 13154                           prodl	equ	0xFF3
 13155                           intcon	equ	0xFF2
 13156                           intcon2	equ	0xFF1
 13157                           indf0	equ	0xFEF
 13158                           postinc0	equ	0xFEE
 13159                           fsr0h	equ	0xFEA
 13160                           fsr0l	equ	0xFE9
 13161                           wreg	equ	0xFE8
 13162                           postinc1	equ	0xFE6
 13163                           postdec1	equ	0xFE5
 13164                           fsr1h	equ	0xFE2
 13165                           fsr1l	equ	0xFE1
 13166                           indf2	equ	0xFDF
 13167                           postinc2	equ	0xFDE
 13168                           postdec2	equ	0xFDD
 13169                           plusw2	equ	0xFDB
 13170                           fsr2h	equ	0xFDA
 13171                           fsr2l	equ	0xFD9
 13172                           status	equ	0xFD8
 13173                           pclatu	equ	0xFFB
 13174                           pclath	equ	0xFFA
 13175                           tblptru	equ	0xFF8
 13176                           tblptrh	equ	0xFF7
 13177                           tblptrl	equ	0xFF6
 13178                           tablat	equ	0xFF5
 13179                           prodh	equ	0xFF4
 13180                           prodl	equ	0xFF3
 13181                           intcon	equ	0xFF2
 13182                           intcon2	equ	0xFF1
 13183                           indf0	equ	0xFEF
 13184                           postinc0	equ	0xFEE
 13185                           fsr0h	equ	0xFEA
 13186                           fsr0l	equ	0xFE9
 13187                           wreg	equ	0xFE8
 13188                           postinc1	equ	0xFE6
 13189                           postdec1	equ	0xFE5
 13190                           fsr1h	equ	0xFE2
 13191                           fsr1l	equ	0xFE1
 13192                           indf2	equ	0xFDF
 13193                           postinc2	equ	0xFDE
 13194                           postdec2	equ	0xFDD
 13195                           plusw2	equ	0xFDB
 13196                           fsr2h	equ	0xFDA
 13197                           fsr2l	equ	0xFD9
 13198                           status	equ	0xFD8
 13199                           
 13200                           	psect	rparam
 13201  0000                     pclatu	equ	0xFFB
 13202                           pclath	equ	0xFFA
 13203                           tblptru	equ	0xFF8
 13204                           tblptrh	equ	0xFF7
 13205                           tblptrl	equ	0xFF6
 13206                           tablat	equ	0xFF5
 13207                           prodh	equ	0xFF4
 13208                           prodl	equ	0xFF3
 13209                           intcon	equ	0xFF2
 13210                           intcon2	equ	0xFF1
 13211                           indf0	equ	0xFEF
 13212                           postinc0	equ	0xFEE
 13213                           fsr0h	equ	0xFEA
 13214                           fsr0l	equ	0xFE9
 13215                           wreg	equ	0xFE8
 13216                           postinc1	equ	0xFE6
 13217                           postdec1	equ	0xFE5
 13218                           fsr1h	equ	0xFE2
 13219                           fsr1l	equ	0xFE1
 13220                           indf2	equ	0xFDF
 13221                           postinc2	equ	0xFDE
 13222                           postdec2	equ	0xFDD
 13223                           plusw2	equ	0xFDB
 13224                           fsr2h	equ	0xFDA
 13225                           fsr2l	equ	0xFD9
 13226                           status	equ	0xFD8
 13227                           
 13228                           	psect	temp
 13229  000040                     btemp:
 13230                           	opt stack 0
 13231  000040                     	ds	1
 13232  0000                     int$flags	set	btemp
 13233                           pclatu	equ	0xFFB
 13234                           pclath	equ	0xFFA
 13235                           tblptru	equ	0xFF8
 13236                           tblptrh	equ	0xFF7
 13237                           tblptrl	equ	0xFF6
 13238                           tablat	equ	0xFF5
 13239                           prodh	equ	0xFF4
 13240                           prodl	equ	0xFF3
 13241                           intcon	equ	0xFF2
 13242                           intcon2	equ	0xFF1
 13243                           indf0	equ	0xFEF
 13244                           postinc0	equ	0xFEE
 13245                           fsr0h	equ	0xFEA
 13246                           fsr0l	equ	0xFE9
 13247                           wreg	equ	0xFE8
 13248                           postinc1	equ	0xFE6
 13249                           postdec1	equ	0xFE5
 13250                           fsr1h	equ	0xFE2
 13251                           fsr1l	equ	0xFE1
 13252                           indf2	equ	0xFDF
 13253                           postinc2	equ	0xFDE
 13254                           postdec2	equ	0xFDD
 13255                           plusw2	equ	0xFDB
 13256                           fsr2h	equ	0xFDA
 13257                           fsr2l	equ	0xFD9
 13258                           status	equ	0xFD8


Data Sizes:
    Strings     534
    Constant    239
    Data        3
    BSS         1662
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160    118     148
    BANK1           256     34     185
    BANK2           256      0     203
    BANK3           256      0     250
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_61(CODE[6]), STR_60(CODE[2]), STR_59(CODE[2]), STR_58(CODE[2]), 
		 -> STR_57(CODE[2]), STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), 
		 -> STR_53(CODE[2]), STR_52(CODE[4]), STR_51(CODE[4]), STR_50(CODE[4]), 
		 -> STR_49(CODE[4]), STR_48(CODE[5]), STR_47(CODE[4]), STR_45(CODE[3]), 
		 -> STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[7]), 
		 -> STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[6]), 
		 -> STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK1[25]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_62(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_46(CODE[15]), STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> terminal_operation@str(BANK1[30]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5410_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5410_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5410_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5410_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S4157$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S4147$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4147$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4123$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4123$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4123$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4123$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 315
		 -> terminal_operation@str(BANK1[30]), STR_43(CODE[315]), STR_24(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), 

    S1241ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(BANK1[4]), sw_R(BANK1[4]), 


Critical Paths under _main in COMRAM

    _terminal_task->_ringbuf_pop
    _terminal_operation->_strcmp
    _terminal_time->_month_length
    _terminal_time->_strcmp
    _sprintf->___lwmod
    _sprintf->_isdigit
    _atoi->_isdigit
    _ringbuf_put_num->___lwmod
    _main_init->_ADC_init
    _main_init->_PWM_init
    _main_init->_timer0_init
    _main_init->_timer1_init
    _main_init->_timer3_init
    _epoch_to_caltime->_month_length
    _light_task->___llmod
    _caltime_to_epoch->_month_length
    ___lmul->_month_length
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->___lwmod
    _ringbuf_put->_ringbuf_num
    ___lwmod->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    ___awdiv->_atoi
    _light_task->_RTCC_from_RTCC
    _PWM_set->___awdiv
    ___lwdiv->___wmul
    _UART_task->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _terminal_task->_terminal_operation

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_task

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  282665
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_task
                          _UART_task
                         _light_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  207339
                                            112 BANK0      6     2      4
                                              0 BANK4    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  58    48     10  182722
                                            100 BANK0     12     2     10
                                              0 BANK1     34    34      0
                            _PWM_set
                            ___awdiv
                             ___wmul
                               _atoi
                    _ringbuf_put_str
                            _sprintf
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  111227
                                             91 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   56890
                                             84 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   29762
                                             52 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   15592
                                             17 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    6080
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   17230
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    8463
                                             31 COMRAM     1     1      0
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   12299
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    6839
                                             17 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    4080
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                             31 COMRAM     1     1      0
                                             13 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2302
                                             31 COMRAM     1     1      0
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1527
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   20696
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                             31 COMRAM     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1257
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   19090
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2   11391
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8701
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5084
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    2152
                                             22 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0    1697
                                             21 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1635
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_task                                          11    11      0   26588
                                             40 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     470
                                             31 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     955
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2   14046
                                             21 BANK0      5     3      2
                            ___awdiv (ARG)
                            ___lwdiv
                             ___wmul
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4   10676
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1431
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_task                                            0     0      0    1253
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1253
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7699
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7699
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    6165
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                             31 COMRAM     1     0      1
                                              6 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2988
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              1 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                             31 COMRAM     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0    3067
                                             16 COMRAM    15    15      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1432
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1635
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     671
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     608
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     322
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _UART_task
     _ringbuf_num
   _light_task
     _PWM_set
       ___awdiv (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _atoi (ARG)
         ___wmul
         _isdigit
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
     ___llmod
     ___lmul
       ___lldiv (ARG)
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
               ___wmul (ARG)
               _atoi (ARG)
                 ___wmul
                 _isdigit
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _PWM_set
         ___awdiv (ARG)
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___awdiv
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lwdiv
           ___wmul (ARG)
         ___lwmod
           ___lwdiv (ARG)
             ___wmul (ARG)
         ___wmul
         _isdigit
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
                   ___wmul (ARG)
                   _atoi (ARG)
                     ___wmul
                     _isdigit
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     3E8      36       30.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      CB      10       79.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     22      B9       7       72.3%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     76      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3BA       8        0.0%
DATA                 0      0     7A2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Nov 11 15:20:49 2015

                     _USB_SD_Ptr FD03                  _ringbuf_put_num 293A  
                _ringbuf_put_str 2BF8                     ___awdiv@sign 0072  
                             _ms 0114              ___wmul@multiplicand 0062  
              ??_RTCC_from_epoch 0021                     __CFG_CP0$OFF 000000  
                            l133 2EB2                              l205 293C  
                            l305 189C                              l138 2DEE  
                            l408 2E5E                              l292 1E02  
                            l286 22C2                              l732 2452  
                            _BDT 000D00                              l791 1756  
                            l786 16FC                              _PR2 000FCB  
                            _ISR 0008                              i2l4 1340  
                            i2l5 1364                              i2l6 1386  
                            i2l7 13A8                              i2l8 13C8  
                            i2l9 13E8                              _UIE 000F36  
                            _UIR 000F62                    ?_get_quot_rem 0079  
             caltime_to_epoch@tm 0079                              _now 0143  
              _RTCC_from_caltime 2F7E                     ___awmod@sign 0065  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                   _USBDeviceState 0036  
             ?_RTCC_from_caltime 008F                             ?_ISR 0001  
               _terminal_at_hand 2C5C                             l1700 1C32  
                           l1907 280E                             l1950 2AA2  
                           l1960 2D10                             l1897 22B0  
                           l8010 2680                             l8030 26EC  
                           l8022 26CA                             l8014 2694  
                           l8006 2670                             l8016 26A0  
                           l8112 21FC                             l8104 21DA  
                           l8018 26A6                             l8026 26D8  
                           l8042 1CB4                             l8122 2234  
                           l8220 2A52                             l8124 2244  
                           l8108 21E8                             l8204 2F26  
                           l8222 2A5E                             l8134 229E  
                           l8126 224A                             l9102 1034  
                           l9110 106A                             l8064 2ABE  
                           l8232 2A94                             l8224 2A64  
                           l8080 2164                             l8240 2CD0  
             __CFG_WPFP$PAGE_127 000000                             l8058 1DB2  
                           l8242 2CDA                             l8146 1F94  
                           l8410 075A                             l9050 0D7E  
                           l8068 2AE4                             l8172 10B2  
                           l8180 1110                             l9140 165A  
                           l8092 2198                             l8332 191A  
                           l8244 2CE0                             l8420 078A  
                           l8404 070C                             l8166 10A2  
                           l9150 16E6                             l8094 21A4  
                           l8086 217A                             l8326 190E  
                           l8254 2BFA                             l8422 0790  
                           l9070 0EA2                             l9062 0E50  
                           l9054 0DFE                             l9046 0D54  
                           l8184 1130                             l8168 10A8  
                           l8096 21AA                             l8328 1912  
                           l8248 2D04                             l8520 2D28  
                           l8440 07EE                             l8408 0724  
                           l8352 0544                             l8600 0C64  
                           l9080 0EF8                             l9072 0EA6  
                           l9064 0E54                             l9056 0E02  
                           l8178 110C                             l8610 1A3A  
                           l9162 1722                             l9146 16DC  
                           l8530 1B4C                             l8258 2C32  
                           l8434 07CC                             l8354 0556  
                           l8346 0526                             l8514 2CA4  
                           l8602 0C9C                             l8188 1194  
                           l8620 1A8E                             l9172 1740  
                           l9164 1726                             l8532 1B52  
                           l8524 2D62                             l8444 0826  
                           l8380 064A                             l8372 0618  
                           l8364 0598                             l9092 0FD0  
                           l8630 1B00                             l8614 1A4A  
                           l9190 1798                             l8550 1BFA  
                           l8542 1B98                             l8518 2D1C  
                           l8470 08B0                             l8454 0856  
                           l8462 087E                             l8446 0830  
                           l8390 06B0                             l8382 0656  
                           l8358 0560                             l8606 0CE4  
                           l9094 0FD8                             l9086 0F7C  
                           l9078 0EF4                             l8624 1A9E  
                           l9184 177C                             l9168 1736  
                           l8464 088A                             l8392 06BC  
                           l8384 065C                             l8800 0060  
                           l9088 0FA6                             l8642 1B20  
                           l8634 1B0A                             l9186 1780  
                           l8546 1BAA                             l8570 0A0E  
                           l9098 0FF4                             l8628 1AE6  
                           l8900 27FE                             l8732 296E  
                           l8548 1BF4                             l8484 0938  
                           l8476 08D0                             l8396 06CE  
                           l8580 0AD6                             l8564 09BA  
                           l8812 0138                             l8638 1B14  
                           l8670 2EC6                             l8750 2140  
                           l8478 08D6                             l8398 06E6  
                           l8486 0944                             l8590 0B9C  
                           l8582 0B0E                             l8574 0A56  
                           l8566 09C6                             l8822 01CE  
                           l8648 1B2C                             l8728 294C  
                           l8488 0964                             l8576 0A8E  
                           l8840 02C0                             l8832 0264  
                           l8824 01D4                             l8682 2DF0  
                           l8738 29AE                             l8594 0BE4  
                           l8586 0B56                             l8818 0186  
                           l8748 212A                             l8756 2144  
                           l8596 0C1C                             l8852 0364  
                           l8844 0308                             l8828 021C  
                           l9396 2B60                             l8766 2864  
                           l8776 2BA4                             l8864 0408  
                           l8856 03AC                             l8892 27A6  
                           l8876 04AC                             l8868 0450  
                           l8894 27B4                             l8798 0048  
                           STR_1 FFBD                             l8896 27BA  
                           STR_4 FFFA                             STR_7 FFFC  
                           STR_9 FFF8                             u5165 3016  
                           u5166 3018                             i2l10 1408  
                           i2l11 1428                             u8200 1D5E  
                           u8210 1D8E                             u8230 1DA4  
                           u8240 1DA6                             u8250 1DFA  
                           u8260 1DFC                             u8228 1D92  
                           u8190 1D5C                             _UCFG 000F39  
                           u8530 2C24                             u8540 2C54  
                           _UEP0 000F26                             _UEP1 000F27  
                           u9270 00F2                             u9280 010E  
                           u8537 2C1A                             u8547 2C4A  
                           _UEIE 000F37                             u9278 00F6  
                           u9288 0112                             u9810 160E  
                           _UEIR 000F63                             _UCON 000F65  
                _CDCDataInHandle 00E5              ??_RTCC_from_caltime 0021  
                           _pDst 0120                             _atoi 1B4A  
                           _main 2B22         button_timer_interrupt@bt 0001  
                           _sw_B 0188                             _sw_G 018C  
                           _sw_R 0190                             fsr0h 000FEA  
                           fsr1h 000FE2                             indf0 000FEF  
                           fsr0l 000FE9                             fsr2h 000FDA  
                    _BaudRateGen 0110                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 0040           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                  __end_of_PWM_set 1B4A  
                           start 00FE                 __end_of_ADC_init 3026  
                  __CFG_IESO$OFF 000000                   terminal_task@i 0468  
                   ___param_bank 000010                  ??_terminal_task 00D4  
                ??_terminal_time 0021            __end_ofi2_ringbuf_pop 2654  
          __end_ofi2_ringbuf_num 243A            __end_ofi2_ringbuf_put 25A8  
             terminal_task@ascii 0467                    ADC_init@p_ref 0020  
                          ??_ISR 0011                     print_time@tx 0094  
              ??_RTCC_to_caltime 0021                    __CFG_PLLDIV$2 000000  
                   _BAUDCON1bits 000F7E        __end_of_RTCC_from_caltime 2FA4  
                          ?_atoi 0066                            ?_main 0001  
                 ??_get_quot_rem 0021                  __end_of___awdiv 2206  
                          _ADRES 000FC3                            STR_20 FFD6  
                          STR_13 FFF6                            STR_30 FFB3  
                          STR_31 FFC8                            STR_15 FF77  
                          STR_23 FF23                            STR_32 FFA3  
                          STR_40 FF8F                            STR_24 FF80  
                          STR_33 FFC0                            STR_41 FFAE  
                          STR_25 FF63                            STR_26 FFE2  
                          STR_42 FFE4                            STR_34 FFDA  
                          STR_50 FFC2                            STR_35 FFA7  
                          STR_27 FFE1                            STR_19 FFD6  
                          STR_51 FFCE                            STR_43 FDE8  
                          STR_60 FFEC                            STR_52 FFC6  
                          STR_36 FFB8                            STR_44 FF6E  
                          STR_28 FF57                  __end_of___awmod 26F6  
                          STR_37 FFD0                            STR_53 FFA1  
                          STR_29 FFDC                            STR_45 FFDE  
                          STR_61 FF9D                            STR_54 FFEA  
                          STR_38 FF96                            STR_62 FF88  
                          STR_46 FF48                            STR_39 FFF4  
                          STR_55 FFF0                            STR_47 FFD2  
                          STR_56 FFE8                            STR_48 FFA9  
                          STR_57 FFEE                            STR_49 FFCA  
                          STR_58 FFE6                            STR_59 FFF2  
                __end_of___lldiv 22C2                  ___awdiv@divisor 006F  
                __end_of___llmod 2820                            _LATB2 007C52  
                __end_of___lwdiv 2AAC                  __end_of___lwmod 2D1A  
                          i2l729 00C2                            i2l856 2E40  
                          i2l857 2E3E                            _UADDR 000F38  
                ___awdiv@counter 0071                            _TMR1H 000FCF  
                          _RPOR3 000EC3                            _RPOR4 000EC4  
                          _RPOR5 000EC5                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _USTAT 000F64              ___lmul@multiplicand 0071  
                 __CFG_FCMEN$OFF 000000                 __end_of_UART_ISR 2E5E  
                          _sd000 FDE4                            _sd001 FD4E  
                          _sd002 FD82             caltime_to_epoch@year 007F  
             __size_of_UART_init 0020                  __end_of_dpowers FD03  
             __size_of_UART_task 0020                 __end_of_OSC_init 3084  
                __end_of_isdigit 2F2E               __size_of_RTCC_init 006A  
             __size_of_RTCC_task 003C                 ringbuf_delete@rb 0060  
                          atoi@a 006B                            atoi@s 0066  
                          tablat 000FF5                            plusw2 000FDB  
               __end_of_PWM_init 24F2       __size_of_ringbuf_backspace 008E  
                          status 000FD8                  __end_of_sprintf 0972  
              month_length@month 0020          __end_of_ringbuf_put_num 29BC  
        __end_of_ringbuf_put_str 2C5C              terminal_task@i_2431 0466  
                __initialization 29BC                  terminal_task@rx 00D2  
                terminal_task@tx 00D0                  terminal_time@tx 00BB  
                   __end_of_atoi 1C3C                     __end_of_main 2B8E  
          _control_signal_bitmap 0128              ringbuf_init@bufsize 0064  
               RTCC_from_RTCC@tm 0086                    print_time@str 0096  
                         ??_atoi 0068                           ??_main 0021  
                  __activetblptr 000003                     _cdc_mem_type 00EC  
                         _BCL1IF 007D0B                 _CDCDataOutHandle 002D  
               ___llmod@dividend 0060                           _CCPR1L 000FBB  
                         _CCPR2L 000FB5                           _CCPR3L 000F16  
                         _CCPR4L 000F13                           _EECON2 000FA7  
                         _ANCON0 000F48                           _ANCON1 000F49  
               ___awdiv@dividend 006D          _terminal_operation$6627 01B2  
        _terminal_operation$6628 01B4                        ??_PWM_set 0077  
                 __CFG_WDTEN$OFF 000000                           i2l6310 144C  
                         i2l6330 1502                           i2l6322 14B8  
                         i2l6314 1470                           i2l6334 1528  
                         i2l6326 14DC                           i2l6318 1494  
                         i2l6342 1572                           i2l6338 154E  
                         i2l9380 006E                           i2l8912 2592  
                         i2l8658 23E0                           i2l8922 2638  
                         i2l8930 2650                           i2l8924 264C  
                         _RCREG1 000FAF                           _RTCCAL 000F3E  
                         _SPBRG1 000FB0                           _SSP1IF 007CF3  
                 __CFG_WPCFG$OFF 000000                           _TXREG1 000FAE  
                i2ringbuf_pop@rb 0009                  i2ringbuf_num@rb 0001  
                i2ringbuf_put@rb 0009                   __CFG_WPDIS$OFF 000000  
             _terminal_task$6625 0464               epoch_to_caltime@tm 0081  
              _shortPacketStatus 003D                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 0081                 ringbuf_put_num@i 0076  
                   _CCPTMRS0bits 000F52                     _CCPTMRS1bits 000F51  
          caltime_to_epoch@epoch 0081               _terminal_time$6626 00C3  
                   ?_ringbuf_pop 0068                     ?_ringbuf_num 0060  
                   ?_ringbuf_put 0068            caltime_to_epoch@month 0085  
                         ___lmul 2AAC                  _caltime_to_RTCC 1E02  
                         ___wmul 2ED0               ??_epoch_to_caltime 0083  
              __end_of_UART_init 2FEA                      light_task@i 0092  
                    light_task@n 00F3                        ??___awdiv 0021  
              __end_of_UART_task 300A                        ??___awmod 0020  
                         _d_to_x 2F56                        ??___lldiv 0020  
           ringbuf_put_num@value 0073                     ?_timer0_init 0001  
                      ??___llmod 0020                __end_of_RTCC_init 2BF8  
                   ?_timer1_init 0020                        ??___lwdiv 0020  
              __end_of_RTCC_task 2E9A                        ??___lwmod 0020  
                   ?_timer3_init 0001                           clear_0 29C4  
                         clear_1 29D6                           clear_2 29E2  
                         clear_3 29EE                           clear_4 29FA  
                         clear_5 2A06                  __CFG_CLKOEC$OFF 000000  
               ___awdiv@quotient 0073                  ___awmod@divisor 0062  
                ___awmod@counter 0064                           _x_to_d 3026  
     __size_of_RTCC_from_caltime 0026                           _usb_rx 0169  
                         _usb_tx 0171                           _strcmp 2D1A  
      __size_of_caltime_to_epoch 028E               _terminal_operation 0000  
                      ??_isdigit 0020                     __mediumconst FCF8  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_ADC_init 0001  
                      ??_sprintf 0083              ?_terminal_operation 00C4  
                    _CtrlTrfData 000D38             _controlTransferState 003B  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 2A2A                     __pbssBIGRAMl 0469  
           __end_of_get_quot_rem 2080                    ___rparam_used 000001  
                _RTCC_from_epoch 3042                 ?_ringbuf_put_num 0071  
               ?_ringbuf_put_str 006F             __CFG_WPEND$PAGE_WPFP 000000  
               terminal_task@op0 012A                 terminal_task@op1 0280  
               terminal_task@op2 0299                 terminal_task@op3 02B2  
               terminal_task@buf 0400                   __pcstackCOMRAM 0001  
                  __end_of_sd000 FDE8                    __end_of_sd001 FD82  
                  __end_of_sd002 FDB6                 terminal_time@op0 00BD  
               terminal_time@op1 00BF                 terminal_time@op2 00C1  
                   __pidataBANK1 3084                        ?_UART_ISR 0001  
           ??_terminal_operation 00CE         __end_of_terminal_at_hand 2CBE  
                      ?_OSC_init 0001                  __CFG_DSWDTPS$G2 000000  
                light_task@_3359 00F2                        ?_PWM_init 0001  
           terminal_task@command 0179                       _cdc_notice 0100  
        __size_of_ringbuf_delete 0026                       _cdc_rx_len 0038  
                     _cdc_tx_len 003A                       ??_ADC_init 0020  
     caltime_to_epoch@month_1589 0080                  light_task@value 008C  
                   sprintf@width 0092               __size_of_main_init 0096  
                     __pbssBANK0 00D6                       __pbssBANK1 0100  
                     __pbssBANK2 0200                       __pbssBANK3 0300  
        __end_of_caltime_to_RTCC 1ED8                  _RTCC_to_caltime 22C2  
                    _pBDTEntryIn 0027            __end_of_weekday_3char FDD2  
          RTCC_task@prev_halfsec 00E7                          ?___lmul 006D  
                     ??_UART_ISR 0010                          ?___wmul 0060  
                        ?_d_to_x 0001                       ??_OSC_init 0020  
                 ___lmul@product 0075                       _device_dsc FDD2  
                        ?_x_to_d 0001                       _ep_data_in 00DF  
                        ?_strcmp 0060                       ??_PWM_init 0020  
              _configDescriptor1 FD0B               __CFG_OSC$INTOSCPLL 000000  
         I2C_LCD_SetCursor@F8620 01B6                  __CFG_WDTPS$1024 000000  
                        _SPBRGH1 000F7F                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9             terminal_operation@tx 00C4  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
                        _UIEbits 000F36          __end_of_RTCC_from_epoch 305C  
           timer1_init@prescaler 0061                          _UIRbits 000F62  
                        _PWM_set 19A2                 i2ringbuf_pop@ret 000F  
                   PWM_set@color 0079                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                    _cdc_trf_state 0039  
                   PWM_set@value 0075                    ?_month_length 0020  
            epoch_to_caltime@day 0087              epoch_to_caltime@num 008B  
              RTCC_from_epoch@tm 008F                          _pCDCDst 0118  
                        _pCDCSrc 011B                          __Hparam 0000  
                        __Lparam 0000                ringbuf_put_num@rb 0071  
              ringbuf_put_str@rb 006F                    ?_ringbuf_init 0060  
                        ___awdiv 2148                  __size_of___lmul 0076  
                        ___awmod 2654                          ___lldiv 2206  
                __size_of___wmul 0036                          ___llmod 278C  
          ringbuf_put_num@digits 0075                       _light_mode 00ED  
                        ___lwdiv 2A34                       _light_task 1598  
                        ___lwmod 2CBE                  __size_of_d_to_x 0028  
          __end_of_terminal_task 1088            __end_of_terminal_time 0D1E  
           __size_of_ringbuf_pop 00C8             __size_of_ringbuf_num 00EE  
           __size_of_ringbuf_put 00D4                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 278C      epoch_to_caltime@month_cache 01B8  
                        __pcinit 29BC        __end_of_configDescriptor1 FD4E  
                        __ramtop 0F00             __size_of_timer0_init 0036  
           __size_of_timer1_init 004E                          __ptext0 2B22  
                        __ptext1 0D1E                          __ptext2 0000  
                        __ptext3 0972                          __ptext4 2C5C  
                        __ptext5 28AE                          __ptext6 0518  
                        __ptext7 2BF8                          __ptext8 2F7E  
                        __ptext9 2D1A                          _inPipes 0021  
           __size_of_timer3_init 0028                  __size_of_x_to_d 001C  
    _USBDeferOUTDataStagePackets 00E9                        _T0CONbits 000FD5  
               _time_change_flag 00EE                 _caltime_to_epoch 1088  
                __size_of_strcmp 0058                     __size_of_ISR 00F6  
                      _T1CONbits 000FCD                          _dpowers FCF9  
        __size_of_RTCC_from_RTCC 001A                        _T2CONbits 000FCA  
                        _isdigit 2F06                        _T3CONbits 000F79  
               ___awmod@dividend 0060                        _T5CONbits 000F22  
                        _uart_rx 0159                          _uart_tx 0161  
             __end_of_USB_CD_Ptr FD0B                          _sprintf 0518  
        __end_of_RTCC_to_caltime 237E            __size_of_get_quot_rem 00D4  
           end_of_initialization 2A2A           __size_ofi2_ringbuf_pop 00AC  
         __size_ofi2_ringbuf_num 00BC           __size_ofi2_ringbuf_put 00B6  
                   _CTMUCONHbits 000FB3               __end_of_USB_SD_Ptr FD09  
                   _CTMUCONLbits 000FB2              _pBDTEntryEP0OutNext 0031  
                 ??_month_length 0066  _dummy_encapsulated_cmd_response 0151  
                      i2u1010_40 0086                        i2u1011_40 009C  
                      i2u1012_40 009E                        i2u1013_40 00B4  
                      i2u1014_40 00B6                        i2u1006_40 005E  
                      i2u1007_48 0060                        i2u1009_40 0084  
               ?_caltime_to_RTCC 0076                  ___lldiv@divisor 0064  
           timer3_init@prescaler 0060                  ___lldiv@counter 006C  
                 ??_ringbuf_init 0020                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                        strcmp@r 0064       _USBStatusStageEnabledFlag1 00EA  
     _USBStatusStageEnabledFlag2 00EB                        _PORTAbits 000F80  
                      _UART_init 2FCA                        _UART_task 2FEA  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 2B8E  
                      _RTCC_task 2E5E        epoch_to_caltime@day_cache 0122  
         i2ringbuf_put@asciicode 000B                     _get_quot_rem 1FAC  
                     _print_time 28AE                   _ringbuf_delete 2FA4  
      __size_of_epoch_to_caltime 01F2                 __CFG_CPUDIV$OSC1 000000  
             _BothEP0OutUOWNsSet 0033              RTCC_from_caltime@tm 008F  
              __size_of_ADC_init 001C                 ?_RTCC_from_epoch 008F  
                      _USTATcopy 003F  __size_of_button_timer_interrupt 0282  
        timer1_init@clock_select 0020                      _CCP1CONbits 000FBA  
                    _CCP2CONbits 000FB4                 __CFG_IOL1WAY$OFF 000000  
                    _CCP3CONbits 000F15                      _CCP4CONbits 000F12  
            __CFG_MSSP7B_EN$MSK7 000000                   ringbuf_init@rb 0060  
                 ringbuf_pop@ret 0020                    i2_ringbuf_pop 25A8  
                  i2_ringbuf_num 237E                    i2_ringbuf_put 24F2  
                    ?_light_task 0001                ?_terminal_at_hand 00B4  
                 __end_of___lmul 2B22                   __end_of___wmul 2F06  
                 __end_of_d_to_x 2F7E                __size_of_UART_ISR 004A  
         __end_of_ringbuf_delete 2FCA               ??_terminal_at_hand 0021  
                     ?_UART_init 0001                       ?_UART_task 0001  
                     ?_RTCC_init 0001                __size_of_OSC_init 000E  
                     ?_RTCC_task 0001                 __CFG_DSWDTEN$OFF 000000  
              _USBBusIsSuspended 0127                   __end_of_x_to_d 3042  
          epoch_to_caltime@month 008A                   __end_of_strcmp 2D72  
            start_initialization 29BC                 month_length@year 006A  
                    __end_of_ISR 00FE                __size_of_PWM_init 00B8  
                    _cdc_data_rx 0200                      _cdc_data_tx 0240  
                  UART_ISR@ascii 0010                 ?_RTCC_to_caltime 0061  
                ___llmod@divisor 0064                  ___llmod@counter 0020  
         _pBDTEntryEP0OutCurrent 002F              ringbuf_put_num@temp 0077  
                       ??___lmul 0021                   ?i2_ringbuf_pop 0009  
                 ?i2_ringbuf_num 0001                   ?i2_ringbuf_put 0009  
                       ??___wmul 0020                         ??_d_to_x 0021  
    __size_of_terminal_operation 0518                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK1 01B6         __size_of_ringbuf_put_num 0082  
       __size_of_ringbuf_put_str 0064           _button_timer_interrupt 1316  
                       ??_x_to_d 0020                  ?_ringbuf_delete 0060  
                       ??_strcmp 0020             __end_of_month_length 1E02  
                 _RTCC_from_RTCC 305C           _USBActiveConfiguration 003E  
                    ?_print_time 0094                      __pbssCOMRAM 0021  
            RTCC_to_caltime@dumy 0063                    __pcstackBANK0 0060  
                  __pcstackBANK1 0194                    __pcstackBANK4 0400  
           __end_of_ringbuf_init 2DC6                     _isdigit$6089 0060  
                       ?_PWM_set 0075              __size_of_light_task 0218  
                    sprintf@flag 0090                   light_task@temp 008E  
                    sprintf@prec 0087                     _pBDTEntryOut 010A  
       __end_of_caltime_to_epoch 1316                  millis_timer@cnt 0124  
               ___lwdiv@dividend 0066                        __pintcode 0008  
                  __pmediumconst FCF8                         ?___awdiv 006D  
                       ?___awmod 0060                         ?___lldiv 0060  
                       ?___llmod 0060                         ?___lwdiv 0066  
                       ?___lwmod 006D           __end_of_RTCC_from_RTCC 3076  
                    ??_UART_init 0020       USBCBSendResume@delay_count 011E  
                    ??_UART_task 0020                      ??_RTCC_init 0021  
                    ??_RTCC_task 0021                        _main_init 26F6  
                       ?_isdigit 0001                 _epoch_to_caltime 17B0  
           __CFG_RTCOSC$T1OSCREF 000000                         _ADC_flag 0126  
                       _ADC_init 300A                      _PADCFG1bits 000F3C  
            ringbuf_backspace@rb 0068                      _ep_data_out 00E2  
               ___lwdiv@quotient 006B            terminal_at_hand@value 00BA  
                       ?_sprintf 0071                        d_to_x@dec 0075  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 0062  
                 ___wmul@product 0064                         _LATBbits 000F8A  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
            __size_of_print_time 008C                  ??i2_ringbuf_pop 000B  
                ??i2_ringbuf_num 0003                  ??i2_ringbuf_put 000C  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       _PIR5bits 000F98       epoch_to_caltime@year_cache 0129  
                       i2u580_40 153E                         i2u581_40 1564  
                       i2u578_40 14F2                         i2u579_40 1518  
                  ??_ringbuf_pop 006A                    ??_ringbuf_num 0062  
                  ??_ringbuf_put 006B                         _RCONbits 000FD0  
                       _UEP0bits 000F26       _USBDeferINDataStagePackets 00E8  
                       _UART_ISR 2E14            terminal_operation@op0 00C6  
          terminal_operation@op1 00C8            terminal_operation@op2 00CA  
          terminal_operation@op3 00CC                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                    ??_timer0_init 0020  
                  ??_timer1_init 0060            terminal_operation@str 0194  
                  ??_timer3_init 0020                         _SSP1STAT 000FC7  
                       _UCONbits 000F65                         _OSC_init 3076  
                ?_RTCC_from_RTCC 0086                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                ___wmul@multiplier 0060  
               __CFG_SOSCSEL$LOW 000000                         _PWM_init 243A  
 button_timer_interrupt@sw_value 0003                       ?_main_init 0001  
                   _RemoteWakeup 0034                ??_ringbuf_put_num 0021  
              ??_ringbuf_put_str 0020                    ringbuf_pop@rb 0068  
                  ringbuf_num@rb 0060                    ringbuf_put@rb 0068  
              ___lmul@multiplier 006D                      _INTCON2bits 000FF1  
           epoch_to_caltime@year 0089           __size_of_terminal_task 036A  
         __size_of_terminal_time 03AC                 __size_of_PWM_set 01A8  
                     _CCPR1Lbits 000FBB                       _CCPR2Lbits 000FB5  
                     _CCPR3Lbits 000F16               __end_of_device_dsc FDE4  
                     _CCPR4Lbits 000F13                         __Hrparam 0000  
           light_task@value_3360 008D                         __Lrparam 0000  
                       _SetupPkt 000D30                    _weekday_3char FDB6  
          __size_of_month_length 00D8               ringbuf_put_str@str 0071  
                   ??_light_task 0088         __size_of_caltime_to_RTCC 00D6  
               __size_of___awdiv 00BE                 __size_of___awmod 00A2  
               __size_of___lldiv 00BC                 __size_of___llmod 0094  
               __size_of___lwdiv 0078                 __size_of___lwmod 005C  
            __end_of_ringbuf_pop 2148              __end_of_ringbuf_num 1D2A  
            __end_of_ringbuf_put 1FAC                      _line_coding 0181  
            __end_of_timer0_init 2ED0            __size_of_ringbuf_init 0054  
            __end_of_timer1_init 2E14                       sprintf@len 008E  
            __end_of_timer3_init 2F56                       sprintf@val 008C  
               __size_of_isdigit 0028                  ___lwdiv@divisor 0068  
                ___lwdiv@counter 006A             timer0_init@prescaler 0060  
                       __ptext10 1B4A                         __ptext11 2F06  
                       __ptext20 2DC6                         __ptext12 293A  
                       __ptext21 2E9A                         __ptext13 1ED8  
                       __ptext30 2148                         __ptext22 2D72  
                       __ptext14 2CBE                         __ptext31 243A  
                       __ptext23 2FCA                         __ptext15 2080  
                       __ptext40 2FEA                         __ptext32 3076  
                       __ptext24 2B8E                         __ptext16 2FA4  
                       __ptext41 1C3C                         __ptext33 300A  
                       __ptext25 3042                         __ptext17 2820  
                       __ptext42 2E5E                         __ptext34 1598  
                       __ptext26 17B0                         __ptext18 26F6  
                       __ptext51 1316                         __ptext43 305C  
                       __ptext35 278C                         __ptext27 1FAC  
                       __ptext19 2F2E                         __ptext52 2E14  
                       __ptext44 1088                         __ptext36 2206  
                       __ptext28 1E02                         __ptext53 24F2  
                       __ptext45 1D2A                         __ptext37 19A2  
                       __ptext29 2F56                         __ptext54 25A8  
                       __ptext46 2654                         __ptext38 2ED0  
                       __ptext55 237E                         __ptext47 2AAC  
                       __ptext39 2A34                         __ptext48 22C2  
                       __ptext49 3026                     _SSP1CON1bits 000FC6  
                   _SSP1CON2bits 000FC5                       PWM_init@PR 0020  
      __size_of_terminal_at_hand 0062                 __size_of_sprintf 045A  
           terminal_at_hand@hand 00B6               __end_of_light_task 17B0  
                  __size_of_atoi 00F2                    __size_of_main 006C  
                   _month_length 1D2A         __size_of_RTCC_from_epoch 001A  
                       _outPipes 00D6                 ??_ringbuf_delete 0020  
        ?_button_timer_interrupt 0001                         int$flags 0040  
                   _ringbuf_init 2D72                         atoi@sign 006A  
                      x_to_d@hex 0060                     _SSP1STATbits 000FC7  
                  _terminal_task 0D1E                    _terminal_time 0972  
      _USBDeferStatusStagePacket 0035                     ??_print_time 0021  
                 main_init@rxbuf 0300                   main_init@txbuf 0469  
                    ??_main_init 0021                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 006A  
                       isdigit@c 0061                 get_quot_rem@quot 0079  
      terminal_task@command_init 00EF                RTCC_to_caltime@tm 0061  
                       intlevel2 0000                        sprintf@ap 0088  
                      sprintf@cp 008A                        sprintf@sp 0071  
               ___lwmod@dividend 006D                 ___lldiv@dividend 0060  
                     _RCSTA1bits 000FAC              terminal_at_hand@max 00B9  
            terminal_at_hand@min 00B8                ?_caltime_to_epoch 0079  
              _ringbuf_backspace 2820         __end_of_epoch_to_caltime 19A2  
       __size_of_RTCC_to_caltime 00BC                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 1598       __end_of_terminal_operation 0518  
             __end_of_print_time 293A               ??_caltime_to_epoch 007B  
             ?_ringbuf_backspace 0068                      _ringbuf_pop 2080  
                    _ringbuf_num 1C3C                      _ringbuf_put 1ED8  
                    _timer0_init 2E9A                      _timer1_init 2DC6  
                    _timer3_init 2F2E                   ?_terminal_task 00D0  
                 ?_terminal_time 00BB              ??_ringbuf_backspace 006A  
                get_quot_rem@div 007B                  get_quot_rem@num 007D  
                     _RTCCFGbits 000F3F                         sprintf@c 0091  
                       sprintf@f 0073                         strcmp@s1 0060  
                       strcmp@s2 0062                       _PPSCONbits 000EBF  
               ___lldiv@quotient 0068                  ___lwmod@divisor 006F  
              caltime_to_RTCC@tm 0076                ??_caltime_to_RTCC 0021  
          _USBAlternateInterface 00F0                  ___lwmod@counter 0020  
             terminal_at_hand@tx 00B4                  _endpoint_number 003C  
epoch_to_caltime@day_since_epoch 0085        __end_of_ringbuf_backspace 28AE  
   _USBStatusStageTimeoutCounter 0037                       _USB_CD_Ptr FD09  
               ??_RTCC_from_RTCC 0021  
