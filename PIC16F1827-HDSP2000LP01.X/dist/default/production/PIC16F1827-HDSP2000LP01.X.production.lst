

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 18:53:55 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  0008                     	;# 
    25  0009                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  0011                     	;# 
    31  0012                     	;# 
    32  0013                     	;# 
    33  0014                     	;# 
    34  0015                     	;# 
    35  0016                     	;# 
    36  0016                     	;# 
    37  0017                     	;# 
    38  0018                     	;# 
    39  0019                     	;# 
    40  001A                     	;# 
    41  001B                     	;# 
    42  001C                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  008C                     	;# 
    46  008D                     	;# 
    47  0091                     	;# 
    48  0092                     	;# 
    49  0093                     	;# 
    50  0094                     	;# 
    51  0095                     	;# 
    52  0096                     	;# 
    53  0097                     	;# 
    54  0098                     	;# 
    55  0099                     	;# 
    56  009A                     	;# 
    57  009B                     	;# 
    58  009B                     	;# 
    59  009C                     	;# 
    60  009D                     	;# 
    61  009E                     	;# 
    62  010C                     	;# 
    63  010D                     	;# 
    64  0111                     	;# 
    65  0112                     	;# 
    66  0113                     	;# 
    67  0114                     	;# 
    68  0115                     	;# 
    69  0116                     	;# 
    70  0117                     	;# 
    71  0118                     	;# 
    72  0119                     	;# 
    73  011A                     	;# 
    74  011B                     	;# 
    75  011D                     	;# 
    76  011E                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79  0191                     	;# 
    80  0191                     	;# 
    81  0192                     	;# 
    82  0193                     	;# 
    83  0193                     	;# 
    84  0193                     	;# 
    85  0194                     	;# 
    86  0195                     	;# 
    87  0196                     	;# 
    88  0199                     	;# 
    89  019A                     	;# 
    90  019B                     	;# 
    91  019B                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019C                     	;# 
    95  019C                     	;# 
    96  019D                     	;# 
    97  019E                     	;# 
    98  019F                     	;# 
    99  020C                     	;# 
   100  020D                     	;# 
   101  0211                     	;# 
   102  0211                     	;# 
   103  0212                     	;# 
   104  0212                     	;# 
   105  0213                     	;# 
   106  0213                     	;# 
   107  0214                     	;# 
   108  0214                     	;# 
   109  0215                     	;# 
   110  0215                     	;# 
   111  0215                     	;# 
   112  0216                     	;# 
   113  0216                     	;# 
   114  0217                     	;# 
   115  0217                     	;# 
   116  0219                     	;# 
   117  021A                     	;# 
   118  021B                     	;# 
   119  021C                     	;# 
   120  021D                     	;# 
   121  021E                     	;# 
   122  021F                     	;# 
   123  0291                     	;# 
   124  0291                     	;# 
   125  0292                     	;# 
   126  0293                     	;# 
   127  0294                     	;# 
   128  0295                     	;# 
   129  0295                     	;# 
   130  0296                     	;# 
   131  0298                     	;# 
   132  0298                     	;# 
   133  0299                     	;# 
   134  029A                     	;# 
   135  029B                     	;# 
   136  029C                     	;# 
   137  029C                     	;# 
   138  029D                     	;# 
   139  029E                     	;# 
   140  029E                     	;# 
   141  0311                     	;# 
   142  0311                     	;# 
   143  0312                     	;# 
   144  0313                     	;# 
   145  0318                     	;# 
   146  0318                     	;# 
   147  0319                     	;# 
   148  031A                     	;# 
   149  0394                     	;# 
   150  0395                     	;# 
   151  0396                     	;# 
   152  039A                     	;# 
   153  039C                     	;# 
   154  039D                     	;# 
   155  039E                     	;# 
   156  039F                     	;# 
   157  0415                     	;# 
   158  0416                     	;# 
   159  0417                     	;# 
   160  041C                     	;# 
   161  041D                     	;# 
   162  041E                     	;# 
   163  0FE4                     	;# 
   164  0FE5                     	;# 
   165  0FE6                     	;# 
   166  0FE7                     	;# 
   167  0FE8                     	;# 
   168  0FE9                     	;# 
   169  0FEA                     	;# 
   170  0FEB                     	;# 
   171  0FED                     	;# 
   172  0FEE                     	;# 
   173  0FEF                     	;# 
   174                           
   175                           	psect	idataBANK0
   176  06B4                     __pidataBANK0:	
   177                           
   178                           ;initializer for _print_char
   179  06B4  34FF               	retlw	255
   180  06B5  347B               	retlw	123
   181  06B6  3401               	retlw	1
   182  06B7  347F               	retlw	127
   183  06B8  34FF               	retlw	255
   184  06B9  347B               	retlw	123
   185  06BA  343D               	retlw	61
   186  06BB  345D               	retlw	93
   187  06BC  346D               	retlw	109
   188  06BD  3473               	retlw	115
   189  06BE  34BB               	retlw	187
   190  06BF  347D               	retlw	125
   191  06C0  346D               	retlw	109
   192  06C1  346D               	retlw	109
   193  06C2  3493               	retlw	147
   194  06C3  34CF               	retlw	207
   195  06C4  34D7               	retlw	215
   196  06C5  34DB               	retlw	219
   197  06C6  3401               	retlw	1
   198  06C7  34DF               	retlw	223
   199  0095                     _OPTION_REGbits	set	149
   200  0099                     _OSCCON	set	153
   201  008C                     _TRISA	set	140
   202  008D                     _TRISB	set	141
   203  010D                     _LATB	set	269
   204  0868                     _LATB0	set	2152
   205  0869                     _LATB1	set	2153
   206  018C                     _ANSELA	set	396
   207  018D                     _ANSELB	set	397
   208  020C                     _WPUA	set	524
   209                           
   210                           ; #config settings
   211  0000                     
   212                           	psect	cinit
   213  07F2                     start_initialization:	
   214  07F2                     __initialization:	
   215                           
   216                           ; Initialize objects allocated to BANK0
   217  07F2  30B4               	movlw	low __pidataBANK0
   218  07F3  0084               	movwf	4
   219  07F4  3086               	movlw	(high __pidataBANK0)| (0+128)
   220  07F5  0085               	movwf	5
   221  07F6  3020               	movlw	low __pdataBANK0
   222  07F7  0086               	movwf	6
   223  07F8  3000               	movlw	high __pdataBANK0
   224  07F9  0087               	movwf	7
   225  07FA  3014               	movlw	20
   226  07FB  3186  269D         	fcall	init_ram
   227  07FD                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  07FD                     __end_of__initialization:	
   231  07FD  0020               	movlb	0
   232  07FE  3186  2EC8         	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	dataBANK0
   235  0020                     __pdataBANK0:	
   236  0020                     _print_char:	
   237  0020                     	ds	20
   238                           
   239                           	psect	inittext
   240  069D                     init_ram:	
   241  069D  00FE               	movwf	126
   242  069E                     initloop:	
   243  069E  0012               	moviw fsr0++
   244  069F  001E               	movwi fsr1++
   245  06A0  0BFE               	decfsz	126,f
   246  06A1  2E9E               	goto	initloop
   247  06A2  3400               	retlw	0
   248                           
   249                           	psect	cstackCOMMON
   250  0070                     __pcstackCOMMON:	
   251  0070                     ?_send_serial:	
   252  0070                     ?_main:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?___awdiv:	
   256                           ; 2 bytes @ 0x0
   257                           
   258  0070                     ?___awmod:	
   259                           ; 2 bytes @ 0x0
   260                           
   261  0070                     ___awdiv@divisor:	
   262                           ; 2 bytes @ 0x0
   263                           
   264  0070                     ___awmod@divisor:	
   265                           ; 2 bytes @ 0x0
   266                           
   267                           
   268                           ; 2 bytes @ 0x0
   269  0070                     	ds	2
   270  0072                     ___awdiv@dividend:	
   271  0072                     ___awmod@dividend:	
   272                           ; 2 bytes @ 0x2
   273                           
   274                           
   275                           ; 2 bytes @ 0x2
   276  0072                     	ds	2
   277  0074                     ??___awdiv:	
   278  0074                     ??___awmod:	
   279                           ; 0 bytes @ 0x4
   280                           
   281                           
   282                           ; 0 bytes @ 0x4
   283  0074                     	ds	1
   284  0075                     ___awdiv@counter:	
   285  0075                     ___awmod@counter:	
   286                           ; 1 bytes @ 0x5
   287                           
   288                           
   289                           ; 1 bytes @ 0x5
   290  0075                     	ds	1
   291  0076                     ___awdiv@sign:	
   292  0076                     ___awmod@sign:	
   293                           ; 1 bytes @ 0x6
   294                           
   295                           
   296                           ; 1 bytes @ 0x6
   297  0076                     	ds	1
   298  0077                     ___awdiv@quotient:	
   299                           
   300                           ; 2 bytes @ 0x7
   301  0077                     	ds	2
   302  0079                     ?___bmul:	
   303  0079                     ___bmul@multiplicand:	
   304                           ; 1 bytes @ 0x9
   305                           
   306                           
   307                           ; 1 bytes @ 0x9
   308  0079                     	ds	1
   309  007A                     ??___bmul:	
   310                           
   311                           ; 0 bytes @ 0xA
   312  007A                     	ds	1
   313  007B                     ___bmul@product:	
   314                           
   315                           ; 1 bytes @ 0xB
   316  007B                     	ds	1
   317  007C                     ___bmul@multiplier:	
   318                           
   319                           ; 1 bytes @ 0xC
   320  007C                     	ds	1
   321  007D                     main@i:	
   322                           
   323                           ; 1 bytes @ 0xD
   324  007D                     	ds	1
   325                           
   326                           	psect	cstackBANK0
   327  0034                     __pcstackBANK0:	
   328  0034                     ??_send_serial:	
   329                           
   330                           ; 0 bytes @ 0x0
   331  0034                     	ds	9
   332  003D                     send_serial@column:	
   333                           
   334                           ; 1 bytes @ 0x9
   335  003D                     	ds	1
   336  003E                     send_serial@n:	
   337                           
   338                           ; 1 bytes @ 0xA
   339  003E                     	ds	1
   340  003F                     ??_main:	
   341                           
   342                           ; 0 bytes @ 0xB
   343  003F                     	ds	2
   344                           
   345                           	psect	maintext
   346  06C8                     __pmaintext:	
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 72 in file "PIC16F1827-HDSP2000LP01.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  i               1   13[COMMON] unsigned char 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  2   31[None  ] int 
   359 ;; Registers used:
   360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : B1F/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   366 ;;      Params:         0       0       0       0       0       0
   367 ;;      Locals:         1       0       0       0       0       0
   368 ;;      Temps:          0       2       0       0       0       0
   369 ;;      Totals:         1       2       0       0       0       0
   370 ;;Total ram usage:        3 bytes
   371 ;; Hardware stack levels required when called:    2
   372 ;; This function calls:
   373 ;;		_send_serial
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _main
   381  06C8                     _main:	
   382                           
   383                           ;PIC16F1827-HDSP2000LP01.c: 73: OSCCON = 0x70;
   384                           
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   387  06C8  3070               	movlw	112
   388  06C9  0021               	movlb	1	; select bank1
   389  06CA  0099               	movwf	25	;volatile
   390                           
   391                           ;PIC16F1827-HDSP2000LP01.c: 74: TRISA = 0x00;
   392  06CB  018C               	clrf	12	;volatile
   393                           
   394                           ;PIC16F1827-HDSP2000LP01.c: 75: TRISB = 0x00;
   395  06CC  018D               	clrf	13	;volatile
   396                           
   397                           ;PIC16F1827-HDSP2000LP01.c: 76: ANSELA = 0x00;
   398  06CD  0023               	movlb	3	; select bank3
   399  06CE  018C               	clrf	12	;volatile
   400                           
   401                           ;PIC16F1827-HDSP2000LP01.c: 77: ANSELB = 0x00;
   402  06CF  018D               	clrf	13	;volatile
   403                           
   404                           ;PIC16F1827-HDSP2000LP01.c: 78: WPUA = 0xFF;
   405  06D0  30FF               	movlw	255
   406  06D1  0024               	movlb	4	; select bank4
   407  06D2  008C               	movwf	12	;volatile
   408                           
   409                           ;PIC16F1827-HDSP2000LP01.c: 79: OPTION_REGbits.nWPUEN = 0;
   410  06D3  0021               	movlb	1	; select bank1
   411  06D4  1395               	bcf	21,7	;volatile
   412  06D5                     l759:	
   413                           ;PIC16F1827-HDSP2000LP01.c: 84: uint8_t i;
   414                           ;PIC16F1827-HDSP2000LP01.c: 85: while (1) {
   415                           
   416                           
   417                           ;PIC16F1827-HDSP2000LP01.c: 86: for (i = 0; i < 5; i++) {
   418  06D5  01FD               	clrf	main@i
   419  06D6                     L1:	
   420  06D6  3005               	movlw	5
   421  06D7  027D               	subwf	main@i,w
   422  06D8  1803               	btfsc	3,0
   423  06D9  2ED5               	goto	l759
   424                           
   425                           ;PIC16F1827-HDSP2000LP01.c: 87: LATB = LATB & 0b00000011;
   426  06DA  0022               	movlb	2	; select bank2
   427  06DB  080D               	movf	13,w	;volatile
   428  06DC  3903               	andlw	3
   429  06DD  008D               	movwf	13	;volatile
   430                           
   431                           ;PIC16F1827-HDSP2000LP01.c: 88: send_serial(i);
   432  06DE  087D               	movf	main@i,w
   433  06DF  3187  2799  3186   	fcall	_send_serial
   434                           
   435                           ;PIC16F1827-HDSP2000LP01.c: 89: LATB = (LATB & 0b00000011) + (1 << (i + 2));
   436  06E2  3001               	movlw	1
   437  06E3  0020               	movlb	0	; select bank0
   438  06E4  00BF               	movwf	??_main
   439  06E5  087D               	movf	main@i,w
   440  06E6  3E02               	addlw	2
   441  06E7  0A89               	incf	9,f
   442  06E8  2EEA               	goto	u574
   443  06E9                     u575:	
   444  06E9  35BF               	lslf	??_main,f
   445  06EA                     u574:	
   446  06EA  0B89               	decfsz	9,f
   447  06EB  2EE9               	goto	u575
   448  06EC  0022               	movlb	2	; select bank2
   449  06ED  080D               	movf	13,w	;volatile
   450  06EE  3903               	andlw	3
   451  06EF  0020               	movlb	0	; select bank0
   452  06F0  073F               	addwf	??_main,w
   453  06F1  0022               	movlb	2	; select bank2
   454  06F2  008D               	movwf	13	;volatile
   455                           
   456                           ;PIC16F1827-HDSP2000LP01.c: 90: _delay((unsigned long)((1)*(32000000/4000.0)));
   457  06F3  300B               	movlw	11
   458  06F4  0020               	movlb	0	; select bank0
   459  06F5  00C0               	movwf	??_main+1
   460  06F6  3062               	movlw	98
   461  06F7  00BF               	movwf	??_main
   462  06F8                     u597:	
   463  06F8  0BBF               	decfsz	??_main,f
   464  06F9  2EF8               	goto	u597
   465  06FA  0BC0               	decfsz	??_main+1,f
   466  06FB  2EF8               	goto	u597
   467  06FC  0000               	nop
   468  06FD  3001               	movlw	1
   469  06FE  0020               	movlb	0	; select bank0
   470  06FF  00BF               	movwf	??_main
   471  0700  083F               	movf	??_main,w
   472  0701  07FD               	addwf	main@i,f
   473  0702  2ED6               	goto	L1
   474  0703                     __end_of_main:	
   475                           ;PIC16F1827-HDSP2000LP01.c: 91: }
   476                           ;PIC16F1827-HDSP2000LP01.c: 92: }
   477                           ;PIC16F1827-HDSP2000LP01.c: 93: return 0;
   478                           ;	Return value of _main is never used
   479                           
   480                           
   481                           	psect	text1
   482  0799                     __ptext1:	
   483 ;; *************** function _send_serial *****************
   484 ;; Defined at:
   485 ;;		line 57 in file "PIC16F1827-HDSP2000LP01.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;  column          1    wreg     unsigned char 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  column          1    9[BANK0 ] unsigned char 
   490 ;;  n               1   10[BANK0 ] unsigned char 
   491 ;; Return value:  Size  Location     Type
   492 ;;		None               void
   493 ;; Registers used:
   494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   500 ;;      Params:         0       0       0       0       0       0
   501 ;;      Locals:         0       2       0       0       0       0
   502 ;;      Temps:          0       9       0       0       0       0
   503 ;;      Totals:         0      11       0       0       0       0
   504 ;;Total ram usage:       11 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    1
   507 ;; This function calls:
   508 ;;		___awdiv
   509 ;;		___awmod
   510 ;;		___bmul
   511 ;; This function is called by:
   512 ;;		_main
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           
   517                           ;psect for function _send_serial
   518  0799                     _send_serial:	
   519                           
   520                           ;incstack = 0
   521                           ; Regs used in _send_serial: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   522                           ;send_serial@column stored from wreg
   523  0799  0020               	movlb	0	; select bank0
   524  079A  00BD               	movwf	send_serial@column
   525                           
   526                           ;PIC16F1827-HDSP2000LP01.c: 58: uint8_t n;
   527                           ;PIC16F1827-HDSP2000LP01.c: 59: for (n = 0; n < 28; n++) {
   528  079B  01BE               	clrf	send_serial@n
   529  079C                     L2:	
   530  079C  301C               	movlw	28
   531  079D  023E               	subwf	send_serial@n,w
   532  079E  1803               	btfsc	3,0
   533  079F  0008               	return
   534                           
   535                           ;PIC16F1827-HDSP2000LP01.c: 60: LATB0 = 1;
   536  07A0  0022               	movlb	2	; select bank2
   537  07A1  140D               	bsf	13,0	;volatile
   538                           
   539                           ;PIC16F1827-HDSP2000LP01.c: 61: LATB1 = (~(print_char[3 - ((n / 7) % 4)][column])) >> (7
      +                           - (n % 7));
   540  07A2  3007               	movlw	7
   541  07A3  00F0               	movwf	___awmod@divisor
   542  07A4  3000               	movlw	0
   543  07A5  00F1               	movwf	___awmod@divisor+1
   544  07A6  0020               	movlb	0	; select bank0
   545  07A7  083E               	movf	send_serial@n,w
   546  07A8  00B4               	movwf	??_send_serial
   547  07A9  01B5               	clrf	??_send_serial+1
   548  07AA  0834               	movf	??_send_serial,w
   549  07AB  00F2               	movwf	___awmod@dividend
   550  07AC  0835               	movf	??_send_serial+1,w
   551  07AD  00F3               	movwf	___awmod@dividend+1
   552  07AE  3187  2703  3187   	fcall	___awmod
   553  07B1  0870               	movf	?___awmod,w
   554  07B2  3AFF               	xorlw	255
   555  07B3  3E01               	addlw	1
   556  07B4  3E07               	addlw	7
   557  07B5  0020               	movlb	0	; select bank0
   558  07B6  00B6               	movwf	??_send_serial+2
   559  07B7  0AB6               	incf	??_send_serial+2,f
   560  07B8  3005               	movlw	5
   561  07B9  00B7               	movwf	??_send_serial+3
   562  07BA  0837               	movf	??_send_serial+3,w
   563  07BB  00F9               	movwf	___bmul@multiplicand
   564  07BC  3007               	movlw	7
   565  07BD  00F0               	movwf	___awdiv@divisor
   566  07BE  3000               	movlw	0
   567  07BF  00F1               	movwf	___awdiv@divisor+1
   568  07C0  083E               	movf	send_serial@n,w
   569  07C1  00B8               	movwf	??_send_serial+4
   570  07C2  01B9               	clrf	??_send_serial+5
   571  07C3  0838               	movf	??_send_serial+4,w
   572  07C4  00F2               	movwf	___awdiv@dividend
   573  07C5  0839               	movf	??_send_serial+5,w
   574  07C6  00F3               	movwf	___awdiv@dividend+1
   575  07C7  3187  2748  3187   	fcall	___awdiv
   576  07CA  0870               	movf	?___awdiv,w
   577  07CB  3903               	andlw	3
   578  07CC  3AFF               	xorlw	255
   579  07CD  3E01               	addlw	1
   580  07CE  3E03               	addlw	3
   581  07CF  3186  26A3  3187   	fcall	___bmul
   582  07D2  3E20               	addlw	(low (_print_char| 0))& (0+255)
   583  07D3  0020               	movlb	0	; select bank0
   584  07D4  073D               	addwf	send_serial@column,w
   585  07D5  00BA               	movwf	??_send_serial+6
   586  07D6  083A               	movf	??_send_serial+6,w
   587  07D7  0086               	movwf	6
   588  07D8  0187               	clrf	7
   589  07D9  0901               	comf	1,w
   590  07DA  00BB               	movwf	??_send_serial+7
   591  07DB  01BC               	clrf	??_send_serial+8
   592  07DC  09BC               	comf	??_send_serial+8,f
   593  07DD  2FE1               	goto	u524
   594  07DE                     u525:	
   595  07DE  0D3C               	rlf	??_send_serial+8,w
   596  07DF  0CBC               	rrf	??_send_serial+8,f
   597  07E0  0CBB               	rrf	??_send_serial+7,f
   598  07E1                     u524:	
   599  07E1  0BB6               	decfsz	??_send_serial+2,f
   600  07E2  2FDE               	goto	u525
   601  07E3  0020               	movlb	0	; select bank0
   602  07E4  1C3B               	btfss	??_send_serial+7,0
   603  07E5  2FE9               	goto	u530
   604  07E6  0022               	movlb	2	; select bank2
   605  07E7  148D               	bsf	13,1	;volatile
   606  07E8  2FEB               	goto	l741
   607  07E9                     u530:	
   608  07E9  0022               	movlb	2	; select bank2
   609  07EA  108D               	bcf	13,1	;volatile
   610  07EB                     l741:	
   611                           
   612                           ;PIC16F1827-HDSP2000LP01.c: 62: LATB0 = 0;
   613  07EB  100D               	bcf	13,0	;volatile
   614  07EC  3001               	movlw	1
   615  07ED  0020               	movlb	0	; select bank0
   616  07EE  00B4               	movwf	??_send_serial
   617  07EF  0834               	movf	??_send_serial,w
   618  07F0  07BE               	addwf	send_serial@n,f
   619  07F1  2F9C               	goto	L2
   620  07F2                     __end_of_send_serial:	
   621                           
   622                           	psect	text2
   623  06A3                     __ptext2:	
   624 ;; *************** function ___bmul *****************
   625 ;; Defined at:
   626 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  multiplier      1    wreg     unsigned char 
   629 ;;  multiplicand    1    9[COMMON] unsigned char 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  multiplier      1   12[COMMON] unsigned char 
   632 ;;  product         1   11[COMMON] unsigned char 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      unsigned char 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   642 ;;      Params:         1       0       0       0       0       0
   643 ;;      Locals:         2       0       0       0       0       0
   644 ;;      Temps:          1       0       0       0       0       0
   645 ;;      Totals:         4       0       0       0       0       0
   646 ;;Total ram usage:        4 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_send_serial
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function ___bmul
   657  06A3                     ___bmul:	
   658                           
   659                           ;incstack = 0
   660                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   661                           ;___bmul@multiplier stored from wreg
   662  06A3  00FC               	movwf	___bmul@multiplier
   663  06A4  01FB               	clrf	___bmul@product
   664  06A5                     l639:	
   665  06A5  1C7C               	btfss	___bmul@multiplier,0
   666  06A6  2EAB               	goto	l643
   667  06A7  0879               	movf	___bmul@multiplicand,w
   668  06A8  00FA               	movwf	??___bmul
   669  06A9  087A               	movf	??___bmul,w
   670  06AA  07FB               	addwf	___bmul@product,f
   671  06AB                     l643:	
   672  06AB  1003               	clrc
   673  06AC  0DF9               	rlf	___bmul@multiplicand,f
   674  06AD  1003               	clrc
   675  06AE  0CFC               	rrf	___bmul@multiplier,f
   676  06AF  087C               	movf	___bmul@multiplier,w
   677  06B0  1D03               	btfss	3,2
   678  06B1  2EA5               	goto	l639
   679  06B2  087B               	movf	___bmul@product,w
   680  06B3  0008               	return
   681  06B4                     __end_of___bmul:	
   682                           
   683                           	psect	text3
   684  0703                     __ptext3:	
   685 ;; *************** function ___awmod *****************
   686 ;; Defined at:
   687 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  divisor         2    0[COMMON] int 
   690 ;;  dividend        2    2[COMMON] int 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  sign            1    6[COMMON] unsigned char 
   693 ;;  counter         1    5[COMMON] unsigned char 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  2    0[COMMON] int 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   703 ;;      Params:         4       0       0       0       0       0
   704 ;;      Locals:         2       0       0       0       0       0
   705 ;;      Temps:          1       0       0       0       0       0
   706 ;;      Totals:         7       0       0       0       0       0
   707 ;;Total ram usage:        7 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_send_serial
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function ___awmod
   718  0703                     ___awmod:	
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   722  0703  01F6               	clrf	___awmod@sign
   723  0704  1FF3               	btfss	___awmod@dividend+1,7
   724  0705  2F0D               	goto	l703
   725  0706  09F2               	comf	___awmod@dividend,f
   726  0707  09F3               	comf	___awmod@dividend+1,f
   727  0708  0AF2               	incf	___awmod@dividend,f
   728  0709  1903               	skipnz
   729  070A  0AF3               	incf	___awmod@dividend+1,f
   730  070B  01F6               	clrf	___awmod@sign
   731  070C  0AF6               	incf	___awmod@sign,f
   732  070D                     l703:	
   733  070D  1FF1               	btfss	___awmod@divisor+1,7
   734  070E  2F14               	goto	l707
   735  070F  09F0               	comf	___awmod@divisor,f
   736  0710  09F1               	comf	___awmod@divisor+1,f
   737  0711  0AF0               	incf	___awmod@divisor,f
   738  0712  1903               	skipnz
   739  0713  0AF1               	incf	___awmod@divisor+1,f
   740  0714                     l707:	
   741  0714  0870               	movf	___awmod@divisor,w
   742  0715  0471               	iorwf	___awmod@divisor+1,w
   743  0716  1903               	btfsc	3,2
   744  0717  2F3B               	goto	l725
   745  0718  01F5               	clrf	___awmod@counter
   746  0719  0AF5               	incf	___awmod@counter,f
   747  071A                     l715:	
   748  071A  1BF1               	btfsc	___awmod@divisor+1,7
   749  071B  2F26               	goto	l717
   750  071C  3001               	movlw	1
   751  071D                     u455:	
   752  071D  35F0               	lslf	___awmod@divisor,f
   753  071E  0DF1               	rlf	___awmod@divisor+1,f
   754  071F  0B89               	decfsz	9,f
   755  0720  2F1D               	goto	u455
   756  0721  3001               	movlw	1
   757  0722  00F4               	movwf	??___awmod
   758  0723  0874               	movf	??___awmod,w
   759  0724  07F5               	addwf	___awmod@counter,f
   760  0725  2F1A               	goto	l715
   761  0726                     l717:	
   762  0726  0871               	movf	___awmod@divisor+1,w
   763  0727  0273               	subwf	___awmod@dividend+1,w
   764  0728  1D03               	skipz
   765  0729  2F2C               	goto	u475
   766  072A  0870               	movf	___awmod@divisor,w
   767  072B  0272               	subwf	___awmod@dividend,w
   768  072C                     u475:	
   769  072C  1C03               	skipc
   770  072D  2F32               	goto	l721
   771  072E  0870               	movf	___awmod@divisor,w
   772  072F  02F2               	subwf	___awmod@dividend,f
   773  0730  0871               	movf	___awmod@divisor+1,w
   774  0731  3BF3               	subwfb	___awmod@dividend+1,f
   775  0732                     l721:	
   776  0732  3001               	movlw	1
   777  0733                     u485:	
   778  0733  36F1               	lsrf	___awmod@divisor+1,f
   779  0734  0CF0               	rrf	___awmod@divisor,f
   780  0735  0B89               	decfsz	9,f
   781  0736  2F33               	goto	u485
   782  0737  3001               	movlw	1
   783  0738  02F5               	subwf	___awmod@counter,f
   784  0739  1D03               	btfss	3,2
   785  073A  2F26               	goto	l717
   786  073B                     l725:	
   787  073B  0876               	movf	___awmod@sign,w
   788  073C  1903               	btfsc	3,2
   789  073D  2F43               	goto	l729
   790  073E  09F2               	comf	___awmod@dividend,f
   791  073F  09F3               	comf	___awmod@dividend+1,f
   792  0740  0AF2               	incf	___awmod@dividend,f
   793  0741  1903               	skipnz
   794  0742  0AF3               	incf	___awmod@dividend+1,f
   795  0743                     l729:	
   796  0743  0873               	movf	___awmod@dividend+1,w
   797  0744  00F1               	movwf	?___awmod+1
   798  0745  0872               	movf	___awmod@dividend,w
   799  0746  00F0               	movwf	?___awmod
   800  0747  0008               	return
   801  0748                     __end_of___awmod:	
   802                           
   803                           	psect	text4
   804  0748                     __ptext4:	
   805 ;; *************** function ___awdiv *****************
   806 ;; Defined at:
   807 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  divisor         2    0[COMMON] int 
   810 ;;  dividend        2    2[COMMON] int 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  quotient        2    7[COMMON] int 
   813 ;;  sign            1    6[COMMON] unsigned char 
   814 ;;  counter         1    5[COMMON] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  2    0[COMMON] int 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   824 ;;      Params:         4       0       0       0       0       0
   825 ;;      Locals:         4       0       0       0       0       0
   826 ;;      Temps:          1       0       0       0       0       0
   827 ;;      Totals:         9       0       0       0       0       0
   828 ;;Total ram usage:        9 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_send_serial
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function ___awdiv
   839  0748                     ___awdiv:	
   840                           
   841                           ;incstack = 0
   842                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   843  0748  01F6               	clrf	___awdiv@sign
   844  0749  1FF1               	btfss	___awdiv@divisor+1,7
   845  074A  2F52               	goto	l659
   846  074B  09F0               	comf	___awdiv@divisor,f
   847  074C  09F1               	comf	___awdiv@divisor+1,f
   848  074D  0AF0               	incf	___awdiv@divisor,f
   849  074E  1903               	skipnz
   850  074F  0AF1               	incf	___awdiv@divisor+1,f
   851  0750  01F6               	clrf	___awdiv@sign
   852  0751  0AF6               	incf	___awdiv@sign,f
   853  0752                     l659:	
   854  0752  1FF3               	btfss	___awdiv@dividend+1,7
   855  0753  2F5D               	goto	l665
   856  0754  09F2               	comf	___awdiv@dividend,f
   857  0755  09F3               	comf	___awdiv@dividend+1,f
   858  0756  0AF2               	incf	___awdiv@dividend,f
   859  0757  1903               	skipnz
   860  0758  0AF3               	incf	___awdiv@dividend+1,f
   861  0759  3001               	movlw	1
   862  075A  00F4               	movwf	??___awdiv
   863  075B  0874               	movf	??___awdiv,w
   864  075C  06F6               	xorwf	___awdiv@sign,f
   865  075D                     l665:	
   866  075D  01F7               	clrf	___awdiv@quotient
   867  075E  01F8               	clrf	___awdiv@quotient+1
   868  075F  0870               	movf	___awdiv@divisor,w
   869  0760  0471               	iorwf	___awdiv@divisor+1,w
   870  0761  1903               	btfsc	3,2
   871  0762  2F8C               	goto	l687
   872  0763  01F5               	clrf	___awdiv@counter
   873  0764  0AF5               	incf	___awdiv@counter,f
   874  0765                     l675:	
   875  0765  1BF1               	btfsc	___awdiv@divisor+1,7
   876  0766  2F71               	goto	l677
   877  0767  3001               	movlw	1
   878  0768                     u355:	
   879  0768  35F0               	lslf	___awdiv@divisor,f
   880  0769  0DF1               	rlf	___awdiv@divisor+1,f
   881  076A  0B89               	decfsz	9,f
   882  076B  2F68               	goto	u355
   883  076C  3001               	movlw	1
   884  076D  00F4               	movwf	??___awdiv
   885  076E  0874               	movf	??___awdiv,w
   886  076F  07F5               	addwf	___awdiv@counter,f
   887  0770  2F65               	goto	l675
   888  0771                     l677:	
   889  0771  3001               	movlw	1
   890  0772                     u375:	
   891  0772  35F7               	lslf	___awdiv@quotient,f
   892  0773  0DF8               	rlf	___awdiv@quotient+1,f
   893  0774  0B89               	decfsz	9,f
   894  0775  2F72               	goto	u375
   895  0776  0871               	movf	___awdiv@divisor+1,w
   896  0777  0273               	subwf	___awdiv@dividend+1,w
   897  0778  1D03               	skipz
   898  0779  2F7C               	goto	u385
   899  077A  0870               	movf	___awdiv@divisor,w
   900  077B  0272               	subwf	___awdiv@dividend,w
   901  077C                     u385:	
   902  077C  1C03               	skipc
   903  077D  2F83               	goto	l683
   904  077E  0870               	movf	___awdiv@divisor,w
   905  077F  02F2               	subwf	___awdiv@dividend,f
   906  0780  0871               	movf	___awdiv@divisor+1,w
   907  0781  3BF3               	subwfb	___awdiv@dividend+1,f
   908  0782  1477               	bsf	___awdiv@quotient,0
   909  0783                     l683:	
   910  0783  3001               	movlw	1
   911  0784                     u395:	
   912  0784  36F1               	lsrf	___awdiv@divisor+1,f
   913  0785  0CF0               	rrf	___awdiv@divisor,f
   914  0786  0B89               	decfsz	9,f
   915  0787  2F84               	goto	u395
   916  0788  3001               	movlw	1
   917  0789  02F5               	subwf	___awdiv@counter,f
   918  078A  1D03               	btfss	3,2
   919  078B  2F71               	goto	l677
   920  078C                     l687:	
   921  078C  0876               	movf	___awdiv@sign,w
   922  078D  1903               	btfsc	3,2
   923  078E  2F94               	goto	l691
   924  078F  09F7               	comf	___awdiv@quotient,f
   925  0790  09F8               	comf	___awdiv@quotient+1,f
   926  0791  0AF7               	incf	___awdiv@quotient,f
   927  0792  1903               	skipnz
   928  0793  0AF8               	incf	___awdiv@quotient+1,f
   929  0794                     l691:	
   930  0794  0878               	movf	___awdiv@quotient+1,w
   931  0795  00F1               	movwf	?___awdiv+1
   932  0796  0877               	movf	___awdiv@quotient,w
   933  0797  00F0               	movwf	?___awdiv
   934  0798  0008               	return
   935  0799                     __end_of___awdiv:	
   936  007E                     btemp	set	126	;btemp
   937  007E                     wtemp	set	126
   938  007E                     wtemp0	set	126
   939  0080                     wtemp1	set	128
   940  0082                     wtemp2	set	130
   941  0084                     wtemp3	set	132
   942  0086                     wtemp4	set	134
   943  0088                     wtemp5	set	136
   944  007F                     wtemp6	set	127
   945  007E                     ttemp	set	126
   946  007E                     ttemp0	set	126
   947  0081                     ttemp1	set	129
   948  0084                     ttemp2	set	132
   949  0087                     ttemp3	set	135
   950  007F                     ttemp4	set	127
   951  007E                     ltemp	set	126
   952  007E                     ltemp0	set	126
   953  0082                     ltemp1	set	130
   954  0086                     ltemp2	set	134
   955  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      33
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _send_serial->___bmul
    ___bmul->___awdiv

Critical Paths under _main in BANK0

    _main->_send_serial

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1128
                                             13 COMMON     1     1      0
                                             11 BANK0      2     2      0
                        _send_serial
 ---------------------------------------------------------------------------------
 (1) _send_serial                                         11    11      0    1038
                                              0 BANK0     11    11      0
                            ___awdiv
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     118
                                              9 COMMON     4     3      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _send_serial
     ___awdiv
     ___awmod
     ___bmul
       ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      D      21       6       41.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 18:53:55 2015

         ___bmul@product 007B              __CFG_CP$OFF 0000             ___awdiv@sign 0076  
                    l703 070D                      l721 0732                      l715 071A  
                    l707 0714                      l643 06AB                      l717 0726  
                    l725 073B                      l741 07EB                      l639 06A5  
                    l665 075D                      l729 0743                      l691 0794  
                    l683 0783                      l675 0765                      l659 0752  
                    l677 0771                      l687 078C                      l759 06D5  
                    u530 07E9             __CFG_CPD$OFF 0000                      u355 0768  
                    u524 07E1                      u525 07DE                      u375 0772  
                    u455 071D                      u385 077C                      u395 0784  
                    u475 072C                      u485 0733                      u574 06EA  
                    u575 06E9                      u597 06F8             ___awmod@sign 0076  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
                   _LATB 010D                     _WPUA 020C             __CFG_WRT$OFF 0000  
                   _main 06C8                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     ltemp 007E                     start 0002  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
      ___bmul@multiplier 007C            __CFG_PLLEN$ON 0000                    ?_main 0070  
        __end_of___awdiv 0799            __CFG_WDTE$OFF 0000          __end_of___awmod 0748  
        ___awdiv@divisor 0070                    _LATB0 0868                    _LATB1 0869  
        ___awdiv@counter 0075                    _TRISA 008C                    _TRISB 008D  
         __CFG_FCMEN$OFF 0000                    main@i 007D           __CFG_BOREN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F           __CFG_MCLRE$OFF 0000  
        __initialization 07F2             __end_of_main 0703                   ??_main 003F  
       ___awdiv@dividend 0072                   _ANSELA 018C                   _ANSELB 018D  
           ?_send_serial 0070                   _OSCCON 0099           __CFG_PWRTE$OFF 0000  
                 ___bmul 06A3                ??___awdiv 0074                ??___awmod 0074  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
__end_of__initialization 07FD      ___bmul@multiplicand 0079           __pcstackCOMMON 0070  
           __pidataBANK0 06B4           _OPTION_REGbits 0095               __pmaintext 06C8  
                ?___bmul 0079     __size_of_send_serial 0059          __size_of___bmul 0011  
                ___awdiv 0748                  ___awmod 0703          __CFG_STVREN$OFF 0000  
                __ptext1 0799                  __ptext2 06A3                  __ptext3 0703  
                __ptext4 0748         ___awmod@dividend 0072     end_of_initialization 07FD  
                init_ram 069D                  initloop 069E               _print_char 0020  
       __CFG_FOSC$INTOSC 0000           __end_of___bmul 06B4      start_initialization 07F2  
               ??___bmul 007A              __pdataBANK0 0020                ___latbits 0001  
          __pcstackBANK0 0034                 ?___awdiv 0070                 ?___awmod 0070  
          ??_send_serial 0034             send_serial@n 003E      __end_of_send_serial 07F2  
       __size_of___awdiv 0051         __size_of___awmod 0045            __size_of_main 003B  
            _send_serial 0799        __CFG_CLKOUTEN$OFF 0000        send_serial@column 003D  
