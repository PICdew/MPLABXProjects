

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 19:10:43 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  0011                     	;# 
    45  0012                     	;# 
    46  0013                     	;# 
    47  0014                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0094                     	;# 
    65  0095                     	;# 
    66  0096                     	;# 
    67  0097                     	;# 
    68  0098                     	;# 
    69  0099                     	;# 
    70  009A                     	;# 
    71  009B                     	;# 
    72  009B                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  010C                     	;# 
    77  010D                     	;# 
    78  0111                     	;# 
    79  0112                     	;# 
    80  0113                     	;# 
    81  0114                     	;# 
    82  0115                     	;# 
    83  0116                     	;# 
    84  0117                     	;# 
    85  0118                     	;# 
    86  0119                     	;# 
    87  011A                     	;# 
    88  011B                     	;# 
    89  011D                     	;# 
    90  011E                     	;# 
    91  018C                     	;# 
    92  018D                     	;# 
    93  0191                     	;# 
    94  0191                     	;# 
    95  0192                     	;# 
    96  0193                     	;# 
    97  0193                     	;# 
    98  0193                     	;# 
    99  0194                     	;# 
   100  0195                     	;# 
   101  0196                     	;# 
   102  0199                     	;# 
   103  019A                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019C                     	;# 
   109  019C                     	;# 
   110  019D                     	;# 
   111  019E                     	;# 
   112  019F                     	;# 
   113  020C                     	;# 
   114  020D                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  0212                     	;# 
   118  0212                     	;# 
   119  0213                     	;# 
   120  0213                     	;# 
   121  0214                     	;# 
   122  0214                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0216                     	;# 
   127  0216                     	;# 
   128  0217                     	;# 
   129  0217                     	;# 
   130  0219                     	;# 
   131  021A                     	;# 
   132  021B                     	;# 
   133  021C                     	;# 
   134  021D                     	;# 
   135  021E                     	;# 
   136  021F                     	;# 
   137  0291                     	;# 
   138  0291                     	;# 
   139  0292                     	;# 
   140  0293                     	;# 
   141  0294                     	;# 
   142  0295                     	;# 
   143  0295                     	;# 
   144  0296                     	;# 
   145  0298                     	;# 
   146  0298                     	;# 
   147  0299                     	;# 
   148  029A                     	;# 
   149  029B                     	;# 
   150  029C                     	;# 
   151  029C                     	;# 
   152  029D                     	;# 
   153  029E                     	;# 
   154  029E                     	;# 
   155  0311                     	;# 
   156  0311                     	;# 
   157  0312                     	;# 
   158  0313                     	;# 
   159  0318                     	;# 
   160  0318                     	;# 
   161  0319                     	;# 
   162  031A                     	;# 
   163  0394                     	;# 
   164  0395                     	;# 
   165  0396                     	;# 
   166  039A                     	;# 
   167  039C                     	;# 
   168  039D                     	;# 
   169  039E                     	;# 
   170  039F                     	;# 
   171  0415                     	;# 
   172  0416                     	;# 
   173  0417                     	;# 
   174  041C                     	;# 
   175  041D                     	;# 
   176  041E                     	;# 
   177  0FE4                     	;# 
   178  0FE5                     	;# 
   179  0FE6                     	;# 
   180  0FE7                     	;# 
   181  0FE8                     	;# 
   182  0FE9                     	;# 
   183  0FEA                     	;# 
   184  0FEB                     	;# 
   185  0FED                     	;# 
   186  0FEE                     	;# 
   187  0FEF                     	;# 
   188                           
   189                           	psect	idataBANK1
   190  02B1                     __pidataBANK1:	
   191                           
   192                           ;initializer for _pattern
   193  02B1  3483               	retlw	131
   194  02B2  345D               	retlw	93
   195  02B3  346D               	retlw	109
   196  02B4  3475               	retlw	117
   197  02B5  3483               	retlw	131
   198  02B6  34FF               	retlw	255
   199  02B7  347B               	retlw	123
   200  02B8  3401               	retlw	1
   201  02B9  347F               	retlw	127
   202  02BA  34FF               	retlw	255
   203  02BB  347B               	retlw	123
   204  02BC  343D               	retlw	61
   205  02BD  345D               	retlw	93
   206  02BE  346D               	retlw	109
   207  02BF  3473               	retlw	115
   208  02C0  34BB               	retlw	187
   209  02C1  347D               	retlw	125
   210  02C2  346D               	retlw	109
   211  02C3  346D               	retlw	109
   212  02C4  3493               	retlw	147
   213  02C5  34CF               	retlw	207
   214  02C6  34D7               	retlw	215
   215  02C7  34DB               	retlw	219
   216  02C8  3401               	retlw	1
   217  02C9  34DF               	retlw	223
   218  02CA  34A1               	retlw	161
   219  02CB  346D               	retlw	109
   220  02CC  346D               	retlw	109
   221  02CD  346D               	retlw	109
   222  02CE  349D               	retlw	157
   223  02CF  3483               	retlw	131
   224  02D0  346D               	retlw	109
   225  02D1  346D               	retlw	109
   226  02D2  346D               	retlw	109
   227  02D3  349B               	retlw	155
   228  02D4  34F9               	retlw	249
   229  02D5  34FD               	retlw	253
   230  02D6  341D               	retlw	29
   231  02D7  34ED               	retlw	237
   232  02D8  34F1               	retlw	241
   233  02D9  3493               	retlw	147
   234  02DA  346D               	retlw	109
   235  02DB  346D               	retlw	109
   236  02DC  346D               	retlw	109
   237  02DD  3493               	retlw	147
   238  02DE  34B3               	retlw	179
   239  02DF  346D               	retlw	109
   240  02E0  346D               	retlw	109
   241  02E1  346D               	retlw	109
   242  02E2  3483               	retlw	131
   243  000B                     _INTCONbits	set	11
   244  0011                     _PIR1bits	set	17
   245  0018                     _T1CONbits	set	24
   246  0015                     _TMR0	set	21
   247  0017                     _TMR1H	set	23
   248  0016                     _TMR1L	set	22
   249  008D                     _RCIF	set	141
   250  008B                     _SSP1IF	set	139
   251  005A                     _TMR0IF	set	90
   252  009B                     _ADRES	set	155
   253  009D                     _ADCON0bits	set	157
   254  009E                     _ADCON1bits	set	158
   255  0095                     _OPTION_REGbits	set	149
   256  0099                     _OSCCON	set	153
   257  0091                     _PIE1bits	set	145
   258  008C                     _TRISA	set	140
   259  008D                     _TRISB	set	141
   260  011D                     _APFCON0bits	set	285
   261  011E                     _APFCON1bits	set	286
   262  0117                     _FVRCON	set	279
   263  0864                     _LATA4	set	2148
   264  0867                     _LATA7	set	2151
   265  018C                     _ANSELA	set	396
   266  018D                     _ANSELB	set	397
   267  0199                     _RCREG	set	409
   268  019D                     _RCSTA	set	413
   269  019C                     _SPBRGH	set	412
   270  019B                     _SPBRGL	set	411
   271  019A                     _TXREG	set	410
   272  019E                     _TXSTA	set	414
   273  0CFB                     _BRG16	set	3323
   274  0CEF                     _SPEN	set	3311
   275  0211                     _SSP1BUF	set	529
   276  0215                     _SSP1CON1bits	set	533
   277  0214                     _SSP1STATbits	set	532
   278  020C                     _WPUA	set	524
   279  020D                     _WPUB	set	525
   280                           
   281                           ; #config settings
   282  0000                     
   283                           	psect	cinit
   284  0024                     start_initialization:	
   285  0024                     __initialization:	
   286                           
   287                           ; Clear objects allocated to BANK0
   288  0024  3050               	movlw	low __pbssBANK0
   289  0025  0084               	movwf	4
   290  0026  3000               	movlw	high __pbssBANK0
   291  0027  0085               	movwf	5
   292  0028  3017               	movlw	23
   293  0029  3183  23D0  3180   	fcall	clear_ram0
   294                           
   295                           ; Initialize objects allocated to BANK1
   296  002C  30B1               	movlw	low __pidataBANK1
   297  002D  0084               	movwf	4
   298  002E  3082               	movlw	(high __pidataBANK1)| (0+128)
   299  002F  0085               	movwf	5
   300  0030  30A0               	movlw	low __pdataBANK1
   301  0031  0086               	movwf	6
   302  0032  3000               	movlw	high __pdataBANK1
   303  0033  0087               	movwf	7
   304  0034  3032               	movlw	50
   305  0035  3183  23D6         	fcall	init_ram
   306  0037                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  0037                     __end_of__initialization:	
   310  0037  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   311  0038  0020               	movlb	0
   312  0039  3180  283B         	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	bssBANK0
   315  0050                     __pbssBANK0:	
   316  0050                     _rx_buf:	
   317  0050                     	ds	7
   318  0057                     _ms:	
   319  0057                     	ds	4
   320  005B                     _d1:	
   321  005B                     	ds	3
   322  005E                     millis_timer@cnt:	
   323  005E                     	ds	2
   324  0060                     _tx_buf:	
   325  0060                     	ds	7
   326                           
   327                           	psect	dataBANK1
   328  00A0                     __pdataBANK1:	
   329  00A0                     _pattern:	
   330  00A0                     	ds	50
   331                           
   332                           	psect	clrtext
   333  03D0                     clear_ram0:	
   334                           ;	Called with FSR0 containing the base address, and
   335                           ;	WREG with the size to clear
   336                           
   337  03D0  0064               	clrwdt	;clear the watchdog before getting into this loop
   338  03D1                     clrloop0:	
   339  03D1  0180               	clrf	0	;clear RAM location pointed to by FSR
   340  03D2  3101               	addfsr 0,1
   341  03D3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   342  03D4  2BD1               	goto	clrloop0	;have we reached the end yet?
   343  03D5  3400               	retlw	0	;all done for this memory range, return
   344                           
   345                           	psect	inittext
   346  03D6                     init_ram:	
   347  03D6  00FE               	movwf	126
   348  03D7                     initloop:	
   349  03D7  0012               	moviw fsr0++
   350  03D8  001E               	movwi fsr1++
   351  03D9  0BFE               	decfsz	126,f
   352  03DA  2BD7               	goto	initloop
   353  03DB  3400               	retlw	0
   354                           
   355                           	psect	cstackCOMMON
   356  0070                     __pcstackCOMMON:	
   357  0070                     ?_UART_init:	
   358  0070                     ?_interrupt_TXIF:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_tx_send:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_SPI_init:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?_SPI_LCD_Command:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_SPI_LCD_Data:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ?_SPI_LCD_init:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_isr:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0070                     ?_main:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ?_ringbuf_pop:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0070                     ?_SPI_Transfer:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_ringbuf_num:	
   389                           ; 1 bytes @ 0x0
   390                           
   391                           
   392                           ; 2 bytes @ 0x0
   393  0070                     	ds	2
   394  0072                     ??_ringbuf_num:	
   395                           
   396                           ; 0 bytes @ 0x2
   397  0072                     	ds	4
   398  0076                     ringbuf_num@rb:	
   399                           
   400                           ; 1 bytes @ 0x6
   401  0076                     	ds	1
   402  0077                     ?_ringbuf_put:	
   403  0077                     ??_ringbuf_pop:	
   404                           ; 0 bytes @ 0x7
   405                           
   406  0077                     ringbuf_put@asciicode:	
   407                           ; 0 bytes @ 0x7
   408                           
   409                           
   410                           ; 1 bytes @ 0x7
   411  0077                     	ds	1
   412  0078                     ??_ringbuf_put:	
   413                           
   414                           ; 0 bytes @ 0x8
   415  0078                     	ds	5
   416  007D                     ??_interrupt_TXIF:	
   417                           
   418                           ; 0 bytes @ 0xD
   419  007D                     	ds	1
   420                           
   421                           	psect	cstackBANK0
   422  0020                     __pcstackBANK0:	
   423  0020                     ringbuf_put@rb:	
   424  0020                     ringbuf_pop@ret:	
   425                           ; 1 bytes @ 0x0
   426                           
   427                           
   428                           ; 1 bytes @ 0x0
   429  0020                     	ds	1
   430  0021                     ??_tx_send:	
   431  0021                     ringbuf_pop@rb:	
   432                           ; 0 bytes @ 0x1
   433                           
   434                           
   435                           ; 1 bytes @ 0x1
   436  0021                     	ds	1
   437  0022                     tx_send@asciicode:	
   438                           
   439                           ; 1 bytes @ 0x2
   440  0022                     	ds	1
   441  0023                     ??_isr:	
   442                           
   443                           ; 0 bytes @ 0x3
   444  0023                     	ds	2
   445  0025                     isr@ascii:	
   446                           
   447                           ; 1 bytes @ 0x5
   448  0025                     	ds	1
   449  0026                     ?_ringbuf_init:	
   450  0026                     ??_UART_init:	
   451                           ; 0 bytes @ 0x6
   452                           
   453  0026                     ?_Delay_ms:	
   454                           ; 0 bytes @ 0x6
   455                           
   456  0026                     ??_SPI_init:	
   457                           ; 0 bytes @ 0x6
   458                           
   459  0026                     ??_SPI_Transfer:	
   460                           ; 0 bytes @ 0x6
   461                           
   462  0026                     ?___bmul:	
   463                           ; 0 bytes @ 0x6
   464                           
   465  0026                     ringbuf_init@internal_buf:	
   466                           ; 1 bytes @ 0x6
   467                           
   468  0026                     SPI_init@mode:	
   469                           ; 1 bytes @ 0x6
   470                           
   471  0026                     ___bmul@multiplicand:	
   472                           ; 1 bytes @ 0x6
   473                           
   474  0026                     Delay_ms@ms:	
   475                           ; 1 bytes @ 0x6
   476                           
   477                           
   478                           ; 2 bytes @ 0x6
   479  0026                     	ds	1
   480  0027                     ??___bmul:	
   481  0027                     SPI_Transfer@txdata:	
   482                           ; 0 bytes @ 0x7
   483                           
   484  0027                     ringbuf_init@bufsize:	
   485                           ; 1 bytes @ 0x7
   486                           
   487                           
   488                           ; 2 bytes @ 0x7
   489  0027                     	ds	1
   490  0028                     ??_Delay_ms:	
   491  0028                     SPI_Transfer@rxdata:	
   492                           ; 0 bytes @ 0x8
   493                           
   494  0028                     ___bmul@product:	
   495                           ; 1 bytes @ 0x8
   496                           
   497                           
   498                           ; 1 bytes @ 0x8
   499  0028                     	ds	1
   500  0029                     ??_ringbuf_init:	
   501  0029                     ??_SPI_LCD_Command:	
   502                           ; 0 bytes @ 0x9
   503                           
   504  0029                     ??_SPI_LCD_Data:	
   505                           ; 0 bytes @ 0x9
   506                           
   507  0029                     ___bmul@multiplier:	
   508                           ; 0 bytes @ 0x9
   509                           
   510                           
   511                           ; 1 bytes @ 0x9
   512  0029                     	ds	1
   513  002A                     ringbuf_init@rb:	
   514  002A                     SPI_LCD_Command@dumy:	
   515                           ; 1 bytes @ 0xA
   516                           
   517  002A                     SPI_LCD_Data@dumy:	
   518                           ; 1 bytes @ 0xA
   519                           
   520                           
   521                           ; 1 bytes @ 0xA
   522  002A                     	ds	1
   523  002B                     SPI_LCD_Command@comm:	
   524  002B                     SPI_LCD_Data@data:	
   525                           ; 1 bytes @ 0xB
   526                           
   527                           
   528                           ; 1 bytes @ 0xB
   529  002B                     	ds	1
   530  002C                     ??_SPI_LCD_init:	
   531  002C                     ?_SPI_LCD_Cursor:	
   532                           ; 0 bytes @ 0xC
   533                           
   534  002C                     SPI_LCD_Cursor@column:	
   535                           ; 0 bytes @ 0xC
   536                           
   537                           
   538                           ; 1 bytes @ 0xC
   539  002C                     	ds	1
   540  002D                     ??_SPI_LCD_Cursor:	
   541                           
   542                           ; 0 bytes @ 0xD
   543  002D                     	ds	1
   544  002E                     SPI_LCD_Cursor@page:	
   545                           
   546                           ; 1 bytes @ 0xE
   547  002E                     	ds	1
   548  002F                     ??_main:	
   549                           
   550                           ; 0 bytes @ 0xF
   551  002F                     	ds	1
   552  0030                     main@buf:	
   553                           
   554                           ; 30 bytes @ 0x10
   555  0030                     	ds	30
   556  004E                     main@i:	
   557                           
   558                           ; 1 bytes @ 0x2E
   559  004E                     	ds	1
   560  004F                     main@j:	
   561                           
   562                           ; 1 bytes @ 0x2F
   563  004F                     	ds	1
   564                           
   565                           	psect	maintext
   566  003B                     __pmaintext:	
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 129 in file "PIC16F1827-SPILCD01.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  buf            30   16[BANK0 ] unsigned char [30]
   577 ;;  j               1   47[BANK0 ] unsigned char 
   578 ;;  i               1   46[BANK0 ] unsigned char 
   579 ;; Return value:  Size  Location     Type
   580 ;;		None               void
   581 ;; Registers used:
   582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : B1F/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   588 ;;      Params:         0       0       0       0       0       0
   589 ;;      Locals:         0      32       0       0       0       0
   590 ;;      Temps:          0       1       0       0       0       0
   591 ;;      Totals:         0      33       0       0       0       0
   592 ;;Total ram usage:       33 bytes
   593 ;; Hardware stack levels required when called:    7
   594 ;; This function calls:
   595 ;;		_SPI_LCD_Cursor
   596 ;;		_SPI_LCD_Data
   597 ;;		_SPI_LCD_init
   598 ;;		_SPI_init
   599 ;;		_UART_init
   600 ;;		___bmul
   601 ;;		_ringbuf_init
   602 ;; This function is called by:
   603 ;;		Startup code after reset
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _main
   609  003B                     _main:	
   610                           
   611                           ;PIC16F1827-SPILCD01.c: 130: OSCCON = 0x70;
   612                           
   613                           ;incstack = 0
   614                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   615  003B  3070               	movlw	112
   616  003C  0021               	movlb	1	; select bank1
   617  003D  0099               	movwf	25	;volatile
   618                           
   619                           ;PIC16F1827-SPILCD01.c: 131: ANSELA = 0x00;
   620  003E  0023               	movlb	3	; select bank3
   621  003F  018C               	clrf	12	;volatile
   622                           
   623                           ;PIC16F1827-SPILCD01.c: 132: ANSELB = 0x00;
   624  0040  018D               	clrf	13	;volatile
   625                           
   626                           ;PIC16F1827-SPILCD01.c: 133: TRISA = 0x00;
   627  0041  0021               	movlb	1	; select bank1
   628  0042  018C               	clrf	12	;volatile
   629                           
   630                           ;PIC16F1827-SPILCD01.c: 134: TRISB = 0x06;
   631  0043  3006               	movlw	6
   632  0044  008D               	movwf	13	;volatile
   633                           
   634                           ;PIC16F1827-SPILCD01.c: 135: WPUA = TRISA;
   635  0045  080C               	movf	12,w	;volatile
   636  0046  0024               	movlb	4	; select bank4
   637  0047  008C               	movwf	12	;volatile
   638                           
   639                           ;PIC16F1827-SPILCD01.c: 136: WPUB = TRISB;
   640  0048  0021               	movlb	1	; select bank1
   641  0049  080D               	movf	13,w	;volatile
   642  004A  0024               	movlb	4	; select bank4
   643  004B  008D               	movwf	13	;volatile
   644                           
   645                           ;PIC16F1827-SPILCD01.c: 137: OPTION_REGbits.nWPUEN = 0;
   646  004C  0021               	movlb	1	; select bank1
   647  004D  1395               	bcf	21,7	;volatile
   648                           
   649                           ;PIC16F1827-SPILCD01.c: 138: APFCON0bits.RXDTSEL = 1;
   650  004E  0022               	movlb	2	; select bank2
   651  004F  179D               	bsf	29,7	;volatile
   652                           
   653                           ;PIC16F1827-SPILCD01.c: 139: APFCON0bits.SDO1SEL = 1;
   654  0050  171D               	bsf	29,6	;volatile
   655                           
   656                           ;PIC16F1827-SPILCD01.c: 140: APFCON1bits.TXCKSEL = 1;
   657  0051  141E               	bsf	30,0	;volatile
   658                           
   659                           ;PIC16F1827-SPILCD01.c: 142: UART_init();
   660  0052  3183  23B6  3180   	fcall	_UART_init
   661                           
   662                           ;PIC16F1827-SPILCD01.c: 143: SPI_init(0);
   663  0055  3000               	movlw	0
   664  0056  3182  22E3  3180   	fcall	_SPI_init
   665                           
   666                           ;PIC16F1827-SPILCD01.c: 144: SPI_LCD_init();
   667  0059  3181  21BD  3180   	fcall	_SPI_LCD_init
   668                           
   669                           ;PIC16F1827-SPILCD01.c: 146: char buf[30];
   670                           ;PIC16F1827-SPILCD01.c: 147: ringbuf_init(&tx_buf, buf, sizeof (buf));
   671  005C  3030               	movlw	(low (main@buf| 0))& (0+255)
   672  005D  0020               	movlb	0	; select bank0
   673  005E  00AF               	movwf	??_main
   674  005F  082F               	movf	??_main,w
   675  0060  00A6               	movwf	ringbuf_init@internal_buf
   676  0061  301E               	movlw	30
   677  0062  00A7               	movwf	ringbuf_init@bufsize
   678  0063  3000               	movlw	0
   679  0064  00A8               	movwf	ringbuf_init@bufsize+1
   680  0065  3060               	movlw	(low (_tx_buf| 0))& (0+255)
   681  0066  3183  2306  3180   	fcall	_ringbuf_init
   682                           
   683                           ;PIC16F1827-SPILCD01.c: 149: INTCONbits.GIE = 1;
   684  0069  178B               	bsf	11,7	;volatile
   685                           
   686                           ;PIC16F1827-SPILCD01.c: 151: uint8_t i;
   687                           ;PIC16F1827-SPILCD01.c: 152: uint8_t j;
   688                           ;PIC16F1827-SPILCD01.c: 153: for (i = 0; i < 6; i++) {
   689  006A  0020               	movlb	0	; select bank0
   690  006B  01CE               	clrf	main@i
   691  006C                     L2:	
   692  006C  3006               	movlw	6
   693  006D  024E               	subwf	main@i,w
   694  006E  1803               	btfsc	3,0
   695  006F  288D               	goto	l1382
   696                           
   697                           ;PIC16F1827-SPILCD01.c: 154: SPI_LCD_Cursor(i, 0);
   698  0070  01AC               	clrf	SPI_LCD_Cursor@column
   699  0071  084E               	movf	main@i,w
   700  0072  3183  2325  3180   	fcall	_SPI_LCD_Cursor
   701                           
   702                           ;PIC16F1827-SPILCD01.c: 155: for (j = 0; j < 128; j++) {
   703  0075  0020               	movlb	0	; select bank0
   704  0076  01CF               	clrf	main@j
   705  0077  3080               	movlw	128
   706  0078  024F               	subwf	main@j,w
   707  0079  1803               	btfsc	3,0
   708  007A  2888               	goto	l1378
   709  007B                     l1372:	
   710                           
   711                           ;PIC16F1827-SPILCD01.c: 156: SPI_LCD_Data(0x00);
   712  007B  3000               	movlw	0
   713  007C  3183  2396  3180   	fcall	_SPI_LCD_Data
   714  007F  3001               	movlw	1
   715  0080  0020               	movlb	0	; select bank0
   716  0081  00AF               	movwf	??_main
   717  0082  082F               	movf	??_main,w
   718  0083  07CF               	addwf	main@j,f
   719  0084  3080               	movlw	128
   720  0085  024F               	subwf	main@j,w
   721  0086  1C03               	skipc
   722  0087  287B               	goto	l1372
   723  0088                     l1378:	
   724  0088  3001               	movlw	1
   725  0089  00AF               	movwf	??_main
   726  008A  082F               	movf	??_main,w
   727  008B  07CE               	addwf	main@i,f
   728  008C  286C               	goto	L2
   729  008D                     l1382:	
   730                           ;PIC16F1827-SPILCD01.c: 157: }
   731                           ;PIC16F1827-SPILCD01.c: 158: }
   732                           ;PIC16F1827-SPILCD01.c: 160: while (1) {
   733                           
   734                           
   735                           ;PIC16F1827-SPILCD01.c: 161: for (i = 0; i < 6; i++) {
   736  008D  01CE               	clrf	main@i
   737  008E                     L1:	
   738  008E  3006               	movlw	6
   739  008F  024E               	subwf	main@i,w
   740  0090  1803               	btfsc	3,0
   741  0091  288D               	goto	l1382
   742                           
   743                           ;PIC16F1827-SPILCD01.c: 162: SPI_LCD_Cursor(i, 0x00);
   744  0092  01AC               	clrf	SPI_LCD_Cursor@column
   745  0093  084E               	movf	main@i,w
   746  0094  3183  2325  3180   	fcall	_SPI_LCD_Cursor
   747                           
   748                           ;PIC16F1827-SPILCD01.c: 163: for (j = 0; j < 10; j++) {
   749  0097  0020               	movlb	0	; select bank0
   750  0098  01CF               	clrf	main@j
   751  0099  300A               	movlw	10
   752  009A  024F               	subwf	main@j,w
   753  009B  1803               	btfsc	3,0
   754  009C  28FD               	goto	l1404
   755  009D                     l1396:	
   756                           
   757                           ;PIC16F1827-SPILCD01.c: 164: SPI_LCD_Data(~pattern[j][0]);
   758  009D  3005               	movlw	5
   759  009E  00AF               	movwf	??_main
   760  009F  082F               	movf	??_main,w
   761  00A0  00A6               	movwf	___bmul@multiplicand
   762  00A1  084F               	movf	main@j,w
   763  00A2  3183  2384  3180   	fcall	___bmul
   764  00A5  3EA0               	addlw	(low (_pattern| 0))& (0+255)
   765  00A6  0086               	movwf	6
   766  00A7  0187               	clrf	7
   767  00A8  0901               	comf	1,w
   768  00A9  3183  2396  3180   	fcall	_SPI_LCD_Data
   769                           
   770                           ;PIC16F1827-SPILCD01.c: 165: SPI_LCD_Data(~pattern[j][1]);
   771  00AC  3005               	movlw	5
   772  00AD  0020               	movlb	0	; select bank0
   773  00AE  00AF               	movwf	??_main
   774  00AF  082F               	movf	??_main,w
   775  00B0  00A6               	movwf	___bmul@multiplicand
   776  00B1  084F               	movf	main@j,w
   777  00B2  3183  2384  3180   	fcall	___bmul
   778  00B5  3E01               	addlw	1
   779  00B6  3EA0               	addlw	(low (_pattern| 0))& (0+255)
   780  00B7  0086               	movwf	6
   781  00B8  0187               	clrf	7
   782  00B9  0901               	comf	1,w
   783  00BA  3183  2396  3180   	fcall	_SPI_LCD_Data
   784                           
   785                           ;PIC16F1827-SPILCD01.c: 166: SPI_LCD_Data(~pattern[j][2]);
   786  00BD  3005               	movlw	5
   787  00BE  0020               	movlb	0	; select bank0
   788  00BF  00AF               	movwf	??_main
   789  00C0  082F               	movf	??_main,w
   790  00C1  00A6               	movwf	___bmul@multiplicand
   791  00C2  084F               	movf	main@j,w
   792  00C3  3183  2384  3180   	fcall	___bmul
   793  00C6  3E02               	addlw	2
   794  00C7  3EA0               	addlw	(low (_pattern| 0))& (0+255)
   795  00C8  0086               	movwf	6
   796  00C9  0187               	clrf	7
   797  00CA  0901               	comf	1,w
   798  00CB  3183  2396  3180   	fcall	_SPI_LCD_Data
   799                           
   800                           ;PIC16F1827-SPILCD01.c: 167: SPI_LCD_Data(~pattern[j][3]);
   801  00CE  3005               	movlw	5
   802  00CF  0020               	movlb	0	; select bank0
   803  00D0  00AF               	movwf	??_main
   804  00D1  082F               	movf	??_main,w
   805  00D2  00A6               	movwf	___bmul@multiplicand
   806  00D3  084F               	movf	main@j,w
   807  00D4  3183  2384  3180   	fcall	___bmul
   808  00D7  3E03               	addlw	3
   809  00D8  3EA0               	addlw	(low (_pattern| 0))& (0+255)
   810  00D9  0086               	movwf	6
   811  00DA  0187               	clrf	7
   812  00DB  0901               	comf	1,w
   813  00DC  3183  2396  3180   	fcall	_SPI_LCD_Data
   814                           
   815                           ;PIC16F1827-SPILCD01.c: 168: SPI_LCD_Data(~pattern[j][4]);
   816  00DF  3005               	movlw	5
   817  00E0  0020               	movlb	0	; select bank0
   818  00E1  00AF               	movwf	??_main
   819  00E2  082F               	movf	??_main,w
   820  00E3  00A6               	movwf	___bmul@multiplicand
   821  00E4  084F               	movf	main@j,w
   822  00E5  3183  2384  3180   	fcall	___bmul
   823  00E8  3E04               	addlw	4
   824  00E9  3EA0               	addlw	(low (_pattern| 0))& (0+255)
   825  00EA  0086               	movwf	6
   826  00EB  0187               	clrf	7
   827  00EC  0901               	comf	1,w
   828  00ED  3183  2396  3180   	fcall	_SPI_LCD_Data
   829                           
   830                           ;PIC16F1827-SPILCD01.c: 169: SPI_LCD_Data(0x00);
   831  00F0  3000               	movlw	0
   832  00F1  3183  2396  3180   	fcall	_SPI_LCD_Data
   833  00F4  3001               	movlw	1
   834  00F5  0020               	movlb	0	; select bank0
   835  00F6  00AF               	movwf	??_main
   836  00F7  082F               	movf	??_main,w
   837  00F8  07CF               	addwf	main@j,f
   838  00F9  300A               	movlw	10
   839  00FA  024F               	subwf	main@j,w
   840  00FB  1C03               	skipc
   841  00FC  289D               	goto	l1396
   842  00FD                     l1404:	
   843                           
   844                           ;PIC16F1827-SPILCD01.c: 170: }
   845                           ;PIC16F1827-SPILCD01.c: 171: for (j = 0; j < 10; j++) {
   846  00FD  01CF               	clrf	main@j
   847  00FE  300A               	movlw	10
   848  00FF  024F               	subwf	main@j,w
   849  0100  1803               	btfsc	3,0
   850  0101  2962               	goto	l1418
   851  0102                     l1410:	
   852                           
   853                           ;PIC16F1827-SPILCD01.c: 172: SPI_LCD_Data(~pattern[j][0]);
   854  0102  3005               	movlw	5
   855  0103  00AF               	movwf	??_main
   856  0104  082F               	movf	??_main,w
   857  0105  00A6               	movwf	___bmul@multiplicand
   858  0106  084F               	movf	main@j,w
   859  0107  3183  2384  3180   	fcall	___bmul
   860  010A  3EA0               	addlw	(low (_pattern| 0))& (0+255)
   861  010B  0086               	movwf	6
   862  010C  0187               	clrf	7
   863  010D  0901               	comf	1,w
   864  010E  3183  2396  3180   	fcall	_SPI_LCD_Data
   865                           
   866                           ;PIC16F1827-SPILCD01.c: 173: SPI_LCD_Data(~pattern[j][1]);
   867  0111  3005               	movlw	5
   868  0112  0020               	movlb	0	; select bank0
   869  0113  00AF               	movwf	??_main
   870  0114  082F               	movf	??_main,w
   871  0115  00A6               	movwf	___bmul@multiplicand
   872  0116  084F               	movf	main@j,w
   873  0117  3183  2384  3180   	fcall	___bmul
   874  011A  3E01               	addlw	1
   875  011B  3EA0               	addlw	(low (_pattern| 0))& (0+255)
   876  011C  0086               	movwf	6
   877  011D  0187               	clrf	7
   878  011E  0901               	comf	1,w
   879  011F  3183  2396  3180   	fcall	_SPI_LCD_Data
   880                           
   881                           ;PIC16F1827-SPILCD01.c: 174: SPI_LCD_Data(~pattern[j][2]);
   882  0122  3005               	movlw	5
   883  0123  0020               	movlb	0	; select bank0
   884  0124  00AF               	movwf	??_main
   885  0125  082F               	movf	??_main,w
   886  0126  00A6               	movwf	___bmul@multiplicand
   887  0127  084F               	movf	main@j,w
   888  0128  3183  2384  3180   	fcall	___bmul
   889  012B  3E02               	addlw	2
   890  012C  3EA0               	addlw	(low (_pattern| 0))& (0+255)
   891  012D  0086               	movwf	6
   892  012E  0187               	clrf	7
   893  012F  0901               	comf	1,w
   894  0130  3183  2396  3180   	fcall	_SPI_LCD_Data
   895                           
   896                           ;PIC16F1827-SPILCD01.c: 175: SPI_LCD_Data(~pattern[j][3]);
   897  0133  3005               	movlw	5
   898  0134  0020               	movlb	0	; select bank0
   899  0135  00AF               	movwf	??_main
   900  0136  082F               	movf	??_main,w
   901  0137  00A6               	movwf	___bmul@multiplicand
   902  0138  084F               	movf	main@j,w
   903  0139  3183  2384  3180   	fcall	___bmul
   904  013C  3E03               	addlw	3
   905  013D  3EA0               	addlw	(low (_pattern| 0))& (0+255)
   906  013E  0086               	movwf	6
   907  013F  0187               	clrf	7
   908  0140  0901               	comf	1,w
   909  0141  3183  2396  3180   	fcall	_SPI_LCD_Data
   910                           
   911                           ;PIC16F1827-SPILCD01.c: 176: SPI_LCD_Data(~pattern[j][4]);
   912  0144  3005               	movlw	5
   913  0145  0020               	movlb	0	; select bank0
   914  0146  00AF               	movwf	??_main
   915  0147  082F               	movf	??_main,w
   916  0148  00A6               	movwf	___bmul@multiplicand
   917  0149  084F               	movf	main@j,w
   918  014A  3183  2384  3180   	fcall	___bmul
   919  014D  3E04               	addlw	4
   920  014E  3EA0               	addlw	(low (_pattern| 0))& (0+255)
   921  014F  0086               	movwf	6
   922  0150  0187               	clrf	7
   923  0151  0901               	comf	1,w
   924  0152  3183  2396  3180   	fcall	_SPI_LCD_Data
   925                           
   926                           ;PIC16F1827-SPILCD01.c: 177: SPI_LCD_Data(0x00);
   927  0155  3000               	movlw	0
   928  0156  3183  2396  3180   	fcall	_SPI_LCD_Data
   929  0159  3001               	movlw	1
   930  015A  0020               	movlb	0	; select bank0
   931  015B  00AF               	movwf	??_main
   932  015C  082F               	movf	??_main,w
   933  015D  07CF               	addwf	main@j,f
   934  015E  300A               	movlw	10
   935  015F  024F               	subwf	main@j,w
   936  0160  1C03               	skipc
   937  0161  2902               	goto	l1410
   938  0162                     l1418:	
   939  0162  3001               	movlw	1
   940  0163  00AF               	movwf	??_main
   941  0164  082F               	movf	??_main,w
   942  0165  07CE               	addwf	main@i,f
   943  0166  288E               	goto	L1
   944  0167                     __end_of_main:	
   945                           
   946                           	psect	text1
   947  0306                     __ptext1:	
   948 ;; *************** function _ringbuf_init *****************
   949 ;; Defined at:
   950 ;;		line 24 in file "../My_header\My_ringbuf.h"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  rb              1    wreg     PTR struct ringbuf
   953 ;;		 -> tx_buf(7), 
   954 ;;  internal_buf    1    6[BANK0 ] PTR unsigned char 
   955 ;;		 -> main@buf(30), 
   956 ;;  bufsize         2    7[BANK0 ] unsigned int 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  rb              1   10[BANK0 ] PTR struct ringbuf
   959 ;;		 -> tx_buf(7), 
   960 ;; Return value:  Size  Location     Type
   961 ;;		None               void
   962 ;; Registers used:
   963 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   969 ;;      Params:         0       3       0       0       0       0
   970 ;;      Locals:         0       1       0       0       0       0
   971 ;;      Temps:          0       1       0       0       0       0
   972 ;;      Totals:         0       5       0       0       0       0
   973 ;;Total ram usage:        5 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:    4
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           
   984                           ;psect for function _ringbuf_init
   985  0306                     _ringbuf_init:	
   986                           
   987                           ;incstack = 0
   988                           ; Regs used in _ringbuf_init: [wreg+fsr1l+fsr1h+status,2+status,0]
   989                           ;ringbuf_init@rb stored from wreg
   990  0306  0020               	movlb	0	; select bank0
   991  0307  00AA               	movwf	ringbuf_init@rb
   992                           
   993                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
   994  0308  0826               	movf	ringbuf_init@internal_buf,w
   995  0309  00A9               	movwf	??_ringbuf_init
   996  030A  082A               	movf	ringbuf_init@rb,w
   997  030B  0086               	movwf	6
   998  030C  0187               	clrf	7
   999  030D  0829               	movf	??_ringbuf_init,w
  1000  030E  0081               	movwf	1
  1001                           
  1002                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  1003  030F  0A2A               	incf	ringbuf_init@rb,w
  1004  0310  0086               	movwf	6
  1005  0311  0187               	clrf	7
  1006  0312  0827               	movf	ringbuf_init@bufsize,w
  1007  0313  3FC0               	movwi [0]fsr1
  1008  0314  0828               	movf	ringbuf_init@bufsize+1,w
  1009  0315  3FC1               	movwi [1]fsr1
  1010                           
  1011                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  1012  0316  082A               	movf	ringbuf_init@rb,w
  1013  0317  3E03               	addlw	3
  1014  0318  0086               	movwf	6
  1015  0319  0187               	clrf	7
  1016  031A  3000               	movlw	0
  1017  031B  3FC0               	movwi [0]fsr1
  1018  031C  3FC1               	movwi [1]fsr1
  1019                           
  1020                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  1021  031D  082A               	movf	ringbuf_init@rb,w
  1022  031E  3E05               	addlw	5
  1023  031F  0086               	movwf	6
  1024  0320  0187               	clrf	7
  1025  0321  3000               	movlw	0
  1026  0322  3FC0               	movwi [0]fsr1
  1027  0323  3FC1               	movwi [1]fsr1
  1028  0324  0008               	return
  1029  0325                     __end_of_ringbuf_init:	
  1030                           
  1031                           	psect	text2
  1032  0384                     __ptext2:	
  1033 ;; *************** function ___bmul *****************
  1034 ;; Defined at:
  1035 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  multiplier      1    wreg     unsigned char 
  1038 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  multiplier      1    9[BANK0 ] unsigned char 
  1041 ;;  product         1    8[BANK0 ] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      unsigned char 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1051 ;;      Params:         0       1       0       0       0       0
  1052 ;;      Locals:         0       2       0       0       0       0
  1053 ;;      Temps:          0       1       0       0       0       0
  1054 ;;      Totals:         0       4       0       0       0       0
  1055 ;;Total ram usage:        4 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    4
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function ___bmul
  1067  0384                     ___bmul:	
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1071                           ;___bmul@multiplier stored from wreg
  1072  0384  0020               	movlb	0	; select bank0
  1073  0385  00A9               	movwf	___bmul@multiplier
  1074  0386  01A8               	clrf	___bmul@product
  1075  0387                     l1236:	
  1076  0387  1C29               	btfss	___bmul@multiplier,0
  1077  0388  2B8D               	goto	l1240
  1078  0389  0826               	movf	___bmul@multiplicand,w
  1079  038A  00A7               	movwf	??___bmul
  1080  038B  0827               	movf	??___bmul,w
  1081  038C  07A8               	addwf	___bmul@product,f
  1082  038D                     l1240:	
  1083  038D  1003               	clrc
  1084  038E  0DA6               	rlf	___bmul@multiplicand,f
  1085  038F  1003               	clrc
  1086  0390  0CA9               	rrf	___bmul@multiplier,f
  1087  0391  0829               	movf	___bmul@multiplier,w
  1088  0392  1D03               	btfss	3,2
  1089  0393  2B87               	goto	l1236
  1090  0394  0828               	movf	___bmul@product,w
  1091  0395  0008               	return
  1092  0396                     __end_of___bmul:	
  1093                           
  1094                           	psect	text3
  1095  03B6                     __ptext3:	
  1096 ;; *************** function _UART_init *****************
  1097 ;; Defined at:
  1098 ;;		line 237 in file "../My_header\My_header.h"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;		None               void
  1105 ;; Registers used:
  1106 ;;		wreg, status,2
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1112 ;;      Params:         0       0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    4
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           
  1127                           ;psect for function _UART_init
  1128  03B6                     _UART_init:	
  1129                           
  1130                           ;My_header\My_header.h: 238: SPEN = 1;
  1131                           
  1132                           ;incstack = 0
  1133                           ; Regs used in _UART_init: [wreg+status,2]
  1134  03B6  0023               	movlb	3	; select bank3
  1135  03B7  179D               	bsf	29,7	;volatile
  1136                           
  1137                           ;My_header\My_header.h: 239: RCSTA = 0x90;
  1138  03B8  3090               	movlw	144
  1139  03B9  009D               	movwf	29	;volatile
  1140                           
  1141                           ;My_header\My_header.h: 240: BRG16 = 0;
  1142  03BA  119F               	bcf	31,3	;volatile
  1143                           
  1144                           ;My_header\My_header.h: 241: SPBRGH = 0;
  1145  03BB  019C               	clrf	28	;volatile
  1146                           
  1147                           ;My_header\My_header.h: 242: SPBRGL = 207;
  1148  03BC  30CF               	movlw	207
  1149  03BD  009B               	movwf	27	;volatile
  1150                           
  1151                           ;My_header\My_header.h: 243: TXSTA = 0x24;
  1152  03BE  3024               	movlw	36
  1153  03BF  009E               	movwf	30	;volatile
  1154                           
  1155                           ;My_header\My_header.h: 244: PIE1bits.RCIE = 1;
  1156  03C0  0021               	movlb	1	; select bank1
  1157  03C1  1691               	bsf	17,5	;volatile
  1158                           
  1159                           ;My_header\My_header.h: 245: INTCONbits.PEIE = 1;
  1160  03C2  170B               	bsf	11,6	;volatile
  1161  03C3  0008               	return
  1162  03C4                     __end_of_UART_init:	
  1163                           
  1164                           	psect	text4
  1165  02E3                     __ptext4:	
  1166 ;; *************** function _SPI_init *****************
  1167 ;; Defined at:
  1168 ;;		line 15 in file "../My_header\My_SPI.h"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  mode            1    wreg     unsigned char 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  mode            1    6[BANK0 ] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;		None               void
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1182 ;;      Params:         0       0       0       0       0       0
  1183 ;;      Locals:         0       1       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0
  1185 ;;      Totals:         0       1       0       0       0       0
  1186 ;;Total ram usage:        1 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    4
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _SPI_init
  1198  02E3                     _SPI_init:	
  1199                           
  1200                           ;incstack = 0
  1201                           ; Regs used in _SPI_init: [wreg+status,2+status,0]
  1202                           ;SPI_init@mode stored from wreg
  1203  02E3  0020               	movlb	0	; select bank0
  1204  02E4  00A6               	movwf	SPI_init@mode
  1205                           
  1206                           ;My_header\My_SPI.h: 16: SSP1CON1bits.SSPEN = 1;
  1207  02E5  0024               	movlb	4	; select bank4
  1208  02E6  1695               	bsf	21,5	;volatile
  1209                           
  1210                           ;My_header\My_SPI.h: 17: SSP1CON1bits.CKP = 1;
  1211  02E7  1615               	bsf	21,4	;volatile
  1212                           
  1213                           ;My_header\My_SPI.h: 18: SSP1STATbits.CKE = 0;
  1214  02E8  1314               	bcf	20,6	;volatile
  1215                           
  1216                           ;My_header\My_SPI.h: 19: if (mode == 0) {
  1217  02E9  0020               	movlb	0	; select bank0
  1218  02EA  0826               	movf	SPI_init@mode,w
  1219  02EB  1D03               	btfss	3,2
  1220  02EC  2AF3               	goto	l1196
  1221                           
  1222                           ;My_header\My_SPI.h: 20: SSP1CON1bits.SSPM = 2;
  1223  02ED  0024               	movlb	4	; select bank4
  1224  02EE  0815               	movf	21,w	;volatile
  1225  02EF  39F0               	andlw	-16
  1226  02F0  3802               	iorlw	2
  1227  02F1  0095               	movwf	21	;volatile
  1228                           
  1229                           ;My_header\My_SPI.h: 21: } else if (mode == 1) {
  1230  02F2  2AFD               	goto	l202
  1231  02F3                     l1196:	
  1232  02F3  0020               	movlb	0	; select bank0
  1233  02F4  0326               	decf	SPI_init@mode,w
  1234  02F5  1D03               	btfss	3,2
  1235  02F6  2AFD               	goto	l202
  1236                           
  1237                           ;My_header\My_SPI.h: 22: SSP1CON1bits.SSPM = 4;
  1238  02F7  0024               	movlb	4	; select bank4
  1239  02F8  0815               	movf	21,w	;volatile
  1240  02F9  39F0               	andlw	-16
  1241  02FA  3804               	iorlw	4
  1242  02FB  0095               	movwf	21	;volatile
  1243                           
  1244                           ;My_header\My_SPI.h: 23: SSP1STATbits.SMP = 0;
  1245  02FC  1394               	bcf	20,7	;volatile
  1246  02FD                     l202:	
  1247                           
  1248                           ;My_header\My_SPI.h: 24: }
  1249                           ;My_header\My_SPI.h: 25: if (mode == 1) {
  1250  02FD  0020               	movlb	0	; select bank0
  1251  02FE  0326               	decf	SPI_init@mode,w
  1252  02FF  1D03               	btfss	3,2
  1253  0300  0008               	return
  1254                           
  1255                           ;My_header\My_SPI.h: 26: SSP1IF = 0;
  1256  0301  1191               	bcf	17,3	;volatile
  1257                           
  1258                           ;My_header\My_SPI.h: 27: PIE1bits.SSP1IE = 1;
  1259  0302  0021               	movlb	1	; select bank1
  1260  0303  1591               	bsf	17,3	;volatile
  1261                           
  1262                           ;My_header\My_SPI.h: 28: INTCONbits.PEIE = 1;
  1263  0304  170B               	bsf	11,6	;volatile
  1264  0305  0008               	return
  1265  0306                     __end_of_SPI_init:	
  1266                           
  1267                           	psect	text5
  1268  01BD                     __ptext5:	
  1269 ;; *************** function _SPI_LCD_init *****************
  1270 ;; Defined at:
  1271 ;;		line 87 in file "../My_header\My_SPI.h"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;		None               void
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0, pclath, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1285 ;;      Params:         0       0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0
  1287 ;;      Temps:          0       2       0       0       0       0
  1288 ;;      Totals:         0       2       0       0       0       0
  1289 ;;Total ram usage:        2 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    6
  1292 ;; This function calls:
  1293 ;;		_Delay_ms
  1294 ;;		_SPI_LCD_Command
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _SPI_LCD_init
  1302  01BD                     _SPI_LCD_init:	
  1303                           
  1304                           ;My_header\My_SPI.h: 88: Delay_ms(100);
  1305                           
  1306                           ;incstack = 0
  1307                           ; Regs used in _SPI_LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1308  01BD  3064               	movlw	100
  1309  01BE  0020               	movlb	0	; select bank0
  1310  01BF  00A6               	movwf	Delay_ms@ms
  1311  01C0  3000               	movlw	0
  1312  01C1  00A7               	movwf	Delay_ms@ms+1
  1313  01C2  3183  236F  3181   	fcall	_Delay_ms
  1314                           
  1315                           ;My_header\My_SPI.h: 89: SPI_LCD_Command(0xAE);
  1316  01C5  30AE               	movlw	174
  1317  01C6  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1318                           
  1319                           ;My_header\My_SPI.h: 90: SPI_LCD_Command(0xA0);
  1320  01C9  30A0               	movlw	160
  1321  01CA  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1322                           
  1323                           ;My_header\My_SPI.h: 91: SPI_LCD_Command(0xC8);
  1324  01CD  30C8               	movlw	200
  1325  01CE  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1326                           
  1327                           ;My_header\My_SPI.h: 92: SPI_LCD_Command(0xA3);
  1328  01D1  30A3               	movlw	163
  1329  01D2  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1330                           
  1331                           ;My_header\My_SPI.h: 94: SPI_LCD_Command(0x2C);
  1332  01D5  302C               	movlw	44
  1333  01D6  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1334                           
  1335                           ;My_header\My_SPI.h: 95: _delay((unsigned long)((2)*(32000000/4000.0)));
  1336  01D9  3015               	movlw	21
  1337  01DA  0020               	movlb	0	; select bank0
  1338  01DB  00AD               	movwf	??_SPI_LCD_init+1
  1339  01DC  30C6               	movlw	198
  1340  01DD  00AC               	movwf	??_SPI_LCD_init
  1341  01DE                     u747:	
  1342  01DE  0BAC               	decfsz	??_SPI_LCD_init,f
  1343  01DF  29DE               	goto	u747
  1344  01E0  0BAD               	decfsz	??_SPI_LCD_init+1,f
  1345  01E1  29DE               	goto	u747
  1346  01E2  0000               	nop
  1347                           
  1348                           ;My_header\My_SPI.h: 96: SPI_LCD_Command(0x2E);
  1349  01E3  302E               	movlw	46
  1350  01E4  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1351                           
  1352                           ;My_header\My_SPI.h: 97: _delay((unsigned long)((2)*(32000000/4000.0)));
  1353  01E7  3015               	movlw	21
  1354  01E8  0020               	movlb	0	; select bank0
  1355  01E9  00AD               	movwf	??_SPI_LCD_init+1
  1356  01EA  30C6               	movlw	198
  1357  01EB  00AC               	movwf	??_SPI_LCD_init
  1358  01EC                     u757:	
  1359  01EC  0BAC               	decfsz	??_SPI_LCD_init,f
  1360  01ED  29EC               	goto	u757
  1361  01EE  0BAD               	decfsz	??_SPI_LCD_init+1,f
  1362  01EF  29EC               	goto	u757
  1363  01F0  0000               	nop
  1364                           
  1365                           ;My_header\My_SPI.h: 98: SPI_LCD_Command(0x2F);
  1366  01F1  302F               	movlw	47
  1367  01F2  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1368                           
  1369                           ;My_header\My_SPI.h: 100: SPI_LCD_Command(0x23);
  1370  01F5  3023               	movlw	35
  1371  01F6  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1372                           
  1373                           ;My_header\My_SPI.h: 101: SPI_LCD_Command(0x81);
  1374  01F9  3081               	movlw	129
  1375  01FA  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1376                           
  1377                           ;My_header\My_SPI.h: 102: SPI_LCD_Command(0x16);
  1378  01FD  3016               	movlw	22
  1379  01FE  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1380                           
  1381                           ;My_header\My_SPI.h: 104: SPI_LCD_Command(0xA4);
  1382  0201  30A4               	movlw	164
  1383  0202  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1384                           
  1385                           ;My_header\My_SPI.h: 105: SPI_LCD_Command(0x40);
  1386  0205  3040               	movlw	64
  1387  0206  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1388                           
  1389                           ;My_header\My_SPI.h: 106: SPI_LCD_Command(0xA6);
  1390  0209  30A6               	movlw	166
  1391  020A  3183  23A6  3181   	fcall	_SPI_LCD_Command
  1392                           
  1393                           ;My_header\My_SPI.h: 107: SPI_LCD_Command(0xAF);
  1394  020D  30AF               	movlw	175
  1395  020E  3183  23A6         	fcall	_SPI_LCD_Command
  1396  0210  0008               	return
  1397  0211                     __end_of_SPI_LCD_init:	
  1398                           
  1399                           	psect	text6
  1400  036F                     __ptext6:	
  1401 ;; *************** function _Delay_ms *****************
  1402 ;; Defined at:
  1403 ;;		line 333 in file "../My_header\My_header.h"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  ms              2    6[BANK0 ] unsigned int 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;		None               void
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1417 ;;      Params:         0       2       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0
  1419 ;;      Temps:          0       2       0       0       0       0
  1420 ;;      Totals:         0       4       0       0       0       0
  1421 ;;Total ram usage:        4 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    4
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_SPI_LCD_init
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           
  1432                           ;psect for function _Delay_ms
  1433  036F                     _Delay_ms:	
  1434  036F                     l1146:	
  1435                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(32000000/4000.0)));
  1436                           
  1437                           ;incstack = 0
  1438                           ; Regs used in _Delay_ms: [wreg+status,2+status,0]
  1439                           
  1440  036F  3001               	movlw	1
  1441  0370  0020               	movlb	0	; select bank0
  1442  0371  02A6               	subwf	Delay_ms@ms,f
  1443  0372  3000               	movlw	0
  1444  0373  3BA7               	subwfb	Delay_ms@ms+1,f
  1445  0374  0A26               	incf	Delay_ms@ms,w
  1446  0375  1903               	btfsc	3,2
  1447  0376  0A27               	incf	Delay_ms@ms+1,w
  1448  0377  1903               	btfsc	3,2
  1449  0378  0008               	return
  1450  0379  300B               	movlw	11
  1451  037A  0020               	movlb	0	; select bank0
  1452  037B  00A9               	movwf	??_Delay_ms+1
  1453  037C  3062               	movlw	98
  1454  037D  00A8               	movwf	??_Delay_ms
  1455  037E                     u767:	
  1456  037E  0BA8               	decfsz	??_Delay_ms,f
  1457  037F  2B7E               	goto	u767
  1458  0380  0BA9               	decfsz	??_Delay_ms+1,f
  1459  0381  2B7E               	goto	u767
  1460  0382  0000               	nop
  1461  0383  2B6F               	goto	l1146
  1462  0384                     __end_of_Delay_ms:	
  1463                           
  1464                           	psect	text7
  1465  0396                     __ptext7:	
  1466 ;; *************** function _SPI_LCD_Data *****************
  1467 ;; Defined at:
  1468 ;;		line 80 in file "../My_header\My_SPI.h"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  data            1    wreg     unsigned char 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  data            1   11[BANK0 ] unsigned char 
  1473 ;;  dumy            1   10[BANK0 ] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;		None               void
  1476 ;; Registers used:
  1477 ;;		wreg, pclath, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1483 ;;      Params:         0       0       0       0       0       0
  1484 ;;      Locals:         0       2       0       0       0       0
  1485 ;;      Temps:          0       1       0       0       0       0
  1486 ;;      Totals:         0       3       0       0       0       0
  1487 ;;Total ram usage:        3 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    5
  1490 ;; This function calls:
  1491 ;;		_SPI_Transfer
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _SPI_LCD_Data
  1499  0396                     _SPI_LCD_Data:	
  1500                           
  1501                           ;incstack = 0
  1502                           ; Regs used in _SPI_LCD_Data: [wreg+pclath+cstack]
  1503                           ;SPI_LCD_Data@data stored from wreg
  1504  0396  0020               	movlb	0	; select bank0
  1505  0397  00AB               	movwf	SPI_LCD_Data@data
  1506                           
  1507                           ;My_header\My_SPI.h: 81: LATA7 = 0;
  1508  0398  0022               	movlb	2	; select bank2
  1509  0399  138C               	bcf	12,7	;volatile
  1510                           
  1511                           ;My_header\My_SPI.h: 82: LATA4 = 1;
  1512  039A  160C               	bsf	12,4	;volatile
  1513                           
  1514                           ;My_header\My_SPI.h: 83: uint8_t dumy = SPI_Transfer(data);
  1515  039B  0020               	movlb	0	; select bank0
  1516  039C  082B               	movf	SPI_LCD_Data@data,w
  1517  039D  3183  2358         	fcall	_SPI_Transfer
  1518  039F  0020               	movlb	0	; select bank0
  1519  03A0  00A9               	movwf	??_SPI_LCD_Data
  1520  03A1  0829               	movf	??_SPI_LCD_Data,w
  1521  03A2  00AA               	movwf	SPI_LCD_Data@dumy
  1522                           
  1523                           ;My_header\My_SPI.h: 84: LATA7 = 1;
  1524  03A3  0022               	movlb	2	; select bank2
  1525  03A4  178C               	bsf	12,7	;volatile
  1526  03A5  0008               	return
  1527  03A6                     __end_of_SPI_LCD_Data:	
  1528                           
  1529                           	psect	text8
  1530  0325                     __ptext8:	
  1531 ;; *************** function _SPI_LCD_Cursor *****************
  1532 ;; Defined at:
  1533 ;;		line 110 in file "../My_header\My_SPI.h"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  page            1    wreg     unsigned char 
  1536 ;;  column          1   12[BANK0 ] unsigned char 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  page            1   14[BANK0 ] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;		None               void
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, pclath, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1548 ;;      Params:         0       1       0       0       0       0
  1549 ;;      Locals:         0       1       0       0       0       0
  1550 ;;      Temps:          0       1       0       0       0       0
  1551 ;;      Totals:         0       3       0       0       0       0
  1552 ;;Total ram usage:        3 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    6
  1555 ;; This function calls:
  1556 ;;		_SPI_LCD_Command
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _SPI_LCD_Cursor
  1564  0325                     _SPI_LCD_Cursor:	
  1565                           
  1566                           ;incstack = 0
  1567                           ; Regs used in _SPI_LCD_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1568                           ;SPI_LCD_Cursor@page stored from wreg
  1569  0325  0020               	movlb	0	; select bank0
  1570  0326  00AE               	movwf	SPI_LCD_Cursor@page
  1571                           
  1572                           ;My_header\My_SPI.h: 111: SPI_LCD_Command(0xB0 | (0x0F & page));
  1573  0327  082E               	movf	SPI_LCD_Cursor@page,w
  1574  0328  390F               	andlw	15
  1575  0329  38B0               	iorlw	176
  1576  032A  3183  23A6  3183   	fcall	_SPI_LCD_Command
  1577                           
  1578                           ;My_header\My_SPI.h: 112: SPI_LCD_Command(0x10 | (0x0F & (column >> 4)));
  1579  032D  0020               	movlb	0	; select bank0
  1580  032E  082C               	movf	SPI_LCD_Cursor@column,w
  1581  032F  00AD               	movwf	??_SPI_LCD_Cursor
  1582  0330  3004               	movlw	4
  1583  0331                     u525:	
  1584  0331  36AD               	lsrf	??_SPI_LCD_Cursor,f
  1585  0332  0B89               	decfsz	9,f
  1586  0333  2B31               	goto	u525
  1587  0334  082D               	movf	??_SPI_LCD_Cursor,w
  1588  0335  390F               	andlw	15
  1589  0336  3810               	iorlw	16
  1590  0337  3183  23A6  3183   	fcall	_SPI_LCD_Command
  1591                           
  1592                           ;My_header\My_SPI.h: 113: SPI_LCD_Command(0x00 | (0x0F & column));
  1593  033A  0020               	movlb	0	; select bank0
  1594  033B  082C               	movf	SPI_LCD_Cursor@column,w
  1595  033C  390F               	andlw	15
  1596  033D  3183  23A6         	fcall	_SPI_LCD_Command
  1597  033F  0008               	return
  1598  0340                     __end_of_SPI_LCD_Cursor:	
  1599                           
  1600                           	psect	text9
  1601  03A6                     __ptext9:	
  1602 ;; *************** function _SPI_LCD_Command *****************
  1603 ;; Defined at:
  1604 ;;		line 73 in file "../My_header\My_SPI.h"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  comm            1    wreg     unsigned char 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  comm            1   11[BANK0 ] unsigned char 
  1609 ;;  dumy            1   10[BANK0 ] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;		None               void
  1612 ;; Registers used:
  1613 ;;		wreg, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1619 ;;      Params:         0       0       0       0       0       0
  1620 ;;      Locals:         0       2       0       0       0       0
  1621 ;;      Temps:          0       1       0       0       0       0
  1622 ;;      Totals:         0       3       0       0       0       0
  1623 ;;Total ram usage:        3 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    5
  1626 ;; This function calls:
  1627 ;;		_SPI_Transfer
  1628 ;; This function is called by:
  1629 ;;		_SPI_LCD_init
  1630 ;;		_SPI_LCD_Cursor
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _SPI_LCD_Command
  1636  03A6                     _SPI_LCD_Command:	
  1637                           
  1638                           ;incstack = 0
  1639                           ; Regs used in _SPI_LCD_Command: [wreg+pclath+cstack]
  1640                           ;SPI_LCD_Command@comm stored from wreg
  1641  03A6  0020               	movlb	0	; select bank0
  1642  03A7  00AB               	movwf	SPI_LCD_Command@comm
  1643                           
  1644                           ;My_header\My_SPI.h: 74: LATA7 = 0;
  1645  03A8  0022               	movlb	2	; select bank2
  1646  03A9  138C               	bcf	12,7	;volatile
  1647                           
  1648                           ;My_header\My_SPI.h: 75: LATA4 = 0;
  1649  03AA  120C               	bcf	12,4	;volatile
  1650                           
  1651                           ;My_header\My_SPI.h: 76: uint8_t dumy = SPI_Transfer(comm);
  1652  03AB  0020               	movlb	0	; select bank0
  1653  03AC  082B               	movf	SPI_LCD_Command@comm,w
  1654  03AD  3183  2358         	fcall	_SPI_Transfer
  1655  03AF  0020               	movlb	0	; select bank0
  1656  03B0  00A9               	movwf	??_SPI_LCD_Command
  1657  03B1  0829               	movf	??_SPI_LCD_Command,w
  1658  03B2  00AA               	movwf	SPI_LCD_Command@dumy
  1659                           
  1660                           ;My_header\My_SPI.h: 77: LATA7 = 1;
  1661  03B3  0022               	movlb	2	; select bank2
  1662  03B4  178C               	bsf	12,7	;volatile
  1663  03B5  0008               	return
  1664  03B6                     __end_of_SPI_LCD_Command:	
  1665                           
  1666                           	psect	text10
  1667  0358                     __ptext10:	
  1668 ;; *************** function _SPI_Transfer *****************
  1669 ;; Defined at:
  1670 ;;		line 32 in file "../My_header\My_SPI.h"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  txdata          1    wreg     unsigned char 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  txdata          1    7[BANK0 ] unsigned char 
  1675 ;;  rxdata          1    8[BANK0 ] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      unsigned char 
  1678 ;; Registers used:
  1679 ;;		wreg
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1685 ;;      Params:         0       0       0       0       0       0
  1686 ;;      Locals:         0       2       0       0       0       0
  1687 ;;      Temps:          0       1       0       0       0       0
  1688 ;;      Totals:         0       3       0       0       0       0
  1689 ;;Total ram usage:        3 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    4
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_SPI_LCD_Command
  1696 ;;		_SPI_LCD_Data
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _SPI_Transfer
  1702  0358                     _SPI_Transfer:	
  1703                           
  1704                           ;incstack = 0
  1705                           ; Regs used in _SPI_Transfer: [wreg]
  1706                           ;SPI_Transfer@txdata stored from wreg
  1707  0358  0020               	movlb	0	; select bank0
  1708  0359  00A7               	movwf	SPI_Transfer@txdata
  1709                           
  1710                           ;My_header\My_SPI.h: 33: uint8_t rxdata;
  1711                           ;My_header\My_SPI.h: 35: rxdata = SSP1BUF;
  1712  035A  0024               	movlb	4	; select bank4
  1713  035B  0811               	movf	17,w	;volatile
  1714  035C  0020               	movlb	0	; select bank0
  1715  035D  00A6               	movwf	??_SPI_Transfer
  1716  035E  0826               	movf	??_SPI_Transfer,w
  1717  035F  00A8               	movwf	SPI_Transfer@rxdata
  1718                           
  1719                           ;My_header\My_SPI.h: 36: SSP1IF = 0;
  1720  0360  1191               	bcf	17,3	;volatile
  1721                           
  1722                           ;My_header\My_SPI.h: 37: SSP1BUF = txdata;
  1723  0361  0827               	movf	SPI_Transfer@txdata,w
  1724  0362  0024               	movlb	4	; select bank4
  1725  0363  0091               	movwf	17	;volatile
  1726  0364                     l208:	
  1727                           ;My_header\My_SPI.h: 38: while (!SSP1IF);
  1728                           
  1729  0364  0020               	movlb	0	; select bank0
  1730  0365  1D91               	btfss	17,3	;volatile
  1731  0366  2B64               	goto	l208
  1732                           
  1733                           ;My_header\My_SPI.h: 39: rxdata = SSP1BUF;
  1734  0367  0024               	movlb	4	; select bank4
  1735  0368  0811               	movf	17,w	;volatile
  1736  0369  0020               	movlb	0	; select bank0
  1737  036A  00A6               	movwf	??_SPI_Transfer
  1738  036B  0826               	movf	??_SPI_Transfer,w
  1739  036C  00A8               	movwf	SPI_Transfer@rxdata
  1740                           
  1741                           ;My_header\My_SPI.h: 40: return rxdata;
  1742  036D  0828               	movf	SPI_Transfer@rxdata,w
  1743  036E  0008               	return
  1744  036F                     __end_of_SPI_Transfer:	
  1745                           
  1746                           	psect	intentry
  1747  0004                     __pintentry:	
  1748 ;; *************** function _isr *****************
  1749 ;; Defined at:
  1750 ;;		line 117 in file "PIC16F1827-SPILCD01.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  ascii           1    5[BANK0 ] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;		None               void
  1757 ;; Registers used:
  1758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1764 ;;      Params:         0       0       0       0       0       0
  1765 ;;      Locals:         0       1       0       0       0       0
  1766 ;;      Temps:          0       2       0       0       0       0
  1767 ;;      Totals:         0       3       0       0       0       0
  1768 ;;Total ram usage:        3 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    3
  1771 ;; This function calls:
  1772 ;;		_interrupt_TXIF
  1773 ;;		_tx_send
  1774 ;; This function is called by:
  1775 ;;		Interrupt level 1
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779  0004                     _isr:	
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1783  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1784  0005  3180               	pagesel	$
  1785  0006  0020               	movlb	0	; select bank0
  1786  0007  087F               	movf	127,w
  1787  0008  00A4               	movwf	??_isr+1
  1788                           
  1789                           ;PIC16F1827-SPILCD01.c: 118: interrupt_TXIF();
  1790  0009  3183  2340  3180   	fcall	_interrupt_TXIF
  1791                           
  1792                           ;PIC16F1827-SPILCD01.c: 119: if (TMR0IF) {
  1793  000C  1D0B               	btfss	11,2	;volatile
  1794  000D  2810               	goto	i1l1318
  1795                           
  1796                           ;PIC16F1827-SPILCD01.c: 120: TMR0 = 0;
  1797  000E  0020               	movlb	0	; select bank0
  1798  000F  0195               	clrf	21	;volatile
  1799  0010                     i1l1318:	
  1800                           
  1801                           ;PIC16F1827-SPILCD01.c: 121: }
  1802                           ;PIC16F1827-SPILCD01.c: 122: if (RCIF) {
  1803  0010  0020               	movlb	0	; select bank0
  1804  0011  1E91               	btfss	17,5	;volatile
  1805  0012  281D               	goto	i1l230
  1806                           
  1807                           ;PIC16F1827-SPILCD01.c: 123: RCIF = 0;
  1808  0013  1291               	bcf	17,5	;volatile
  1809                           
  1810                           ;PIC16F1827-SPILCD01.c: 124: char ascii = RCREG;
  1811  0014  0023               	movlb	3	; select bank3
  1812  0015  0819               	movf	25,w	;volatile
  1813  0016  0020               	movlb	0	; select bank0
  1814  0017  00A3               	movwf	??_isr
  1815  0018  0823               	movf	??_isr,w
  1816  0019  00A5               	movwf	isr@ascii
  1817                           
  1818                           ;PIC16F1827-SPILCD01.c: 125: tx_send(ascii);
  1819  001A  0825               	movf	isr@ascii,w
  1820  001B  3183  23C4         	fcall	_tx_send
  1821  001D                     i1l230:	
  1822  001D  0020               	movlb	0	; select bank0
  1823  001E  0824               	movf	??_isr+1,w
  1824  001F  00FF               	movwf	127
  1825  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1826  0021  0009               	retfie
  1827  0022                     __end_of_isr:	
  1828                           
  1829                           	psect	text12
  1830  03C4                     __ptext12:	
  1831 ;; *************** function _tx_send *****************
  1832 ;; Defined at:
  1833 ;;		line 259 in file "../My_header\My_header.h"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  asciicode       1    wreg     unsigned char 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  asciicode       1    2[BANK0 ] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;		None               void
  1840 ;; Registers used:
  1841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1847 ;;      Params:         0       0       0       0       0       0
  1848 ;;      Locals:         0       1       0       0       0       0
  1849 ;;      Temps:          0       1       0       0       0       0
  1850 ;;      Totals:         0       2       0       0       0       0
  1851 ;;Total ram usage:        2 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    2
  1854 ;; This function calls:
  1855 ;;		_ringbuf_put
  1856 ;; This function is called by:
  1857 ;;		_isr
  1858 ;;		_tx_sendn
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _tx_send
  1864  03C4                     _tx_send:	
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _tx_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1868                           ;tx_send@asciicode stored from wreg
  1869  03C4  0020               	movlb	0	; select bank0
  1870  03C5  00A2               	movwf	tx_send@asciicode
  1871                           
  1872                           ;My_header\My_header.h: 260: ringbuf_put(&tx_buf, asciicode);
  1873  03C6  0822               	movf	tx_send@asciicode,w
  1874  03C7  00A1               	movwf	??_tx_send
  1875  03C8  0821               	movf	??_tx_send,w
  1876  03C9  00F7               	movwf	ringbuf_put@asciicode
  1877  03CA  3060               	movlw	(low (_tx_buf| 0))& (0+255)
  1878  03CB  3181  2167         	fcall	_ringbuf_put
  1879                           
  1880                           ;My_header\My_header.h: 261: PIE1bits.TXIE = 1;
  1881  03CD  0021               	movlb	1	; select bank1
  1882  03CE  1611               	bsf	17,4	;volatile
  1883  03CF  0008               	return
  1884  03D0                     __end_of_tx_send:	
  1885                           
  1886                           	psect	text13
  1887  0167                     __ptext13:	
  1888 ;; *************** function _ringbuf_put *****************
  1889 ;; Defined at:
  1890 ;;		line 39 in file "../My_header\My_ringbuf.h"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  rb              1    wreg     PTR struct ringbuf
  1893 ;;		 -> tx_buf(7), 
  1894 ;;  asciicode       1    7[COMMON] unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  rb              1    0[BANK0 ] PTR struct ringbuf
  1897 ;;		 -> tx_buf(7), 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;		None               void
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1907 ;;      Params:         1       0       0       0       0       0
  1908 ;;      Locals:         0       1       0       0       0       0
  1909 ;;      Temps:          6       0       0       0       0       0
  1910 ;;      Totals:         7       1       0       0       0       0
  1911 ;;Total ram usage:        8 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    1
  1914 ;; This function calls:
  1915 ;;		_ringbuf_num
  1916 ;; This function is called by:
  1917 ;;		_tx_send
  1918 ;;		_ringbuf_put_num
  1919 ;;		_ringbuf_put_str
  1920 ;;		_tx_sends
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _ringbuf_put
  1926  0167                     _ringbuf_put:	
  1927                           
  1928                           ;incstack = 0
  1929                           ; Regs used in _ringbuf_put: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1930                           ;ringbuf_put@rb stored from wreg
  1931  0167  0020               	movlb	0	; select bank0
  1932  0168  00A0               	movwf	ringbuf_put@rb
  1933                           
  1934                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  1935  0169  0A20               	incf	ringbuf_put@rb,w
  1936  016A  0086               	movwf	6
  1937  016B  0187               	clrf	7
  1938  016C  3F40               	moviw [0]fsr1
  1939  016D  00F8               	movwf	??_ringbuf_put
  1940  016E  3F41               	moviw [1]fsr1
  1941  016F  00F9               	movwf	??_ringbuf_put+1
  1942  0170  0820               	movf	ringbuf_put@rb,w
  1943  0171  3182  2211  3181   	fcall	_ringbuf_num
  1944  0174  0879               	movf	??_ringbuf_put+1,w
  1945  0175  0271               	subwf	?_ringbuf_num+1,w
  1946  0176  1D03               	skipz
  1947  0177  297A               	goto	u41_25
  1948  0178  0878               	movf	??_ringbuf_put,w
  1949  0179  0270               	subwf	?_ringbuf_num,w
  1950  017A                     u41_25:	
  1951  017A  1803               	skipnc
  1952  017B  0008               	return
  1953                           
  1954                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  1955  017C  0877               	movf	ringbuf_put@asciicode,w
  1956  017D  00F8               	movwf	??_ringbuf_put
  1957  017E  0020               	movlb	0	; select bank0
  1958  017F  0820               	movf	ringbuf_put@rb,w
  1959  0180  0086               	movwf	6
  1960  0181  0187               	clrf	7
  1961  0182  0820               	movf	ringbuf_put@rb,w
  1962  0183  3E03               	addlw	3
  1963  0184  0084               	movwf	4
  1964  0185  0185               	clrf	5
  1965  0186  0800               	movf	0,w
  1966  0187  0701               	addwf	1,w
  1967  0188  00F9               	movwf	??_ringbuf_put+1
  1968  0189  0879               	movf	??_ringbuf_put+1,w
  1969  018A  0086               	movwf	6
  1970  018B  0187               	clrf	7
  1971  018C  0878               	movf	??_ringbuf_put,w
  1972  018D  0081               	movwf	1
  1973                           
  1974                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  1975  018E  0A20               	incf	ringbuf_put@rb,w
  1976  018F  0086               	movwf	6
  1977  0190  0187               	clrf	7
  1978  0191  3F40               	moviw [0]fsr1
  1979  0192  00F8               	movwf	??_ringbuf_put
  1980  0193  3F41               	moviw [1]fsr1
  1981  0194  00F9               	movwf	??_ringbuf_put+1
  1982  0195  0820               	movf	ringbuf_put@rb,w
  1983  0196  3E03               	addlw	3
  1984  0197  0086               	movwf	6
  1985  0198  0187               	clrf	7
  1986  0199  3F40               	moviw [0]fsr1
  1987  019A  00FA               	movwf	??_ringbuf_put+2
  1988  019B  3F41               	moviw [1]fsr1
  1989  019C  00FB               	movwf	??_ringbuf_put+3
  1990  019D  087A               	movf	??_ringbuf_put+2,w
  1991  019E  3E01               	addlw	1
  1992  019F  00FC               	movwf	??_ringbuf_put+4
  1993  01A0  3000               	movlw	0
  1994  01A1  3D7B               	addwfc	??_ringbuf_put+3,w
  1995  01A2  00FD               	movwf	??_ringbuf_put+5
  1996  01A3  0879               	movf	??_ringbuf_put+1,w
  1997  01A4  027D               	subwf	??_ringbuf_put+5,w
  1998  01A5  1D03               	skipz
  1999  01A6  29A9               	goto	u42_25
  2000  01A7  0878               	movf	??_ringbuf_put,w
  2001  01A8  027C               	subwf	??_ringbuf_put+4,w
  2002  01A9                     u42_25:	
  2003  01A9  1803               	skipnc
  2004  01AA  29B5               	goto	i1l1120
  2005  01AB  0820               	movf	ringbuf_put@rb,w
  2006  01AC  3E03               	addlw	3
  2007  01AD  0086               	movwf	6
  2008  01AE  0187               	clrf	7
  2009  01AF  3001               	movlw	1
  2010  01B0  0781               	addwf	1,f
  2011  01B1  3141               	addfsr 1,1
  2012  01B2  1803               	skipnc
  2013  01B3  0A81               	incf	1,f
  2014  01B4  0008               	return
  2015  01B5                     i1l1120:	
  2016                           
  2017                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  2018  01B5  0820               	movf	ringbuf_put@rb,w
  2019  01B6  3E03               	addlw	3
  2020  01B7  0086               	movwf	6
  2021  01B8  0187               	clrf	7
  2022  01B9  3000               	movlw	0
  2023  01BA  3FC0               	movwi [0]fsr1
  2024  01BB  3FC1               	movwi [1]fsr1
  2025  01BC  0008               	return
  2026  01BD                     __end_of_ringbuf_put:	
  2027                           
  2028                           	psect	text14
  2029  0340                     __ptext14:	
  2030 ;; *************** function _interrupt_TXIF *****************
  2031 ;; Defined at:
  2032 ;;		line 248 in file "../My_header\My_header.h"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;		None               void
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2046 ;;      Params:         0       0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0
  2049 ;;      Totals:         0       0       0       0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    2
  2053 ;; This function calls:
  2054 ;;		_ringbuf_num
  2055 ;;		_ringbuf_pop
  2056 ;; This function is called by:
  2057 ;;		_isr
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function _interrupt_TXIF
  2063  0340                     _interrupt_TXIF:	
  2064                           
  2065                           ;My_header\My_header.h: 249: if (PIE1bits.TXIE && PIR1bits.TXIF) {
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _interrupt_TXIF: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2069  0340  0021               	movlb	1	; select bank1
  2070  0341  1E11               	btfss	17,4	;volatile
  2071  0342  0008               	return
  2072  0343  0020               	movlb	0	; select bank0
  2073  0344  1E11               	btfss	17,4	;volatile
  2074  0345  0008               	return
  2075                           
  2076                           ;My_header\My_header.h: 250: PIR1bits.TXIF = 0;
  2077  0346  1211               	bcf	17,4	;volatile
  2078                           
  2079                           ;My_header\My_header.h: 251: if (ringbuf_num(&tx_buf) > 0) {
  2080  0347  3060               	movlw	(low (_tx_buf| 0))& (0+255)
  2081  0348  3182  2211  3183   	fcall	_ringbuf_num
  2082  034B  0870               	movf	?_ringbuf_num,w
  2083  034C  0471               	iorwf	?_ringbuf_num+1,w
  2084  034D  1903               	btfsc	3,2
  2085  034E  2B55               	goto	i1l150
  2086                           
  2087                           ;My_header\My_header.h: 252: TXREG = ringbuf_pop(&tx_buf);
  2088  034F  3060               	movlw	(low (_tx_buf| 0))& (0+255)
  2089  0350  3182  2263         	fcall	_ringbuf_pop
  2090  0352  0023               	movlb	3	; select bank3
  2091  0353  009A               	movwf	26	;volatile
  2092                           
  2093                           ;My_header\My_header.h: 253: } else {
  2094  0354  0008               	return
  2095  0355                     i1l150:	
  2096                           
  2097                           ;My_header\My_header.h: 254: PIE1bits.TXIE = 0;
  2098  0355  0021               	movlb	1	; select bank1
  2099  0356  1211               	bcf	17,4	;volatile
  2100  0357  0008               	return
  2101  0358                     __end_of_interrupt_TXIF:	
  2102                           
  2103                           	psect	text15
  2104  0263                     __ptext15:	
  2105 ;; *************** function _ringbuf_pop *****************
  2106 ;; Defined at:
  2107 ;;		line 64 in file "../My_header\My_ringbuf.h"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  rb              1    wreg     PTR struct ringbuf
  2110 ;;		 -> tx_buf(7), 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  rb              1    1[BANK0 ] PTR struct ringbuf
  2113 ;;		 -> tx_buf(7), 
  2114 ;;  ret             1    0[BANK0 ] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      unsigned char 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2124 ;;      Params:         0       0       0       0       0       0
  2125 ;;      Locals:         0       2       0       0       0       0
  2126 ;;      Temps:          6       0       0       0       0       0
  2127 ;;      Totals:         6       2       0       0       0       0
  2128 ;;Total ram usage:        8 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    1
  2131 ;; This function calls:
  2132 ;;		_ringbuf_num
  2133 ;; This function is called by:
  2134 ;;		_interrupt_TXIF
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _ringbuf_pop
  2140  0263                     _ringbuf_pop:	
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2144                           ;ringbuf_pop@rb stored from wreg
  2145  0263  0020               	movlb	0	; select bank0
  2146  0264  00A1               	movwf	ringbuf_pop@rb
  2147                           
  2148                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  2149  0265  0821               	movf	ringbuf_pop@rb,w
  2150  0266  3182  2211  3182   	fcall	_ringbuf_num
  2151  0269  0870               	movf	?_ringbuf_num,w
  2152  026A  0471               	iorwf	?_ringbuf_num+1,w
  2153  026B  1903               	btfsc	3,2
  2154  026C  2AAF               	goto	i1l1138
  2155                           
  2156                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  2157  026D  0020               	movlb	0	; select bank0
  2158  026E  0821               	movf	ringbuf_pop@rb,w
  2159  026F  0086               	movwf	6
  2160  0270  0187               	clrf	7
  2161  0271  0821               	movf	ringbuf_pop@rb,w
  2162  0272  3E05               	addlw	5
  2163  0273  0084               	movwf	4
  2164  0274  0185               	clrf	5
  2165  0275  0800               	movf	0,w
  2166  0276  0701               	addwf	1,w
  2167  0277  00F7               	movwf	??_ringbuf_pop
  2168  0278  0877               	movf	??_ringbuf_pop,w
  2169  0279  0086               	movwf	6
  2170  027A  0187               	clrf	7
  2171  027B  0801               	movf	1,w
  2172  027C  00F8               	movwf	??_ringbuf_pop+1
  2173  027D  0878               	movf	??_ringbuf_pop+1,w
  2174  027E  00A0               	movwf	ringbuf_pop@ret
  2175                           
  2176                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  2177  027F  0A21               	incf	ringbuf_pop@rb,w
  2178  0280  0086               	movwf	6
  2179  0281  0187               	clrf	7
  2180  0282  3F40               	moviw [0]fsr1
  2181  0283  00F7               	movwf	??_ringbuf_pop
  2182  0284  3F41               	moviw [1]fsr1
  2183  0285  00F8               	movwf	??_ringbuf_pop+1
  2184  0286  0821               	movf	ringbuf_pop@rb,w
  2185  0287  3E05               	addlw	5
  2186  0288  0086               	movwf	6
  2187  0289  0187               	clrf	7
  2188  028A  3F40               	moviw [0]fsr1
  2189  028B  00F9               	movwf	??_ringbuf_pop+2
  2190  028C  3F41               	moviw [1]fsr1
  2191  028D  00FA               	movwf	??_ringbuf_pop+3
  2192  028E  0879               	movf	??_ringbuf_pop+2,w
  2193  028F  3E01               	addlw	1
  2194  0290  00FB               	movwf	??_ringbuf_pop+4
  2195  0291  3000               	movlw	0
  2196  0292  3D7A               	addwfc	??_ringbuf_pop+3,w
  2197  0293  00FC               	movwf	??_ringbuf_pop+5
  2198  0294  0878               	movf	??_ringbuf_pop+1,w
  2199  0295  027C               	subwf	??_ringbuf_pop+5,w
  2200  0296  1D03               	skipz
  2201  0297  2A9A               	goto	u44_25
  2202  0298  0877               	movf	??_ringbuf_pop,w
  2203  0299  027B               	subwf	??_ringbuf_pop+4,w
  2204  029A                     u44_25:	
  2205  029A  1803               	skipnc
  2206  029B  2AA6               	goto	i1l1130
  2207                           
  2208                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  2209  029C  0821               	movf	ringbuf_pop@rb,w
  2210  029D  3E05               	addlw	5
  2211  029E  0086               	movwf	6
  2212  029F  0187               	clrf	7
  2213  02A0  3001               	movlw	1
  2214  02A1  0781               	addwf	1,f
  2215  02A2  3141               	addfsr 1,1
  2216  02A3  1803               	skipnc
  2217  02A4  0A81               	incf	1,f
  2218                           
  2219                           ;My_header\My_ringbuf.h: 69: } else {
  2220  02A5  2AAD               	goto	i1l1132
  2221  02A6                     i1l1130:	
  2222                           
  2223                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  2224  02A6  0821               	movf	ringbuf_pop@rb,w
  2225  02A7  3E05               	addlw	5
  2226  02A8  0086               	movwf	6
  2227  02A9  0187               	clrf	7
  2228  02AA  3000               	movlw	0
  2229  02AB  3FC0               	movwi [0]fsr1
  2230  02AC  3FC1               	movwi [1]fsr1
  2231  02AD                     i1l1132:	
  2232                           
  2233                           ;My_header\My_ringbuf.h: 71: }
  2234                           ;My_header\My_ringbuf.h: 72: return ret;
  2235  02AD  0820               	movf	ringbuf_pop@ret,w
  2236                           
  2237                           ;My_header\My_ringbuf.h: 73: } else {
  2238  02AE  0008               	return
  2239  02AF                     i1l1138:	
  2240                           
  2241                           ;My_header\My_ringbuf.h: 74: return 0;
  2242  02AF  3000               	movlw	0
  2243  02B0  0008               	return
  2244  02B1                     __end_of_ringbuf_pop:	
  2245                           
  2246                           	psect	text16
  2247  0211                     __ptext16:	
  2248 ;; *************** function _ringbuf_num *****************
  2249 ;; Defined at:
  2250 ;;		line 31 in file "../My_header\My_ringbuf.h"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  rb              1    wreg     PTR struct ringbuf
  2253 ;;		 -> tx_buf(7), 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  rb              1    6[COMMON] PTR struct ringbuf
  2256 ;;		 -> tx_buf(7), 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  2    0[COMMON] unsigned int 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2266 ;;      Params:         2       0       0       0       0       0
  2267 ;;      Locals:         1       0       0       0       0       0
  2268 ;;      Temps:          4       0       0       0       0       0
  2269 ;;      Totals:         7       0       0       0       0       0
  2270 ;;Total ram usage:        7 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_ringbuf_put
  2276 ;;		_ringbuf_pop
  2277 ;;		_interrupt_TXIF
  2278 ;;		_ringbuf_backspace
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _ringbuf_num
  2284  0211                     _ringbuf_num:	
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  2288                           ;ringbuf_num@rb stored from wreg
  2289  0211  00F6               	movwf	ringbuf_num@rb
  2290                           
  2291                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  2292  0212  0876               	movf	ringbuf_num@rb,w
  2293  0213  3E05               	addlw	5
  2294  0214  0086               	movwf	6
  2295  0215  0187               	clrf	7
  2296  0216  3F40               	moviw [0]fsr1
  2297  0217  00F2               	movwf	??_ringbuf_num
  2298  0218  3F41               	moviw [1]fsr1
  2299  0219  00F3               	movwf	??_ringbuf_num+1
  2300  021A  0876               	movf	ringbuf_num@rb,w
  2301  021B  3E03               	addlw	3
  2302  021C  0086               	movwf	6
  2303  021D  0187               	clrf	7
  2304  021E  3F40               	moviw [0]fsr1
  2305  021F  00F4               	movwf	??_ringbuf_num+2
  2306  0220  3F41               	moviw [1]fsr1
  2307  0221  00F5               	movwf	??_ringbuf_num+3
  2308  0222  0873               	movf	??_ringbuf_num+1,w
  2309  0223  0275               	subwf	??_ringbuf_num+3,w
  2310  0224  1D03               	skipz
  2311  0225  2A28               	goto	u39_25
  2312  0226  0872               	movf	??_ringbuf_num,w
  2313  0227  0274               	subwf	??_ringbuf_num+2,w
  2314  0228                     u39_25:	
  2315  0228  1C03               	skipc
  2316  0229  2A42               	goto	i1l1100
  2317                           
  2318                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  2319  022A  0876               	movf	ringbuf_num@rb,w
  2320  022B  3E03               	addlw	3
  2321  022C  0086               	movwf	6
  2322  022D  0187               	clrf	7
  2323  022E  0876               	movf	ringbuf_num@rb,w
  2324  022F  3E05               	addlw	5
  2325  0230  0084               	movwf	4
  2326  0231  0185               	clrf	5
  2327  0232  3F00               	moviw [0]fsr0
  2328  0233  00F2               	movwf	??_ringbuf_num
  2329  0234  3F01               	moviw [1]fsr0
  2330  0235  00F3               	movwf	??_ringbuf_num+1
  2331  0236  09F2               	comf	??_ringbuf_num,f
  2332  0237  09F3               	comf	??_ringbuf_num+1,f
  2333  0238  0AF2               	incf	??_ringbuf_num,f
  2334  0239  1903               	skipnz
  2335  023A  0AF3               	incf	??_ringbuf_num+1,f
  2336  023B  3F40               	moviw [0]fsr1
  2337  023C  0772               	addwf	??_ringbuf_num,w
  2338  023D  00F0               	movwf	?_ringbuf_num
  2339  023E  3F41               	moviw [1]fsr1
  2340  023F  3D73               	addwfc	??_ringbuf_num+1,w
  2341  0240  00F1               	movwf	?_ringbuf_num+1
  2342                           
  2343                           ;My_header\My_ringbuf.h: 34: } else {
  2344  0241  0008               	return
  2345  0242                     i1l1100:	
  2346                           
  2347                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  2348  0242  0876               	movf	ringbuf_num@rb,w
  2349  0243  3E03               	addlw	3
  2350  0244  0086               	movwf	6
  2351  0245  0187               	clrf	7
  2352  0246  0876               	movf	ringbuf_num@rb,w
  2353  0247  3E05               	addlw	5
  2354  0248  0084               	movwf	4
  2355  0249  0185               	clrf	5
  2356  024A  3F00               	moviw [0]fsr0
  2357  024B  00F2               	movwf	??_ringbuf_num
  2358  024C  3F01               	moviw [1]fsr0
  2359  024D  00F3               	movwf	??_ringbuf_num+1
  2360  024E  09F2               	comf	??_ringbuf_num,f
  2361  024F  09F3               	comf	??_ringbuf_num+1,f
  2362  0250  0AF2               	incf	??_ringbuf_num,f
  2363  0251  1903               	skipnz
  2364  0252  0AF3               	incf	??_ringbuf_num+1,f
  2365  0253  0A76               	incf	ringbuf_num@rb,w
  2366  0254  0084               	movwf	4
  2367  0255  0185               	clrf	5
  2368  0256  3F00               	moviw [0]fsr0
  2369  0257  0772               	addwf	??_ringbuf_num,w
  2370  0258  00F4               	movwf	??_ringbuf_num+2
  2371  0259  3F01               	moviw [1]fsr0
  2372  025A  3D73               	addwfc	??_ringbuf_num+1,w
  2373  025B  00F5               	movwf	??_ringbuf_num+3
  2374  025C  3F40               	moviw [0]fsr1
  2375  025D  0774               	addwf	??_ringbuf_num+2,w
  2376  025E  00F0               	movwf	?_ringbuf_num
  2377  025F  3F41               	moviw [1]fsr1
  2378  0260  3D75               	addwfc	??_ringbuf_num+3,w
  2379  0261  00F1               	movwf	?_ringbuf_num+1
  2380  0262  0008               	return
  2381  0263                     __end_of_ringbuf_num:	
  2382  007E                     btemp	set	126	;btemp
  2383  007E                     int$flags	set	126
  2384  007E                     wtemp	set	126
  2385  007E                     wtemp0	set	126
  2386  0080                     wtemp1	set	128
  2387  0082                     wtemp2	set	130
  2388  0084                     wtemp3	set	132
  2389  0086                     wtemp4	set	134
  2390  0088                     wtemp5	set	136
  2391  007F                     wtemp6	set	127
  2392  007E                     ttemp	set	126
  2393  007E                     ttemp0	set	126
  2394  0081                     ttemp1	set	129
  2395  0084                     ttemp2	set	132
  2396  0087                     ttemp3	set	135
  2397  007F                     ttemp4	set	127
  2398  007E                     ltemp	set	126
  2399  007E                     ltemp0	set	126
  2400  0082                     ltemp1	set	130
  2401  0086                     ltemp2	set	134
  2402  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        50
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      71
    BANK1            80      0      50
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ringbuf_put_str@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_put_num@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    rx_buf.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_put@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@buf(BANK0[30]), 

    ringbuf_init@rb	PTR struct ringbuf size(1) Largest target is 8
		 -> tx_buf(BANK0[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _interrupt_TXIF->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num

Critical Paths under _main in BANK0

    _main->_SPI_LCD_Cursor
    _SPI_LCD_init->_SPI_LCD_Command
    _SPI_LCD_Data->_SPI_Transfer
    _SPI_LCD_Cursor->_SPI_LCD_Command
    _SPI_LCD_Command->_SPI_Transfer

Critical Paths under _isr in BANK0

    _isr->_tx_send
    _tx_send->_ringbuf_put
    _interrupt_TXIF->_ringbuf_pop

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0    1714
                                             15 BANK0     33    33      0
                     _SPI_LCD_Cursor
                       _SPI_LCD_Data
                       _SPI_LCD_init
                           _SPI_init
                          _UART_init
                             ___bmul
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         5     2      3     290
                                              6 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     352
                                              6 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             1     1      0      66
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_LCD_init                                         2     2      0     155
                                             12 BANK0      2     2      0
                           _Delay_ms
                    _SPI_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             4     2      2      86
                                              6 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SPI_LCD_Data                                         3     3      0      69
                                              9 BANK0      3     3      0
                       _SPI_Transfer
 ---------------------------------------------------------------------------------
 (1) _SPI_LCD_Cursor                                       3     2      1     263
                                             12 BANK0      3     2      1
                    _SPI_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _SPI_LCD_Command                                      3     3      0      69
                                              9 BANK0      3     3      0
                       _SPI_Transfer
 ---------------------------------------------------------------------------------
 (3) _SPI_Transfer                                         3     3      0      46
                                              6 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0    1648
                                              3 BANK0      3     3      0
                     _interrupt_TXIF
                            _tx_send
 ---------------------------------------------------------------------------------
 (5) _tx_send                                              2     2      0     870
                                              1 BANK0      2     2      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          8     7      1     848
                                              7 COMMON     7     6      1
                                              0 BANK0      1     1      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (5) _interrupt_TXIF                                       0     0      0     755
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (6) _ringbuf_pop                                          8     8      0     481
                                              7 COMMON     6     6      0
                                              0 BANK0      2     2      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          7     5      2     274
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_LCD_Cursor
     _SPI_LCD_Command
       _SPI_Transfer
   _SPI_LCD_Data
     _SPI_Transfer
   _SPI_LCD_init
     _Delay_ms
     _SPI_LCD_Command
       _SPI_Transfer
   _SPI_init
   _UART_init
   ___bmul
   _ringbuf_init

 _isr (ROOT)
   _interrupt_TXIF
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _tx_send
     _ringbuf_put
       _ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      87       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     30      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      32       8       62.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      87      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 19:10:43 2015

          ___bmul@product 0028               __CFG_CP$OFF 0000                        _d1 005B  
                      _ms 0057    __end_of_interrupt_TXIF 0358                       l202 02FD  
                     l208 0364              __CFG_CPD$OFF 0000                       u525 0331  
                     u747 01DE                       u757 01EC                       u767 037E  
            _SPI_Transfer 0358                       _isr 0004       SPI_LCD_Command@comm 002B  
     SPI_LCD_Command@dumy 002A              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_LVP$OFF 0000                      l1240 038D                      l1146 036F  
                    l1410 0102                      l1236 0387                      l1404 00FD  
                    l1418 0162                      l1196 02F3                      l1372 007B  
                    l1382 008D                      l1378 0088                      l1396 009D  
                    ?_isr 0070                      _RCIF 008D                      _TMR0 0015  
                    _SPEN 0CEF                      _WPUA 020C                      _WPUB 020D  
            __CFG_WRT$OFF 0000                      _main 003B                      fsr0h 0005  
                    fsr1h 0007                      fsr0l 0004                      indf0 0000  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
                    ltemp 007E                      start 0022                      ttemp 007E  
                    wtemp 007E             __CFG_IESO$OFF 0000         ___bmul@multiplier 0029  
__size_of_SPI_LCD_Command 0010                     ??_isr 0023             __CFG_PLLEN$ON 0000  
         ?_interrupt_TXIF 0070                     ?_main 0070                     _ADRES 009B  
                   _BRG16 0CFB             __CFG_WDTE$OFF 0000                     _LATA4 0864  
                   _LATA7 0867                     i1l150 0355                     i1l230 001D  
                   _RCREG 0199                     _RCSTA 019D                     _TMR1H 0017  
                   u41_25 017A                     _TMR1L 0016                     u42_25 01A9  
                   u44_25 029A                     u39_25 0228                     _TRISA 008C  
                   _TRISB 008D                     _TXREG 019A                     _TXSTA 019E  
          __CFG_FCMEN$OFF 0000        __size_of_UART_init 000E                     main@i 004E  
                   main@j 004F        SPI_LCD_Cursor@page 002E          ??_SPI_LCD_Cursor 002D  
          __CFG_BOREN$OFF 0000                     ltemp0 007E          __end_of_SPI_init 0306  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __end_of_tx_send 03D0          __end_of_Delay_ms 0384  
          __CFG_MCLRE$OFF 0000           __initialization 0024              __end_of_main 0167  
     ringbuf_init@bufsize 0027                    ??_main 002F                    _ANSELA 018C  
                  _ANSELB 018D                    i1l1100 0242                    i1l1120 01B5  
                  i1l1130 02A6                    i1l1132 02AD                    i1l1138 02AF  
                  i1l1318 0010                    _FVRCON 0117                    _OSCCON 0099  
                  _TMR0IF 005A                    _SPBRGH 019C                    _SPBRGL 019B  
                  _SSP1IF 008B            __CFG_PWRTE$OFF 0000                    ___bmul 0384  
            ?_ringbuf_pop 0070              ?_ringbuf_num 0070              ?_ringbuf_put 0077  
       __end_of_UART_init 03C4         ??_SPI_LCD_Command 0029                    _rx_buf 0050  
                  _tx_buf 0060                 ??_tx_send 0021   __end_of__initialization 0037  
            SPI_init@mode 0026       ___bmul@multiplicand 0026            __pcstackCOMMON 0070  
            __pidataBANK1 02B1                 ?_SPI_init 0070            _OPTION_REGbits 0095  
               ?_Delay_ms 0026                __pbssBANK0 0050                __pmaintext 003B  
        ??_interrupt_TXIF 007D                   ?___bmul 0026                __pintentry 0004  
              ??_SPI_init 0026                ??_Delay_ms 0028                   _SSP1BUF 0211  
         __size_of___bmul 0012             ?_ringbuf_init 0026      __size_of_ringbuf_pop 004E  
    __size_of_ringbuf_num 0052      __size_of_ringbuf_put 0056           __CFG_STVREN$OFF 0000  
                 __ptext1 0306                   __ptext2 0384                   __ptext3 03B6  
                 __ptext4 02E3                   __ptext5 01BD                   __ptext6 036F  
                 __ptext7 0396                   __ptext8 0325                   __ptext9 03A6  
               _T1CONbits 0018              __size_of_isr 001E                   _pattern 00A0  
                 main@buf 0030                   clrloop0 03D1                   _tx_send 03C4  
    end_of_initialization 0037      SPI_LCD_Cursor@column 002C                   init_ram 03D6  
                 initloop 03D7           _SPI_LCD_Command 03A6             ?_SPI_LCD_Data 0070  
           ?_SPI_LCD_init 0070            ??_ringbuf_init 0029                 _UART_init 03B6  
        __CFG_FOSC$INTOSC 0000            ??_SPI_LCD_Data 0029            ??_SPI_LCD_init 002C  
          ringbuf_init@rb 002A   __size_of_SPI_LCD_Cursor 001B            ringbuf_pop@ret 0020  
          __end_of___bmul 0396                ?_UART_init 0070             ?_SPI_Transfer 0070  
     start_initialization 0024         __size_of_SPI_init 0023               __end_of_isr 0022  
       __size_of_Delay_ms 0015   __end_of_SPI_LCD_Command 03B6               _APFCON0bits 011D  
             _APFCON1bits 011E                  ??___bmul 0027               __pdataBANK1 00A0  
          ??_SPI_Transfer 0026                 ___latbits 0001             __pcstackBANK0 0020  
    __end_of_ringbuf_init 0325          tx_send@asciicode 0022           millis_timer@cnt 005E  
             ??_UART_init 0026      __end_of_SPI_LCD_Data 03A6      __end_of_SPI_LCD_init 0211  
      SPI_Transfer@rxdata 0028                  ?_tx_send 0070        SPI_Transfer@txdata 0027  
        ?_SPI_LCD_Command 0070  ringbuf_init@internal_buf 0026                 clear_ram0 03D0  
                _PIE1bits 0091                  _PIR1bits 0011            _SPI_LCD_Cursor 0325  
           ??_ringbuf_pop 0077             ??_ringbuf_num 0072             ??_ringbuf_put 0078  
              _ADCON0bits 009D                _ADCON1bits 009E                  _SPI_init 02E3  
 __size_of_interrupt_TXIF 0018                  _Delay_ms 036F             ringbuf_pop@rb 0021  
           ringbuf_num@rb 0076             ringbuf_put@rb 0020      __end_of_SPI_Transfer 036F  
  __end_of_SPI_LCD_Cursor 0340       __end_of_ringbuf_pop 02B1       __end_of_ringbuf_num 0263  
     __end_of_ringbuf_put 01BD     __size_of_ringbuf_init 001F                  __ptext10 0358  
                __ptext12 03C4                  __ptext13 0167                  __ptext14 0340  
                __ptext15 0263                  __ptext16 0211              _SSP1CON1bits 0215  
        __size_of_tx_send 000C             __size_of_main 012C           ?_SPI_LCD_Cursor 002C  
                int$flags 007E              _ringbuf_init 0306              _SSP1STATbits 0214  
   __size_of_SPI_LCD_Data 0010     __size_of_SPI_LCD_init 0054                _INTCONbits 000B  
    ringbuf_put@asciicode 0077                  isr@ascii 0025                Delay_ms@ms 0026  
                intlevel1 0000         __CFG_CLKOUTEN$OFF 0000              _SPI_LCD_Data 0396  
            _SPI_LCD_init 01BD               _ringbuf_pop 0263               _ringbuf_num 0211  
             _ringbuf_put 0167            _interrupt_TXIF 0340          SPI_LCD_Data@data 002B  
        SPI_LCD_Data@dumy 002A     __size_of_SPI_Transfer 0017  
