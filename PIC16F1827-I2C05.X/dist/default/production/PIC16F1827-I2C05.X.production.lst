

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Feb 12 03:15:57 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  0011                     	;# 
    58  0012                     	;# 
    59  0013                     	;# 
    60  0014                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  001E                     	;# 
    71  001F                     	;# 
    72  008C                     	;# 
    73  008D                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0093                     	;# 
    77  0094                     	;# 
    78  0095                     	;# 
    79  0096                     	;# 
    80  0097                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  010C                     	;# 
    90  010D                     	;# 
    91  0111                     	;# 
    92  0112                     	;# 
    93  0113                     	;# 
    94  0114                     	;# 
    95  0115                     	;# 
    96  0116                     	;# 
    97  0117                     	;# 
    98  0118                     	;# 
    99  0119                     	;# 
   100  011A                     	;# 
   101  011B                     	;# 
   102  011D                     	;# 
   103  011E                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0191                     	;# 
   107  0191                     	;# 
   108  0192                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0193                     	;# 
   112  0194                     	;# 
   113  0195                     	;# 
   114  0196                     	;# 
   115  0199                     	;# 
   116  019A                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019C                     	;# 
   122  019C                     	;# 
   123  019D                     	;# 
   124  019E                     	;# 
   125  019F                     	;# 
   126  020C                     	;# 
   127  020D                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  0212                     	;# 
   131  0212                     	;# 
   132  0213                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0214                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0216                     	;# 
   140  0216                     	;# 
   141  0217                     	;# 
   142  0217                     	;# 
   143  0219                     	;# 
   144  021A                     	;# 
   145  021B                     	;# 
   146  021C                     	;# 
   147  021D                     	;# 
   148  021E                     	;# 
   149  021F                     	;# 
   150  0291                     	;# 
   151  0291                     	;# 
   152  0292                     	;# 
   153  0293                     	;# 
   154  0294                     	;# 
   155  0295                     	;# 
   156  0295                     	;# 
   157  0296                     	;# 
   158  0298                     	;# 
   159  0298                     	;# 
   160  0299                     	;# 
   161  029A                     	;# 
   162  029B                     	;# 
   163  029C                     	;# 
   164  029C                     	;# 
   165  029D                     	;# 
   166  029E                     	;# 
   167  029E                     	;# 
   168  0311                     	;# 
   169  0311                     	;# 
   170  0312                     	;# 
   171  0313                     	;# 
   172  0318                     	;# 
   173  0318                     	;# 
   174  0319                     	;# 
   175  031A                     	;# 
   176  0394                     	;# 
   177  0395                     	;# 
   178  0396                     	;# 
   179  039A                     	;# 
   180  039C                     	;# 
   181  039D                     	;# 
   182  039E                     	;# 
   183  039F                     	;# 
   184  0415                     	;# 
   185  0416                     	;# 
   186  0417                     	;# 
   187  041C                     	;# 
   188  041D                     	;# 
   189  041E                     	;# 
   190  0FE4                     	;# 
   191  0FE5                     	;# 
   192  0FE6                     	;# 
   193  0FE7                     	;# 
   194  0FE8                     	;# 
   195  0FE9                     	;# 
   196  0FEA                     	;# 
   197  0FEB                     	;# 
   198  0FED                     	;# 
   199  0FEE                     	;# 
   200  0FEF                     	;# 
   201                           
   202                           	psect	idataCOMMON
   203  07B0                     __pidataCOMMON:	
   204                           
   205                           ;initializer for LCD_SetCursor@F3069
   206  07B0  3400               	retlw	0
   207  07B1  3440               	retlw	64
   208                           
   209                           	psect	stringtext
   210  0600                     __pstringtext:	
   211  0600                     _hexpowers:	
   212  0600  3401               	retlw	1
   213  0601  3400               	retlw	0
   214  0602  3410               	retlw	16
   215  0603  3400               	retlw	0
   216  0604  3400               	retlw	0
   217  0605  3401               	retlw	1
   218  0606  3400               	retlw	0
   219  0607  3410               	retlw	16
   220  0608                     __end_of_hexpowers:	
   221  000B                     _INTCONbits	set	11
   222  000C                     _PORTA	set	12
   223  000D                     _PORTB	set	13
   224  0018                     _T1CON	set	24
   225  0018                     _T1CONbits	set	24
   226  0017                     _TMR1H	set	23
   227  0016                     _TMR1L	set	22
   228  0093                     _BCL1IF	set	147
   229  0060                     _RA0	set	96
   230  0061                     _RA1	set	97
   231  008D                     _RCIF	set	141
   232  008B                     _SSP1IF	set	139
   233  0088                     _TMR1IF	set	136
   234  008C                     _TXIF	set	140
   235  009B                     _ADRES	set	155
   236  009D                     _ADCON0bits	set	157
   237  009E                     _ADCON1bits	set	158
   238  0095                     _OPTION_REG	set	149
   239  0095                     _OPTION_REGbits	set	149
   240  0099                     _OSCCON	set	153
   241  0091                     _PIE1bits	set	145
   242  008C                     _TRISA	set	140
   243  008D                     _TRISB	set	141
   244  048C                     _TXIE	set	1164
   245  011D                     _APFCON0bits	set	285
   246  011E                     _APFCON1bits	set	286
   247  0117                     _FVRCON	set	279
   248  0868                     _LATB0	set	2152
   249  018C                     _ANSELA	set	396
   250  018D                     _ANSELB	set	397
   251  0199                     _RCREG	set	409
   252  019D                     _RCSTA	set	413
   253  019C                     _SPBRGH	set	412
   254  019B                     _SPBRGL	set	411
   255  019A                     _TXREG	set	410
   256  019E                     _TXSTA	set	414
   257  0CFB                     _BRG16	set	3323
   258  0CEF                     _SPEN	set	3311
   259  0212                     _SSP1ADD	set	530
   260  0211                     _SSP1BUF	set	529
   261  0215                     _SSP1CON1	set	533
   262  0216                     _SSP1CON2	set	534
   263  0216                     _SSP1CON2bits	set	534
   264  0214                     _SSP1STAT	set	532
   265  020D                     _WPUB	set	525
   266  0608                     __stringdata:	
   267  0608                     STR_4:	
   268  0608  3430               	retlw	48	;'0'
   269  0609  3431               	retlw	49	;'1'
   270  060A  3432               	retlw	50	;'2'
   271  060B  3433               	retlw	51	;'3'
   272  060C  3434               	retlw	52	;'4'
   273  060D  3435               	retlw	53	;'5'
   274  060E  3436               	retlw	54	;'6'
   275  060F  3437               	retlw	55	;'7'
   276  0610  3438               	retlw	56	;'8'
   277  0611  3439               	retlw	57	;'9'
   278  0612  3461               	retlw	97	;'a'
   279  0613  3462               	retlw	98	;'b'
   280  0614  3463               	retlw	99	;'c'
   281  0615  3464               	retlw	100	;'d'
   282  0616  3465               	retlw	101	;'e'
   283  0617  3466               	retlw	102	;'f'
   284  0618  3400               	retlw	0
   285  0619                     STR_1:	
   286  0619  3425               	retlw	37	;'%'
   287  061A  3478               	retlw	120	;'x'
   288  061B  3425               	retlw	37	;'%'
   289  061C  3478               	retlw	120	;'x'
   290  061D  3425               	retlw	37	;'%'
   291  061E  3478               	retlw	120	;'x'
   292  061F  3425               	retlw	37	;'%'
   293  0620  3478               	retlw	120	;'x'
   294  0621  340A               	retlw	10
   295  0622  3400               	retlw	0
   296  0623                     STR_2:	
   297  0623  3425               	retlw	37	;'%'
   298  0624  3478               	retlw	120	;'x'
   299  0625  3400               	retlw	0
   300  0626                     __end_of__stringdata:	
   301                           
   302                           ; #config settings
   303  0000                     
   304                           	psect	cinit
   305  0046                     start_initialization:	
   306  0046                     __initialization:	
   307                           
   308                           ; Clear objects allocated to COMMON
   309  0046  01F8               	clrf	__pbssCOMMON& (0+127)
   310  0047  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   311                           
   312                           ; Clear objects allocated to BANK2
   313  0048  0022               	movlb	2	; select bank2
   314  0049  01B5               	clrf	__pbssBANK2& (0+127)
   315  004A  01B6               	clrf	(__pbssBANK2+1)& (0+127)
   316  004B  01B7               	clrf	(__pbssBANK2+2)& (0+127)
   317  004C  01B8               	clrf	(__pbssBANK2+3)& (0+127)
   318  004D  01B9               	clrf	(__pbssBANK2+4)& (0+127)
   319  004E  01BA               	clrf	(__pbssBANK2+5)& (0+127)
   320  004F  01BB               	clrf	(__pbssBANK2+6)& (0+127)
   321  0050  01BC               	clrf	(__pbssBANK2+7)& (0+127)
   322  0051  01BD               	clrf	(__pbssBANK2+8)& (0+127)
   323  0052  01BE               	clrf	(__pbssBANK2+9)& (0+127)
   324                           
   325                           ; Initialize objects allocated to COMMON
   326  0053  3187  27B0  3180   	fcall	__pidataCOMMON	;fetch initializer
   327  0056  00FA               	movwf	__pdataCOMMON& (0+127)
   328  0057  3187  27B1         	fcall	__pidataCOMMON+1	;fetch initializer
   329  0059  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   330  005A                     end_of_initialization:	
   331                           ;End of C runtime variable initialization code
   332                           
   333  005A                     __end_of__initialization:	
   334  005A  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   335  005B  0020               	movlb	0
   336  005C  3180  285E         	ljmp	_main	;jump to C main() function
   337                           
   338                           	psect	bssCOMMON
   339  0078                     __pbssCOMMON:	
   340  0078                     _ascii:	
   341  0078                     	ds	1
   342  0079                     _cnt_t1:	
   343  0079                     	ds	1
   344                           
   345                           	psect	dataCOMMON
   346  007A                     __pdataCOMMON:	
   347  007A                     LCD_SetCursor@F3069:	
   348  007A                     	ds	2
   349                           
   350                           	psect	bssBANK2
   351  0135                     __pbssBANK2:	
   352  0135                     _tx_buf:	
   353  0135                     	ds	4
   354  0139                     _sw_RA0:	
   355  0139                     	ds	3
   356  013C                     _sw_RA1:	
   357  013C                     	ds	3
   358                           
   359                           	psect	cstackBANK2
   360  0120                     __pcstackBANK2:	
   361  0120                     main@data_0:	
   362                           
   363                           ; 1 bytes @ 0x0
   364  0120                     	ds	1
   365  0121                     main@data_1:	
   366                           
   367                           ; 1 bytes @ 0x1
   368  0121                     	ds	1
   369  0122                     main@t:	
   370                           
   371                           ; 4 bytes @ 0x2
   372  0122                     	ds	4
   373  0126                     main@s:	
   374                           
   375                           ; 12 bytes @ 0x6
   376  0126                     	ds	12
   377  0132                     main@data_2:	
   378                           
   379                           ; 1 bytes @ 0x12
   380  0132                     	ds	1
   381  0133                     main@data_3:	
   382                           
   383                           ; 1 bytes @ 0x13
   384  0133                     	ds	1
   385  0134                     main@P:	
   386                           
   387                           ; 1 bytes @ 0x14
   388  0134                     	ds	1
   389                           
   390                           	psect	cstackBANK1
   391  00A0                     __pcstackBANK1:	
   392  00A0                     main@buf:	
   393                           
   394                           ; 80 bytes @ 0x0
   395  00A0                     	ds	80
   396                           
   397                           	psect	cstackCOMMON
   398  0070                     __pcstackCOMMON:	
   399  0070                     ?_button_timer_interrupt:	
   400  0070                     ??_ringbuf_pop:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0070                     ??_ringbuf_num:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0070                     ?_UART_init:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0070                     ?_tx_send:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0070                     ?_tx_sends:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0070                     ?_interrupt_TXIF:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0070                     ?_I2C_IdleCheck:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0070                     ?_I2C_init:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0070                     ?_I2C_Stop:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0070                     ?_LCD_Command:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0070                     ?_LCD_Clear:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0070                     ?_LCD_init:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0070                     ?_TM_init:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0070                     ?_isr:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0070                     ?_main:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0070                     ?i1_ringbuf_push:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0070                     ?_ringbuf_pop:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0070                     ?_ringbuf_num:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_I2C_Send:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_I2C_Receive:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     button_timer_interrupt@sw_value:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     i1ringbuf_push@asciicode:	
   464                           ; 1 bytes @ 0x0
   465                           
   466                           
   467                           ; 1 bytes @ 0x0
   468  0070                     	ds	1
   469  0071                     ??_button_timer_interrupt:	
   470  0071                     ??i1_ringbuf_push:	
   471                           ; 0 bytes @ 0x1
   472                           
   473  0071                     ringbuf_num@rb:	
   474                           ; 0 bytes @ 0x1
   475                           
   476                           
   477                           ; 1 bytes @ 0x1
   478  0071                     	ds	1
   479  0072                     ringbuf_pop@ret:	
   480                           
   481                           ; 1 bytes @ 0x2
   482  0072                     	ds	1
   483  0073                     button_timer_interrupt@bt:	
   484  0073                     ringbuf_pop@rb:	
   485                           ; 1 bytes @ 0x3
   486                           
   487  0073                     i1ringbuf_push@rb:	
   488                           ; 1 bytes @ 0x3
   489                           
   490                           
   491                           ; 1 bytes @ 0x3
   492  0073                     	ds	1
   493  0074                     ??_tx_send:	
   494  0074                     ??_interrupt_TXIF:	
   495                           ; 0 bytes @ 0x4
   496                           
   497                           
   498                           ; 0 bytes @ 0x4
   499  0074                     	ds	1
   500  0075                     tx_send@asciicode:	
   501                           
   502                           ; 1 bytes @ 0x5
   503  0075                     	ds	1
   504  0076                     ??_isr:	
   505                           
   506                           ; 0 bytes @ 0x6
   507  0076                     	ds	2
   508                           
   509                           	psect	cstackBANK0
   510  0020                     __pcstackBANK0:	
   511  0020                     ?_ringbuf_init:	
   512  0020                     ?_ringbuf_push:	
   513                           ; 0 bytes @ 0x0
   514                           
   515  0020                     ??_UART_init:	
   516                           ; 0 bytes @ 0x0
   517                           
   518  0020                     ?_Delay_ms:	
   519                           ; 0 bytes @ 0x0
   520                           
   521  0020                     ??_I2C_IdleCheck:	
   522                           ; 0 bytes @ 0x0
   523                           
   524  0020                     ??_I2C_init:	
   525                           ; 0 bytes @ 0x0
   526                           
   527  0020                     ?___lwdiv:	
   528                           ; 0 bytes @ 0x0
   529                           
   530  0020                     ringbuf_init@internal_buf:	
   531                           ; 2 bytes @ 0x0
   532                           
   533  0020                     ringbuf_push@asciicode:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0020                     UART_init@device:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0020                     Delay_ms@ms:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0020                     ___lwdiv@divisor:	
   543                           ; 2 bytes @ 0x0
   544                           
   545                           
   546                           ; 2 bytes @ 0x0
   547  0020                     	ds	1
   548  0021                     ??_ringbuf_push:	
   549  0021                     ringbuf_init@bufsize:	
   550                           ; 0 bytes @ 0x1
   551                           
   552  0021                     I2C_IdleCheck@mask:	
   553                           ; 1 bytes @ 0x1
   554                           
   555                           
   556                           ; 1 bytes @ 0x1
   557  0021                     	ds	1
   558  0022                     ??_ringbuf_init:	
   559  0022                     ??_Delay_ms:	
   560                           ; 0 bytes @ 0x2
   561                           
   562  0022                     ??_I2C_Stop:	
   563                           ; 0 bytes @ 0x2
   564                           
   565  0022                     ??_I2C_Send:	
   566                           ; 0 bytes @ 0x2
   567                           
   568  0022                     ??_I2C_Receive:	
   569                           ; 0 bytes @ 0x2
   570                           
   571  0022                     ?_I2C_Start:	
   572                           ; 0 bytes @ 0x2
   573                           
   574  0022                     ?_I2C_rStart:	
   575                           ; 1 bytes @ 0x2
   576                           
   577  0022                     I2C_Start@rw:	
   578                           ; 1 bytes @ 0x2
   579                           
   580  0022                     I2C_Send@data:	
   581                           ; 1 bytes @ 0x2
   582                           
   583  0022                     I2C_rStart@adrs:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0022                     ___lwdiv@dividend:	
   587                           ; 2 bytes @ 0x2
   588                           
   589                           
   590                           ; 2 bytes @ 0x2
   591  0022                     	ds	1
   592  0023                     ??_I2C_Start:	
   593  0023                     ringbuf_init@rb:	
   594                           ; 0 bytes @ 0x3
   595                           
   596  0023                     ringbuf_push@rb:	
   597                           ; 1 bytes @ 0x3
   598                           
   599  0023                     I2C_Start@adrs:	
   600                           ; 1 bytes @ 0x3
   601                           
   602  0023                     I2C_Receive@ack:	
   603                           ; 1 bytes @ 0x3
   604                           
   605                           
   606                           ; 1 bytes @ 0x3
   607  0023                     	ds	1
   608  0024                     ??_tx_sends:	
   609  0024                     ??_LCD_Command:	
   610                           ; 0 bytes @ 0x4
   611                           
   612  0024                     ??_TM_init:	
   613                           ; 0 bytes @ 0x4
   614                           
   615  0024                     ?_EEP_Write:	
   616                           ; 0 bytes @ 0x4
   617                           
   618  0024                     ??___lwdiv:	
   619                           ; 0 bytes @ 0x4
   620                           
   621  0024                     I2C_Receive@data:	
   622                           ; 0 bytes @ 0x4
   623                           
   624  0024                     EEP_Write@Reg_l:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0024                     Delay_ms@i:	
   628                           ; 1 bytes @ 0x4
   629                           
   630  0024                     I2C_rStart@rw:	
   631                           ; 2 bytes @ 0x4
   632                           
   633                           
   634                           ; 2 bytes @ 0x4
   635  0024                     	ds	1
   636  0025                     LCD_Command@c:	
   637  0025                     TM_init@config:	
   638                           ; 1 bytes @ 0x5
   639                           
   640  0025                     EEP_Write@data:	
   641                           ; 1 bytes @ 0x5
   642                           
   643  0025                     ___lwdiv@quotient:	
   644                           ; 1 bytes @ 0x5
   645                           
   646                           
   647                           ; 2 bytes @ 0x5
   648  0025                     	ds	1
   649  0026                     ??_I2C_rStart:	
   650  0026                     ??_EEP_Write:	
   651                           ; 0 bytes @ 0x6
   652                           
   653  0026                     ?_EEP_Read:	
   654                           ; 0 bytes @ 0x6
   655                           
   656  0026                     tx_sends@i:	
   657                           ; 1 bytes @ 0x6
   658                           
   659  0026                     LCD_Command@ans:	
   660                           ; 1 bytes @ 0x6
   661                           
   662  0026                     TM_init@ans:	
   663                           ; 1 bytes @ 0x6
   664                           
   665  0026                     EEP_Read@Reg_l:	
   666                           ; 1 bytes @ 0x6
   667                           
   668                           
   669                           ; 1 bytes @ 0x6
   670  0026                     	ds	1
   671  0027                     ??_LCD_Clear:	
   672  0027                     ??_EEP_Read:	
   673                           ; 0 bytes @ 0x7
   674                           
   675  0027                     tx_sends@asciicode:	
   676                           ; 0 bytes @ 0x7
   677                           
   678  0027                     EEP_Write@Reg_h:	
   679                           ; 1 bytes @ 0x7
   680                           
   681  0027                     ___lwdiv@counter:	
   682                           ; 1 bytes @ 0x7
   683                           
   684                           
   685                           ; 1 bytes @ 0x7
   686  0027                     	ds	1
   687  0028                     ?_sprintf:	
   688  0028                     EEP_Write@ans:	
   689                           ; 2 bytes @ 0x8
   690                           
   691  0028                     EEP_Read@Reg_h:	
   692                           ; 1 bytes @ 0x8
   693                           
   694  0028                     sprintf@f:	
   695                           ; 1 bytes @ 0x8
   696                           
   697                           
   698                           ; 2 bytes @ 0x8
   699  0028                     	ds	1
   700  0029                     ??_LCD_init:	
   701  0029                     EEP_Read@data:	
   702                           ; 0 bytes @ 0x9
   703                           
   704                           
   705                           ; 1 bytes @ 0x9
   706  0029                     	ds	1
   707  002A                     EEP_Read@ans:	
   708                           
   709                           ; 1 bytes @ 0xA
   710  002A                     	ds	8
   711  0032                     ??_sprintf:	
   712                           
   713                           ; 0 bytes @ 0x12
   714  0032                     	ds	4
   715  0036                     sprintf@flag:	
   716                           
   717                           ; 1 bytes @ 0x16
   718  0036                     	ds	1
   719  0037                     sprintf@idx:	
   720                           
   721                           ; 1 bytes @ 0x17
   722  0037                     	ds	1
   723  0038                     sprintf@ap:	
   724                           
   725                           ; 1 bytes @ 0x18
   726  0038                     	ds	1
   727  0039                     sprintf@_val:	
   728                           
   729                           ; 4 bytes @ 0x19
   730  0039                     	ds	4
   731  003D                     sprintf@prec:	
   732                           
   733                           ; 1 bytes @ 0x1D
   734  003D                     	ds	1
   735  003E                     sprintf@sp:	
   736                           
   737                           ; 1 bytes @ 0x1E
   738  003E                     	ds	1
   739  003F                     sprintf@c:	
   740                           
   741                           ; 1 bytes @ 0x1F
   742  003F                     	ds	1
   743  0040                     ??_main:	
   744                           
   745                           ; 0 bytes @ 0x20
   746  0040                     	ds	8
   747  0048                     main@buf_589:	
   748                           
   749                           ; 40 bytes @ 0x28
   750  0048                     	ds	40
   751                           
   752                           	psect	maintext
   753  005E                     __pmaintext:	
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 49 in file "PIC16F1827-I2C05.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  buf            40   40[BANK0 ] unsigned char [40]
   764 ;;  t               4    2[BANK2 ] unsigned long 
   765 ;;  data_3          1   19[BANK2 ] unsigned char 
   766 ;;  data_2          1   18[BANK2 ] unsigned char 
   767 ;;  data_1          1    1[BANK2 ] unsigned char 
   768 ;;  data_0          1    0[BANK2 ] unsigned char 
   769 ;;  buf            80    0[BANK1 ] unsigned char [80]
   770 ;;  s              12    6[BANK2 ] unsigned long [3]
   771 ;;  P               1   20[BANK2 ] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;		None               void
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 17F/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   781 ;;      Params:         0       0       0       0       0       0
   782 ;;      Locals:         0      40      80      21       0       0
   783 ;;      Temps:          0       8       0       0       0       0
   784 ;;      Totals:         0      48      80      21       0       0
   785 ;;Total ram usage:      149 bytes
   786 ;; Hardware stack levels required when called:    8
   787 ;; This function calls:
   788 ;;		_Delay_ms
   789 ;;		_EEP_Read
   790 ;;		_EEP_Write
   791 ;;		_I2C_init
   792 ;;		_LCD_init
   793 ;;		_TM_init
   794 ;;		_UART_init
   795 ;;		_ringbuf_init
   796 ;;		_sprintf
   797 ;;		_tx_sends
   798 ;; This function is called by:
   799 ;;		Startup code after reset
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _main
   805  005E                     _main:	
   806                           
   807                           ;PIC16F1827-I2C05.c: 50: OSCCON = 0b01110000;
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   811  005E  3070               	movlw	112
   812  005F  0021               	movlb	1	; select bank1
   813  0060  0099               	movwf	25	;volatile
   814                           
   815                           ;PIC16F1827-I2C05.c: 51: OPTION_REG = 0b00000000;
   816  0061  0195               	clrf	21	;volatile
   817                           
   818                           ;PIC16F1827-I2C05.c: 52: ANSELA = 0b00000000;
   819  0062  0023               	movlb	3	; select bank3
   820  0063  018C               	clrf	12	;volatile
   821                           
   822                           ;PIC16F1827-I2C05.c: 53: ANSELB = 0b00000000;
   823  0064  018D               	clrf	13	;volatile
   824                           
   825                           ;PIC16F1827-I2C05.c: 54: TRISA = 0b00000011;
   826  0065  3003               	movlw	3
   827  0066  0021               	movlb	1	; select bank1
   828  0067  008C               	movwf	12	;volatile
   829                           
   830                           ;PIC16F1827-I2C05.c: 55: TRISB = 0b00010110;
   831  0068  3016               	movlw	22
   832  0069  008D               	movwf	13	;volatile
   833                           
   834                           ;PIC16F1827-I2C05.c: 56: WPUB = 0b00010010;
   835  006A  3012               	movlw	18
   836  006B  0024               	movlb	4	; select bank4
   837  006C  008D               	movwf	13	;volatile
   838                           
   839                           ;PIC16F1827-I2C05.c: 57: PORTA = 0b00000000;
   840  006D  0020               	movlb	0	; select bank0
   841  006E  018C               	clrf	12	;volatile
   842                           
   843                           ;PIC16F1827-I2C05.c: 58: PORTB = 0b00000000;
   844  006F  018D               	clrf	13	;volatile
   845                           
   846                           ;PIC16F1827-I2C05.c: 59: APFCON0bits.RXDTSEL = 1;
   847  0070  0022               	movlb	2	; select bank2
   848  0071  179D               	bsf	29,7	;volatile
   849                           
   850                           ;PIC16F1827-I2C05.c: 60: APFCON1bits.TXCKSEL = 1;
   851  0072  141E               	bsf	30,0	;volatile
   852                           
   853                           ;PIC16F1827-I2C05.c: 62: T1CON = 0x21;
   854  0073  3021               	movlw	33
   855  0074  0020               	movlb	0	; select bank0
   856  0075  0098               	movwf	24	;volatile
   857                           
   858                           ;PIC16F1827-I2C05.c: 63: TMR1H = 0x00;
   859  0076  0197               	clrf	23	;volatile
   860                           
   861                           ;PIC16F1827-I2C05.c: 64: TMR1L = 0x00;
   862  0077  0196               	clrf	22	;volatile
   863                           
   864                           ;PIC16F1827-I2C05.c: 65: PIE1bits.TMR1IE = 1;
   865  0078  0021               	movlb	1	; select bank1
   866  0079  1411               	bsf	17,0	;volatile
   867                           
   868                           ;PIC16F1827-I2C05.c: 67: I2C_init();
   869  007A  3187  2794  3180   	fcall	_I2C_init
   870                           
   871                           ;PIC16F1827-I2C05.c: 68: LCD_init();
   872  007D  3183  23FA  3180   	fcall	_LCD_init
   873                           
   874                           ;PIC16F1827-I2C05.c: 69: UART_init(0);
   875  0080  3000               	movlw	0
   876  0081  3187  2752  3180   	fcall	_UART_init
   877                           
   878                           ;PIC16F1827-I2C05.c: 70: TM_init(0b01100000);
   879  0084  3060               	movlw	96
   880  0085  3186  266E  3180   	fcall	_TM_init
   881                           
   882                           ;PIC16F1827-I2C05.c: 72: INTCONbits.PEIE = 1;
   883  0088  170B               	bsf	11,6	;volatile
   884                           
   885                           ;PIC16F1827-I2C05.c: 73: INTCONbits.GIE = 1;
   886  0089  178B               	bsf	11,7	;volatile
   887                           
   888                           ;PIC16F1827-I2C05.c: 75: uint8_t buf[80];
   889                           ;PIC16F1827-I2C05.c: 76: ringbuf_init(&tx_buf, buf, sizeof (buf));
   890  008A  30A0               	movlw	main@buf& (0+255)
   891  008B  0020               	movlb	0	; select bank0
   892  008C  00C0               	movwf	??_main
   893  008D  0840               	movf	??_main,w
   894  008E  00A0               	movwf	ringbuf_init@internal_buf
   895  008F  3050               	movlw	80
   896  0090  00C1               	movwf	??_main+1
   897  0091  0841               	movf	??_main+1,w
   898  0092  00A1               	movwf	ringbuf_init@bufsize
   899  0093  3035               	movlw	_tx_buf& (0+255)
   900  0094  3186  26CE  3180   	fcall	_ringbuf_init
   901                           
   902                           ;PIC16F1827-I2C05.c: 79: uint8_t P;
   903                           ;PIC16F1827-I2C05.c: 80: uint32_t s[3];
   904                           ;PIC16F1827-I2C05.c: 81: s[0] = 0x12345678;
   905  0097  3012               	movlw	18
   906  0098  0022               	movlb	2	; select bank2
   907  0099  00A9               	movwf	(main@s+3)^(0+256)
   908  009A  3034               	movlw	52
   909  009B  00A8               	movwf	(main@s+2)^(0+256)
   910  009C  3056               	movlw	86
   911  009D  00A7               	movwf	(main@s+1)^(0+256)
   912  009E  3078               	movlw	120
   913  009F  00A6               	movwf	main@s^(0+256)
   914                           
   915                           ;PIC16F1827-I2C05.c: 82: s[1] = 0x87654321;
   916  00A0  3087               	movlw	135
   917  00A1  00AD               	movwf	((main@s+3)^(0+256)+4)
   918  00A2  3065               	movlw	101
   919  00A3  00AC               	movwf	((main@s+2)^(0+256)+4)
   920  00A4  3043               	movlw	67
   921  00A5  00AB               	movwf	((main@s+1)^(0+256)+4)
   922  00A6  3021               	movlw	33
   923  00A7  00AA               	movwf	(main@s^(0+256)+4)
   924                           
   925                           ;PIC16F1827-I2C05.c: 83: s[2] = 0x24681357;
   926  00A8  3024               	movlw	36
   927  00A9  00B1               	movwf	((main@s+3)^(0+256)+8)
   928  00AA  3068               	movlw	104
   929  00AB  00B0               	movwf	((main@s+2)^(0+256)+8)
   930  00AC  3013               	movlw	19
   931  00AD  00AF               	movwf	((main@s+1)^(0+256)+8)
   932  00AE  3057               	movlw	87
   933  00AF  00AE               	movwf	(main@s^(0+256)+8)
   934  00B0                     l1858:	
   935                           ;PIC16F1827-I2C05.c: 84: while (1) {
   936                           
   937                           
   938                           ;PIC16F1827-I2C05.c: 85: for (P = 0; P < 3; P++) {
   939  00B0  01B4               	clrf	main@P^(0+256)
   940  00B1                     L1:	
   941  00B1  3003               	movlw	3
   942  00B2  0234               	subwf	main@P^(0+256),w
   943  00B3  1803               	btfsc	3,0
   944  00B4  28B0               	goto	l1858
   945                           
   946                           ;PIC16F1827-I2C05.c: 87: EEP_Write(P, 0, (s[P]) >> 24);
   947  00B5  0020               	movlb	0	; select bank0
   948  00B6  01A4               	clrf	EEP_Write@Reg_l
   949  00B7  0022               	movlb	2	; select bank2
   950  00B8  0834               	movf	main@P^(0+256),w
   951  00B9  0020               	movlb	0	; select bank0
   952  00BA  00C0               	movwf	??_main
   953  00BB  3001               	movlw	1
   954  00BC                     u1295:	
   955  00BC  35C0               	lslf	??_main,f
   956  00BD  3EFF               	addlw	-1
   957  00BE  1D03               	skipz
   958  00BF  28BC               	goto	u1295
   959  00C0  3540               	lslf	??_main,w
   960  00C1  3E26               	addlw	main@s& (0+255)
   961  00C2  0086               	movwf	6
   962  00C3  3001               	movlw	1	; select bank2/3
   963  00C4  0087               	movwf	7
   964  00C5  3F40               	moviw [0]fsr1
   965  00C6  00C1               	movwf	??_main+1
   966  00C7  3F41               	moviw [1]fsr1
   967  00C8  00C2               	movwf	??_main+2
   968  00C9  3F42               	moviw [2]fsr1
   969  00CA  00C3               	movwf	??_main+3
   970  00CB  3F43               	moviw [3]fsr1
   971  00CC  00C4               	movwf	??_main+4
   972  00CD  3018               	movlw	24
   973  00CE                     u1305:	
   974  00CE  36C4               	lsrf	??_main+4,f
   975  00CF  0CC3               	rrf	??_main+3,f
   976  00D0  0CC2               	rrf	??_main+2,f
   977  00D1  0CC1               	rrf	??_main+1,f
   978  00D2  0B89               	decfsz	9,f
   979  00D3  28CE               	goto	u1305
   980  00D4  0841               	movf	??_main+1,w
   981  00D5  00C5               	movwf	??_main+5
   982  00D6  0845               	movf	??_main+5,w
   983  00D7  00A5               	movwf	EEP_Write@data
   984  00D8  0022               	movlb	2	; select bank2
   985  00D9  0834               	movf	main@P^(0+256),w
   986  00DA  3186  2626  3180   	fcall	_EEP_Write
   987                           
   988                           ;PIC16F1827-I2C05.c: 88: _delay((unsigned long)((1)*(32000000/4000.0)));
   989  00DD  300B               	movlw	11
   990  00DE  0020               	movlb	0	; select bank0
   991  00DF  00C1               	movwf	??_main+1
   992  00E0  3062               	movlw	98
   993  00E1  00C0               	movwf	??_main
   994  00E2                     u1387:	
   995  00E2  0BC0               	decfsz	??_main,f
   996  00E3  28E2               	goto	u1387
   997  00E4  0BC1               	decfsz	??_main+1,f
   998  00E5  28E2               	goto	u1387
   999  00E6  0000               	nop
  1000                           
  1001                           ;PIC16F1827-I2C05.c: 89: EEP_Write(P, 1, (s[P]) >> 16);
  1002  00E7  0020               	movlb	0	; select bank0
  1003  00E8  01A4               	clrf	EEP_Write@Reg_l
  1004  00E9  0AA4               	incf	EEP_Write@Reg_l,f
  1005  00EA  0022               	movlb	2	; select bank2
  1006  00EB  0834               	movf	main@P^(0+256),w
  1007  00EC  0020               	movlb	0	; select bank0
  1008  00ED  00C0               	movwf	??_main
  1009  00EE  3001               	movlw	1
  1010  00EF                     u1315:	
  1011  00EF  35C0               	lslf	??_main,f
  1012  00F0  3EFF               	addlw	-1
  1013  00F1  1D03               	skipz
  1014  00F2  28EF               	goto	u1315
  1015  00F3  3540               	lslf	??_main,w
  1016  00F4  3E26               	addlw	main@s& (0+255)
  1017  00F5  0086               	movwf	6
  1018  00F6  3001               	movlw	1	; select bank2/3
  1019  00F7  0087               	movwf	7
  1020  00F8  3F40               	moviw [0]fsr1
  1021  00F9  00C1               	movwf	??_main+1
  1022  00FA  3F41               	moviw [1]fsr1
  1023  00FB  00C2               	movwf	??_main+2
  1024  00FC  3F42               	moviw [2]fsr1
  1025  00FD  00C3               	movwf	??_main+3
  1026  00FE  3F43               	moviw [3]fsr1
  1027  00FF  00C4               	movwf	??_main+4
  1028  0100  3010               	movlw	16
  1029  0101                     u1325:	
  1030  0101  36C4               	lsrf	??_main+4,f
  1031  0102  0CC3               	rrf	??_main+3,f
  1032  0103  0CC2               	rrf	??_main+2,f
  1033  0104  0CC1               	rrf	??_main+1,f
  1034  0105  0B89               	decfsz	9,f
  1035  0106  2901               	goto	u1325
  1036  0107  0841               	movf	??_main+1,w
  1037  0108  00C5               	movwf	??_main+5
  1038  0109  0845               	movf	??_main+5,w
  1039  010A  00A5               	movwf	EEP_Write@data
  1040  010B  0022               	movlb	2	; select bank2
  1041  010C  0834               	movf	main@P^(0+256),w
  1042  010D  3186  2626  3180   	fcall	_EEP_Write
  1043                           
  1044                           ;PIC16F1827-I2C05.c: 90: _delay((unsigned long)((1)*(32000000/4000.0)));
  1045  0110  300B               	movlw	11
  1046  0111  0020               	movlb	0	; select bank0
  1047  0112  00C1               	movwf	??_main+1
  1048  0113  3062               	movlw	98
  1049  0114  00C0               	movwf	??_main
  1050  0115                     u1397:	
  1051  0115  0BC0               	decfsz	??_main,f
  1052  0116  2915               	goto	u1397
  1053  0117  0BC1               	decfsz	??_main+1,f
  1054  0118  2915               	goto	u1397
  1055  0119  0000               	nop
  1056                           
  1057                           ;PIC16F1827-I2C05.c: 91: EEP_Write(P, 2, (s[P]) >> 8);
  1058  011A  3002               	movlw	2
  1059  011B  0020               	movlb	0	; select bank0
  1060  011C  00C0               	movwf	??_main
  1061  011D  0840               	movf	??_main,w
  1062  011E  00A4               	movwf	EEP_Write@Reg_l
  1063  011F  0022               	movlb	2	; select bank2
  1064  0120  0834               	movf	main@P^(0+256),w
  1065  0121  0020               	movlb	0	; select bank0
  1066  0122  00C1               	movwf	??_main+1
  1067  0123  3001               	movlw	1
  1068  0124                     u1335:	
  1069  0124  35C1               	lslf	??_main+1,f
  1070  0125  3EFF               	addlw	-1
  1071  0126  1D03               	skipz
  1072  0127  2924               	goto	u1335
  1073  0128  3541               	lslf	??_main+1,w
  1074  0129  3E26               	addlw	main@s& (0+255)
  1075  012A  0086               	movwf	6
  1076  012B  3001               	movlw	1	; select bank2/3
  1077  012C  0087               	movwf	7
  1078  012D  3F40               	moviw [0]fsr1
  1079  012E  00C2               	movwf	??_main+2
  1080  012F  3F41               	moviw [1]fsr1
  1081  0130  00C3               	movwf	??_main+3
  1082  0131  3F42               	moviw [2]fsr1
  1083  0132  00C4               	movwf	??_main+4
  1084  0133  3F43               	moviw [3]fsr1
  1085  0134  00C5               	movwf	??_main+5
  1086  0135  3008               	movlw	8
  1087  0136                     u1345:	
  1088  0136  36C5               	lsrf	??_main+5,f
  1089  0137  0CC4               	rrf	??_main+4,f
  1090  0138  0CC3               	rrf	??_main+3,f
  1091  0139  0CC2               	rrf	??_main+2,f
  1092  013A  0B89               	decfsz	9,f
  1093  013B  2936               	goto	u1345
  1094  013C  0842               	movf	??_main+2,w
  1095  013D  00C6               	movwf	??_main+6
  1096  013E  0846               	movf	??_main+6,w
  1097  013F  00A5               	movwf	EEP_Write@data
  1098  0140  0022               	movlb	2	; select bank2
  1099  0141  0834               	movf	main@P^(0+256),w
  1100  0142  3186  2626  3180   	fcall	_EEP_Write
  1101                           
  1102                           ;PIC16F1827-I2C05.c: 92: _delay((unsigned long)((1)*(32000000/4000.0)));
  1103  0145  300B               	movlw	11
  1104  0146  0020               	movlb	0	; select bank0
  1105  0147  00C1               	movwf	??_main+1
  1106  0148  3062               	movlw	98
  1107  0149  00C0               	movwf	??_main
  1108  014A                     u1407:	
  1109  014A  0BC0               	decfsz	??_main,f
  1110  014B  294A               	goto	u1407
  1111  014C  0BC1               	decfsz	??_main+1,f
  1112  014D  294A               	goto	u1407
  1113  014E  0000               	nop
  1114                           
  1115                           ;PIC16F1827-I2C05.c: 93: EEP_Write(P, 3, (s[P]) >> 0);
  1116  014F  3003               	movlw	3
  1117  0150  0020               	movlb	0	; select bank0
  1118  0151  00C0               	movwf	??_main
  1119  0152  0840               	movf	??_main,w
  1120  0153  00A4               	movwf	EEP_Write@Reg_l
  1121  0154  0022               	movlb	2	; select bank2
  1122  0155  0834               	movf	main@P^(0+256),w
  1123  0156  0020               	movlb	0	; select bank0
  1124  0157  00C1               	movwf	??_main+1
  1125  0158  3001               	movlw	1
  1126  0159                     u1355:	
  1127  0159  35C1               	lslf	??_main+1,f
  1128  015A  3EFF               	addlw	-1
  1129  015B  1D03               	skipz
  1130  015C  2959               	goto	u1355
  1131  015D  3541               	lslf	??_main+1,w
  1132  015E  3E26               	addlw	main@s& (0+255)
  1133  015F  0086               	movwf	6
  1134  0160  3001               	movlw	1	; select bank2/3
  1135  0161  0087               	movwf	7
  1136  0162  0801               	movf	1,w
  1137  0163  00C2               	movwf	??_main+2
  1138  0164  0842               	movf	??_main+2,w
  1139  0165  00A5               	movwf	EEP_Write@data
  1140  0166  0022               	movlb	2	; select bank2
  1141  0167  0834               	movf	main@P^(0+256),w
  1142  0168  3186  2626  3180   	fcall	_EEP_Write
  1143                           
  1144                           ;PIC16F1827-I2C05.c: 94: _delay((unsigned long)((1)*(32000000/4000.0)));
  1145  016B  300B               	movlw	11
  1146  016C  0020               	movlb	0	; select bank0
  1147  016D  00C1               	movwf	??_main+1
  1148  016E  3062               	movlw	98
  1149  016F  00C0               	movwf	??_main
  1150  0170                     u1417:	
  1151  0170  0BC0               	decfsz	??_main,f
  1152  0171  2970               	goto	u1417
  1153  0172  0BC1               	decfsz	??_main+1,f
  1154  0173  2970               	goto	u1417
  1155  0174  0000               	nop
  1156                           
  1157                           ;PIC16F1827-I2C05.c: 95: uint8_t data_0 = EEP_Read(P, 0);
  1158  0175  0020               	movlb	0	; select bank0
  1159  0176  01A6               	clrf	EEP_Read@Reg_l
  1160  0177  0022               	movlb	2	; select bank2
  1161  0178  0834               	movf	main@P^(0+256),w
  1162  0179  3184  243D  3180   	fcall	_EEP_Read
  1163  017C  0020               	movlb	0	; select bank0
  1164  017D  00C0               	movwf	??_main
  1165  017E  0840               	movf	??_main,w
  1166  017F  0022               	movlb	2	; select bank2
  1167  0180  00A0               	movwf	main@data_0^(0+256)
  1168                           
  1169                           ;PIC16F1827-I2C05.c: 96: _delay((unsigned long)((1)*(32000000/4000.0)));
  1170  0181  300B               	movlw	11
  1171  0182  0020               	movlb	0	; select bank0
  1172  0183  00C1               	movwf	??_main+1
  1173  0184  3062               	movlw	98
  1174  0185  00C0               	movwf	??_main
  1175  0186                     u1427:	
  1176  0186  0BC0               	decfsz	??_main,f
  1177  0187  2986               	goto	u1427
  1178  0188  0BC1               	decfsz	??_main+1,f
  1179  0189  2986               	goto	u1427
  1180  018A  0000               	nop
  1181                           
  1182                           ;PIC16F1827-I2C05.c: 97: uint8_t data_1 = EEP_Read(P, 1);
  1183  018B  0020               	movlb	0	; select bank0
  1184  018C  01A6               	clrf	EEP_Read@Reg_l
  1185  018D  0AA6               	incf	EEP_Read@Reg_l,f
  1186  018E  0022               	movlb	2	; select bank2
  1187  018F  0834               	movf	main@P^(0+256),w
  1188  0190  3184  243D  3180   	fcall	_EEP_Read
  1189  0193  0020               	movlb	0	; select bank0
  1190  0194  00C0               	movwf	??_main
  1191  0195  0840               	movf	??_main,w
  1192  0196  0022               	movlb	2	; select bank2
  1193  0197  00A1               	movwf	main@data_1^(0+256)
  1194                           
  1195                           ;PIC16F1827-I2C05.c: 98: _delay((unsigned long)((1)*(32000000/4000.0)));
  1196  0198  300B               	movlw	11
  1197  0199  0020               	movlb	0	; select bank0
  1198  019A  00C1               	movwf	??_main+1
  1199  019B  3062               	movlw	98
  1200  019C  00C0               	movwf	??_main
  1201  019D                     u1437:	
  1202  019D  0BC0               	decfsz	??_main,f
  1203  019E  299D               	goto	u1437
  1204  019F  0BC1               	decfsz	??_main+1,f
  1205  01A0  299D               	goto	u1437
  1206  01A1  0000               	nop
  1207                           
  1208                           ;PIC16F1827-I2C05.c: 99: uint8_t data_2 = EEP_Read(P, 2);
  1209  01A2  3002               	movlw	2
  1210  01A3  0020               	movlb	0	; select bank0
  1211  01A4  00C0               	movwf	??_main
  1212  01A5  0840               	movf	??_main,w
  1213  01A6  00A6               	movwf	EEP_Read@Reg_l
  1214  01A7  0022               	movlb	2	; select bank2
  1215  01A8  0834               	movf	main@P^(0+256),w
  1216  01A9  3184  243D  3180   	fcall	_EEP_Read
  1217  01AC  0020               	movlb	0	; select bank0
  1218  01AD  00C1               	movwf	??_main+1
  1219  01AE  0841               	movf	??_main+1,w
  1220  01AF  0022               	movlb	2	; select bank2
  1221  01B0  00B2               	movwf	main@data_2^(0+256)
  1222                           
  1223                           ;PIC16F1827-I2C05.c: 100: _delay((unsigned long)((1)*(32000000/4000.0)));
  1224  01B1  300B               	movlw	11
  1225  01B2  0020               	movlb	0	; select bank0
  1226  01B3  00C1               	movwf	??_main+1
  1227  01B4  3062               	movlw	98
  1228  01B5  00C0               	movwf	??_main
  1229  01B6                     u1447:	
  1230  01B6  0BC0               	decfsz	??_main,f
  1231  01B7  29B6               	goto	u1447
  1232  01B8  0BC1               	decfsz	??_main+1,f
  1233  01B9  29B6               	goto	u1447
  1234  01BA  0000               	nop
  1235                           
  1236                           ;PIC16F1827-I2C05.c: 101: uint8_t data_3 = EEP_Read(P, 3);
  1237  01BB  3003               	movlw	3
  1238  01BC  0020               	movlb	0	; select bank0
  1239  01BD  00C0               	movwf	??_main
  1240  01BE  0840               	movf	??_main,w
  1241  01BF  00A6               	movwf	EEP_Read@Reg_l
  1242  01C0  0022               	movlb	2	; select bank2
  1243  01C1  0834               	movf	main@P^(0+256),w
  1244  01C2  3184  243D  3180   	fcall	_EEP_Read
  1245  01C5  0020               	movlb	0	; select bank0
  1246  01C6  00C1               	movwf	??_main+1
  1247  01C7  0841               	movf	??_main+1,w
  1248  01C8  0022               	movlb	2	; select bank2
  1249  01C9  00B3               	movwf	main@data_3^(0+256)
  1250                           
  1251                           ;PIC16F1827-I2C05.c: 102: _delay((unsigned long)((1)*(32000000/4000.0)));
  1252  01CA  300B               	movlw	11
  1253  01CB  0020               	movlb	0	; select bank0
  1254  01CC  00C1               	movwf	??_main+1
  1255  01CD  3062               	movlw	98
  1256  01CE  00C0               	movwf	??_main
  1257  01CF                     u1457:	
  1258  01CF  0BC0               	decfsz	??_main,f
  1259  01D0  29CF               	goto	u1457
  1260  01D1  0BC1               	decfsz	??_main+1,f
  1261  01D2  29CF               	goto	u1457
  1262  01D3  0000               	nop
  1263                           
  1264                           ;PIC16F1827-I2C05.c: 103: uint32_t t = (0xFF000000 & (data_0 << 24)) +(0xFF0000 & (data_
      +                          1 << 16))+ (0xFF00 & (data_2 << 8))+ (0xFF & (data_3 << 0));
  1265  01D4  0022               	movlb	2	; select bank2
  1266  01D5  0832               	movf	main@data_2^(0+256),w
  1267  01D6  0020               	movlb	0	; select bank0
  1268  01D7  00C0               	movwf	??_main
  1269  01D8  01C1               	clrf	??_main+1
  1270  01D9  0840               	movf	??_main,w
  1271  01DA  00C1               	movwf	??_main+1
  1272  01DB  01C0               	clrf	??_main
  1273  01DC  3000               	movlw	0
  1274  01DD  0540               	andwf	??_main,w
  1275  01DE  00C3               	movwf	??_main+3
  1276  01DF  30FF               	movlw	255
  1277  01E0  0541               	andwf	??_main+1,w
  1278  01E1  00C4               	movwf	??_main+4
  1279  01E2  0843               	movf	??_main+3,w
  1280  01E3  0022               	movlb	2	; select bank2
  1281  01E4  0733               	addwf	main@data_3^(0+256),w
  1282  01E5  00A2               	movwf	main@t^(0+256)
  1283  01E6  0020               	movlb	0	; select bank0
  1284  01E7  0844               	movf	??_main+4,w
  1285  01E8  0022               	movlb	2	; select bank2
  1286  01E9  00A3               	movwf	(main@t^(0+256)+1)
  1287  01EA  1803               	skipnc
  1288  01EB  0FA3               	incfsz	(main@t^(0+256)+1),f
  1289  01EC  1003               	clrc
  1290  01ED  01A4               	clrf	(main@t+2)^(0+256)
  1291  01EE  1803               	skipnc
  1292  01EF  0AA4               	incf	(main@t^(0+256)+2),f
  1293  01F0  01A5               	clrf	(main@t+3)^(0+256)
  1294                           
  1295                           ;PIC16F1827-I2C05.c: 104: char buf[40];
  1296                           ;PIC16F1827-I2C05.c: 105: sprintf(buf, "%x%x%x%x\n", data_0, data_1, data_2, data_3);
  1297  01F1  3019               	movlw	low (STR_1| (0+32768))
  1298  01F2  0020               	movlb	0	; select bank0
  1299  01F3  00A8               	movwf	sprintf@f
  1300  01F4  3086               	movlw	high (STR_1| (0+32768))
  1301  01F5  00A9               	movwf	sprintf@f+1
  1302  01F6  0022               	movlb	2	; select bank2
  1303  01F7  0820               	movf	main@data_0^(0+256),w
  1304  01F8  0020               	movlb	0	; select bank0
  1305  01F9  00C0               	movwf	??_main
  1306  01FA  01C1               	clrf	??_main+1
  1307  01FB  0840               	movf	??_main,w
  1308  01FC  00AA               	movwf	?_sprintf+2
  1309  01FD  0841               	movf	??_main+1,w
  1310  01FE  00AB               	movwf	?_sprintf+3
  1311  01FF  0022               	movlb	2	; select bank2
  1312  0200  0821               	movf	main@data_1^(0+256),w
  1313  0201  0020               	movlb	0	; select bank0
  1314  0202  00C2               	movwf	??_main+2
  1315  0203  01C3               	clrf	??_main+3
  1316  0204  0842               	movf	??_main+2,w
  1317  0205  00AC               	movwf	?_sprintf+4
  1318  0206  0843               	movf	??_main+3,w
  1319  0207  00AD               	movwf	?_sprintf+5
  1320  0208  0022               	movlb	2	; select bank2
  1321  0209  0832               	movf	main@data_2^(0+256),w
  1322  020A  0020               	movlb	0	; select bank0
  1323  020B  00C4               	movwf	??_main+4
  1324  020C  01C5               	clrf	??_main+5
  1325  020D  0844               	movf	??_main+4,w
  1326  020E  00AE               	movwf	?_sprintf+6
  1327  020F  0845               	movf	??_main+5,w
  1328  0210  00AF               	movwf	?_sprintf+7
  1329  0211  0022               	movlb	2	; select bank2
  1330  0212  0833               	movf	main@data_3^(0+256),w
  1331  0213  0020               	movlb	0	; select bank0
  1332  0214  00C6               	movwf	??_main+6
  1333  0215  01C7               	clrf	??_main+7
  1334  0216  0846               	movf	??_main+6,w
  1335  0217  00B0               	movwf	?_sprintf+8
  1336  0218  0847               	movf	??_main+7,w
  1337  0219  00B1               	movwf	?_sprintf+9
  1338  021A  3048               	movlw	main@buf_589& (0+255)
  1339  021B  3183  2347  3180   	fcall	_sprintf
  1340                           
  1341                           ;PIC16F1827-I2C05.c: 106: tx_sends(&buf);
  1342  021E  3048               	movlw	main@buf_589& (0+255)
  1343  021F  3186  264B  3180   	fcall	_tx_sends
  1344                           
  1345                           ;PIC16F1827-I2C05.c: 107: sprintf(buf, "%x", t >> 16);
  1346  0222  3023               	movlw	low (STR_2| (0+32768))
  1347  0223  0020               	movlb	0	; select bank0
  1348  0224  00A8               	movwf	sprintf@f
  1349  0225  3086               	movlw	high (STR_2| (0+32768))
  1350  0226  00A9               	movwf	sprintf@f+1
  1351  0227  0022               	movlb	2	; select bank2
  1352  0228  0822               	movf	main@t^(0+256),w
  1353  0229  0020               	movlb	0	; select bank0
  1354  022A  00C0               	movwf	??_main
  1355  022B  0022               	movlb	2	; select bank2
  1356  022C  0823               	movf	(main@t+1)^(0+256),w
  1357  022D  0020               	movlb	0	; select bank0
  1358  022E  00C1               	movwf	??_main+1
  1359  022F  0022               	movlb	2	; select bank2
  1360  0230  0824               	movf	(main@t+2)^(0+256),w
  1361  0231  0020               	movlb	0	; select bank0
  1362  0232  00C2               	movwf	??_main+2
  1363  0233  0022               	movlb	2	; select bank2
  1364  0234  0825               	movf	(main@t+3)^(0+256),w
  1365  0235  0020               	movlb	0	; select bank0
  1366  0236  00C3               	movwf	??_main+3
  1367  0237  3010               	movlw	16
  1368  0238                     u1365:	
  1369  0238  36C3               	lsrf	??_main+3,f
  1370  0239  0CC2               	rrf	??_main+2,f
  1371  023A  0CC1               	rrf	??_main+1,f
  1372  023B  0CC0               	rrf	??_main,f
  1373  023C  0B89               	decfsz	9,f
  1374  023D  2A38               	goto	u1365
  1375  023E  0843               	movf	??_main+3,w
  1376  023F  00AD               	movwf	?_sprintf+5
  1377  0240  0842               	movf	??_main+2,w
  1378  0241  00AC               	movwf	?_sprintf+4
  1379  0242  0841               	movf	??_main+1,w
  1380  0243  00AB               	movwf	?_sprintf+3
  1381  0244  0840               	movf	??_main,w
  1382  0245  00AA               	movwf	?_sprintf+2
  1383  0246  3048               	movlw	main@buf_589& (0+255)
  1384  0247  3183  2347  3180   	fcall	_sprintf
  1385                           
  1386                           ;PIC16F1827-I2C05.c: 108: tx_sends(&buf);
  1387  024A  3048               	movlw	main@buf_589& (0+255)
  1388  024B  3186  264B  3180   	fcall	_tx_sends
  1389                           
  1390                           ;PIC16F1827-I2C05.c: 109: sprintf(buf, "%x\n", t);
  1391  024E  301F               	movlw	low ((STR_1+6)| (0+32768))
  1392  024F  0020               	movlb	0	; select bank0
  1393  0250  00A8               	movwf	sprintf@f
  1394  0251  3086               	movlw	high ((STR_1+6)| (0+32768))
  1395  0252  00A9               	movwf	sprintf@f+1
  1396  0253  0022               	movlb	2	; select bank2
  1397  0254  0825               	movf	(main@t+3)^(0+256),w
  1398  0255  0020               	movlb	0	; select bank0
  1399  0256  00AD               	movwf	?_sprintf+5
  1400  0257  0022               	movlb	2	; select bank2
  1401  0258  0824               	movf	(main@t+2)^(0+256),w
  1402  0259  0020               	movlb	0	; select bank0
  1403  025A  00AC               	movwf	?_sprintf+4
  1404  025B  0022               	movlb	2	; select bank2
  1405  025C  0823               	movf	(main@t+1)^(0+256),w
  1406  025D  0020               	movlb	0	; select bank0
  1407  025E  00AB               	movwf	?_sprintf+3
  1408  025F  0022               	movlb	2	; select bank2
  1409  0260  0822               	movf	main@t^(0+256),w
  1410  0261  0020               	movlb	0	; select bank0
  1411  0262  00AA               	movwf	?_sprintf+2
  1412  0263  3048               	movlw	main@buf_589& (0+255)
  1413  0264  3183  2347  3180   	fcall	_sprintf
  1414                           
  1415                           ;PIC16F1827-I2C05.c: 110: tx_sends(&buf);
  1416  0267  3048               	movlw	main@buf_589& (0+255)
  1417  0268  3186  264B  3180   	fcall	_tx_sends
  1418                           
  1419                           ;PIC16F1827-I2C05.c: 111: Delay_ms(1000);
  1420  026B  30E8               	movlw	232
  1421  026C  0020               	movlb	0	; select bank0
  1422  026D  00A0               	movwf	Delay_ms@ms
  1423  026E  3003               	movlw	3
  1424  026F  00A1               	movwf	Delay_ms@ms+1
  1425  0270  3187  2708  3180   	fcall	_Delay_ms
  1426  0273  3001               	movlw	1
  1427  0274  0020               	movlb	0	; select bank0
  1428  0275  00C0               	movwf	??_main
  1429  0276  0840               	movf	??_main,w
  1430  0277  0022               	movlb	2	; select bank2
  1431  0278  07B4               	addwf	main@P^(0+256),f
  1432  0279  28B1               	goto	L1
  1433  027A                     __end_of_main:	
  1434                           
  1435                           	psect	text1
  1436  064B                     __ptext1:	
  1437 ;; *************** function _tx_sends *****************
  1438 ;; Defined at:
  1439 ;;		line 166 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  asciicode       1    wreg     PTR unsigned char 
  1442 ;;		 -> main@buf_589(40), 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  asciicode       1    7[BANK0 ] PTR unsigned char 
  1445 ;;		 -> main@buf_589(40), 
  1446 ;;  i               1    6[BANK0 ] unsigned char 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;		None               void
  1449 ;; Registers used:
  1450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1456 ;;      Params:         0       0       0       0       0       0
  1457 ;;      Locals:         0       2       0       0       0       0
  1458 ;;      Temps:          0       2       0       0       0       0
  1459 ;;      Totals:         0       4       0       0       0       0
  1460 ;;Total ram usage:        4 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    4
  1463 ;; This function calls:
  1464 ;;		_ringbuf_push
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           
  1471                           ;psect for function _tx_sends
  1472  064B                     _tx_sends:	
  1473                           
  1474                           ;incstack = 0
  1475                           ; Regs used in _tx_sends: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1476                           ;tx_sends@asciicode stored from wreg
  1477  064B  0020               	movlb	0	; select bank0
  1478  064C  00A7               	movwf	tx_sends@asciicode
  1479                           
  1480                           ;My_header_16F.h: 167: uint8_t i;
  1481                           ;My_header_16F.h: 168: for (i = 0; asciicode[i]; i++) {
  1482  064D  01A6               	clrf	tx_sends@i
  1483  064E                     l1570:	
  1484  064E  0826               	movf	tx_sends@i,w
  1485  064F  0727               	addwf	tx_sends@asciicode,w
  1486  0650  00A4               	movwf	??_tx_sends
  1487  0651  0824               	movf	??_tx_sends,w
  1488  0652  0086               	movwf	6
  1489  0653  0187               	clrf	7
  1490  0654  0881               	movf	1,f
  1491  0655  1903               	btfsc	3,2
  1492  0656  2E6B               	goto	l159
  1493                           
  1494                           ;My_header_16F.h: 169: ringbuf_push(&tx_buf, asciicode[i]);
  1495  0657  0826               	movf	tx_sends@i,w
  1496  0658  0727               	addwf	tx_sends@asciicode,w
  1497  0659  00A4               	movwf	??_tx_sends
  1498  065A  0824               	movf	??_tx_sends,w
  1499  065B  0086               	movwf	6
  1500  065C  0187               	clrf	7
  1501  065D  0801               	movf	1,w
  1502  065E  00A5               	movwf	??_tx_sends+1
  1503  065F  0825               	movf	??_tx_sends+1,w
  1504  0660  00A0               	movwf	ringbuf_push@asciicode
  1505  0661  3035               	movlw	_tx_buf& (0+255)
  1506  0662  3184  24B1  3186   	fcall	_ringbuf_push
  1507  0665  3001               	movlw	1
  1508  0666  0020               	movlb	0	; select bank0
  1509  0667  00A4               	movwf	??_tx_sends
  1510  0668  0824               	movf	??_tx_sends,w
  1511  0669  07A6               	addwf	tx_sends@i,f
  1512  066A  2E4E               	goto	l1570
  1513  066B                     l159:	
  1514                           
  1515                           ;My_header_16F.h: 170: }
  1516                           ;My_header_16F.h: 171: PIE1bits.TXIE = 1;
  1517  066B  0021               	movlb	1	; select bank1
  1518  066C  1611               	bsf	17,4	;volatile
  1519  066D  0008               	return
  1520  066E                     __end_of_tx_sends:	
  1521                           
  1522                           	psect	text2
  1523  04B1                     __ptext2:	
  1524 ;; *************** function _ringbuf_push *****************
  1525 ;; Defined at:
  1526 ;;		line 120 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  rb              1    wreg     PTR struct ringbuf
  1529 ;;		 -> tx_buf(4), 
  1530 ;;  asciicode       1    0[BANK0 ] unsigned char 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  rb              1    3[BANK0 ] PTR struct ringbuf
  1533 ;;		 -> tx_buf(4), 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;		None               void
  1536 ;; Registers used:
  1537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1543 ;;      Params:         0       1       0       0       0       0
  1544 ;;      Locals:         0       1       0       0       0       0
  1545 ;;      Temps:          0       2       0       0       0       0
  1546 ;;      Totals:         0       4       0       0       0       0
  1547 ;;Total ram usage:        4 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    3
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_tx_sends
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           
  1558                           ;psect for function _ringbuf_push
  1559  04B1                     _ringbuf_push:	
  1560                           
  1561                           ;incstack = 0
  1562                           ; Regs used in _ringbuf_push: [wreg-fsr1h+status,2+status,0]
  1563                           ;ringbuf_push@rb stored from wreg
  1564  04B1  0020               	movlb	0	; select bank0
  1565  04B2  00A3               	movwf	ringbuf_push@rb
  1566                           
  1567                           ;My_header_16F.h: 121: rb->buf[rb->head] = asciicode;
  1568  04B3  0820               	movf	ringbuf_push@asciicode,w
  1569  04B4  00A1               	movwf	??_ringbuf_push
  1570  04B5  0823               	movf	ringbuf_push@rb,w
  1571  04B6  0086               	movwf	6
  1572  04B7  3001               	movlw	1	; select bank2/3
  1573  04B8  0087               	movwf	7
  1574  04B9  0823               	movf	ringbuf_push@rb,w
  1575  04BA  3E02               	addlw	2
  1576  04BB  0084               	movwf	4
  1577  04BC  3001               	movlw	1	; select bank2/3
  1578  04BD  0085               	movwf	5
  1579  04BE  0800               	movf	0,w
  1580  04BF  0701               	addwf	1,w
  1581  04C0  00A2               	movwf	??_ringbuf_push+1
  1582  04C1  0822               	movf	??_ringbuf_push+1,w
  1583  04C2  0086               	movwf	6
  1584  04C3  0187               	clrf	7
  1585  04C4  0821               	movf	??_ringbuf_push,w
  1586  04C5  0081               	movwf	1
  1587                           
  1588                           ;My_header_16F.h: 122: rb->head++;
  1589  04C6  3001               	movlw	1
  1590  04C7  00A1               	movwf	??_ringbuf_push
  1591  04C8  0823               	movf	ringbuf_push@rb,w
  1592  04C9  3E02               	addlw	2
  1593  04CA  0086               	movwf	6
  1594  04CB  3001               	movlw	1	; select bank2/3
  1595  04CC  0087               	movwf	7
  1596  04CD  0821               	movf	??_ringbuf_push,w
  1597  04CE  0781               	addwf	1,f
  1598                           
  1599                           ;My_header_16F.h: 123: if (rb->head >= rb->size) {
  1600  04CF  0823               	movf	ringbuf_push@rb,w
  1601  04D0  3E02               	addlw	2
  1602  04D1  0086               	movwf	6
  1603  04D2  3001               	movlw	1	; select bank2/3
  1604  04D3  0087               	movwf	7
  1605  04D4  0A23               	incf	ringbuf_push@rb,w
  1606  04D5  0084               	movwf	4
  1607  04D6  3001               	movlw	1	; select bank2/3
  1608  04D7  0085               	movwf	5
  1609  04D8  0800               	movf	0,w
  1610  04D9  0201               	subwf	1,w
  1611  04DA  1C03               	skipc
  1612  04DB  0008               	return
  1613                           
  1614                           ;My_header_16F.h: 124: rb->head = 0;
  1615  04DC  0823               	movf	ringbuf_push@rb,w
  1616  04DD  3E02               	addlw	2
  1617  04DE  0086               	movwf	6
  1618  04DF  3001               	movlw	1	; select bank2/3
  1619  04E0  0087               	movwf	7
  1620  04E1  0181               	clrf	1
  1621  04E2  0008               	return
  1622  04E3                     __end_of_ringbuf_push:	
  1623                           
  1624                           	psect	text3
  1625  0347                     __ptext3:	
  1626 ;; *************** function _sprintf *****************
  1627 ;; Defined at:
  1628 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  sp              1    wreg     PTR unsigned char 
  1631 ;;		 -> main@buf_589(40), 
  1632 ;;  f               2    8[BANK0 ] PTR const unsigned char 
  1633 ;;		 -> STR_3(4), STR_2(3), STR_1(10), 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  sp              1   30[BANK0 ] PTR unsigned char 
  1636 ;;		 -> main@buf_589(40), 
  1637 ;;  idx             1   23[BANK0 ] unsigned char 
  1638 ;;  _val            4   25[BANK0 ] struct .
  1639 ;;  c               1   31[BANK0 ] char 
  1640 ;;  prec            1   29[BANK0 ] char 
  1641 ;;  ap              1   24[BANK0 ] PTR void [1]
  1642 ;;		 -> ?_sprintf(2), 
  1643 ;;  flag            1   22[BANK0 ] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  2    8[BANK0 ] int 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1653 ;;      Params:         0      10       0       0       0       0
  1654 ;;      Locals:         0      10       0       0       0       0
  1655 ;;      Temps:          0       4       0       0       0       0
  1656 ;;      Totals:         0      24       0       0       0       0
  1657 ;;Total ram usage:       24 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    4
  1660 ;; This function calls:
  1661 ;;		___lwdiv
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           
  1668                           ;psect for function _sprintf
  1669  0347                     _sprintf:	
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1673                           ;sprintf@sp stored from wreg
  1674  0347  0020               	movlb	0	; select bank0
  1675  0348  00BE               	movwf	sprintf@sp
  1676                           
  1677                           ;doprnt.c: 494: va_list ap;
  1678                           ;doprnt.c: 499: signed char c;
  1679                           ;doprnt.c: 506: signed char prec;
  1680                           ;doprnt.c: 508: unsigned char flag;
  1681                           ;doprnt.c: 527: union {
  1682                           ;doprnt.c: 528: unsigned int _val;
  1683                           ;doprnt.c: 529: struct {
  1684                           ;doprnt.c: 530: const char * _cp;
  1685                           ;doprnt.c: 531: unsigned _len;
  1686                           ;doprnt.c: 532: } _str;
  1687                           ;doprnt.c: 533: } _val;
  1688                           ;doprnt.c: 542: *ap = __va_start();
  1689  0349  302A               	movlw	(?_sprintf+2)& (0+255)
  1690  034A  00B2               	movwf	??_sprintf
  1691  034B  0832               	movf	??_sprintf,w
  1692  034C  00B8               	movwf	sprintf@ap
  1693  034D                     l1690:	
  1694                           ;doprnt.c: 545: while(c = *f++) {
  1695                           
  1696  034D  0829               	movf	sprintf@f+1,w
  1697  034E  00B3               	movwf	??_sprintf+1
  1698  034F  0828               	movf	sprintf@f,w
  1699  0350  00B2               	movwf	??_sprintf
  1700  0351  0AA8               	incf	sprintf@f,f
  1701  0352  1903               	skipnz
  1702  0353  0AA9               	incf	sprintf@f+1,f
  1703  0354  0832               	movf	??_sprintf,w
  1704  0355  0084               	movwf	4
  1705  0356  0833               	movf	??_sprintf+1,w
  1706  0357  0085               	movwf	5
  1707  0358  0800               	movf	0,w	;code access
  1708  0359  00B4               	movwf	??_sprintf+2
  1709  035A  0834               	movf	??_sprintf+2,w
  1710  035B  00BF               	movwf	sprintf@c
  1711  035C  08BF               	movf	sprintf@c,f
  1712  035D  1903               	btfsc	3,2
  1713  035E  2BF5               	goto	l1692
  1714                           
  1715                           ;doprnt.c: 547: if(c != '%')
  1716  035F  083F               	movf	sprintf@c,w
  1717  0360  3A25               	xorlw	37
  1718  0361  1903               	skipnz
  1719  0362  2B6F               	goto	l1654
  1720                           
  1721                           ;doprnt.c: 549: {
  1722                           ;doprnt.c: 550: ((*sp++ = (c)));
  1723  0363  083F               	movf	sprintf@c,w
  1724  0364  00B2               	movwf	??_sprintf
  1725  0365  083E               	movf	sprintf@sp,w
  1726  0366  0086               	movwf	6
  1727  0367  0187               	clrf	7
  1728  0368  0832               	movf	??_sprintf,w
  1729  0369  0081               	movwf	1
  1730  036A  3001               	movlw	1
  1731  036B  00B2               	movwf	??_sprintf
  1732  036C  0832               	movf	??_sprintf,w
  1733  036D  07BE               	addwf	sprintf@sp,f
  1734                           
  1735                           ;doprnt.c: 551: continue;
  1736  036E  2B4D               	goto	l1690
  1737  036F                     l1654:	
  1738                           
  1739                           ;doprnt.c: 552: }
  1740                           ;doprnt.c: 557: flag = 0;
  1741  036F  01B6               	clrf	sprintf@flag
  1742                           
  1743                           ;doprnt.c: 831: }
  1744                           
  1745                           ;doprnt.c: 822: continue;
  1746                           
  1747                           ;doprnt.c: 811: default:
  1748                           
  1749                           ;doprnt.c: 732: break;
  1750                           
  1751                           ;doprnt.c: 727: case 'x':
  1752                           
  1753                           ;doprnt.c: 647: goto alldone;
  1754                           
  1755                           ;doprnt.c: 646: case 0:
  1756                           
  1757                           ;doprnt.c: 644: switch(c = *f++) {
  1758  0370  0829               	movf	sprintf@f+1,w
  1759  0371  00B3               	movwf	??_sprintf+1
  1760  0372  0828               	movf	sprintf@f,w
  1761  0373  00B2               	movwf	??_sprintf
  1762  0374  0AA8               	incf	sprintf@f,f
  1763  0375  1903               	skipnz
  1764  0376  0AA9               	incf	sprintf@f+1,f
  1765  0377  0832               	movf	??_sprintf,w
  1766  0378  0084               	movwf	4
  1767  0379  0833               	movf	??_sprintf+1,w
  1768  037A  0085               	movwf	5
  1769  037B  0800               	movf	0,w	;code access
  1770  037C  00BF               	movwf	sprintf@c
  1771                           
  1772                           ; Switch size 1, requested type "space"
  1773                           ; Number of cases is 2, Range of values is 0 to 120
  1774                           ; switch strategies available:
  1775                           ; Name         Instructions Cycles
  1776                           ; simple_byte            7     4 (average)
  1777                           ; direct_byte          248     6 (fixed)
  1778                           ; jumptable            260     6 (fixed)
  1779                           ;	Chosen strategy is simple_byte
  1780  037D  3A00               	xorlw	0	; case 0
  1781  037E  1903               	skipnz
  1782  037F  2BF5               	goto	l1692
  1783  0380  3A78               	xorlw	120	; case 120
  1784  0381  1903               	skipnz
  1785  0382  2B84               	goto	l1660
  1786  0383  2B4D               	goto	l1690
  1787  0384                     l1660:	
  1788                           
  1789                           ;doprnt.c: 1282: {
  1790                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1791  0384  0838               	movf	sprintf@ap,w
  1792  0385  0086               	movwf	6
  1793  0386  0187               	clrf	7
  1794  0387  3F40               	moviw [0]fsr1
  1795  0388  00B9               	movwf	sprintf@_val
  1796  0389  3F41               	moviw [1]fsr1
  1797  038A  00BA               	movwf	sprintf@_val+1
  1798  038B  3002               	movlw	2
  1799  038C  00B2               	movwf	??_sprintf
  1800  038D  0832               	movf	??_sprintf,w
  1801  038E  07B8               	addwf	sprintf@ap,f
  1802                           
  1803                           ;doprnt.c: 1296: }
  1804                           ;doprnt.c: 1325: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1805  038F  01BF               	clrf	sprintf@c
  1806  0390  0ABF               	incf	sprintf@c,f
  1807  0391  083F               	movf	sprintf@c,w
  1808  0392  3A04               	xorlw	4
  1809  0393  1903               	btfsc	3,2
  1810  0394  2BB4               	goto	l1678
  1811  0395                     l1670:	
  1812                           
  1813                           ;doprnt.c: 1326: if(_val._val < hexpowers[c])
  1814  0395  083F               	movf	sprintf@c,w
  1815  0396  00B2               	movwf	??_sprintf
  1816  0397  01B3               	clrf	??_sprintf+1
  1817  0398  35B2               	lslf	??_sprintf,f
  1818  0399  0DB3               	rlf	??_sprintf+1,f
  1819  039A  3000               	movlw	low (_hexpowers| (0+32768))
  1820  039B  0732               	addwf	??_sprintf,w
  1821  039C  0084               	movwf	4
  1822  039D  3086               	movlw	high (_hexpowers| (0+32768))
  1823  039E  3D33               	addwfc	??_sprintf+1,w
  1824  039F  0085               	movwf	5
  1825  03A0  3F00               	moviw [0]fsr0
  1826  03A1  00B4               	movwf	??_sprintf+2
  1827  03A2  3F01               	moviw [1]fsr0
  1828  03A3  00B5               	movwf	??_sprintf+3
  1829  03A4  0835               	movf	??_sprintf+3,w
  1830  03A5  023A               	subwf	sprintf@_val+1,w
  1831  03A6  1D03               	skipz
  1832  03A7  2BAA               	goto	u1095
  1833  03A8  0834               	movf	??_sprintf+2,w
  1834  03A9  0239               	subwf	sprintf@_val,w
  1835  03AA                     u1095:	
  1836  03AA  1C03               	btfss	3,0
  1837  03AB  2BB4               	goto	l1678
  1838                           
  1839                           ;doprnt.c: 1327: break;
  1840  03AC  3001               	movlw	1
  1841  03AD  00B2               	movwf	??_sprintf
  1842  03AE  0832               	movf	??_sprintf,w
  1843  03AF  07BF               	addwf	sprintf@c,f
  1844  03B0  083F               	movf	sprintf@c,w
  1845  03B1  3A04               	xorlw	4
  1846  03B2  1D03               	skipz
  1847  03B3  2B95               	goto	l1670
  1848  03B4                     l1678:	
  1849                           
  1850                           ;doprnt.c: 1431: {
  1851                           ;doprnt.c: 1478: }
  1852                           ;doprnt.c: 1481: prec = c;
  1853  03B4  083F               	movf	sprintf@c,w
  1854  03B5  00B2               	movwf	??_sprintf
  1855  03B6  0832               	movf	??_sprintf,w
  1856  03B7  00BD               	movwf	sprintf@prec
  1857  03B8                     l1688:	
  1858                           ;doprnt.c: 1483: while(prec--) {
  1859                           
  1860  03B8  30FF               	movlw	-1
  1861  03B9  00B2               	movwf	??_sprintf
  1862  03BA  0832               	movf	??_sprintf,w
  1863  03BB  07BD               	addwf	sprintf@prec,f
  1864  03BC  083D               	movf	sprintf@prec,w
  1865  03BD  3AFF               	xorlw	255
  1866  03BE  1903               	btfsc	3,2
  1867  03BF  2B4D               	goto	l1690
  1868                           
  1869                           ;doprnt.c: 1487: {
  1870                           ;doprnt.c: 1508: {
  1871                           ;doprnt.c: 1509: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
  1872  03C0  083D               	movf	sprintf@prec,w
  1873  03C1  00B2               	movwf	??_sprintf
  1874  03C2  01B3               	clrf	??_sprintf+1
  1875  03C3  35B2               	lslf	??_sprintf,f
  1876  03C4  0DB3               	rlf	??_sprintf+1,f
  1877  03C5  3000               	movlw	low (_hexpowers| (0+32768))
  1878  03C6  0732               	addwf	??_sprintf,w
  1879  03C7  0084               	movwf	4
  1880  03C8  3086               	movlw	high (_hexpowers| (0+32768))
  1881  03C9  3D33               	addwfc	??_sprintf+1,w
  1882  03CA  0085               	movwf	5
  1883  03CB  3F00               	moviw [0]fsr0
  1884  03CC  00A0               	movwf	___lwdiv@divisor
  1885  03CD  3F01               	moviw [1]fsr0
  1886  03CE  00A1               	movwf	___lwdiv@divisor+1
  1887  03CF  083A               	movf	sprintf@_val+1,w
  1888  03D0  01A3               	clrf	___lwdiv@dividend+1
  1889  03D1  07A3               	addwf	___lwdiv@dividend+1,f
  1890  03D2  0839               	movf	sprintf@_val,w
  1891  03D3  01A2               	clrf	___lwdiv@dividend
  1892  03D4  07A2               	addwf	___lwdiv@dividend,f
  1893  03D5  3184  247A  3183   	fcall	___lwdiv
  1894  03D8  0020               	movlb	0	; select bank0
  1895  03D9  0820               	movf	?___lwdiv,w
  1896  03DA  390F               	andlw	15
  1897  03DB  00B4               	movwf	??_sprintf+2
  1898  03DC  0834               	movf	??_sprintf+2,w
  1899  03DD  00B7               	movwf	sprintf@idx
  1900                           
  1901                           ;doprnt.c: 1515: c = "0123456789abcdef"[idx];
  1902  03DE  0837               	movf	sprintf@idx,w
  1903  03DF  3E08               	addlw	low (STR_4| (0+32768))
  1904  03E0  0084               	movwf	4
  1905  03E1  3086               	movlw	high (STR_4| (0+32768))
  1906  03E2  1803               	skipnc
  1907  03E3  3E01               	addlw	1
  1908  03E4  0085               	movwf	5
  1909  03E5  0800               	movf	0,w	;code access
  1910  03E6  00B2               	movwf	??_sprintf
  1911  03E7  0832               	movf	??_sprintf,w
  1912  03E8  00BF               	movwf	sprintf@c
  1913                           
  1914                           ;doprnt.c: 1517: }
  1915                           ;doprnt.c: 1532: }
  1916                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1917  03E9  083F               	movf	sprintf@c,w
  1918  03EA  00B2               	movwf	??_sprintf
  1919  03EB  083E               	movf	sprintf@sp,w
  1920  03EC  0086               	movwf	6
  1921  03ED  0187               	clrf	7
  1922  03EE  0832               	movf	??_sprintf,w
  1923  03EF  0081               	movwf	1
  1924  03F0  3001               	movlw	1
  1925  03F1  00B2               	movwf	??_sprintf
  1926  03F2  0832               	movf	??_sprintf,w
  1927  03F3  07BE               	addwf	sprintf@sp,f
  1928  03F4  2BB8               	goto	l1688
  1929  03F5                     l1692:	
  1930                           ;doprnt.c: 1534: }
  1931                           ;doprnt.c: 1542: }
  1932                           ;doprnt.c: 1544: alldone:
  1933                           
  1934                           
  1935                           ;doprnt.c: 1547: *sp = 0;
  1936  03F5  083E               	movf	sprintf@sp,w
  1937  03F6  0086               	movwf	6
  1938  03F7  0187               	clrf	7
  1939  03F8  0181               	clrf	1
  1940  03F9  0008               	return
  1941  03FA                     __end_of_sprintf:	
  1942                           ;doprnt.c: 1549: return 0;
  1943                           ;	Return value of _sprintf is never used
  1944                           
  1945                           
  1946                           	psect	text4
  1947  047A                     __ptext4:	
  1948 ;; *************** function ___lwdiv *****************
  1949 ;; Defined at:
  1950 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  divisor         2    0[BANK0 ] unsigned int 
  1953 ;;  dividend        2    2[BANK0 ] unsigned int 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  quotient        2    5[BANK0 ] unsigned int 
  1956 ;;  counter         1    7[BANK0 ] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  2    0[BANK0 ] unsigned int 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1966 ;;      Params:         0       4       0       0       0       0
  1967 ;;      Locals:         0       3       0       0       0       0
  1968 ;;      Temps:          0       1       0       0       0       0
  1969 ;;      Totals:         0       8       0       0       0       0
  1970 ;;Total ram usage:        8 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    3
  1973 ;; This function calls:
  1974 ;;		Nothing
  1975 ;; This function is called by:
  1976 ;;		_sprintf
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           
  1981                           ;psect for function ___lwdiv
  1982  047A                     ___lwdiv:	
  1983                           
  1984                           ;incstack = 0
  1985                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1986  047A  0020               	movlb	0	; select bank0
  1987  047B  01A5               	clrf	___lwdiv@quotient
  1988  047C  01A6               	clrf	___lwdiv@quotient+1
  1989  047D  0821               	movf	___lwdiv@divisor+1,w
  1990  047E  0420               	iorwf	___lwdiv@divisor,w
  1991  047F  1903               	skipnz
  1992  0480  2CAA               	goto	l1490
  1993  0481  01A7               	clrf	___lwdiv@counter
  1994  0482  0AA7               	incf	___lwdiv@counter,f
  1995  0483                     l1478:	
  1996  0483  1BA1               	btfsc	___lwdiv@divisor+1,7
  1997  0484  2C8F               	goto	l1480
  1998  0485  3001               	movlw	1
  1999  0486                     u805:	
  2000  0486  35A0               	lslf	___lwdiv@divisor,f
  2001  0487  0DA1               	rlf	___lwdiv@divisor+1,f
  2002  0488  0B89               	decfsz	9,f
  2003  0489  2C86               	goto	u805
  2004  048A  3001               	movlw	1
  2005  048B  00A4               	movwf	??___lwdiv
  2006  048C  0824               	movf	??___lwdiv,w
  2007  048D  07A7               	addwf	___lwdiv@counter,f
  2008  048E  2C83               	goto	l1478
  2009  048F                     l1480:	
  2010  048F  3001               	movlw	1
  2011  0490                     u825:	
  2012  0490  35A5               	lslf	___lwdiv@quotient,f
  2013  0491  0DA6               	rlf	___lwdiv@quotient+1,f
  2014  0492  0B89               	decfsz	9,f
  2015  0493  2C90               	goto	u825
  2016  0494  0821               	movf	___lwdiv@divisor+1,w
  2017  0495  0223               	subwf	___lwdiv@dividend+1,w
  2018  0496  1D03               	skipz
  2019  0497  2C9A               	goto	u835
  2020  0498  0820               	movf	___lwdiv@divisor,w
  2021  0499  0222               	subwf	___lwdiv@dividend,w
  2022  049A                     u835:	
  2023  049A  1C03               	skipc
  2024  049B  2CA1               	goto	l1486
  2025  049C  0820               	movf	___lwdiv@divisor,w
  2026  049D  02A2               	subwf	___lwdiv@dividend,f
  2027  049E  0821               	movf	___lwdiv@divisor+1,w
  2028  049F  3BA3               	subwfb	___lwdiv@dividend+1,f
  2029  04A0  1425               	bsf	___lwdiv@quotient,0
  2030  04A1                     l1486:	
  2031  04A1  3001               	movlw	1
  2032  04A2                     u845:	
  2033  04A2  36A1               	lsrf	___lwdiv@divisor+1,f
  2034  04A3  0CA0               	rrf	___lwdiv@divisor,f
  2035  04A4  0B89               	decfsz	9,f
  2036  04A5  2CA2               	goto	u845
  2037  04A6  3001               	movlw	1
  2038  04A7  02A7               	subwf	___lwdiv@counter,f
  2039  04A8  1D03               	btfss	3,2
  2040  04A9  2C8F               	goto	l1480
  2041  04AA                     l1490:	
  2042  04AA  0826               	movf	___lwdiv@quotient+1,w
  2043  04AB  01A1               	clrf	?___lwdiv+1
  2044  04AC  07A1               	addwf	?___lwdiv+1,f
  2045  04AD  0825               	movf	___lwdiv@quotient,w
  2046  04AE  01A0               	clrf	?___lwdiv
  2047  04AF  07A0               	addwf	?___lwdiv,f
  2048  04B0  0008               	return
  2049  04B1                     __end_of___lwdiv:	
  2050                           
  2051                           	psect	text5
  2052  06CE                     __ptext5:	
  2053 ;; *************** function _ringbuf_init *****************
  2054 ;; Defined at:
  2055 ;;		line 113 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  rb              1    wreg     PTR struct ringbuf
  2058 ;;		 -> tx_buf(4), 
  2059 ;;  internal_buf    1    0[BANK0 ] PTR unsigned char 
  2060 ;;		 -> main@buf(80), 
  2061 ;;  bufsize         1    1[BANK0 ] unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  rb              1    3[BANK0 ] PTR struct ringbuf
  2064 ;;		 -> tx_buf(4), 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;		None               void
  2067 ;; Registers used:
  2068 ;;		wreg, fsr1l, fsr1h, status,2
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2074 ;;      Params:         0       2       0       0       0       0
  2075 ;;      Locals:         0       1       0       0       0       0
  2076 ;;      Temps:          0       1       0       0       0       0
  2077 ;;      Totals:         0       4       0       0       0       0
  2078 ;;Total ram usage:        4 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    3
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _ringbuf_init
  2090  06CE                     _ringbuf_init:	
  2091                           
  2092                           ;incstack = 0
  2093                           ; Regs used in _ringbuf_init: [wreg+fsr1l+fsr1h+status,2]
  2094                           ;ringbuf_init@rb stored from wreg
  2095  06CE  0020               	movlb	0	; select bank0
  2096  06CF  00A3               	movwf	ringbuf_init@rb
  2097                           
  2098                           ;My_header_16F.h: 114: rb->buf = internal_buf;
  2099  06D0  0820               	movf	ringbuf_init@internal_buf,w
  2100  06D1  00A2               	movwf	??_ringbuf_init
  2101  06D2  0823               	movf	ringbuf_init@rb,w
  2102  06D3  0086               	movwf	6
  2103  06D4  3001               	movlw	1	; select bank2/3
  2104  06D5  0087               	movwf	7
  2105  06D6  0822               	movf	??_ringbuf_init,w
  2106  06D7  0081               	movwf	1
  2107                           
  2108                           ;My_header_16F.h: 115: rb->size = bufsize;
  2109  06D8  0821               	movf	ringbuf_init@bufsize,w
  2110  06D9  00A2               	movwf	??_ringbuf_init
  2111  06DA  0A23               	incf	ringbuf_init@rb,w
  2112  06DB  0086               	movwf	6
  2113  06DC  3001               	movlw	1	; select bank2/3
  2114  06DD  0087               	movwf	7
  2115  06DE  0822               	movf	??_ringbuf_init,w
  2116  06DF  0081               	movwf	1
  2117                           
  2118                           ;My_header_16F.h: 116: rb->head = 0;
  2119  06E0  0823               	movf	ringbuf_init@rb,w
  2120  06E1  3E02               	addlw	2
  2121  06E2  0086               	movwf	6
  2122  06E3  3001               	movlw	1	; select bank2/3
  2123  06E4  0087               	movwf	7
  2124  06E5  0181               	clrf	1
  2125                           
  2126                           ;My_header_16F.h: 117: rb->tail = 0;
  2127  06E6  0823               	movf	ringbuf_init@rb,w
  2128  06E7  3E03               	addlw	3
  2129  06E8  0086               	movwf	6
  2130  06E9  3001               	movlw	1	; select bank2/3
  2131  06EA  0087               	movwf	7
  2132  06EB  0181               	clrf	1
  2133  06EC  0008               	return
  2134  06ED                     __end_of_ringbuf_init:	
  2135                           
  2136                           	psect	text6
  2137  0752                     __ptext6:	
  2138 ;; *************** function _UART_init *****************
  2139 ;; Defined at:
  2140 ;;		line 148 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  device          1    wreg     unsigned char 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  device          1    0[BANK0 ] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;		None               void
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2154 ;;      Params:         0       0       0       0       0       0
  2155 ;;      Locals:         0       1       0       0       0       0
  2156 ;;      Temps:          0       0       0       0       0       0
  2157 ;;      Totals:         0       1       0       0       0       0
  2158 ;;Total ram usage:        1 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    3
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_main
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           
  2169                           ;psect for function _UART_init
  2170  0752                     _UART_init:	
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _UART_init: [wreg+status,2+status,0]
  2174                           ;UART_init@device stored from wreg
  2175  0752  0020               	movlb	0	; select bank0
  2176  0753  00A0               	movwf	UART_init@device
  2177                           
  2178                           ;My_header_16F.h: 149: if (device == 0) {
  2179  0754  08A0               	movf	UART_init@device,f
  2180  0755  1D03               	skipz
  2181  0756  0008               	return
  2182                           
  2183                           ;My_header_16F.h: 150: SPEN = 1;
  2184  0757  0023               	movlb	3	; select bank3
  2185  0758  179D               	bsf	29,7	;volatile
  2186                           
  2187                           ;My_header_16F.h: 151: RCSTA = 0x90;
  2188  0759  3090               	movlw	144
  2189  075A  009D               	movwf	29	;volatile
  2190                           
  2191                           ;My_header_16F.h: 152: BRG16 = 0;
  2192  075B  119F               	bcf	31,3	;volatile
  2193                           
  2194                           ;My_header_16F.h: 153: SPBRGH = 0;
  2195  075C  019C               	clrf	28	;volatile
  2196                           
  2197                           ;My_header_16F.h: 154: SPBRGL = 207;
  2198  075D  30CF               	movlw	207
  2199  075E  009B               	movwf	27	;volatile
  2200                           
  2201                           ;My_header_16F.h: 155: TXSTA = 0x24;
  2202  075F  3024               	movlw	36
  2203  0760  009E               	movwf	30	;volatile
  2204                           
  2205                           ;My_header_16F.h: 156: PIE1bits.RCIE = 1;
  2206  0761  0021               	movlb	1	; select bank1
  2207  0762  1691               	bsf	17,5	;volatile
  2208                           
  2209                           ;My_header_16F.h: 157: INTCONbits.PEIE = 1;
  2210  0763  170B               	bsf	11,6	;volatile
  2211  0764  0008               	return
  2212  0765                     __end_of_UART_init:	
  2213                           
  2214                           	psect	text7
  2215  066E                     __ptext7:	
  2216 ;; *************** function _TM_init *****************
  2217 ;; Defined at:
  2218 ;;		line 387 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  config          1    wreg     unsigned char 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  config          1    5[BANK0 ] unsigned char 
  2223 ;;  ans             1    6[BANK0 ] unsigned char 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;		None               void
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0, pclath, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2233 ;;      Params:         0       0       0       0       0       0
  2234 ;;      Locals:         0       2       0       0       0       0
  2235 ;;      Temps:          0       1       0       0       0       0
  2236 ;;      Totals:         0       3       0       0       0       0
  2237 ;;Total ram usage:        3 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    5
  2240 ;; This function calls:
  2241 ;;		_I2C_Send
  2242 ;;		_I2C_Start
  2243 ;;		_I2C_Stop
  2244 ;; This function is called by:
  2245 ;;		_main
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           
  2250                           ;psect for function _TM_init
  2251  066E                     _TM_init:	
  2252                           
  2253                           ;incstack = 0
  2254                           ; Regs used in _TM_init: [wreg+status,2+status,0+pclath+cstack]
  2255                           ;TM_init@config stored from wreg
  2256  066E  0020               	movlb	0	; select bank0
  2257  066F  00A5               	movwf	TM_init@config
  2258                           
  2259                           ;My_header_16F.h: 388: uint8_t ans;
  2260                           ;My_header_16F.h: 389: ans = I2C_Start(0x48, 0);
  2261  0670  01A2               	clrf	I2C_Start@rw
  2262  0671  3048               	movlw	72
  2263  0672  3186  26ED  3186   	fcall	_I2C_Start
  2264  0675  0020               	movlb	0	; select bank0
  2265  0676  00A4               	movwf	??_TM_init
  2266  0677  0824               	movf	??_TM_init,w
  2267  0678  00A6               	movwf	TM_init@ans
  2268                           
  2269                           ;My_header_16F.h: 390: if (ans == 0) {
  2270  0679  08A6               	movf	TM_init@ans,f
  2271  067A  1D03               	skipz
  2272  067B  2E85               	goto	l249
  2273                           
  2274                           ;My_header_16F.h: 391: I2C_Send(0x01);
  2275  067C  3001               	movlw	1
  2276  067D  3187  2765  3186   	fcall	_I2C_Send
  2277                           
  2278                           ;My_header_16F.h: 392: I2C_Send(config);
  2279  0680  0020               	movlb	0	; select bank0
  2280  0681  0825               	movf	TM_init@config,w
  2281  0682  3187  2765  3186   	fcall	_I2C_Send
  2282  0685                     l249:	
  2283                           
  2284                           ;My_header_16F.h: 393: }
  2285                           ;My_header_16F.h: 394: I2C_Stop();
  2286  0685  3187  27AA  3186   	fcall	_I2C_Stop
  2287                           
  2288                           ;My_header_16F.h: 395: _delay((unsigned long)((26)*(32000000/4000000.0)));
  2289  0688  3045               	movlw	69
  2290  0689  0020               	movlb	0	; select bank0
  2291  068A  00A4               	movwf	??_TM_init
  2292  068B                     u1467:	
  2293  068B  0BA4               	decfsz	??_TM_init,f
  2294  068C  2E8B               	goto	u1467
  2295  068D  0008               	return
  2296  068E                     __end_of_TM_init:	
  2297                           
  2298                           	psect	text8
  2299  03FA                     __ptext8:	
  2300 ;; *************** function _LCD_init *****************
  2301 ;; Defined at:
  2302 ;;		line 337 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;		None               void
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0, pclath, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2316 ;;      Params:         0       0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0
  2318 ;;      Temps:          0       3       0       0       0       0
  2319 ;;      Totals:         0       3       0       0       0       0
  2320 ;;Total ram usage:        3 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    7
  2323 ;; This function calls:
  2324 ;;		_LCD_Clear
  2325 ;;		_LCD_Command
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _LCD_init
  2333  03FA                     _LCD_init:	
  2334                           
  2335                           ;My_header_16F.h: 338: _delay((unsigned long)((40)*(32000000/4000.0)));
  2336                           
  2337                           ;incstack = 0
  2338                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2339  03FA  3002               	movlw	2
  2340  03FB  0020               	movlb	0	; select bank0
  2341  03FC  00AB               	movwf	??_LCD_init+2
  2342  03FD  30A0               	movlw	160
  2343  03FE  00AA               	movwf	??_LCD_init+1
  2344  03FF  3092               	movlw	146
  2345  0400  00A9               	movwf	??_LCD_init
  2346  0401                     u1477:	
  2347  0401  0BA9               	decfsz	??_LCD_init,f
  2348  0402  2C01               	goto	u1477
  2349  0403  0BAA               	decfsz	??_LCD_init+1,f
  2350  0404  2C01               	goto	u1477
  2351  0405  0BAB               	decfsz	??_LCD_init+2,f
  2352  0406  2C01               	goto	u1477
  2353  0407  0000               	nop
  2354                           
  2355                           ;My_header_16F.h: 339: LCD_Command(0x38);
  2356  0408  3038               	movlw	56
  2357  0409  3186  268E  3183   	fcall	_LCD_Command
  2358                           
  2359                           ;My_header_16F.h: 340: LCD_Command(0x39);
  2360  040C  3039               	movlw	57
  2361  040D  3186  268E  3183   	fcall	_LCD_Command
  2362                           
  2363                           ;My_header_16F.h: 341: LCD_Command(0x14);
  2364  0410  3014               	movlw	20
  2365  0411  3186  268E  3183   	fcall	_LCD_Command
  2366                           
  2367                           ;My_header_16F.h: 342: LCD_Command(0x70);
  2368  0414  3070               	movlw	112
  2369  0415  3186  268E  3183   	fcall	_LCD_Command
  2370                           
  2371                           ;My_header_16F.h: 343: LCD_Command(0x56);
  2372  0418  3056               	movlw	86
  2373  0419  3186  268E  3183   	fcall	_LCD_Command
  2374                           
  2375                           ;My_header_16F.h: 344: LCD_Command(0x6C);
  2376  041C  306C               	movlw	108
  2377  041D  3186  268E  3183   	fcall	_LCD_Command
  2378                           
  2379                           ;My_header_16F.h: 345: _delay((unsigned long)((200)*(32000000/4000.0)));
  2380  0420  3009               	movlw	9
  2381  0421  0020               	movlb	0	; select bank0
  2382  0422  00AB               	movwf	??_LCD_init+2
  2383  0423  301E               	movlw	30
  2384  0424  00AA               	movwf	??_LCD_init+1
  2385  0425  30EB               	movlw	235
  2386  0426  00A9               	movwf	??_LCD_init
  2387  0427                     u1487:	
  2388  0427  0BA9               	decfsz	??_LCD_init,f
  2389  0428  2C27               	goto	u1487
  2390  0429  0BAA               	decfsz	??_LCD_init+1,f
  2391  042A  2C27               	goto	u1487
  2392  042B  0BAB               	decfsz	??_LCD_init+2,f
  2393  042C  2C27               	goto	u1487
  2394  042D  0000               	nop
  2395                           
  2396                           ;My_header_16F.h: 346: LCD_Command(0x38);
  2397  042E  3038               	movlw	56
  2398  042F  3186  268E  3183   	fcall	_LCD_Command
  2399                           
  2400                           ;My_header_16F.h: 347: LCD_Command(0x0C);
  2401  0432  300C               	movlw	12
  2402  0433  3186  268E  3183   	fcall	_LCD_Command
  2403                           
  2404                           ;My_header_16F.h: 348: LCD_Command(0x06);
  2405  0436  3006               	movlw	6
  2406  0437  3186  268E  3183   	fcall	_LCD_Command
  2407                           
  2408                           ;My_header_16F.h: 349: LCD_Clear();
  2409  043A  3187  2776         	fcall	_LCD_Clear
  2410  043C  0008               	return
  2411  043D                     __end_of_LCD_init:	
  2412                           
  2413                           	psect	text9
  2414  0776                     __ptext9:	
  2415 ;; *************** function _LCD_Clear *****************
  2416 ;; Defined at:
  2417 ;;		line 280 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;		None               void
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2431 ;;      Params:         0       0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0       0
  2433 ;;      Temps:          0       2       0       0       0       0
  2434 ;;      Totals:         0       2       0       0       0       0
  2435 ;;Total ram usage:        2 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    6
  2438 ;; This function calls:
  2439 ;;		_LCD_Command
  2440 ;; This function is called by:
  2441 ;;		_LCD_init
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           
  2446                           ;psect for function _LCD_Clear
  2447  0776                     _LCD_Clear:	
  2448                           
  2449                           ;My_header_16F.h: 281: LCD_Command(0x01);
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2453  0776  3001               	movlw	1
  2454  0777  3186  268E  3187   	fcall	_LCD_Command
  2455                           
  2456                           ;My_header_16F.h: 282: _delay((unsigned long)((1100)*(32000000/4000000.0)));
  2457  077A  300C               	movlw	12
  2458  077B  0020               	movlb	0	; select bank0
  2459  077C  00A8               	movwf	??_LCD_Clear+1
  2460  077D  306C               	movlw	108
  2461  077E  00A7               	movwf	??_LCD_Clear
  2462  077F                     u1497:	
  2463  077F  0BA7               	decfsz	??_LCD_Clear,f
  2464  0780  2F7F               	goto	u1497
  2465  0781  0BA8               	decfsz	??_LCD_Clear+1,f
  2466  0782  2F7F               	goto	u1497
  2467  0783  0000               	nop
  2468  0784  0008               	return
  2469  0785                     __end_of_LCD_Clear:	
  2470                           
  2471                           	psect	text10
  2472  068E                     __ptext10:	
  2473 ;; *************** function _LCD_Command *****************
  2474 ;; Defined at:
  2475 ;;		line 267 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  c               1    wreg     unsigned char 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  c               1    5[BANK0 ] unsigned char 
  2480 ;;  ans             1    6[BANK0 ] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;		None               void
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0, pclath, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2490 ;;      Params:         0       0       0       0       0       0
  2491 ;;      Locals:         0       2       0       0       0       0
  2492 ;;      Temps:          0       1       0       0       0       0
  2493 ;;      Totals:         0       3       0       0       0       0
  2494 ;;Total ram usage:        3 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    5
  2497 ;; This function calls:
  2498 ;;		_I2C_Send
  2499 ;;		_I2C_Start
  2500 ;;		_I2C_Stop
  2501 ;; This function is called by:
  2502 ;;		_LCD_Clear
  2503 ;;		_LCD_init
  2504 ;;		_LCD_SetCursor
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           
  2509                           ;psect for function _LCD_Command
  2510  068E                     _LCD_Command:	
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2514                           ;LCD_Command@c stored from wreg
  2515  068E  0020               	movlb	0	; select bank0
  2516  068F  00A5               	movwf	LCD_Command@c
  2517                           
  2518                           ;My_header_16F.h: 268: uint8_t ans;
  2519                           ;My_header_16F.h: 270: ans = I2C_Start(0x3E, 0);
  2520  0690  01A2               	clrf	I2C_Start@rw
  2521  0691  303E               	movlw	62
  2522  0692  3186  26ED  3186   	fcall	_I2C_Start
  2523  0695  0020               	movlb	0	; select bank0
  2524  0696  00A4               	movwf	??_LCD_Command
  2525  0697  0824               	movf	??_LCD_Command,w
  2526  0698  00A6               	movwf	LCD_Command@ans
  2527                           
  2528                           ;My_header_16F.h: 271: if (ans == 0) {
  2529  0699  08A6               	movf	LCD_Command@ans,f
  2530  069A  1D03               	skipz
  2531  069B  2EA5               	goto	l208
  2532                           
  2533                           ;My_header_16F.h: 273: I2C_Send(0b10000000);
  2534  069C  3080               	movlw	128
  2535  069D  3187  2765  3186   	fcall	_I2C_Send
  2536                           
  2537                           ;My_header_16F.h: 274: I2C_Send(c);
  2538  06A0  0020               	movlb	0	; select bank0
  2539  06A1  0825               	movf	LCD_Command@c,w
  2540  06A2  3187  2765  3186   	fcall	_I2C_Send
  2541  06A5                     l208:	
  2542                           
  2543                           ;My_header_16F.h: 275: }
  2544                           ;My_header_16F.h: 276: I2C_Stop();
  2545  06A5  3187  27AA  3186   	fcall	_I2C_Stop
  2546                           
  2547                           ;My_header_16F.h: 277: _delay((unsigned long)((26)*(32000000/4000000.0)));
  2548  06A8  3045               	movlw	69
  2549  06A9  0020               	movlb	0	; select bank0
  2550  06AA  00A4               	movwf	??_LCD_Command
  2551  06AB                     u1507:	
  2552  06AB  0BA4               	decfsz	??_LCD_Command,f
  2553  06AC  2EAB               	goto	u1507
  2554  06AD  0008               	return
  2555  06AE                     __end_of_LCD_Command:	
  2556                           
  2557                           	psect	text11
  2558  0794                     __ptext11:	
  2559 ;; *************** function _I2C_init *****************
  2560 ;; Defined at:
  2561 ;;		line 203 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;		None               void
  2568 ;; Registers used:
  2569 ;;		wreg
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2575 ;;      Params:         0       0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0
  2578 ;;      Totals:         0       0       0       0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    3
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           
  2590                           ;psect for function _I2C_init
  2591  0794                     _I2C_init:	
  2592                           
  2593                           ;My_header_16F.h: 204: SSP1STAT = 0b10000000;
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _I2C_init: [wreg]
  2597  0794  3080               	movlw	128
  2598  0795  0024               	movlb	4	; select bank4
  2599  0796  0094               	movwf	20	;volatile
  2600                           
  2601                           ;My_header_16F.h: 205: SSP1CON1 = 0b00101000;
  2602  0797  3028               	movlw	40
  2603  0798  0095               	movwf	21	;volatile
  2604                           
  2605                           ;My_header_16F.h: 206: SSP1ADD = 0x13;
  2606  0799  3013               	movlw	19
  2607  079A  0092               	movwf	18	;volatile
  2608                           
  2609                           ;My_header_16F.h: 209: SSP1IF = 0;
  2610  079B  0020               	movlb	0	; select bank0
  2611  079C  1191               	bcf	17,3	;volatile
  2612                           
  2613                           ;My_header_16F.h: 210: BCL1IF = 0;
  2614  079D  1192               	bcf	18,3	;volatile
  2615  079E  0008               	return
  2616  079F                     __end_of_I2C_init:	
  2617                           
  2618                           	psect	text12
  2619  0626                     __ptext12:	
  2620 ;; *************** function _EEP_Write *****************
  2621 ;; Defined at:
  2622 ;;		line 422 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  Reg_h           1    wreg     unsigned char 
  2625 ;;  Reg_l           1    4[BANK0 ] unsigned char 
  2626 ;;  data            1    5[BANK0 ] unsigned char 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  Reg_h           1    7[BANK0 ] unsigned char 
  2629 ;;  ans             1    8[BANK0 ] unsigned char 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;		None               void
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0, pclath, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2639 ;;      Params:         0       2       0       0       0       0
  2640 ;;      Locals:         0       2       0       0       0       0
  2641 ;;      Temps:          0       1       0       0       0       0
  2642 ;;      Totals:         0       5       0       0       0       0
  2643 ;;Total ram usage:        5 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    5
  2646 ;; This function calls:
  2647 ;;		_I2C_Send
  2648 ;;		_I2C_Start
  2649 ;;		_I2C_Stop
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function _EEP_Write
  2657  0626                     _EEP_Write:	
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in _EEP_Write: [wreg+status,2+status,0+pclath+cstack]
  2661                           ;EEP_Write@Reg_h stored from wreg
  2662  0626  0020               	movlb	0	; select bank0
  2663  0627  00A7               	movwf	EEP_Write@Reg_h
  2664                           
  2665                           ;My_header_16F.h: 423: uint8_t ans;
  2666                           ;My_header_16F.h: 424: ans = I2C_Start(0x50, 0);
  2667  0628  01A2               	clrf	I2C_Start@rw
  2668  0629  3050               	movlw	80
  2669  062A  3186  26ED  3186   	fcall	_I2C_Start
  2670  062D  0020               	movlb	0	; select bank0
  2671  062E  00A6               	movwf	??_EEP_Write
  2672  062F  0826               	movf	??_EEP_Write,w
  2673  0630  00A8               	movwf	EEP_Write@ans
  2674                           
  2675                           ;My_header_16F.h: 425: if (ans == 0) {
  2676  0631  08A8               	movf	EEP_Write@ans,f
  2677  0632  1D03               	skipz
  2678  0633  2E42               	goto	l258
  2679                           
  2680                           ;My_header_16F.h: 427: I2C_Send(Reg_h);
  2681  0634  0827               	movf	EEP_Write@Reg_h,w
  2682  0635  3187  2765  3186   	fcall	_I2C_Send
  2683                           
  2684                           ;My_header_16F.h: 428: I2C_Send(Reg_l);
  2685  0638  0020               	movlb	0	; select bank0
  2686  0639  0824               	movf	EEP_Write@Reg_l,w
  2687  063A  3187  2765  3186   	fcall	_I2C_Send
  2688                           
  2689                           ;My_header_16F.h: 429: I2C_Send(data);
  2690  063D  0020               	movlb	0	; select bank0
  2691  063E  0825               	movf	EEP_Write@data,w
  2692  063F  3187  2765  3186   	fcall	_I2C_Send
  2693  0642                     l258:	
  2694                           
  2695                           ;My_header_16F.h: 430: }
  2696                           ;My_header_16F.h: 431: I2C_Stop();
  2697  0642  3187  27AA  3186   	fcall	_I2C_Stop
  2698                           
  2699                           ;My_header_16F.h: 432: _delay((unsigned long)((26)*(32000000/4000000.0)));
  2700  0645  3045               	movlw	69
  2701  0646  0020               	movlb	0	; select bank0
  2702  0647  00A6               	movwf	??_EEP_Write
  2703  0648                     u1517:	
  2704  0648  0BA6               	decfsz	??_EEP_Write,f
  2705  0649  2E48               	goto	u1517
  2706  064A  0008               	return
  2707  064B                     __end_of_EEP_Write:	
  2708                           
  2709                           	psect	text13
  2710  043D                     __ptext13:	
  2711 ;; *************** function _EEP_Read *****************
  2712 ;; Defined at:
  2713 ;;		line 435 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  Reg_h           1    wreg     unsigned char 
  2716 ;;  Reg_l           1    6[BANK0 ] unsigned char 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  Reg_h           1    8[BANK0 ] unsigned char 
  2719 ;;  ans             1   10[BANK0 ] unsigned char 
  2720 ;;  data            1    9[BANK0 ] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      unsigned char 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, pclath, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2730 ;;      Params:         0       1       0       0       0       0
  2731 ;;      Locals:         0       3       0       0       0       0
  2732 ;;      Temps:          0       1       0       0       0       0
  2733 ;;      Totals:         0       5       0       0       0       0
  2734 ;;Total ram usage:        5 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    5
  2737 ;; This function calls:
  2738 ;;		_I2C_Receive
  2739 ;;		_I2C_Send
  2740 ;;		_I2C_Start
  2741 ;;		_I2C_Stop
  2742 ;;		_I2C_rStart
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           
  2749                           ;psect for function _EEP_Read
  2750  043D                     _EEP_Read:	
  2751                           
  2752                           ;incstack = 0
  2753                           ; Regs used in _EEP_Read: [wreg+status,2+status,0+pclath+cstack]
  2754                           ;EEP_Read@Reg_h stored from wreg
  2755  043D  0020               	movlb	0	; select bank0
  2756  043E  00A8               	movwf	EEP_Read@Reg_h
  2757                           
  2758                           ;My_header_16F.h: 436: uint8_t ans;
  2759                           ;My_header_16F.h: 437: uint8_t data;
  2760                           ;My_header_16F.h: 439: ans = I2C_Start(0x50, 0);
  2761  043F  01A2               	clrf	I2C_Start@rw
  2762  0440  3050               	movlw	80
  2763  0441  3186  26ED  3184   	fcall	_I2C_Start
  2764  0444  0020               	movlb	0	; select bank0
  2765  0445  00A7               	movwf	??_EEP_Read
  2766  0446  0827               	movf	??_EEP_Read,w
  2767  0447  00AA               	movwf	EEP_Read@ans
  2768                           
  2769                           ;My_header_16F.h: 440: if (ans == 0) {
  2770  0448  08AA               	movf	EEP_Read@ans,f
  2771  0449  1D03               	skipz
  2772  044A  2C54               	goto	l262
  2773                           
  2774                           ;My_header_16F.h: 441: I2C_Send(Reg_h);
  2775  044B  0828               	movf	EEP_Read@Reg_h,w
  2776  044C  3187  2765  3184   	fcall	_I2C_Send
  2777                           
  2778                           ;My_header_16F.h: 442: I2C_Send(Reg_l);
  2779  044F  0020               	movlb	0	; select bank0
  2780  0450  0826               	movf	EEP_Read@Reg_l,w
  2781  0451  3187  2765  3184   	fcall	_I2C_Send
  2782  0454                     l262:	
  2783                           
  2784                           ;My_header_16F.h: 443: }
  2785                           ;My_header_16F.h: 444: ans = I2C_rStart(0x50, 1);
  2786  0454  3050               	movlw	80
  2787  0455  0020               	movlb	0	; select bank0
  2788  0456  00A2               	movwf	I2C_rStart@adrs
  2789  0457  3000               	movlw	0
  2790  0458  00A3               	movwf	I2C_rStart@adrs+1
  2791  0459  3001               	movlw	1
  2792  045A  00A4               	movwf	I2C_rStart@rw
  2793  045B  3000               	movlw	0
  2794  045C  00A5               	movwf	I2C_rStart@rw+1
  2795  045D  3187  2722  3184   	fcall	_I2C_rStart
  2796  0460  0020               	movlb	0	; select bank0
  2797  0461  00A7               	movwf	??_EEP_Read
  2798  0462  0827               	movf	??_EEP_Read,w
  2799  0463  00AA               	movwf	EEP_Read@ans
  2800                           
  2801                           ;My_header_16F.h: 445: if (ans == 0) {
  2802  0464  08AA               	movf	EEP_Read@ans,f
  2803  0465  1D03               	skipz
  2804  0466  2C6F               	goto	l263
  2805                           
  2806                           ;My_header_16F.h: 446: data = I2C_Receive(1);
  2807  0467  3001               	movlw	1
  2808  0468  3186  26AE  3184   	fcall	_I2C_Receive
  2809  046B  0020               	movlb	0	; select bank0
  2810  046C  00A7               	movwf	??_EEP_Read
  2811  046D  0827               	movf	??_EEP_Read,w
  2812  046E  00A9               	movwf	EEP_Read@data
  2813  046F                     l263:	
  2814                           
  2815                           ;My_header_16F.h: 447: }
  2816                           ;My_header_16F.h: 448: I2C_Stop();
  2817  046F  3187  27AA  3184   	fcall	_I2C_Stop
  2818                           
  2819                           ;My_header_16F.h: 449: _delay((unsigned long)((26)*(32000000/4000000.0)));
  2820  0472  3045               	movlw	69
  2821  0473  0020               	movlb	0	; select bank0
  2822  0474  00A7               	movwf	??_EEP_Read
  2823  0475                     u1527:	
  2824  0475  0BA7               	decfsz	??_EEP_Read,f
  2825  0476  2C75               	goto	u1527
  2826                           
  2827                           ;My_header_16F.h: 450: return data;
  2828  0477  0020               	movlb	0	; select bank0
  2829  0478  0829               	movf	EEP_Read@data,w
  2830  0479  0008               	return
  2831  047A                     __end_of_EEP_Read:	
  2832                           
  2833                           	psect	text14
  2834  0722                     __ptext14:	
  2835 ;; *************** function _I2C_rStart *****************
  2836 ;; Defined at:
  2837 ;;		line 225 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  adrs            2    2[BANK0 ] int 
  2840 ;;  rw              2    4[BANK0 ] int 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      unsigned char 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, pclath, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2852 ;;      Params:         0       4       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0       0
  2854 ;;      Temps:          0       0       0       0       0       0
  2855 ;;      Totals:         0       4       0       0       0       0
  2856 ;;Total ram usage:        4 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    4
  2859 ;; This function calls:
  2860 ;;		_I2C_IdleCheck
  2861 ;; This function is called by:
  2862 ;;		_EEP_Read
  2863 ;;		_RTC_Read
  2864 ;;		_TM_Read
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function _I2C_rStart
  2870  0722                     _I2C_rStart:	
  2871                           
  2872                           ;My_header_16F.h: 227: I2C_IdleCheck(0x5);
  2873                           
  2874                           ;incstack = 0
  2875                           ; Regs used in _I2C_rStart: [wreg+status,2+status,0+pclath+cstack]
  2876  0722  3005               	movlw	5
  2877  0723  3187  2785  3187   	fcall	_I2C_IdleCheck
  2878                           
  2879                           ;My_header_16F.h: 228: SSP1CON2bits.RSEN = 1;
  2880  0726  0024               	movlb	4	; select bank4
  2881  0727  1496               	bsf	22,1	;volatile
  2882                           
  2883                           ;My_header_16F.h: 230: I2C_IdleCheck(0x5);
  2884  0728  3005               	movlw	5
  2885  0729  3187  2785  3187   	fcall	_I2C_IdleCheck
  2886                           
  2887                           ;My_header_16F.h: 231: SSP1IF = 0;
  2888  072C  0020               	movlb	0	; select bank0
  2889  072D  1191               	bcf	17,3	;volatile
  2890                           
  2891                           ;My_header_16F.h: 232: SSP1BUF = (char) ((adrs << 1) + rw);
  2892  072E  3522               	lslf	I2C_rStart@adrs,w
  2893  072F  0724               	addwf	I2C_rStart@rw,w
  2894  0730  0024               	movlb	4	; select bank4
  2895  0731  0091               	movwf	17	;volatile
  2896  0732                     l190:	
  2897                           ;My_header_16F.h: 233: while (!SSP1IF);
  2898                           
  2899  0732  0020               	movlb	0	; select bank0
  2900  0733  1D91               	btfss	17,3	;volatile
  2901  0734  2F32               	goto	l190
  2902                           
  2903                           ;My_header_16F.h: 234: return SSP1CON2bits.ACKSTAT;
  2904  0735  0024               	movlb	4	; select bank4
  2905  0736  0E16               	swapf	22,w	;volatile
  2906  0737  0C89               	rrf	9,f
  2907  0738  0C89               	rrf	9,f
  2908  0739  3901               	andlw	1
  2909  073A  0008               	return
  2910  073B                     __end_of_I2C_rStart:	
  2911                           
  2912                           	psect	text15
  2913  07AA                     __ptext15:	
  2914 ;; *************** function _I2C_Stop *****************
  2915 ;; Defined at:
  2916 ;;		line 237 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;		None               void
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0, pclath, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2930 ;;      Params:         0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    4
  2937 ;; This function calls:
  2938 ;;		_I2C_IdleCheck
  2939 ;; This function is called by:
  2940 ;;		_LCD_Command
  2941 ;;		_TM_init
  2942 ;;		_EEP_Write
  2943 ;;		_EEP_Read
  2944 ;;		_LCD_Putc
  2945 ;;		_LCD_Puts
  2946 ;;		_LCD_CreateChar
  2947 ;;		_RTC_Write
  2948 ;;		_RTC_Read
  2949 ;;		_TM_Read
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function _I2C_Stop
  2955  07AA                     _I2C_Stop:	
  2956                           
  2957                           ;My_header_16F.h: 239: I2C_IdleCheck(0x5);
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  2961  07AA  3005               	movlw	5
  2962  07AB  3187  2785         	fcall	_I2C_IdleCheck
  2963                           
  2964                           ;My_header_16F.h: 240: SSP1CON2bits.PEN = 1;
  2965  07AD  0024               	movlb	4	; select bank4
  2966  07AE  1516               	bsf	22,2	;volatile
  2967  07AF  0008               	return
  2968  07B0                     __end_of_I2C_Stop:	
  2969                           
  2970                           	psect	text16
  2971  06ED                     __ptext16:	
  2972 ;; *************** function _I2C_Start *****************
  2973 ;; Defined at:
  2974 ;;		line 213 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  adrs            1    wreg     unsigned char 
  2977 ;;  rw              1    2[BANK0 ] unsigned char 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  adrs            1    3[BANK0 ] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      unsigned char 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0, pclath, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2989 ;;      Params:         0       1       0       0       0       0
  2990 ;;      Locals:         0       1       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0
  2992 ;;      Totals:         0       2       0       0       0       0
  2993 ;;Total ram usage:        2 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    4
  2996 ;; This function calls:
  2997 ;;		_I2C_IdleCheck
  2998 ;; This function is called by:
  2999 ;;		_LCD_Command
  3000 ;;		_TM_init
  3001 ;;		_EEP_Write
  3002 ;;		_EEP_Read
  3003 ;;		_LCD_Putc
  3004 ;;		_LCD_Puts
  3005 ;;		_LCD_CreateChar
  3006 ;;		_RTC_Write
  3007 ;;		_RTC_Read
  3008 ;;		_TM_Read
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function _I2C_Start
  3014  06ED                     _I2C_Start:	
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3018                           ;I2C_Start@adrs stored from wreg
  3019  06ED  0020               	movlb	0	; select bank0
  3020  06EE  00A3               	movwf	I2C_Start@adrs
  3021                           
  3022                           ;My_header_16F.h: 215: I2C_IdleCheck(0x5);
  3023  06EF  3005               	movlw	5
  3024  06F0  3187  2785  3186   	fcall	_I2C_IdleCheck
  3025                           
  3026                           ;My_header_16F.h: 216: SSP1CON2bits.SEN = 1;
  3027  06F3  0024               	movlb	4	; select bank4
  3028  06F4  1416               	bsf	22,0	;volatile
  3029                           
  3030                           ;My_header_16F.h: 218: I2C_IdleCheck(0x5);
  3031  06F5  3005               	movlw	5
  3032  06F6  3187  2785  3186   	fcall	_I2C_IdleCheck
  3033                           
  3034                           ;My_header_16F.h: 219: SSP1IF = 0;
  3035  06F9  0020               	movlb	0	; select bank0
  3036  06FA  1191               	bcf	17,3	;volatile
  3037                           
  3038                           ;My_header_16F.h: 220: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  3039  06FB  3523               	lslf	I2C_Start@adrs,w
  3040  06FC  0722               	addwf	I2C_Start@rw,w
  3041  06FD  0024               	movlb	4	; select bank4
  3042  06FE  0091               	movwf	17	;volatile
  3043  06FF                     l184:	
  3044                           ;My_header_16F.h: 221: while (!SSP1IF);
  3045                           
  3046  06FF  0020               	movlb	0	; select bank0
  3047  0700  1D91               	btfss	17,3	;volatile
  3048  0701  2EFF               	goto	l184
  3049                           
  3050                           ;My_header_16F.h: 222: return SSP1CON2bits.ACKSTAT;
  3051  0702  0024               	movlb	4	; select bank4
  3052  0703  0E16               	swapf	22,w	;volatile
  3053  0704  0C89               	rrf	9,f
  3054  0705  0C89               	rrf	9,f
  3055  0706  3901               	andlw	1
  3056  0707  0008               	return
  3057  0708                     __end_of_I2C_Start:	
  3058                           
  3059                           	psect	text17
  3060  0765                     __ptext17:	
  3061 ;; *************** function _I2C_Send *****************
  3062 ;; Defined at:
  3063 ;;		line 243 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  data            1    wreg     unsigned char 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  data            1    2[BANK0 ] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      unsigned char 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, pclath, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3077 ;;      Params:         0       0       0       0       0       0
  3078 ;;      Locals:         0       1       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0
  3080 ;;      Totals:         0       1       0       0       0       0
  3081 ;;Total ram usage:        1 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    4
  3084 ;; This function calls:
  3085 ;;		_I2C_IdleCheck
  3086 ;; This function is called by:
  3087 ;;		_LCD_Command
  3088 ;;		_TM_init
  3089 ;;		_EEP_Write
  3090 ;;		_EEP_Read
  3091 ;;		_LCD_Putc
  3092 ;;		_LCD_Puts
  3093 ;;		_LCD_CreateChar
  3094 ;;		_RTC_Write
  3095 ;;		_RTC_Read
  3096 ;;		_TM_Read
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _I2C_Send
  3102  0765                     _I2C_Send:	
  3103                           
  3104                           ;incstack = 0
  3105                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  3106                           ;I2C_Send@data stored from wreg
  3107  0765  0020               	movlb	0	; select bank0
  3108  0766  00A2               	movwf	I2C_Send@data
  3109                           
  3110                           ;My_header_16F.h: 244: I2C_IdleCheck(0x5);
  3111  0767  3005               	movlw	5
  3112  0768  3187  2785  3187   	fcall	_I2C_IdleCheck
  3113                           
  3114                           ;My_header_16F.h: 245: SSP1IF = 0;
  3115  076B  0020               	movlb	0	; select bank0
  3116  076C  1191               	bcf	17,3	;volatile
  3117                           
  3118                           ;My_header_16F.h: 246: SSP1BUF = data;
  3119  076D  0822               	movf	I2C_Send@data,w
  3120  076E  0024               	movlb	4	; select bank4
  3121  076F  0091               	movwf	17	;volatile
  3122  0770                     l199:	
  3123                           ;My_header_16F.h: 247: while (!SSP1IF);
  3124                           
  3125  0770  0020               	movlb	0	; select bank0
  3126  0771  1D91               	btfss	17,3	;volatile
  3127  0772  2F70               	goto	l199
  3128                           
  3129                           ;My_header_16F.h: 248: return SSP1CON2bits.ACKSTAT;
  3130                           ;	Return value of _I2C_Send is never used
  3131  0773  0024               	movlb	4	; select bank4
  3132  0774  0816               	movf	22,w	;volatile
  3133  0775  0008               	return
  3134  0776                     __end_of_I2C_Send:	
  3135                           
  3136                           	psect	text18
  3137  06AE                     __ptext18:	
  3138 ;; *************** function _I2C_Receive *****************
  3139 ;; Defined at:
  3140 ;;		line 251 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  ack             1    wreg     unsigned char 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  ack             1    3[BANK0 ] unsigned char 
  3145 ;;  data            1    4[BANK0 ] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      unsigned char 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0, pclath, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3155 ;;      Params:         0       0       0       0       0       0
  3156 ;;      Locals:         0       2       0       0       0       0
  3157 ;;      Temps:          0       1       0       0       0       0
  3158 ;;      Totals:         0       3       0       0       0       0
  3159 ;;Total ram usage:        3 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    4
  3162 ;; This function calls:
  3163 ;;		_I2C_IdleCheck
  3164 ;; This function is called by:
  3165 ;;		_EEP_Read
  3166 ;;		_RTC_Read
  3167 ;;		_TM_Read
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _I2C_Receive
  3173  06AE                     _I2C_Receive:	
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  3177                           ;I2C_Receive@ack stored from wreg
  3178  06AE  0020               	movlb	0	; select bank0
  3179  06AF  00A3               	movwf	I2C_Receive@ack
  3180                           
  3181                           ;My_header_16F.h: 252: uint8_t data;
  3182                           ;My_header_16F.h: 254: I2C_IdleCheck(0x5);
  3183  06B0  3005               	movlw	5
  3184  06B1  3187  2785  3186   	fcall	_I2C_IdleCheck
  3185                           
  3186                           ;My_header_16F.h: 255: SSP1CON2bits.RCEN = 1;
  3187  06B4  0024               	movlb	4	; select bank4
  3188  06B5  1596               	bsf	22,3	;volatile
  3189                           
  3190                           ;My_header_16F.h: 256: I2C_IdleCheck(0x4);
  3191  06B6  3004               	movlw	4
  3192  06B7  3187  2785  3186   	fcall	_I2C_IdleCheck
  3193                           
  3194                           ;My_header_16F.h: 257: data = SSP1BUF;
  3195  06BA  0024               	movlb	4	; select bank4
  3196  06BB  0811               	movf	17,w	;volatile
  3197  06BC  0020               	movlb	0	; select bank0
  3198  06BD  00A2               	movwf	??_I2C_Receive
  3199  06BE  0822               	movf	??_I2C_Receive,w
  3200  06BF  00A4               	movwf	I2C_Receive@data
  3201                           
  3202                           ;My_header_16F.h: 258: I2C_IdleCheck(0x5);
  3203  06C0  3005               	movlw	5
  3204  06C1  3187  2785         	fcall	_I2C_IdleCheck
  3205                           
  3206                           ;My_header_16F.h: 259: SSP1CON2bits.ACKDT = ack;
  3207  06C3  0020               	movlb	0	; select bank0
  3208  06C4  0823               	movf	I2C_Receive@ack,w
  3209  06C5  0024               	movlb	4	; select bank4
  3210  06C6  1D03               	skipz
  3211  06C7  1696               	bsf	22,5	;volatile
  3212  06C8  1903               	skipnz
  3213  06C9  1296               	bcf	22,5	;volatile
  3214                           
  3215                           ;My_header_16F.h: 260: SSP1CON2bits.ACKEN = 1;
  3216  06CA  1616               	bsf	22,4	;volatile
  3217                           
  3218                           ;My_header_16F.h: 261: return data;
  3219  06CB  0020               	movlb	0	; select bank0
  3220  06CC  0824               	movf	I2C_Receive@data,w
  3221  06CD  0008               	return
  3222  06CE                     __end_of_I2C_Receive:	
  3223                           
  3224                           	psect	text19
  3225  0785                     __ptext19:	
  3226 ;; *************** function _I2C_IdleCheck *****************
  3227 ;; Defined at:
  3228 ;;		line 199 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  mask            1    wreg     unsigned char 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  mask            1    1[BANK0 ] unsigned char 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;		None               void
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3242 ;;      Params:         0       0       0       0       0       0
  3243 ;;      Locals:         0       1       0       0       0       0
  3244 ;;      Temps:          0       1       0       0       0       0
  3245 ;;      Totals:         0       2       0       0       0       0
  3246 ;;Total ram usage:        2 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    3
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_I2C_Start
  3253 ;;		_I2C_rStart
  3254 ;;		_I2C_Stop
  3255 ;;		_I2C_Send
  3256 ;;		_I2C_Receive
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _I2C_IdleCheck
  3262  0785                     _I2C_IdleCheck:	
  3263                           
  3264                           ;incstack = 0
  3265                           ; Regs used in _I2C_IdleCheck: [wreg+status,2+status,0]
  3266                           ;I2C_IdleCheck@mask stored from wreg
  3267  0785  0020               	movlb	0	; select bank0
  3268  0786  00A1               	movwf	I2C_IdleCheck@mask
  3269  0787                     l1372:	
  3270                           ;My_header_16F.h: 200: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  3271                           
  3272  0787  0821               	movf	I2C_IdleCheck@mask,w
  3273  0788  0024               	movlb	4	; select bank4
  3274  0789  0514               	andwf	20,w	;volatile
  3275  078A  0020               	movlb	0	; select bank0
  3276  078B  00A0               	movwf	??_I2C_IdleCheck
  3277  078C  0024               	movlb	4	; select bank4
  3278  078D  0816               	movf	22,w	;volatile
  3279  078E  391F               	andlw	31
  3280  078F  0020               	movlb	0	; select bank0
  3281  0790  0420               	iorwf	??_I2C_IdleCheck,w
  3282  0791  1903               	btfsc	3,2
  3283  0792  0008               	return
  3284  0793  2F87               	goto	l1372
  3285  0794                     __end_of_I2C_IdleCheck:	
  3286                           
  3287                           	psect	text20
  3288  0708                     __ptext20:	
  3289 ;; *************** function _Delay_ms *****************
  3290 ;; Defined at:
  3291 ;;		line 187 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  ms              2    0[BANK0 ] unsigned int 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  i               2    4[BANK0 ] unsigned int 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		wreg, status,2
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3305 ;;      Params:         0       2       0       0       0       0
  3306 ;;      Locals:         0       2       0       0       0       0
  3307 ;;      Temps:          0       2       0       0       0       0
  3308 ;;      Totals:         0       6       0       0       0       0
  3309 ;;Total ram usage:        6 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    3
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           
  3320                           ;psect for function _Delay_ms
  3321  0708                     _Delay_ms:	
  3322                           
  3323                           ;My_header_16F.h: 188: uint16_t i;
  3324                           ;My_header_16F.h: 189: for (i = 0; i < ms; i++) {
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in _Delay_ms: [wreg+status,2]
  3328  0708  0020               	movlb	0	; select bank0
  3329  0709  01A4               	clrf	Delay_ms@i
  3330  070A  01A5               	clrf	Delay_ms@i+1
  3331  070B                     l169:	
  3332  070B  0821               	movf	Delay_ms@ms+1,w
  3333  070C  0225               	subwf	Delay_ms@i+1,w
  3334  070D  1D03               	skipz
  3335  070E  2F11               	goto	u1025
  3336  070F  0820               	movf	Delay_ms@ms,w
  3337  0710  0224               	subwf	Delay_ms@i,w
  3338  0711                     u1025:	
  3339  0711  1803               	btfsc	3,0
  3340  0712  0008               	return
  3341                           
  3342                           ;My_header_16F.h: 190: _delay((unsigned long)((1)*(32000000/4000.0)));
  3343  0713  300B               	movlw	11
  3344  0714  00A3               	movwf	??_Delay_ms+1
  3345  0715  3062               	movlw	98
  3346  0716  00A2               	movwf	??_Delay_ms
  3347  0717                     u1537:	
  3348  0717  0BA2               	decfsz	??_Delay_ms,f
  3349  0718  2F17               	goto	u1537
  3350  0719  0BA3               	decfsz	??_Delay_ms+1,f
  3351  071A  2F17               	goto	u1537
  3352  071B  0000               	nop
  3353  071C  3001               	movlw	1
  3354  071D  0020               	movlb	0	; select bank0
  3355  071E  07A4               	addwf	Delay_ms@i,f
  3356  071F  3000               	movlw	0
  3357  0720  3DA5               	addwfc	Delay_ms@i+1,f
  3358  0721  2F0B               	goto	l169
  3359  0722                     __end_of_Delay_ms:	
  3360                           
  3361                           	psect	intentry
  3362  0004                     __pintentry:	
  3363 ;; *************** function _isr *****************
  3364 ;; Defined at:
  3365 ;;		line 33 in file "PIC16F1827-I2C05.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;		None               void
  3372 ;; Registers used:
  3373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3379 ;;      Params:         0       0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0       0
  3381 ;;      Temps:          2       0       0       0       0       0
  3382 ;;      Totals:         2       0       0       0       0       0
  3383 ;;Total ram usage:        2 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    2
  3386 ;; This function calls:
  3387 ;;		_button_timer_interrupt
  3388 ;;		_interrupt_TXIF
  3389 ;;		_tx_send
  3390 ;; This function is called by:
  3391 ;;		Interrupt level 1
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395  0004                     _isr:	
  3396                           
  3397                           ;incstack = 0
  3398                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3399  0004  147E               	bsf	126,0	;set compiler interrupt flag
  3400  0005  3180               	pagesel	$
  3401  0006  0020               	movlb	0	; select bank0
  3402  0007  087F               	movf	127,w
  3403  0008  00F7               	movwf	??_isr+1
  3404                           
  3405                           ;PIC16F1827-I2C05.c: 34: interrupt_TXIF();
  3406  0009  3187  273B  3180   	fcall	_interrupt_TXIF
  3407                           
  3408                           ;PIC16F1827-I2C05.c: 35: if (RCIF) {
  3409  000C  0020               	movlb	0	; select bank0
  3410  000D  1E91               	btfss	17,5	;volatile
  3411  000E  2819               	goto	i1l1798
  3412                           
  3413                           ;PIC16F1827-I2C05.c: 36: RCIF = 0;
  3414  000F  1291               	bcf	17,5	;volatile
  3415                           
  3416                           ;PIC16F1827-I2C05.c: 37: ascii = RCREG;
  3417  0010  0023               	movlb	3	; select bank3
  3418  0011  0819               	movf	25,w	;volatile
  3419  0012  00F6               	movwf	??_isr
  3420  0013  0876               	movf	??_isr,w
  3421  0014  00F8               	movwf	_ascii
  3422                           
  3423                           ;PIC16F1827-I2C05.c: 38: tx_send(ascii);
  3424  0015  0878               	movf	_ascii,w
  3425  0016  3187  279F  3180   	fcall	_tx_send
  3426  0019                     i1l1798:	
  3427                           
  3428                           ;PIC16F1827-I2C05.c: 39: }
  3429                           ;PIC16F1827-I2C05.c: 40: if (TMR1IF == 1) {
  3430  0019  0020               	movlb	0	; select bank0
  3431  001A  1C11               	btfss	17,0	;volatile
  3432  001B  283F               	goto	i1l278
  3433                           
  3434                           ;PIC16F1827-I2C05.c: 41: TMR1IF = 0;
  3435  001C  1011               	bcf	17,0	;volatile
  3436                           
  3437                           ;PIC16F1827-I2C05.c: 42: cnt_t1++;
  3438  001D  3001               	movlw	1
  3439  001E  00F6               	movwf	??_isr
  3440  001F  0876               	movf	??_isr,w
  3441  0020  07F9               	addwf	_cnt_t1,f
  3442                           
  3443                           ;PIC16F1827-I2C05.c: 43: if (cnt_t1 % 16 == 0)LATB0 = ~LATB0;
  3444  0021  0879               	movf	_cnt_t1,w
  3445  0022  390F               	andlw	15
  3446  0023  1D03               	btfss	3,2
  3447  0024  2828               	goto	i1l1808
  3448  0025  3001               	movlw	1
  3449  0026  0022               	movlb	2	; select bank2
  3450  0027  068D               	xorwf	13,f
  3451  0028                     i1l1808:	
  3452                           
  3453                           ;PIC16F1827-I2C05.c: 44: button_timer_interrupt(&sw_RA0, !RA0);
  3454  0028  1003               	clrc
  3455  0029  0020               	movlb	0	; select bank0
  3456  002A  1C0C               	btfss	12,0	;volatile
  3457  002B  1403               	setc
  3458  002C  3000               	movlw	0
  3459  002D  1803               	btfsc	3,0
  3460  002E  3001               	movlw	1
  3461  002F  00F0               	movwf	button_timer_interrupt@sw_value
  3462  0030  3039               	movlw	_sw_RA0& (0+255)
  3463  0031  3182  227A  3180   	fcall	_button_timer_interrupt
  3464                           
  3465                           ;PIC16F1827-I2C05.c: 45: button_timer_interrupt(&sw_RA1, !RA1);
  3466  0034  1003               	clrc
  3467  0035  0020               	movlb	0	; select bank0
  3468  0036  1C8C               	btfss	12,1	;volatile
  3469  0037  1403               	setc
  3470  0038  3000               	movlw	0
  3471  0039  1803               	btfsc	3,0
  3472  003A  3001               	movlw	1
  3473  003B  00F0               	movwf	button_timer_interrupt@sw_value
  3474  003C  303C               	movlw	_sw_RA1& (0+255)
  3475  003D  3182  227A         	fcall	_button_timer_interrupt
  3476  003F                     i1l278:	
  3477  003F  0877               	movf	??_isr+1,w
  3478  0040  0020               	movlb	0	; select bank0
  3479  0041  00FF               	movwf	127
  3480  0042  107E               	bcf	126,0	;clear compiler interrupt flag
  3481  0043  0009               	retfie
  3482  0044                     __end_of_isr:	
  3483                           
  3484                           	psect	text22
  3485  079F                     __ptext22:	
  3486 ;; *************** function _tx_send *****************
  3487 ;; Defined at:
  3488 ;;		line 161 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  asciicode       1    wreg     unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  asciicode       1    5[COMMON] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;		None               void
  3495 ;; Registers used:
  3496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3502 ;;      Params:         0       0       0       0       0       0
  3503 ;;      Locals:         1       0       0       0       0       0
  3504 ;;      Temps:          1       0       0       0       0       0
  3505 ;;      Totals:         2       0       0       0       0       0
  3506 ;;Total ram usage:        2 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    1
  3509 ;; This function calls:
  3510 ;;		i1_ringbuf_push
  3511 ;; This function is called by:
  3512 ;;		_isr
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           
  3517                           ;psect for function _tx_send
  3518  079F                     _tx_send:	
  3519                           
  3520                           ;incstack = 0
  3521                           ; Regs used in _tx_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3522                           ;tx_send@asciicode stored from wreg
  3523  079F  00F5               	movwf	tx_send@asciicode
  3524                           
  3525                           ;My_header_16F.h: 162: ringbuf_push(&tx_buf, asciicode);
  3526  07A0  0875               	movf	tx_send@asciicode,w
  3527  07A1  00F4               	movwf	??_tx_send
  3528  07A2  0874               	movf	??_tx_send,w
  3529  07A3  00F0               	movwf	i1ringbuf_push@asciicode
  3530  07A4  3035               	movlw	_tx_buf& (0+255)
  3531  07A5  3185  2547         	fcall	i1_ringbuf_push
  3532                           
  3533                           ;My_header_16F.h: 163: PIE1bits.TXIE = 1;
  3534  07A7  0021               	movlb	1	; select bank1
  3535  07A8  1611               	bsf	17,4	;volatile
  3536  07A9  0008               	return
  3537  07AA                     __end_of_tx_send:	
  3538                           
  3539                           	psect	text23
  3540  0547                     __ptext23:	
  3541 ;; *************** function i1_ringbuf_push *****************
  3542 ;; Defined at:
  3543 ;;		line 120 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  rb              1    wreg     PTR struct ringbuf
  3546 ;;		 -> tx_buf(4), 
  3547 ;;  asciicode       1    0[COMMON] unsigned char 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  rb              1    3[COMMON] PTR struct ringbuf
  3550 ;;		 -> tx_buf(4), 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;		None               void
  3553 ;; Registers used:
  3554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3560 ;;      Params:         1       0       0       0       0       0
  3561 ;;      Locals:         1       0       0       0       0       0
  3562 ;;      Temps:          2       0       0       0       0       0
  3563 ;;      Totals:         4       0       0       0       0       0
  3564 ;;Total ram usage:        4 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_tx_send
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           
  3574                           ;psect for function i1_ringbuf_push
  3575  0547                     i1_ringbuf_push:	
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in i1_ringbuf_push: [wreg-fsr1h+status,2+status,0]
  3579                           ;i1ringbuf_push@rb stored from wreg
  3580  0547  00F3               	movwf	i1ringbuf_push@rb
  3581                           
  3582                           ;My_header_16F.h: 121: rb->buf[rb->head] = asciicode;
  3583  0548  0870               	movf	i1ringbuf_push@asciicode,w
  3584  0549  00F1               	movwf	??i1_ringbuf_push
  3585  054A  0873               	movf	i1ringbuf_push@rb,w
  3586  054B  0086               	movwf	6
  3587  054C  3001               	movlw	1	; select bank2/3
  3588  054D  0087               	movwf	7
  3589  054E  0873               	movf	i1ringbuf_push@rb,w
  3590  054F  3E02               	addlw	2
  3591  0550  0084               	movwf	4
  3592  0551  3001               	movlw	1	; select bank2/3
  3593  0552  0085               	movwf	5
  3594  0553  0800               	movf	0,w
  3595  0554  0701               	addwf	1,w
  3596  0555  00F2               	movwf	??i1_ringbuf_push+1
  3597  0556  0872               	movf	??i1_ringbuf_push+1,w
  3598  0557  0086               	movwf	6
  3599  0558  0187               	clrf	7
  3600  0559  0871               	movf	??i1_ringbuf_push,w
  3601  055A  0081               	movwf	1
  3602                           
  3603                           ;My_header_16F.h: 122: rb->head++;
  3604  055B  3001               	movlw	1
  3605  055C  00F1               	movwf	??i1_ringbuf_push
  3606  055D  0873               	movf	i1ringbuf_push@rb,w
  3607  055E  3E02               	addlw	2
  3608  055F  0086               	movwf	6
  3609  0560  3001               	movlw	1	; select bank2/3
  3610  0561  0087               	movwf	7
  3611  0562  0871               	movf	??i1_ringbuf_push,w
  3612  0563  0781               	addwf	1,f
  3613                           
  3614                           ;My_header_16F.h: 123: if (rb->head >= rb->size) {
  3615  0564  0873               	movf	i1ringbuf_push@rb,w
  3616  0565  3E02               	addlw	2
  3617  0566  0086               	movwf	6
  3618  0567  3001               	movlw	1	; select bank2/3
  3619  0568  0087               	movwf	7
  3620  0569  0A73               	incf	i1ringbuf_push@rb,w
  3621  056A  0084               	movwf	4
  3622  056B  3001               	movlw	1	; select bank2/3
  3623  056C  0085               	movwf	5
  3624  056D  0800               	movf	0,w
  3625  056E  0201               	subwf	1,w
  3626  056F  1C03               	skipc
  3627  0570  0008               	return
  3628                           
  3629                           ;My_header_16F.h: 124: rb->head = 0;
  3630  0571  0873               	movf	i1ringbuf_push@rb,w
  3631  0572  3E02               	addlw	2
  3632  0573  0086               	movwf	6
  3633  0574  3001               	movlw	1	; select bank2/3
  3634  0575  0087               	movwf	7
  3635  0576  0181               	clrf	1
  3636  0577  0008               	return
  3637  0578                     __end_ofi1_ringbuf_push:	
  3638                           
  3639                           	psect	text24
  3640  073B                     __ptext24:	
  3641 ;; *************** function _interrupt_TXIF *****************
  3642 ;; Defined at:
  3643 ;;		line 174 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;		None               void
  3650 ;; Registers used:
  3651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3657 ;;      Params:         0       0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    1
  3664 ;; This function calls:
  3665 ;;		_ringbuf_num
  3666 ;;		_ringbuf_pop
  3667 ;; This function is called by:
  3668 ;;		_isr
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function _interrupt_TXIF
  3674  073B                     _interrupt_TXIF:	
  3675                           
  3676                           ;My_header_16F.h: 175: if (TXIE && TXIF) {
  3677                           
  3678                           ;incstack = 0
  3679                           ; Regs used in _interrupt_TXIF: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3680  073B  0021               	movlb	1	; select bank1
  3681  073C  1E11               	btfss	17,4	;volatile
  3682  073D  0008               	return
  3683  073E  0020               	movlb	0	; select bank0
  3684  073F  1E11               	btfss	17,4	;volatile
  3685  0740  0008               	return
  3686                           
  3687                           ;My_header_16F.h: 176: TXIF = 0;
  3688  0741  1211               	bcf	17,4	;volatile
  3689                           
  3690                           ;My_header_16F.h: 177: if (ringbuf_num(&tx_buf) > 0) {
  3691  0742  3035               	movlw	_tx_buf& (0+255)
  3692  0743  3185  2515  3187   	fcall	_ringbuf_num
  3693  0746  3A00               	xorlw	0
  3694  0747  1903               	skipnz
  3695  0748  2F4F               	goto	i1l164
  3696                           
  3697                           ;My_header_16F.h: 178: TXREG = ringbuf_pop(&tx_buf);
  3698  0749  3035               	movlw	_tx_buf& (0+255)
  3699  074A  3184  24E3         	fcall	_ringbuf_pop
  3700  074C  0023               	movlb	3	; select bank3
  3701  074D  009A               	movwf	26	;volatile
  3702                           
  3703                           ;My_header_16F.h: 179: } else {
  3704  074E  0008               	return
  3705  074F                     i1l164:	
  3706                           
  3707                           ;My_header_16F.h: 180: PIE1bits.TXIE = 0;
  3708  074F  0021               	movlb	1	; select bank1
  3709  0750  1211               	bcf	17,4	;volatile
  3710  0751  0008               	return
  3711  0752                     __end_of_interrupt_TXIF:	
  3712                           
  3713                           	psect	text25
  3714  04E3                     __ptext25:	
  3715 ;; *************** function _ringbuf_pop *****************
  3716 ;; Defined at:
  3717 ;;		line 128 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  rb              1    wreg     PTR struct ringbuf
  3720 ;;		 -> tx_buf(4), 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  rb              1    3[COMMON] PTR struct ringbuf
  3723 ;;		 -> tx_buf(4), 
  3724 ;;  ret             1    2[COMMON] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      unsigned char 
  3727 ;; Registers used:
  3728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3734 ;;      Params:         0       0       0       0       0       0
  3735 ;;      Locals:         2       0       0       0       0       0
  3736 ;;      Temps:          2       0       0       0       0       0
  3737 ;;      Totals:         4       0       0       0       0       0
  3738 ;;Total ram usage:        4 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_interrupt_TXIF
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           
  3748                           ;psect for function _ringbuf_pop
  3749  04E3                     _ringbuf_pop:	
  3750                           
  3751                           ;incstack = 0
  3752                           ; Regs used in _ringbuf_pop: [wreg-fsr1h+status,2+status,0]
  3753                           ;ringbuf_pop@rb stored from wreg
  3754  04E3  00F3               	movwf	ringbuf_pop@rb
  3755                           
  3756                           ;My_header_16F.h: 129: uint8_t ret = rb->buf[rb->tail];
  3757  04E4  0873               	movf	ringbuf_pop@rb,w
  3758  04E5  0086               	movwf	6
  3759  04E6  3001               	movlw	1	; select bank2/3
  3760  04E7  0087               	movwf	7
  3761  04E8  0873               	movf	ringbuf_pop@rb,w
  3762  04E9  3E03               	addlw	3
  3763  04EA  0084               	movwf	4
  3764  04EB  3001               	movlw	1	; select bank2/3
  3765  04EC  0085               	movwf	5
  3766  04ED  0800               	movf	0,w
  3767  04EE  0701               	addwf	1,w
  3768  04EF  00F0               	movwf	??_ringbuf_pop
  3769  04F0  0870               	movf	??_ringbuf_pop,w
  3770  04F1  0086               	movwf	6
  3771  04F2  0187               	clrf	7
  3772  04F3  0801               	movf	1,w
  3773  04F4  00F1               	movwf	??_ringbuf_pop+1
  3774  04F5  0871               	movf	??_ringbuf_pop+1,w
  3775  04F6  00F2               	movwf	ringbuf_pop@ret
  3776                           
  3777                           ;My_header_16F.h: 130: rb->tail++;
  3778  04F7  3001               	movlw	1
  3779  04F8  00F0               	movwf	??_ringbuf_pop
  3780  04F9  0873               	movf	ringbuf_pop@rb,w
  3781  04FA  3E03               	addlw	3
  3782  04FB  0086               	movwf	6
  3783  04FC  3001               	movlw	1	; select bank2/3
  3784  04FD  0087               	movwf	7
  3785  04FE  0870               	movf	??_ringbuf_pop,w
  3786  04FF  0781               	addwf	1,f
  3787                           
  3788                           ;My_header_16F.h: 131: if (rb->tail >= rb->size) {
  3789  0500  0873               	movf	ringbuf_pop@rb,w
  3790  0501  3E03               	addlw	3
  3791  0502  0086               	movwf	6
  3792  0503  3001               	movlw	1	; select bank2/3
  3793  0504  0087               	movwf	7
  3794  0505  0A73               	incf	ringbuf_pop@rb,w
  3795  0506  0084               	movwf	4
  3796  0507  3001               	movlw	1	; select bank2/3
  3797  0508  0085               	movwf	5
  3798  0509  0800               	movf	0,w
  3799  050A  0201               	subwf	1,w
  3800  050B  1C03               	skipc
  3801  050C  2D13               	goto	i1l1424
  3802                           
  3803                           ;My_header_16F.h: 132: rb->tail = 0;
  3804  050D  0873               	movf	ringbuf_pop@rb,w
  3805  050E  3E03               	addlw	3
  3806  050F  0086               	movwf	6
  3807  0510  3001               	movlw	1	; select bank2/3
  3808  0511  0087               	movwf	7
  3809  0512  0181               	clrf	1
  3810  0513                     i1l1424:	
  3811                           
  3812                           ;My_header_16F.h: 133: }
  3813                           ;My_header_16F.h: 134: return ret;
  3814  0513  0872               	movf	ringbuf_pop@ret,w
  3815  0514  0008               	return
  3816  0515                     __end_of_ringbuf_pop:	
  3817                           
  3818                           	psect	text26
  3819  0515                     __ptext26:	
  3820 ;; *************** function _ringbuf_num *****************
  3821 ;; Defined at:
  3822 ;;		line 137 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  rb              1    wreg     PTR struct ringbuf
  3825 ;;		 -> tx_buf(4), 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  rb              1    1[COMMON] PTR struct ringbuf
  3828 ;;		 -> tx_buf(4), 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      unsigned char 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3838 ;;      Params:         0       0       0       0       0       0
  3839 ;;      Locals:         1       0       0       0       0       0
  3840 ;;      Temps:          1       0       0       0       0       0
  3841 ;;      Totals:         2       0       0       0       0       0
  3842 ;;Total ram usage:        2 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_interrupt_TXIF
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           
  3852                           ;psect for function _ringbuf_num
  3853  0515                     _ringbuf_num:	
  3854                           
  3855                           ;incstack = 0
  3856                           ; Regs used in _ringbuf_num: [wreg-fsr1h+status,2+status,0]
  3857                           ;ringbuf_num@rb stored from wreg
  3858  0515  00F1               	movwf	ringbuf_num@rb
  3859                           
  3860                           ;My_header_16F.h: 138: if (rb->head >= rb->tail) {
  3861  0516  0871               	movf	ringbuf_num@rb,w
  3862  0517  3E02               	addlw	2
  3863  0518  0086               	movwf	6
  3864  0519  3001               	movlw	1	; select bank2/3
  3865  051A  0087               	movwf	7
  3866  051B  0871               	movf	ringbuf_num@rb,w
  3867  051C  3E03               	addlw	3
  3868  051D  0084               	movwf	4
  3869  051E  3001               	movlw	1	; select bank2/3
  3870  051F  0085               	movwf	5
  3871  0520  0800               	movf	0,w
  3872  0521  0201               	subwf	1,w
  3873  0522  1C03               	skipc
  3874  0523  2D32               	goto	i1l1436
  3875                           
  3876                           ;My_header_16F.h: 139: return (rb->head - rb->tail);
  3877  0524  0871               	movf	ringbuf_num@rb,w
  3878  0525  3E02               	addlw	2
  3879  0526  0086               	movwf	6
  3880  0527  3001               	movlw	1	; select bank2/3
  3881  0528  0087               	movwf	7
  3882  0529  0871               	movf	ringbuf_num@rb,w
  3883  052A  3E03               	addlw	3
  3884  052B  0084               	movwf	4
  3885  052C  3001               	movlw	1	; select bank2/3
  3886  052D  0085               	movwf	5
  3887  052E  0300               	decf	0,w
  3888  052F  3AFF               	xorlw	255
  3889  0530  0701               	addwf	1,w
  3890                           
  3891                           ;My_header_16F.h: 140: } else {
  3892  0531  0008               	return
  3893  0532                     i1l1436:	
  3894                           
  3895                           ;My_header_16F.h: 141: return (rb->size + rb->head - rb->tail);
  3896  0532  0871               	movf	ringbuf_num@rb,w
  3897  0533  3E02               	addlw	2
  3898  0534  0086               	movwf	6
  3899  0535  3001               	movlw	1	; select bank2/3
  3900  0536  0087               	movwf	7
  3901  0537  0A71               	incf	ringbuf_num@rb,w
  3902  0538  0084               	movwf	4
  3903  0539  3001               	movlw	1	; select bank2/3
  3904  053A  0085               	movwf	5
  3905  053B  0800               	movf	0,w
  3906  053C  00F0               	movwf	??_ringbuf_num
  3907  053D  0871               	movf	ringbuf_num@rb,w
  3908  053E  3E03               	addlw	3
  3909  053F  0084               	movwf	4
  3910  0540  3001               	movlw	1	; select bank2/3
  3911  0541  0085               	movwf	5
  3912  0542  0300               	decf	0,w
  3913  0543  3AFF               	xorlw	255
  3914  0544  0770               	addwf	??_ringbuf_num,w
  3915  0545  0701               	addwf	1,w
  3916  0546  0008               	return
  3917  0547                     __end_of_ringbuf_num:	
  3918                           
  3919                           	psect	text27
  3920  027A                     __ptext27:	
  3921 ;; *************** function _button_timer_interrupt *****************
  3922 ;; Defined at:
  3923 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\include\My_header_16F.h"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  bt              1    wreg     PTR struct button
  3926 ;;		 -> sw_RA1(3), sw_RA0(3), 
  3927 ;;  sw_value        1    0[COMMON] unsigned char 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  bt              1    3[COMMON] PTR struct button
  3930 ;;		 -> sw_RA1(3), sw_RA0(3), 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;		None               void
  3933 ;; Registers used:
  3934 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3940 ;;      Params:         1       0       0       0       0       0
  3941 ;;      Locals:         1       0       0       0       0       0
  3942 ;;      Temps:          2       0       0       0       0       0
  3943 ;;      Totals:         4       0       0       0       0       0
  3944 ;;Total ram usage:        4 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_isr
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           
  3954                           ;psect for function _button_timer_interrupt
  3955  027A                     _button_timer_interrupt:	
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _button_timer_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3959                           ;button_timer_interrupt@bt stored from wreg
  3960  027A  00F3               	movwf	button_timer_interrupt@bt
  3961                           
  3962                           ;My_header_16F.h: 88: if (sw_value) {
  3963  027B  0870               	movf	button_timer_interrupt@sw_value,w
  3964  027C  1903               	btfsc	3,2
  3965  027D  2ADF               	goto	i1l1518
  3966                           
  3967                           ;My_header_16F.h: 89: if (bt->cnt_sw < 150 + 1) bt->cnt_sw++;
  3968  027E  0873               	movf	button_timer_interrupt@bt,w
  3969  027F  0086               	movwf	6
  3970  0280  3001               	movlw	1	; select bank2/3
  3971  0281  0087               	movwf	7
  3972  0282  3F40               	moviw [0]fsr1
  3973  0283  00F1               	movwf	??_button_timer_interrupt
  3974  0284  3F41               	moviw [1]fsr1
  3975  0285  00F2               	movwf	??_button_timer_interrupt+1
  3976  0286  3000               	movlw	0
  3977  0287  0272               	subwf	??_button_timer_interrupt+1,w
  3978  0288  3097               	movlw	151
  3979  0289  1903               	skipnz
  3980  028A  0271               	subwf	??_button_timer_interrupt,w
  3981  028B  1803               	skipnc
  3982  028C  2A96               	goto	i1l1508
  3983  028D  0873               	movf	button_timer_interrupt@bt,w
  3984  028E  0086               	movwf	6
  3985  028F  3001               	movlw	1	; select bank2/3
  3986  0290  0087               	movwf	7
  3987  0291  3001               	movlw	1
  3988  0292  0781               	addwf	1,f
  3989  0293  3141               	addfsr 1,1
  3990  0294  1803               	skipnc
  3991  0295  0A81               	incf	1,f
  3992  0296                     i1l1508:	
  3993                           
  3994                           ;My_header_16F.h: 90: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  3995  0296  0873               	movf	button_timer_interrupt@bt,w
  3996  0297  0086               	movwf	6
  3997  0298  3001               	movlw	1	; select bank2/3
  3998  0299  0087               	movwf	7
  3999  029A  3F40               	moviw [0]fsr1
  4000  029B  3A96               	xorlw	150
  4001  029C  1D03               	skipz
  4002  029D  2AA0               	goto	u89_25
  4003  029E  3F41               	moviw [1]fsr1
  4004  029F  3A00               	xorlw	0
  4005  02A0                     u89_25:	
  4006  02A0  1D03               	skipz
  4007  02A1  2AA8               	goto	i1l117
  4008  02A2  0873               	movf	button_timer_interrupt@bt,w
  4009  02A3  3E02               	addlw	2
  4010  02A4  0086               	movwf	6
  4011  02A5  3001               	movlw	1	; select bank2/3
  4012  02A6  0087               	movwf	7
  4013  02A7  1781               	bsf	1,7
  4014  02A8                     i1l117:	
  4015                           
  4016                           ;My_header_16F.h: 91: if (bt->cnt_sw == 75)bt->flag.long_holding_2 = 1;
  4017  02A8  0873               	movf	button_timer_interrupt@bt,w
  4018  02A9  0086               	movwf	6
  4019  02AA  3001               	movlw	1	; select bank2/3
  4020  02AB  0087               	movwf	7
  4021  02AC  3F40               	moviw [0]fsr1
  4022  02AD  3A4B               	xorlw	75
  4023  02AE  1D03               	skipz
  4024  02AF  2AB2               	goto	u90_25
  4025  02B0  3F41               	moviw [1]fsr1
  4026  02B1  3A00               	xorlw	0
  4027  02B2                     u90_25:	
  4028  02B2  1D03               	skipz
  4029  02B3  2ABA               	goto	i1l118
  4030  02B4  0873               	movf	button_timer_interrupt@bt,w
  4031  02B5  3E02               	addlw	2
  4032  02B6  0086               	movwf	6
  4033  02B7  3001               	movlw	1	; select bank2/3
  4034  02B8  0087               	movwf	7
  4035  02B9  1701               	bsf	1,6
  4036  02BA                     i1l118:	
  4037                           
  4038                           ;My_header_16F.h: 92: if (bt->cnt_sw == 30)bt->flag.long_holding_1 = 1;
  4039  02BA  0873               	movf	button_timer_interrupt@bt,w
  4040  02BB  0086               	movwf	6
  4041  02BC  3001               	movlw	1	; select bank2/3
  4042  02BD  0087               	movwf	7
  4043  02BE  3F40               	moviw [0]fsr1
  4044  02BF  3A1E               	xorlw	30
  4045  02C0  1D03               	skipz
  4046  02C1  2AC4               	goto	u91_25
  4047  02C2  3F41               	moviw [1]fsr1
  4048  02C3  3A00               	xorlw	0
  4049  02C4                     u91_25:	
  4050  02C4  1D03               	skipz
  4051  02C5  2ACC               	goto	i1l119
  4052  02C6  0873               	movf	button_timer_interrupt@bt,w
  4053  02C7  3E02               	addlw	2
  4054  02C8  0086               	movwf	6
  4055  02C9  3001               	movlw	1	; select bank2/3
  4056  02CA  0087               	movwf	7
  4057  02CB  1681               	bsf	1,5
  4058  02CC                     i1l119:	
  4059                           
  4060                           ;My_header_16F.h: 93: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  4061  02CC  0873               	movf	button_timer_interrupt@bt,w
  4062  02CD  0086               	movwf	6
  4063  02CE  3001               	movlw	1	; select bank2/3
  4064  02CF  0087               	movwf	7
  4065  02D0  3F40               	moviw [0]fsr1
  4066  02D1  3A02               	xorlw	2
  4067  02D2  1D03               	skipz
  4068  02D3  2AD6               	goto	u92_25
  4069  02D4  3F41               	moviw [1]fsr1
  4070  02D5  3A00               	xorlw	0
  4071  02D6                     u92_25:	
  4072  02D6  1D03               	skipz
  4073  02D7  0008               	return
  4074  02D8  0873               	movf	button_timer_interrupt@bt,w
  4075  02D9  3E02               	addlw	2
  4076  02DA  0086               	movwf	6
  4077  02DB  3001               	movlw	1	; select bank2/3
  4078  02DC  0087               	movwf	7
  4079  02DD  1601               	bsf	1,4
  4080                           
  4081                           ;My_header_16F.h: 94: } else {
  4082  02DE  0008               	return
  4083  02DF                     i1l1518:	
  4084                           
  4085                           ;My_header_16F.h: 95: if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  4086  02DF  0873               	movf	button_timer_interrupt@bt,w
  4087  02E0  0086               	movwf	6
  4088  02E1  3001               	movlw	1	; select bank2/3
  4089  02E2  0087               	movwf	7
  4090  02E3  3F40               	moviw [0]fsr1
  4091  02E4  00F1               	movwf	??_button_timer_interrupt
  4092  02E5  3F41               	moviw [1]fsr1
  4093  02E6  00F2               	movwf	??_button_timer_interrupt+1
  4094  02E7  3000               	movlw	0
  4095  02E8  0272               	subwf	??_button_timer_interrupt+1,w
  4096  02E9  3096               	movlw	150
  4097  02EA  1903               	skipnz
  4098  02EB  0271               	subwf	??_button_timer_interrupt,w
  4099  02EC  1C03               	skipc
  4100  02ED  2AF5               	goto	i1l1522
  4101  02EE  0873               	movf	button_timer_interrupt@bt,w
  4102  02EF  3E02               	addlw	2
  4103  02F0  0086               	movwf	6
  4104  02F1  3001               	movlw	1	; select bank2/3
  4105  02F2  0087               	movwf	7
  4106  02F3  1581               	bsf	1,3
  4107  02F4  2B36               	goto	i1l123
  4108  02F5                     i1l1522:	
  4109                           
  4110                           ;My_header_16F.h: 96: else if (bt->cnt_sw >= 75)bt->flag.long_hold_2 = 1;
  4111  02F5  0873               	movf	button_timer_interrupt@bt,w
  4112  02F6  0086               	movwf	6
  4113  02F7  3001               	movlw	1	; select bank2/3
  4114  02F8  0087               	movwf	7
  4115  02F9  3F40               	moviw [0]fsr1
  4116  02FA  00F1               	movwf	??_button_timer_interrupt
  4117  02FB  3F41               	moviw [1]fsr1
  4118  02FC  00F2               	movwf	??_button_timer_interrupt+1
  4119  02FD  3000               	movlw	0
  4120  02FE  0272               	subwf	??_button_timer_interrupt+1,w
  4121  02FF  304B               	movlw	75
  4122  0300  1903               	skipnz
  4123  0301  0271               	subwf	??_button_timer_interrupt,w
  4124  0302  1C03               	skipc
  4125  0303  2B0B               	goto	i1l1526
  4126  0304  0873               	movf	button_timer_interrupt@bt,w
  4127  0305  3E02               	addlw	2
  4128  0306  0086               	movwf	6
  4129  0307  3001               	movlw	1	; select bank2/3
  4130  0308  0087               	movwf	7
  4131  0309  1501               	bsf	1,2
  4132  030A  2B36               	goto	i1l123
  4133  030B                     i1l1526:	
  4134                           
  4135                           ;My_header_16F.h: 97: else if (bt->cnt_sw >= 30)bt->flag.long_hold_1 = 1;
  4136  030B  0873               	movf	button_timer_interrupt@bt,w
  4137  030C  0086               	movwf	6
  4138  030D  3001               	movlw	1	; select bank2/3
  4139  030E  0087               	movwf	7
  4140  030F  3F40               	moviw [0]fsr1
  4141  0310  00F1               	movwf	??_button_timer_interrupt
  4142  0311  3F41               	moviw [1]fsr1
  4143  0312  00F2               	movwf	??_button_timer_interrupt+1
  4144  0313  3000               	movlw	0
  4145  0314  0272               	subwf	??_button_timer_interrupt+1,w
  4146  0315  301E               	movlw	30
  4147  0316  1903               	skipnz
  4148  0317  0271               	subwf	??_button_timer_interrupt,w
  4149  0318  1C03               	skipc
  4150  0319  2B21               	goto	i1l1530
  4151  031A  0873               	movf	button_timer_interrupt@bt,w
  4152  031B  3E02               	addlw	2
  4153  031C  0086               	movwf	6
  4154  031D  3001               	movlw	1	; select bank2/3
  4155  031E  0087               	movwf	7
  4156  031F  1481               	bsf	1,1
  4157  0320  2B36               	goto	i1l123
  4158  0321                     i1l1530:	
  4159                           
  4160                           ;My_header_16F.h: 98: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  4161  0321  0873               	movf	button_timer_interrupt@bt,w
  4162  0322  0086               	movwf	6
  4163  0323  3001               	movlw	1	; select bank2/3
  4164  0324  0087               	movwf	7
  4165  0325  3F40               	moviw [0]fsr1
  4166  0326  00F1               	movwf	??_button_timer_interrupt
  4167  0327  3F41               	moviw [1]fsr1
  4168  0328  00F2               	movwf	??_button_timer_interrupt+1
  4169  0329  3000               	movlw	0
  4170  032A  0272               	subwf	??_button_timer_interrupt+1,w
  4171  032B  3002               	movlw	2
  4172  032C  1903               	skipnz
  4173  032D  0271               	subwf	??_button_timer_interrupt,w
  4174  032E  1C03               	skipc
  4175  032F  2B36               	goto	i1l123
  4176  0330  0873               	movf	button_timer_interrupt@bt,w
  4177  0331  3E02               	addlw	2
  4178  0332  0086               	movwf	6
  4179  0333  3001               	movlw	1	; select bank2/3
  4180  0334  0087               	movwf	7
  4181  0335  1401               	bsf	1,0
  4182  0336                     i1l123:	
  4183                           
  4184                           ;My_header_16F.h: 99: bt->cnt_sw = 0;
  4185  0336  0873               	movf	button_timer_interrupt@bt,w
  4186  0337  0086               	movwf	6
  4187  0338  3001               	movlw	1	; select bank2/3
  4188  0339  0087               	movwf	7
  4189  033A  3000               	movlw	0
  4190  033B  3FC0               	movwi [0]fsr1
  4191  033C  3FC1               	movwi [1]fsr1
  4192                           
  4193                           ;My_header_16F.h: 100: bt->flags &= 0x0F;
  4194  033D  300F               	movlw	15
  4195  033E  00F1               	movwf	??_button_timer_interrupt
  4196  033F  0873               	movf	button_timer_interrupt@bt,w
  4197  0340  3E02               	addlw	2
  4198  0341  0086               	movwf	6
  4199  0342  3001               	movlw	1	; select bank2/3
  4200  0343  0087               	movwf	7
  4201  0344  0871               	movf	??_button_timer_interrupt,w
  4202  0345  0581               	andwf	1,f
  4203  0346  0008               	return
  4204  0347                     __end_of_button_timer_interrupt:	
  4205  007E                     btemp	set	126	;btemp
  4206  007E                     pic14e$flags	set	126
  4207  007E                     wtemp	set	126
  4208  007E                     wtemp0	set	126
  4209  0080                     wtemp1	set	128
  4210  0082                     wtemp2	set	130
  4211  0084                     wtemp3	set	132
  4212  0086                     wtemp4	set	134
  4213  0088                     wtemp5	set	136
  4214  007F                     wtemp6	set	127
  4215  007E                     ttemp	set	126
  4216  007E                     ttemp0	set	126
  4217  0081                     ttemp1	set	129
  4218  0084                     ttemp2	set	132
  4219  0087                     ttemp3	set	135
  4220  007F                     ttemp4	set	127
  4221  007E                     ltemp	set	126
  4222  007E                     ltemp0	set	126
  4223  0082                     ltemp1	set	130
  4224  0086                     ltemp2	set	134
  4225  0080                     ltemp3	set	128


Data Sizes:
    Strings     30
    Constant    8
    Data        2
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     21      31
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[4]), STR_2(CODE[3]), STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf_589(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S612$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    tx_sends@asciicode	PTR unsigned char  size(1) Largest target is 40
		 -> main@buf_589(BANK0[40]), 

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 80
		 -> main@buf(BANK1[80]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 80
		 -> main@buf(BANK1[80]), 

    ringbuf_num@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK2[4]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 80
		 -> main@buf(BANK1[80]), 

    ringbuf_pop@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK2[4]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(1) Largest target is 80
		 -> main@buf(BANK1[80]), 

    ringbuf_push@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK2[4]), 

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 80
		 -> main@buf(BANK1[80]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 80
		 -> main@buf(BANK1[80]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(1) Largest target is 80
		 -> main@buf(BANK1[80]), 

    ringbuf_init@rb	PTR struct ringbuf size(1) Largest target is 5
		 -> tx_buf(BANK2[4]), 

    button_timer_interrupt@bt	PTR struct button size(1) Largest target is 3
		 -> sw_RA1(BANK2[3]), sw_RA0(BANK2[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_tx_send
    _tx_send->i1_ringbuf_push
    _interrupt_TXIF->_ringbuf_pop

Critical Paths under _main in BANK0

    _main->_sprintf
    _tx_sends->_ringbuf_push
    _sprintf->___lwdiv
    _TM_init->_I2C_Start
    _LCD_init->_LCD_Clear
    _LCD_Clear->_LCD_Command
    _LCD_Command->_I2C_Start
    _EEP_Write->_I2C_Start
    _EEP_Read->_I2C_rStart
    _I2C_rStart->_I2C_IdleCheck
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _I2C_Receive->_I2C_IdleCheck

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               149   149      0   10265
                                             32 BANK0     48    48      0
                                              0 BANK1     80    80      0
                                              0 BANK2     21    21      0
                           _Delay_ms
                           _EEP_Read
                          _EEP_Write
                           _I2C_init
                           _LCD_init
                            _TM_init
                          _UART_init
                       _ringbuf_init
                            _sprintf
                           _tx_sends
 ---------------------------------------------------------------------------------
 (1) _tx_sends                                             4     4      0     630
                                              4 BANK0      4     4      0
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (2) _ringbuf_push                                         4     3      1     432
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    14     10    1124
                                              8 BANK0     24    14     10
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     340
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         4     2      2     373
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TM_init                                              3     3      0    1067
                                              4 BANK0      3     3      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             3     3      0    2134
                                              9 BANK0      3     3      0
                          _LCD_Clear
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0    1067
                                              7 BANK0      2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0    1067
                                              4 BANK0      3     3      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEP_Write                                            5     3      2    1823
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _EEP_Read                                             5     4      1    2158
                                              6 BANK0      5     4      1
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
 ---------------------------------------------------------------------------------
 (2) _I2C_rStart                                           4     0      4     600
                                              2 BANK0      4     0      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0      22
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            2     1      1     956
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Send                                             1     1      0      44
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          3     3      0      67
                                              2 BANK0      3     3      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (3) _I2C_IdleCheck                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             6     4      2     135
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0    1403
                                              6 COMMON     2     2      0
             _button_timer_interrupt
                     _interrupt_TXIF
                            _tx_send
 ---------------------------------------------------------------------------------
 (7) _tx_send                                              2     2      0     202
                                              4 COMMON     2     2      0
                     i1_ringbuf_push
 ---------------------------------------------------------------------------------
 (8) i1_ringbuf_push                                       4     3      1     180
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _interrupt_TXIF                                       0     0      0     435
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (8) _ringbuf_pop                                          4     4      0     218
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (8) _ringbuf_num                                          2     2      0     217
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _button_timer_interrupt                               4     3      1     766
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _EEP_Read
     _I2C_Receive
       _I2C_IdleCheck
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _I2C_rStart
       _I2C_IdleCheck
   _EEP_Write
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_init
   _LCD_init
     _LCD_Clear
       _LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _TM_init
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _UART_init
   _ringbuf_init
   _sprintf
     ___lwdiv
   _tx_sends
     _ringbuf_push

 _isr (ROOT)
   _button_timer_interrupt
   _interrupt_TXIF
     _ringbuf_num
     _ringbuf_pop
   _tx_send
     i1_ringbuf_push

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      CB       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     50      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     15      1F      10       38.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      CB      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Feb 12 03:15:57 2015

         __end_ofi1_ringbuf_push 0578               __size_of_I2C_Start 001B                      __CFG_CP$OFF 0000  
                   ?_LCD_Command 0070           __end_of_interrupt_TXIF 0752                              l208 06A5  
                            l190 0732                              l262 0454                              l263 046F  
                            l159 066B                              l184 06FF                              l169 070B  
                            l249 0685                              l258 0642                              l199 0770  
                            _RA0 0060                              _RA1 0061                     __CFG_CPD$OFF 0000  
                            u805 0486                              u825 0490                              u835 049A  
                            u845 04A2                              _isr 0004              __size_of_I2C_rStart 0019  
           __size_of_I2C_Receive 0020                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@buf_589 0048                     __CFG_LVP$OFF 0000                             l1372 0787  
                           l1480 048F                             l1490 04AA                             l1570 064E  
                           l1660 0384                             l1486 04A1                             l1478 0483  
                           l1670 0395                             l1654 036F                             l1690 034D  
                           l1692 03F5                             l1678 03B4                             l1688 03B8  
                           l1858 00B0                             ?_isr 0070                             STR_1 0619  
                           STR_2 0623                             STR_3 061F                             STR_4 0608  
                           u1025 0711                             u1305 00CE                             u1315 00EF  
                           u1325 0101                             u1095 03AA                             u1407 014A  
                           u1335 0124                             u1417 0170                             u1345 0136  
                           u1507 06AB                             u1427 0186                             u1355 0159  
                           u1517 0648                             u1365 0238                             u1437 019D  
                           u1527 0475                             u1447 01B6                             u1295 00BC  
                           u1537 0717                             u1457 01CF                             u1467 068B  
                           u1387 00E2                             u1477 0401                             u1397 0115  
                           u1487 0427                             u1497 077F                             _RCIF 008D  
                           _SPEN 0CEF                             _TXIE 048C                             _TXIF 008C  
                           _WPUB 020D               __size_of_EEP_Write 0025                     __CFG_WRT$OFF 0000  
                           _main 005E         button_timer_interrupt@bt 0073               __size_of_LCD_Clear 000F  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
               __end_of_I2C_Send 0776                             btemp 007E                 __end_of_I2C_Stop 07B0  
                           ltemp 007E                 __end_of_I2C_init 079F                             start 0044  
                           ttemp 007E                             wtemp 007E                    __CFG_IESO$OFF 0000  
                __end_of_TM_init 068E                 __end_of_EEP_Read 047A           __size_of_I2C_IdleCheck 000F  
                ?i1_ringbuf_push 0070                            ??_isr 0076                    __CFG_PLLEN$ON 0000  
                ?_interrupt_TXIF 0070                 __end_of_LCD_init 043D                            ?_main 0070  
                          _ADRES 009B                            _BRG16 0CFB                    __CFG_WDTE$OFF 0000  
                          _T1CON 0018                            _LATB0 0868                  __end_of___lwdiv 04B1  
                          i1l123 0336                            i1l117 02A8                            i1l118 02BA  
                          i1l119 02CC                            i1l164 074F                            i1l278 003F  
                          _RCREG 0199                            _RCSTA 019D                            _TMR1H 0017  
                          _TMR1L 0016                            _PORTA 000C                            _PORTB 000D  
                          _TRISA 008C                            _TRISB 008D                            u90_25 02B2  
                          u91_25 02C4                            u92_25 02D6                            _TXREG 019A  
                          u89_25 02A0                            _TXSTA 019E                   __CFG_FCMEN$OFF 0000  
                          _ascii 0078               __size_of_UART_init 0013            ringbuf_push@asciicode 0020  
                          main@P 0134                            main@s 0126                            main@t 0122  
              __end_of_I2C_Start 0708                   __CFG_BOREN$OFF 0000                     LCD_Command@c 0025  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                  __end_of_sprintf 03FA  
                __end_of_tx_send 07AA                 __end_of_Delay_ms 0722                   __CFG_MCLRE$OFF 0000  
                __initialization 0046                     __end_of_main 027A              ringbuf_init@bufsize 0021  
              __end_of_EEP_Write 064B                           ??_main 0040                __end_of_LCD_Clear 0785  
                         _BCL1IF 0093                    _I2C_IdleCheck 0785                           _ANSELA 018C  
                         _ANSELB 018D                           i1l1424 0513                           i1l1530 0321  
                         i1l1522 02F5                           i1l1508 0296                           i1l1436 0532  
                         i1l1526 030B                           i1l1518 02DF                           i1l1808 0028  
                         i1l1798 0019                           _FVRCON 0117                           _OSCCON 0099  
                      ??_TM_init 0024                           _TMR1IF 0088                           _SPBRGH 019C  
                         _SPBRGL 019B                           _SSP1IF 008B                     ??_I2C_rStart 0026  
                 __CFG_PWRTE$OFF 0000                     ?_ringbuf_pop 0070                     ?_ringbuf_num 0070  
              __end_of_UART_init 0765                        ??___lwdiv 0024                           _cnt_t1 0079  
                         _sw_RA0 0139                           _sw_RA1 013C                           _tx_buf 0135  
           __size_of_LCD_Command 0020                     __pdataCOMMON 007A                        ?_I2C_Send 0070  
                      ?_I2C_Stop 0070                  UART_init@device 0020                        ?_I2C_init 0070  
             __end_of_I2C_rStart 073B                   ?_I2C_IdleCheck 0070                        ??_sprintf 0032  
                      ??_tx_send 0074                 __end_of_tx_sends 066E                        ?_EEP_Read 0026  
        __end_of__initialization 005A                        ?_LCD_init 0070                   __pcstackCOMMON 0070  
                 _OPTION_REGbits 0095                       ??_I2C_Send 0022                       ??_I2C_Stop 0022  
                     ??_I2C_init 0020                        ?_Delay_ms 0020                       ??_EEP_Read 0027  
                     __pbssBANK2 0135                       ??_LCD_init 0029                 ??i1_ringbuf_push 0071  
                     __pmaintext 005E                 ??_interrupt_TXIF 0074                       __pintentry 0004  
                  ??_I2C_Receive 0022                     I2C_Send@data 0022                  ??_I2C_IdleCheck 0020  
                     ??_Delay_ms 0022                          _SSP1ADD 0212                          _SSP1BUF 0211  
                  TM_init@config 0025         ??_button_timer_interrupt 0071                          _TM_init 066E  
                      _I2C_Start 06ED                   I2C_Receive@ack 0023                    ?_ringbuf_init 0020  
                  ?_ringbuf_push 0020                          ___lwdiv 047A             __size_of_ringbuf_pop 0032  
           __size_of_ringbuf_num 0032                  __CFG_STVREN$OFF 0000                        ?_tx_sends 0070  
                        __ptext1 064B                          __ptext2 04B1                          __ptext3 0347  
                        __ptext4 047A                          __ptext5 06CE                          __ptext6 0752  
                        __ptext7 066E                          __ptext8 03FA                          __ptext9 0776  
              __end_of_hexpowers 0608                        _T1CONbits 0018                     __size_of_isr 0040  
                      _EEP_Write 0626                        _LCD_Clear 0776              __end_of_I2C_Receive 06CE  
                        main@buf 00A0                          _sprintf 0347                          _tx_send 079F  
           end_of_initialization 005A                        Delay_ms@i 0024                   LCD_Command@ans 0026  
                     ?_I2C_Start 0022                     I2C_rStart@rw 0024                   ??_ringbuf_init 0022  
                 ??_ringbuf_push 0021                     __pstringtext 0600                       ??_tx_sends 0024  
                      _UART_init 0752                 __CFG_FOSC$INTOSC 0000                       ?_EEP_Write 0024  
                     ?_LCD_Clear 0070                __size_of_I2C_Send 0011                __size_of_I2C_Stop 0006  
              __size_of_I2C_init 000B                       main@data_0 0120                       main@data_1 0121  
                     main@data_2 0132                       main@data_3 0133  __size_of_button_timer_interrupt 00CD  
              __size_of_EEP_Read 003D                __size_of_LCD_init 0043                   ringbuf_init@rb 0023  
                 ringbuf_pop@ret 0072                    ??_LCD_Command 0024                   ringbuf_push@rb 0023  
                  __pidataCOMMON 07B0                       ?_UART_init 0070                      _I2C_Receive 06AE  
            start_initialization 0046                      __end_of_isr 0044                __size_of_Delay_ms 001A  
                    ??_I2C_Start 0023                      _APFCON0bits 011D                      _APFCON1bits 011E  
         _button_timer_interrupt 027A              __end_of_LCD_Command 06AE                      ??_EEP_Write 0026  
                    __pbssCOMMON 0078                        ___latbits 0001                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0                    __pcstackBANK2 0120                      ??_LCD_Clear 0027  
            __end_of__stringdata 0626             __end_of_ringbuf_init 06ED             __end_of_ringbuf_push 04E3  
               tx_send@asciicode 0075                         ?_TM_init 0070                      sprintf@_val 0039  
                    sprintf@flag 0036                      sprintf@prec 003D                 ___lwdiv@dividend 0022  
                       ?___lwdiv 0020                      ??_UART_init 0020                __size_of_tx_sends 0023  
                    I2C_Start@rw 0022                         _I2C_Send 0765                         _I2C_Stop 07AA  
                       _I2C_init 0794            __end_of_I2C_IdleCheck 0794                        _hexpowers 0600  
               ___lwdiv@quotient 0025                         ?_sprintf 0028                         ?_tx_send 0070  
                       _EEP_Read 043D         ringbuf_init@internal_buf 0020                         _LCD_init 03FA  
                       _PIE1bits 0091                    ??_ringbuf_pop 0070                    ??_ringbuf_num 0070  
                       _SSP1CON1 0215                         _SSP1CON2 0216                         _SSP1STAT 0214  
                    _LCD_Command 068E                       _ADCON0bits 009D          __size_ofi1_ringbuf_push 0031  
                     _ADCON1bits 009E                      __stringdata 0608   button_timer_interrupt@sw_value 0070  
        __size_of_interrupt_TXIF 0017                         _Delay_ms 0708                    ringbuf_pop@rb 0073  
                  ringbuf_num@rb 0071                    I2C_Start@adrs 0023               LCD_SetCursor@F3069 007A  
                I2C_Receive@data 0024                 __size_of_TM_init 0020                       _I2C_rStart 0722  
              I2C_IdleCheck@mask 0021                 __size_of___lwdiv 0037                     ?_I2C_Receive 0070  
              tx_sends@asciicode 0027              __end_of_ringbuf_pop 0515              __end_of_ringbuf_num 0547  
          __size_of_ringbuf_init 001F                       sprintf@idx 0037            __size_of_ringbuf_push 0032  
                ___lwdiv@divisor 0020                  ___lwdiv@counter 0027                         __ptext10 068E  
                       __ptext11 0794                         __ptext20 0708                         __ptext12 0626  
                       __ptext13 043D                         __ptext22 079F                         __ptext14 0722  
                       __ptext23 0547                         __ptext15 07AA                         __ptext24 073B  
                       __ptext16 06ED                         __ptext25 04E3                         __ptext17 0765  
                       __ptext26 0515                         __ptext18 06AE                         __ptext27 027A  
                       __ptext19 0785                     _SSP1CON2bits 0216                 i1ringbuf_push@rb 0073  
               __size_of_sprintf 00B3                 __size_of_tx_send 000B                    EEP_Read@Reg_h 0028  
                  EEP_Read@Reg_l 0026                   I2C_rStart@adrs 0022                    __size_of_main 021C  
        ?_button_timer_interrupt 0070                     _ringbuf_init 06CE                     _ringbuf_push 04B1  
                       _tx_sends 064B                       _INTCONbits 000B                       Delay_ms@ms 0020  
                    pic14e$flags 007E                         intlevel1 0000                        sprintf@ap 0038  
                      sprintf@sp 003E                        tx_sends@i 0026                       TM_init@ans 0026  
              __CFG_CLKOUTEN$OFF 0000                      ?_I2C_rStart 0022                     EEP_Read@data 0029  
 __end_of_button_timer_interrupt 0347                      _ringbuf_pop 04E3                      _ringbuf_num 0515  
                 i1_ringbuf_push 0547                       _OPTION_REG 0095                   _interrupt_TXIF 073B  
                       sprintf@c 003F                         sprintf@f 0028                      EEP_Read@ans 002A  
        i1ringbuf_push@asciicode 0070                   EEP_Write@Reg_h 0027                   EEP_Write@Reg_l 0024  
                  EEP_Write@data 0025                     EEP_Write@ans 0028  
